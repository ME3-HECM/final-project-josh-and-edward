

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
                                                                                               Sun Mar 12 20:46:59 2023
=======
                                                                                               Sun Mar 12 22:15:05 2023
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93   000000                     
    94                           ; Generated 06/04/2022 GMT
    95                           ; 
    96                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution. Publication is not required when
   110                           ;        this file is used in an embedded application.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
<<<<<<< Updated upstream
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F67K40 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128   000000                     
   129                           	psect	idataBANK0
   130   004E04                     __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _DataFlag
   134   004E04  01                 	db	1
   135                           
   136                           	psect	idataBANK1
   137   004DFC                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _RunOneBlockTime
   141   004DFC  07D0               	dw	2000
   142                           
   143                           ;initializer for _Turn45Delay
   144   004DFE  00DC               	dw	220
   145                           
   146                           ;initializer for _power
   147   004E00  001E               	dw	30
   148   000000                     _TRISEbits	set	3973
   149   000000                     _TX4REG	set	3812
   150   000000                     _RC4STAbits	set	3815
   151   000000                     _SP4BRGH	set	3814
   152   000000                     _SSP2CON2bits	set	3802
   153   000000                     _RX4PPS	set	3605
   154   000000                     _SSP2CLKPPS	set	3612
   155   000000                     _SSP2DATPPS	set	3613
   156   000000                     _ANSELDbits	set	3751
   157   000000                     _SSP2ADD	set	3798
   158   000000                     _SSP2CON1bits	set	3801
   159   000000                     _LATAbits	set	3961
   160   000000                     _LATFbits	set	3966
   161   000000                     _LATGbits	set	3967
   162   000000                     _TRISAbits	set	3969
   163   000000                     _TRISGbits	set	3975
   164   000000                     _PORTFbits	set	3982
   165   000000                     _INTCONbits	set	4082
   166   000000                     _CCPR2H	set	4006
   167   000000                     _CCPR1H	set	4010
   168   000000                     _TRISCbits	set	3971
   169   000000                     _TRISDbits	set	3972
   170   000000                     _TRISFbits	set	3974
   171   000000                     _LATDbits	set	3964
   172   000000                     _RC4REG	set	3811
   173   000000                     _SP4BRGL	set	3813
   174   000000                     _TX4STAbits	set	3816
   175   000000                     _BAUD4CONbits	set	3817
   176   000000                     _SSP2CON2	set	3802
   177   000000                     _SSP2STAT	set	3800
   178   000000                     _ANSELFbits	set	3764
   179   000000                     _SSP2BUF	set	3797
   180   000000                     _PIE0bits	set	3625
   181   000000                     _PIE2bits	set	3627
   182   000000                     _PIE4bits	set	3629
   183   000000                     _PIR4bits	set	3639
   184   000000                     _RC0PPS	set	3682
   185   000000                     _RD5PPS	set	3695
   186   000000                     _RE2PPS	set	3700
   187   000000                     _RD6PPS	set	3696
   188   000000                     _RC7PPS	set	3689
   189   000000                     _CCPR4H	set	3873
   190   000000                     _CCPR3H	set	3877
   191   000000                     _PIR0bits	set	3635
   192   000000                     _CCP1CONbits	set	4011
   193   000000                     _CCPTMRS0bits	set	4013
   194   000000                     _T2PR	set	4028
   195   000000                     _T2CONbits	set	4029
   196   000000                     _TMR0L	set	4051
   197   000000                     _TMR0H	set	4052
   198   000000                     _CCP2CONbits	set	4007
   199   000000                     _CCP3CONbits	set	3878
   200   000000                     _CCP4CONbits	set	3874
   201   000000                     _T0CON1bits	set	4054
   202   000000                     _T0CON0bits	set	4053
=======
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   00610C                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _RunOneBlockTime
   140   00610C  07D0               	dw	2000
   141                           
   142                           ;initializer for _Turn45Delay
   143   00610E  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   006110  001E               	dw	30
   147                           
   148                           ;initializer for _DataFlag
   149   006112  01                 	db	1
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TMR0H	set	4052
   152   000000                     _LATHbits	set	3968
   153   000000                     _TX4REG	set	3812
   154   000000                     _RC4STAbits	set	3815
   155   000000                     _SP4BRGH	set	3814
   156   000000                     _SSP2CON2bits	set	3802
   157   000000                     _RX4PPS	set	3605
   158   000000                     _SSP2CLKPPS	set	3612
   159   000000                     _SSP2DATPPS	set	3613
   160   000000                     _ANSELDbits	set	3751
   161   000000                     _SSP2ADD	set	3798
   162   000000                     _SSP2CON1bits	set	3801
   163   000000                     _LATAbits	set	3961
   164   000000                     _LATFbits	set	3966
   165   000000                     _LATGbits	set	3967
   166   000000                     _TRISAbits	set	3969
   167   000000                     _TRISGbits	set	3975
   168   000000                     _PORTFbits	set	3982
   169   000000                     _TRISHbits	set	3976
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE4bits	set	3629
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _T0CON1bits	set	4054
>>>>>>> Stashed changes
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
<<<<<<< Updated upstream
   213                           
   214                           ; BSR set to: 14
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  64                 	db	100	;'d'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  64                 	db	100	;'d'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  64                 	db	100	;'d'
   238   000E18  20                 	db	32
   239   000E19  74                 	db	116	;'t'
   240   000E1A  69                 	db	105	;'i'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  65                 	db	101	;'e'
   243   000E1D  72                 	db	114	;'r'
   244   000E1E  3D                 	db	61	;'='
   245   000E1F  25                 	db	37
   246   000E20  64                 	db	100	;'d'
   247   000E21  20                 	db	32
   248   000E22  0D                 	db	13
   249   000E23  0A                 	db	10
   250   000E24  00                 	db	0
   251   000E25  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   004376                     __pcinit:
   257                           	callstack 0
   258   004376                     start_initialization:
   259                           	callstack 0
   260   004376                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK1 (6 bytes)
   264                           ; load TBLPTR registers with __pidataBANK1
   265   004376  0EFC               	movlw	low __pidataBANK1
   266   004378  6EF6               	movwf	tblptrl,c
   267   00437A  0E4D               	movlw	high __pidataBANK1
   268   00437C  6EF7               	movwf	tblptrh,c
   269   00437E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   270   004380  6EF8               	movwf	tblptru,c
   271   004382  EE01  F0CD         	lfsr	0,__pdataBANK1
   272   004386  EE10 F006          	lfsr	1,6
   273   00438A                     copy_data0:
   274   00438A  0009               	tblrd		*+
   275   00438C  CFF5 FFEE          	movff	tablat,postinc0
   276   004390  50E5               	movf	postdec1,w,c
   277   004392  50E1               	movf	fsr1l,w,c
   278   004394  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to BANK0 (1 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   004396  0E04               	movlw	low __pidataBANK0
   283   004398  6EF6               	movwf	tblptrl,c
   284   00439A  0E4E               	movlw	high __pidataBANK0
   285   00439C  6EF7               	movwf	tblptrh,c
   286   00439E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   0043A0  6EF8               	movwf	tblptru,c
   288   0043A2  0009               	tblrd		*+	;fetch initializer
   289   0043A4  CFF5 F0FE          	movff	tablat,__pdataBANK0
   290                           
   291                           ; Clear objects allocated to BANK2 (100 bytes)
   292   0043A8  EE02  F000         	lfsr	0,__pbssBANK2
   293   0043AC  0E64               	movlw	100
   294   0043AE                     clear_0:
   295   0043AE  6AEE               	clrf	postinc0,c
   296   0043B0  06E8               	decf	wreg,f,c
   297   0043B2  E1FD               	bnz	clear_0
   298                           
   299                           ; Clear objects allocated to BANK1 (205 bytes)
   300   0043B4  EE01  F000         	lfsr	0,__pbssBANK1
   301   0043B8  0ECD               	movlw	205
   302   0043BA                     clear_1:
   303   0043BA  6AEE               	clrf	postinc0,c
   304   0043BC  06E8               	decf	wreg,f,c
   305   0043BE  E1FD               	bnz	clear_1
   306                           
   307                           ; Clear objects allocated to BANK0 (16 bytes)
   308   0043C0  EE00  F0EE         	lfsr	0,__pbssBANK0
   309   0043C4  0E10               	movlw	16
   310   0043C6                     clear_2:
   311   0043C6  6AEE               	clrf	postinc0,c
   312   0043C8  06E8               	decf	wreg,f,c
   313   0043CA  E1FD               	bnz	clear_2
   314                           
   315                           ; Clear objects allocated to COMRAM (4 bytes)
   316   0043CC  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   317   0043CE  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   318   0043D0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   319   0043D2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   320   0043D4                     end_of_initialization:
   321                           	callstack 0
   322   0043D4                     __end_of__initialization:
   323                           	callstack 0
   324   0043D4  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   325   0043D6  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   326   0043D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   327   0043DA  6EF8               	movwf	tblptru,c
   328   0043DC  0E0E               	movlw	high __Lsmallconst
   329   0043DE  6EF7               	movwf	tblptrh,c
   330   0043E0  0100               	movlb	0
   331   0043E2  EF81  F00C         	goto	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMRAM
   334   00005B                     __pbssCOMRAM:
   335                           	callstack 0
   336   00005B                     _TxBufReadCnt:
   337                           	callstack 0
   338   00005B                     	ds	1
   339   00005C                     _TxBufWriteCnt:
   340                           	callstack 0
   341   00005C                     	ds	1
   342   00005D                     _RxBufReadCnt:
   343                           	callstack 0
   344   00005D                     	ds	1
   345   00005E                     _RxBufWriteCnt:
   346                           	callstack 0
   347   00005E                     	ds	1
   348                           
   349                           	psect	bssBANK0
   350   0000EE                     __pbssBANK0:
   351                           	callstack 0
   352   0000EE                     _prec:
   353                           	callstack 0
   354   0000EE                     	ds	2
   355   0000F0                     _move_count:
   356                           	callstack 0
   357   0000F0                     	ds	2
   358   0000F2                     _lost_flag:
   359                           	callstack 0
   360   0000F2                     	ds	2
   361   0000F4                     _flags:
   362                           	callstack 0
   363   0000F4                     	ds	1
   364   0000F5                     _motorL:
   365                           	callstack 0
   366   0000F5                     	ds	9
   367                           
   368                           	psect	dataBANK0
   369   0000FE                     __pdataBANK0:
   370                           	callstack 0
   371   0000FE                     _DataFlag:
   372                           	callstack 0
   373   0000FE                     	ds	1
   374                           
   375                           	psect	bssBANK1
   376   000100                     __pbssBANK1:
   377                           	callstack 0
   378   000100                     _EUSART4TXbuf:
   379                           	callstack 0
   380   000100                     	ds	60
   381   00013C                     _EUSART4RXbuf:
   382                           	callstack 0
   383   00013C                     	ds	20
   384   000150                     	ds	12
   385   00015C                     _width:
   386                           	callstack 0
   387   00015C                     	ds	2
   388   00015E                     _WayBack:
   389                           	callstack 0
   390   00015E                     	ds	50
   391   000190                     _dbuf:
   392                           	callstack 0
   393   000190                     	ds	32
   394   0001B0                     _rel:
   395                           	callstack 0
   396   0001B0                     	ds	12
   397   0001BC                     _motorR:
   398                           	callstack 0
   399   0001BC                     	ds	9
   400   0001C5                     _vals:
   401                           	callstack 0
   402   0001C5                     	ds	8
   403                           
   404                           	psect	dataBANK1
   405   0001CD                     __pdataBANK1:
   406                           	callstack 0
   407   0001CD                     _RunOneBlockTime:
   408                           	callstack 0
   409   0001CD                     	ds	2
   410   0001CF                     _Turn45Delay:
   411                           	callstack 0
   412   0001CF                     	ds	2
   413   0001D1                     _power:
   414                           	callstack 0
   415   0001D1                     	ds	2
   416                           
   417                           	psect	bssBANK2
   418   000200                     __pbssBANK2:
   419                           	callstack 0
   420   000200                     _Time_forward:
   421                           	callstack 0
   422   000200                     	ds	100
   423                           
   424                           	psect	cstackBANK0
   425   000060                     __pcstackBANK0:
   426                           	callstack 0
   427   000060                     ?_sprintf:
   428                           	callstack 0
   429   000060                     sprintf@s:
   430                           	callstack 0
   431   000060                     _Colour_decider$2952:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x0
   435   000060                     	ds	2
   436   000062                     sprintf@fmt:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2
   440   000062                     	ds	2
   441   000064                     Colour_decider@Cmax_i:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445   000064                     	ds	2
   446   000066                     Colour_decider@RGB_col:
   447                           	callstack 0
   448                           
   449                           ; 12 bytes @ 0x6
   450   000066                     	ds	6
   451   00006C                     sprintf@ap:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xC
   455   00006C                     	ds	2
   456   00006E                     sprintf@f:
   457                           	callstack 0
   458                           
   459                           ; 11 bytes @ 0xE
   460   00006E                     	ds	4
   461   000072                     Colour_decider@Cmax:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x12
   465   000072                     	ds	4
   466   000076                     Colour_decider@Cmin:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x16
   470   000076                     	ds	4
   471   00007A                     Colour_decider@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1A
   475   00007A                     	ds	2
   476   00007C                     Colour_decider@Hue:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x1C
   480   00007C                     	ds	4
   481   000080                     main@buf:
   482                           	callstack 0
   483                           
   484                           ; 100 bytes @ 0x20
   485   000080                     	ds	100
   486   0000E4                     main@temp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x84
   490   0000E4                     	ds	2
   491   0000E6                     main@run_flag:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x86
   495   0000E6                     	ds	2
   496   0000E8                     main@consecuitive:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x88
   500   0000E8                     	ds	2
   501   0000EA                     main@colour:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x8A
   505   0000EA                     	ds	2
   506   0000EC                     main@prev_colour:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x8C
   510   0000EC                     	ds	2
   511                           
   512                           	psect	cstackCOMRAM
   513   000001                     __pcstackCOMRAM:
   514                           	callstack 0
   515   000001                     ??_I2C_2_Master_Idle:
   516   000001                     ?___wmul:
   517                           	callstack 0
   518   000001                     ?___fladd:
   519                           	callstack 0
   520   000001                     ?___xxtofl:
   521                           	callstack 0
   522   000001                     ?___aodiv:
   523                           	callstack 0
   524   000001                     ?___aomod:
   525                           	callstack 0
   526   000001                     sendCharSerial4@charToSend:
   527                           	callstack 0
   528   000001                     initDCmotorsPWM@PWMperiod:
   529                           	callstack 0
   530   000001                     getTMR0val@moving:
   531                           	callstack 0
   532   000001                     delayed_ms@time:
   533                           	callstack 0
   534   000001                     ___wmul@multiplier:
   535                           	callstack 0
   536   000001                     fputc@c:
   537                           	callstack 0
   538   000001                     ___flge@ff1:
   539                           	callstack 0
   540   000001                     ___fladd@b:
   541                           	callstack 0
   542   000001                     ___xxtofl@val:
   543                           	callstack 0
   544   000001                     ___aodiv@dividend:
   545                           	callstack 0
   546   000001                     ___aomod@dividend:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x0
   550   000001                     	ds	1
   551   000002                     ??_I2C_2_Master_Read:
   552   000002                     I2C_2_Master_Write@data_byte:
   553                           	callstack 0
   554   000002                     sendStringSerial4@string:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1
   558   000002                     	ds	1
   559   000003                     ??_delayed_ms:
   560   000003                     color_writetoaddr@value:
   561                           	callstack 0
   562   000003                     I2C_2_Master_Read@ack:
   563                           	callstack 0
   564   000003                     ___wmul@multiplicand:
   565                           	callstack 0
   566   000003                     fputc@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2
   570   000003                     	ds	1
   571   000004                     color_writetoaddr@address:
   572                           	callstack 0
   573   000004                     I2C_2_Master_Read@tmp:
   574                           	callstack 0
   575   000004                     delayed_ms@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x3
   579   000004                     	ds	1
   580   000005                     ??_fputc:
   581   000005                     ??_color_click_init:
   582   000005                     ??___xxtofl:
   583   000005                     ?_color_read_lum:
   584                           	callstack 0
   585   000005                     ?_color_read_Red:
   586                           	callstack 0
   587   000005                     ?_color_read_Green:
   588                           	callstack 0
   589   000005                     ?_color_read_Blue:
   590                           	callstack 0
   591   000005                     ___wmul@product:
   592                           	callstack 0
   593   000005                     ___flge@ff2:
   594                           	callstack 0
   595   000005                     ___fladd@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x4
   599   000005                     	ds	2
   600   000007                     ??_color_read_lum:
   601   000007                     ??_color_read_Red:
   602   000007                     ??_color_read_Green:
   603   000007                     ??_color_read_Blue:
   604   000007                     ?___lwdiv:
   605                           	callstack 0
   606   000007                     ___lwdiv@dividend:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x6
   610   000007                     	ds	2
   611   000009                     ??___fladd:
   612   000009                     ??___flge:
   613   000009                     ___xxtofl@sign:
   614                           	callstack 0
   615   000009                     ___lwdiv@divisor:
   616                           	callstack 0
   617   000009                     ___aodiv@divisor:
   618                           	callstack 0
   619   000009                     ___aomod@divisor:
   620                           	callstack 0
   621                           
   622                           ; 8 bytes @ 0x8
   623   000009                     	ds	1
   624   00000A                     ___xxtofl@exp:
   625                           	callstack 0
   626   00000A                     color_read_lum@tmp:
   627                           	callstack 0
   628   00000A                     color_read_Red@tmp:
   629                           	callstack 0
   630   00000A                     color_read_Green@tmp:
   631                           	callstack 0
   632   00000A                     color_read_Blue@tmp:
   633                           	callstack 0
   634   00000A                     fputs@s:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x9
   638   00000A                     	ds	1
   639   00000B                     ___lwdiv@quotient:
   640                           	callstack 0
   641   00000B                     ___xxtofl@arg:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xA
   645   00000B                     	ds	1
   646   00000C                     readColours@vals:
   647                           	callstack 0
   648   00000C                     fputs@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0xB
   652   00000C                     	ds	1
   653   00000D                     ___lwdiv@counter:
   654                           	callstack 0
   655   00000D                     ___fladd@signs:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xC
   659   00000D                     	ds	1
   660   00000E                     ___fladd@aexp:
   661                           	callstack 0
   662   00000E                     fputs@c:
   663                           	callstack 0
   664   00000E                     setMotorPWM@m:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0xD
   668   00000E                     	ds	1
   669   00000F                     ___fladd@bexp:
   670                           	callstack 0
   671   00000F                     fputs@i:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xE
   675   00000F                     	ds	1
   676   000010                     ??_setMotorPWM:
   677   000010                     ___fladd@grs:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0xF
   681   000010                     	ds	1
   682   000011                     ?___flsub:
   683                           	callstack 0
   684   000011                     ___aodiv@counter:
   685                           	callstack 0
   686   000011                     ___aomod@counter:
   687                           	callstack 0
   688   000011                     pad@fp:
   689                           	callstack 0
   690   000011                     ___flsub@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x10
   694   000011                     	ds	1
   695   000012                     setMotorPWM@posDuty:
   696                           	callstack 0
   697   000012                     ___aodiv@sign:
   698                           	callstack 0
   699   000012                     ___aomod@sign:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x11
   703   000012                     	ds	1
   704   000013                     ?_abs:
   705                           	callstack 0
   706   000013                     setMotorPWM@negDuty:
   707                           	callstack 0
   708   000013                     pad@buf:
   709                           	callstack 0
   710   000013                     abs@a:
   711                           	callstack 0
   712   000013                     ___aodiv@quotient:
   713                           	callstack 0
   714                           
   715                           ; 8 bytes @ 0x12
   716   000013                     	ds	1
   717   000014                     stop@mL:
   718                           	callstack 0
   719   000014                     turnLeft@mL:
   720                           	callstack 0
   721   000014                     turnRight@mL:
   722                           	callstack 0
   723   000014                     fullSpeedAhead@mL:
   724                           	callstack 0
   725   000014                     timed_forward@mL:
   726                           	callstack 0
   727   000014                     fullSpeedBack@mL:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x13
   731   000014                     	ds	1
   732   000015                     ??_abs:
   733   000015                     pad@p:
   734                           	callstack 0
   735   000015                     ___flsub@a:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x14
   739   000015                     	ds	1
   740   000016                     stop@mR:
   741                           	callstack 0
   742   000016                     turnLeft@mR:
   743                           	callstack 0
   744   000016                     turnRight@mR:
   745                           	callstack 0
   746   000016                     fullSpeedAhead@mR:
   747                           	callstack 0
   748   000016                     timed_forward@mR:
   749                           	callstack 0
   750   000016                     fullSpeedBack@mR:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x15
   754   000016                     	ds	1
   755   000017                     ??_pad:
   756                           
   757                           ; 1 bytes @ 0x16
   758   000017                     	ds	1
   759   000018                     ??_fullSpeedAhead:
   760   000018                     ??_stop:
   761   000018                     ??_turnLeft:
   762   000018                     ??_turnRight:
   763   000018                     ??_fullSpeedBack:
   764   000018                     timed_forward@time:
   765                           	callstack 0
   766   000018                     pad@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x17
   770   000018                     	ds	1
   771   000019                     ?___fldiv:
   772                           	callstack 0
   773   000019                     ___fleq@ff1:
   774                           	callstack 0
   775   000019                     ___fldiv@b:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x18
   779   000019                     	ds	1
   780   00001A                     ??_timed_forward:
   781   00001A                     turnRight45@mL:
   782                           	callstack 0
   783   00001A                     turnLeft45@mL:
   784                           	callstack 0
   785   00001A                     reverseDetect@mL:
   786                           	callstack 0
   787   00001A                     reverseOneBlock@mL:
   788                           	callstack 0
   789   00001A                     ForwardOneBlock@mL:
   790                           	callstack 0
   791   00001A                     Forwardhalfblock@mL:
   792                           	callstack 0
   793   00001A                     Backhalfblock@mL:
   794                           	callstack 0
   795   00001A                     pad@w:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x19
   799   00001A                     	ds	2
   800   00001C                     turnRight45@mR:
   801                           	callstack 0
   802   00001C                     turnLeft45@mR:
   803                           	callstack 0
   804   00001C                     reverseDetect@mR:
   805                           	callstack 0
   806   00001C                     reverseOneBlock@mR:
   807                           	callstack 0
   808   00001C                     ForwardOneBlock@mR:
   809                           	callstack 0
   810   00001C                     Forwardhalfblock@mR:
   811                           	callstack 0
   812   00001C                     Backhalfblock@mR:
   813                           	callstack 0
   814   00001C                     dtoa@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x1B
   818   00001C                     	ds	1
   819   00001D                     ___fleq@ff2:
   820                           	callstack 0
   821   00001D                     ___fldiv@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x1C
   825   00001D                     	ds	1
   826   00001E                     ??_Forwardhalfblock:
   827   00001E                     ??_turnRight45:
   828   00001E                     ??_turnLeft45:
   829   00001E                     ??_reverseDetect:
   830   00001E                     ??_reverseOneBlock:
   831   00001E                     ??_ForwardOneBlock:
   832   00001E                     ??_Backhalfblock:
   833   00001E                     dtoa@d:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0x1D
   837   00001E                     	ds	2
   838   000020                     RedMove@mL:
   839                           	callstack 0
   840   000020                     GreenMove@mL:
   841                           	callstack 0
   842   000020                     BlueMove@mL:
   843                           	callstack 0
   844   000020                     YellowMove@mL:
   845                           	callstack 0
   846   000020                     PinkMove@mL:
   847                           	callstack 0
   848   000020                     OrangeMove@mL:
   849                           	callstack 0
   850   000020                     LightBlueMove@mL:
   851                           	callstack 0
   852   000020                     RetryMove@mL:
   853                           	callstack 0
   854   000020                     ReverseYellow@mL:
   855                           	callstack 0
   856   000020                     ReversePink@mL:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x1F
   860   000020                     	ds	1
   861   000021                     ??___fldiv:
   862   000021                     ??___fleq:
   863                           
   864                           ; 1 bytes @ 0x20
   865   000021                     	ds	1
   866   000022                     RedMove@mR:
   867                           	callstack 0
   868   000022                     GreenMove@mR:
   869                           	callstack 0
   870   000022                     BlueMove@mR:
   871                           	callstack 0
   872   000022                     YellowMove@mR:
   873                           	callstack 0
   874   000022                     PinkMove@mR:
   875                           	callstack 0
   876   000022                     OrangeMove@mR:
   877                           	callstack 0
   878   000022                     LightBlueMove@mR:
   879                           	callstack 0
   880   000022                     RetryMove@mR:
   881                           	callstack 0
   882   000022                     ReverseYellow@mR:
   883                           	callstack 0
   884   000022                     ReversePink@mR:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x21
   888   000022                     	ds	2
   889   000024                     go_Home@WayBack:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x23
   893   000024                     	ds	1
   894   000025                     ___fldiv@rem:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x24
   898   000025                     	ds	1
   899   000026                     ??_dtoa:
   900   000026                     go_Home@Time_forward:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x25
   904   000026                     	ds	2
   905   000028                     ??_go_Home:
   906                           
   907                           ; 1 bytes @ 0x27
   908   000028                     	ds	1
   909   000029                     ___fldiv@sign:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x28
   913   000029                     	ds	1
   914   00002A                     ___fldiv@new_exp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x29
   918   00002A                     	ds	1
   919   00002B                     go_Home@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x2A
   923   00002B                     	ds	1
   924   00002C                     ___fldiv@grs:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x2B
   928   00002C                     	ds	2
   929   00002E                     _dtoa$2629:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2D
   933   00002E                     	ds	2
   934   000030                     ___fldiv@bexp:
   935                           	callstack 0
   936   000030                     dtoa@p:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2F
   940   000030                     	ds	1
   941   000031                     ___fldiv@aexp:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x30
   945   000031                     	ds	1
   946   000032                     ?___flmul:
   947                           	callstack 0
   948   000032                     colour_rel@vals:
   949                           	callstack 0
   950   000032                     dtoa@w:
   951                           	callstack 0
   952   000032                     ___flmul@b:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x31
   956   000032                     	ds	2
   957   000034                     colour_rel@rel:
   958                           	callstack 0
   959   000034                     dtoa@n:
   960                           	callstack 0
   961                           
   962                           ; 8 bytes @ 0x33
   963   000034                     	ds	2
   964   000036                     colour_rel@L:
   965                           	callstack 0
   966   000036                     ___flmul@a:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x35
   970   000036                     	ds	4
   971   00003A                     ??___flmul:
   972   00003A                     _colour_rel$2950:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x39
   976   00003A                     	ds	2
   977   00003C                     dtoa@i:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x3B
   981   00003C                     	ds	2
   982   00003E                     ___flmul@sign:
   983                           	callstack 0
   984   00003E                     dtoa@s:
   985                           	callstack 0
   986   00003E                     _colour_rel$2951:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x3D
   990   00003E                     	ds	1
   991   00003F                     vfpfcnvrt@fp:
   992                           	callstack 0
   993   00003F                     ___flmul@grs:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x3E
   997   00003F                     	ds	2
   998   000041                     vfpfcnvrt@fmt:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x40
  1002   000041                     	ds	1
  1003   000042                     colour_rel@R:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x41
  1007   000042                     	ds	1
  1008   000043                     ___flmul@aexp:
  1009                           	callstack 0
  1010   000043                     vfpfcnvrt@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x42
  1014   000043                     	ds	1
  1015   000044                     ___flmul@bexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x43
  1019   000044                     	ds	1
  1020   000045                     ??_vfpfcnvrt:
  1021   000045                     ___flmul@prod:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x44
  1025   000045                     	ds	1
  1026   000046                     colour_rel@G:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x45
  1030   000046                     	ds	1
  1031   000047                     vfpfcnvrt@convarg:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x46
  1035   000047                     	ds	2
  1036   000049                     ___flmul@temp:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x48
  1040   000049                     	ds	1
  1041   00004A                     colour_rel@B:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x49
  1045   00004A                     	ds	1
  1046   00004B                     ?_Colour_decider:
  1047                           	callstack 0
  1048   00004B                     Colour_decider@vals:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x4A
  1052   00004B                     	ds	2
  1053   00004D                     Colour_decider@rel:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x4C
  1057   00004D                     	ds	2
  1058   00004F                     ??_Colour_decider:
  1059   00004F                     vfpfcnvrt@cp:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x4E
  1063   00004F                     	ds	2
  1064   000051                     ?_vfprintf:
  1065                           	callstack 0
  1066   000051                     vfprintf@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x50
  1070   000051                     	ds	2
  1071   000053                     vfprintf@fmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x52
  1075   000053                     	ds	2
  1076   000055                     vfprintf@ap:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x54
  1080   000055                     	ds	2
  1081   000057                     vfprintf@cfmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x56
  1085   000057                     	ds	2
  1086   000059                     ??_main:
  1087                           
  1088                           ; 1 bytes @ 0x58
  1089   000059                     	ds	2
  1090                           
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  colour          2  138[BANK0 ] int 
  1101 ;;  temp            2  132[BANK0 ] int 
  1102 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1103 ;;  prev_colour     2  140[BANK0 ] int 
  1104 ;;  consecuitive    2  136[BANK0 ] int 
  1105 ;;  run_flag        2  134[BANK0 ] int 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1116 ;;      Locals:         0     110       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;      Totals:         2     110       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1119 ;;Total ram usage:      112 bytes
  1120 ;; Hardware stack levels required when called: 9
  1121 ;; This function calls:
  1122 ;;		_BlueMove
  1123 ;;		_Colour_decider
  1124 ;;		_Forwardhalfblock
  1125 ;;		_GreenMove
  1126 ;;		_I2C_2_Master_Init
  1127 ;;		_Interrupts_init
  1128 ;;		_LightBlueMove
  1129 ;;		_OrangeMove
  1130 ;;		_PinkMove
  1131 ;;		_RedMove
  1132 ;;		_RetryMove
  1133 ;;		_Timer0_init
  1134 ;;		_YellowMove
  1135 ;;		_color_click_init
  1136 ;;		_colour_rel
  1137 ;;		_fullSpeedAhead
  1138 ;;		_getTMR0val
  1139 ;;		_go_Home
  1140 ;;		_initDCmotorsPWM
  1141 ;;		_initUSART4
  1142 ;;		_readColours
  1143 ;;		_sendStringSerial4
  1144 ;;		_sprintf
  1145 ;;		_stop
  1146 ;; This function is called by:
  1147 ;;		Startup code after reset
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text0
  1152   001902                     __ptext0:
  1153                           	callstack 0
  1154   001902                     _main:
  1155                           	callstack 22
  1156   001902                     
  1157                           ;main.c: 31:     initUSART4();
  1158   001902  ECC7  F026         	call	_initUSART4	;wreg free
  1159   001906                     
  1160                           ;main.c: 32:     Interrupts_init();
  1161   001906  ECE2  F026         	call	_Interrupts_init	;wreg free
  1162   00190A                     
  1163                           ;main.c: 33:     color_click_init();
  1164   00190A  EC09  F024         	call	_color_click_init	;wreg free
  1165   00190E                     
  1166                           ;main.c: 34:     I2C_2_Master_Init();
  1167   00190E  EC43  F026         	call	_I2C_2_Master_Init	;wreg free
  1168   001912                     
  1169                           ;main.c: 35:     Timer0_init();
  1170   001912  ECB7  F026         	call	_Timer0_init	;wreg free
  1171   001916                     
  1172                           ;main.c: 36:     initDCmotorsPWM(200);
  1173   001916  0E00               	movlw	0
  1174   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1175   00191A  0EC8               	movlw	200
  1176   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1177   00191E  ECC1  F020         	call	_initDCmotorsPWM	;wreg free
  1178   001922                     
  1179                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1180   001922  9287               	bcf	135,1,c	;volatile
  1181   001924                     
  1182                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1183   001924  9881               	bcf	129,4,c	;volatile
  1184   001926                     
  1185                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1186   001926  9E86               	bcf	134,7,c	;volatile
  1187   001928                     
  1188                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1189   001928  8486               	bsf	134,2,c	;volatile
  1190   00192A                     
  1191                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1192   00192A  010E               	movlb	14	; () banked
  1193   00192C  95B4               	bcf	180,2,b	;volatile
  1194   00192E                     
  1195                           ; BSR set to: 14
  1196                           ;main.c: 43:     LATGbits.LATG1=1;
  1197   00192E  827F               	bsf	127,1,c	;volatile
  1198   001930                     
  1199                           ; BSR set to: 14
  1200                           ;main.c: 44:     LATAbits.LATA4=1;
  1201   001930  8879               	bsf	121,4,c	;volatile
  1202   001932                     
  1203                           ; BSR set to: 14
  1204                           ;main.c: 45:     LATFbits.LATF7=1;
  1205   001932  8E7E               	bsf	126,7,c	;volatile
  1206   001934                     
  1207                           ; BSR set to: 14
  1208                           ;main.c: 49:     motorL.power=0;
  1209   001934  0E00               	movlw	0
  1210   001936  0100               	movlb	0	; () banked
  1211   001938  6FF5               	movwf	_motorL& (0+255),b
  1212   00193A                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 50:     motorL.direction=1;
  1215   00193A  0E01               	movlw	1
  1216   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1217   00193E                     
  1218                           ; BSR set to: 0
  1219                           ;main.c: 51:     motorL.brakemode=1;
  1220   00193E  0E01               	movlw	1
  1221   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1222   001942                     
  1223                           ; BSR set to: 0
  1224                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1225   001942  0EAA               	movlw	170
  1226   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1227   001946  0E0F               	movlw	15
  1228   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1229   00194A                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1232   00194A  0EA6               	movlw	166
  1233   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1234   00194E  0E0F               	movlw	15
  1235   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1236   001952                     
  1237                           ; BSR set to: 0
  1238                           ;main.c: 54:     motorL.PWMperiod=200;
  1239   001952  0E00               	movlw	0
  1240   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1241   001956  0EC8               	movlw	200
  1242   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1243   00195A                     
  1244                           ; BSR set to: 0
  1245                           ;main.c: 55:     motorR.power=0;
  1246   00195A  0E00               	movlw	0
  1247   00195C  0101               	movlb	1	; () banked
  1248   00195E  6FBC               	movwf	_motorR& (0+255),b
  1249   001960                     
  1250                           ; BSR set to: 1
  1251                           ;main.c: 56:     motorR.direction=1;
  1252   001960  0E01               	movlw	1
  1253   001962  6FBD               	movwf	(_motorR+1)& (0+255),b
  1254   001964                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 57:     motorR.brakemode=1;
  1257   001964  0E01               	movlw	1
  1258   001966  6FBE               	movwf	(_motorR+2)& (0+255),b
  1259   001968                     
  1260                           ; BSR set to: 1
  1261                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1262   001968  0E25               	movlw	37
  1263   00196A  6FC1               	movwf	(_motorR+5)& (0+255),b
  1264   00196C  0E0F               	movlw	15
  1265   00196E  6FC2               	movwf	(_motorR+6)& (0+255),b
  1266   001970                     
  1267                           ; BSR set to: 1
  1268                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1269   001970  0E21               	movlw	33
  1270   001972  6FC3               	movwf	(_motorR+7)& (0+255),b
  1271   001974  0E0F               	movlw	15
  1272   001976  6FC4               	movwf	(_motorR+8)& (0+255),b
  1273   001978                     
  1274                           ; BSR set to: 1
  1275                           ;main.c: 60:     motorR.PWMperiod=200;
  1276   001978  0E00               	movlw	0
  1277   00197A  6FC0               	movwf	(_motorR+4)& (0+255),b
  1278   00197C  0EC8               	movlw	200
  1279   00197E  6FBF               	movwf	(_motorR+3)& (0+255),b
  1280   001980                     
  1281                           ; BSR set to: 1
  1282                           ;main.c: 61:     int consecuitive=0;
  1283   001980  0E00               	movlw	0
  1284   001982  0100               	movlb	0	; () banked
  1285   001984  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1286   001986  0E00               	movlw	0
  1287   001988  6FE8               	movwf	main@consecuitive& (0+255),b
  1288   00198A                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 62:     int prev_colour =0;
  1291   00198A  0E00               	movlw	0
  1292   00198C  6FED               	movwf	(main@prev_colour+1)& (0+255),b
  1293   00198E  0E00               	movlw	0
  1294   001990  6FEC               	movwf	main@prev_colour& (0+255),b
  1295   001992                     
  1296                           ; BSR set to: 0
  1297                           ;main.c: 63:     int run_flag=1;
  1298   001992  0E00               	movlw	0
  1299   001994  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1300   001996  0E01               	movlw	1
  1301   001998  6FE6               	movwf	main@run_flag& (0+255),b
  1302   00199A                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 64:     move_count=-1;
  1305   00199A  69F0               	setf	_move_count& (0+255),b	;volatile
  1306   00199C  69F1               	setf	(_move_count+1)& (0+255),b	;volatile
  1307   00199E                     l391:
  1308   00199E  B48E               	btfsc	142,2,c	;volatile
  1309   0019A0  EFD4  F00C         	goto	u4461
  1310   0019A4  EFD6  F00C         	goto	u4460
  1311   0019A8                     u4461:
  1312   0019A8  EFCF  F00C         	goto	l391
  1313   0019AC                     u4460:
  1314   0019AC                     
  1315                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1316   0019AC  0E52               	movlw	82
  1317   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1318   0019B0  0E2B               	movlw	43
  1319   0019B2  6E59               	movwf	??_main^0,c
  1320   0019B4  0E00               	movlw	0
  1321   0019B6                     u4747:
  1322   0019B6  2EE8               	decfsz	wreg,f,c
  1323   0019B8  D7FE               	bra	u4747
  1324   0019BA  2E59               	decfsz	??_main^0,f,c
  1325   0019BC  D7FC               	bra	u4747
  1326   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1327   0019C0  D7FA               	bra	u4747
  1328   0019C2  D000               	nop2	
  1329   0019C4                     
  1330                           ;main.c: 67:     TMR0H=0;
  1331   0019C4  0E00               	movlw	0
  1332   0019C6  6ED4               	movwf	212,c	;volatile
  1333   0019C8                     
  1334                           ;main.c: 68:     TMR0L=0;
  1335   0019C8  0E00               	movlw	0
  1336   0019CA  6ED3               	movwf	211,c	;volatile
  1337                           
  1338                           ;main.c: 69:     while (run_flag)
  1339   0019CC  EF16  F00F         	goto	l4862
  1340   0019D0                     l4724:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1344   0019D0  0EF5               	movlw	low _motorL
  1345   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1346   0019D4  0E00               	movlw	high _motorL
  1347   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1348   0019D8  0EBC               	movlw	low _motorR
  1349   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1350   0019DC  0E01               	movlw	high _motorR
  1351   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1352   0019E0  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  1353   0019E4                     
  1354                           ;main.c: 77:         readColours(&vals);
  1355   0019E4  0EC5               	movlw	low _vals
  1356   0019E6  6E0C               	movwf	readColours@vals^0,c
  1357   0019E8  0E01               	movlw	high _vals
  1358   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1359   0019EC  EC26  F022         	call	_readColours	;wreg free
  1360   0019F0                     
  1361                           ;main.c: 80:         colour_rel(&vals, &rel);
  1362   0019F0  0EC5               	movlw	low _vals
  1363   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1364   0019F4  0E01               	movlw	high _vals
  1365   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1366   0019F8  0EB0               	movlw	low _rel
  1367   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1368   0019FC  0E01               	movlw	high _rel
  1369   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1370   001A00  EC64  F015         	call	_colour_rel	;wreg free
  1371   001A04                     
  1372                           ;main.c: 83:         if (vals.L>=500){
  1373   001A04  0101               	movlb	1	; () banked
  1374   001A06  BFCC               	btfsc	(_vals+7)& (0+255),7,b
  1375   001A08  EF0F  F00D         	goto	u4471
  1376   001A0C  0EF4               	movlw	244
  1377   001A0E  5DCB               	subwf	(_vals+6)& (0+255),w,b
  1378   001A10  0E01               	movlw	1
  1379   001A12  59CC               	subwfb	(_vals+7)& (0+255),w,b
  1380   001A14  A0D8               	btfss	status,0,c
  1381   001A16  EF0F  F00D         	goto	u4471
  1382   001A1A  EF11  F00D         	goto	u4470
  1383   001A1E                     u4471:
  1384   001A1E  EFDC  F00E         	goto	l4846
  1385   001A22                     u4470:
  1386   001A22                     
  1387                           ; BSR set to: 1
  1388                           ;main.c: 84:             move_count++;
  1389   001A22  0100               	movlb	0	; () banked
  1390   001A24  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1391   001A26  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1392   001A28                     
  1393                           ; BSR set to: 0
  1394                           ;main.c: 85:             getTMR0val();
  1395   001A28  EC81  F026         	call	_getTMR0val	;wreg free
  1396   001A2C                     
  1397                           ;main.c: 87:             Forwardhalfblock(&motorL,&motorR);
  1398   001A2C  0EF5               	movlw	low _motorL
  1399   001A2E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1400   001A30  0E00               	movlw	high _motorL
  1401   001A32  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1402   001A34  0EBC               	movlw	low _motorR
  1403   001A36  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1404   001A38  0E01               	movlw	high _motorR
  1405   001A3A  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1406   001A3C  EC82  F022         	call	_Forwardhalfblock	;wreg free
  1407   001A40                     
  1408                           ;main.c: 89:             stop(&motorL, &motorR);
  1409   001A40  0EF5               	movlw	low _motorL
  1410   001A42  6E14               	movwf	stop@mL^0,c
  1411   001A44  0E00               	movlw	high _motorL
  1412   001A46  6E15               	movwf	(stop@mL+1)^0,c
  1413   001A48  0EBC               	movlw	low _motorR
  1414   001A4A  6E16               	movwf	stop@mR^0,c
  1415   001A4C  0E01               	movlw	high _motorR
  1416   001A4E  6E17               	movwf	(stop@mR+1)^0,c
  1417   001A50  EC05  F021         	call	_stop	;wreg free
  1418   001A54                     
  1419                           ;main.c: 90:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1420   001A54  0E11               	movlw	17
  1421   001A56  6E5A               	movwf	(??_main+1)^0,c
  1422   001A58  0E3C               	movlw	60
  1423   001A5A  6E59               	movwf	??_main^0,c
  1424   001A5C  0ECB               	movlw	203
  1425   001A5E                     u4757:
  1426   001A5E  2EE8               	decfsz	wreg,f,c
  1427   001A60  D7FE               	bra	u4757
  1428   001A62  2E59               	decfsz	??_main^0,f,c
  1429   001A64  D7FC               	bra	u4757
  1430   001A66  2E5A               	decfsz	(??_main+1)^0,f,c
  1431   001A68  D7FA               	bra	u4757
  1432   001A6A  F000               	nop	
  1433                           
  1434                           ;main.c: 97:             while (consecuitive<20){
  1435   001A6C  EF6B  F00D         	goto	l4754
  1436   001A70                     l4742:
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;main.c: 98:                 int colour = Colour_decider(&vals, &rel);
  1440   001A70  0EC5               	movlw	low _vals
  1441   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1442   001A74  0E01               	movlw	high _vals
  1443   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1444   001A78  0EB0               	movlw	low _rel
  1445   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1446   001A7C  0E01               	movlw	high _rel
  1447   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1448   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1449   001A84  C04B  F0EA         	movff	?_Colour_decider,main@colour
  1450   001A88  C04C  F0EB         	movff	?_Colour_decider+1,main@colour+1
  1451   001A8C                     
  1452                           ;main.c: 99:                 if (colour==prev_colour){
  1453   001A8C  0100               	movlb	0	; () banked
  1454   001A8E  51EC               	movf	main@prev_colour& (0+255),w,b
  1455   001A90  19EA               	xorwf	main@colour& (0+255),w,b
  1456   001A92  E107               	bnz	u4481
  1457   001A94  51ED               	movf	(main@prev_colour+1)& (0+255),w,b
  1458   001A96  19EB               	xorwf	(main@colour+1)& (0+255),w,b
  1459   001A98  A4D8               	btfss	status,2,c
  1460   001A9A  EF51  F00D         	goto	u4481
  1461   001A9E  EF53  F00D         	goto	u4480
  1462   001AA2                     u4481:
  1463   001AA2  EF57  F00D         	goto	l4748
  1464   001AA6                     u4480:
  1465   001AA6                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 100:                     consecuitive++;
  1468   001AA6  4BE8               	infsnz	main@consecuitive& (0+255),f,b
  1469   001AA8  2BE9               	incf	(main@consecuitive+1)& (0+255),f,b
  1470                           
  1471                           ;main.c: 101:                 }
  1472   001AAA  EF5B  F00D         	goto	l4750
  1473   001AAE                     l4748:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;main.c: 103:                     consecuitive=0;
  1477   001AAE  0E00               	movlw	0
  1478   001AB0  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1479   001AB2  0E00               	movlw	0
  1480   001AB4  6FE8               	movwf	main@consecuitive& (0+255),b
  1481   001AB6                     l4750:
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;main.c: 105:                 prev_colour=colour;
  1485   001AB6  C0EA  F0EC         	movff	main@colour,main@prev_colour
  1486   001ABA  C0EB  F0ED         	movff	main@colour+1,main@prev_colour+1
  1487   001ABE                     
  1488                           ; BSR set to: 0
  1489                           ;main.c: 106:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1490   001ABE  0E05               	movlw	5
  1491   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1492   001AC2  0E0F               	movlw	15
  1493   001AC4  6E59               	movwf	??_main^0,c
  1494   001AC6  0EF1               	movlw	241
  1495   001AC8                     u4767:
  1496   001AC8  2EE8               	decfsz	wreg,f,c
  1497   001ACA  D7FE               	bra	u4767
  1498   001ACC  2E59               	decfsz	??_main^0,f,c
  1499   001ACE  D7FC               	bra	u4767
  1500   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1501   001AD2  D7FA               	bra	u4767
  1502   001AD4  F000               	nop	
  1503   001AD6                     l4754:
  1504                           
  1505                           ;main.c: 97:             while (consecuitive<20){
  1506   001AD6  0100               	movlb	0	; () banked
  1507   001AD8  BFE9               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1508   001ADA  EF78  F00D         	goto	u4491
  1509   001ADE  51E9               	movf	(main@consecuitive+1)& (0+255),w,b
  1510   001AE0  E109               	bnz	u4490
  1511   001AE2  0E14               	movlw	20
  1512   001AE4  5DE8               	subwf	main@consecuitive& (0+255),w,b
  1513   001AE6  A0D8               	btfss	status,0,c
  1514   001AE8  EF78  F00D         	goto	u4491
  1515   001AEC  EF7A  F00D         	goto	u4490
  1516   001AF0                     u4491:
  1517   001AF0  EF38  F00D         	goto	l4742
  1518   001AF4                     u4490:
  1519   001AF4                     
  1520                           ; BSR set to: 0
  1521                           ;main.c: 108:             consecuitive=0;
  1522   001AF4  0E00               	movlw	0
  1523   001AF6  6FE9               	movwf	(main@consecuitive+1)& (0+255),b
  1524   001AF8  0E00               	movlw	0
  1525   001AFA  6FE8               	movwf	main@consecuitive& (0+255),b
  1526   001AFC                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 109:             int temp=TMR0L;
  1529   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1530   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1531   001B02                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 110:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1534   001B02  0E80               	movlw	low main@buf
  1535   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1536   001B06  0E00               	movlw	high main@buf
  1537   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1538   001B0A  0E01               	movlw	low STR_1
  1539   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1540   001B0E  0E0E               	movlw	high STR_1
  1541   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1542   001B12  C1C5  F064         	movff	_vals,?_sprintf+4
  1543   001B16  C1C6  F065         	movff	_vals+1,?_sprintf+5
  1544   001B1A  C1C7  F066         	movff	_vals+2,?_sprintf+6
  1545   001B1E  C1C8  F067         	movff	_vals+3,?_sprintf+7
  1546   001B22  C1C9  F068         	movff	_vals+4,?_sprintf+8
  1547   001B26  C1CA  F069         	movff	_vals+5,?_sprintf+9
  1548   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1549   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1550   001B30  EC8E  F023         	call	_sprintf	;wreg free
  1551   001B34                     
  1552                           ;main.c: 113:             sendStringSerial4(buf);
  1553   001B34  0E80               	movlw	low main@buf
  1554   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1555   001B38  0E00               	movlw	high main@buf
  1556   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1557   001B3C  EC2B  F026         	call	_sendStringSerial4	;wreg free
  1558   001B40                     
  1559                           ;main.c: 115:             if (prev_colour==1){
  1560   001B40  0100               	movlb	0	; () banked
  1561   001B42  05EC               	decf	main@prev_colour& (0+255),w,b
  1562   001B44  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1563   001B46  A4D8               	btfss	status,2,c
  1564   001B48  EFA8  F00D         	goto	u4501
  1565   001B4C  EFAA  F00D         	goto	u4500
  1566   001B50                     u4501:
  1567   001B50  EFC3  F00D         	goto	l4774
  1568   001B54                     u4500:
  1569   001B54                     
  1570                           ; BSR set to: 0
  1571                           ;main.c: 116:                 RedMove(&motorL, &motorR);
  1572   001B54  0EF5               	movlw	low _motorL
  1573   001B56  6E20               	movwf	RedMove@mL^0,c
  1574   001B58  0E00               	movlw	high _motorL
  1575   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1576   001B5C  0EBC               	movlw	low _motorR
  1577   001B5E  6E22               	movwf	RedMove@mR^0,c
  1578   001B60  0E01               	movlw	high _motorR
  1579   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1580   001B64  ECD1  F025         	call	_RedMove	;wreg free
  1581   001B68                     
  1582                           ;main.c: 117:                 TMR0H=0;
  1583   001B68  0E00               	movlw	0
  1584   001B6A  6ED4               	movwf	212,c	;volatile
  1585   001B6C                     
  1586                           ;main.c: 118:                 TMR0L=0;
  1587   001B6C  0E00               	movlw	0
  1588   001B6E  6ED3               	movwf	211,c	;volatile
  1589   001B70                     
  1590                           ;main.c: 119:                 WayBack[move_count]=1;
  1591   001B70  0E5E               	movlw	low _WayBack
  1592   001B72  0100               	movlb	0	; () banked
  1593   001B74  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1594   001B76  6ED9               	movwf	fsr2l,c
  1595   001B78  0E01               	movlw	high _WayBack
  1596   001B7A  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1597   001B7C  6EDA               	movwf	fsr2h,c
  1598   001B7E  0E01               	movlw	1
  1599   001B80  6EDF               	movwf	indf2,c
  1600                           
  1601                           ;main.c: 120:             }
  1602   001B82  EF16  F00F         	goto	l4862
  1603   001B86                     l4774:
  1604                           
  1605                           ; BSR set to: 0
  1606   001B86  0E02               	movlw	2
  1607   001B88  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1608   001B8A  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1609   001B8C  A4D8               	btfss	status,2,c
  1610   001B8E  EFCB  F00D         	goto	u4511
  1611   001B92  EFCD  F00D         	goto	u4510
  1612   001B96                     u4511:
  1613   001B96  EFE6  F00D         	goto	l4784
  1614   001B9A                     u4510:
  1615   001B9A                     
  1616                           ; BSR set to: 0
  1617                           ;main.c: 122:                 OrangeMove(&motorL, &motorR);
  1618   001B9A  0EF5               	movlw	low _motorL
  1619   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1620   001B9E  0E00               	movlw	high _motorL
  1621   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1622   001BA2  0EBC               	movlw	low _motorR
  1623   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1624   001BA6  0E01               	movlw	high _motorR
  1625   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1626   001BAA  ECB7  F023         	call	_OrangeMove	;wreg free
  1627   001BAE                     
  1628                           ;main.c: 123:                 TMR0H=0;
  1629   001BAE  0E00               	movlw	0
  1630   001BB0  6ED4               	movwf	212,c	;volatile
  1631   001BB2                     
  1632                           ;main.c: 124:                 TMR0L=0;
  1633   001BB2  0E00               	movlw	0
  1634   001BB4  6ED3               	movwf	211,c	;volatile
  1635   001BB6                     
  1636                           ;main.c: 125:                 WayBack[move_count]=2;
  1637   001BB6  0E5E               	movlw	low _WayBack
  1638   001BB8  0100               	movlb	0	; () banked
  1639   001BBA  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1640   001BBC  6ED9               	movwf	fsr2l,c
  1641   001BBE  0E01               	movlw	high _WayBack
  1642   001BC0  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1643   001BC2  6EDA               	movwf	fsr2h,c
  1644   001BC4  0E02               	movlw	2
  1645   001BC6  6EDF               	movwf	indf2,c
  1646                           
  1647                           ;main.c: 126:             }
  1648   001BC8  EF16  F00F         	goto	l4862
  1649   001BCC                     l4784:
  1650                           
  1651                           ; BSR set to: 0
  1652   001BCC  0E03               	movlw	3
  1653   001BCE  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1654   001BD0  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1655   001BD2  A4D8               	btfss	status,2,c
  1656   001BD4  EFEE  F00D         	goto	u4521
  1657   001BD8  EFF0  F00D         	goto	u4520
  1658   001BDC                     u4521:
  1659   001BDC  EF09  F00E         	goto	l4794
  1660   001BE0                     u4520:
  1661   001BE0                     
  1662                           ; BSR set to: 0
  1663                           ;main.c: 128:                 YellowMove(&motorL, &motorR);
  1664   001BE0  0EF5               	movlw	low _motorL
  1665   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1666   001BE4  0E00               	movlw	high _motorL
  1667   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1668   001BE8  0EBC               	movlw	low _motorR
  1669   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1670   001BEC  0E01               	movlw	high _motorR
  1671   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1672   001BF0  EC32  F024         	call	_YellowMove	;wreg free
  1673   001BF4                     
  1674                           ;main.c: 129:                 TMR0H=0;
  1675   001BF4  0E00               	movlw	0
  1676   001BF6  6ED4               	movwf	212,c	;volatile
  1677   001BF8                     
  1678                           ;main.c: 130:                 TMR0L=0;
  1679   001BF8  0E00               	movlw	0
  1680   001BFA  6ED3               	movwf	211,c	;volatile
  1681   001BFC                     
  1682                           ;main.c: 131:                 WayBack[move_count]=3;
  1683   001BFC  0E5E               	movlw	low _WayBack
  1684   001BFE  0100               	movlb	0	; () banked
  1685   001C00  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1686   001C02  6ED9               	movwf	fsr2l,c
  1687   001C04  0E01               	movlw	high _WayBack
  1688   001C06  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1689   001C08  6EDA               	movwf	fsr2h,c
  1690   001C0A  0E03               	movlw	3
  1691   001C0C  6EDF               	movwf	indf2,c
  1692                           
  1693                           ;main.c: 132:             }
  1694   001C0E  EF16  F00F         	goto	l4862
  1695   001C12                     l4794:
  1696                           
  1697                           ; BSR set to: 0
  1698   001C12  0E04               	movlw	4
  1699   001C14  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1700   001C16  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1701   001C18  A4D8               	btfss	status,2,c
  1702   001C1A  EF11  F00E         	goto	u4531
  1703   001C1E  EF13  F00E         	goto	u4530
  1704   001C22                     u4531:
  1705   001C22  EF2C  F00E         	goto	l4804
  1706   001C26                     u4530:
  1707   001C26                     
  1708                           ; BSR set to: 0
  1709                           ;main.c: 134:                 BlueMove(&motorL, &motorR);
  1710   001C26  0EF5               	movlw	low _motorL
  1711   001C28  6E20               	movwf	BlueMove@mL^0,c
  1712   001C2A  0E00               	movlw	high _motorL
  1713   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1714   001C2E  0EBC               	movlw	low _motorR
  1715   001C30  6E22               	movwf	BlueMove@mR^0,c
  1716   001C32  0E01               	movlw	high _motorR
  1717   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1718   001C36  ECF3  F021         	call	_BlueMove	;wreg free
  1719   001C3A                     
  1720                           ;main.c: 135:                 TMR0H=0;
  1721   001C3A  0E00               	movlw	0
  1722   001C3C  6ED4               	movwf	212,c	;volatile
  1723   001C3E                     
  1724                           ;main.c: 136:                 TMR0L=0;
  1725   001C3E  0E00               	movlw	0
  1726   001C40  6ED3               	movwf	211,c	;volatile
  1727   001C42                     
  1728                           ;main.c: 137:                 WayBack[move_count]=4;
  1729   001C42  0E5E               	movlw	low _WayBack
  1730   001C44  0100               	movlb	0	; () banked
  1731   001C46  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1732   001C48  6ED9               	movwf	fsr2l,c
  1733   001C4A  0E01               	movlw	high _WayBack
  1734   001C4C  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1735   001C4E  6EDA               	movwf	fsr2h,c
  1736   001C50  0E04               	movlw	4
  1737   001C52  6EDF               	movwf	indf2,c
  1738                           
  1739                           ;main.c: 138:             }
  1740   001C54  EF16  F00F         	goto	l4862
  1741   001C58                     l4804:
  1742                           
  1743                           ; BSR set to: 0
  1744   001C58  0E05               	movlw	5
  1745   001C5A  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1746   001C5C  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1747   001C5E  A4D8               	btfss	status,2,c
  1748   001C60  EF34  F00E         	goto	u4541
  1749   001C64  EF36  F00E         	goto	u4540
  1750   001C68                     u4541:
  1751   001C68  EF4F  F00E         	goto	l4814
  1752   001C6C                     u4540:
  1753   001C6C                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 140:                 GreenMove(&motorL, &motorR);
  1756   001C6C  0EF5               	movlw	low _motorL
  1757   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1758   001C70  0E00               	movlw	high _motorL
  1759   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1760   001C74  0EBC               	movlw	low _motorR
  1761   001C76  6E22               	movwf	GreenMove@mR^0,c
  1762   001C78  0E01               	movlw	high _motorR
  1763   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1764   001C7C  ECF0  F025         	call	_GreenMove	;wreg free
  1765   001C80                     
  1766                           ;main.c: 141:                 TMR0H=0;
  1767   001C80  0E00               	movlw	0
  1768   001C82  6ED4               	movwf	212,c	;volatile
  1769   001C84                     
  1770                           ;main.c: 142:                 TMR0L=0;
  1771   001C84  0E00               	movlw	0
  1772   001C86  6ED3               	movwf	211,c	;volatile
  1773   001C88                     
  1774                           ;main.c: 143:                 WayBack[move_count]=5;
  1775   001C88  0E5E               	movlw	low _WayBack
  1776   001C8A  0100               	movlb	0	; () banked
  1777   001C8C  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1778   001C8E  6ED9               	movwf	fsr2l,c
  1779   001C90  0E01               	movlw	high _WayBack
  1780   001C92  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1781   001C94  6EDA               	movwf	fsr2h,c
  1782   001C96  0E05               	movlw	5
  1783   001C98  6EDF               	movwf	indf2,c
  1784                           
  1785                           ;main.c: 144:             }
  1786   001C9A  EF16  F00F         	goto	l4862
  1787   001C9E                     l4814:
  1788                           
  1789                           ; BSR set to: 0
  1790   001C9E  0E06               	movlw	6
  1791   001CA0  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1792   001CA2  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1793   001CA4  A4D8               	btfss	status,2,c
  1794   001CA6  EF57  F00E         	goto	u4551
  1795   001CAA  EF59  F00E         	goto	u4550
  1796   001CAE                     u4551:
  1797   001CAE  EF72  F00E         	goto	l4824
  1798   001CB2                     u4550:
  1799   001CB2                     
  1800                           ; BSR set to: 0
  1801                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1802   001CB2  0EF5               	movlw	low _motorL
  1803   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1804   001CB6  0E00               	movlw	high _motorL
  1805   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1806   001CBA  0EBC               	movlw	low _motorR
  1807   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1808   001CBE  0E01               	movlw	high _motorR
  1809   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1810   001CC2  ECE0  F023         	call	_LightBlueMove	;wreg free
  1811   001CC6                     
  1812                           ;main.c: 147:                 TMR0H=0;
  1813   001CC6  0E00               	movlw	0
  1814   001CC8  6ED4               	movwf	212,c	;volatile
  1815   001CCA                     
  1816                           ;main.c: 148:                 TMR0L=0;
  1817   001CCA  0E00               	movlw	0
  1818   001CCC  6ED3               	movwf	211,c	;volatile
  1819   001CCE                     
  1820                           ;main.c: 149:                 WayBack[move_count]=6;
  1821   001CCE  0E5E               	movlw	low _WayBack
  1822   001CD0  0100               	movlb	0	; () banked
  1823   001CD2  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1824   001CD4  6ED9               	movwf	fsr2l,c
  1825   001CD6  0E01               	movlw	high _WayBack
  1826   001CD8  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1827   001CDA  6EDA               	movwf	fsr2h,c
  1828   001CDC  0E06               	movlw	6
  1829   001CDE  6EDF               	movwf	indf2,c
  1830                           
  1831                           ;main.c: 150:             }
  1832   001CE0  EF16  F00F         	goto	l4862
  1833   001CE4                     l4824:
  1834                           
  1835                           ; BSR set to: 0
  1836   001CE4  0E07               	movlw	7
  1837   001CE6  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1838   001CE8  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1839   001CEA  A4D8               	btfss	status,2,c
  1840   001CEC  EF7A  F00E         	goto	u4561
  1841   001CF0  EF7C  F00E         	goto	u4560
  1842   001CF4                     u4561:
  1843   001CF4  EF95  F00E         	goto	l4834
  1844   001CF8                     u4560:
  1845   001CF8                     
  1846                           ; BSR set to: 0
  1847                           ;main.c: 152:                 PinkMove(&motorL, &motorR);
  1848   001CF8  0EF5               	movlw	low _motorL
  1849   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1850   001CFC  0E00               	movlw	high _motorL
  1851   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1852   001D00  0EBC               	movlw	low _motorR
  1853   001D02  6E22               	movwf	PinkMove@mR^0,c
  1854   001D04  0E01               	movlw	high _motorR
  1855   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1856   001D08  EC5B  F024         	call	_PinkMove	;wreg free
  1857   001D0C                     
  1858                           ;main.c: 153:                 TMR0H=0;
  1859   001D0C  0E00               	movlw	0
  1860   001D0E  6ED4               	movwf	212,c	;volatile
  1861   001D10                     
  1862                           ;main.c: 154:                 TMR0L=0;
  1863   001D10  0E00               	movlw	0
  1864   001D12  6ED3               	movwf	211,c	;volatile
  1865   001D14                     
  1866                           ;main.c: 155:                 WayBack[move_count]=7;
  1867   001D14  0E5E               	movlw	low _WayBack
  1868   001D16  0100               	movlb	0	; () banked
  1869   001D18  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1870   001D1A  6ED9               	movwf	fsr2l,c
  1871   001D1C  0E01               	movlw	high _WayBack
  1872   001D1E  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1873   001D20  6EDA               	movwf	fsr2h,c
  1874   001D22  0E07               	movlw	7
  1875   001D24  6EDF               	movwf	indf2,c
  1876                           
  1877                           ;main.c: 156:             }
  1878   001D26  EF16  F00F         	goto	l4862
  1879   001D2A                     l4834:
  1880                           
  1881                           ; BSR set to: 0
  1882   001D2A  0E0A               	movlw	10
  1883   001D2C  19EC               	xorwf	main@prev_colour& (0+255),w,b
  1884   001D2E  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1885   001D30  A4D8               	btfss	status,2,c
  1886   001D32  EF9D  F00E         	goto	u4571
  1887   001D36  EF9F  F00E         	goto	u4570
  1888   001D3A                     u4571:
  1889   001D3A  EFAB  F00E         	goto	l4838
  1890   001D3E                     u4570:
  1891   001D3E                     
  1892                           ; BSR set to: 0
  1893                           ;main.c: 158:                 RetryMove(&motorL, &motorR);
  1894   001D3E  0EF5               	movlw	low _motorL
  1895   001D40  6E20               	movwf	RetryMove@mL^0,c
  1896   001D42  0E00               	movlw	high _motorL
  1897   001D44  6E21               	movwf	(RetryMove@mL+1)^0,c
  1898   001D46  0EBC               	movlw	low _motorR
  1899   001D48  6E22               	movwf	RetryMove@mR^0,c
  1900   001D4A  0E01               	movlw	high _motorR
  1901   001D4C  6E23               	movwf	(RetryMove@mR+1)^0,c
  1902   001D4E  EC58  F026         	call	_RetryMove	;wreg free
  1903                           
  1904                           ;main.c: 159:             }
  1905   001D52  EF16  F00F         	goto	l4862
  1906   001D56                     l4838:
  1907                           
  1908                           ; BSR set to: 0
  1909   001D56  51EC               	movf	main@prev_colour& (0+255),w,b
  1910   001D58  11ED               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1911   001D5A  A4D8               	btfss	status,2,c
  1912   001D5C  EFB2  F00E         	goto	u4581
  1913   001D60  EFB4  F00E         	goto	u4580
  1914   001D64                     u4581:
  1915   001D64  EFDA  F00E         	goto	l413
  1916   001D68                     u4580:
  1917   001D68                     
  1918                           ; BSR set to: 0
  1919                           ;main.c: 161:                 BlueMove(&motorL, &motorR);
  1920   001D68  0EF5               	movlw	low _motorL
  1921   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1922   001D6C  0E00               	movlw	high _motorL
  1923   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1924   001D70  0EBC               	movlw	low _motorR
  1925   001D72  6E22               	movwf	BlueMove@mR^0,c
  1926   001D74  0E01               	movlw	high _motorR
  1927   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1928   001D78  ECF3  F021         	call	_BlueMove	;wreg free
  1929   001D7C                     
  1930                           ;main.c: 162:                 T0CON0bits.T0EN=0;
  1931   001D7C  9ED5               	bcf	213,7,c	;volatile
  1932                           
  1933                           ;main.c: 163:                 go_Home(WayBack, Time_forward);
  1934   001D7E  0E5E               	movlw	low _WayBack
  1935   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1936   001D82  0E01               	movlw	high _WayBack
  1937   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1938   001D86  0E00               	movlw	low _Time_forward
  1939   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1940   001D8A  0E02               	movlw	high _Time_forward
  1941   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1942   001D8E  ECFB  F016         	call	_go_Home	;wreg free
  1943                           
  1944                           ;main.c: 164:                 stop(&motorL, &motorR);
  1945   001D92  0EF5               	movlw	low _motorL
  1946   001D94  6E14               	movwf	stop@mL^0,c
  1947   001D96  0E00               	movlw	high _motorL
  1948   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1949   001D9A  0EBC               	movlw	low _motorR
  1950   001D9C  6E16               	movwf	stop@mR^0,c
  1951   001D9E  0E01               	movlw	high _motorR
  1952   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1953   001DA2  EC05  F021         	call	_stop	;wreg free
  1954   001DA6                     l4844:
  1955                           
  1956                           ;main.c: 165:                 run_flag=0;
  1957   001DA6  0E00               	movlw	0
  1958   001DA8  0100               	movlb	0	; () banked
  1959   001DAA  6FE7               	movwf	(main@run_flag+1)& (0+255),b
  1960   001DAC  0E00               	movlw	0
  1961   001DAE  6FE6               	movwf	main@run_flag& (0+255),b
  1962   001DB0  EF16  F00F         	goto	l4862
  1963   001DB4                     l413:
  1964                           
  1965                           ; BSR set to: 0
  1966   001DB4  EF16  F00F         	goto	l4862
  1967   001DB8                     l4846:
  1968                           
  1969                           ; BSR set to: 1
  1970   001DB8  0100               	movlb	0	; () banked
  1971   001DBA  51F2               	movf	_lost_flag& (0+255),w,b
  1972   001DBC  11F3               	iorwf	(_lost_flag+1)& (0+255),w,b
  1973   001DBE  B4D8               	btfsc	status,2,c
  1974   001DC0  EFE4  F00E         	goto	u4591
  1975   001DC4  EFE6  F00E         	goto	u4590
  1976   001DC8                     u4591:
  1977   001DC8  EF16  F00F         	goto	l4862
  1978   001DCC                     u4590:
  1979   001DCC                     
  1980                           ; BSR set to: 0
  1981                           ;main.c: 171:             move_count++;
  1982   001DCC  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1983   001DCE  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1984   001DD0                     
  1985                           ; BSR set to: 0
  1986                           ;main.c: 172:             Time_forward[move_count]=65535;
  1987   001DD0  90D8               	bcf	status,0,c
  1988   001DD2  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  1989   001DD4  6ED9               	movwf	fsr2l,c
  1990   001DD6  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1991   001DD8  6EDA               	movwf	fsr2h,c
  1992   001DDA  0E00               	movlw	low _Time_forward
  1993   001DDC  26D9               	addwf	fsr2l,f,c
  1994   001DDE  0E02               	movlw	high _Time_forward
  1995   001DE0  22DA               	addwfc	fsr2h,f,c
  1996   001DE2  0EFF               	movlw	255
  1997   001DE4  6EDE               	movwf	postinc2,c
  1998   001DE6  0EFF               	movlw	255
  1999   001DE8  6EDD               	movwf	postdec2,c
  2000   001DEA                     
  2001                           ; BSR set to: 0
  2002                           ;main.c: 173:             BlueMove(&motorL, &motorR);
  2003   001DEA  0EF5               	movlw	low _motorL
  2004   001DEC  6E20               	movwf	BlueMove@mL^0,c
  2005   001DEE  0E00               	movlw	high _motorL
  2006   001DF0  6E21               	movwf	(BlueMove@mL+1)^0,c
  2007   001DF2  0EBC               	movlw	low _motorR
  2008   001DF4  6E22               	movwf	BlueMove@mR^0,c
  2009   001DF6  0E01               	movlw	high _motorR
  2010   001DF8  6E23               	movwf	(BlueMove@mR+1)^0,c
  2011   001DFA  ECF3  F021         	call	_BlueMove	;wreg free
  2012   001DFE                     
  2013                           ;main.c: 174:             T0CON0bits.T0EN=0;
  2014   001DFE  9ED5               	bcf	213,7,c	;volatile
  2015   001E00                     
  2016                           ;main.c: 175:             go_Home(WayBack, Time_forward);
  2017   001E00  0E5E               	movlw	low _WayBack
  2018   001E02  6E24               	movwf	go_Home@WayBack^0,c
  2019   001E04  0E01               	movlw	high _WayBack
  2020   001E06  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2021   001E08  0E00               	movlw	low _Time_forward
  2022   001E0A  6E26               	movwf	go_Home@Time_forward^0,c
  2023   001E0C  0E02               	movlw	high _Time_forward
  2024   001E0E  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2025   001E10  ECFB  F016         	call	_go_Home	;wreg free
  2026   001E14                     
  2027                           ;main.c: 176:             stop(&motorL, &motorR);
  2028   001E14  0EF5               	movlw	low _motorL
  2029   001E16  6E14               	movwf	stop@mL^0,c
  2030   001E18  0E00               	movlw	high _motorL
  2031   001E1A  6E15               	movwf	(stop@mL+1)^0,c
  2032   001E1C  0EBC               	movlw	low _motorR
  2033   001E1E  6E16               	movwf	stop@mR^0,c
  2034   001E20  0E01               	movlw	high _motorR
  2035   001E22  6E17               	movwf	(stop@mR+1)^0,c
  2036   001E24  EC05  F021         	call	_stop	;wreg free
  2037   001E28  EFD3  F00E         	goto	l4844
  2038   001E2C                     l4862:
  2039                           
  2040                           ;main.c: 69:     while (run_flag)
  2041   001E2C  0100               	movlb	0	; () banked
  2042   001E2E  51E6               	movf	main@run_flag& (0+255),w,b
  2043   001E30  11E7               	iorwf	(main@run_flag+1)& (0+255),w,b
  2044   001E32  A4D8               	btfss	status,2,c
  2045   001E34  EF1E  F00F         	goto	u4601
  2046   001E38  EF20  F00F         	goto	u4600
  2047   001E3C                     u4601:
  2048   001E3C  EFE8  F00C         	goto	l4724
  2049   001E40                     u4600:
  2050   001E40                     
  2051                           ; BSR set to: 0
  2052   001E40  EF17  F000         	goto	start
  2053   001E44                     __end_of_main:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _sprintf *****************
  2057 ;; Defined at:
  2058 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2061 ;;		 -> main@buf(100), 
  2062 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2063 ;;		 -> STR_1(36), 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2066 ;;  ap              2   12[BANK0 ] PTR void [1]
  2067 ;;		 -> ?_sprintf(2), 
  2068 ;;  ret             2    0        int 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    0[BANK0 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2078 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;Total ram usage:       25 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 8
  2085 ;; This function calls:
  2086 ;;		_vfprintf
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text1
  2093   00471C                     __ptext1:
  2094                           	callstack 0
  2095   00471C                     _sprintf:
  2096                           	callstack 22
  2097   00471C  0E64               	movlw	low (?_sprintf+4)
  2098   00471E  0100               	movlb	0	; () banked
  2099   004720  6F6C               	movwf	sprintf@ap& (0+255),b
  2100   004722  0E00               	movlw	high (?_sprintf+4)
  2101   004724  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2102   004726  C060  F06E         	movff	sprintf@s,sprintf@f
  2103   00472A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2104   00472E                     
  2105                           ; BSR set to: 0
  2106   00472E  0E00               	movlw	0
  2107   004730  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2108   004732  0E00               	movlw	0
  2109   004734  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2110   004736                     
  2111                           ; BSR set to: 0
  2112   004736  0E00               	movlw	0
  2113   004738  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2114   00473A  0E00               	movlw	0
  2115   00473C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2116   00473E                     
  2117                           ; BSR set to: 0
  2118   00473E  0E6E               	movlw	low sprintf@f
  2119   004740  6E51               	movwf	vfprintf@fp^0,c
  2120   004742  0E00               	movlw	high sprintf@f
  2121   004744  6E52               	movwf	(vfprintf@fp+1)^0,c
  2122   004746  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2123   00474A  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2124   00474E  0E6C               	movlw	low sprintf@ap
  2125   004750  6E55               	movwf	vfprintf@ap^0,c
  2126   004752  0E00               	movlw	high sprintf@ap
  2127   004754  6E56               	movwf	(vfprintf@ap+1)^0,c
  2128   004756  EC24  F025         	call	_vfprintf	;wreg free
  2129   00475A  0100               	movlb	0	; () banked
  2130   00475C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2131   00475E  2560               	addwf	sprintf@s& (0+255),w,b
  2132   004760  6ED9               	movwf	fsr2l,c
  2133   004762  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2134   004764  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2135   004766  6EDA               	movwf	fsr2h,c
  2136   004768  0E00               	movlw	0
  2137   00476A  6EDF               	movwf	indf2,c
  2138   00476C                     
  2139                           ; BSR set to: 0
  2140   00476C  0012               	return		;funcret
  2141   00476E                     __end_of_sprintf:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _vfprintf *****************
  2145 ;; Defined at:
  2146 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2149 ;;		 -> sprintf@f(11), 
  2150 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2151 ;;		 -> STR_1(36), 
  2152 ;;  ap              2   84[COMRAM] PTR PTR void 
  2153 ;;		 -> sprintf@ap(2), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2156 ;;		 -> STR_1(36), 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2   80[COMRAM] int 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:        8 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 7
  2173 ;; This function calls:
  2174 ;;		_vfpfcnvrt
  2175 ;; This function is called by:
  2176 ;;		_sprintf
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text2
  2181   004A48                     __ptext2:
  2182                           	callstack 0
  2183   004A48                     _vfprintf:
  2184                           	callstack 22
  2185   004A48                     
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
=======
   213   000E01  72                 	db	114	;'r'
   214   000E02  65                 	db	101	;'e'
   215   000E03  64                 	db	100	;'d'
   216   000E04  3D                 	db	61	;'='
   217   000E05  25                 	db	37
   218   000E06  64                 	db	100	;'d'
   219   000E07  20                 	db	32
   220   000E08  67                 	db	103	;'g'
   221   000E09  72                 	db	114	;'r'
   222   000E0A  65                 	db	101	;'e'
   223   000E0B  65                 	db	101	;'e'
   224   000E0C  6E                 	db	110	;'n'
   225   000E0D  3D                 	db	61	;'='
   226   000E0E  25                 	db	37
   227   000E0F  64                 	db	100	;'d'
   228   000E10  20                 	db	32
   229   000E11  62                 	db	98	;'b'
   230   000E12  6C                 	db	108	;'l'
   231   000E13  75                 	db	117	;'u'
   232   000E14  65                 	db	101	;'e'
   233   000E15  3D                 	db	61	;'='
   234   000E16  25                 	db	37
   235   000E17  64                 	db	100	;'d'
   236   000E18  20                 	db	32
   237   000E19  63                 	db	99	;'c'
   238   000E1A  6F                 	db	111	;'o'
   239   000E1B  6C                 	db	108	;'l'
   240   000E1C  6F                 	db	111	;'o'
   241   000E1D  75                 	db	117	;'u'
   242   000E1E  72                 	db	114	;'r'
   243   000E1F  3D                 	db	61	;'='
   244   000E20  25                 	db	37
   245   000E21  64                 	db	100	;'d'
   246   000E22  20                 	db	32
   247   000E23  0D                 	db	13
   248   000E24  0A                 	db	10
   249   000E25  00                 	db	0
   250   000E26  72                 	db	114	;'r'
   251   000E27  65                 	db	101	;'e'
   252   000E28  64                 	db	100	;'d'
   253   000E29  3D                 	db	61	;'='
   254   000E2A  25                 	db	37
   255   000E2B  66                 	db	102	;'f'
   256   000E2C  20                 	db	32
   257   000E2D  67                 	db	103	;'g'
   258   000E2E  72                 	db	114	;'r'
   259   000E2F  65                 	db	101	;'e'
   260   000E30  65                 	db	101	;'e'
   261   000E31  6E                 	db	110	;'n'
   262   000E32  3D                 	db	61	;'='
   263   000E33  25                 	db	37
   264   000E34  66                 	db	102	;'f'
   265   000E35  20                 	db	32
   266   000E36  62                 	db	98	;'b'
   267   000E37  6C                 	db	108	;'l'
   268   000E38  75                 	db	117	;'u'
   269   000E39  65                 	db	101	;'e'
   270   000E3A  3D                 	db	61	;'='
   271   000E3B  25                 	db	37
   272   000E3C  66                 	db	102	;'f'
   273   000E3D  20                 	db	32
   274   000E3E  6C                 	db	108	;'l'
   275   000E3F  75                 	db	117	;'u'
   276   000E40  6D                 	db	109	;'m'
   277   000E41  3D                 	db	61	;'='
   278   000E42  25                 	db	37
   279   000E43  64                 	db	100	;'d'
   280   000E44  20                 	db	32
   281   000E45  20                 	db	32
   282   000E46  0D                 	db	13
   283   000E47  0A                 	db	10
   284   000E48  00                 	db	0
   285   000E49                     STR_3:
   286   000E49  69                 	db	105	;'i'
   287   000E4A  6E                 	db	110	;'n'
   288   000E4B  66                 	db	102	;'f'
   289   000E4C  00                 	db	0
   290   000E4D                     STR_6:
   291   000E4D  6E                 	db	110	;'n'
   292   000E4E  61                 	db	97	;'a'
   293   000E4F  6E                 	db	110	;'n'
   294   000E50  00                 	db	0
   295   000E51  00                 	db	0	; dummy byte at the end
   296   000000                     
   297                           ; #config settings
   298                           
   299                           	psect	cinit
   300   005CE0                     __pcinit:
   301                           	callstack 0
   302   005CE0                     start_initialization:
   303                           	callstack 0
   304   005CE0                     __initialization:
   305                           	callstack 0
   306                           
   307                           ; Initialize objects allocated to BANK0 (7 bytes)
   308                           ; load TBLPTR registers with __pidataBANK0
   309   005CE0  0E0C               	movlw	low __pidataBANK0
   310   005CE2  6EF6               	movwf	tblptrl,c
   311   005CE4  0E61               	movlw	high __pidataBANK0
   312   005CE6  6EF7               	movwf	tblptrh,c
   313   005CE8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   314   005CEA  6EF8               	movwf	tblptru,c
   315   005CEC  EE00  F0F5         	lfsr	0,__pdataBANK0
   316   005CF0  EE10 F007          	lfsr	1,7
   317   005CF4                     copy_data0:
   318   005CF4  0009               	tblrd		*+
   319   005CF6  CFF5 FFEE          	movff	tablat,postinc0
   320   005CFA  50E5               	movf	postdec1,w,c
   321   005CFC  50E1               	movf	fsr1l,w,c
   322   005CFE  E1FA               	bnz	copy_data0
   323                           
   324                           ; Clear objects allocated to BANK2 (240 bytes)
   325   005D00  EE02  F000         	lfsr	0,__pbssBANK2
   326   005D04  0EF0               	movlw	240
   327   005D06                     clear_0:
   328   005D06  6AEE               	clrf	postinc0,c
   329   005D08  06E8               	decf	wreg,f,c
   330   005D0A  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to BANK1 (106 bytes)
   333   005D0C  EE01  F06E         	lfsr	0,__pbssBANK1
   334   005D10  0E6A               	movlw	106
   335   005D12                     clear_1:
   336   005D12  6AEE               	clrf	postinc0,c
   337   005D14  06E8               	decf	wreg,f,c
   338   005D16  E1FD               	bnz	clear_1
   339                           
   340                           ; Clear objects allocated to BANK0 (36 bytes)
   341   005D18  EE00  F0D1         	lfsr	0,__pbssBANK0
   342   005D1C  0E24               	movlw	36
   343   005D1E                     clear_2:
   344   005D1E  6AEE               	clrf	postinc0,c
   345   005D20  06E8               	decf	wreg,f,c
   346   005D22  E1FD               	bnz	clear_2
   347                           
   348                           ; Clear objects allocated to COMRAM (1 bytes)
   349   005D24  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   350   005D26                     end_of_initialization:
   351                           	callstack 0
   352   005D26                     __end_of__initialization:
   353                           	callstack 0
   354   005D26  0100               	movlb	0
   355   005D28  EF94  F011         	goto	_main	;jump to C main() function
   356                           
   357                           	psect	bssCOMRAM
   358   00005F                     __pbssCOMRAM:
   359                           	callstack 0
   360   00005F                     _TxBufWriteCnt:
   361                           	callstack 0
   362   00005F                     	ds	1
   363                           
   364                           	psect	bssBANK0
   365   0000D1                     __pbssBANK0:
   366                           	callstack 0
   367   0000D1                     _EUSART4RXbuf:
   368                           	callstack 0
   369   0000D1                     	ds	20
   370   0000E5                     floorf@F526:
   371                           	callstack 0
   372   0000E5                     	ds	4
   373   0000E9                     ___fpclassifyf@F465:
   374                           	callstack 0
   375   0000E9                     	ds	4
   376   0000ED                     _width:
   377                           	callstack 0
   378   0000ED                     	ds	2
   379   0000EF                     _prec:
   380                           	callstack 0
   381   0000EF                     	ds	2
   382   0000F1                     _flags:
   383                           	callstack 0
   384   0000F1                     	ds	1
   385   0000F2                     _TxBufReadCnt:
   386                           	callstack 0
   387   0000F2                     	ds	1
   388   0000F3                     _RxBufReadCnt:
   389                           	callstack 0
   390   0000F3                     	ds	1
   391   0000F4                     _RxBufWriteCnt:
   392                           	callstack 0
   393   0000F4                     	ds	1
   394                           
   395                           	psect	dataBANK0
   396   0000F5                     __pdataBANK0:
   397                           	callstack 0
   398   0000F5                     _RunOneBlockTime:
   399                           	callstack 0
   400   0000F5                     	ds	2
   401   0000F7                     _Turn45Delay:
   402                           	callstack 0
   403   0000F7                     	ds	2
   404   0000F9                     _power:
   405                           	callstack 0
   406   0000F9                     	ds	2
   407   0000FB                     _DataFlag:
   408                           	callstack 0
   409   0000FB                     	ds	1
   410                           
   411                           	psect	bssBANK1
   412   00016E                     __pbssBANK1:
   413                           	callstack 0
   414   00016E                     	ds	12
   415   00017A                     _move_count:
   416                           	callstack 0
   417   00017A                     	ds	2
   418   00017C                     _run_flag:
   419                           	callstack 0
   420   00017C                     	ds	2
   421   00017E                     _lost_flag:
   422                           	callstack 0
   423   00017E                     	ds	2
   424   000180                     _WayBack:
   425                           	callstack 0
   426   000180                     	ds	50
   427   0001B2                     _rel:
   428                           	callstack 0
   429   0001B2                     	ds	12
   430   0001BE                     _motorR:
   431                           	callstack 0
   432   0001BE                     	ds	9
   433   0001C7                     _motorL:
   434                           	callstack 0
   435   0001C7                     	ds	9
   436   0001D0                     _vals:
   437                           	callstack 0
   438   0001D0                     	ds	8
   439                           
   440                           	psect	bssBANK2
   441   000200                     __pbssBANK2:
   442                           	callstack 0
   443   000200                     _EUSART4TXbuf:
   444                           	callstack 0
   445   000200                     	ds	60
   446   00023C                     _Time_forward:
   447                           	callstack 0
   448   00023C                     	ds	100
   449   0002A0                     _dbuf:
   450                           	callstack 0
   451   0002A0                     	ds	80
   452                           
   453                           	psect	cstackBANK1
   454   000100                     __pcstackBANK1:
   455                           	callstack 0
   456   000100                     main@buf:
   457                           	callstack 0
   458                           
   459                           ; 100 bytes @ 0x0
   460   000100                     	ds	100
   461   000164                     main@temp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x64
   465   000164                     	ds	2
   466   000166                     main@lost_count:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x66
   470   000166                     	ds	2
   471   000168                     main@consecuitive:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x68
   475   000168                     	ds	2
   476   00016A                     main@colour:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x6A
   480   00016A                     	ds	2
   481   00016C                     main@prev_colour:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x6C
   485   00016C                     	ds	2
   486                           
   487                           	psect	cstackBANK0
   488   000060                     __pcstackBANK0:
   489                           	callstack 0
   490   000060                     efgtoa@fp:
   491                           	callstack 0
   492   000060                     colour_rel@L:
   493                           	callstack 0
   494   000060                     _Colour_decider$3162:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x0
   498   000060                     	ds	2
   499   000062                     efgtoa@f:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x2
   503   000062                     	ds	2
   504   000064                     Colour_decider@Cmax_i:
   505                           	callstack 0
   506   000064                     _colour_rel$3160:
   507                           	callstack 0
   508                           
   509                           ; 4 bytes @ 0x4
   510   000064                     	ds	2
   511   000066                     efgtoa@c:
   512                           	callstack 0
   513   000066                     Colour_decider@RGB_col:
   514                           	callstack 0
   515                           
   516                           ; 12 bytes @ 0x6
   517   000066                     	ds	1
   518   000067                     ??_efgtoa:
   519                           
   520                           ; 1 bytes @ 0x7
   521   000067                     	ds	1
   522   000068                     _colour_rel$3161:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x8
   526   000068                     	ds	1
   527   000069                     efgtoa@ne:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x9
   531   000069                     	ds	2
   532   00006B                     efgtoa@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536   00006B                     	ds	1
   537   00006C                     colour_rel@R:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0xC
   541   00006C                     	ds	1
   542   00006D                     efgtoa@t:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546   00006D                     	ds	2
   547   00006F                     _efgtoa$2790:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0xF
   551   00006F                     	ds	1
   552   000070                     colour_rel@G:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x10
   556   000070                     	ds	1
   557   000071                     efgtoa@pp:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x11
   561   000071                     	ds	1
   562   000072                     efgtoa@mode:
   563                           	callstack 0
   564   000072                     Colour_decider@Cmax:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x12
   568   000072                     	ds	1
   569   000073                     efgtoa@nmode:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x13
   573   000073                     	ds	1
   574   000074                     efgtoa@d:
   575                           	callstack 0
   576   000074                     colour_rel@B:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x14
   580   000074                     	ds	2
   581   000076                     efgtoa@m:
   582                           	callstack 0
   583   000076                     Colour_decider@Cmin:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x16
   587   000076                     	ds	2
   588   000078                     efgtoa@e:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x18
   592   000078                     	ds	2
   593   00007A                     Colour_decider@i:
   594                           	callstack 0
   595   00007A                     efgtoa@w:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x1A
   599   00007A                     	ds	2
   600   00007C                     Colour_decider@Hue:
   601                           	callstack 0
   602   00007C                     efgtoa@ou:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x1C
   606   00007C                     	ds	4
   607   000080                     efgtoa@i:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x20
   611   000080                     	ds	2
   612   000082                     efgtoa@h:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x22
   616   000082                     	ds	4
   617   000086                     efgtoa@l:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x26
   621   000086                     	ds	4
   622   00008A                     efgtoa@sign:
   623                           	callstack 0
   624                           
   625                           ; 1 bytes @ 0x2A
   626   00008A                     	ds	1
   627   00008B                     efgtoa@n:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2B
   631   00008B                     	ds	2
   632   00008D                     efgtoa@g:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0x2D
   636   00008D                     	ds	4
   637   000091                     efgtoa@u:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x31
   641   000091                     	ds	4
   642   000095                     vfpfcnvrt@fp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x35
   646   000095                     	ds	2
   647   000097                     vfpfcnvrt@fmt:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x37
   651   000097                     	ds	2
   652   000099                     vfpfcnvrt@ap:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x39
   656   000099                     	ds	2
   657   00009B                     ??_vfpfcnvrt:
   658                           
   659                           ; 1 bytes @ 0x3B
   660   00009B                     	ds	2
   661   00009D                     vfpfcnvrt@convarg:
   662                           	callstack 0
   663                           
   664                           ; 8 bytes @ 0x3D
   665   00009D                     	ds	8
   666   0000A5                     vfpfcnvrt@c:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x45
   670   0000A5                     	ds	1
   671   0000A6                     vfpfcnvrt@cp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x46
   675   0000A6                     	ds	2
   676   0000A8                     ?_vfprintf:
   677                           	callstack 0
   678   0000A8                     vfprintf@fp:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x48
   682   0000A8                     	ds	2
   683   0000AA                     vfprintf@fmt:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x4A
   687   0000AA                     	ds	2
   688   0000AC                     vfprintf@ap:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x4C
   692   0000AC                     	ds	2
   693   0000AE                     vfprintf@cfmt:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x4E
   697   0000AE                     	ds	2
   698   0000B0                     ?_sprintf:
   699                           	callstack 0
   700   0000B0                     sprintf@s:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x50
   704   0000B0                     	ds	2
   705   0000B2                     sprintf@fmt:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x52
   709   0000B2                     	ds	16
   710   0000C2                     sprintf@ap:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x62
   714   0000C2                     	ds	2
   715   0000C4                     sprintf@f:
   716                           	callstack 0
   717                           
   718                           ; 11 bytes @ 0x64
   719   0000C4                     	ds	11
   720   0000CF                     ??_main:
   721                           
   722                           ; 1 bytes @ 0x6F
   723   0000CF                     	ds	2
   724                           
   725                           	psect	cstackCOMRAM
   726   000001                     __pcstackCOMRAM:
   727                           	callstack 0
   728   000001                     ??_I2C_2_Master_Idle:
   729   000001                     ?___fpclassifyf:
   730                           	callstack 0
   731   000001                     ?___wmul:
   732                           	callstack 0
   733   000001                     ?___fladd:
   734                           	callstack 0
   735   000001                     ?_labs:
   736                           	callstack 0
   737   000001                     ?___flneg:
   738                           	callstack 0
   739   000001                     ?___fltol:
   740                           	callstack 0
   741   000001                     ?___xxtofl:
   742                           	callstack 0
   743   000001                     ?___aodiv:
   744                           	callstack 0
   745   000001                     ?___aomod:
   746                           	callstack 0
   747   000001                     sendCharSerial4@charToSend:
   748                           	callstack 0
   749   000001                     initDCmotorsPWM@PWMperiod:
   750                           	callstack 0
   751   000001                     TurnDelay@Turn45Delay:
   752                           	callstack 0
   753   000001                     getTMR0val@moving:
   754                           	callstack 0
   755   000001                     delayed_ms@time:
   756                           	callstack 0
   757   000001                     ___wmul@multiplier:
   758                           	callstack 0
   759   000001                     memcpy@d1:
   760                           	callstack 0
   761   000001                     fputc@c:
   762                           	callstack 0
   763   000001                     strcpy@dest:
   764                           	callstack 0
   765   000001                     ___flneg@f1:
   766                           	callstack 0
   767   000001                     ___fltol@f1:
   768                           	callstack 0
   769   000001                     ___fladd@b:
   770                           	callstack 0
   771   000001                     ___xxtofl@val:
   772                           	callstack 0
   773   000001                     ___fpclassifyf@x:
   774                           	callstack 0
   775   000001                     labs@a:
   776                           	callstack 0
   777   000001                     ___aodiv@dividend:
   778                           	callstack 0
   779   000001                     ___aomod@dividend:
   780                           	callstack 0
   781                           
   782                           ; 8 bytes @ 0x0
   783   000001                     	ds	1
   784   000002                     ??_I2C_2_Master_Read:
   785   000002                     I2C_2_Master_Write@data_byte:
   786                           	callstack 0
   787   000002                     sendStringSerial4@string:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x1
   791   000002                     	ds	1
   792   000003                     ??_delayed_ms:
   793   000003                     ??_TurnDelay:
   794   000003                     color_writetoaddr@value:
   795                           	callstack 0
   796   000003                     I2C_2_Master_Read@ack:
   797                           	callstack 0
   798   000003                     ___wmul@multiplicand:
   799                           	callstack 0
   800   000003                     memcpy@s1:
   801                           	callstack 0
   802   000003                     fputc@fp:
   803                           	callstack 0
   804   000003                     strcpy@src:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x2
   808   000003                     	ds	1
   809   000004                     color_writetoaddr@address:
   810                           	callstack 0
   811   000004                     I2C_2_Master_Read@tmp:
   812                           	callstack 0
   813   000004                     delayed_ms@i:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x3
   817   000004                     	ds	1
   818   000005                     ??_fputc:
   819   000005                     ??___fpclassifyf:
   820   000005                     ??_labs:
   821   000005                     ??_color_click_init:
   822   000005                     ??___fltol:
   823   000005                     ??___xxtofl:
   824   000005                     ?_color_read_lum:
   825                           	callstack 0
   826   000005                     ?_color_read_Red:
   827                           	callstack 0
   828   000005                     ?_color_read_Green:
   829                           	callstack 0
   830   000005                     ?_color_read_Blue:
   831                           	callstack 0
   832   000005                     ___wmul@product:
   833                           	callstack 0
   834   000005                     memcpy@n:
   835                           	callstack 0
   836   000005                     strcpy@s:
   837                           	callstack 0
   838   000005                     ___fladd@a:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x4
   842   000005                     	ds	2
   843   000007                     ??_color_read_lum:
   844   000007                     ??_color_read_Red:
   845   000007                     ??_color_read_Green:
   846   000007                     ??_color_read_Blue:
   847   000007                     ?___lwdiv:
   848                           	callstack 0
   849   000007                     ___lwdiv@dividend:
   850                           	callstack 0
   851   000007                     memcpy@d:
   852                           	callstack 0
   853   000007                     strcpy@d:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x6
   857   000007                     	ds	2
   858   000009                     ??___fladd:
   859   000009                     ___fltol@sign1:
   860                           	callstack 0
   861   000009                     ___xxtofl@sign:
   862                           	callstack 0
   863   000009                     ___lwdiv@divisor:
   864                           	callstack 0
   865   000009                     ___fpclassifyf@e:
   866                           	callstack 0
   867   000009                     memcpy@s:
   868                           	callstack 0
   869   000009                     ___aodiv@divisor:
   870                           	callstack 0
   871   000009                     ___aomod@divisor:
   872                           	callstack 0
   873                           
   874                           ; 8 bytes @ 0x8
   875   000009                     	ds	1
   876   00000A                     ___fltol@exp1:
   877                           	callstack 0
   878   00000A                     ___xxtofl@exp:
   879                           	callstack 0
   880   00000A                     color_read_lum@tmp:
   881                           	callstack 0
   882   00000A                     color_read_Red@tmp:
   883                           	callstack 0
   884   00000A                     color_read_Green@tmp:
   885                           	callstack 0
   886   00000A                     color_read_Blue@tmp:
   887                           	callstack 0
   888   00000A                     fputs@s:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x9
   892   00000A                     	ds	1
   893   00000B                     memcpy@tmp:
   894                           	callstack 0
   895   00000B                     ___lwdiv@quotient:
   896                           	callstack 0
   897   00000B                     ___xxtofl@arg:
   898                           	callstack 0
   899   00000B                     ___fpclassifyf@u:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0xA
   903   00000B                     	ds	1
   904   00000C                     readColours@vals:
   905                           	callstack 0
   906   00000C                     fputs@fp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0xB
   910   00000C                     	ds	1
   911   00000D                     ___lwdiv@counter:
   912                           	callstack 0
   913   00000D                     ___fladd@signs:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0xC
   917   00000D                     	ds	1
   918   00000E                     ___fladd@aexp:
   919                           	callstack 0
   920   00000E                     fputs@c:
   921                           	callstack 0
   922   00000E                     setMotorPWM@m:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0xD
   926   00000E                     	ds	1
   927   00000F                     ___fladd@bexp:
   928                           	callstack 0
   929   00000F                     fputs@i:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xE
   933   00000F                     	ds	1
   934   000010                     ??_setMotorPWM:
   935   000010                     ___fladd@grs:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0xF
   939   000010                     	ds	1
   940   000011                     ?___flmul:
   941                           	callstack 0
   942   000011                     ___aodiv@counter:
   943                           	callstack 0
   944   000011                     ___aomod@counter:
   945                           	callstack 0
   946   000011                     pad@fp:
   947                           	callstack 0
   948   000011                     ___flmul@b:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x10
   952   000011                     	ds	1
   953   000012                     setMotorPWM@posDuty:
   954                           	callstack 0
   955   000012                     ___aodiv@sign:
   956                           	callstack 0
   957   000012                     ___aomod@sign:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x11
   961   000012                     	ds	1
   962   000013                     ?_abs:
   963                           	callstack 0
   964   000013                     setMotorPWM@negDuty:
   965                           	callstack 0
   966   000013                     pad@buf:
   967                           	callstack 0
   968   000013                     abs@a:
   969                           	callstack 0
   970   000013                     ___aodiv@quotient:
   971                           	callstack 0
   972                           
   973                           ; 8 bytes @ 0x12
   974   000013                     	ds	1
   975   000014                     stop@mL:
   976                           	callstack 0
   977   000014                     turnLeft@mL:
   978                           	callstack 0
   979   000014                     turnRight@mL:
   980                           	callstack 0
   981   000014                     fullSpeedAhead@mL:
   982                           	callstack 0
   983   000014                     timed_forward@mL:
   984                           	callstack 0
   985   000014                     fullSpeedBack@mL:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x13
   989   000014                     	ds	1
   990   000015                     ??_abs:
   991   000015                     pad@p:
   992                           	callstack 0
   993   000015                     ___flmul@a:
   994                           	callstack 0
   995                           
   996                           ; 4 bytes @ 0x14
   997   000015                     	ds	1
   998   000016                     stop@mR:
   999                           	callstack 0
  1000   000016                     turnLeft@mR:
  1001                           	callstack 0
  1002   000016                     turnRight@mR:
  1003                           	callstack 0
  1004   000016                     fullSpeedAhead@mR:
  1005                           	callstack 0
  1006   000016                     timed_forward@mR:
  1007                           	callstack 0
  1008   000016                     fullSpeedBack@mR:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x15
  1012   000016                     	ds	1
  1013   000017                     ??_pad:
  1014                           
  1015                           ; 1 bytes @ 0x16
  1016   000017                     	ds	1
  1017   000018                     ??_fullSpeedAhead:
  1018   000018                     ??_stop:
  1019   000018                     ??_turnLeft:
  1020   000018                     ??_turnRight:
  1021   000018                     ??_fullSpeedBack:
  1022   000018                     timed_forward@time:
  1023                           	callstack 0
  1024   000018                     pad@i:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x17
  1028   000018                     	ds	1
  1029   000019                     ??___flmul:
  1030                           
  1031                           ; 1 bytes @ 0x18
  1032   000019                     	ds	1
  1033   00001A                     ??_timed_forward:
  1034   00001A                     turnRight45@mL:
  1035                           	callstack 0
  1036   00001A                     turnLeft45@mL:
  1037                           	callstack 0
  1038   00001A                     reverseDetect@mL:
  1039                           	callstack 0
  1040   00001A                     reverseOneBlock@mL:
  1041                           	callstack 0
  1042   00001A                     ForwardOneBlock@mL:
  1043                           	callstack 0
  1044   00001A                     Forwardhalfblock@mL:
  1045                           	callstack 0
  1046   00001A                     RetryMove@mL:
  1047                           	callstack 0
  1048   00001A                     pad@w:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x19
  1052   00001A                     	ds	2
  1053   00001C                     turnRight45@mR:
  1054                           	callstack 0
  1055   00001C                     turnLeft45@mR:
  1056                           	callstack 0
  1057   00001C                     reverseDetect@mR:
  1058                           	callstack 0
  1059   00001C                     reverseOneBlock@mR:
  1060                           	callstack 0
  1061   00001C                     ForwardOneBlock@mR:
  1062                           	callstack 0
  1063   00001C                     Forwardhalfblock@mR:
  1064                           	callstack 0
  1065   00001C                     RetryMove@mR:
  1066                           	callstack 0
  1067   00001C                     dtoa@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x1B
  1071   00001C                     	ds	1
  1072   00001D                     ___flmul@sign:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x1C
  1076   00001D                     	ds	1
  1077   00001E                     ??_Forwardhalfblock:
  1078   00001E                     ??_RetryMove:
  1079   00001E                     ??_turnRight45:
  1080   00001E                     ??_turnLeft45:
  1081   00001E                     ??_reverseDetect:
  1082   00001E                     ??_reverseOneBlock:
  1083   00001E                     ??_ForwardOneBlock:
  1084   00001E                     ___flmul@grs:
  1085                           	callstack 0
  1086   00001E                     dtoa@d:
  1087                           	callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x1D
  1090   00001E                     	ds	2
  1091   000020                     RedMove@mL:
  1092                           	callstack 0
  1093   000020                     GreenMove@mL:
  1094                           	callstack 0
  1095   000020                     BlueMove@mL:
  1096                           	callstack 0
  1097   000020                     YellowMove@mL:
  1098                           	callstack 0
  1099   000020                     PinkMove@mL:
  1100                           	callstack 0
  1101   000020                     OrangeMove@mL:
  1102                           	callstack 0
  1103   000020                     LightBlueMove@mL:
  1104                           	callstack 0
  1105   000020                     ReverseYellow@mL:
  1106                           	callstack 0
  1107   000020                     ReversePink@mL:
  1108                           	callstack 0
  1109   000020                     turnCalibration@mL:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x1F
  1113   000020                     	ds	2
  1114   000022                     ___flmul@aexp:
  1115                           	callstack 0
  1116   000022                     RedMove@mR:
  1117                           	callstack 0
  1118   000022                     GreenMove@mR:
  1119                           	callstack 0
  1120   000022                     BlueMove@mR:
  1121                           	callstack 0
  1122   000022                     YellowMove@mR:
  1123                           	callstack 0
  1124   000022                     PinkMove@mR:
  1125                           	callstack 0
  1126   000022                     OrangeMove@mR:
  1127                           	callstack 0
  1128   000022                     LightBlueMove@mR:
  1129                           	callstack 0
  1130   000022                     ReverseYellow@mR:
  1131                           	callstack 0
  1132   000022                     ReversePink@mR:
  1133                           	callstack 0
  1134   000022                     turnCalibration@mR:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x21
  1138   000022                     	ds	1
  1139   000023                     ___flmul@bexp:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x22
  1143   000023                     	ds	1
  1144   000024                     ??_turnCalibration:
  1145   000024                     go_Home@WayBack:
  1146                           	callstack 0
  1147   000024                     ___flmul@prod:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x23
  1151   000024                     	ds	2
  1152   000026                     ??_dtoa:
  1153   000026                     go_Home@Time_forward:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x25
  1157   000026                     	ds	2
  1158   000028                     ??_go_Home:
  1159   000028                     ___flmul@temp:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x27
  1163   000028                     	ds	2
  1164   00002A                     ?___flsub:
  1165                           	callstack 0
  1166   00002A                     ___flge@ff1:
  1167                           	callstack 0
  1168   00002A                     ___flsub@b:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x29
  1172   00002A                     	ds	1
  1173   00002B                     go_Home@i:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x2A
  1177   00002B                     	ds	3
  1178   00002E                     _dtoa$2759:
  1179                           	callstack 0
  1180   00002E                     ___flge@ff2:
  1181                           	callstack 0
  1182   00002E                     ___flsub@a:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x2D
  1186   00002E                     	ds	2
  1187   000030                     dtoa@p:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x2F
  1191   000030                     	ds	2
  1192   000032                     ??___flge:
  1193   000032                     ?___fldiv:
  1194                           	callstack 0
  1195   000032                     dtoa@w:
  1196                           	callstack 0
  1197   000032                     ___fleq@ff1:
  1198                           	callstack 0
  1199   000032                     ___fldiv@b:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x31
  1203   000032                     	ds	2
  1204   000034                     dtoa@n:
  1205                           	callstack 0
  1206                           
  1207                           ; 8 bytes @ 0x33
  1208   000034                     	ds	2
  1209   000036                     ___fleq@ff2:
  1210                           	callstack 0
  1211   000036                     ___fldiv@a:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x35
  1215   000036                     	ds	4
  1216   00003A                     ??___fldiv:
  1217   00003A                     ??___fleq:
  1218                           
  1219                           ; 1 bytes @ 0x39
  1220   00003A                     	ds	2
  1221   00003C                     dtoa@i:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x3B
  1225   00003C                     	ds	2
  1226   00003E                     dtoa@s:
  1227                           	callstack 0
  1228   00003E                     ___fldiv@rem:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x3D
  1232   00003E                     	ds	4
  1233   000042                     ___fldiv@sign:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x41
  1237   000042                     	ds	1
  1238   000043                     ___fldiv@new_exp:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x42
  1242   000043                     	ds	2
  1243   000045                     ___fldiv@grs:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x44
  1247   000045                     	ds	4
  1248   000049                     ___fldiv@bexp:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x48
  1252   000049                     	ds	1
  1253   00004A                     ___fldiv@aexp:
  1254                           	callstack 0
  1255                           
  1256                           ; 1 bytes @ 0x49
  1257   00004A                     	ds	1
  1258   00004B                     ?_Colour_decider:
  1259                           	callstack 0
  1260   00004B                     ?_floorf:
  1261                           	callstack 0
  1262   00004B                     colour_rel@vals:
  1263                           	callstack 0
  1264   00004B                     Colour_decider@vals:
  1265                           	callstack 0
  1266   00004B                     floorf@x:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x4A
  1270   00004B                     	ds	2
  1271   00004D                     colour_rel@rel:
  1272                           	callstack 0
  1273   00004D                     Colour_decider@rel:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x4C
  1277   00004D                     	ds	2
  1278   00004F                     ??_floorf:
  1279   00004F                     ??_Colour_decider:
  1280                           
  1281                           ; 1 bytes @ 0x4E
  1282   00004F                     	ds	6
  1283   000055                     floorf@m:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x54
  1287   000055                     	ds	4
  1288   000059                     floorf@e:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x58
  1292   000059                     	ds	2
  1293   00005B                     floorf@u:
  1294                           	callstack 0
  1295                           
  1296                           ; 4 bytes @ 0x5A
  1297   00005B                     	ds	4
  1298   00005F                     
  1299                           ; 1 bytes @ 0x5E
  1300 ;;
  1301 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1302 ;;
  1303 ;; *************** function _main *****************
  1304 ;; Defined at:
  1305 ;;		line 30 in file "main.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  colour          2  106[BANK1 ] int 
  1310 ;;  colour          2    0        int 
  1311 ;;  temp            2  100[BANK1 ] int 
  1312 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1313 ;;  prev_colour     2  108[BANK1 ] int 
  1314 ;;  consecuitive    2  104[BANK1 ] int 
  1315 ;;  lost_count      2  102[BANK1 ] int 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;      Locals:         0       0     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1328 ;;      Totals:         0       2     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1329 ;;Total ram usage:      112 bytes
  1330 ;; Hardware stack levels required when called: 8
  1331 ;; This function calls:
  1332 ;;		_BlueMove
  1333 ;;		_Colour_decider
  1334 ;;		_Forwardhalfblock
  1335 ;;		_GreenMove
  1336 ;;		_I2C_2_Master_Init
  1337 ;;		_Interrupts_init
  1338 ;;		_LightBlueMove
  1339 ;;		_OrangeMove
  1340 ;;		_PinkMove
  1341 ;;		_RedMove
  1342 ;;		_RetryMove
  1343 ;;		_Timer0_init
  1344 ;;		_YellowMove
  1345 ;;		_color_click_init
  1346 ;;		_colour_rel
  1347 ;;		_fullSpeedAhead
  1348 ;;		_getTMR0val
  1349 ;;		_go_Home
  1350 ;;		_initDCmotorsPWM
  1351 ;;		_initUSART4
  1352 ;;		_readColours
  1353 ;;		_sendStringSerial4
  1354 ;;		_sprintf
  1355 ;;		_stop
  1356 ;;		_turnCalibration
  1357 ;; This function is called by:
  1358 ;;		Startup code after reset
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text0
  1363   002328                     __ptext0:
  1364                           	callstack 0
  1365   002328                     _main:
  1366                           	callstack 23
  1367   002328                     
  1368                           ;main.c: 31:     initUSART4();
  1369   002328  EC56  F030         	call	_initUSART4	;wreg free
  1370   00232C                     
  1371                           ;main.c: 32:     Interrupts_init();
  1372   00232C  EC8B  F030         	call	_Interrupts_init	;wreg free
  1373   002330                     
  1374                           ;main.c: 33:     color_click_init();
  1375   002330  ECDF  F02C         	call	_color_click_init	;wreg free
  1376   002334                     
  1377                           ;main.c: 34:     I2C_2_Master_Init();
  1378   002334  ECE7  F02F         	call	_I2C_2_Master_Init	;wreg free
  1379   002338                     
  1380                           ;main.c: 35:     initDCmotorsPWM(200);
  1381   002338  0E00               	movlw	0
  1382   00233A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1383   00233C  0EC8               	movlw	200
  1384   00233E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1385   002340  ECB5  F029         	call	_initDCmotorsPWM	;wreg free
  1386   002344                     
  1387                           ;main.c: 36:     Timer0_init();
  1388   002344  EC46  F030         	call	_Timer0_init	;wreg free
  1389   002348                     
  1390                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1391   002348  9287               	bcf	135,1,c	;volatile
  1392   00234A                     
  1393                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1394   00234A  9881               	bcf	129,4,c	;volatile
  1395   00234C                     
  1396                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1397   00234C  9E86               	bcf	134,7,c	;volatile
  1398   00234E                     
  1399                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1400   00234E  8486               	bsf	134,2,c	;volatile
  1401   002350                     
  1402                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1403   002350  010E               	movlb	14	; () banked
  1404   002352  95B4               	bcf	180,2,b	;volatile
  1405   002354                     
  1406                           ; BSR set to: 14
  1407                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1408   002354  8686               	bsf	134,3,c	;volatile
  1409   002356                     
  1410                           ; BSR set to: 14
  1411                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1412   002356  97B4               	bcf	180,3,b	;volatile
  1413   002358                     
  1414                           ; BSR set to: 14
  1415                           ;main.c: 46:     LATGbits.LATG1=1;
  1416   002358  827F               	bsf	127,1,c	;volatile
  1417   00235A                     
  1418                           ; BSR set to: 14
  1419                           ;main.c: 47:     LATAbits.LATA4=1;
  1420   00235A  8879               	bsf	121,4,c	;volatile
  1421   00235C                     
  1422                           ; BSR set to: 14
  1423                           ;main.c: 48:     LATFbits.LATF7=1;
  1424   00235C  8E7E               	bsf	126,7,c	;volatile
  1425   00235E                     
  1426                           ; BSR set to: 14
  1427                           ;main.c: 51:     LATDbits.LATD7=0;
  1428   00235E  9E7C               	bcf	124,7,c	;volatile
  1429   002360                     
  1430                           ; BSR set to: 14
  1431                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1432   002360  9E84               	bcf	132,7,c	;volatile
  1433   002362                     
  1434                           ; BSR set to: 14
  1435                           ;main.c: 53:     LATHbits.LATH3=0;
  1436   002362  9680               	bcf	128,3,c	;volatile
  1437   002364                     
  1438                           ; BSR set to: 14
  1439                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1440   002364  9688               	bcf	136,3,c	;volatile
  1441   002366                     
  1442                           ; BSR set to: 14
  1443                           ;main.c: 57:     LATHbits.LATH0=0;
  1444   002366  9080               	bcf	128,0,c	;volatile
  1445   002368                     
  1446                           ; BSR set to: 14
  1447                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1448   002368  9088               	bcf	136,0,c	;volatile
  1449   00236A                     
  1450                           ; BSR set to: 14
  1451                           ;main.c: 61:     LATFbits.LATF0=0;
  1452   00236A  907E               	bcf	126,0,c	;volatile
  1453   00236C                     
  1454                           ; BSR set to: 14
  1455                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1456   00236C  9086               	bcf	134,0,c	;volatile
  1457   00236E                     
  1458                           ; BSR set to: 14
  1459                           ;main.c: 65:     LATDbits.LATD4=0;
  1460   00236E  987C               	bcf	124,4,c	;volatile
  1461   002370                     
  1462                           ; BSR set to: 14
  1463                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1464   002370  9884               	bcf	132,4,c	;volatile
  1465   002372                     
  1466                           ; BSR set to: 14
  1467                           ;main.c: 69:     LATDbits.LATD3=0;
  1468   002372  967C               	bcf	124,3,c	;volatile
  1469   002374                     
  1470                           ; BSR set to: 14
  1471                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1472   002374  9684               	bcf	132,3,c	;volatile
  1473   002376                     
  1474                           ; BSR set to: 14
  1475                           ;main.c: 75:     motorL.power=0;
  1476   002376  0E00               	movlw	0
  1477   002378  0101               	movlb	1	; () banked
  1478   00237A  6FC7               	movwf	_motorL& (0+255),b
  1479   00237C                     
  1480                           ; BSR set to: 1
  1481                           ;main.c: 76:     motorL.direction=1;
  1482   00237C  0E01               	movlw	1
  1483   00237E  6FC8               	movwf	(_motorL+1)& (0+255),b
  1484   002380                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 77:     motorL.brakemode=1;
  1487   002380  0E01               	movlw	1
  1488   002382  6FC9               	movwf	(_motorL+2)& (0+255),b
  1489   002384                     
  1490                           ; BSR set to: 1
  1491                           ;main.c: 78:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1492   002384  0EAA               	movlw	170
  1493   002386  6FCC               	movwf	(_motorL+5)& (0+255),b
  1494   002388  0E0F               	movlw	15
  1495   00238A  6FCD               	movwf	(_motorL+6)& (0+255),b
  1496   00238C                     
  1497                           ; BSR set to: 1
  1498                           ;main.c: 79:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1499   00238C  0EA6               	movlw	166
  1500   00238E  6FCE               	movwf	(_motorL+7)& (0+255),b
  1501   002390  0E0F               	movlw	15
  1502   002392  6FCF               	movwf	(_motorL+8)& (0+255),b
  1503   002394                     
  1504                           ; BSR set to: 1
  1505                           ;main.c: 80:     motorL.PWMperiod=200;
  1506   002394  0E00               	movlw	0
  1507   002396  6FCB               	movwf	(_motorL+4)& (0+255),b
  1508   002398  0EC8               	movlw	200
  1509   00239A  6FCA               	movwf	(_motorL+3)& (0+255),b
  1510   00239C                     
  1511                           ; BSR set to: 1
  1512                           ;main.c: 81:     motorR.power=0;
  1513   00239C  0E00               	movlw	0
  1514   00239E  6FBE               	movwf	_motorR& (0+255),b
  1515   0023A0                     
  1516                           ; BSR set to: 1
  1517                           ;main.c: 82:     motorR.direction=1;
  1518   0023A0  0E01               	movlw	1
  1519   0023A2  6FBF               	movwf	(_motorR+1)& (0+255),b
  1520   0023A4                     
  1521                           ; BSR set to: 1
  1522                           ;main.c: 83:     motorR.brakemode=1;
  1523   0023A4  0E01               	movlw	1
  1524   0023A6  6FC0               	movwf	(_motorR+2)& (0+255),b
  1525   0023A8                     
  1526                           ; BSR set to: 1
  1527                           ;main.c: 84:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1528   0023A8  0E25               	movlw	37
  1529   0023AA  6FC3               	movwf	(_motorR+5)& (0+255),b
  1530   0023AC  0E0F               	movlw	15
  1531   0023AE  6FC4               	movwf	(_motorR+6)& (0+255),b
  1532   0023B0                     
  1533                           ; BSR set to: 1
  1534                           ;main.c: 85:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1535   0023B0  0E21               	movlw	33
  1536   0023B2  6FC5               	movwf	(_motorR+7)& (0+255),b
  1537   0023B4  0E0F               	movlw	15
  1538   0023B6  6FC6               	movwf	(_motorR+8)& (0+255),b
  1539   0023B8                     
  1540                           ; BSR set to: 1
  1541                           ;main.c: 86:     motorR.PWMperiod=200;
  1542   0023B8  0E00               	movlw	0
  1543   0023BA  6FC2               	movwf	(_motorR+4)& (0+255),b
  1544   0023BC  0EC8               	movlw	200
  1545   0023BE  6FC1               	movwf	(_motorR+3)& (0+255),b
  1546   0023C0                     
  1547                           ; BSR set to: 1
  1548                           ;main.c: 88:     int consecuitive=0;
  1549   0023C0  0E00               	movlw	0
  1550   0023C2  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1551   0023C4  0E00               	movlw	0
  1552   0023C6  6F68               	movwf	main@consecuitive& (0+255),b
  1553   0023C8                     
  1554                           ; BSR set to: 1
  1555                           ;main.c: 89:     int prev_colour =0;
  1556   0023C8  0E00               	movlw	0
  1557   0023CA  6F6D               	movwf	(main@prev_colour+1)& (0+255),b
  1558   0023CC  0E00               	movlw	0
  1559   0023CE  6F6C               	movwf	main@prev_colour& (0+255),b
  1560   0023D0                     
  1561                           ; BSR set to: 1
  1562                           ;main.c: 90:     run_flag=1;
  1563   0023D0  0E00               	movlw	0
  1564   0023D2  6F7D               	movwf	(_run_flag+1)& (0+255),b
  1565   0023D4  0E01               	movlw	1
  1566   0023D6  6F7C               	movwf	_run_flag& (0+255),b
  1567   0023D8                     
  1568                           ; BSR set to: 1
  1569                           ;main.c: 91:     move_count=-1;
  1570   0023D8  697A               	setf	_move_count& (0+255),b	;volatile
  1571   0023DA  697B               	setf	(_move_count+1)& (0+255),b	;volatile
  1572   0023DC                     
  1573                           ; BSR set to: 1
  1574                           ;main.c: 93:     turnCalibration(&motorL,&motorR);
  1575   0023DC  0EC7               	movlw	low _motorL
  1576   0023DE  6E20               	movwf	turnCalibration@mL^0,c
  1577   0023E0  0E01               	movlw	high _motorL
  1578   0023E2  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1579   0023E4  0EBE               	movlw	low _motorR
  1580   0023E6  6E22               	movwf	turnCalibration@mR^0,c
  1581   0023E8  0E01               	movlw	high _motorR
  1582   0023EA  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1583   0023EC  EC3A  F021         	call	_turnCalibration	;wreg free
  1584   0023F0                     
  1585                           ;main.c: 95:     LATFbits.LATF0=0;
  1586   0023F0  907E               	bcf	126,0,c	;volatile
  1587   0023F2                     
  1588                           ;main.c: 96:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1589   0023F2  0E52               	movlw	82
  1590   0023F4  0100               	movlb	0	; () banked
  1591   0023F6  6FD0               	movwf	(??_main+1)& (0+255),b
  1592   0023F8  0E2B               	movlw	43
  1593   0023FA  6FCF               	movwf	??_main& (0+255),b
  1594   0023FC  0E00               	movlw	0
  1595   0023FE                     u6027:
  1596   0023FE  2EE8               	decfsz	wreg,f,c
  1597   002400  D7FE               	bra	u6027
  1598   002402  2FCF               	decfsz	??_main& (0+255),f,b
  1599   002404  D7FC               	bra	u6027
  1600   002406  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1601   002408  D7FA               	bra	u6027
  1602   00240A  F000               	nop	
  1603   00240C                     l389:
  1604   00240C  B48E               	btfsc	142,2,c	;volatile
  1605   00240E  EF0B  F012         	goto	u5811
  1606   002412  EF0D  F012         	goto	u5810
  1607   002416                     u5811:
  1608   002416  EF06  F012         	goto	l389
  1609   00241A                     u5810:
  1610   00241A                     
  1611                           ;main.c: 99:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1612   00241A  0E52               	movlw	82
  1613   00241C  0100               	movlb	0	; () banked
  1614   00241E  6FD0               	movwf	(??_main+1)& (0+255),b
  1615   002420  0E2B               	movlw	43
  1616   002422  6FCF               	movwf	??_main& (0+255),b
  1617   002424  0E00               	movlw	0
  1618   002426                     u6037:
  1619   002426  2EE8               	decfsz	wreg,f,c
  1620   002428  D7FE               	bra	u6037
  1621   00242A  2FCF               	decfsz	??_main& (0+255),f,b
  1622   00242C  D7FC               	bra	u6037
  1623   00242E  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1624   002430  D7FA               	bra	u6037
  1625   002432  F000               	nop	
  1626   002434                     
  1627                           ;main.c: 100:     T0CON0bits.T0EN=1;
  1628   002434  8ED5               	bsf	213,7,c	;volatile
  1629                           
  1630                           ;main.c: 101:     while (run_flag)
  1631   002436  EF1A  F014         	goto	l6036
  1632   00243A                     l5896:
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 102:     {;main.c: 103:         lost_count=0;
  1636   00243A  0E00               	movlw	0
  1637   00243C  6F67               	movwf	(main@lost_count+1)& (0+255),b
  1638   00243E  0E00               	movlw	0
  1639   002440  6F66               	movwf	main@lost_count& (0+255),b
  1640   002442                     
  1641                           ; BSR set to: 1
  1642                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1643   002442  0EC7               	movlw	low _motorL
  1644   002444  6E14               	movwf	fullSpeedAhead@mL^0,c
  1645   002446  0E01               	movlw	high _motorL
  1646   002448  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1647   00244A  0EBE               	movlw	low _motorR
  1648   00244C  6E16               	movwf	fullSpeedAhead@mR^0,c
  1649   00244E  0E01               	movlw	high _motorR
  1650   002450  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1651   002452  EC66  F029         	call	_fullSpeedAhead	;wreg free
  1652   002456                     
  1653                           ;main.c: 106:         readColours(&vals);
  1654   002456  0ED0               	movlw	low _vals
  1655   002458  6E0C               	movwf	readColours@vals^0,c
  1656   00245A  0E01               	movlw	high _vals
  1657   00245C  6E0D               	movwf	(readColours@vals+1)^0,c
  1658   00245E  EC56  F02B         	call	_readColours	;wreg free
  1659   002462                     
  1660                           ;main.c: 109:         colour_rel(&vals, &rel);
  1661   002462  0ED0               	movlw	low _vals
  1662   002464  6E4B               	movwf	colour_rel@vals^0,c
  1663   002466  0E01               	movlw	high _vals
  1664   002468  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1665   00246A  0EB2               	movlw	low _rel
  1666   00246C  6E4D               	movwf	colour_rel@rel^0,c
  1667   00246E  0E01               	movlw	high _rel
  1668   002470  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1669   002472  EC68  F01A         	call	_colour_rel	;wreg free
  1670   002476                     
  1671                           ;main.c: 112:         if (vals.L>=500){
  1672   002476  0101               	movlb	1	; () banked
  1673   002478  BFD7               	btfsc	(_vals+7)& (0+255),7,b
  1674   00247A  EF48  F012         	goto	u5821
  1675   00247E  0EF4               	movlw	244
  1676   002480  5DD6               	subwf	(_vals+6)& (0+255),w,b
  1677   002482  0E01               	movlw	1
  1678   002484  59D7               	subwfb	(_vals+7)& (0+255),w,b
  1679   002486  A0D8               	btfss	status,0,c
  1680   002488  EF48  F012         	goto	u5821
  1681   00248C  EF4A  F012         	goto	u5820
  1682   002490                     u5821:
  1683   002490  EF1A  F014         	goto	l411
  1684   002494                     u5820:
  1685   002494                     
  1686                           ; BSR set to: 1
  1687                           ;main.c: 113:             move_count++;
  1688   002494  4B7A               	infsnz	_move_count& (0+255),f,b	;volatile
  1689   002496  2B7B               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1690   002498                     
  1691                           ; BSR set to: 1
  1692                           ;main.c: 114:             getTMR0val();
  1693   002498  EC10  F030         	call	_getTMR0val	;wreg free
  1694   00249C                     
  1695                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1696   00249C  0EC7               	movlw	low _motorL
  1697   00249E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1698   0024A0  0E01               	movlw	high _motorL
  1699   0024A2  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1700   0024A4  0EBE               	movlw	low _motorR
  1701   0024A6  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1702   0024A8  0E01               	movlw	high _motorR
  1703   0024AA  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1704   0024AC  EC0C  F02C         	call	_Forwardhalfblock	;wreg free
  1705   0024B0                     
  1706                           ;main.c: 118:             stop(&motorL, &motorR);
  1707   0024B0  0EC7               	movlw	low _motorL
  1708   0024B2  6E14               	movwf	stop@mL^0,c
  1709   0024B4  0E01               	movlw	high _motorL
  1710   0024B6  6E15               	movwf	(stop@mL+1)^0,c
  1711   0024B8  0EBE               	movlw	low _motorR
  1712   0024BA  6E16               	movwf	stop@mR^0,c
  1713   0024BC  0E01               	movlw	high _motorR
  1714   0024BE  6E17               	movwf	(stop@mR+1)^0,c
  1715   0024C0  EC3A  F02A         	call	_stop	;wreg free
  1716   0024C4                     
  1717                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1718   0024C4  0E11               	movlw	17
  1719   0024C6  0100               	movlb	0	; () banked
  1720   0024C8  6FD0               	movwf	(??_main+1)& (0+255),b
  1721   0024CA  0E3C               	movlw	60
  1722   0024CC  6FCF               	movwf	??_main& (0+255),b
  1723   0024CE  0ECB               	movlw	203
  1724   0024D0                     u6047:
  1725   0024D0  2EE8               	decfsz	wreg,f,c
  1726   0024D2  D7FE               	bra	u6047
  1727   0024D4  2FCF               	decfsz	??_main& (0+255),f,b
  1728   0024D6  D7FC               	bra	u6047
  1729   0024D8  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1730   0024DA  D7FA               	bra	u6047
  1731                           
  1732                           ;main.c: 125:             while (consecuitive<3){
  1733   0024DC  EFAE  F012         	goto	l5930
  1734   0024E0                     l5916:
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 126:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  1738   0024E0  0E19               	movlw	25
  1739   0024E2  0100               	movlb	0	; () banked
  1740   0024E4  6FD0               	movwf	(??_main+1)& (0+255),b
  1741   0024E6  0E5A               	movlw	90
  1742   0024E8  6FCF               	movwf	??_main& (0+255),b
  1743   0024EA  0EB1               	movlw	177
  1744   0024EC                     u6057:
  1745   0024EC  2EE8               	decfsz	wreg,f,c
  1746   0024EE  D7FE               	bra	u6057
  1747   0024F0  2FCF               	decfsz	??_main& (0+255),f,b
  1748   0024F2  D7FC               	bra	u6057
  1749   0024F4  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1750   0024F6  D7FA               	bra	u6057
  1751   0024F8  D000               	nop2	
  1752   0024FA                     
  1753                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  1754   0024FA  0ED0               	movlw	low _vals
  1755   0024FC  6E4B               	movwf	Colour_decider@vals^0,c
  1756   0024FE  0E01               	movlw	high _vals
  1757   002500  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1758   002502  0EB2               	movlw	low _rel
  1759   002504  6E4D               	movwf	Colour_decider@rel^0,c
  1760   002506  0E01               	movlw	high _rel
  1761   002508  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1762   00250A  EC29  F007         	call	_Colour_decider	;wreg free
  1763   00250E  C04B  F16A         	movff	?_Colour_decider,main@colour
  1764   002512  C04C  F16B         	movff	?_Colour_decider+1,main@colour+1
  1765   002516                     
  1766                           ;main.c: 128:                 if (colour==prev_colour){
  1767   002516  0101               	movlb	1	; () banked
  1768   002518  516C               	movf	main@prev_colour& (0+255),w,b
  1769   00251A  196A               	xorwf	main@colour& (0+255),w,b
  1770   00251C  E107               	bnz	u5831
  1771   00251E  516D               	movf	(main@prev_colour+1)& (0+255),w,b
  1772   002520  196B               	xorwf	(main@colour+1)& (0+255),w,b
  1773   002522  A4D8               	btfss	status,2,c
  1774   002524  EF96  F012         	goto	u5831
  1775   002528  EF98  F012         	goto	u5830
  1776   00252C                     u5831:
  1777   00252C  EF9C  F012         	goto	l5924
  1778   002530                     u5830:
  1779   002530                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 129:                     consecuitive++;
  1782   002530  4B68               	infsnz	main@consecuitive& (0+255),f,b
  1783   002532  2B69               	incf	(main@consecuitive+1)& (0+255),f,b
  1784                           
  1785                           ;main.c: 130:                 }
  1786   002534  EFA0  F012         	goto	l5926
  1787   002538                     l5924:
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;main.c: 132:                     consecuitive=0;
  1791   002538  0E00               	movlw	0
  1792   00253A  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1793   00253C  0E00               	movlw	0
  1794   00253E  6F68               	movwf	main@consecuitive& (0+255),b
  1795   002540                     l5926:
  1796                           
  1797                           ; BSR set to: 1
  1798                           ;main.c: 134:                 prev_colour=colour;
  1799   002540  C16A  F16C         	movff	main@colour,main@prev_colour
  1800   002544  C16B  F16D         	movff	main@colour+1,main@prev_colour+1
  1801   002548                     
  1802                           ; BSR set to: 1
  1803                           ;main.c: 135:                 RetryMove(&motorL, &motorR);
  1804   002548  0EC7               	movlw	low _motorL
  1805   00254A  6E1A               	movwf	RetryMove@mL^0,c
  1806   00254C  0E01               	movlw	high _motorL
  1807   00254E  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1808   002550  0EBE               	movlw	low _motorR
  1809   002552  6E1C               	movwf	RetryMove@mR^0,c
  1810   002554  0E01               	movlw	high _motorR
  1811   002556  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1812   002558  ECF9  F029         	call	_RetryMove	;wreg free
  1813   00255C                     l5930:
  1814                           
  1815                           ;main.c: 125:             while (consecuitive<3){
  1816   00255C  0101               	movlb	1	; () banked
  1817   00255E  BF69               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1818   002560  EFBB  F012         	goto	u5841
  1819   002564  5169               	movf	(main@consecuitive+1)& (0+255),w,b
  1820   002566  E109               	bnz	u5840
  1821   002568  0E03               	movlw	3
  1822   00256A  5D68               	subwf	main@consecuitive& (0+255),w,b
  1823   00256C  A0D8               	btfss	status,0,c
  1824   00256E  EFBB  F012         	goto	u5841
  1825   002572  EFBD  F012         	goto	u5840
  1826   002576                     u5841:
  1827   002576  EF70  F012         	goto	l5916
  1828   00257A                     u5840:
  1829   00257A                     
  1830                           ; BSR set to: 1
  1831                           ;main.c: 137:             consecuitive=0;
  1832   00257A  0E00               	movlw	0
  1833   00257C  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1834   00257E  0E00               	movlw	0
  1835   002580  6F68               	movwf	main@consecuitive& (0+255),b
  1836   002582                     
  1837                           ; BSR set to: 1
  1838                           ;main.c: 138:             int temp=TMR0L;
  1839   002582  CFD3 F164          	movff	4051,main@temp	;volatile
  1840   002586  6B65               	clrf	(main@temp+1)& (0+255),b
  1841   002588                     
  1842                           ; BSR set to: 1
  1843                           ;main.c: 139:             sprintf(buf,"red=%d green=%d blue=%d colour=%d \r\n",vals.R, v
      +                          als.G,vals.B,TMR0H);
  1844   002588  0E00               	movlw	low main@buf
  1845   00258A  0100               	movlb	0	; () banked
  1846   00258C  6FB0               	movwf	sprintf@s& (0+255),b
  1847   00258E  0E01               	movlw	high main@buf
  1848   002590  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1849   002592  0E01               	movlw	low STR_1
  1850   002594  6FB2               	movwf	sprintf@fmt& (0+255),b
  1851   002596  0E0E               	movlw	high STR_1
  1852   002598  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1853   00259A  C1D0  F0B4         	movff	_vals,?_sprintf+4
  1854   00259E  C1D1  F0B5         	movff	_vals+1,?_sprintf+5
  1855   0025A2  C1D2  F0B6         	movff	_vals+2,?_sprintf+6
  1856   0025A6  C1D3  F0B7         	movff	_vals+3,?_sprintf+7
  1857   0025AA  C1D4  F0B8         	movff	_vals+4,?_sprintf+8
  1858   0025AE  C1D5  F0B9         	movff	_vals+5,?_sprintf+9
  1859   0025B2  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1860   0025B6  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1861   0025B8  EC64  F02C         	call	_sprintf	;wreg free
  1862   0025BC                     
  1863                           ;main.c: 142:             sendStringSerial4(buf);
  1864   0025BC  0E00               	movlw	low main@buf
  1865   0025BE  6E02               	movwf	sendStringSerial4@string^0,c
  1866   0025C0  0E01               	movlw	high main@buf
  1867   0025C2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1868   0025C4  ECCF  F02F         	call	_sendStringSerial4	;wreg free
  1869   0025C8                     
  1870                           ;main.c: 144:             if (prev_colour==1){
  1871   0025C8  0101               	movlb	1	; () banked
  1872   0025CA  056C               	decf	main@prev_colour& (0+255),w,b
  1873   0025CC  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1874   0025CE  A4D8               	btfss	status,2,c
  1875   0025D0  EFEC  F012         	goto	u5851
  1876   0025D4  EFEE  F012         	goto	u5850
  1877   0025D8                     u5851:
  1878   0025D8  EF07  F013         	goto	l5950
  1879   0025DC                     u5850:
  1880   0025DC                     
  1881                           ; BSR set to: 1
  1882                           ;main.c: 145:                 RedMove(&motorL, &motorR);
  1883   0025DC  0EC7               	movlw	low _motorL
  1884   0025DE  6E20               	movwf	RedMove@mL^0,c
  1885   0025E0  0E01               	movlw	high _motorL
  1886   0025E2  6E21               	movwf	(RedMove@mL+1)^0,c
  1887   0025E4  0EBE               	movlw	low _motorR
  1888   0025E6  6E22               	movwf	RedMove@mR^0,c
  1889   0025E8  0E01               	movlw	high _motorR
  1890   0025EA  6E23               	movwf	(RedMove@mR+1)^0,c
  1891   0025EC  EC3E  F02F         	call	_RedMove	;wreg free
  1892   0025F0                     
  1893                           ;main.c: 146:                 TMR0H=0;
  1894   0025F0  0E00               	movlw	0
  1895   0025F2  6ED4               	movwf	212,c	;volatile
  1896   0025F4                     
  1897                           ;main.c: 147:                 TMR0L=0;
  1898   0025F4  0E00               	movlw	0
  1899   0025F6  6ED3               	movwf	211,c	;volatile
  1900   0025F8                     
  1901                           ;main.c: 148:                 WayBack[move_count]=1;
  1902   0025F8  0E80               	movlw	low _WayBack
  1903   0025FA  0101               	movlb	1	; () banked
  1904   0025FC  257A               	addwf	_move_count& (0+255),w,b	;volatile
  1905   0025FE  6ED9               	movwf	fsr2l,c
  1906   002600  0E01               	movlw	high _WayBack
  1907   002602  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1908   002604  6EDA               	movwf	fsr2h,c
  1909   002606  0E01               	movlw	1
  1910   002608  6EDF               	movwf	indf2,c
  1911                           
  1912                           ;main.c: 149:             }
  1913   00260A  EF1A  F014         	goto	l6036
  1914   00260E                     l5950:
  1915                           
  1916                           ; BSR set to: 1
  1917   00260E  0E02               	movlw	2
  1918   002610  196C               	xorwf	main@prev_colour& (0+255),w,b
  1919   002612  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1920   002614  A4D8               	btfss	status,2,c
  1921   002616  EF0F  F013         	goto	u5861
  1922   00261A  EF11  F013         	goto	u5860
  1923   00261E                     u5861:
  1924   00261E  EF2A  F013         	goto	l5960
  1925   002622                     u5860:
  1926   002622                     
  1927                           ; BSR set to: 1
  1928                           ;main.c: 151:                 OrangeMove(&motorL, &motorR);
  1929   002622  0EC7               	movlw	low _motorL
  1930   002624  6E20               	movwf	OrangeMove@mL^0,c
  1931   002626  0E01               	movlw	high _motorL
  1932   002628  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1933   00262A  0EBE               	movlw	low _motorR
  1934   00262C  6E22               	movwf	OrangeMove@mR^0,c
  1935   00262E  0E01               	movlw	high _motorR
  1936   002630  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1937   002632  EC8D  F02C         	call	_OrangeMove	;wreg free
  1938   002636                     
  1939                           ;main.c: 152:                 TMR0H=0;
  1940   002636  0E00               	movlw	0
  1941   002638  6ED4               	movwf	212,c	;volatile
  1942   00263A                     
  1943                           ;main.c: 153:                 TMR0L=0;
  1944   00263A  0E00               	movlw	0
  1945   00263C  6ED3               	movwf	211,c	;volatile
  1946   00263E                     
  1947                           ;main.c: 154:                 WayBack[move_count]=2;
  1948   00263E  0E80               	movlw	low _WayBack
  1949   002640  0101               	movlb	1	; () banked
  1950   002642  257A               	addwf	_move_count& (0+255),w,b	;volatile
  1951   002644  6ED9               	movwf	fsr2l,c
  1952   002646  0E01               	movlw	high _WayBack
  1953   002648  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1954   00264A  6EDA               	movwf	fsr2h,c
  1955   00264C  0E02               	movlw	2
  1956   00264E  6EDF               	movwf	indf2,c
  1957                           
  1958                           ;main.c: 155:             }
  1959   002650  EF1A  F014         	goto	l6036
  1960   002654                     l5960:
  1961                           
  1962                           ; BSR set to: 1
  1963   002654  0E03               	movlw	3
  1964   002656  196C               	xorwf	main@prev_colour& (0+255),w,b
  1965   002658  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1966   00265A  A4D8               	btfss	status,2,c
  1967   00265C  EF32  F013         	goto	u5871
  1968   002660  EF34  F013         	goto	u5870
  1969   002664                     u5871:
  1970   002664  EF4D  F013         	goto	l5970
  1971   002668                     u5870:
  1972   002668                     
  1973                           ; BSR set to: 1
  1974                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  1975   002668  0EC7               	movlw	low _motorL
  1976   00266A  6E20               	movwf	YellowMove@mL^0,c
  1977   00266C  0E01               	movlw	high _motorL
  1978   00266E  6E21               	movwf	(YellowMove@mL+1)^0,c
  1979   002670  0EBE               	movlw	low _motorR
  1980   002672  6E22               	movwf	YellowMove@mR^0,c
  1981   002674  0E01               	movlw	high _motorR
  1982   002676  6E23               	movwf	(YellowMove@mR+1)^0,c
  1983   002678  EC08  F02D         	call	_YellowMove	;wreg free
  1984   00267C                     
  1985                           ;main.c: 158:                 TMR0H=0;
  1986   00267C  0E00               	movlw	0
  1987   00267E  6ED4               	movwf	212,c	;volatile
  1988   002680                     
  1989                           ;main.c: 159:                 TMR0L=0;
  1990   002680  0E00               	movlw	0
  1991   002682  6ED3               	movwf	211,c	;volatile
  1992   002684                     
  1993                           ;main.c: 160:                 WayBack[move_count]=3;
  1994   002684  0E80               	movlw	low _WayBack
  1995   002686  0101               	movlb	1	; () banked
  1996   002688  257A               	addwf	_move_count& (0+255),w,b	;volatile
  1997   00268A  6ED9               	movwf	fsr2l,c
  1998   00268C  0E01               	movlw	high _WayBack
  1999   00268E  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2000   002690  6EDA               	movwf	fsr2h,c
  2001   002692  0E03               	movlw	3
  2002   002694  6EDF               	movwf	indf2,c
  2003                           
  2004                           ;main.c: 161:             }
  2005   002696  EF1A  F014         	goto	l6036
  2006   00269A                     l5970:
  2007                           
  2008                           ; BSR set to: 1
  2009   00269A  0E04               	movlw	4
  2010   00269C  196C               	xorwf	main@prev_colour& (0+255),w,b
  2011   00269E  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2012   0026A0  A4D8               	btfss	status,2,c
  2013   0026A2  EF55  F013         	goto	u5881
  2014   0026A6  EF57  F013         	goto	u5880
  2015   0026AA                     u5881:
  2016   0026AA  EF70  F013         	goto	l5980
  2017   0026AE                     u5880:
  2018   0026AE                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 163:                 BlueMove(&motorL, &motorR);
  2021   0026AE  0EC7               	movlw	low _motorL
  2022   0026B0  6E20               	movwf	BlueMove@mL^0,c
  2023   0026B2  0E01               	movlw	high _motorL
  2024   0026B4  6E21               	movwf	(BlueMove@mL+1)^0,c
  2025   0026B6  0EBE               	movlw	low _motorR
  2026   0026B8  6E22               	movwf	BlueMove@mR^0,c
  2027   0026BA  0E01               	movlw	high _motorR
  2028   0026BC  6E23               	movwf	(BlueMove@mR+1)^0,c
  2029   0026BE  EC23  F02B         	call	_BlueMove	;wreg free
  2030   0026C2                     
  2031                           ;main.c: 164:                 TMR0H=0;
  2032   0026C2  0E00               	movlw	0
  2033   0026C4  6ED4               	movwf	212,c	;volatile
  2034   0026C6                     
  2035                           ;main.c: 165:                 TMR0L=0;
  2036   0026C6  0E00               	movlw	0
  2037   0026C8  6ED3               	movwf	211,c	;volatile
  2038   0026CA                     
  2039                           ;main.c: 166:                 WayBack[move_count]=4;
  2040   0026CA  0E80               	movlw	low _WayBack
  2041   0026CC  0101               	movlb	1	; () banked
  2042   0026CE  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2043   0026D0  6ED9               	movwf	fsr2l,c
  2044   0026D2  0E01               	movlw	high _WayBack
  2045   0026D4  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2046   0026D6  6EDA               	movwf	fsr2h,c
  2047   0026D8  0E04               	movlw	4
  2048   0026DA  6EDF               	movwf	indf2,c
  2049                           
  2050                           ;main.c: 167:             }
  2051   0026DC  EF1A  F014         	goto	l6036
  2052   0026E0                     l5980:
  2053                           
  2054                           ; BSR set to: 1
  2055   0026E0  0E05               	movlw	5
  2056   0026E2  196C               	xorwf	main@prev_colour& (0+255),w,b
  2057   0026E4  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2058   0026E6  A4D8               	btfss	status,2,c
  2059   0026E8  EF78  F013         	goto	u5891
  2060   0026EC  EF7A  F013         	goto	u5890
  2061   0026F0                     u5891:
  2062   0026F0  EF93  F013         	goto	l5990
  2063   0026F4                     u5890:
  2064   0026F4                     
  2065                           ; BSR set to: 1
  2066                           ;main.c: 169:                 GreenMove(&motorL, &motorR);
  2067   0026F4  0EC7               	movlw	low _motorL
  2068   0026F6  6E20               	movwf	GreenMove@mL^0,c
  2069   0026F8  0E01               	movlw	high _motorL
  2070   0026FA  6E21               	movwf	(GreenMove@mL+1)^0,c
  2071   0026FC  0EBE               	movlw	low _motorR
  2072   0026FE  6E22               	movwf	GreenMove@mR^0,c
  2073   002700  0E01               	movlw	high _motorR
  2074   002702  6E23               	movwf	(GreenMove@mR+1)^0,c
  2075   002704  EC5D  F02F         	call	_GreenMove	;wreg free
  2076   002708                     
  2077                           ;main.c: 170:                 TMR0H=0;
  2078   002708  0E00               	movlw	0
  2079   00270A  6ED4               	movwf	212,c	;volatile
  2080   00270C                     
  2081                           ;main.c: 171:                 TMR0L=0;
  2082   00270C  0E00               	movlw	0
  2083   00270E  6ED3               	movwf	211,c	;volatile
  2084   002710                     
  2085                           ;main.c: 172:                 WayBack[move_count]=5;
  2086   002710  0E80               	movlw	low _WayBack
  2087   002712  0101               	movlb	1	; () banked
  2088   002714  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2089   002716  6ED9               	movwf	fsr2l,c
  2090   002718  0E01               	movlw	high _WayBack
  2091   00271A  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2092   00271C  6EDA               	movwf	fsr2h,c
  2093   00271E  0E05               	movlw	5
  2094   002720  6EDF               	movwf	indf2,c
  2095                           
  2096                           ;main.c: 173:             }
  2097   002722  EF1A  F014         	goto	l6036
  2098   002726                     l5990:
  2099                           
  2100                           ; BSR set to: 1
  2101   002726  0E06               	movlw	6
  2102   002728  196C               	xorwf	main@prev_colour& (0+255),w,b
  2103   00272A  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2104   00272C  A4D8               	btfss	status,2,c
  2105   00272E  EF9B  F013         	goto	u5901
  2106   002732  EF9D  F013         	goto	u5900
  2107   002736                     u5901:
  2108   002736  EFB6  F013         	goto	l6000
  2109   00273A                     u5900:
  2110   00273A                     
  2111                           ; BSR set to: 1
  2112                           ;main.c: 175:                 LightBlueMove(&motorL, &motorR);
  2113   00273A  0EC7               	movlw	low _motorL
  2114   00273C  6E20               	movwf	LightBlueMove@mL^0,c
  2115   00273E  0E01               	movlw	high _motorL
  2116   002740  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2117   002742  0EBE               	movlw	low _motorR
  2118   002744  6E22               	movwf	LightBlueMove@mR^0,c
  2119   002746  0E01               	movlw	high _motorR
  2120   002748  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2121   00274A  ECB6  F02C         	call	_LightBlueMove	;wreg free
  2122   00274E                     
  2123                           ;main.c: 176:                 TMR0H=0;
  2124   00274E  0E00               	movlw	0
  2125   002750  6ED4               	movwf	212,c	;volatile
  2126   002752                     
  2127                           ;main.c: 177:                 TMR0L=0;
  2128   002752  0E00               	movlw	0
  2129   002754  6ED3               	movwf	211,c	;volatile
  2130   002756                     
  2131                           ;main.c: 178:                 WayBack[move_count]=6;
  2132   002756  0E80               	movlw	low _WayBack
  2133   002758  0101               	movlb	1	; () banked
  2134   00275A  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2135   00275C  6ED9               	movwf	fsr2l,c
  2136   00275E  0E01               	movlw	high _WayBack
  2137   002760  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2138   002762  6EDA               	movwf	fsr2h,c
  2139   002764  0E06               	movlw	6
  2140   002766  6EDF               	movwf	indf2,c
  2141                           
  2142                           ;main.c: 179:             }
  2143   002768  EF1A  F014         	goto	l6036
  2144   00276C                     l6000:
  2145                           
  2146                           ; BSR set to: 1
  2147   00276C  0E07               	movlw	7
  2148   00276E  196C               	xorwf	main@prev_colour& (0+255),w,b
  2149   002770  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2150   002772  A4D8               	btfss	status,2,c
  2151   002774  EFBE  F013         	goto	u5911
  2152   002778  EFC0  F013         	goto	u5910
  2153   00277C                     u5911:
  2154   00277C  EFD9  F013         	goto	l6010
  2155   002780                     u5910:
  2156   002780                     
  2157                           ; BSR set to: 1
  2158                           ;main.c: 181:                 PinkMove(&motorL, &motorR);
  2159   002780  0EC7               	movlw	low _motorL
  2160   002782  6E20               	movwf	PinkMove@mL^0,c
  2161   002784  0E01               	movlw	high _motorL
  2162   002786  6E21               	movwf	(PinkMove@mL+1)^0,c
  2163   002788  0EBE               	movlw	low _motorR
  2164   00278A  6E22               	movwf	PinkMove@mR^0,c
  2165   00278C  0E01               	movlw	high _motorR
  2166   00278E  6E23               	movwf	(PinkMove@mR+1)^0,c
  2167   002790  EC31  F02D         	call	_PinkMove	;wreg free
  2168   002794                     
  2169                           ;main.c: 182:                 TMR0H=0;
  2170   002794  0E00               	movlw	0
  2171   002796  6ED4               	movwf	212,c	;volatile
  2172   002798                     
  2173                           ;main.c: 183:                 TMR0L=0;
  2174   002798  0E00               	movlw	0
  2175   00279A  6ED3               	movwf	211,c	;volatile
  2176   00279C                     
  2177                           ;main.c: 184:                 WayBack[move_count]=7;
  2178   00279C  0E80               	movlw	low _WayBack
  2179   00279E  0101               	movlb	1	; () banked
  2180   0027A0  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2181   0027A2  6ED9               	movwf	fsr2l,c
  2182   0027A4  0E01               	movlw	high _WayBack
  2183   0027A6  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2184   0027A8  6EDA               	movwf	fsr2h,c
  2185   0027AA  0E07               	movlw	7
  2186   0027AC  6EDF               	movwf	indf2,c
  2187                           
  2188                           ;main.c: 185:             }
  2189   0027AE  EF1A  F014         	goto	l6036
  2190   0027B2                     l6010:
  2191                           
  2192                           ; BSR set to: 1
  2193   0027B2  0E0A               	movlw	10
  2194   0027B4  196C               	xorwf	main@prev_colour& (0+255),w,b
  2195   0027B6  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2196   0027B8  A4D8               	btfss	status,2,c
  2197   0027BA  EFE1  F013         	goto	u5921
  2198   0027BE  EFE3  F013         	goto	u5920
  2199   0027C2                     u5921:
  2200   0027C2  EF05  F014         	goto	l6018
  2201   0027C6                     u5920:
  2202   0027C6                     
  2203                           ; BSR set to: 1
  2204                           ;main.c: 187:                 lost_count++;
  2205   0027C6  4B66               	infsnz	main@lost_count& (0+255),f,b
  2206   0027C8  2B67               	incf	(main@lost_count+1)& (0+255),f,b
  2207   0027CA                     
  2208                           ; BSR set to: 1
  2209                           ;main.c: 188:                 if (lost_count==4){
  2210   0027CA  0E04               	movlw	4
  2211   0027CC  1966               	xorwf	main@lost_count& (0+255),w,b
  2212   0027CE  1167               	iorwf	(main@lost_count+1)& (0+255),w,b
  2213   0027D0  A4D8               	btfss	status,2,c
  2214   0027D2  EFED  F013         	goto	u5931
  2215   0027D6  EFEF  F013         	goto	u5930
  2216   0027DA                     u5931:
  2217   0027DA  EFF9  F013         	goto	l415
  2218   0027DE                     u5930:
  2219   0027DE                     
  2220                           ; BSR set to: 1
  2221                           ;main.c: 189:                     go_Home(WayBack, Time_forward);
  2222   0027DE  0E80               	movlw	low _WayBack
  2223   0027E0  6E24               	movwf	go_Home@WayBack^0,c
  2224   0027E2  0E01               	movlw	high _WayBack
  2225   0027E4  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2226   0027E6  0E3C               	movlw	low _Time_forward
  2227   0027E8  6E26               	movwf	go_Home@Time_forward^0,c
  2228   0027EA  0E02               	movlw	high _Time_forward
  2229   0027EC  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2230   0027EE  EC82  F01D         	call	_go_Home	;wreg free
  2231   0027F2                     l415:
  2232                           
  2233                           ;main.c: 191:                 RetryMove(&motorL, &motorR);
  2234   0027F2  0EC7               	movlw	low _motorL
  2235   0027F4  6E1A               	movwf	RetryMove@mL^0,c
  2236   0027F6  0E01               	movlw	high _motorL
  2237   0027F8  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2238   0027FA  0EBE               	movlw	low _motorR
  2239   0027FC  6E1C               	movwf	RetryMove@mR^0,c
  2240   0027FE  0E01               	movlw	high _motorR
  2241   002800  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2242   002802  ECF9  F029         	call	_RetryMove	;wreg free
  2243                           
  2244                           ;main.c: 192:             }
  2245   002806  EF1A  F014         	goto	l6036
  2246   00280A                     l6018:
  2247                           
  2248                           ; BSR set to: 1
  2249   00280A  516C               	movf	main@prev_colour& (0+255),w,b
  2250   00280C  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2251   00280E  A4D8               	btfss	status,2,c
  2252   002810  EF0C  F014         	goto	u5941
  2253   002814  EF0E  F014         	goto	u5940
  2254   002818                     u5941:
  2255   002818  EF1A  F014         	goto	l411
  2256   00281C                     u5940:
  2257   00281C                     
  2258                           ; BSR set to: 1
  2259                           ;main.c: 194:                 go_Home(WayBack, Time_forward);
  2260   00281C  0E80               	movlw	low _WayBack
  2261   00281E  6E24               	movwf	go_Home@WayBack^0,c
  2262   002820  0E01               	movlw	high _WayBack
  2263   002822  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2264   002824  0E3C               	movlw	low _Time_forward
  2265   002826  6E26               	movwf	go_Home@Time_forward^0,c
  2266   002828  0E02               	movlw	high _Time_forward
  2267   00282A  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2268   00282C  EC82  F01D         	call	_go_Home	;wreg free
  2269   002830  EF1A  F014         	goto	l6036
  2270   002834                     l411:
  2271   002834                     l6036:
  2272                           
  2273                           ;main.c: 101:     while (run_flag)
  2274   002834  0101               	movlb	1	; () banked
  2275   002836  517C               	movf	_run_flag& (0+255),w,b
  2276   002838  117D               	iorwf	(_run_flag+1)& (0+255),w,b
  2277   00283A  A4D8               	btfss	status,2,c
  2278   00283C  EF22  F014         	goto	u5951
  2279   002840  EF24  F014         	goto	u5950
  2280   002844                     u5951:
  2281   002844  EF1D  F012         	goto	l5896
  2282   002848                     u5950:
  2283   002848                     
  2284                           ; BSR set to: 1
  2285   002848  EF00  F000         	goto	start
  2286   00284C                     __end_of_main:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _turnCalibration *****************
  2290 ;; Defined at:
  2291 ;;		line 357 in file "dc_motor.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2294 ;;		 -> motorL(9), 
  2295 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2296 ;;		 -> motorR(9), 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;Total ram usage:        6 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 4
  2315 ;; This function calls:
  2316 ;;		_turnLeft45
  2317 ;; This function is called by:
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text1
  2323   004274                     __ptext1:
  2324                           	callstack 0
  2325   004274                     _turnCalibration:
  2326                           	callstack 26
  2327   004274                     
  2328                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2329   004274  807E               	bsf	126,0,c	;volatile
  2330   004276                     
  2331                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2332   004276  0E52               	movlw	82
  2333   004278  6E25               	movwf	(??_turnCalibration+1)^0,c
  2334   00427A  0E2B               	movlw	43
  2335   00427C  6E24               	movwf	??_turnCalibration^0,c
  2336   00427E  0E00               	movlw	0
  2337   004280                     u6067:
  2338   004280  2EE8               	decfsz	wreg,f,c
  2339   004282  D7FE               	bra	u6067
  2340   004284  2E24               	decfsz	??_turnCalibration^0,f,c
  2341   004286  D7FC               	bra	u6067
  2342   004288  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2343   00428A  D7FA               	bra	u6067
  2344   00428C  D000               	nop2	
  2345                           
  2346                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2347   00428E  EF01  F022         	goto	l599
  2348   004292                     l600:
  2349                           
  2350                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2351   004292  867C               	bsf	124,3,c	;volatile
  2352   004294                     
  2353                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2354   004294  0EC7               	movlw	low _motorL
  2355   004296  6E1A               	movwf	turnLeft45@mL^0,c
  2356   004298  0E01               	movlw	high _motorL
  2357   00429A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2358   00429C  0EBE               	movlw	low _motorR
  2359   00429E  6E1C               	movwf	turnLeft45@mR^0,c
  2360   0042A0  0E01               	movlw	high _motorR
  2361   0042A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2362   0042A4  EC49  F02E         	call	_turnLeft45	;wreg free
  2363                           
  2364                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2365   0042A8  0EC7               	movlw	low _motorL
  2366   0042AA  6E1A               	movwf	turnLeft45@mL^0,c
  2367   0042AC  0E01               	movlw	high _motorL
  2368   0042AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2369   0042B0  0EBE               	movlw	low _motorR
  2370   0042B2  6E1C               	movwf	turnLeft45@mR^0,c
  2371   0042B4  0E01               	movlw	high _motorR
  2372   0042B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2373   0042B8  EC49  F02E         	call	_turnLeft45	;wreg free
  2374                           
  2375                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2376   0042BC  0EC7               	movlw	low _motorL
  2377   0042BE  6E1A               	movwf	turnLeft45@mL^0,c
  2378   0042C0  0E01               	movlw	high _motorL
  2379   0042C2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2380   0042C4  0EBE               	movlw	low _motorR
  2381   0042C6  6E1C               	movwf	turnLeft45@mR^0,c
  2382   0042C8  0E01               	movlw	high _motorR
  2383   0042CA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2384   0042CC  EC49  F02E         	call	_turnLeft45	;wreg free
  2385                           
  2386                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2387   0042D0  0EC7               	movlw	low _motorL
  2388   0042D2  6E1A               	movwf	turnLeft45@mL^0,c
  2389   0042D4  0E01               	movlw	high _motorL
  2390   0042D6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2391   0042D8  0EBE               	movlw	low _motorR
  2392   0042DA  6E1C               	movwf	turnLeft45@mR^0,c
  2393   0042DC  0E01               	movlw	high _motorR
  2394   0042DE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2395   0042E0  EC49  F02E         	call	_turnLeft45	;wreg free
  2396                           
  2397                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2398   0042E4  EFE6  F021         	goto	l5658
  2399   0042E8                     l602:
  2400                           
  2401                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2402   0042E8  887C               	bsf	124,4,c	;volatile
  2403   0042EA                     
  2404                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2405   0042EA  0EA3               	movlw	163
  2406   0042EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2407   0042EE  0E57               	movlw	87
  2408   0042F0  6E24               	movwf	??_turnCalibration^0,c
  2409   0042F2  0E02               	movlw	2
  2410   0042F4                     u6077:
  2411   0042F4  2EE8               	decfsz	wreg,f,c
  2412   0042F6  D7FE               	bra	u6077
  2413   0042F8  2E24               	decfsz	??_turnCalibration^0,f,c
  2414   0042FA  D7FC               	bra	u6077
  2415   0042FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2416   0042FE  D7FA               	bra	u6077
  2417   004300  D000               	nop2	
  2418                           
  2419                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2420   004302  A48E               	btfss	142,2,c	;volatile
  2421   004304  EF86  F021         	goto	u5581
  2422   004308  EF89  F021         	goto	u5580
  2423   00430C                     u5581:
  2424   00430C  0E01               	movlw	1
  2425   00430E  EF8A  F021         	goto	u5582
  2426   004312                     u5580:
  2427   004312  0E00               	movlw	0
  2428   004314                     u5582:
  2429   004314  6E24               	movwf	??_turnCalibration^0,c
  2430   004316  A68E               	btfss	142,3,c	;volatile
  2431   004318  EF90  F021         	goto	u5591
  2432   00431C  EF93  F021         	goto	u5590
  2433   004320                     u5591:
  2434   004320  0E01               	movlw	1
  2435   004322  EF94  F021         	goto	u5592
  2436   004326                     u5590:
  2437   004326  0E00               	movlw	0
  2438   004328                     u5592:
  2439   004328  1424               	andwf	??_turnCalibration^0,w,c
  2440   00432A  A0E8               	btfss	wreg,0,c
  2441   00432C  EF9A  F021         	goto	u5601
  2442   004330  EF9C  F021         	goto	u5600
  2443   004334                     u5601:
  2444   004334  EFAE  F021         	goto	l603
  2445   004338                     u5600:
  2446   004338                     
  2447                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2448   004338  8680               	bsf	128,3,c	;volatile
  2449                           
  2450                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2451   00433A  8E7C               	bsf	124,7,c	;volatile
  2452   00433C                     
  2453                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2454   00433C  0E52               	movlw	82
  2455   00433E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2456   004340  0E2B               	movlw	43
  2457   004342  6E24               	movwf	??_turnCalibration^0,c
  2458   004344  0E00               	movlw	0
  2459   004346                     u6087:
  2460   004346  2EE8               	decfsz	wreg,f,c
  2461   004348  D7FE               	bra	u6087
  2462   00434A  2E24               	decfsz	??_turnCalibration^0,f,c
  2463   00434C  D7FC               	bra	u6087
  2464   00434E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2465   004350  D7FA               	bra	u6087
  2466   004352  D000               	nop2	
  2467   004354                     
  2468                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2469   004354  9680               	bcf	128,3,c	;volatile
  2470   004356                     
  2471                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2472   004356  9E7C               	bcf	124,7,c	;volatile
  2473                           
  2474                           ;dc_motor.c: 380:             }
  2475   004358  EFE6  F021         	goto	l5658
  2476   00435C                     l603:
  2477   00435C  B68E               	btfsc	142,3,c	;volatile
  2478   00435E  EFB3  F021         	goto	u5611
  2479   004362  EFB5  F021         	goto	u5610
  2480   004366                     u5611:
  2481   004366  EFCA  F021         	goto	l605
  2482   00436A                     u5610:
  2483   00436A                     
  2484                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2485   00436A  0E0A               	movlw	10
  2486   00436C  0100               	movlb	0	; () banked
  2487   00436E  27F7               	addwf	_Turn45Delay& (0+255),f,b
  2488   004370  0E00               	movlw	0
  2489   004372  23F8               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2490   004374                     
  2491                           ; BSR set to: 0
  2492                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2493   004374  8680               	bsf	128,3,c	;volatile
  2494   004376                     
  2495                           ; BSR set to: 0
  2496                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2497   004376  0E52               	movlw	82
  2498   004378  6E25               	movwf	(??_turnCalibration+1)^0,c
  2499   00437A  0E2B               	movlw	43
  2500   00437C  6E24               	movwf	??_turnCalibration^0,c
  2501   00437E  0E00               	movlw	0
  2502   004380                     u6097:
  2503   004380  2EE8               	decfsz	wreg,f,c
  2504   004382  D7FE               	bra	u6097
  2505   004384  2E24               	decfsz	??_turnCalibration^0,f,c
  2506   004386  D7FC               	bra	u6097
  2507   004388  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2508   00438A  D7FA               	bra	u6097
  2509   00438C  D000               	nop2	
  2510   00438E                     
  2511                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2512   00438E  9680               	bcf	128,3,c	;volatile
  2513                           
  2514                           ;dc_motor.c: 387:             }
  2515   004390  EFE6  F021         	goto	l5658
  2516   004394                     l605:
  2517   004394  B48E               	btfsc	142,2,c	;volatile
  2518   004396  EFCF  F021         	goto	u5621
  2519   00439A  EFD1  F021         	goto	u5620
  2520   00439E                     u5621:
  2521   00439E  EFE6  F021         	goto	l604
  2522   0043A2                     u5620:
  2523   0043A2                     
  2524                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2525   0043A2  0100               	movlb	0	; () banked
  2526   0043A4  0EF6               	movlw	246
  2527   0043A6  27F7               	addwf	_Turn45Delay& (0+255),f,b
  2528   0043A8  0EFF               	movlw	255
  2529   0043AA  23F8               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2530   0043AC                     
  2531                           ; BSR set to: 0
  2532                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2533   0043AC  8E7C               	bsf	124,7,c	;volatile
  2534   0043AE                     
  2535                           ; BSR set to: 0
  2536                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2537   0043AE  0E52               	movlw	82
  2538   0043B0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2539   0043B2  0E2B               	movlw	43
  2540   0043B4  6E24               	movwf	??_turnCalibration^0,c
  2541   0043B6  0E00               	movlw	0
  2542   0043B8                     u6107:
  2543   0043B8  2EE8               	decfsz	wreg,f,c
  2544   0043BA  D7FE               	bra	u6107
  2545   0043BC  2E24               	decfsz	??_turnCalibration^0,f,c
  2546   0043BE  D7FC               	bra	u6107
  2547   0043C0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2548   0043C2  D7FA               	bra	u6107
  2549   0043C4  D000               	nop2	
  2550   0043C6                     
  2551                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2552   0043C6  9E7C               	bcf	124,7,c	;volatile
  2553   0043C8  EFE6  F021         	goto	l5658
  2554   0043CC                     l604:
  2555   0043CC                     l5658:
  2556                           
  2557                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2558   0043CC  A48E               	btfss	142,2,c	;volatile
  2559   0043CE  EFEB  F021         	goto	u5631
  2560   0043D2  EFED  F021         	goto	u5630
  2561   0043D6                     u5631:
  2562   0043D6  EFF4  F021         	goto	l610
  2563   0043DA                     u5630:
  2564   0043DA  B68E               	btfsc	142,3,c	;volatile
  2565   0043DC  EFF2  F021         	goto	u5641
  2566   0043E0  EFF4  F021         	goto	u5640
  2567   0043E4                     u5641:
  2568   0043E4  EF74  F021         	goto	l602
  2569   0043E8                     u5640:
  2570   0043E8                     l610:
  2571                           
  2572                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2573   0043E8  987C               	bcf	124,4,c	;volatile
  2574   0043EA                     
  2575                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2576   0043EA  0EA3               	movlw	163
  2577   0043EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2578   0043EE  0E57               	movlw	87
  2579   0043F0  6E24               	movwf	??_turnCalibration^0,c
  2580   0043F2  0E02               	movlw	2
  2581   0043F4                     u6117:
  2582   0043F4  2EE8               	decfsz	wreg,f,c
  2583   0043F6  D7FE               	bra	u6117
  2584   0043F8  2E24               	decfsz	??_turnCalibration^0,f,c
  2585   0043FA  D7FC               	bra	u6117
  2586   0043FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2587   0043FE  D7FA               	bra	u6117
  2588   004400  D000               	nop2	
  2589   004402                     l599:
  2590                           
  2591                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2592   004402  A68E               	btfss	142,3,c	;volatile
  2593   004404  EF06  F022         	goto	u5651
  2594   004408  EF09  F022         	goto	u5650
  2595   00440C                     u5651:
  2596   00440C  0E01               	movlw	1
  2597   00440E  EF0A  F022         	goto	u5652
  2598   004412                     u5650:
  2599   004412  0E00               	movlw	0
  2600   004414                     u5652:
  2601   004414  6E24               	movwf	??_turnCalibration^0,c
  2602   004416  A48E               	btfss	142,2,c	;volatile
  2603   004418  EF10  F022         	goto	u5661
  2604   00441C  EF13  F022         	goto	u5660
  2605   004420                     u5661:
  2606   004420  0E01               	movlw	1
  2607   004422  EF14  F022         	goto	u5662
  2608   004426                     u5660:
  2609   004426  0E00               	movlw	0
  2610   004428                     u5662:
  2611   004428  1424               	andwf	??_turnCalibration^0,w,c
  2612   00442A  A0E8               	btfss	wreg,0,c
  2613   00442C  EF1A  F022         	goto	u5671
  2614   004430  EF1C  F022         	goto	u5670
  2615   004434                     u5671:
  2616   004434  EF49  F021         	goto	l600
  2617   004438                     u5670:
  2618   004438                     
  2619                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2620   004438  967C               	bcf	124,3,c	;volatile
  2621   00443A                     
  2622                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2623   00443A  0EA3               	movlw	163
  2624   00443C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2625   00443E  0E57               	movlw	87
  2626   004440  6E24               	movwf	??_turnCalibration^0,c
  2627   004442  0E02               	movlw	2
  2628   004444                     u6127:
  2629   004444  2EE8               	decfsz	wreg,f,c
  2630   004446  D7FE               	bra	u6127
  2631   004448  2E24               	decfsz	??_turnCalibration^0,f,c
  2632   00444A  D7FC               	bra	u6127
  2633   00444C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2634   00444E  D7FA               	bra	u6127
  2635   004450  D000               	nop2	
  2636   004452  0012               	return		;funcret
  2637   004454                     __end_of_turnCalibration:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _sprintf *****************
  2641 ;; Defined at:
  2642 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2645 ;;		 -> main@buf(100), 
  2646 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2647 ;;		 -> STR_2(35), STR_1(37), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2650 ;;  ap              2   98[BANK0 ] PTR void [1]
  2651 ;;		 -> ?_sprintf(2), 
  2652 ;;  ret             2    0        int 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2   80[BANK0 ] int 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2662 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:       31 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 7
  2669 ;; This function calls:
  2670 ;;		_vfprintf
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text2
  2677   0058C8                     __ptext2:
  2678                           	callstack 0
  2679   0058C8                     _sprintf:
  2680                           	callstack 23
  2681   0058C8  0EB4               	movlw	low (?_sprintf+4)
  2682   0058CA  0100               	movlb	0	; () banked
  2683   0058CC  6FC2               	movwf	sprintf@ap& (0+255),b
  2684   0058CE  0E00               	movlw	high (?_sprintf+4)
  2685   0058D0  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2686   0058D2  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2687   0058D6  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2688   0058DA                     
  2689                           ; BSR set to: 0
  2690   0058DA  0E00               	movlw	0
  2691   0058DC  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2692   0058DE  0E00               	movlw	0
  2693   0058E0  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2694   0058E2                     
  2695                           ; BSR set to: 0
  2696   0058E2  0E00               	movlw	0
  2697   0058E4  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2698   0058E6  0E00               	movlw	0
  2699   0058E8  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2700   0058EA                     
  2701                           ; BSR set to: 0
  2702   0058EA  0EC4               	movlw	low sprintf@f
  2703   0058EC  6FA8               	movwf	vfprintf@fp& (0+255),b
  2704   0058EE  0E00               	movlw	high sprintf@f
  2705   0058F0  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2706   0058F2  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2707   0058F6  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2708   0058FA  0EC2               	movlw	low sprintf@ap
  2709   0058FC  6FAC               	movwf	vfprintf@ap& (0+255),b
  2710   0058FE  0E00               	movlw	high sprintf@ap
  2711   005900  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2712   005902  EC39  F02C         	call	_vfprintf	;wreg free
  2713   005906  0100               	movlb	0	; () banked
  2714   005908  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2715   00590A  25B0               	addwf	sprintf@s& (0+255),w,b
  2716   00590C  6ED9               	movwf	fsr2l,c
  2717   00590E  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2718   005910  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2719   005912  6EDA               	movwf	fsr2h,c
  2720   005914  0E00               	movlw	0
  2721   005916  6EDF               	movwf	indf2,c
  2722   005918                     
  2723                           ; BSR set to: 0
  2724   005918  0012               	return		;funcret
  2725   00591A                     __end_of_sprintf:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _vfprintf *****************
  2729 ;; Defined at:
  2730 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2733 ;;		 -> sprintf@f(11), 
  2734 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2735 ;;		 -> STR_2(35), STR_1(37), 
  2736 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2737 ;;		 -> sprintf@ap(2), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2740 ;;		 -> STR_2(35), STR_1(37), 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  2   72[BANK0 ] int 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:        8 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 6
  2757 ;; This function calls:
  2758 ;;		_vfpfcnvrt
  2759 ;; This function is called by:
  2760 ;;		_sprintf
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text3
  2765   005872                     __ptext3:
  2766                           	callstack 0
  2767   005872                     _vfprintf:
  2768                           	callstack 23
  2769   005872                     
  2770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
>>>>>>> Stashed changes
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
<<<<<<< Updated upstream
  2187   004A48  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2188   004A4C  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2191   004A50  EF38  F025         	goto	l4232
  2192   004A54                     l4230:
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2195   004A54  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2196   004A58  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2197   004A5C  0E57               	movlw	low vfprintf@cfmt
  2198   004A5E  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2199   004A60  0E00               	movlw	high vfprintf@cfmt
  2200   004A62  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2201   004A64  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2202   004A68  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2203   004A6C  EC96  F01C         	call	_vfpfcnvrt	;wreg free
  2204   004A70                     l4232:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2207   004A70  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2208   004A74  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2209   004A78                     	if	0	;tblptru may be non-zero
  2210   004A78                     	endif
  2211   004A78                     	if	0	;tblptru may be non-zero
  2212   004A78                     	endif
  2213   004A78  0008               	tblrd		*
  2214   004A7A  50F5               	movf	tablat,w,c
  2215   004A7C  0900               	iorlw	0
  2216   004A7E  A4D8               	btfss	status,2,c
  2217   004A80  EF44  F025         	goto	u3941
  2218   004A84  EF46  F025         	goto	u3940
  2219   004A88                     u3941:
  2220   004A88  EF2A  F025         	goto	l4230
  2221   004A8C                     u3940:
  2222   004A8C                     
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2224   004A8C  0E00               	movlw	0
  2225   004A8E  6E52               	movwf	(?_vfprintf+1)^0,c
  2226   004A90  0E00               	movlw	0
  2227   004A92  6E51               	movwf	?_vfprintf^0,c
  2228   004A94  0012               	return		;funcret
  2229   004A96                     __end_of_vfprintf:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _vfpfcnvrt *****************
  2233 ;; Defined at:
  2234 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2237 ;;		 -> sprintf@f(11), 
  2238 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2239 ;;		 -> vfprintf@cfmt(2), 
  2240 ;;  ap              2   66[COMRAM] PTR PTR void 
  2241 ;;		 -> sprintf@ap(2), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  convarg         8   70[COMRAM] struct .
  2244 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2245 ;;		 -> STR_1(36), 
  2246 ;;  i               2    0        int 
  2247 ;;  done            2    0        int 
  2248 ;;  c               1    0        unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2258 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;Total ram usage:       18 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 6
  2265 ;; This function calls:
  2266 ;;		_dtoa
  2267 ;;		_fputc
  2268 ;; This function is called by:
  2269 ;;		_vfprintf
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text3
  2274   00392C                     __ptext3:
  2275                           	callstack 0
  2276   00392C                     _vfpfcnvrt:
  2277                           	callstack 22
  2278   00392C                     
  2279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
=======
  2771   005872  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2772   005876  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2775   00587A  EF4E  F02C         	goto	l5318
  2776   00587E                     l5316:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2779   00587E  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2780   005882  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2781   005886  0EAE               	movlw	low vfprintf@cfmt
  2782   005888  0100               	movlb	0	; () banked
  2783   00588A  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2784   00588C  0E00               	movlw	high vfprintf@cfmt
  2785   00588E  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2786   005890  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2787   005894  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2788   005898  ECFF  F01B         	call	_vfpfcnvrt	;wreg free
  2789   00589C                     l5318:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2792   00589C  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2793   0058A0  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2794   0058A4                     	if	0	;tblptru may be non-zero
  2795   0058A4                     	endif
  2796   0058A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2797   0058A4  0E00               	movlw	low (__mediumconst shr (0+16))
  2798   0058A6  6EF8               	movwf	tblptru,c
  2799   0058A8                     	endif
  2800   0058A8  0008               	tblrd		*
  2801   0058AA  50F5               	movf	tablat,w,c
  2802   0058AC  0900               	iorlw	0
  2803   0058AE  A4D8               	btfss	status,2,c
  2804   0058B0  EF5C  F02C         	goto	u5201
  2805   0058B4  EF5E  F02C         	goto	u5200
  2806   0058B8                     u5201:
  2807   0058B8  EF3F  F02C         	goto	l5316
  2808   0058BC                     u5200:
  2809   0058BC                     
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2811   0058BC  0E00               	movlw	0
  2812   0058BE  0100               	movlb	0	; () banked
  2813   0058C0  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2814   0058C2  0E00               	movlw	0
  2815   0058C4  6FA8               	movwf	?_vfprintf& (0+255),b
  2816   0058C6                     
  2817                           ; BSR set to: 0
  2818   0058C6  0012               	return		;funcret
  2819   0058C8                     __end_of_vfprintf:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _vfpfcnvrt *****************
  2823 ;; Defined at:
  2824 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2827 ;;		 -> sprintf@f(11), 
  2828 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2829 ;;		 -> vfprintf@cfmt(2), 
  2830 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2831 ;;		 -> sprintf@ap(2), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  convarg         8   61[BANK0 ] struct .
  2834 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2835 ;;		 -> STR_2(35), STR_1(37), 
  2836 ;;  i               2    0        int 
  2837 ;;  done            2    0        int 
  2838 ;;  c               1   69[BANK0 ] unsigned char 
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2848 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2849 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2850 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2851 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;Total ram usage:       19 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 5
  2855 ;; This function calls:
  2856 ;;		_dtoa
  2857 ;;		_efgtoa
  2858 ;;		_fputc
  2859 ;; This function is called by:
  2860 ;;		_vfprintf
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text4
  2865   0037FE                     __ptext4:
  2866                           	callstack 0
  2867   0037FE                     _vfpfcnvrt:
  2868                           	callstack 23
  2869   0037FE                     
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
>>>>>>> Stashed changes
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
<<<<<<< Updated upstream
  2280   00392C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2281   003930  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2282   003934  CFDE FFF6          	movff	postinc2,tblptrl
  2283   003938  CFDD FFF7          	movff	postdec2,tblptrh
  2284   00393C                     	if	0	;tblptru may be non-zero
  2285   00393C                     	endif
  2286   00393C                     	if	0	;tblptru may be non-zero
  2287   00393C                     	endif
  2288   00393C  0008               	tblrd		*
  2289   00393E  50F5               	movf	tablat,w,c
  2290   003940  0A25               	xorlw	37
  2291   003942  A4D8               	btfss	status,2,c
  2292   003944  EFA6  F01C         	goto	u3281
  2293   003948  EFA8  F01C         	goto	u3280
  2294   00394C                     u3281:
  2295   00394C  EF29  F01D         	goto	l3774
  2296   003950                     u3280:
  2297   003950                     
  2298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2299   003950  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2300   003954  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2301   003958  2ADE               	incf	postinc2,f,c
  2302   00395A  0E00               	movlw	0
  2303   00395C  22DD               	addwfc	postdec2,f,c
  2304   00395E                     
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2306   00395E  0E00               	movlw	0
  2307   003960  0101               	movlb	1	; () banked
  2308   003962  6F5D               	movwf	(_width+1)& (0+255),b
  2309   003964  0E00               	movlw	0
  2310   003966  6F5C               	movwf	_width& (0+255),b
  2311   003968  C15C  F0F4         	movff	_width,_flags
  2312   00396C                     
  2313                           ; BSR set to: 1
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2315   00396C  0100               	movlb	0	; () banked
  2316   00396E  69EE               	setf	_prec& (0+255),b
  2317   003970  69EF               	setf	(_prec+1)& (0+255),b
  2318   003972                     
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2321   003972  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322   003976  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323   00397A  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2324   00397E  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2325   003982                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2328   003982  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2329   003986  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2330   00398A                     	if	0	;tblptru may be non-zero
  2331   00398A                     	endif
  2332   00398A                     	if	0	;tblptru may be non-zero
  2333   00398A                     	endif
  2334   00398A  0008               	tblrd		*
  2335   00398C  50F5               	movf	tablat,w,c
  2336   00398E  0A64               	xorlw	100
  2337   003990  B4D8               	btfsc	status,2,c
  2338   003992  EFCD  F01C         	goto	u3291
  2339   003996  EFCF  F01C         	goto	u3290
  2340   00399A                     u3291:
  2341   00399A  EFDD  F01C         	goto	l3764
  2342   00399E                     u3290:
  2343   00399E                     
  2344                           ; BSR set to: 0
  2345   00399E  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2346   0039A2  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2347   0039A6                     	if	0	;tblptru may be non-zero
  2348   0039A6                     	endif
  2349   0039A6                     	if	0	;tblptru may be non-zero
  2350   0039A6                     	endif
  2351   0039A6  0008               	tblrd		*
  2352   0039A8  50F5               	movf	tablat,w,c
  2353   0039AA  0A69               	xorlw	105
  2354   0039AC  A4D8               	btfss	status,2,c
  2355   0039AE  EFDB  F01C         	goto	u3301
  2356   0039B2  EFDD  F01C         	goto	u3300
  2357   0039B6                     u3301:
  2358   0039B6  EF20  F01D         	goto	l3770
  2359   0039BA                     u3300:
  2360   0039BA                     l3764:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2364   0039BA  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2365   0039BE  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2366   0039C2  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2367   0039C6  0E02               	movlw	2
  2368   0039C8  26DE               	addwf	postinc2,f,c
  2369   0039CA  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2370   0039CE  0E00               	movlw	0
  2371   0039D0  22DD               	addwfc	postdec2,f,c
  2372   0039D2  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2373   0039D6  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2374   0039DA  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2375   0039DE  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2376   0039E2  0E00               	movlw	0
  2377   0039E4  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2378   0039E6  0EFF               	movlw	-1
  2379   0039E8  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2380   0039EA  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2381   0039EC  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2382   0039EE  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2383   0039F0  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2384   0039F2  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2387   0039F4  0E01               	movlw	1
  2388   0039F6  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2389   0039F8  6E45               	movwf	??_vfpfcnvrt^0,c
  2390   0039FA  0E00               	movlw	0
  2391   0039FC  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2392   0039FE  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2393   003A00  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394   003A04  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395   003A08  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2396   003A0C  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2397   003A10                     
  2398                           ; BSR set to: 0
  2399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2400   003A10  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2401   003A14  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2402   003A18  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2403   003A1C  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2404   003A20  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2405   003A24  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2406   003A28  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2407   003A2C  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2408   003A30  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2409   003A34  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2410   003A38  EC51  F018         	call	_dtoa	;wreg free
  2411   003A3C  EF3D  F01D         	goto	l1398
  2412   003A40                     l3770:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2415   003A40  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416   003A44  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417   003A48  2ADE               	incf	postinc2,f,c
  2418   003A4A  0E00               	movlw	0
  2419   003A4C  22DD               	addwfc	postdec2,f,c
  2420   003A4E  EF3D  F01D         	goto	l1398
  2421   003A52                     l3774:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2424   003A52  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   003A56  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   003A5A  CFDE FFF6          	movff	postinc2,tblptrl
  2427   003A5E  CFDD FFF7          	movff	postdec2,tblptrh
  2428   003A62                     	if	0	;tblptru may be non-zero
  2429   003A62                     	endif
  2430   003A62                     	if	0	;tblptru may be non-zero
  2431   003A62                     	endif
  2432   003A62  0008               	tblrd		*
  2433   003A64  50F5               	movf	tablat,w,c
  2434   003A66  6E01               	movwf	fputc@c^0,c
  2435   003A68  6A02               	clrf	(fputc@c+1)^0,c
  2436   003A6A  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2437   003A6E  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2438   003A72  ECC0  F01D         	call	_fputc	;wreg free
  2439   003A76  EF20  F01D         	goto	l3770
  2440   003A7A                     l1398:
  2441   003A7A  0012               	return		;funcret
  2442   003A7C                     __end_of_vfpfcnvrt:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _dtoa *****************
  2446 ;; Defined at:
  2447 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2450 ;;		 -> sprintf@f(11), 
  2451 ;;  d               8   29[COMRAM] long long 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  n               8   51[COMRAM] long long 
  2454 ;;  i               2   59[COMRAM] int 
  2455 ;;  w               2   49[COMRAM] int 
  2456 ;;  p               2   47[COMRAM] int 
  2457 ;;  s               1   61[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:       35 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 5
  2474 ;; This function calls:
  2475 ;;		___aodiv
  2476 ;;		___aomod
  2477 ;;		_abs
  2478 ;;		_pad
  2479 ;; This function is called by:
  2480 ;;		_vfpfcnvrt
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text4
  2485   0030A2                     __ptext4:
  2486                           	callstack 0
  2487   0030A2                     _dtoa:
  2488                           	callstack 22
  2489   0030A2                     
  2490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2491   0030A2  C01E  F034         	movff	dtoa@d,dtoa@n
  2492   0030A6  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2493   0030AA  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2494   0030AE  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2495   0030B2  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2496   0030B6  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2497   0030BA  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2498   0030BE  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2499   0030C2                     
  2500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2501   0030C2  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2502   0030C4  EF66  F018         	goto	u2761
  2503   0030C8  EF69  F018         	goto	u2760
  2504   0030CC                     u2761:
  2505   0030CC  0E01               	movlw	1
  2506   0030CE  EF6A  F018         	goto	u2770
  2507   0030D2                     u2760:
  2508   0030D2  0E00               	movlw	0
  2509   0030D4                     u2770:
  2510   0030D4  6E3E               	movwf	dtoa@s^0,c
  2511   0030D6                     
  2512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2513   0030D6  503E               	movf	dtoa@s^0,w,c
  2514   0030D8  B4D8               	btfsc	status,2,c
  2515   0030DA  EF71  F018         	goto	u2781
  2516   0030DE  EF73  F018         	goto	u2780
  2517   0030E2                     u2781:
  2518   0030E2  EF83  F018         	goto	l3444
  2519   0030E6                     u2780:
  2520   0030E6                     
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2522   0030E6  1E3B               	comf	(dtoa@n+7)^0,f,c
  2523   0030E8  1E3A               	comf	(dtoa@n+6)^0,f,c
  2524   0030EA  1E39               	comf	(dtoa@n+5)^0,f,c
  2525   0030EC  1E38               	comf	(dtoa@n+4)^0,f,c
  2526   0030EE  1E37               	comf	(dtoa@n+3)^0,f,c
  2527   0030F0  1E36               	comf	(dtoa@n+2)^0,f,c
  2528   0030F2  1E35               	comf	(dtoa@n+1)^0,f,c
  2529   0030F4  6C34               	negf	dtoa@n^0,c
  2530   0030F6  0E00               	movlw	0
  2531   0030F8  2235               	addwfc	(dtoa@n+1)^0,f,c
  2532   0030FA  2236               	addwfc	(dtoa@n+2)^0,f,c
  2533   0030FC  2237               	addwfc	(dtoa@n+3)^0,f,c
  2534   0030FE  2238               	addwfc	(dtoa@n+4)^0,f,c
  2535   003100  2239               	addwfc	(dtoa@n+5)^0,f,c
  2536   003102  223A               	addwfc	(dtoa@n+6)^0,f,c
  2537   003104  223B               	addwfc	(dtoa@n+7)^0,f,c
  2538   003106                     l3444:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2541   003106  0100               	movlb	0	; () banked
  2542   003108  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  2543   00310A  EF91  F018         	goto	u2790
  2544   00310E  51EF               	movf	(_prec+1)& (0+255),w,b
  2545   003110  E106               	bnz	u2791
  2546   003112  05EE               	decf	_prec& (0+255),w,b
  2547   003114  B0D8               	btfsc	status,0,c
  2548   003116  EF8F  F018         	goto	u2791
  2549   00311A  EF91  F018         	goto	u2790
  2550   00311E                     u2791:
  2551   00311E  EF97  F018         	goto	l1377
  2552   003122                     u2790:
  2553   003122                     
  2554                           ; BSR set to: 0
  2555   003122  0E00               	movlw	0
  2556   003124  6E31               	movwf	(dtoa@p+1)^0,c
  2557   003126  0E01               	movlw	1
  2558   003128  6E30               	movwf	dtoa@p^0,c
  2559   00312A  EF9B  F018         	goto	l1379
  2560   00312E                     l1377:
  2561                           
  2562                           ; BSR set to: 0
  2563   00312E  C0EE  F030         	movff	_prec,dtoa@p
  2564   003132  C0EF  F031         	movff	_prec+1,dtoa@p+1
  2565   003136                     l1379:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2569   003136  C15C  F032         	movff	_width,dtoa@w
  2570   00313A  C15D  F033         	movff	_width+1,dtoa@w+1
  2571   00313E                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2574   00313E  503E               	movf	dtoa@s^0,w,c
  2575   003140  B4D8               	btfsc	status,2,c
  2576   003142  EFA5  F018         	goto	u2801
  2577   003146  EFA7  F018         	goto	u2800
  2578   00314A                     u2801:
  2579   00314A  EFBE  F018         	goto	l1380
  2580   00314E                     u2800:
  2581   00314E                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2584   00314E  0632               	decf	dtoa@w^0,f,c
  2585   003150  A0D8               	btfss	status,0,c
  2586   003152  0633               	decf	(dtoa@w+1)^0,f,c
  2587   003154                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2590   003154  503E               	movf	dtoa@s^0,w,c
  2591   003156  A4D8               	btfss	status,2,c
  2592   003158  EFB0  F018         	goto	u2811
  2593   00315C  EFB2  F018         	goto	u2810
  2594   003160                     u2811:
  2595   003160  EFB8  F018         	goto	l3456
  2596   003164                     u2810:
  2597   003164                     
  2598                           ; BSR set to: 0
  2599   003164  0E00               	movlw	0
  2600   003166  6E2F               	movwf	(_dtoa$2629+1)^0,c
  2601   003168  0E2B               	movlw	43
  2602   00316A  6E2E               	movwf	_dtoa$2629^0,c
  2603   00316C  EFBC  F018         	goto	l3458
  2604   003170                     l3456:
  2605                           
  2606                           ; BSR set to: 0
  2607   003170  0E00               	movlw	0
  2608   003172  6E2F               	movwf	(_dtoa$2629+1)^0,c
  2609   003174  0E2D               	movlw	45
  2610   003176  6E2E               	movwf	_dtoa$2629^0,c
  2611   003178                     l3458:
  2612                           
  2613                           ; BSR set to: 0
  2614   003178  C02E  F03E         	movff	_dtoa$2629,dtoa@s
  2615   00317C                     l1380:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2619   00317C  0E00               	movlw	0
  2620   00317E  6E3D               	movwf	(dtoa@i+1)^0,c
  2621   003180  0E1F               	movlw	31
  2622   003182  6E3C               	movwf	dtoa@i^0,c
  2623   003184                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2626   003184  0E00               	movlw	0
  2627   003186  0101               	movlb	1	; () banked
  2628   003188  6FAF               	movwf	(_dbuf+31)& (0+255),b
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2631   00318A  EF43  F019         	goto	l3472
  2632   00318E                     l3462:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2635   00318E  063C               	decf	dtoa@i^0,f,c
  2636   003190  A0D8               	btfss	status,0,c
  2637   003192  063D               	decf	(dtoa@i+1)^0,f,c
  2638   003194                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2640   003194  0E90               	movlw	low _dbuf
  2641   003196  243C               	addwf	dtoa@i^0,w,c
  2642   003198  6ED9               	movwf	fsr2l,c
  2643   00319A  0E01               	movlw	high _dbuf
  2644   00319C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2645   00319E  6EDA               	movwf	fsr2h,c
  2646   0031A0  C034  F001         	movff	dtoa@n,___aomod@dividend
  2647   0031A4  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2648   0031A8  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2649   0031AC  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2650   0031B0  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2651   0031B4  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2652   0031B8  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2653   0031BC  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2654   0031C0  0E0A               	movlw	10
  2655   0031C2  6E09               	movwf	___aomod@divisor^0,c
  2656   0031C4  0E00               	movlw	0
  2657   0031C6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2658   0031C8  0E00               	movlw	0
  2659   0031CA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2660   0031CC  0E00               	movlw	0
  2661   0031CE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2662   0031D0  0E00               	movlw	0
  2663   0031D2  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2664   0031D4  0E00               	movlw	0
  2665   0031D6  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2666   0031D8  0E00               	movlw	0
  2667   0031DA  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2668   0031DC  0E00               	movlw	0
  2669   0031DE  6E10               	movwf	(___aomod@divisor+7)^0,c
  2670   0031E0  ECE4  F01B         	call	___aomod	;wreg free
  2671   0031E4  C001  F026         	movff	?___aomod,??_dtoa
  2672   0031E8  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2673   0031EC  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2674   0031F0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2675   0031F4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2676   0031F8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2677   0031FC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2678   003200  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2679   003204  C026  F013         	movff	??_dtoa,abs@a
  2680   003208  C027  F014         	movff	??_dtoa+1,abs@a+1
  2681   00320C  ECB1  F025         	call	_abs	;wreg free
  2682   003210  5013               	movf	?_abs^0,w,c
  2683   003212  0F30               	addlw	48
  2684   003214  6EDF               	movwf	indf2,c
  2685   003216                     
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2687   003216  0630               	decf	dtoa@p^0,f,c
  2688   003218  A0D8               	btfss	status,0,c
  2689   00321A  0631               	decf	(dtoa@p+1)^0,f,c
  2690   00321C                     
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2692   00321C  0632               	decf	dtoa@w^0,f,c
  2693   00321E  A0D8               	btfss	status,0,c
  2694   003220  0633               	decf	(dtoa@w+1)^0,f,c
  2695   003222                     
  2696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2697   003222  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2698   003226  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2699   00322A  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2700   00322E  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2701   003232  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2702   003236  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2703   00323A  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2704   00323E  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2705   003242  0E0A               	movlw	10
  2706   003244  6E09               	movwf	___aodiv@divisor^0,c
  2707   003246  0E00               	movlw	0
  2708   003248  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2709   00324A  0E00               	movlw	0
  2710   00324C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2711   00324E  0E00               	movlw	0
  2712   003250  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2713   003252  0E00               	movlw	0
  2714   003254  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2715   003256  0E00               	movlw	0
  2716   003258  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2717   00325A  0E00               	movlw	0
  2718   00325C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2719   00325E  0E00               	movlw	0
  2720   003260  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2721   003262  EC6A  F01A         	call	___aodiv	;wreg free
  2722   003266  C001  F034         	movff	?___aodiv,dtoa@n
  2723   00326A  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2724   00326E  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2725   003272  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2726   003276  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2727   00327A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2728   00327E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2729   003282  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2730   003286                     l3472:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2733   003286  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2734   003288  EF4E  F019         	goto	u2821
  2735   00328C  503D               	movf	(dtoa@i+1)^0,w,c
  2736   00328E  E108               	bnz	u2820
  2737   003290  043C               	decf	dtoa@i^0,w,c
  2738   003292  A0D8               	btfss	status,0,c
  2739   003294  EF4E  F019         	goto	u2821
  2740   003298  EF50  F019         	goto	u2820
  2741   00329C                     u2821:
  2742   00329C  EF6C  F019         	goto	l3478
  2743   0032A0                     u2820:
  2744   0032A0  5034               	movf	dtoa@n^0,w,c
  2745   0032A2  1035               	iorwf	(dtoa@n+1)^0,w,c
  2746   0032A4  1036               	iorwf	(dtoa@n+2)^0,w,c
  2747   0032A6  1037               	iorwf	(dtoa@n+3)^0,w,c
  2748   0032A8  1038               	iorwf	(dtoa@n+4)^0,w,c
  2749   0032AA  1039               	iorwf	(dtoa@n+5)^0,w,c
  2750   0032AC  103A               	iorwf	(dtoa@n+6)^0,w,c
  2751   0032AE  103B               	iorwf	(dtoa@n+7)^0,w,c
  2752   0032B0  A4D8               	btfss	status,2,c
  2753   0032B2  EF5D  F019         	goto	u2831
  2754   0032B6  EF5F  F019         	goto	u2830
  2755   0032BA                     u2831:
  2756   0032BA  EFC7  F018         	goto	l3462
  2757   0032BE                     u2830:
  2758   0032BE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2759   0032C0  EF6C  F019         	goto	u2840
  2760   0032C4  5031               	movf	(dtoa@p+1)^0,w,c
  2761   0032C6  E106               	bnz	u2841
  2762   0032C8  0430               	decf	dtoa@p^0,w,c
  2763   0032CA  B0D8               	btfsc	status,0,c
  2764   0032CC  EF6A  F019         	goto	u2841
  2765   0032D0  EF6C  F019         	goto	u2840
  2766   0032D4                     u2841:
  2767   0032D4  EFC7  F018         	goto	l3462
  2768   0032D8                     u2840:
  2769   0032D8                     l3478:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2772   0032D8  503E               	movf	dtoa@s^0,w,c
  2773   0032DA  B4D8               	btfsc	status,2,c
  2774   0032DC  EF72  F019         	goto	u2851
  2775   0032E0  EF74  F019         	goto	u2850
  2776   0032E4                     u2851:
  2777   0032E4  EF7F  F019         	goto	l3484
  2778   0032E8                     u2850:
  2779   0032E8                     
  2780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2781   0032E8  063C               	decf	dtoa@i^0,f,c
  2782   0032EA  A0D8               	btfss	status,0,c
  2783   0032EC  063D               	decf	(dtoa@i+1)^0,f,c
  2784   0032EE                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2786   0032EE  0E90               	movlw	low _dbuf
  2787   0032F0  243C               	addwf	dtoa@i^0,w,c
  2788   0032F2  6ED9               	movwf	fsr2l,c
  2789   0032F4  0E01               	movlw	high _dbuf
  2790   0032F6  203D               	addwfc	(dtoa@i+1)^0,w,c
  2791   0032F8  6EDA               	movwf	fsr2h,c
  2792   0032FA  C03E  FFDF         	movff	dtoa@s,indf2
  2793   0032FE                     l3484:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2796   0032FE  C01C  F011         	movff	dtoa@fp,pad@fp
  2797   003302  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2798   003306  0E90               	movlw	low _dbuf
  2799   003308  243C               	addwf	dtoa@i^0,w,c
  2800   00330A  6E13               	movwf	pad@buf^0,c
  2801   00330C  0E01               	movlw	high _dbuf
  2802   00330E  203D               	addwfc	(dtoa@i+1)^0,w,c
  2803   003310  6E14               	movwf	(pad@buf+1)^0,c
  2804   003312  C032  F015         	movff	dtoa@w,pad@p
  2805   003316  C033  F016         	movff	dtoa@w+1,pad@p+1
  2806   00331A  EC44  F021         	call	_pad	;wreg free
  2807   00331E  0012               	return		;funcret
  2808   003320                     __end_of_dtoa:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _pad *****************
  2812 ;; Defined at:
  2813 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2816 ;;		 -> sprintf@f(11), 
  2817 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2818 ;;		 -> dbuf(32), 
  2819 ;;  p               2   20[COMRAM] int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  w               2   25[COMRAM] int 
  2822 ;;  i               2   23[COMRAM] int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;Total ram usage:       11 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 4
  2839 ;; This function calls:
  2840 ;;		_fputc
  2841 ;;		_fputs
  2842 ;; This function is called by:
  2843 ;;		_dtoa
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text5
  2848   004288                     __ptext5:
  2849                           	callstack 0
  2850   004288                     _pad:
  2851                           	callstack 22
  2852   004288                     
  2853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2854   004288  BE16               	btfsc	(pad@p+1)^0,7,c
  2855   00428A  EF49  F021         	goto	u2611
  2856   00428E  EF4B  F021         	goto	u2610
  2857   004292                     u2611:
  2858   004292  EF51  F021         	goto	l3348
  2859   004296                     u2610:
  2860   004296  C015  F01A         	movff	pad@p,pad@w
  2861   00429A  C016  F01B         	movff	pad@p+1,pad@w+1
  2862   00429E  EF55  F021         	goto	l1368
  2863   0042A2                     l3348:
  2864   0042A2  0E00               	movlw	0
  2865   0042A4  6E1B               	movwf	(pad@w+1)^0,c
  2866   0042A6  0E00               	movlw	0
  2867   0042A8  6E1A               	movwf	pad@w^0,c
  2868   0042AA                     l1368:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2871   0042AA  0E00               	movlw	0
  2872   0042AC  6E19               	movwf	(pad@i+1)^0,c
  2873   0042AE  0E00               	movlw	0
  2874   0042B0  6E18               	movwf	pad@i^0,c
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2877   0042B2  EF67  F021         	goto	l3354
  2878   0042B6                     l3350:
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2881   0042B6  0E00               	movlw	0
  2882   0042B8  6E02               	movwf	(fputc@c+1)^0,c
  2883   0042BA  0E20               	movlw	32
  2884   0042BC  6E01               	movwf	fputc@c^0,c
  2885   0042BE  C011  F003         	movff	pad@fp,fputc@fp
  2886   0042C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2887   0042C6  ECC0  F01D         	call	_fputc	;wreg free
  2888   0042CA                     
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2890   0042CA  4A18               	infsnz	pad@i^0,f,c
  2891   0042CC  2A19               	incf	(pad@i+1)^0,f,c
  2892   0042CE                     l3354:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2895   0042CE  501A               	movf	pad@w^0,w,c
  2896   0042D0  5C18               	subwf	pad@i^0,w,c
  2897   0042D2  5019               	movf	(pad@i+1)^0,w,c
  2898   0042D4  0A80               	xorlw	128
  2899   0042D6  6E17               	movwf	??_pad^0,c
  2900   0042D8  501B               	movf	(pad@w+1)^0,w,c
  2901   0042DA  0A80               	xorlw	128
  2902   0042DC  5817               	subwfb	??_pad^0,w,c
  2903   0042DE  A0D8               	btfss	status,0,c
  2904   0042E0  EF74  F021         	goto	u2621
  2905   0042E4  EF76  F021         	goto	u2620
  2906   0042E8                     u2621:
  2907   0042E8  EF5B  F021         	goto	l3350
  2908   0042EC                     u2620:
  2909   0042EC                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2911   0042EC  C013  F00A         	movff	pad@buf,fputs@s
  2912   0042F0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2913   0042F4  C011  F00C         	movff	pad@fp,fputs@fp
  2914   0042F8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2915   0042FC  EC6E  F025         	call	_fputs	;wreg free
  2916   004300  0012               	return		;funcret
  2917   004302                     __end_of_pad:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _fputs *****************
  2921 ;; Defined at:
  2922 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2925 ;;		 -> dbuf(32), 
  2926 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2927 ;;		 -> sprintf@f(11), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  i               2   14[COMRAM] int 
  2930 ;;  c               1   13[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    9[COMRAM] int 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;Total ram usage:        7 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 3
  2947 ;; This function calls:
  2948 ;;		_fputc
  2949 ;; This function is called by:
  2950 ;;		_pad
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text6
  2955   004ADC                     __ptext6:
  2956                           	callstack 0
  2957   004ADC                     _fputs:
  2958                           	callstack 22
  2959   004ADC  0E00               	movlw	0
  2960   004ADE  6E10               	movwf	(fputs@i+1)^0,c
  2961   004AE0  0E00               	movlw	0
  2962   004AE2  6E0F               	movwf	fputs@i^0,c
  2963   004AE4  EF7F  F025         	goto	l3246
  2964   004AE8                     l3242:
  2965   004AE8  C00E  F001         	movff	fputs@c,fputc@c
  2966   004AEC  6A02               	clrf	(fputc@c+1)^0,c
  2967   004AEE  C00C  F003         	movff	fputs@fp,fputc@fp
  2968   004AF2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2969   004AF6  ECC0  F01D         	call	_fputc	;wreg free
  2970   004AFA  4A0F               	infsnz	fputs@i^0,f,c
  2971   004AFC  2A10               	incf	(fputs@i+1)^0,f,c
  2972   004AFE                     l3246:
  2973   004AFE  500F               	movf	fputs@i^0,w,c
  2974   004B00  240A               	addwf	fputs@s^0,w,c
  2975   004B02  6ED9               	movwf	fsr2l,c
  2976   004B04  5010               	movf	(fputs@i+1)^0,w,c
  2977   004B06  200B               	addwfc	(fputs@s+1)^0,w,c
  2978   004B08  6EDA               	movwf	fsr2h,c
  2979   004B0A  50DF               	movf	indf2,w,c
  2980   004B0C  6E0E               	movwf	fputs@c^0,c
  2981   004B0E  500E               	movf	fputs@c^0,w,c
  2982   004B10  A4D8               	btfss	status,2,c
  2983   004B12  EF8D  F025         	goto	u2451
  2984   004B16  EF8F  F025         	goto	u2450
  2985   004B1A                     u2451:
  2986   004B1A  EF74  F025         	goto	l3242
  2987   004B1E                     u2450:
  2988   004B1E  0012               	return		;funcret
  2989   004B20                     __end_of_fputs:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _fputc *****************
  2993 ;; Defined at:
  2994 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  c               2    0[COMRAM] int 
  2997 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2998 ;;		 -> sprintf@f(11), 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  2    0[COMRAM] int 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;Total ram usage:        9 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 2
  3017 ;; This function calls:
  3018 ;;		_putch
  3019 ;; This function is called by:
  3020 ;;		_pad
  3021 ;;		_vfpfcnvrt
  3022 ;;		_fputs
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text7
  3027   003B80                     __ptext7:
  3028                           	callstack 0
  3029   003B80                     _fputc:
  3030                           	callstack 25
  3031   003B80  5003               	movf	fputc@fp^0,w,c
  3032   003B82  1004               	iorwf	(fputc@fp+1)^0,w,c
  3033   003B84  B4D8               	btfsc	status,2,c
  3034   003B86  EFC7  F01D         	goto	u2381
  3035   003B8A  EFC9  F01D         	goto	u2380
  3036   003B8E                     u2381:
  3037   003B8E  EFD2  F01D         	goto	l3202
  3038   003B92                     u2380:
  3039   003B92  5003               	movf	fputc@fp^0,w,c
  3040   003B94  1004               	iorwf	(fputc@fp+1)^0,w,c
  3041   003B96  A4D8               	btfss	status,2,c
  3042   003B98  EFD0  F01D         	goto	u2391
  3043   003B9C  EFD2  F01D         	goto	u2390
  3044   003BA0                     u2391:
  3045   003BA0  EFD7  F01D         	goto	l3204
  3046   003BA4                     u2390:
  3047   003BA4                     l3202:
  3048   003BA4  5001               	movf	fputc@c^0,w,c
  3049   003BA6  EC01  F027         	call	_putch
  3050   003BAA  EF24  F01E         	goto	l1423
  3051   003BAE                     l3204:
  3052   003BAE  EE20 F009          	lfsr	2,9
  3053   003BB2  5003               	movf	fputc@fp^0,w,c
  3054   003BB4  26D9               	addwf	fsr2l,f,c
  3055   003BB6  5004               	movf	(fputc@fp+1)^0,w,c
  3056   003BB8  22DA               	addwfc	fsr2h,f,c
  3057   003BBA  50DE               	movf	postinc2,w,c
  3058   003BBC  10DE               	iorwf	postinc2,w,c
  3059   003BBE  B4D8               	btfsc	status,2,c
  3060   003BC0  EFE4  F01D         	goto	u2401
  3061   003BC4  EFE6  F01D         	goto	u2400
  3062   003BC8                     u2401:
  3063   003BC8  EF01  F01E         	goto	l3208
  3064   003BCC                     u2400:
  3065   003BCC  EE20 F009          	lfsr	2,9
  3066   003BD0  5003               	movf	fputc@fp^0,w,c
  3067   003BD2  26D9               	addwf	fsr2l,f,c
  3068   003BD4  5004               	movf	(fputc@fp+1)^0,w,c
  3069   003BD6  22DA               	addwfc	fsr2h,f,c
  3070   003BD8  EE10 F003          	lfsr	1,3
  3071   003BDC  5003               	movf	fputc@fp^0,w,c
  3072   003BDE  26E1               	addwf	fsr1l,f,c
  3073   003BE0  5004               	movf	(fputc@fp+1)^0,w,c
  3074   003BE2  22E2               	addwfc	fsr1h,f,c
  3075   003BE4  50DE               	movf	postinc2,w,c
  3076   003BE6  5CE6               	subwf	postinc1,w,c
  3077   003BE8  50E6               	movf	postinc1,w,c
  3078   003BEA  0A80               	xorlw	128
  3079   003BEC  6E09               	movwf	(??_fputc+4)^0,c
  3080   003BEE  50DE               	movf	postinc2,w,c
  3081   003BF0  0A80               	xorlw	128
  3082   003BF2  5809               	subwfb	(??_fputc+4)^0,w,c
  3083   003BF4  B0D8               	btfsc	status,0,c
  3084   003BF6  EFFF  F01D         	goto	u2411
  3085   003BFA  EF01  F01E         	goto	u2410
  3086   003BFE                     u2411:
  3087   003BFE  EF24  F01E         	goto	l1423
  3088   003C02                     u2410:
  3089   003C02                     l3208:
  3090   003C02  EE20 F003          	lfsr	2,3
  3091   003C06  5003               	movf	fputc@fp^0,w,c
  3092   003C08  26D9               	addwf	fsr2l,f,c
  3093   003C0A  5004               	movf	(fputc@fp+1)^0,w,c
  3094   003C0C  22DA               	addwfc	fsr2h,f,c
  3095   003C0E  CFDE F005          	movff	postinc2,??_fputc
  3096   003C12  CFDD F006          	movff	postdec2,??_fputc+1
  3097   003C16  C003  FFD9         	movff	fputc@fp,fsr2l
  3098   003C1A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3099   003C1E  CFDE F007          	movff	postinc2,??_fputc+2
  3100   003C22  CFDD F008          	movff	postdec2,??_fputc+3
  3101   003C26  5005               	movf	??_fputc^0,w,c
  3102   003C28  2407               	addwf	(??_fputc+2)^0,w,c
  3103   003C2A  6ED9               	movwf	fsr2l,c
  3104   003C2C  5006               	movf	(??_fputc+1)^0,w,c
  3105   003C2E  2008               	addwfc	(??_fputc+3)^0,w,c
  3106   003C30  6EDA               	movwf	fsr2h,c
  3107   003C32  C001  FFDF         	movff	fputc@c,indf2
  3108   003C36  EE20 F003          	lfsr	2,3
  3109   003C3A  5003               	movf	fputc@fp^0,w,c
  3110   003C3C  26D9               	addwf	fsr2l,f,c
  3111   003C3E  5004               	movf	(fputc@fp+1)^0,w,c
  3112   003C40  22DA               	addwfc	fsr2h,f,c
  3113   003C42  2ADE               	incf	postinc2,f,c
  3114   003C44  0E00               	movlw	0
  3115   003C46  22DD               	addwfc	postdec2,f,c
  3116   003C48                     l1423:
  3117   003C48  0012               	return		;funcret
  3118   003C4A                     __end_of_fputc:
  3119                           	callstack 0
  3120                           
  3121 ;; *************** function _putch *****************
  3122 ;; Defined at:
  3123 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  c               1    wreg     unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  c               1    0[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_fputc
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text8
  3152   004E02                     __ptext8:
  3153                           	callstack 0
  3154   004E02                     _putch:
  3155                           	callstack 25
  3156   004E02  0012               	return		;funcret
  3157   004E04                     __end_of_putch:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _abs *****************
  3161 ;; Defined at:
  3162 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  a               2   18[COMRAM] int 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2   18[COMRAM] int 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;Total ram usage:        4 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 1
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_dtoa
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text9
  3191   004B62                     __ptext9:
  3192                           	callstack 0
  3193   004B62                     _abs:
  3194                           	callstack 25
  3195   004B62  BE14               	btfsc	(abs@a+1)^0,7,c
  3196   004B64  EFBE  F025         	goto	u2630
  3197   004B68  5014               	movf	(abs@a+1)^0,w,c
  3198   004B6A  E106               	bnz	u2631
  3199   004B6C  0413               	decf	abs@a^0,w,c
  3200   004B6E  B0D8               	btfsc	status,0,c
  3201   004B70  EFBC  F025         	goto	u2631
  3202   004B74  EFBE  F025         	goto	u2630
  3203   004B78                     u2631:
  3204   004B78  EFCC  F025         	goto	l1408
  3205   004B7C                     u2630:
  3206   004B7C  C013  F015         	movff	abs@a,??_abs
  3207   004B80  C014  F016         	movff	abs@a+1,??_abs+1
  3208   004B84  1E15               	comf	??_abs^0,f,c
  3209   004B86  1E16               	comf	(??_abs+1)^0,f,c
  3210   004B88  4A15               	infsnz	??_abs^0,f,c
  3211   004B8A  2A16               	incf	(??_abs+1)^0,f,c
  3212   004B8C  C015  F013         	movff	??_abs,?_abs
  3213   004B90  C016  F014         	movff	??_abs+1,?_abs+1
  3214   004B94  EFD0  F025         	goto	l1411
  3215   004B98                     l1408:
  3216   004B98  C013  F013         	movff	abs@a,?_abs
  3217   004B9C  C014  F014         	movff	abs@a+1,?_abs+1
  3218   004BA0                     l1411:
  3219   004BA0  0012               	return		;funcret
  3220   004BA2                     __end_of_abs:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function ___aomod *****************
  3224 ;; Defined at:
  3225 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  dividend        8    0[COMRAM] long long 
  3228 ;;  divisor         8    8[COMRAM] long long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  sign            1   17[COMRAM] unsigned char 
  3231 ;;  counter         1   16[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  8    0[COMRAM] long long 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3241 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;Total ram usage:       18 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 1
  3248 ;; This function calls:
  3249 ;;		Nothing
  3250 ;; This function is called by:
  3251 ;;		_dtoa
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text10
  3256   0037C8                     __ptext10:
  3257                           	callstack 0
  3258   0037C8                     ___aomod:
  3259                           	callstack 25
  3260   0037C8  0E00               	movlw	0
  3261   0037CA  6E12               	movwf	___aomod@sign^0,c
  3262   0037CC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3263   0037CE  EFED  F01B         	goto	u2550
  3264   0037D2  EFEB  F01B         	goto	u2551
  3265   0037D6                     u2551:
  3266   0037D6  EFFF  F01B         	goto	l3316
  3267   0037DA                     u2550:
  3268   0037DA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3269   0037DC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3270   0037DE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3271   0037E0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3272   0037E2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3273   0037E4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3274   0037E6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3275   0037E8  6C01               	negf	___aomod@dividend^0,c
  3276   0037EA  0E00               	movlw	0
  3277   0037EC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3278   0037EE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3279   0037F0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3280   0037F2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3281   0037F4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3282   0037F6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3283   0037F8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3284   0037FA  0E01               	movlw	1
  3285   0037FC  6E12               	movwf	___aomod@sign^0,c
  3286   0037FE                     l3316:
  3287   0037FE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3288   003800  EF06  F01C         	goto	u2560
  3289   003804  EF04  F01C         	goto	u2561
  3290   003808                     u2561:
  3291   003808  EF16  F01C         	goto	l3320
  3292   00380C                     u2560:
  3293   00380C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3294   00380E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3295   003810  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3296   003812  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3297   003814  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3298   003816  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3299   003818  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3300   00381A  6C09               	negf	___aomod@divisor^0,c
  3301   00381C  0E00               	movlw	0
  3302   00381E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3303   003820  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3304   003822  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3305   003824  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3306   003826  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3307   003828  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3308   00382A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3309   00382C                     l3320:
  3310   00382C  5009               	movf	___aomod@divisor^0,w,c
  3311   00382E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3312   003830  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3313   003832  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3314   003834  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3315   003836  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3316   003838  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3317   00383A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3318   00383C  B4D8               	btfsc	status,2,c
  3319   00383E  EF23  F01C         	goto	u2571
  3320   003842  EF25  F01C         	goto	u2570
  3321   003846                     u2571:
  3322   003846  EF6D  F01C         	goto	l3336
  3323   00384A                     u2570:
  3324   00384A  0E01               	movlw	1
  3325   00384C  6E11               	movwf	___aomod@counter^0,c
  3326   00384E  EF33  F01C         	goto	l3326
  3327   003852                     l3324:
  3328   003852  90D8               	bcf	status,0,c
  3329   003854  3609               	rlcf	___aomod@divisor^0,f,c
  3330   003856  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3331   003858  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3332   00385A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3333   00385C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3334   00385E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3335   003860  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3336   003862  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3337   003864  2A11               	incf	___aomod@counter^0,f,c
  3338   003866                     l3326:
  3339   003866  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3340   003868  EF38  F01C         	goto	u2581
  3341   00386C  EF3A  F01C         	goto	u2580
  3342   003870                     u2581:
  3343   003870  EF29  F01C         	goto	l3324
  3344   003874                     u2580:
  3345   003874                     l3328:
  3346   003874  5009               	movf	___aomod@divisor^0,w,c
  3347   003876  5C01               	subwf	___aomod@dividend^0,w,c
  3348   003878  500A               	movf	(___aomod@divisor+1)^0,w,c
  3349   00387A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3350   00387C  500B               	movf	(___aomod@divisor+2)^0,w,c
  3351   00387E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3352   003880  500C               	movf	(___aomod@divisor+3)^0,w,c
  3353   003882  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3354   003884  500D               	movf	(___aomod@divisor+4)^0,w,c
  3355   003886  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3356   003888  500E               	movf	(___aomod@divisor+5)^0,w,c
  3357   00388A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3358   00388C  500F               	movf	(___aomod@divisor+6)^0,w,c
  3359   00388E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3360   003890  5010               	movf	(___aomod@divisor+7)^0,w,c
  3361   003892  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3362   003894  A0D8               	btfss	status,0,c
  3363   003896  EF4F  F01C         	goto	u2591
  3364   00389A  EF51  F01C         	goto	u2590
  3365   00389E                     u2591:
  3366   00389E  EF61  F01C         	goto	l3332
  3367   0038A2                     u2590:
  3368   0038A2  5009               	movf	___aomod@divisor^0,w,c
  3369   0038A4  5E01               	subwf	___aomod@dividend^0,f,c
  3370   0038A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  3371   0038A8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3372   0038AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  3373   0038AC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3374   0038AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  3375   0038B0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3376   0038B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  3377   0038B4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3378   0038B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  3379   0038B8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3380   0038BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  3381   0038BC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3382   0038BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  3383   0038C0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3384   0038C2                     l3332:
  3385   0038C2  90D8               	bcf	status,0,c
  3386   0038C4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3387   0038C6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3388   0038C8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3389   0038CA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3390   0038CC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3391   0038CE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3392   0038D0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3393   0038D2  3209               	rrcf	___aomod@divisor^0,f,c
  3394   0038D4  2E11               	decfsz	___aomod@counter^0,f,c
  3395   0038D6  EF3A  F01C         	goto	l3328
  3396   0038DA                     l3336:
  3397   0038DA  5012               	movf	___aomod@sign^0,w,c
  3398   0038DC  B4D8               	btfsc	status,2,c
  3399   0038DE  EF73  F01C         	goto	u2601
  3400   0038E2  EF75  F01C         	goto	u2600
  3401   0038E6                     u2601:
  3402   0038E6  EF85  F01C         	goto	l3340
  3403   0038EA                     u2600:
  3404   0038EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3405   0038EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3406   0038EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3407   0038F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3408   0038F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3409   0038F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3410   0038F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3411   0038F8  6C01               	negf	___aomod@dividend^0,c
  3412   0038FA  0E00               	movlw	0
  3413   0038FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3414   0038FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3415   003900  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3416   003902  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3417   003904  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3418   003906  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3419   003908  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3420   00390A                     l3340:
  3421   00390A  C001  F001         	movff	___aomod@dividend,?___aomod
  3422   00390E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3423   003912  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3424   003916  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3425   00391A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3426   00391E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3427   003922  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3428   003926  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3429   00392A  0012               	return		;funcret
  3430   00392C                     __end_of___aomod:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function ___aodiv *****************
  3434 ;; Defined at:
  3435 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  dividend        8    0[COMRAM] long long 
  3438 ;;  divisor         8    8[COMRAM] long long 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  quotient        8   18[COMRAM] long long 
  3441 ;;  sign            1   17[COMRAM] unsigned char 
  3442 ;;  counter         1   16[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  8    0[COMRAM] long long 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3452 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;Total ram usage:       26 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_dtoa
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text11
  3467   0034D4                     __ptext11:
  3468                           	callstack 0
  3469   0034D4                     ___aodiv:
  3470                           	callstack 25
  3471   0034D4  0E00               	movlw	0
  3472   0034D6  6E12               	movwf	___aodiv@sign^0,c
  3473   0034D8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3474   0034DA  EF73  F01A         	goto	u2480
  3475   0034DE  EF71  F01A         	goto	u2481
  3476   0034E2                     u2481:
  3477   0034E2  EF85  F01A         	goto	l3272
  3478   0034E6                     u2480:
  3479   0034E6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3480   0034E8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3481   0034EA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3482   0034EC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3483   0034EE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3484   0034F0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3485   0034F2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3486   0034F4  6C09               	negf	___aodiv@divisor^0,c
  3487   0034F6  0E00               	movlw	0
  3488   0034F8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3489   0034FA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3490   0034FC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3491   0034FE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3492   003500  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3493   003502  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3494   003504  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3495   003506  0E01               	movlw	1
  3496   003508  6E12               	movwf	___aodiv@sign^0,c
  3497   00350A                     l3272:
  3498   00350A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3499   00350C  EF8C  F01A         	goto	u2490
  3500   003510  EF8A  F01A         	goto	u2491
  3501   003514                     u2491:
  3502   003514  EF9E  F01A         	goto	l3278
  3503   003518                     u2490:
  3504   003518  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3505   00351A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3506   00351C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3507   00351E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3508   003520  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3509   003522  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3510   003524  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3511   003526  6C01               	negf	___aodiv@dividend^0,c
  3512   003528  0E00               	movlw	0
  3513   00352A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3514   00352C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3515   00352E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3516   003530  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3517   003532  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3518   003534  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3519   003536  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3520   003538  0E01               	movlw	1
  3521   00353A  1A12               	xorwf	___aodiv@sign^0,f,c
  3522   00353C                     l3278:
  3523   00353C  EE20  F013         	lfsr	2,___aodiv@quotient
  3524   003540  0E07               	movlw	7
  3525   003542                     u2501:
  3526   003542  6ADE               	clrf	postinc2,c
  3527   003544  06E8               	decf	wreg,f,c
  3528   003546  E2FD               	bc	u2501
  3529   003548  5009               	movf	___aodiv@divisor^0,w,c
  3530   00354A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3531   00354C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3532   00354E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3533   003550  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3534   003552  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3535   003554  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3536   003556  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3537   003558  B4D8               	btfsc	status,2,c
  3538   00355A  EFB1  F01A         	goto	u2511
  3539   00355E  EFB3  F01A         	goto	u2510
  3540   003562                     u2511:
  3541   003562  EF05  F01B         	goto	l3300
  3542   003566                     u2510:
  3543   003566  0E01               	movlw	1
  3544   003568  6E11               	movwf	___aodiv@counter^0,c
  3545   00356A  EFC1  F01A         	goto	l3286
  3546   00356E                     l3284:
  3547   00356E  90D8               	bcf	status,0,c
  3548   003570  3609               	rlcf	___aodiv@divisor^0,f,c
  3549   003572  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3550   003574  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3551   003576  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3552   003578  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3553   00357A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3554   00357C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3555   00357E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3556   003580  2A11               	incf	___aodiv@counter^0,f,c
  3557   003582                     l3286:
  3558   003582  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3559   003584  EFC6  F01A         	goto	u2521
  3560   003588  EFC8  F01A         	goto	u2520
  3561   00358C                     u2521:
  3562   00358C  EFB7  F01A         	goto	l3284
  3563   003590                     u2520:
  3564   003590                     l3288:
  3565   003590  90D8               	bcf	status,0,c
  3566   003592  3613               	rlcf	___aodiv@quotient^0,f,c
  3567   003594  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3568   003596  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3569   003598  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3570   00359A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3571   00359C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3572   00359E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3573   0035A0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3574   0035A2  5009               	movf	___aodiv@divisor^0,w,c
  3575   0035A4  5C01               	subwf	___aodiv@dividend^0,w,c
  3576   0035A6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3577   0035A8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3578   0035AA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3579   0035AC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3580   0035AE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3581   0035B0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3582   0035B2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3583   0035B4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3584   0035B6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3585   0035B8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3586   0035BA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3587   0035BC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3588   0035BE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3589   0035C0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3590   0035C2  A0D8               	btfss	status,0,c
  3591   0035C4  EFE6  F01A         	goto	u2531
  3592   0035C8  EFE8  F01A         	goto	u2530
  3593   0035CC                     u2531:
  3594   0035CC  EFF9  F01A         	goto	l3296
  3595   0035D0                     u2530:
  3596   0035D0  5009               	movf	___aodiv@divisor^0,w,c
  3597   0035D2  5E01               	subwf	___aodiv@dividend^0,f,c
  3598   0035D4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3599   0035D6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3600   0035D8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3601   0035DA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3602   0035DC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3603   0035DE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3604   0035E0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3605   0035E2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3606   0035E4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3607   0035E6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3608   0035E8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3609   0035EA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3610   0035EC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3611   0035EE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3612   0035F0  8013               	bsf	___aodiv@quotient^0,0,c
  3613   0035F2                     l3296:
  3614   0035F2  90D8               	bcf	status,0,c
  3615   0035F4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3616   0035F6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3617   0035F8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3618   0035FA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3619   0035FC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3620   0035FE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3621   003600  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3622   003602  3209               	rrcf	___aodiv@divisor^0,f,c
  3623   003604  2E11               	decfsz	___aodiv@counter^0,f,c
  3624   003606  EFC8  F01A         	goto	l3288
  3625   00360A                     l3300:
  3626   00360A  5012               	movf	___aodiv@sign^0,w,c
  3627   00360C  B4D8               	btfsc	status,2,c
  3628   00360E  EF0B  F01B         	goto	u2541
  3629   003612  EF0D  F01B         	goto	u2540
  3630   003616                     u2541:
  3631   003616  EF1D  F01B         	goto	l3304
  3632   00361A                     u2540:
  3633   00361A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3634   00361C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3635   00361E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3636   003620  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3637   003622  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3638   003624  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3639   003626  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3640   003628  6C13               	negf	___aodiv@quotient^0,c
  3641   00362A  0E00               	movlw	0
  3642   00362C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3643   00362E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3644   003630  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3645   003632  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3646   003634  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3647   003636  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3648   003638  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3649   00363A                     l3304:
  3650   00363A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3651   00363E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3652   003642  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3653   003646  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3654   00364A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3655   00364E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3656   003652  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3657   003656  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3658   00365A  0012               	return		;funcret
  3659   00365C                     __end_of___aodiv:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _sendStringSerial4 *****************
  3663 ;; Defined at:
  3664 ;;		line 33 in file "serial.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  string          2    1[COMRAM] PTR unsigned char 
  3667 ;;		 -> main@buf(100), 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 2
  3686 ;; This function calls:
  3687 ;;		_sendCharSerial4
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text12
  3694   004C56                     __ptext12:
  3695                           	callstack 0
  3696   004C56                     _sendStringSerial4:
  3697                           	callstack 28
  3698   004C56                     
  3699                           ;serial.c: 34:     while (*string!=0){
  3700   004C56  EF36  F026         	goto	l4488
  3701   004C5A                     l4484:
  3702                           
  3703                           ;serial.c: 35:         sendCharSerial4(*string++);
  3704   004C5A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3705   004C5E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3706   004C62  50DF               	movf	indf2,w,c
  3707   004C64  ECD6  F026         	call	_sendCharSerial4
  3708   004C68  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3709   004C6A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3710   004C6C                     l4488:
  3711                           
  3712                           ;serial.c: 34:     while (*string!=0){
  3713   004C6C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3714   004C70  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3715   004C74  50DF               	movf	indf2,w,c
  3716   004C76  A4D8               	btfss	status,2,c
  3717   004C78  EF40  F026         	goto	u4281
  3718   004C7C  EF42  F026         	goto	u4280
  3719   004C80                     u4281:
  3720   004C80  EF2D  F026         	goto	l4484
  3721   004C84                     u4280:
  3722   004C84  0012               	return		;funcret
  3723   004C86                     __end_of_sendStringSerial4:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _sendCharSerial4 *****************
  3727 ;; Defined at:
  3728 ;;		line 26 in file "serial.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  charToSend      1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  charToSend      1    0[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_sendStringSerial4
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text13
  3757   004DAC                     __ptext13:
  3758                           	callstack 0
  3759   004DAC                     _sendCharSerial4:
  3760                           	callstack 28
  3761                           
  3762                           ;incstack = 0
  3763                           ;sendCharSerial4@charToSend stored from wreg
  3764   004DAC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3765   004DAE                     l209:
  3766   004DAE  010E               	movlb	14	; () banked
  3767   004DB0  A537               	btfss	55,2,b	;volatile
  3768   004DB2  EFDD  F026         	goto	u3311
  3769   004DB6  EFDF  F026         	goto	u3310
  3770   004DBA                     u3311:
  3771   004DBA  EFD7  F026         	goto	l209
  3772   004DBE                     u3310:
  3773   004DBE                     
  3774                           ; BSR set to: 14
  3775                           ;serial.c: 28:     TX4REG = charToSend;
  3776   004DBE  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3777   004DC2                     
  3778                           ; BSR set to: 14
  3779   004DC2  0012               	return		;funcret
  3780   004DC4                     __end_of_sendCharSerial4:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _readColours *****************
  3784 ;; Defined at:
  3785 ;;		line 105 in file "color.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  vals            2   11[COMRAM] PTR struct RGB
  3788 ;;		 -> vals(8), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      void 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:        2 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 4
  3807 ;; This function calls:
  3808 ;;		_color_read_Blue
  3809 ;;		_color_read_Green
  3810 ;;		_color_read_Red
  3811 ;;		_color_read_lum
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text14
  3818   00444C                     __ptext14:
  3819                           	callstack 0
  3820   00444C                     _readColours:
  3821                           	callstack 26
  3822   00444C                     
  3823                           ;color.c: 107:     vals ->R = color_read_Red();
  3824   00444C  ECAC  F024         	call	_color_read_Red	;wreg free
  3825   004450  C00C  FFD9         	movff	readColours@vals,fsr2l
  3826   004454  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3827   004458  C005  FFDE         	movff	?_color_read_Red,postinc2
  3828   00445C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3829                           
  3830                           ;color.c: 108:     vals ->B = color_read_Blue();
  3831   004460  ECFC  F024         	call	_color_read_Blue	;wreg free
  3832   004464  EE20 F004          	lfsr	2,4
  3833   004468  500C               	movf	readColours@vals^0,w,c
  3834   00446A  26D9               	addwf	fsr2l,f,c
  3835   00446C  500D               	movf	(readColours@vals+1)^0,w,c
  3836   00446E  22DA               	addwfc	fsr2h,f,c
  3837   004470  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3838   004474  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3839                           
  3840                           ;color.c: 109:     vals ->G = color_read_Green();
  3841   004478  ECD4  F024         	call	_color_read_Green	;wreg free
  3842   00447C  EE20 F002          	lfsr	2,2
  3843   004480  500C               	movf	readColours@vals^0,w,c
  3844   004482  26D9               	addwf	fsr2l,f,c
  3845   004484  500D               	movf	(readColours@vals+1)^0,w,c
  3846   004486  22DA               	addwfc	fsr2h,f,c
  3847   004488  C005  FFDE         	movff	?_color_read_Green,postinc2
  3848   00448C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3849                           
  3850                           ;color.c: 110:     vals ->L = color_read_lum();
  3851   004490  EC84  F024         	call	_color_read_lum	;wreg free
  3852   004494  EE20 F006          	lfsr	2,6
  3853   004498  500C               	movf	readColours@vals^0,w,c
  3854   00449A  26D9               	addwf	fsr2l,f,c
  3855   00449C  500D               	movf	(readColours@vals+1)^0,w,c
  3856   00449E  22DA               	addwfc	fsr2h,f,c
  3857   0044A0  C005  FFDE         	movff	?_color_read_lum,postinc2
  3858   0044A4  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3859   0044A8  0012               	return		;funcret
  3860   0044AA                     __end_of_readColours:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _color_read_lum *****************
  3864 ;; Defined at:
  3865 ;;		line 49 in file "color.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  tmp             2    9[COMRAM] unsigned int 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    4[COMRAM] unsigned int 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;Total ram usage:        7 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 3
  3886 ;; This function calls:
  3887 ;;		_I2C_2_Master_Read
  3888 ;;		_I2C_2_Master_RepStart
  3889 ;;		_I2C_2_Master_Start
  3890 ;;		_I2C_2_Master_Stop
  3891 ;;		_I2C_2_Master_Write
  3892 ;; This function is called by:
  3893 ;;		_readColours
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text15
  3898   004908                     __ptext15:
  3899                           	callstack 0
  3900   004908                     _color_read_lum:
  3901                           	callstack 26
  3902   004908                     
  3903                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3904   004908  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  3905                           
  3906                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3907   00490C  0E52               	movlw	82
  3908   00490E  ECE9  F026         	call	_I2C_2_Master_Write
  3909                           
  3910                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3911   004912  0EB4               	movlw	180
  3912   004914  ECE9  F026         	call	_I2C_2_Master_Write
  3913                           
  3914                           ;color.c: 55:  I2C_2_Master_RepStart();
  3915   004918  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  3916                           
  3917                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3918   00491C  0E53               	movlw	83
  3919   00491E  ECE9  F026         	call	_I2C_2_Master_Write
  3920                           
  3921                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3922   004922  0E01               	movlw	1
  3923   004924  EC90  F025         	call	_I2C_2_Master_Read
  3924   004928  6E07               	movwf	??_color_read_lum^0,c
  3925   00492A  5007               	movf	??_color_read_lum^0,w,c
  3926   00492C  6E0A               	movwf	color_read_lum@tmp^0,c
  3927   00492E  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3928                           
  3929                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3930   004930  0E00               	movlw	0
  3931   004932  EC90  F025         	call	_I2C_2_Master_Read
  3932   004936  6E07               	movwf	??_color_read_lum^0,c
  3933   004938  5007               	movf	??_color_read_lum^0,w,c
  3934   00493A  6E09               	movwf	(??_color_read_lum+2)^0,c
  3935   00493C  6A08               	clrf	(??_color_read_lum+1)^0,c
  3936   00493E  500A               	movf	color_read_lum@tmp^0,w,c
  3937   004940  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3938   004942  6E0A               	movwf	color_read_lum@tmp^0,c
  3939   004944  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3940   004946  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3941   004948  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3942                           
  3943                           ;color.c: 59:  I2C_2_Master_Stop();
  3944   00494A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  3945   00494E                     
  3946                           ;color.c: 60:  return tmp;
  3947   00494E  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3948   004952  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3949   004956  0012               	return		;funcret
  3950   004958                     __end_of_color_read_lum:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _color_read_Red *****************
  3954 ;; Defined at:
  3955 ;;		line 63 in file "color.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  tmp             2    9[COMRAM] unsigned int 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2    4[COMRAM] unsigned int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;Total ram usage:        7 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 3
  3976 ;; This function calls:
  3977 ;;		_I2C_2_Master_Read
  3978 ;;		_I2C_2_Master_RepStart
  3979 ;;		_I2C_2_Master_Start
  3980 ;;		_I2C_2_Master_Stop
  3981 ;;		_I2C_2_Master_Write
  3982 ;; This function is called by:
  3983 ;;		_readColours
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text16
  3988   004958                     __ptext16:
  3989                           	callstack 0
  3990   004958                     _color_read_Red:
  3991                           	callstack 26
  3992   004958                     
  3993                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3994   004958  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  3995                           
  3996                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3997   00495C  0E52               	movlw	82
  3998   00495E  ECE9  F026         	call	_I2C_2_Master_Write
  3999                           
  4000                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  4001   004962  0EB6               	movlw	182
  4002   004964  ECE9  F026         	call	_I2C_2_Master_Write
  4003                           
  4004                           ;color.c: 69:  I2C_2_Master_RepStart();
  4005   004968  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4006                           
  4007                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4008   00496C  0E53               	movlw	83
  4009   00496E  ECE9  F026         	call	_I2C_2_Master_Write
  4010                           
  4011                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4012   004972  0E01               	movlw	1
  4013   004974  EC90  F025         	call	_I2C_2_Master_Read
  4014   004978  6E07               	movwf	??_color_read_Red^0,c
  4015   00497A  5007               	movf	??_color_read_Red^0,w,c
  4016   00497C  6E0A               	movwf	color_read_Red@tmp^0,c
  4017   00497E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4018                           
  4019                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4020   004980  0E00               	movlw	0
  4021   004982  EC90  F025         	call	_I2C_2_Master_Read
  4022   004986  6E07               	movwf	??_color_read_Red^0,c
  4023   004988  5007               	movf	??_color_read_Red^0,w,c
  4024   00498A  6E09               	movwf	(??_color_read_Red+2)^0,c
  4025   00498C  6A08               	clrf	(??_color_read_Red+1)^0,c
  4026   00498E  500A               	movf	color_read_Red@tmp^0,w,c
  4027   004990  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4028   004992  6E0A               	movwf	color_read_Red@tmp^0,c
  4029   004994  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4030   004996  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4031   004998  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4032                           
  4033                           ;color.c: 73:  I2C_2_Master_Stop();
  4034   00499A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4035   00499E                     
  4036                           ;color.c: 74:  return tmp;
  4037   00499E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4038   0049A2  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4039   0049A6  0012               	return		;funcret
  4040   0049A8                     __end_of_color_read_Red:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _color_read_Green *****************
  4044 ;; Defined at:
  4045 ;;		line 76 in file "color.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  tmp             2    9[COMRAM] unsigned int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    4[COMRAM] unsigned int 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:        7 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 3
  4066 ;; This function calls:
  4067 ;;		_I2C_2_Master_Read
  4068 ;;		_I2C_2_Master_RepStart
  4069 ;;		_I2C_2_Master_Start
  4070 ;;		_I2C_2_Master_Stop
  4071 ;;		_I2C_2_Master_Write
  4072 ;; This function is called by:
  4073 ;;		_readColours
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text17
  4078   0049A8                     __ptext17:
  4079                           	callstack 0
  4080   0049A8                     _color_read_Green:
  4081                           	callstack 26
  4082   0049A8                     
  4083                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4084   0049A8  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  4085                           
  4086                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4087   0049AC  0E52               	movlw	82
  4088   0049AE  ECE9  F026         	call	_I2C_2_Master_Write
  4089                           
  4090                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4091   0049B2  0EB8               	movlw	184
  4092   0049B4  ECE9  F026         	call	_I2C_2_Master_Write
  4093                           
  4094                           ;color.c: 82:  I2C_2_Master_RepStart();
  4095   0049B8  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4096                           
  4097                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4098   0049BC  0E53               	movlw	83
  4099   0049BE  ECE9  F026         	call	_I2C_2_Master_Write
  4100                           
  4101                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4102   0049C2  0E01               	movlw	1
  4103   0049C4  EC90  F025         	call	_I2C_2_Master_Read
  4104   0049C8  6E07               	movwf	??_color_read_Green^0,c
  4105   0049CA  5007               	movf	??_color_read_Green^0,w,c
  4106   0049CC  6E0A               	movwf	color_read_Green@tmp^0,c
  4107   0049CE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4108                           
  4109                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4110   0049D0  0E00               	movlw	0
  4111   0049D2  EC90  F025         	call	_I2C_2_Master_Read
  4112   0049D6  6E07               	movwf	??_color_read_Green^0,c
  4113   0049D8  5007               	movf	??_color_read_Green^0,w,c
  4114   0049DA  6E09               	movwf	(??_color_read_Green+2)^0,c
  4115   0049DC  6A08               	clrf	(??_color_read_Green+1)^0,c
  4116   0049DE  500A               	movf	color_read_Green@tmp^0,w,c
  4117   0049E0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4118   0049E2  6E0A               	movwf	color_read_Green@tmp^0,c
  4119   0049E4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4120   0049E6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4121   0049E8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4122                           
  4123                           ;color.c: 86:  I2C_2_Master_Stop();
  4124   0049EA  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4125   0049EE                     
  4126                           ;color.c: 87:  return tmp;
  4127   0049EE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4128   0049F2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4129   0049F6  0012               	return		;funcret
  4130   0049F8                     __end_of_color_read_Green:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _color_read_Blue *****************
  4134 ;; Defined at:
  4135 ;;		line 90 in file "color.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  tmp             2    9[COMRAM] unsigned int 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2    4[COMRAM] unsigned int 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        7 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 3
  4156 ;; This function calls:
  4157 ;;		_I2C_2_Master_Read
  4158 ;;		_I2C_2_Master_RepStart
  4159 ;;		_I2C_2_Master_Start
  4160 ;;		_I2C_2_Master_Stop
  4161 ;;		_I2C_2_Master_Write
  4162 ;; This function is called by:
  4163 ;;		_readColours
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text18
  4168   0049F8                     __ptext18:
  4169                           	callstack 0
  4170   0049F8                     _color_read_Blue:
  4171                           	callstack 26
  4172   0049F8                     
  4173                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4174   0049F8  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  4175                           
  4176                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4177   0049FC  0E52               	movlw	82
  4178   0049FE  ECE9  F026         	call	_I2C_2_Master_Write
  4179                           
  4180                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4181   004A02  0EBA               	movlw	186
  4182   004A04  ECE9  F026         	call	_I2C_2_Master_Write
  4183                           
  4184                           ;color.c: 96:  I2C_2_Master_RepStart();
  4185   004A08  ECEF  F026         	call	_I2C_2_Master_RepStart	;wreg free
  4186                           
  4187                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4188   004A0C  0E53               	movlw	83
  4189   004A0E  ECE9  F026         	call	_I2C_2_Master_Write
  4190                           
  4191                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4192   004A12  0E01               	movlw	1
  4193   004A14  EC90  F025         	call	_I2C_2_Master_Read
  4194   004A18  6E07               	movwf	??_color_read_Blue^0,c
  4195   004A1A  5007               	movf	??_color_read_Blue^0,w,c
  4196   004A1C  6E0A               	movwf	color_read_Blue@tmp^0,c
  4197   004A1E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4198                           
  4199                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4200   004A20  0E00               	movlw	0
  4201   004A22  EC90  F025         	call	_I2C_2_Master_Read
  4202   004A26  6E07               	movwf	??_color_read_Blue^0,c
  4203   004A28  5007               	movf	??_color_read_Blue^0,w,c
  4204   004A2A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4205   004A2C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4206   004A2E  500A               	movf	color_read_Blue@tmp^0,w,c
  4207   004A30  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4208   004A32  6E0A               	movwf	color_read_Blue@tmp^0,c
  4209   004A34  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4210   004A36  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4211   004A38  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4212                           
  4213                           ;color.c: 100:  I2C_2_Master_Stop();
  4214   004A3A  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  4215   004A3E                     
  4216                           ;color.c: 101:  return tmp;
  4217   004A3E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4218   004A42  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4219   004A46  0012               	return		;funcret
  4220   004A48                     __end_of_color_read_Blue:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _I2C_2_Master_RepStart *****************
  4224 ;; Defined at:
  4225 ;;		line 33 in file "i2c.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 2
  4246 ;; This function calls:
  4247 ;;		_I2C_2_Master_Idle
  4248 ;; This function is called by:
  4249 ;;		_color_read_lum
  4250 ;;		_color_read_Red
  4251 ;;		_color_read_Green
  4252 ;;		_color_read_Blue
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text19
  4257   004DDE                     __ptext19:
  4258                           	callstack 0
  4259   004DDE                     _I2C_2_Master_RepStart:
  4260                           	callstack 26
  4261   004DDE                     
  4262                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4263   004DDE  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4264   004DE2                     
  4265                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4266   004DE2  010E               	movlb	14	; () banked
  4267   004DE4  83DA               	bsf	218,1,b	;volatile
  4268   004DE6                     
  4269                           ; BSR set to: 14
  4270   004DE6  0012               	return		;funcret
  4271   004DE8                     __end_of_I2C_2_Master_RepStart:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _I2C_2_Master_Read *****************
  4275 ;; Defined at:
  4276 ;;		line 51 in file "i2c.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  ack             1    wreg     unsigned char 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  ack             1    2[COMRAM] unsigned char 
  4281 ;;  tmp             1    3[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;Total ram usage:        3 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 2
  4298 ;; This function calls:
  4299 ;;		_I2C_2_Master_Idle
  4300 ;; This function is called by:
  4301 ;;		_color_read_lum
  4302 ;;		_color_read_Red
  4303 ;;		_color_read_Green
  4304 ;;		_color_read_Blue
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text20
  4309   004B20                     __ptext20:
  4310                           	callstack 0
  4311   004B20                     _I2C_2_Master_Read:
  4312                           	callstack 26
  4313                           
  4314                           ; BSR set to: 14
  4315                           ;incstack = 0
  4316                           ;I2C_2_Master_Read@ack stored from wreg
  4317   004B20  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4318   004B22                     
  4319                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4320   004B22  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4321   004B26                     
  4322                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4323   004B26  010E               	movlb	14	; () banked
  4324   004B28  87DA               	bsf	218,3,b	;volatile
  4325                           
  4326                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4327   004B2A  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4328   004B2E                     
  4329                           ;i2c.c: 57:   tmp = SSP2BUF;
  4330   004B2E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4331                           
  4332                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4333   004B32  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  4334   004B36                     
  4335                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4336   004B36  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4337   004B38  B4D8               	btfsc	status,2,c
  4338   004B3A  EFA1  F025         	goto	u2861
  4339   004B3E  EFA5  F025         	goto	u2860
  4340   004B42                     u2861:
  4341   004B42  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4342   004B44  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4343   004B46  EFA6  F025         	goto	u2878
  4344   004B4A                     u2860:
  4345   004B4A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4346   004B4C                     u2878:
  4347   004B4C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4348   004B4E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4349   004B50  010E               	movlb	14	; () banked
  4350   004B52  51DA               	movf	218,w,b	;volatile
  4351   004B54  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4352   004B56  0BDF               	andlw	-33
  4353   004B58  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4354   004B5A  6FDA               	movwf	218,b	;volatile
  4355   004B5C                     
  4356                           ; BSR set to: 14
  4357                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4358   004B5C  89DA               	bsf	218,4,b	;volatile
  4359   004B5E                     
  4360                           ; BSR set to: 14
  4361                           ;i2c.c: 61:   return tmp;
  4362   004B5E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4363   004B60                     
  4364                           ; BSR set to: 14
  4365   004B60  0012               	return		;funcret
  4366   004B62                     __end_of_I2C_2_Master_Read:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _initUSART4 *****************
  4370 ;; Defined at:
  4371 ;;		line 4 in file "serial.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used: 1
  4391 ;; Hardware stack levels required when called: 1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text21
  4400   004D8E                     __ptext21:
  4401                           	callstack 0
  4402   004D8E                     _initUSART4:
  4403                           	callstack 29
  4404   004D8E                     
  4405                           ;serial.c: 5:     RC0PPS = 0x12;
  4406   004D8E  0E12               	movlw	18
  4407   004D90  010E               	movlb	14	; () banked
  4408   004D92  6F62               	movwf	98,b	;volatile
  4409                           
  4410                           ;serial.c: 6:     RX4PPS = 0x11;
  4411   004D94  0E11               	movlw	17
  4412   004D96  6F15               	movwf	21,b	;volatile
  4413   004D98                     
  4414                           ; BSR set to: 14
  4415                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4416   004D98  97E9               	bcf	233,3,b	;volatile
  4417   004D9A                     
  4418                           ; BSR set to: 14
  4419                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4420   004D9A  95E8               	bcf	232,2,b	;volatile
  4421                           
  4422                           ;serial.c: 9:     SP4BRGL = 51;
  4423   004D9C  0E33               	movlw	51
  4424   004D9E  6FE5               	movwf	229,b	;volatile
  4425                           
  4426                           ;serial.c: 10:     SP4BRGH = 0;
  4427   004DA0  0E00               	movlw	0
  4428   004DA2  6FE6               	movwf	230,b	;volatile
  4429   004DA4                     
  4430                           ; BSR set to: 14
  4431                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4432   004DA4  89E7               	bsf	231,4,b	;volatile
  4433   004DA6                     
  4434                           ; BSR set to: 14
  4435                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4436   004DA6  8BE8               	bsf	232,5,b	;volatile
  4437   004DA8                     
  4438                           ; BSR set to: 14
  4439                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4440   004DA8  8FE7               	bsf	231,7,b	;volatile
  4441   004DAA                     
  4442                           ; BSR set to: 14
  4443   004DAA  0012               	return		;funcret
  4444   004DAC                     __end_of_initUSART4:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _initDCmotorsPWM *****************
  4448 ;; Defined at:
  4449 ;;		line 5 in file "dc_motor.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4467 ;;Total ram usage:        2 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_main
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text22
  4478   004182                     __ptext22:
  4479                           	callstack 0
  4480   004182                     _initDCmotorsPWM:
  4481                           	callstack 29
  4482   004182                     
  4483                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4484   004182  0E05               	movlw	5
  4485   004184  010E               	movlb	14	; () banked
  4486   004186  6F74               	movwf	116,b	;volatile
  4487                           
  4488                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4489   004188  0E06               	movlw	6
  4490   00418A  6F76               	movwf	118,b	;volatile
  4491                           
  4492                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4493   00418C  0E07               	movlw	7
  4494   00418E  6F69               	movwf	105,b	;volatile
  4495                           
  4496                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4497   004190  0E08               	movlw	8
  4498   004192  6F88               	movwf	136,b	;volatile
  4499   004194                     
  4500                           ; BSR set to: 14
  4501                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4502   004194  9485               	bcf	133,2,c	;volatile
  4503   004196                     
  4504                           ; BSR set to: 14
  4505                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4506   004196  9885               	bcf	133,4,c	;volatile
  4507   004198                     
  4508                           ; BSR set to: 14
  4509                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4510   004198  9E83               	bcf	131,7,c	;volatile
  4511   00419A                     
  4512                           ; BSR set to: 14
  4513                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4514   00419A  9C87               	bcf	135,6,c	;volatile
  4515                           
  4516                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4517   00419C  50BD               	movf	189,w,c	;volatile
  4518   00419E  0B8F               	andlw	-113
  4519   0041A0  0930               	iorlw	48
  4520   0041A2  6EBD               	movwf	189,c	;volatile
  4521                           
  4522                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4523   0041A4  0EE0               	movlw	-32
  4524   0041A6  16BE               	andwf	190,f,c	;volatile
  4525                           
  4526                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4527   0041A8  50BF               	movf	191,w,c	;volatile
  4528   0041AA  0BF0               	andlw	-16
  4529   0041AC  0901               	iorlw	1
  4530   0041AE  6EBF               	movwf	191,c	;volatile
  4531   0041B0                     
  4532                           ; BSR set to: 14
  4533                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4534   0041B0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4535   0041B4                     
  4536                           ; BSR set to: 14
  4537                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4538   0041B4  8EBD               	bsf	189,7,c	;volatile
  4539                           
  4540                           ;dc_motor.c: 33:     CCPR1H=0;
  4541   0041B6  0E00               	movlw	0
  4542   0041B8  6EAA               	movwf	170,c	;volatile
  4543                           
  4544                           ;dc_motor.c: 34:     CCPR2H=0;
  4545   0041BA  0E00               	movlw	0
  4546   0041BC  6EA6               	movwf	166,c	;volatile
  4547                           
  4548                           ;dc_motor.c: 35:     CCPR3H=0;
  4549   0041BE  0E00               	movlw	0
  4550   0041C0  010F               	movlb	15	; () banked
  4551   0041C2  6F25               	movwf	37,b	;volatile
  4552                           
  4553                           ;dc_motor.c: 36:     CCPR4H=0;
  4554   0041C4  0E00               	movlw	0
  4555   0041C6  6F21               	movwf	33,b	;volatile
  4556                           
  4557                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4558   0041C8  0EFC               	movlw	-4
  4559   0041CA  16AD               	andwf	173,f,c	;volatile
  4560                           
  4561                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4562   0041CC  0EF3               	movlw	-13
  4563   0041CE  16AD               	andwf	173,f,c	;volatile
  4564                           
  4565                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4566   0041D0  0ECF               	movlw	-49
  4567   0041D2  16AD               	andwf	173,f,c	;volatile
  4568                           
  4569                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4570   0041D4  0E3F               	movlw	-193
  4571   0041D6  16AD               	andwf	173,f,c	;volatile
  4572   0041D8                     
  4573                           ; BSR set to: 15
  4574                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4575   0041D8  88AB               	bsf	171,4,c	;volatile
  4576                           
  4577                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4578   0041DA  50AB               	movf	171,w,c	;volatile
  4579   0041DC  0BF0               	andlw	-16
  4580   0041DE  090C               	iorlw	12
  4581   0041E0  6EAB               	movwf	171,c	;volatile
  4582   0041E2                     
  4583                           ; BSR set to: 15
  4584                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4585   0041E2  8EAB               	bsf	171,7,c	;volatile
  4586   0041E4                     
  4587                           ; BSR set to: 15
  4588                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4589   0041E4  88A7               	bsf	167,4,c	;volatile
  4590                           
  4591                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4592   0041E6  50A7               	movf	167,w,c	;volatile
  4593   0041E8  0BF0               	andlw	-16
  4594   0041EA  090C               	iorlw	12
  4595   0041EC  6EA7               	movwf	167,c	;volatile
  4596   0041EE                     
  4597                           ; BSR set to: 15
  4598                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4599   0041EE  8EA7               	bsf	167,7,c	;volatile
  4600   0041F0                     
  4601                           ; BSR set to: 15
  4602                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4603   0041F0  8926               	bsf	38,4,b	;volatile
  4604                           
  4605                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4606   0041F2  5126               	movf	38,w,b	;volatile
  4607   0041F4  0BF0               	andlw	-16
  4608   0041F6  090C               	iorlw	12
  4609   0041F8  6F26               	movwf	38,b	;volatile
  4610   0041FA                     
  4611                           ; BSR set to: 15
  4612                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4613   0041FA  8F26               	bsf	38,7,b	;volatile
  4614   0041FC                     
  4615                           ; BSR set to: 15
  4616                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4617   0041FC  8922               	bsf	34,4,b	;volatile
  4618                           
  4619                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4620   0041FE  5122               	movf	34,w,b	;volatile
  4621   004200  0BF0               	andlw	-16
  4622   004202  090C               	iorlw	12
  4623   004204  6F22               	movwf	34,b	;volatile
  4624   004206                     
  4625                           ; BSR set to: 15
  4626                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4627   004206  8F22               	bsf	34,7,b	;volatile
  4628   004208                     
  4629                           ; BSR set to: 15
  4630   004208  0012               	return		;funcret
  4631   00420A                     __end_of_initDCmotorsPWM:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _go_Home *****************
  4635 ;; Defined at:
  4636 ;;		line 4 in file "Memory.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4639 ;;		 -> WayBack(50), 
  4640 ;;  Time_forward    2   37[COMRAM] PTR int 
  4641 ;;		 -> Time_forward(100), 
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;  i               2   42[COMRAM] int 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;Total ram usage:        9 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 6
  4660 ;; This function calls:
  4661 ;;		_BlueMove
  4662 ;;		_GreenMove
  4663 ;;		_LightBlueMove
  4664 ;;		_OrangeMove
  4665 ;;		_RedMove
  4666 ;;		_ReversePink
  4667 ;;		_ReverseYellow
  4668 ;;		_reverseDetect
  4669 ;;		_timed_forward
  4670 ;; This function is called by:
  4671 ;;		_main
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text23
  4676   002DF6                     __ptext23:
  4677                           	callstack 0
  4678   002DF6                     _go_Home:
  4679                           	callstack 24
  4680   002DF6                     
  4681                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4682   002DF6  C0F0  F02B         	movff	_move_count,go_Home@i	;volatile
  4683   002DFA  C0F1  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  4684   002DFE                     l4568:
  4685   002DFE  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  4686   002E00  EF06  F017         	goto	u4320
  4687   002E04  EF04  F017         	goto	u4321
  4688   002E08                     u4321:
  4689   002E08  EF08  F017         	goto	l4572
  4690   002E0C                     u4320:
  4691   002E0C  EF50  F018         	goto	l635
  4692   002E10                     l4572:
  4693                           
  4694                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  4695   002E10  0EF5               	movlw	low _motorL
  4696   002E12  6E14               	movwf	timed_forward@mL^0,c
  4697   002E14  0E00               	movlw	high _motorL
  4698   002E16  6E15               	movwf	(timed_forward@mL+1)^0,c
  4699   002E18  0EBC               	movlw	low _motorR
  4700   002E1A  6E16               	movwf	timed_forward@mR^0,c
  4701   002E1C  0E01               	movlw	high _motorR
  4702   002E1E  6E17               	movwf	(timed_forward@mR+1)^0,c
  4703   002E20  90D8               	bcf	status,0,c
  4704   002E22  342B               	rlcf	go_Home@i^0,w,c
  4705   002E24  6ED9               	movwf	fsr2l,c
  4706   002E26  342C               	rlcf	(go_Home@i+1)^0,w,c
  4707   002E28  6EDA               	movwf	fsr2h,c
  4708   002E2A  5026               	movf	go_Home@Time_forward^0,w,c
  4709   002E2C  26D9               	addwf	fsr2l,f,c
  4710   002E2E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4711   002E30  22DA               	addwfc	fsr2h,f,c
  4712   002E32  CFDE F018          	movff	postinc2,timed_forward@time
  4713   002E36  CFDD F019          	movff	postdec2,timed_forward@time+1
  4714   002E3A  ECDB  F01E         	call	_timed_forward	;wreg free
  4715   002E3E                     
  4716                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  4717   002E3E  502B               	movf	go_Home@i^0,w,c
  4718   002E40  2424               	addwf	go_Home@WayBack^0,w,c
  4719   002E42  6E28               	movwf	??_go_Home^0,c
  4720   002E44  502C               	movf	(go_Home@i+1)^0,w,c
  4721   002E46  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4722   002E48  6E29               	movwf	(??_go_Home+1)^0,c
  4723   002E4A  0EFF               	movlw	255
  4724   002E4C  2428               	addwf	??_go_Home^0,w,c
  4725   002E4E  6ED9               	movwf	fsr2l,c
  4726   002E50  0EFF               	movlw	255
  4727   002E52  2029               	addwfc	(??_go_Home+1)^0,w,c
  4728   002E54  6EDA               	movwf	fsr2h,c
  4729   002E56  04DE               	decf	postinc2,w,c
  4730   002E58  A4D8               	btfss	status,2,c
  4731   002E5A  EF31  F017         	goto	u4331
  4732   002E5E  EF33  F017         	goto	u4330
  4733   002E62                     u4331:
  4734   002E62  EF49  F017         	goto	l4578
  4735   002E66                     u4330:
  4736   002E66                     
  4737                           ;Memory.c: 22:             reverseDetect(&motorL, &motorR);
  4738   002E66  0EF5               	movlw	low _motorL
  4739   002E68  6E1A               	movwf	reverseDetect@mL^0,c
  4740   002E6A  0E00               	movlw	high _motorL
  4741   002E6C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4742   002E6E  0EBC               	movlw	low _motorR
  4743   002E70  6E1C               	movwf	reverseDetect@mR^0,c
  4744   002E72  0E01               	movlw	high _motorR
  4745   002E74  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4746   002E76  EC09  F023         	call	_reverseDetect	;wreg free
  4747                           
  4748                           ;Memory.c: 23:             GreenMove(&motorL, &motorR);
  4749   002E7A  0EF5               	movlw	low _motorL
  4750   002E7C  6E20               	movwf	GreenMove@mL^0,c
  4751   002E7E  0E00               	movlw	high _motorL
  4752   002E80  6E21               	movwf	(GreenMove@mL+1)^0,c
  4753   002E82  0EBC               	movlw	low _motorR
  4754   002E84  6E22               	movwf	GreenMove@mR^0,c
  4755   002E86  0E01               	movlw	high _motorR
  4756   002E88  6E23               	movwf	(GreenMove@mR+1)^0,c
  4757   002E8A  ECF0  F025         	call	_GreenMove	;wreg free
  4758                           
  4759                           ;Memory.c: 24:         }
  4760   002E8E  EF4B  F018         	goto	l4602
  4761   002E92                     l4578:
  4762   002E92  502B               	movf	go_Home@i^0,w,c
  4763   002E94  2424               	addwf	go_Home@WayBack^0,w,c
  4764   002E96  6E28               	movwf	??_go_Home^0,c
  4765   002E98  502C               	movf	(go_Home@i+1)^0,w,c
  4766   002E9A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4767   002E9C  6E29               	movwf	(??_go_Home+1)^0,c
  4768   002E9E  0EFF               	movlw	255
  4769   002EA0  2428               	addwf	??_go_Home^0,w,c
  4770   002EA2  6ED9               	movwf	fsr2l,c
  4771   002EA4  0EFF               	movlw	255
  4772   002EA6  2029               	addwfc	(??_go_Home+1)^0,w,c
  4773   002EA8  6EDA               	movwf	fsr2h,c
  4774   002EAA  0E02               	movlw	2
  4775   002EAC  18DE               	xorwf	postinc2,w,c
  4776   002EAE  A4D8               	btfss	status,2,c
  4777   002EB0  EF5C  F017         	goto	u4341
  4778   002EB4  EF5E  F017         	goto	u4340
  4779   002EB8                     u4341:
  4780   002EB8  EF74  F017         	goto	l4582
  4781   002EBC                     u4340:
  4782   002EBC                     
  4783                           ;Memory.c: 26:             reverseDetect(&motorL, &motorR);
  4784   002EBC  0EF5               	movlw	low _motorL
  4785   002EBE  6E1A               	movwf	reverseDetect@mL^0,c
  4786   002EC0  0E00               	movlw	high _motorL
  4787   002EC2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4788   002EC4  0EBC               	movlw	low _motorR
  4789   002EC6  6E1C               	movwf	reverseDetect@mR^0,c
  4790   002EC8  0E01               	movlw	high _motorR
  4791   002ECA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4792   002ECC  EC09  F023         	call	_reverseDetect	;wreg free
  4793                           
  4794                           ;Memory.c: 27:             LightBlueMove(&motorL, &motorR);
  4795   002ED0  0EF5               	movlw	low _motorL
  4796   002ED2  6E20               	movwf	LightBlueMove@mL^0,c
  4797   002ED4  0E00               	movlw	high _motorL
  4798   002ED6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4799   002ED8  0EBC               	movlw	low _motorR
  4800   002EDA  6E22               	movwf	LightBlueMove@mR^0,c
  4801   002EDC  0E01               	movlw	high _motorR
  4802   002EDE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4803   002EE0  ECE0  F023         	call	_LightBlueMove	;wreg free
  4804                           
  4805                           ;Memory.c: 28:         }
  4806   002EE4  EF4B  F018         	goto	l4602
  4807   002EE8                     l4582:
  4808   002EE8  502B               	movf	go_Home@i^0,w,c
  4809   002EEA  2424               	addwf	go_Home@WayBack^0,w,c
  4810   002EEC  6E28               	movwf	??_go_Home^0,c
  4811   002EEE  502C               	movf	(go_Home@i+1)^0,w,c
  4812   002EF0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4813   002EF2  6E29               	movwf	(??_go_Home+1)^0,c
  4814   002EF4  0EFF               	movlw	255
  4815   002EF6  2428               	addwf	??_go_Home^0,w,c
  4816   002EF8  6ED9               	movwf	fsr2l,c
  4817   002EFA  0EFF               	movlw	255
  4818   002EFC  2029               	addwfc	(??_go_Home+1)^0,w,c
  4819   002EFE  6EDA               	movwf	fsr2h,c
  4820   002F00  0E03               	movlw	3
  4821   002F02  18DE               	xorwf	postinc2,w,c
  4822   002F04  A4D8               	btfss	status,2,c
  4823   002F06  EF87  F017         	goto	u4351
  4824   002F0A  EF89  F017         	goto	u4350
  4825   002F0E                     u4351:
  4826   002F0E  EF9F  F017         	goto	l4586
  4827   002F12                     u4350:
  4828   002F12                     
  4829                           ;Memory.c: 30:             reverseDetect(&motorL, &motorR);
  4830   002F12  0EF5               	movlw	low _motorL
  4831   002F14  6E1A               	movwf	reverseDetect@mL^0,c
  4832   002F16  0E00               	movlw	high _motorL
  4833   002F18  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4834   002F1A  0EBC               	movlw	low _motorR
  4835   002F1C  6E1C               	movwf	reverseDetect@mR^0,c
  4836   002F1E  0E01               	movlw	high _motorR
  4837   002F20  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4838   002F22  EC09  F023         	call	_reverseDetect	;wreg free
  4839                           
  4840                           ;Memory.c: 31:             ReverseYellow(&motorL, &motorR);
  4841   002F26  0EF5               	movlw	low _motorL
  4842   002F28  6E20               	movwf	ReverseYellow@mL^0,c
  4843   002F2A  0E00               	movlw	high _motorL
  4844   002F2C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4845   002F2E  0EBC               	movlw	low _motorR
  4846   002F30  6E22               	movwf	ReverseYellow@mR^0,c
  4847   002F32  0E01               	movlw	high _motorR
  4848   002F34  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4849   002F36  EC25  F01E         	call	_ReverseYellow	;wreg free
  4850                           
  4851                           ;Memory.c: 32:         }
  4852   002F3A  EF4B  F018         	goto	l4602
  4853   002F3E                     l4586:
  4854   002F3E  502B               	movf	go_Home@i^0,w,c
  4855   002F40  2424               	addwf	go_Home@WayBack^0,w,c
  4856   002F42  6E28               	movwf	??_go_Home^0,c
  4857   002F44  502C               	movf	(go_Home@i+1)^0,w,c
  4858   002F46  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4859   002F48  6E29               	movwf	(??_go_Home+1)^0,c
  4860   002F4A  0EFF               	movlw	255
  4861   002F4C  2428               	addwf	??_go_Home^0,w,c
  4862   002F4E  6ED9               	movwf	fsr2l,c
  4863   002F50  0EFF               	movlw	255
  4864   002F52  2029               	addwfc	(??_go_Home+1)^0,w,c
  4865   002F54  6EDA               	movwf	fsr2h,c
  4866   002F56  0E04               	movlw	4
  4867   002F58  18DE               	xorwf	postinc2,w,c
  4868   002F5A  A4D8               	btfss	status,2,c
  4869   002F5C  EFB2  F017         	goto	u4361
  4870   002F60  EFB4  F017         	goto	u4360
  4871   002F64                     u4361:
  4872   002F64  EFCA  F017         	goto	l4590
  4873   002F68                     u4360:
  4874   002F68                     
  4875                           ;Memory.c: 34:             reverseDetect(&motorL, &motorR);
  4876   002F68  0EF5               	movlw	low _motorL
  4877   002F6A  6E1A               	movwf	reverseDetect@mL^0,c
  4878   002F6C  0E00               	movlw	high _motorL
  4879   002F6E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4880   002F70  0EBC               	movlw	low _motorR
  4881   002F72  6E1C               	movwf	reverseDetect@mR^0,c
  4882   002F74  0E01               	movlw	high _motorR
  4883   002F76  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4884   002F78  EC09  F023         	call	_reverseDetect	;wreg free
  4885                           
  4886                           ;Memory.c: 35:             BlueMove(&motorL, &motorR);
  4887   002F7C  0EF5               	movlw	low _motorL
  4888   002F7E  6E20               	movwf	BlueMove@mL^0,c
  4889   002F80  0E00               	movlw	high _motorL
  4890   002F82  6E21               	movwf	(BlueMove@mL+1)^0,c
  4891   002F84  0EBC               	movlw	low _motorR
  4892   002F86  6E22               	movwf	BlueMove@mR^0,c
  4893   002F88  0E01               	movlw	high _motorR
  4894   002F8A  6E23               	movwf	(BlueMove@mR+1)^0,c
  4895   002F8C  ECF3  F021         	call	_BlueMove	;wreg free
  4896                           
  4897                           ;Memory.c: 36:         }
  4898   002F90  EF4B  F018         	goto	l4602
  4899   002F94                     l4590:
  4900   002F94  502B               	movf	go_Home@i^0,w,c
  4901   002F96  2424               	addwf	go_Home@WayBack^0,w,c
  4902   002F98  6E28               	movwf	??_go_Home^0,c
  4903   002F9A  502C               	movf	(go_Home@i+1)^0,w,c
  4904   002F9C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4905   002F9E  6E29               	movwf	(??_go_Home+1)^0,c
  4906   002FA0  0EFF               	movlw	255
  4907   002FA2  2428               	addwf	??_go_Home^0,w,c
  4908   002FA4  6ED9               	movwf	fsr2l,c
  4909   002FA6  0EFF               	movlw	255
  4910   002FA8  2029               	addwfc	(??_go_Home+1)^0,w,c
  4911   002FAA  6EDA               	movwf	fsr2h,c
  4912   002FAC  0E05               	movlw	5
  4913   002FAE  18DE               	xorwf	postinc2,w,c
  4914   002FB0  A4D8               	btfss	status,2,c
  4915   002FB2  EFDD  F017         	goto	u4371
  4916   002FB6  EFDF  F017         	goto	u4370
  4917   002FBA                     u4371:
  4918   002FBA  EFF5  F017         	goto	l4594
  4919   002FBE                     u4370:
  4920   002FBE                     
  4921                           ;Memory.c: 38:             reverseDetect(&motorL, &motorR);
  4922   002FBE  0EF5               	movlw	low _motorL
  4923   002FC0  6E1A               	movwf	reverseDetect@mL^0,c
  4924   002FC2  0E00               	movlw	high _motorL
  4925   002FC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4926   002FC6  0EBC               	movlw	low _motorR
  4927   002FC8  6E1C               	movwf	reverseDetect@mR^0,c
  4928   002FCA  0E01               	movlw	high _motorR
  4929   002FCC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4930   002FCE  EC09  F023         	call	_reverseDetect	;wreg free
  4931                           
  4932                           ;Memory.c: 39:             RedMove(&motorL, &motorR);
  4933   002FD2  0EF5               	movlw	low _motorL
  4934   002FD4  6E20               	movwf	RedMove@mL^0,c
  4935   002FD6  0E00               	movlw	high _motorL
  4936   002FD8  6E21               	movwf	(RedMove@mL+1)^0,c
  4937   002FDA  0EBC               	movlw	low _motorR
  4938   002FDC  6E22               	movwf	RedMove@mR^0,c
  4939   002FDE  0E01               	movlw	high _motorR
  4940   002FE0  6E23               	movwf	(RedMove@mR+1)^0,c
  4941   002FE2  ECD1  F025         	call	_RedMove	;wreg free
  4942                           
  4943                           ;Memory.c: 40:         }
  4944   002FE6  EF4B  F018         	goto	l4602
  4945   002FEA                     l4594:
  4946   002FEA  502B               	movf	go_Home@i^0,w,c
  4947   002FEC  2424               	addwf	go_Home@WayBack^0,w,c
  4948   002FEE  6E28               	movwf	??_go_Home^0,c
  4949   002FF0  502C               	movf	(go_Home@i+1)^0,w,c
  4950   002FF2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4951   002FF4  6E29               	movwf	(??_go_Home+1)^0,c
  4952   002FF6  0EFF               	movlw	255
  4953   002FF8  2428               	addwf	??_go_Home^0,w,c
  4954   002FFA  6ED9               	movwf	fsr2l,c
  4955   002FFC  0EFF               	movlw	255
  4956   002FFE  2029               	addwfc	(??_go_Home+1)^0,w,c
  4957   003000  6EDA               	movwf	fsr2h,c
  4958   003002  0E06               	movlw	6
  4959   003004  18DE               	xorwf	postinc2,w,c
  4960   003006  A4D8               	btfss	status,2,c
  4961   003008  EF08  F018         	goto	u4381
  4962   00300C  EF0A  F018         	goto	u4380
  4963   003010                     u4381:
  4964   003010  EF20  F018         	goto	l4598
  4965   003014                     u4380:
  4966   003014                     
  4967                           ;Memory.c: 42:             reverseDetect(&motorL, &motorR);
  4968   003014  0EF5               	movlw	low _motorL
  4969   003016  6E1A               	movwf	reverseDetect@mL^0,c
  4970   003018  0E00               	movlw	high _motorL
  4971   00301A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  4972   00301C  0EBC               	movlw	low _motorR
  4973   00301E  6E1C               	movwf	reverseDetect@mR^0,c
  4974   003020  0E01               	movlw	high _motorR
  4975   003022  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  4976   003024  EC09  F023         	call	_reverseDetect	;wreg free
  4977                           
  4978                           ;Memory.c: 43:             OrangeMove(&motorL, &motorR);
  4979   003028  0EF5               	movlw	low _motorL
  4980   00302A  6E20               	movwf	OrangeMove@mL^0,c
  4981   00302C  0E00               	movlw	high _motorL
  4982   00302E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4983   003030  0EBC               	movlw	low _motorR
  4984   003032  6E22               	movwf	OrangeMove@mR^0,c
  4985   003034  0E01               	movlw	high _motorR
  4986   003036  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4987   003038  ECB7  F023         	call	_OrangeMove	;wreg free
  4988                           
  4989                           ;Memory.c: 44:         }
  4990   00303C  EF4B  F018         	goto	l4602
  4991   003040                     l4598:
  4992   003040  502B               	movf	go_Home@i^0,w,c
  4993   003042  2424               	addwf	go_Home@WayBack^0,w,c
  4994   003044  6E28               	movwf	??_go_Home^0,c
  4995   003046  502C               	movf	(go_Home@i+1)^0,w,c
  4996   003048  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4997   00304A  6E29               	movwf	(??_go_Home+1)^0,c
  4998   00304C  0EFF               	movlw	255
  4999   00304E  2428               	addwf	??_go_Home^0,w,c
  5000   003050  6ED9               	movwf	fsr2l,c
  5001   003052  0EFF               	movlw	255
  5002   003054  2029               	addwfc	(??_go_Home+1)^0,w,c
  5003   003056  6EDA               	movwf	fsr2h,c
  5004   003058  0E07               	movlw	7
  5005   00305A  18DE               	xorwf	postinc2,w,c
  5006   00305C  A4D8               	btfss	status,2,c
  5007   00305E  EF33  F018         	goto	u4391
  5008   003062  EF35  F018         	goto	u4390
  5009   003066                     u4391:
  5010   003066  EF4B  F018         	goto	l629
  5011   00306A                     u4390:
  5012   00306A                     
  5013                           ;Memory.c: 46:             reverseDetect(&motorL, &motorR);
  5014   00306A  0EF5               	movlw	low _motorL
  5015   00306C  6E1A               	movwf	reverseDetect@mL^0,c
  5016   00306E  0E00               	movlw	high _motorL
  5017   003070  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5018   003072  0EBC               	movlw	low _motorR
  5019   003074  6E1C               	movwf	reverseDetect@mR^0,c
  5020   003076  0E01               	movlw	high _motorR
  5021   003078  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5022   00307A  EC09  F023         	call	_reverseDetect	;wreg free
  5023                           
  5024                           ;Memory.c: 47:             ReversePink(&motorL, &motorR);
  5025   00307E  0EF5               	movlw	low _motorL
  5026   003080  6E20               	movwf	ReversePink@mL^0,c
  5027   003082  0E00               	movlw	high _motorL
  5028   003084  6E21               	movwf	(ReversePink@mL+1)^0,c
  5029   003086  0EBC               	movlw	low _motorR
  5030   003088  6E22               	movwf	ReversePink@mR^0,c
  5031   00308A  0E01               	movlw	high _motorR
  5032   00308C  6E23               	movwf	(ReversePink@mR+1)^0,c
  5033   00308E  EC80  F01E         	call	_ReversePink	;wreg free
  5034   003092  EF4B  F018         	goto	l4602
  5035   003096                     l629:
  5036   003096                     l4602:
  5037                           
  5038                           ;Memory.c: 51:   }
  5039   003096  062B               	decf	go_Home@i^0,f,c
  5040   003098  A0D8               	btfss	status,0,c
  5041   00309A  062C               	decf	(go_Home@i+1)^0,f,c
  5042   00309C  EFFF  F016         	goto	l4568
  5043   0030A0                     l635:
  5044   0030A0  0012               	return		;funcret
  5045   0030A2                     __end_of_go_Home:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _timed_forward *****************
  5049 ;; Defined at:
  5050 ;;		line 164 in file "dc_motor.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5053 ;;		 -> motorL(9), 
  5054 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5055 ;;		 -> motorR(9), 
  5056 ;;  time            2   23[COMRAM] int 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;Total ram usage:        8 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 3
  5075 ;; This function calls:
  5076 ;;		_delayed_ms
  5077 ;;		_setMotorPWM
  5078 ;; This function is called by:
  5079 ;;		_go_Home
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text24
  5084   003DB6                     __ptext24:
  5085                           	callstack 0
  5086   003DB6                     _timed_forward:
  5087                           	callstack 26
  5088   003DB6                     
  5089                           ;dc_motor.c: 164: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 165: {;dc_motor.c: 167:     mL->direction =1;
  5090   003DB6  EE20 F001          	lfsr	2,1
  5091   003DBA  5014               	movf	timed_forward@mL^0,w,c
  5092   003DBC  26D9               	addwf	fsr2l,f,c
  5093   003DBE  5015               	movf	(timed_forward@mL+1)^0,w,c
  5094   003DC0  22DA               	addwfc	fsr2h,f,c
  5095   003DC2  0E01               	movlw	1
  5096   003DC4  6EDF               	movwf	indf2,c
  5097                           
  5098                           ;dc_motor.c: 168:     mR->direction =1;
  5099   003DC6  EE20 F001          	lfsr	2,1
  5100   003DCA  5016               	movf	timed_forward@mR^0,w,c
  5101   003DCC  26D9               	addwf	fsr2l,f,c
  5102   003DCE  5017               	movf	(timed_forward@mR+1)^0,w,c
  5103   003DD0  22DA               	addwfc	fsr2h,f,c
  5104   003DD2  0E01               	movlw	1
  5105   003DD4  6EDF               	movwf	indf2,c
  5106                           
  5107                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  5108   003DD6  EF11  F01F         	goto	l3848
  5109   003DDA                     l3840:
  5110                           
  5111                           ;dc_motor.c: 171:         mL->power+=10;
  5112   003DDA  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5113   003DDE  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5114   003DE2  0E0A               	movlw	10
  5115   003DE4  26DF               	addwf	indf2,f,c
  5116                           
  5117                           ;dc_motor.c: 172:         mR->power+=10;
  5118   003DE6  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5119   003DEA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5120   003DEE  0E0A               	movlw	10
  5121   003DF0  26DF               	addwf	indf2,f,c
  5122   003DF2                     
  5123                           ;dc_motor.c: 174:         setMotorPWM(mL);
  5124   003DF2  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5125   003DF6  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5126   003DFA  EC2E  F01B         	call	_setMotorPWM	;wreg free
  5127   003DFE                     
  5128                           ;dc_motor.c: 175:         setMotorPWM(mR);
  5129   003DFE  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5130   003E02  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5131   003E06  EC2E  F01B         	call	_setMotorPWM	;wreg free
  5132   003E0A                     
  5133                           ;dc_motor.c: 178:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5134   003E0A  0E02               	movlw	2
  5135   003E0C  6E1B               	movwf	(??_timed_forward+1)^0,c
  5136   003E0E  0EA0               	movlw	160
  5137   003E10  6E1A               	movwf	??_timed_forward^0,c
  5138   003E12  0E92               	movlw	146
  5139   003E14                     u4777:
  5140   003E14  2EE8               	decfsz	wreg,f,c
  5141   003E16  D7FE               	bra	u4777
  5142   003E18  2E1A               	decfsz	??_timed_forward^0,f,c
  5143   003E1A  D7FC               	bra	u4777
  5144   003E1C  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5145   003E1E  D7FA               	bra	u4777
  5146   003E20  D000               	nop2	
  5147   003E22                     l3848:
  5148   003E22  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5149   003E26  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5150   003E2A  0E1E               	movlw	30
  5151   003E2C  60DF               	cpfslt	indf2,c
  5152   003E2E  EF1B  F01F         	goto	u3321
  5153   003E32  EF1D  F01F         	goto	u3320
  5154   003E36                     u3321:
  5155   003E36  EF29  F01F         	goto	l3852
  5156   003E3A                     u3320:
  5157   003E3A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5158   003E3E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5159   003E42  0E1D               	movlw	29
  5160   003E44  64DF               	cpfsgt	indf2,c
  5161   003E46  EF27  F01F         	goto	u3331
  5162   003E4A  EF29  F01F         	goto	u3330
  5163   003E4E                     u3331:
  5164   003E4E  EFED  F01E         	goto	l3840
  5165   003E52                     u3330:
  5166   003E52                     l3852:
  5167                           
  5168                           ;dc_motor.c: 180:     delayed_ms(time);
  5169   003E52  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5170   003E56  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5171   003E5A  EC0F  F026         	call	_delayed_ms	;wreg free
  5172   003E5E  0012               	return		;funcret
  5173   003E60                     __end_of_timed_forward:
  5174                           	callstack 0
  5175                           
  5176 ;; *************** function _delayed_ms *****************
  5177 ;; Defined at:
  5178 ;;		line 39 in file "timers.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  time            2    0[COMRAM] int 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  i               2    3[COMRAM] unsigned int 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;Total ram usage:        5 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_timed_forward
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text25
  5207   004C1E                     __ptext25:
  5208                           	callstack 0
  5209   004C1E                     _delayed_ms:
  5210                           	callstack 27
  5211   004C1E                     
  5212                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5213   004C1E  0E00               	movlw	0
  5214   004C20  6E05               	movwf	(delayed_ms@i+1)^0,c
  5215   004C22  0E00               	movlw	0
  5216   004C24  6E04               	movwf	delayed_ms@i^0,c
  5217   004C26  EF1F  F026         	goto	l662
  5218   004C2A                     l3520:
  5219                           
  5220                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5221   004C2A  0E15               	movlw	21
  5222   004C2C  6E03               	movwf	??_delayed_ms^0,c
  5223   004C2E  0EC6               	movlw	198
  5224   004C30                     u4787:
  5225   004C30  2EE8               	decfsz	wreg,f,c
  5226   004C32  D7FE               	bra	u4787
  5227   004C34  2E03               	decfsz	??_delayed_ms^0,f,c
  5228   004C36  D7FC               	bra	u4787
  5229   004C38  D000               	nop2	
  5230   004C3A                     
  5231                           ;timers.c: 42:     }
  5232   004C3A  4A04               	infsnz	delayed_ms@i^0,f,c
  5233   004C3C  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5234   004C3E                     l662:
  5235   004C3E  5001               	movf	delayed_ms@time^0,w,c
  5236   004C40  5C04               	subwf	delayed_ms@i^0,w,c
  5237   004C42  5002               	movf	(delayed_ms@time+1)^0,w,c
  5238   004C44  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5239   004C46  A0D8               	btfss	status,0,c
  5240   004C48  EF28  F026         	goto	u2881
  5241   004C4C  EF2A  F026         	goto	u2880
  5242   004C50                     u2881:
  5243   004C50  EF15  F026         	goto	l3520
  5244   004C54                     u2880:
  5245   004C54  0012               	return		;funcret
  5246   004C56                     __end_of_delayed_ms:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _ReverseYellow *****************
  5250 ;; Defined at:
  5251 ;;		line 320 in file "dc_motor.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5254 ;;		 -> motorL(9), 
  5255 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5256 ;;		 -> motorR(9), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 5
  5275 ;; This function calls:
  5276 ;;		_ForwardOneBlock
  5277 ;;		_reverseDetect
  5278 ;;		_turnRight45
  5279 ;; This function is called by:
  5280 ;;		_go_Home
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text26
  5285   003C4A                     __ptext26:
  5286                           	callstack 0
  5287   003C4A                     _ReverseYellow:
  5288                           	callstack 24
  5289   003C4A                     
  5290                           ;dc_motor.c: 321:     reverseDetect(&motorL, &motorR);
  5291   003C4A  0EF5               	movlw	low _motorL
  5292   003C4C  6E1A               	movwf	reverseDetect@mL^0,c
  5293   003C4E  0E00               	movlw	high _motorL
  5294   003C50  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5295   003C52  0EBC               	movlw	low _motorR
  5296   003C54  6E1C               	movwf	reverseDetect@mR^0,c
  5297   003C56  0E01               	movlw	high _motorR
  5298   003C58  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5299   003C5A  EC09  F023         	call	_reverseDetect	;wreg free
  5300                           
  5301                           ;dc_motor.c: 322:     turnRight45(&motorL, &motorR);
  5302   003C5E  0EF5               	movlw	low _motorL
  5303   003C60  6E1A               	movwf	turnRight45@mL^0,c
  5304   003C62  0E00               	movlw	high _motorL
  5305   003C64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5306   003C66  0EBC               	movlw	low _motorR
  5307   003C68  6E1C               	movwf	turnRight45@mR^0,c
  5308   003C6A  0E01               	movlw	high _motorR
  5309   003C6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5310   003C6E  EC36  F023         	call	_turnRight45	;wreg free
  5311                           
  5312                           ;dc_motor.c: 323:     turnRight45(&motorL, &motorR);
  5313   003C72  0EF5               	movlw	low _motorL
  5314   003C74  6E1A               	movwf	turnRight45@mL^0,c
  5315   003C76  0E00               	movlw	high _motorL
  5316   003C78  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5317   003C7A  0EBC               	movlw	low _motorR
  5318   003C7C  6E1C               	movwf	turnRight45@mR^0,c
  5319   003C7E  0E01               	movlw	high _motorR
  5320   003C80  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5321   003C82  EC36  F023         	call	_turnRight45	;wreg free
  5322                           
  5323                           ;dc_motor.c: 324:     ForwardOneBlock(&motorL, &motorR);
  5324   003C86  0EF5               	movlw	low _motorL
  5325   003C88  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5326   003C8A  0E00               	movlw	high _motorL
  5327   003C8C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5328   003C8E  0EBC               	movlw	low _motorR
  5329   003C90  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5330   003C92  0E01               	movlw	high _motorR
  5331   003C94  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5332   003C96  EC55  F022         	call	_ForwardOneBlock	;wreg free
  5333                           
  5334                           ;dc_motor.c: 325:     reverseDetect(&motorL, &motorR);
  5335   003C9A  0EF5               	movlw	low _motorL
  5336   003C9C  6E1A               	movwf	reverseDetect@mL^0,c
  5337   003C9E  0E00               	movlw	high _motorL
  5338   003CA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5339   003CA2  0EBC               	movlw	low _motorR
  5340   003CA4  6E1C               	movwf	reverseDetect@mR^0,c
  5341   003CA6  0E01               	movlw	high _motorR
  5342   003CA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5343   003CAA  EC09  F023         	call	_reverseDetect	;wreg free
  5344                           
  5345                           ;dc_motor.c: 326:     turnRight45(&motorL, &motorR);
  5346   003CAE  0EF5               	movlw	low _motorL
  5347   003CB0  6E1A               	movwf	turnRight45@mL^0,c
  5348   003CB2  0E00               	movlw	high _motorL
  5349   003CB4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5350   003CB6  0EBC               	movlw	low _motorR
  5351   003CB8  6E1C               	movwf	turnRight45@mR^0,c
  5352   003CBA  0E01               	movlw	high _motorR
  5353   003CBC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5354   003CBE  EC36  F023         	call	_turnRight45	;wreg free
  5355                           
  5356                           ;dc_motor.c: 327:     turnRight45(&motorL, &motorR);
  5357   003CC2  0EF5               	movlw	low _motorL
  5358   003CC4  6E1A               	movwf	turnRight45@mL^0,c
  5359   003CC6  0E00               	movlw	high _motorL
  5360   003CC8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5361   003CCA  0EBC               	movlw	low _motorR
  5362   003CCC  6E1C               	movwf	turnRight45@mR^0,c
  5363   003CCE  0E01               	movlw	high _motorR
  5364   003CD0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5365   003CD2  EC36  F023         	call	_turnRight45	;wreg free
  5366                           
  5367                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
  5368   003CD6  0EF5               	movlw	low _motorL
  5369   003CD8  6E1A               	movwf	turnRight45@mL^0,c
  5370   003CDA  0E00               	movlw	high _motorL
  5371   003CDC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5372   003CDE  0EBC               	movlw	low _motorR
  5373   003CE0  6E1C               	movwf	turnRight45@mR^0,c
  5374   003CE2  0E01               	movlw	high _motorR
  5375   003CE4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5376   003CE6  EC36  F023         	call	_turnRight45	;wreg free
  5377                           
  5378                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
  5379   003CEA  0EF5               	movlw	low _motorL
  5380   003CEC  6E1A               	movwf	turnRight45@mL^0,c
  5381   003CEE  0E00               	movlw	high _motorL
  5382   003CF0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5383   003CF2  0EBC               	movlw	low _motorR
  5384   003CF4  6E1C               	movwf	turnRight45@mR^0,c
  5385   003CF6  0E01               	movlw	high _motorR
  5386   003CF8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5387   003CFA  EC36  F023         	call	_turnRight45	;wreg free
  5388   003CFE  0012               	return		;funcret
  5389   003D00                     __end_of_ReverseYellow:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _ReversePink *****************
  5393 ;; Defined at:
  5394 ;;		line 332 in file "dc_motor.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5397 ;;		 -> motorL(9), 
  5398 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5399 ;;		 -> motorR(9), 
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
=======
  2871   0037FE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2872   003802  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2873   003806  CFDE FFF6          	movff	postinc2,tblptrl
  2874   00380A  CFDD FFF7          	movff	postdec2,tblptrh
  2875   00380E                     	if	0	;tblptru may be non-zero
  2876   00380E                     	endif
  2877   00380E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2878   00380E  0E00               	movlw	low (__mediumconst shr (0+16))
  2879   003810  6EF8               	movwf	tblptru,c
  2880   003812                     	endif
  2881   003812  0008               	tblrd		*
  2882   003814  50F5               	movf	tablat,w,c
  2883   003816  0A25               	xorlw	37
  2884   003818  A4D8               	btfss	status,2,c
  2885   00381A  EF11  F01C         	goto	u5031
  2886   00381E  EF13  F01C         	goto	u5030
  2887   003822                     u5031:
  2888   003822  EF6B  F01D         	goto	l5166
  2889   003826                     u5030:
  2890   003826                     
  2891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2892   003826  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2893   00382A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2894   00382E  2ADE               	incf	postinc2,f,c
  2895   003830  0E00               	movlw	0
  2896   003832  22DD               	addwfc	postdec2,f,c
  2897   003834                     
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2899   003834  0E00               	movlw	0
  2900   003836  0100               	movlb	0	; () banked
  2901   003838  6FEE               	movwf	(_width+1)& (0+255),b
  2902   00383A  0E00               	movlw	0
  2903   00383C  6FED               	movwf	_width& (0+255),b
  2904   00383E  C0ED  F0F1         	movff	_width,_flags
  2905   003842                     
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2908   003842  69EF               	setf	_prec& (0+255),b
  2909   003844  69F0               	setf	(_prec+1)& (0+255),b
  2910   003846                     
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2913   003846  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2914   00384A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2915   00384E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2916   003852  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2917   003856                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2920   003856  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2921   00385A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2922   00385E                     	if	0	;tblptru may be non-zero
  2923   00385E                     	endif
  2924   00385E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2925   00385E  0E00               	movlw	low (__mediumconst shr (0+16))
  2926   003860  6EF8               	movwf	tblptru,c
  2927   003862                     	endif
  2928   003862  0008               	tblrd		*
  2929   003864  50F5               	movf	tablat,w,c
  2930   003866  0A64               	xorlw	100
  2931   003868  B4D8               	btfsc	status,2,c
  2932   00386A  EF39  F01C         	goto	u5041
  2933   00386E  EF3B  F01C         	goto	u5040
  2934   003872                     u5041:
  2935   003872  EF4B  F01C         	goto	l5122
  2936   003876                     u5040:
  2937   003876                     
  2938                           ; BSR set to: 0
  2939   003876  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2940   00387A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2941   00387E                     	if	0	;tblptru may be non-zero
  2942   00387E                     	endif
  2943   00387E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2944   00387E  0E00               	movlw	low (__mediumconst shr (0+16))
  2945   003880  6EF8               	movwf	tblptru,c
  2946   003882                     	endif
  2947   003882  0008               	tblrd		*
  2948   003884  50F5               	movf	tablat,w,c
  2949   003886  0A69               	xorlw	105
  2950   003888  A4D8               	btfss	status,2,c
  2951   00388A  EF49  F01C         	goto	u5051
  2952   00388E  EF4B  F01C         	goto	u5050
  2953   003892                     u5051:
  2954   003892  EF8E  F01C         	goto	l5128
  2955   003896                     u5050:
  2956   003896                     l5122:
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2960   003896  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2961   00389A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2962   00389E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2963   0038A2  0E02               	movlw	2
  2964   0038A4  26DE               	addwf	postinc2,f,c
  2965   0038A6  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2966   0038AA  0E00               	movlw	0
  2967   0038AC  22DD               	addwfc	postdec2,f,c
  2968   0038AE  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2969   0038B2  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2970   0038B6  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2971   0038BA  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2972   0038BE  0E00               	movlw	0
  2973   0038C0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2974   0038C2  0EFF               	movlw	-1
  2975   0038C4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2976   0038C6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2977   0038C8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2978   0038CA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2979   0038CC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2980   0038CE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2983   0038D0  0E01               	movlw	1
  2984   0038D2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2985   0038D4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2986   0038D6  0E00               	movlw	0
  2987   0038D8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2988   0038DA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2989   0038DC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2990   0038E0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2991   0038E4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2992   0038E8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2993   0038EC                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2996   0038EC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2997   0038F0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2998   0038F4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2999   0038F8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3000   0038FC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3001   003900  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3002   003904  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3003   003908  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3004   00390C  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3005   003910  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3006   003914  ECF2  F01E         	call	_dtoa	;wreg free
  3007   003918  EF81  F01D         	goto	l1497
  3008   00391C                     l5128:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3012   00391C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3013   003920  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3014   003924  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3015   003928  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3016   00392C                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3019   00392C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3020   003930  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3021   003934                     	if	0	;tblptru may be non-zero
  3022   003934                     	endif
  3023   003934                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3024   003934  0E00               	movlw	low (__mediumconst shr (0+16))
  3025   003936  6EF8               	movwf	tblptru,c
  3026   003938                     	endif
  3027   003938  0008               	tblrd		*
  3028   00393A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3031   00393E  EFAD  F01C         	goto	l5140
  3032   003942                     l5132:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3036   003942  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3037   003944  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3040   003946  EFC6  F01C         	goto	l5142
  3041   00394A                     l5134:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3045   00394A  0E6C               	movlw	108
  3046   00394C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3049   00394E  EFC6  F01C         	goto	l5142
  3050   003952                     l5136:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3054   003952  0E00               	movlw	0
  3055   003954  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3056                           
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3058   003956  EFC6  F01C         	goto	l5142
  3059   00395A                     l5140:
  3060                           
  3061                           ; BSR set to: 0
  3062   00395A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3063   00395C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3064   00395E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3065                           
  3066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 1, Range of values is 0 to 0
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte            4     3 (average)
  3072                           ;	Chosen strategy is simple_byte
  3073   003960  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3074   003962  0A00               	xorlw	0	; case 0
  3075   003964  B4D8               	btfsc	status,2,c
  3076   003966  EFB7  F01C         	goto	l6178
  3077   00396A  EFA9  F01C         	goto	l5136
  3078   00396E                     l6178:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ; Switch size 1, requested type "simple"
  3082                           ; Number of cases is 3, Range of values is 76 to 108
  3083                           ; switch strategies available:
  3084                           ; Name         Instructions Cycles
  3085                           ; simple_byte           10     6 (average)
  3086                           ;	Chosen strategy is simple_byte
  3087   00396E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3088   003970  0A4C               	xorlw	76	; case 76
  3089   003972  B4D8               	btfsc	status,2,c
  3090   003974  EFA1  F01C         	goto	l5132
  3091   003978  0A2A               	xorlw	42	; case 102
  3092   00397A  B4D8               	btfsc	status,2,c
  3093   00397C  EFA5  F01C         	goto	l5134
  3094   003980  0A0A               	xorlw	10	; case 108
  3095   003982  B4D8               	btfsc	status,2,c
  3096   003984  EFA1  F01C         	goto	l5132
  3097   003988  EFA9  F01C         	goto	l5136
  3098   00398C                     l5142:
  3099                           
  3100                           ; BSR set to: 0
  3101   00398C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3102   003990  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3103   003994                     	if	0	;tblptru may be non-zero
  3104   003994                     	endif
  3105   003994                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3106   003994  0E00               	movlw	low (__mediumconst shr (0+16))
  3107   003996  6EF8               	movwf	tblptru,c
  3108   003998                     	endif
  3109   003998  0008               	tblrd		*
  3110   00399A  50F5               	movf	tablat,w,c
  3111   00399C  0A66               	xorlw	102
  3112   00399E  A4D8               	btfss	status,2,c
  3113   0039A0  EFD4  F01C         	goto	u5061
  3114   0039A4  EFD6  F01C         	goto	u5060
  3115   0039A8                     u5061:
  3116   0039A8  EF62  F01D         	goto	l5162
  3117   0039AC                     u5060:
  3118   0039AC  EF0C  F01D         	goto	l5150
  3119   0039B0                     l5144:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3123   0039B0  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3124   0039B4  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3125   0039B8  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3126   0039BC  0E04               	movlw	4
  3127   0039BE  26DE               	addwf	postinc2,f,c
  3128   0039C0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3129   0039C4  0E00               	movlw	0
  3130   0039C6  22DD               	addwfc	postdec2,f,c
  3131   0039C8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3132   0039CC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3133   0039D0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3134   0039D4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3135   0039D8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3136   0039DC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3139   0039E0  EF21  F01D         	goto	l5152
  3140   0039E4                     l5146:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3144   0039E4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3145   0039E8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3146   0039EC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3147   0039F0  0E04               	movlw	4
  3148   0039F2  26DE               	addwf	postinc2,f,c
  3149   0039F4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3150   0039F8  0E00               	movlw	0
  3151   0039FA  22DD               	addwfc	postdec2,f,c
  3152   0039FC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3153   003A00  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3154   003A04  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3155   003A08  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3156   003A0C  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3157   003A10  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3160   003A14  EF21  F01D         	goto	l5152
  3161   003A18                     l5150:
  3162                           
  3163                           ; BSR set to: 0
  3164   003A18  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3165   003A1A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3166   003A1C  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3167                           
  3168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3169                           ; Switch size 1, requested type "simple"
  3170                           ; Number of cases is 1, Range of values is 0 to 0
  3171                           ; switch strategies available:
  3172                           ; Name         Instructions Cycles
  3173                           ; simple_byte            4     3 (average)
  3174                           ;	Chosen strategy is simple_byte
  3175   003A1E  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3176   003A20  0A00               	xorlw	0	; case 0
  3177   003A22  B4D8               	btfsc	status,2,c
  3178   003A24  EF16  F01D         	goto	l6180
  3179   003A28  EF21  F01D         	goto	l5152
  3180   003A2C                     l6180:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ; Switch size 1, requested type "simple"
  3184                           ; Number of cases is 2, Range of values is 76 to 108
  3185                           ; switch strategies available:
  3186                           ; Name         Instructions Cycles
  3187                           ; simple_byte            7     4 (average)
  3188                           ;	Chosen strategy is simple_byte
  3189   003A2C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3190   003A2E  0A4C               	xorlw	76	; case 76
  3191   003A30  B4D8               	btfsc	status,2,c
  3192   003A32  EFF2  F01C         	goto	l5146
  3193   003A36  0A20               	xorlw	32	; case 108
  3194   003A38  B4D8               	btfsc	status,2,c
  3195   003A3A  EFD8  F01C         	goto	l5144
  3196   003A3E  EF21  F01D         	goto	l5152
  3197   003A42                     l5152:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3201   003A42  0E01               	movlw	1
  3202   003A44  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3203   003A46  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3204   003A48  0E00               	movlw	0
  3205   003A4A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3206   003A4C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3207   003A4E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3208   003A52  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3209   003A56  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3210   003A5A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3213   003A5E  EF4A  F01D         	goto	l5160
  3214   003A62                     l5154:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3218   003A62  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3219   003A66  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3220   003A6A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3221   003A6E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3222   003A72  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3223   003A76  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3224   003A7A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3225   003A7E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3226   003A82                     	if	0	;tblptru may be non-zero
  3227   003A82                     	endif
  3228   003A82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3229   003A82  0E00               	movlw	low (__mediumconst shr (0+16))
  3230   003A84  6EF8               	movwf	tblptru,c
  3231   003A86                     	endif
  3232   003A86  0008               	tblrd		*
  3233   003A88  CFF5 F066          	movff	tablat,efgtoa@c
  3234   003A8C  EC97  F00C         	call	_efgtoa	;wreg free
  3235   003A90  EF81  F01D         	goto	l1497
  3236   003A94                     l5160:
  3237                           
  3238                           ; BSR set to: 0
  3239   003A94  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3240   003A98  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3241   003A9C                     	if	0	;tblptru may be non-zero
  3242   003A9C                     	endif
  3243   003A9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3244   003A9C  0E00               	movlw	low (__mediumconst shr (0+16))
  3245   003A9E  6EF8               	movwf	tblptru,c
  3246   003AA0                     	endif
  3247   003AA0  0008               	tblrd		*
  3248   003AA2  50F5               	movf	tablat,w,c
  3249   003AA4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3250   003AA6  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3251                           
  3252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 1, Range of values is 0 to 0
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte            4     3 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259   003AA8  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3260   003AAA  0A00               	xorlw	0	; case 0
  3261   003AAC  B4D8               	btfsc	status,2,c
  3262   003AAE  EF5B  F01D         	goto	l6182
  3263   003AB2  EF62  F01D         	goto	l5162
  3264   003AB6                     l6182:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ; Switch size 1, requested type "simple"
  3268                           ; Number of cases is 1, Range of values is 102 to 102
  3269                           ; switch strategies available:
  3270                           ; Name         Instructions Cycles
  3271                           ; simple_byte            4     3 (average)
  3272                           ;	Chosen strategy is simple_byte
  3273   003AB6  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3274   003AB8  0A66               	xorlw	102	; case 102
  3275   003ABA  B4D8               	btfsc	status,2,c
  3276   003ABC  EF31  F01D         	goto	l5154
  3277   003AC0  EF62  F01D         	goto	l5162
  3278   003AC4                     l5162:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3281   003AC4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3282   003AC8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3283   003ACC  2ADE               	incf	postinc2,f,c
  3284   003ACE  0E00               	movlw	0
  3285   003AD0  22DD               	addwfc	postdec2,f,c
  3286   003AD2  EF81  F01D         	goto	l1497
  3287   003AD6                     l5166:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3290   003AD6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3291   003ADA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3292   003ADE  CFDE FFF6          	movff	postinc2,tblptrl
  3293   003AE2  CFDD FFF7          	movff	postdec2,tblptrh
  3294   003AE6                     	if	0	;tblptru may be non-zero
  3295   003AE6                     	endif
  3296   003AE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3297   003AE6  0E00               	movlw	low (__mediumconst shr (0+16))
  3298   003AE8  6EF8               	movwf	tblptru,c
  3299   003AEA                     	endif
  3300   003AEA  0008               	tblrd		*
  3301   003AEC  50F5               	movf	tablat,w,c
  3302   003AEE  6E01               	movwf	fputc@c^0,c
  3303   003AF0  6A02               	clrf	(fputc@c+1)^0,c
  3304   003AF2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3305   003AF6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3306   003AFA  ECB4  F026         	call	_fputc	;wreg free
  3307   003AFE  EF62  F01D         	goto	l5162
  3308   003B02                     l1497:
  3309   003B02  0012               	return		;funcret
  3310   003B04                     __end_of_vfpfcnvrt:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _efgtoa *****************
  3314 ;; Defined at:
  3315 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3318 ;;		 -> sprintf@f(11), 
  3319 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3320 ;;  c               1    6[BANK0 ] unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  u               4   49[BANK0 ] struct flui
  3323 ;;  g               4   45[BANK0 ] struct flui
  3324 ;;  l               4   38[BANK0 ] struct flui
  3325 ;;  h               4   34[BANK0 ] struct flui
  3326 ;;  ou              4   28[BANK0 ] struct flui
  3327 ;;  n               2   43[BANK0 ] int 
  3328 ;;  i               2   32[BANK0 ] int 
  3329 ;;  w               2   26[BANK0 ] int 
  3330 ;;  e               2   24[BANK0 ] int 
  3331 ;;  m               2   22[BANK0 ] int 
  3332 ;;  d               2   20[BANK0 ] int 
  3333 ;;  t               2   13[BANK0 ] int 
  3334 ;;  p               2   11[BANK0 ] int 
  3335 ;;  ne              2    9[BANK0 ] int 
  3336 ;;  sign            1   42[BANK0 ] unsigned char 
  3337 ;;  nmode           1   19[BANK0 ] unsigned char 
  3338 ;;  mode            1   18[BANK0 ] unsigned char 
  3339 ;;  pp              1   17[BANK0 ] unsigned char 
  3340 ;;  esign           1    0        unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3350 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3351 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;Total ram usage:       53 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; Hardware stack levels required when called: 4
  3357 ;; This function calls:
  3358 ;;		___fladd
  3359 ;;		___fldiv
  3360 ;;		___fleq
  3361 ;;		___flge
  3362 ;;		___flmul
  3363 ;;		___flneg
  3364 ;;		___flsub
  3365 ;;		___fltol
  3366 ;;		___fpclassifyf
  3367 ;;		_floorf
  3368 ;;		_labs
  3369 ;;		_memcpy
  3370 ;;		_pad
  3371 ;;		_strcpy
  3372 ;; This function is called by:
  3373 ;;		_vfpfcnvrt
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text5
  3378   00192E                     __ptext5:
  3379                           	callstack 0
  3380   00192E                     _efgtoa:
  3381                           	callstack 23
  3382   00192E                     
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3384   00192E  0E00               	movlw	0
  3385   001930  0100               	movlb	0	; () banked
  3386   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  3387   001934                     
  3388                           ; BSR set to: 0
  3389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3390   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3391   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3392   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3393   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3394   001944                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3397   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3398   001946  EFA9  F00C         	goto	u4680
  3399   00194A  EFA7  F00C         	goto	u4681
  3400   00194E                     u4681:
  3401   00194E  EFBD  F00C         	goto	l4832
  3402   001952                     u4680:
  3403   001952                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3406   001952  0E01               	movlw	1
  3407   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3408   001956                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3411   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3412   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3413   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3414   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3415   001966  EC7C  F02F         	call	___flneg	;wreg free
  3416   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3417   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3418   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3419   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3420   00197A                     l4832:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3423   00197A  0E00               	movlw	0
  3424   00197C  0100               	movlb	0	; () banked
  3425   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3426   001980  0E00               	movlw	0
  3427   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3428   001984                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3431   001984  C0ED  F07A         	movff	_width,efgtoa@w
  3432   001988  C0EE  F07B         	movff	_width+1,efgtoa@w+1
  3433   00198C                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3436   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3437   00198E  B4D8               	btfsc	status,2,c
  3438   001990  EFCC  F00C         	goto	u4691
  3439   001994  EFCE  F00C         	goto	u4690
  3440   001998                     u4691:
  3441   001998  EFE2  F00C         	goto	l4846
  3442   00199C                     u4690:
  3443   00199C                     
  3444                           ; BSR set to: 0
  3445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3446   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3447   00199E  A4D8               	btfss	status,2,c
  3448   0019A0  EFD4  F00C         	goto	u4701
  3449   0019A4  EFD6  F00C         	goto	u4700
  3450   0019A8                     u4701:
  3451   0019A8  EFDC  F00C         	goto	l4842
  3452   0019AC                     u4700:
  3453   0019AC                     
  3454                           ; BSR set to: 0
  3455   0019AC  0E00               	movlw	0
  3456   0019AE  6F70               	movwf	(_efgtoa$2790+1)& (0+255),b
  3457   0019B0  0E2B               	movlw	43
  3458   0019B2  6F6F               	movwf	_efgtoa$2790& (0+255),b
  3459   0019B4  EFE0  F00C         	goto	l4844
  3460   0019B8                     l4842:
  3461                           
  3462                           ; BSR set to: 0
  3463   0019B8  0E00               	movlw	0
  3464   0019BA  6F70               	movwf	(_efgtoa$2790+1)& (0+255),b
  3465   0019BC  0E2D               	movlw	45
  3466   0019BE  6F6F               	movwf	_efgtoa$2790& (0+255),b
  3467   0019C0                     l4844:
  3468                           
  3469                           ; BSR set to: 0
  3470   0019C0  C06F  F08A         	movff	_efgtoa$2790,efgtoa@sign
  3471   0019C4                     l4846:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3475   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3476   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3477   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3478   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3479   0019D4  EC35  F026         	call	___fpclassifyf	;wreg free
  3480   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3481   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3482   0019DC  A4D8               	btfss	status,2,c
  3483   0019DE  EFF3  F00C         	goto	u4711
  3484   0019E2  EFF5  F00C         	goto	u4710
  3485   0019E6                     u4711:
  3486   0019E6  EF28  F00D         	goto	l4864
  3487   0019EA                     u4710:
  3488   0019EA                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3490   0019EA  0100               	movlb	0	; () banked
  3491   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3492   0019EE  B4D8               	btfsc	status,2,c
  3493   0019F0  EFFC  F00C         	goto	u4721
  3494   0019F4  EFFE  F00C         	goto	u4720
  3495   0019F8                     u4721:
  3496   0019F8  EF07  F00D         	goto	l4856
  3497   0019FC                     u4720:
  3498   0019FC                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3501   0019FC  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3502   001A00                     
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3505   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3506   001A02  A0D8               	btfss	status,0,c
  3507   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3508   001A06                     
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3511   001A06  0E00               	movlw	0
  3512   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3513   001A0A  0E01               	movlw	1
  3514   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3515   001A0E                     l4856:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3519   001A0E  0EA0               	movlw	low _dbuf
  3520   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3521   001A12  6E01               	movwf	strcpy@dest^0,c
  3522   001A14  0E02               	movlw	high _dbuf
  3523   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3524   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3525   001A1A  0E49               	movlw	low STR_3
  3526   001A1C  6E03               	movwf	strcpy@src^0,c
  3527   001A1E  0E0E               	movlw	high STR_3
  3528   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3529   001A22  ECB9  F02E         	call	_strcpy	;wreg free
  3530   001A26                     l4858:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3533   001A26  0100               	movlb	0	; () banked
  3534   001A28  0EFD               	movlw	253
  3535   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3536   001A2C  0EFF               	movlw	255
  3537   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3538   001A30                     
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3541   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3542   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3543   001A38  0EA0               	movlw	low _dbuf
  3544   001A3A  6E13               	movwf	pad@buf^0,c
  3545   001A3C  0E02               	movlw	high _dbuf
  3546   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3547   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3548   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3549   001A48  EC79  F02A         	call	_pad	;wreg free
  3550   001A4C  EF93  F011         	goto	l1449
  3551   001A50                     l4864:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3554   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3555   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3556   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3557   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3558   001A60  EC35  F026         	call	___fpclassifyf	;wreg free
  3559   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3560   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3561   001A68  A4D8               	btfss	status,2,c
  3562   001A6A  EF39  F00D         	goto	u4731
  3563   001A6E  EF3B  F00D         	goto	u4730
  3564   001A72                     u4731:
  3565   001A72  EF5B  F00D         	goto	l4882
  3566   001A76                     u4730:
  3567   001A76                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3569   001A76  0100               	movlb	0	; () banked
  3570   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3571   001A7A  B4D8               	btfsc	status,2,c
  3572   001A7C  EF42  F00D         	goto	u4741
  3573   001A80  EF44  F00D         	goto	u4740
  3574   001A84                     u4741:
  3575   001A84  EF4D  F00D         	goto	l4874
  3576   001A88                     u4740:
  3577   001A88                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3580   001A88  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3581   001A8C                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3584   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3585   001A8E  A0D8               	btfss	status,0,c
  3586   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3587   001A92                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3590   001A92  0E00               	movlw	0
  3591   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3592   001A96  0E01               	movlw	1
  3593   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3594   001A9A                     l4874:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3598   001A9A  0EA0               	movlw	low _dbuf
  3599   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3600   001A9E  6E01               	movwf	strcpy@dest^0,c
  3601   001AA0  0E02               	movlw	high _dbuf
  3602   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3603   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3604   001AA6  0E4D               	movlw	low STR_6
  3605   001AA8  6E03               	movwf	strcpy@src^0,c
  3606   001AAA  0E0E               	movlw	high STR_6
  3607   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3608   001AAE  ECB9  F02E         	call	_strcpy	;wreg free
  3609   001AB2  EF13  F00D         	goto	l4858
  3610   001AB6                     l4882:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3613   001AB6  0E00               	movlw	0
  3614   001AB8  0100               	movlb	0	; () banked
  3615   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3616   001ABC  0E00               	movlw	0
  3617   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3618   001AC0  0E80               	movlw	128
  3619   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3620   001AC4  0E3F               	movlw	63
  3621   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3624   001AC8  0E00               	movlw	0
  3625   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3626   001ACC  0E00               	movlw	0
  3627   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3628   001AD0                     
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3631   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3632   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3633   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3634   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3635   001AE0  0E00               	movlw	0
  3636   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3637   001AE4  0E00               	movlw	0
  3638   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3639   001AE8  0E00               	movlw	0
  3640   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3641   001AEC  0E00               	movlw	0
  3642   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3643   001AF0  EC24  F028         	call	___fleq	;wreg free
  3644   001AF4  B0D8               	btfsc	status,0,c
  3645   001AF6  EF7F  F00D         	goto	u4751
  3646   001AFA  EF81  F00D         	goto	u4750
  3647   001AFE                     u4751:
  3648   001AFE  EF60  F00E         	goto	l1452
  3649   001B02                     u4750:
  3650   001B02  EF8E  F00D         	goto	l4890
  3651   001B06                     l1454:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3654   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3655   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3656   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3657   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3658   001B16                     
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3660   001B16  0100               	movlb	0	; () banked
  3661   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3662   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3663   001B1C                     l4890:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3666   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3667   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3668   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3669   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3670   001B2C  0E00               	movlw	0
  3671   001B2E  6E15               	movwf	___flmul@a^0,c
  3672   001B30  0E00               	movlw	0
  3673   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3674   001B34  0E20               	movlw	32
  3675   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3676   001B38  0E41               	movlw	65
  3677   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3678   001B3C  EC86  F016         	call	___flmul	;wreg free
  3679   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3680   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3681   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3682   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3683   001B50  0100               	movlb	0	; () banked
  3684   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3685   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3686   001B56  6E01               	movwf	labs@a^0,c
  3687   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3688   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3689   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3690   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3691   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3692   001B62  6E03               	movwf	(labs@a+2)^0,c
  3693   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3694   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3695   001B68  6E04               	movwf	(labs@a+3)^0,c
  3696   001B6A  ECF0  F02A         	call	_labs	;wreg free
  3697   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3698   001B70  EFC5  F00D         	goto	u4761
  3699   001B74  5004               	movf	(?_labs+3)^0,w,c
  3700   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3701   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3702   001B7A  E109               	bnz	u4760
  3703   001B7C  0E02               	movlw	2
  3704   001B7E  5C01               	subwf	?_labs^0,w,c
  3705   001B80  A0D8               	btfss	status,0,c
  3706   001B82  EFC5  F00D         	goto	u4761
  3707   001B86  EFC7  F00D         	goto	u4760
  3708   001B8A                     u4761:
  3709   001B8A  EF83  F00D         	goto	l1454
  3710   001B8E                     u4760:
  3711   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3712   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3713   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3714   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3715   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3716   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3717   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3718   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3719   001BAE  ECB3  F025         	call	___flge	;wreg free
  3720   001BB2  A0D8               	btfss	status,0,c
  3721   001BB4  EFDE  F00D         	goto	u4771
  3722   001BB8  EFE0  F00D         	goto	u4770
  3723   001BBC                     u4771:
  3724   001BBC  EF83  F00D         	goto	l1454
  3725   001BC0                     u4770:
  3726   001BC0                     
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3728   001BC0  0100               	movlb	0	; () banked
  3729   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3730   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3731   001BC6  6E01               	movwf	labs@a^0,c
  3732   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3733   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3734   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3735   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3736   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3737   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3738   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3739   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3740   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3741   001BDA  ECF0  F02A         	call	_labs	;wreg free
  3742   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3743   001BE0  EFFF  F00D         	goto	u4780
  3744   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3745   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3746   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3747   001BEA  E107               	bnz	u4781
  3748   001BEC  0E02               	movlw	2
  3749   001BEE  5C01               	subwf	?_labs^0,w,c
  3750   001BF0  B0D8               	btfsc	status,0,c
  3751   001BF2  EFFD  F00D         	goto	u4781
  3752   001BF6  EFFF  F00D         	goto	u4780
  3753   001BFA                     u4781:
  3754   001BFA  EF47  F00E         	goto	l4908
  3755   001BFE                     u4780:
  3756   001BFE                     l4898:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3759   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3760   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3761   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3762   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3765   001C0E  EF60  F00E         	goto	l1452
  3766   001C12                     l4900:
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3769   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3770   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3771   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3772   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3773   001C22  0E00               	movlw	0
  3774   001C24  6E36               	movwf	___fldiv@a^0,c
  3775   001C26  0E00               	movlw	0
  3776   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3777   001C2A  0E20               	movlw	32
  3778   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3779   001C2E  0E41               	movlw	65
  3780   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3781   001C32  EC9B  F018         	call	___fldiv	;wreg free
  3782   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3783   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3784   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3785   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3786   001C46                     
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3788   001C46  0100               	movlb	0	; () banked
  3789   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3790   001C4A  A0D8               	btfss	status,0,c
  3791   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3792   001C4E                     
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3795   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3796   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3797   001C52  6E01               	movwf	labs@a^0,c
  3798   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3799   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3800   001C58  6E02               	movwf	(labs@a+1)^0,c
  3801   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3802   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3803   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3804   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3805   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3806   001C64  6E04               	movwf	(labs@a+3)^0,c
  3807   001C66  ECF0  F02A         	call	_labs	;wreg free
  3808   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3809   001C6C  EF45  F00E         	goto	u4790
  3810   001C70  5004               	movf	(?_labs+3)^0,w,c
  3811   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3812   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3813   001C76  E107               	bnz	u4791
  3814   001C78  0E02               	movlw	2
  3815   001C7A  5C01               	subwf	?_labs^0,w,c
  3816   001C7C  B0D8               	btfsc	status,0,c
  3817   001C7E  EF43  F00E         	goto	u4791
  3818   001C82  EF45  F00E         	goto	u4790
  3819   001C86                     u4791:
  3820   001C86  EF47  F00E         	goto	l4908
  3821   001C8A                     u4790:
  3822   001C8A  EFFF  F00D         	goto	l4898
  3823   001C8E                     l4908:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3826   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3827   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3828   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3829   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3830   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3831   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3832   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3833   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3834   001CAE  ECB3  F025         	call	___flge	;wreg free
  3835   001CB2  A0D8               	btfss	status,0,c
  3836   001CB4  EF5E  F00E         	goto	u4801
  3837   001CB8  EF60  F00E         	goto	u4800
  3838   001CBC                     u4801:
  3839   001CBC  EF09  F00E         	goto	l4900
  3840   001CC0                     u4800:
  3841   001CC0                     l1452:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3844   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3847   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3848   001CC8                     
  3849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3850   001CC8  0100               	movlb	0	; () banked
  3851   001CCA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3852   001CCC  EF6A  F00E         	goto	u4811
  3853   001CD0  EF6C  F00E         	goto	u4810
  3854   001CD4                     u4811:
  3855   001CD4  EF72  F00E         	goto	l4914
  3856   001CD8                     u4810:
  3857   001CD8                     
  3858                           ; BSR set to: 0
  3859   001CD8  C0EF  F06B         	movff	_prec,efgtoa@p
  3860   001CDC  C0F0  F06C         	movff	_prec+1,efgtoa@p+1
  3861   001CE0  EF76  F00E         	goto	l4916
  3862   001CE4                     l4914:
  3863                           
  3864                           ; BSR set to: 0
  3865   001CE4  0E00               	movlw	0
  3866   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3867   001CE8  0E06               	movlw	6
  3868   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  3869   001CEC                     l4916:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3873   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3874   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3875   001CF4                     
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3878   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3879   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3880   001CF8                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3883   001CF8  0E66               	movlw	102
  3884   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3885   001CFC  A4D8               	btfss	status,2,c
  3886   001CFE  EF83  F00E         	goto	u4821
  3887   001D02  EF85  F00E         	goto	u4820
  3888   001D06                     u4821:
  3889   001D06  EFA5  F00E         	goto	l4930
  3890   001D0A                     u4820:
  3891   001D0A                     
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3894   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3895   001D0C  EF8C  F00E         	goto	u4830
  3896   001D10  EF8A  F00E         	goto	u4831
  3897   001D14                     u4831:
  3898   001D14  EF98  F00E         	goto	l4926
  3899   001D18                     u4830:
  3900   001D18                     
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3903   001D18  0E00               	movlw	0
  3904   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  3905   001D1C  0E00               	movlw	0
  3906   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3907   001D20  0E80               	movlw	128
  3908   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3909   001D24  0E3F               	movlw	63
  3910   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3911                           
  3912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3913   001D28  0E00               	movlw	0
  3914   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3915   001D2C  0E00               	movlw	0
  3916   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  3917   001D30                     l4926:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3921   001D30  0E67               	movlw	103
  3922   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3923   001D34  B4D8               	btfsc	status,2,c
  3924   001D36  EF9F  F00E         	goto	u4841
  3925   001D3A  EFA1  F00E         	goto	u4840
  3926   001D3E                     u4841:
  3927   001D3E  EFA5  F00E         	goto	l4930
  3928   001D42                     u4840:
  3929   001D42                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3932   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  3933   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  3934   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3935   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3936   001D4A                     l4930:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3940   001D4A  0E00               	movlw	0
  3941   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3942   001D4E  0E00               	movlw	0
  3943   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  3944   001D52                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3947   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3948   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3949   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3950   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3951   001D62                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3954   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3955   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3956   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3957   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3960   001D72  EF36  F00F         	goto	l4944
  3961   001D76                     l4936:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3965   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  3966   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3967   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3968   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3969   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  3970   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3971   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3972   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3973   001D96  EC9B  F018         	call	___fldiv	;wreg free
  3974   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  3975   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3976   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3977   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3978   001DAA  EC31  F020         	call	_floorf	;wreg free
  3979   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  3980   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3981   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3982   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3985   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3986   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3987   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3988   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3989   001DCE  EC30  F025         	call	___fltol	;wreg free
  3990   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  3991   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3992   001DDA                     
  3993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3994   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3995   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3996   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3997   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3998   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  3999   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4000   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4001   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4002   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4003   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4004   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4005   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4006   001E0A  EC86  F016         	call	___flmul	;wreg free
  4007   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  4008   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4009   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4010   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4011   001E1E  EC96  F02E         	call	___flsub	;wreg free
  4012   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  4013   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4014   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4015   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4016   001E32                     
  4017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4018   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  4019   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4020   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4021   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4022   001E42  0E00               	movlw	0
  4023   001E44  6E36               	movwf	___fldiv@a^0,c
  4024   001E46  0E00               	movlw	0
  4025   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  4026   001E4A  0E20               	movlw	32
  4027   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  4028   001E4E  0E41               	movlw	65
  4029   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  4030   001E52  EC9B  F018         	call	___fldiv	;wreg free
  4031   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  4032   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4033   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4034   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4035   001E66                     
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4037   001E66  0100               	movlb	0	; () banked
  4038   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4039   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4040   001E6C                     l4944:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4044   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  4045   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4046   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4047   001E72  0A80               	xorlw	128
  4048   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  4049   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4050   001E78  0A80               	xorlw	128
  4051   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4052   001E7C  A0D8               	btfss	status,0,c
  4053   001E7E  EF43  F00F         	goto	u4851
  4054   001E82  EF45  F00F         	goto	u4850
  4055   001E86                     u4851:
  4056   001E86  EFBB  F00E         	goto	l4936
  4057   001E8A                     u4850:
  4058   001E8A                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4061   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  4062   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4063   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4064   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4065   001E9A  0E00               	movlw	0
  4066   001E9C  6E15               	movwf	___flmul@a^0,c
  4067   001E9E  0E00               	movlw	0
  4068   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  4069   001EA2  0EA0               	movlw	160
  4070   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  4071   001EA6  0E40               	movlw	64
  4072   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  4073   001EAA  EC86  F016         	call	___flmul	;wreg free
  4074   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  4075   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4076   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4077   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4078   001EBE                     
  4079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4080   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4081   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4082   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4083   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4084   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4085   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4086   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4087   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4088   001EDE  ECB3  F025         	call	___flge	;wreg free
  4089   001EE2  B0D8               	btfsc	status,0,c
  4090   001EE4  EF76  F00F         	goto	u4861
  4091   001EE8  EF78  F00F         	goto	u4860
  4092   001EEC                     u4861:
  4093   001EEC  EF83  F00F         	goto	l4952
  4094   001EF0                     u4860:
  4095   001EF0                     
  4096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4097   001EF0  0E00               	movlw	0
  4098   001EF2  0100               	movlb	0	; () banked
  4099   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  4100   001EF6  0E00               	movlw	0
  4101   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4102   001EFA  0E00               	movlw	0
  4103   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4104   001EFE  0E00               	movlw	0
  4105   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4108   001F02  EFAC  F00F         	goto	l4958
  4109   001F06                     l4952:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4112   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4113   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4114   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4115   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4116   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4117   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4118   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4119   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4120   001F26  EC24  F028         	call	___fleq	;wreg free
  4121   001F2A  A0D8               	btfss	status,0,c
  4122   001F2C  EF9A  F00F         	goto	u4871
  4123   001F30  EF9C  F00F         	goto	u4870
  4124   001F34                     u4871:
  4125   001F34  EFAC  F00F         	goto	l4958
  4126   001F38                     u4870:
  4127   001F38  0100               	movlb	0	; () banked
  4128   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  4129   001F3C  EFA2  F00F         	goto	u4881
  4130   001F40  EFA4  F00F         	goto	u4880
  4131   001F44                     u4881:
  4132   001F44  EFAC  F00F         	goto	l4958
  4133   001F48                     u4880:
  4134   001F48                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4137   001F48  0E00               	movlw	0
  4138   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  4139   001F4C  0E00               	movlw	0
  4140   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4141   001F50  0E00               	movlw	0
  4142   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4143   001F54  0E00               	movlw	0
  4144   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4145   001F58                     l4958:
  4146                           
  4147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4148   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  4149   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4150   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4151   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4152   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  4153   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4154   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4155   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4156   001F78  EC26  F014         	call	___fladd	;wreg free
  4157   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  4158   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4159   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4160   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4161   001F8C                     
  4162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4163   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4164   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4165   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4166   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4167   001F9C  0E00               	movlw	0
  4168   001F9E  6E15               	movwf	___flmul@a^0,c
  4169   001FA0  0E00               	movlw	0
  4170   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  4171   001FA4  0E20               	movlw	32
  4172   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  4173   001FA8  0E41               	movlw	65
  4174   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  4175   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4176   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4177   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4178   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4179   001FBC  EC86  F016         	call	___flmul	;wreg free
  4180   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  4181   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4182   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4183   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4184   001FD0  ECB3  F025         	call	___flge	;wreg free
  4185   001FD4  A0D8               	btfss	status,0,c
  4186   001FD6  EFEF  F00F         	goto	u4891
  4187   001FDA  EFF1  F00F         	goto	u4890
  4188   001FDE                     u4891:
  4189   001FDE  EF1A  F010         	goto	l4970
  4190   001FE2                     u4890:
  4191   001FE2                     
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4193   001FE2  0100               	movlb	0	; () banked
  4194   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4195   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4196   001FE8                     
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4199   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4200   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4201   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4202   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4203   001FF8  0E00               	movlw	0
  4204   001FFA  6E15               	movwf	___flmul@a^0,c
  4205   001FFC  0E00               	movlw	0
  4206   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  4207   002000  0E20               	movlw	32
  4208   002002  6E17               	movwf	(___flmul@a+2)^0,c
  4209   002004  0E41               	movlw	65
  4210   002006  6E18               	movwf	(___flmul@a+3)^0,c
  4211   002008  EC86  F016         	call	___flmul	;wreg free
  4212   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4213   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4214   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4215   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4216   00201C                     
  4217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4218   00201C  0E66               	movlw	102
  4219   00201E  0100               	movlb	0	; () banked
  4220   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4221   002022  A4D8               	btfss	status,2,c
  4222   002024  EF16  F010         	goto	u4901
  4223   002028  EF18  F010         	goto	u4900
  4224   00202C                     u4901:
  4225   00202C  EF1A  F010         	goto	l4970
  4226   002030                     u4900:
  4227   002030                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4230   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4231   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4232   002034                     l4970:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4235   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4236   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4237   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4238   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4239   002044                     
  4240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4241   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4242   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4243   00204C                     
  4244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4245   00204C  0E00               	movlw	0
  4246   00204E  0100               	movlb	0	; () banked
  4247   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  4248   002052                     
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4251   002052  0E00               	movlw	0
  4252   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4253   002056  0E00               	movlw	0
  4254   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  4255   00205A                     
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4258   00205A  0E00               	movlw	0
  4259   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4260   00205E  0E00               	movlw	0
  4261   002060  6F80               	movwf	efgtoa@i& (0+255),b
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4264   002062  EF18  F011         	goto	l5020
  4265   002066                     l4980:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4269   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  4270   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4271   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4272   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4273   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  4274   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4275   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4276   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4277   002086  EC9B  F018         	call	___fldiv	;wreg free
  4278   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  4279   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4280   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4281   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4282   00209A  EC31  F020         	call	_floorf	;wreg free
  4283   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  4284   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4285   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4286   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4287                           
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4289   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4290   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4291   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4292   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4293   0020BE  EC30  F025         	call	___fltol	;wreg free
  4294   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  4295   0020C4  EF6F  F010         	goto	u4910
  4296   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  4297   0020CA  E107               	bnz	u4911
  4298   0020CC  0E0A               	movlw	10
  4299   0020CE  5C01               	subwf	?___fltol^0,w,c
  4300   0020D0  B0D8               	btfsc	status,0,c
  4301   0020D2  EF6D  F010         	goto	u4911
  4302   0020D6  EF6F  F010         	goto	u4910
  4303   0020DA                     u4911:
  4304   0020DA  EF7F  F010         	goto	l4984
  4305   0020DE                     u4910:
  4306   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4307   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4308   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4309   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4310   0020EE  EC30  F025         	call	___fltol	;wreg free
  4311   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  4312   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4313   0020FA  EF84  F010         	goto	l1482
  4314   0020FE                     l4984:
  4315   0020FE  0E00               	movlw	0
  4316   002100  0100               	movlb	0	; () banked
  4317   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4318   002104  0E09               	movlw	9
  4319   002106  6F74               	movwf	efgtoa@d& (0+255),b
  4320   002108                     l1482:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4323   002108  0100               	movlb	0	; () banked
  4324   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  4325   00210C  A4D8               	btfss	status,2,c
  4326   00210E  EF8B  F010         	goto	u4921
  4327   002112  EF8D  F010         	goto	u4920
  4328   002116                     u4921:
  4329   002116  EFB5  F010         	goto	l5004
  4330   00211A                     u4920:
  4331   00211A                     
  4332                           ; BSR set to: 0
  4333   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4334   00211C  EF94  F010         	goto	u4930
  4335   002120  EF92  F010         	goto	u4931
  4336   002124                     u4931:
  4337   002124  EFB5  F010         	goto	l5004
  4338   002128                     u4930:
  4339   002128                     
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4342   002128  0EA0               	movlw	low _dbuf
  4343   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  4344   00212C  6ED9               	movwf	fsr2l,c
  4345   00212E  0E02               	movlw	high _dbuf
  4346   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4347   002132  6EDA               	movwf	fsr2h,c
  4348   002134  0E2E               	movlw	46
  4349   002136  6EDF               	movwf	indf2,c
  4350   002138                     
  4351                           ; BSR set to: 0
  4352   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4353   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4354   00213C                     
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4357   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  4358   00213E  A0D8               	btfss	status,0,c
  4359   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4360   002142                     
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4363   002142  0E01               	movlw	1
  4364   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  4365   002146  EFB5  F010         	goto	l5004
  4366   00214A                     l4996:
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4370   00214A  0EA0               	movlw	low _dbuf
  4371   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  4372   00214E  6ED9               	movwf	fsr2l,c
  4373   002150  0E02               	movlw	high _dbuf
  4374   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4375   002154  6EDA               	movwf	fsr2h,c
  4376   002156  0E30               	movlw	48
  4377   002158  6EDF               	movwf	indf2,c
  4378   00215A                     
  4379                           ; BSR set to: 0
  4380   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4381   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4382   00215E                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4385   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  4386   002160  A0D8               	btfss	status,0,c
  4387   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4388   002164                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4391   002164  076D               	decf	efgtoa@t& (0+255),f,b
  4392   002166  A0D8               	btfss	status,0,c
  4393   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4394   00216A                     l5004:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4398   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  4399   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4400   00216E  A4D8               	btfss	status,2,c
  4401   002170  EFBC  F010         	goto	u4941
  4402   002174  EFBE  F010         	goto	u4940
  4403   002178                     u4941:
  4404   002178  EFA5  F010         	goto	l4996
  4405   00217C                     u4940:
  4406   00217C                     
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4409   00217C  0EA0               	movlw	low _dbuf
  4410   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4411   002180  6ED9               	movwf	fsr2l,c
  4412   002182  0E02               	movlw	high _dbuf
  4413   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4414   002186  6EDA               	movwf	fsr2h,c
  4415   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4416   00218A  0F30               	addlw	48
  4417   00218C  6EDF               	movwf	indf2,c
  4418   00218E                     
  4419                           ; BSR set to: 0
  4420   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4421   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4422   002192                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4425   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4426   002194  A0D8               	btfss	status,0,c
  4427   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4428   002198                     
  4429                           ; BSR set to: 0
  4430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4431   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4432   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4433   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4434   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4435   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4436   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4437   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4438   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4439   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4440   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4441   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4442   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4443   0021C8  EC86  F016         	call	___flmul	;wreg free
  4444   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4445   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4446   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4447   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4448   0021DC  EC96  F02E         	call	___flsub	;wreg free
  4449   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4450   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4451   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4452   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4453   0021F0                     
  4454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4455   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4456   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4457   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4458   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4459   002200  0E00               	movlw	0
  4460   002202  6E36               	movwf	___fldiv@a^0,c
  4461   002204  0E00               	movlw	0
  4462   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4463   002208  0E20               	movlw	32
  4464   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4465   00220C  0E41               	movlw	65
  4466   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4467   002210  EC9B  F018         	call	___fldiv	;wreg free
  4468   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4469   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4470   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4471   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4472   002224                     
  4473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4474   002224  0100               	movlb	0	; () banked
  4475   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4476   002228  A0D8               	btfss	status,0,c
  4477   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4478   00222C                     
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4481   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4482   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4483   002230                     l5020:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4487   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4488   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4489   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4490   002236  0A80               	xorlw	128
  4491   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4492   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4493   00223C  0A80               	xorlw	128
  4494   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4495   002240  B0D8               	btfsc	status,0,c
  4496   002242  EF25  F011         	goto	u4951
  4497   002246  EF27  F011         	goto	u4950
  4498   00224A                     u4951:
  4499   00224A  EF35  F011         	goto	l5024
  4500   00224E                     u4950:
  4501   00224E                     
  4502                           ; BSR set to: 0
  4503   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4504   002250  EF33  F011         	goto	u4961
  4505   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4506   002256  E109               	bnz	u4960
  4507   002258  0E4B               	movlw	75
  4508   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4509   00225C  A0D8               	btfss	status,0,c
  4510   00225E  EF33  F011         	goto	u4961
  4511   002262  EF35  F011         	goto	u4960
  4512   002266                     u4961:
  4513   002266  EF33  F010         	goto	l4980
  4514   00226A                     u4960:
  4515   00226A                     l5024:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4519   00226A  0E00               	movlw	0
  4520   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4521   00226E  0E4F               	movlw	79
  4522   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4523   002272                     
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4526   002272  0EA0               	movlw	low _dbuf
  4527   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4528   002276  6ED9               	movwf	fsr2l,c
  4529   002278  0E02               	movlw	high _dbuf
  4530   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4531   00227C  6EDA               	movwf	fsr2h,c
  4532   00227E  0E00               	movlw	0
  4533   002280  6EDF               	movwf	indf2,c
  4534   002282                     
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4537   002282  0EA0               	movlw	low _dbuf
  4538   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4539   002286  0E02               	movlw	high _dbuf
  4540   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4541   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4542   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4543   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4544   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4545   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4546   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4547   002296  6E01               	movwf	memcpy@d1^0,c
  4548   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4549   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4550   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4551   00229E  0EA0               	movlw	low _dbuf
  4552   0022A0  6E03               	movwf	memcpy@s1^0,c
  4553   0022A2  0E02               	movlw	high _dbuf
  4554   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4555   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4556   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4557   0022AE  EC5A  F02D         	call	_memcpy	;wreg free
  4558   0022B2                     
  4559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4560   0022B2  0100               	movlb	0	; () banked
  4561   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4562   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4563   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4564   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4565   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4566   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4567   0022C0                     
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4570   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4571   0022C2  A4D8               	btfss	status,2,c
  4572   0022C4  EF66  F011         	goto	u4971
  4573   0022C8  EF69  F011         	goto	u4970
  4574   0022CC                     u4971:
  4575   0022CC  0E01               	movlw	1
  4576   0022CE  EF6A  F011         	goto	u4980
  4577   0022D2                     u4970:
  4578   0022D2  0E00               	movlw	0
  4579   0022D4                     u4980:
  4580   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4581   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4582   0022D8                     
  4583                           ; BSR set to: 0
  4584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4585   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4586   0022DA  B4D8               	btfsc	status,2,c
  4587   0022DC  EF72  F011         	goto	u4991
  4588   0022E0  EF74  F011         	goto	u4990
  4589   0022E4                     u4991:
  4590   0022E4  EF7F  F011         	goto	l5038
  4591   0022E8                     u4990:
  4592   0022E8                     
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4595   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4596   0022EA  A0D8               	btfss	status,0,c
  4597   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4598   0022EE  0EA0               	movlw	low _dbuf
  4599   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4600   0022F2  6ED9               	movwf	fsr2l,c
  4601   0022F4  0E02               	movlw	high _dbuf
  4602   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4603   0022F8  6EDA               	movwf	fsr2h,c
  4604   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4605   0022FE                     l5038:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4609   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4610   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4611   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4612   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4613   002306                     
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4616   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4617   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4618   00230E  0EA0               	movlw	low _dbuf
  4619   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4620   002312  6E13               	movwf	pad@buf^0,c
  4621   002314  0E02               	movlw	high _dbuf
  4622   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4623   002318  6E14               	movwf	(pad@buf+1)^0,c
  4624   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4625   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4626   002322  EC79  F02A         	call	_pad	;wreg free
  4627   002326                     l1449:
  4628   002326  0012               	return		;funcret
  4629   002328                     __end_of_efgtoa:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _strcpy *****************
  4633 ;; Defined at:
  4634 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4637 ;;		 -> dbuf(80), 
  4638 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4639 ;;		 -> STR_6(4), STR_3(4), 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  d               2    6[COMRAM] PTR unsigned char 
  4642 ;;		 -> dbuf(80), 
  4643 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4644 ;;		 -> STR_6(4), STR_3(4), 
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  2    0[COMRAM] PTR unsigned char 
  4647 ;; Registers used:
  4648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;Total ram usage:        8 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_efgtoa
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text6
  4668   005D72                     __ptext6:
  4669                           	callstack 0
  4670   005D72                     _strcpy:
  4671                           	callstack 26
  4672   005D72  C003  F005         	movff	strcpy@src,strcpy@s
  4673   005D76  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4674   005D7A  C001  F007         	movff	strcpy@dest,strcpy@d
  4675   005D7E  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4676   005D82                     l4644:
  4677   005D82  C005  FFF6         	movff	strcpy@s,tblptrl
  4678   005D86  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4679   005D8A  4A05               	infsnz	strcpy@s^0,f,c
  4680   005D8C  2A06               	incf	(strcpy@s+1)^0,f,c
  4681   005D8E                     	if	0	;tblptru may be non-zero
  4682   005D8E                     	endif
  4683   005D8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4684   005D8E  0E00               	movlw	low (__mediumconst shr (0+16))
  4685   005D90  6EF8               	movwf	tblptru,c
  4686   005D92                     	endif
  4687   005D92  C007  FFD9         	movff	strcpy@d,fsr2l
  4688   005D96  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4689   005D9A  4A07               	infsnz	strcpy@d^0,f,c
  4690   005D9C  2A08               	incf	(strcpy@d+1)^0,f,c
  4691   005D9E  0008               	tblrd		*
  4692   005DA0  CFF5 FFDF          	movff	tablat,indf2
  4693   005DA4  50DF               	movf	indf2,w,c
  4694   005DA6  A4D8               	btfss	status,2,c
  4695   005DA8  EFD8  F02E         	goto	u4321
  4696   005DAC  EFDA  F02E         	goto	u4320
  4697   005DB0                     u4321:
  4698   005DB0  EFC1  F02E         	goto	l4644
  4699   005DB4                     u4320:
  4700   005DB4  0012               	return		;funcret
  4701   005DB6                     __end_of_strcpy:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function _memcpy *****************
  4705 ;; Defined at:
  4706 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  d1              2    0[COMRAM] PTR void 
  4709 ;;		 -> dbuf(80), 
  4710 ;;  s1              2    2[COMRAM] PTR const void 
  4711 ;;		 -> dbuf(80), 
  4712 ;;  n               2    4[COMRAM] unsigned int 
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4715 ;;		 -> dbuf(80), 
  4716 ;;  d               2    6[COMRAM] PTR unsigned char 
  4717 ;;		 -> dbuf(80), 
  4718 ;;  tmp             1   10[COMRAM] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2    0[COMRAM] PTR void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4728 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;Total ram usage:       11 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_efgtoa
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text7
  4742   005AB4                     __ptext7:
  4743                           	callstack 0
  4744   005AB4                     _memcpy:
  4745                           	callstack 26
  4746   005AB4  C003  F009         	movff	memcpy@s1,memcpy@s
  4747   005AB8  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4748   005ABC  C001  F007         	movff	memcpy@d1,memcpy@d
  4749   005AC0  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4750   005AC4  EF74  F02D         	goto	l4688
  4751   005AC8                     l4680:
  4752   005AC8  C009  FFD9         	movff	memcpy@s,fsr2l
  4753   005ACC  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4754   005AD0  50DF               	movf	indf2,w,c
  4755   005AD2  6E0B               	movwf	memcpy@tmp^0,c
  4756   005AD4  4A09               	infsnz	memcpy@s^0,f,c
  4757   005AD6  2A0A               	incf	(memcpy@s+1)^0,f,c
  4758   005AD8  C007  FFD9         	movff	memcpy@d,fsr2l
  4759   005ADC  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4760   005AE0  C00B  FFDF         	movff	memcpy@tmp,indf2
  4761   005AE4  4A07               	infsnz	memcpy@d^0,f,c
  4762   005AE6  2A08               	incf	(memcpy@d+1)^0,f,c
  4763   005AE8                     l4688:
  4764   005AE8  0605               	decf	memcpy@n^0,f,c
  4765   005AEA  A0D8               	btfss	status,0,c
  4766   005AEC  0606               	decf	(memcpy@n+1)^0,f,c
  4767   005AEE  2805               	incf	memcpy@n^0,w,c
  4768   005AF0  E106               	bnz	u4441
  4769   005AF2  2806               	incf	(memcpy@n+1)^0,w,c
  4770   005AF4  A4D8               	btfss	status,2,c
  4771   005AF6  EF7F  F02D         	goto	u4441
  4772   005AFA  EF81  F02D         	goto	u4440
  4773   005AFE                     u4441:
  4774   005AFE  EF64  F02D         	goto	l4680
  4775   005B02                     u4440:
  4776   005B02  0012               	return		;funcret
  4777   005B04                     __end_of_memcpy:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _labs *****************
  4781 ;; Defined at:
  4782 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  a               4    0[COMRAM] long 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  4    0[COMRAM] long 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;Total ram usage:        8 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_efgtoa
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text8
  4810   0055E0                     __ptext8:
  4811                           	callstack 0
  4812   0055E0                     _labs:
  4813                           	callstack 26
  4814   0055E0  BE04               	btfsc	(labs@a+3)^0,7,c
  4815   0055E2  EFFF  F02A         	goto	u4330
  4816   0055E6  5004               	movf	(labs@a+3)^0,w,c
  4817   0055E8  1003               	iorwf	(labs@a+2)^0,w,c
  4818   0055EA  1002               	iorwf	(labs@a+1)^0,w,c
  4819   0055EC  E106               	bnz	u4331
  4820   0055EE  0401               	decf	labs@a^0,w,c
  4821   0055F0  B0D8               	btfsc	status,0,c
  4822   0055F2  EFFD  F02A         	goto	u4331
  4823   0055F6  EFFF  F02A         	goto	u4330
  4824   0055FA                     u4331:
  4825   0055FA  EF1A  F02B         	goto	l1554
  4826   0055FE                     u4330:
  4827   0055FE  C001  F005         	movff	labs@a,??_labs
  4828   005602  C002  F006         	movff	labs@a+1,??_labs+1
  4829   005606  C003  F007         	movff	labs@a+2,??_labs+2
  4830   00560A  C004  F008         	movff	labs@a+3,??_labs+3
  4831   00560E  1E05               	comf	??_labs^0,f,c
  4832   005610  1E06               	comf	(??_labs+1)^0,f,c
  4833   005612  1E07               	comf	(??_labs+2)^0,f,c
  4834   005614  1E08               	comf	(??_labs+3)^0,f,c
  4835   005616  2A05               	incf	??_labs^0,f,c
  4836   005618  0E00               	movlw	0
  4837   00561A  2206               	addwfc	(??_labs+1)^0,f,c
  4838   00561C  2207               	addwfc	(??_labs+2)^0,f,c
  4839   00561E  2208               	addwfc	(??_labs+3)^0,f,c
  4840   005620  C005  F001         	movff	??_labs,?_labs
  4841   005624  C006  F002         	movff	??_labs+1,?_labs+1
  4842   005628  C007  F003         	movff	??_labs+2,?_labs+2
  4843   00562C  C008  F004         	movff	??_labs+3,?_labs+3
  4844   005630  EF22  F02B         	goto	l1557
  4845   005634                     l1554:
  4846   005634  C001  F001         	movff	labs@a,?_labs
  4847   005638  C002  F002         	movff	labs@a+1,?_labs+1
  4848   00563C  C003  F003         	movff	labs@a+2,?_labs+2
  4849   005640  C004  F004         	movff	labs@a+3,?_labs+3
  4850   005644                     l1557:
  4851   005644  0012               	return		;funcret
  4852   005646                     __end_of_labs:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _floorf *****************
  4856 ;; Defined at:
  4857 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  x               4   74[COMRAM] float 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  u               4   90[COMRAM] struct .
  4862 ;;  m               4   84[COMRAM] unsigned long 
  4863 ;;  e               2   88[COMRAM] int 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  4   74[COMRAM] float 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;Total ram usage:       20 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_efgtoa
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text9
  4887   004062                     __ptext9:
  4888                           	callstack 0
  4889   004062                     _floorf:
  4890                           	callstack 26
  4891   004062  C0E5  F05B         	movff	floorf@F526,floorf@u
  4892   004066  C0E6  F05C         	movff	floorf@F526+1,floorf@u+1
  4893   00406A  C0E7  F05D         	movff	floorf@F526+2,floorf@u+2
  4894   00406E  C0E8  F05E         	movff	floorf@F526+3,floorf@u+3
  4895   004072  C04B  F05B         	movff	floorf@x,floorf@u
  4896   004076  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4897   00407A  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4898   00407E  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4899   004082  0E81               	movlw	129
  4900   004084  6E4F               	movwf	??_floorf^0,c
  4901   004086  0EFF               	movlw	255
  4902   004088  6E50               	movwf	(??_floorf+1)^0,c
  4903   00408A  C05B  F051         	movff	floorf@u,??_floorf+2
  4904   00408E  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4905   004092  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4906   004096  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4907   00409A  0E18               	movlw	24
  4908   00409C  EF55  F020         	goto	u4340
  4909   0040A0                     u4345:
  4910   0040A0  90D8               	bcf	status,0,c
  4911   0040A2  3254               	rrcf	(??_floorf+5)^0,f,c
  4912   0040A4  3253               	rrcf	(??_floorf+4)^0,f,c
  4913   0040A6  3252               	rrcf	(??_floorf+3)^0,f,c
  4914   0040A8  3251               	rrcf	(??_floorf+2)^0,f,c
  4915   0040AA                     u4340:
  4916   0040AA  2EE8               	decfsz	wreg,f,c
  4917   0040AC  EF50  F020         	goto	u4345
  4918   0040B0  5051               	movf	(??_floorf+2)^0,w,c
  4919   0040B2  244F               	addwf	??_floorf^0,w,c
  4920   0040B4  6E59               	movwf	floorf@e^0,c
  4921   0040B6  0E00               	movlw	0
  4922   0040B8  2050               	addwfc	(??_floorf+1)^0,w,c
  4923   0040BA  6E5A               	movwf	(floorf@e+1)^0,c
  4924   0040BC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4925   0040BE  EF6A  F020         	goto	u4351
  4926   0040C2  505A               	movf	(floorf@e+1)^0,w,c
  4927   0040C4  E109               	bnz	u4350
  4928   0040C6  0E17               	movlw	23
  4929   0040C8  5C59               	subwf	floorf@e^0,w,c
  4930   0040CA  A0D8               	btfss	status,0,c
  4931   0040CC  EF6A  F020         	goto	u4351
  4932   0040D0  EF6C  F020         	goto	u4350
  4933   0040D4                     u4351:
  4934   0040D4  EF76  F020         	goto	l4656
  4935   0040D8                     u4350:
  4936   0040D8                     l4654:
  4937   0040D8  C04B  F04B         	movff	floorf@x,?_floorf
  4938   0040DC  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4939   0040E0  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4940   0040E4  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4941   0040E8  EF39  F021         	goto	l1543
  4942   0040EC                     l4656:
  4943   0040EC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4944   0040EE  EF7B  F020         	goto	u4361
  4945   0040F2  EF7D  F020         	goto	u4360
  4946   0040F6                     u4361:
  4947   0040F6  EFED  F020         	goto	l4666
  4948   0040FA                     u4360:
  4949   0040FA  C059  F04F         	movff	floorf@e,??_floorf
  4950   0040FE  0EFF               	movlw	255
  4951   004100  6E50               	movwf	(??_floorf+1)^0,c
  4952   004102  0EFF               	movlw	255
  4953   004104  6E51               	movwf	(??_floorf+2)^0,c
  4954   004106  0E7F               	movlw	127
  4955   004108  6E52               	movwf	(??_floorf+3)^0,c
  4956   00410A  0E00               	movlw	0
  4957   00410C  6E53               	movwf	(??_floorf+4)^0,c
  4958   00410E                     u4375:
  4959   00410E  664F               	tstfsz	??_floorf^0,c
  4960   004110  EF8C  F020         	goto	u4376
  4961   004114  EF94  F020         	goto	u4377
  4962   004118                     u4376:
  4963   004118  3453               	rlcf	(??_floorf+4)^0,w,c
  4964   00411A  3253               	rrcf	(??_floorf+4)^0,f,c
  4965   00411C  3252               	rrcf	(??_floorf+3)^0,f,c
  4966   00411E  3251               	rrcf	(??_floorf+2)^0,f,c
  4967   004120  3250               	rrcf	(??_floorf+1)^0,f,c
  4968   004122  2E4F               	decfsz	??_floorf^0,f,c
  4969   004124  EF87  F020         	goto	u4375
  4970   004128                     u4377:
  4971   004128  C050  F055         	movff	??_floorf+1,floorf@m
  4972   00412C  C051  F056         	movff	??_floorf+2,floorf@m+1
  4973   004130  C052  F057         	movff	??_floorf+3,floorf@m+2
  4974   004134  C053  F058         	movff	??_floorf+4,floorf@m+3
  4975   004138  5055               	movf	floorf@m^0,w,c
  4976   00413A  145B               	andwf	floorf@u^0,w,c
  4977   00413C  6E4F               	movwf	??_floorf^0,c
  4978   00413E  5056               	movf	(floorf@m+1)^0,w,c
  4979   004140  145C               	andwf	(floorf@u+1)^0,w,c
  4980   004142  6E50               	movwf	(??_floorf+1)^0,c
  4981   004144  5057               	movf	(floorf@m+2)^0,w,c
  4982   004146  145D               	andwf	(floorf@u+2)^0,w,c
  4983   004148  6E51               	movwf	(??_floorf+2)^0,c
  4984   00414A  5058               	movf	(floorf@m+3)^0,w,c
  4985   00414C  145E               	andwf	(floorf@u+3)^0,w,c
  4986   00414E  6E52               	movwf	(??_floorf+3)^0,c
  4987   004150  504F               	movf	??_floorf^0,w,c
  4988   004152  1050               	iorwf	(??_floorf+1)^0,w,c
  4989   004154  1051               	iorwf	(??_floorf+2)^0,w,c
  4990   004156  1052               	iorwf	(??_floorf+3)^0,w,c
  4991   004158  A4D8               	btfss	status,2,c
  4992   00415A  EFB1  F020         	goto	u4381
  4993   00415E  EFB3  F020         	goto	u4380
  4994   004162                     u4381:
  4995   004162  EFB5  F020         	goto	l4662
  4996   004166                     u4380:
  4997   004166  EF6C  F020         	goto	l4654
  4998   00416A                     l4662:
  4999   00416A  C05B  F04F         	movff	floorf@u,??_floorf
  5000   00416E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5001   004172  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5002   004176  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5003   00417A  0E20               	movlw	32
  5004   00417C  EFC5  F020         	goto	u4390
  5005   004180                     u4395:
  5006   004180  90D8               	bcf	status,0,c
  5007   004182  3252               	rrcf	(??_floorf+3)^0,f,c
  5008   004184  3251               	rrcf	(??_floorf+2)^0,f,c
  5009   004186  3250               	rrcf	(??_floorf+1)^0,f,c
  5010   004188  324F               	rrcf	??_floorf^0,f,c
  5011   00418A                     u4390:
  5012   00418A  2EE8               	decfsz	wreg,f,c
  5013   00418C  EFC0  F020         	goto	u4395
  5014   004190  504F               	movf	??_floorf^0,w,c
  5015   004192  1050               	iorwf	(??_floorf+1)^0,w,c
  5016   004194  1051               	iorwf	(??_floorf+2)^0,w,c
  5017   004196  1052               	iorwf	(??_floorf+3)^0,w,c
  5018   004198  B4D8               	btfsc	status,2,c
  5019   00419A  EFD1  F020         	goto	u4401
  5020   00419E  EFD3  F020         	goto	u4400
  5021   0041A2                     u4401:
  5022   0041A2  EFDB  F020         	goto	l1546
  5023   0041A6                     u4400:
  5024   0041A6  5055               	movf	floorf@m^0,w,c
  5025   0041A8  265B               	addwf	floorf@u^0,f,c
  5026   0041AA  5056               	movf	(floorf@m+1)^0,w,c
  5027   0041AC  225C               	addwfc	(floorf@u+1)^0,f,c
  5028   0041AE  5057               	movf	(floorf@m+2)^0,w,c
  5029   0041B0  225D               	addwfc	(floorf@u+2)^0,f,c
  5030   0041B2  5058               	movf	(floorf@m+3)^0,w,c
  5031   0041B4  225E               	addwfc	(floorf@u+3)^0,f,c
  5032   0041B6                     l1546:
  5033   0041B6  1C55               	comf	floorf@m^0,w,c
  5034   0041B8  6E4F               	movwf	??_floorf^0,c
  5035   0041BA  1C56               	comf	(floorf@m+1)^0,w,c
  5036   0041BC  6E50               	movwf	(??_floorf+1)^0,c
  5037   0041BE  1C57               	comf	(floorf@m+2)^0,w,c
  5038   0041C0  6E51               	movwf	(??_floorf+2)^0,c
  5039   0041C2  1C58               	comf	(floorf@m+3)^0,w,c
  5040   0041C4  6E52               	movwf	(??_floorf+3)^0,c
  5041   0041C6  504F               	movf	??_floorf^0,w,c
  5042   0041C8  165B               	andwf	floorf@u^0,f,c
  5043   0041CA  5050               	movf	(??_floorf+1)^0,w,c
  5044   0041CC  165C               	andwf	(floorf@u+1)^0,f,c
  5045   0041CE  5051               	movf	(??_floorf+2)^0,w,c
  5046   0041D0  165D               	andwf	(floorf@u+2)^0,f,c
  5047   0041D2  5052               	movf	(??_floorf+3)^0,w,c
  5048   0041D4  165E               	andwf	(floorf@u+3)^0,f,c
  5049   0041D6  EF31  F021         	goto	l4674
  5050   0041DA                     l4666:
  5051   0041DA  C05B  F04F         	movff	floorf@u,??_floorf
  5052   0041DE  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5053   0041E2  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5054   0041E6  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5055   0041EA  0E20               	movlw	32
  5056   0041EC  EFFD  F020         	goto	u4410
  5057   0041F0                     u4415:
  5058   0041F0  90D8               	bcf	status,0,c
  5059   0041F2  3252               	rrcf	(??_floorf+3)^0,f,c
  5060   0041F4  3251               	rrcf	(??_floorf+2)^0,f,c
  5061   0041F6  3250               	rrcf	(??_floorf+1)^0,f,c
  5062   0041F8  324F               	rrcf	??_floorf^0,f,c
  5063   0041FA                     u4410:
  5064   0041FA  2EE8               	decfsz	wreg,f,c
  5065   0041FC  EFF8  F020         	goto	u4415
  5066   004200  504F               	movf	??_floorf^0,w,c
  5067   004202  1050               	iorwf	(??_floorf+1)^0,w,c
  5068   004204  1051               	iorwf	(??_floorf+2)^0,w,c
  5069   004206  1052               	iorwf	(??_floorf+3)^0,w,c
  5070   004208  A4D8               	btfss	status,2,c
  5071   00420A  EF09  F021         	goto	u4421
  5072   00420E  EF0B  F021         	goto	u4420
  5073   004212                     u4421:
  5074   004212  EF15  F021         	goto	l4670
  5075   004216                     u4420:
  5076   004216  0E00               	movlw	0
  5077   004218  6E5B               	movwf	floorf@u^0,c
  5078   00421A  0E00               	movlw	0
  5079   00421C  6E5C               	movwf	(floorf@u+1)^0,c
  5080   00421E  0E00               	movlw	0
  5081   004220  6E5D               	movwf	(floorf@u+2)^0,c
  5082   004222  0E00               	movlw	0
  5083   004224  6E5E               	movwf	(floorf@u+3)^0,c
  5084   004226  EF31  F021         	goto	l4674
  5085   00422A                     l4670:
  5086   00422A  90D8               	bcf	status,0,c
  5087   00422C  345B               	rlcf	floorf@u^0,w,c
  5088   00422E  6E4F               	movwf	??_floorf^0,c
  5089   004230  345C               	rlcf	(floorf@u+1)^0,w,c
  5090   004232  6E50               	movwf	(??_floorf+1)^0,c
  5091   004234  345D               	rlcf	(floorf@u+2)^0,w,c
  5092   004236  6E51               	movwf	(??_floorf+2)^0,c
  5093   004238  345E               	rlcf	(floorf@u+3)^0,w,c
  5094   00423A  6E52               	movwf	(??_floorf+3)^0,c
  5095   00423C  504F               	movf	??_floorf^0,w,c
  5096   00423E  1050               	iorwf	(??_floorf+1)^0,w,c
  5097   004240  1051               	iorwf	(??_floorf+2)^0,w,c
  5098   004242  1052               	iorwf	(??_floorf+3)^0,w,c
  5099   004244  B4D8               	btfsc	status,2,c
  5100   004246  EF27  F021         	goto	u4431
  5101   00424A  EF29  F021         	goto	u4430
  5102   00424E                     u4431:
  5103   00424E  EF31  F021         	goto	l4674
  5104   004252                     u4430:
  5105   004252  0E00               	movlw	0
  5106   004254  6E5B               	movwf	floorf@u^0,c
  5107   004256  0E00               	movlw	0
  5108   004258  6E5C               	movwf	(floorf@u+1)^0,c
  5109   00425A  0E80               	movlw	128
  5110   00425C  6E5D               	movwf	(floorf@u+2)^0,c
  5111   00425E  0EBF               	movlw	191
  5112   004260  6E5E               	movwf	(floorf@u+3)^0,c
  5113   004262                     l4674:
  5114   004262  C05B  F04B         	movff	floorf@u,?_floorf
  5115   004266  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5116   00426A  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5117   00426E  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5118   004272                     l1543:
  5119   004272  0012               	return		;funcret
  5120   004274                     __end_of_floorf:
  5121                           	callstack 0
  5122                           
  5123 ;; *************** function ___fpclassifyf *****************
  5124 ;; Defined at:
  5125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  x               4    0[COMRAM] float 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  u               4   10[COMRAM] struct .
  5130 ;;  e               2    8[COMRAM] int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    0[COMRAM] int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5143 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;Total ram usage:       14 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; This function calls:
  5147 ;;		Nothing
  5148 ;; This function is called by:
  5149 ;;		_efgtoa
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text10
  5154   004C6A                     __ptext10:
  5155                           	callstack 0
  5156   004C6A                     ___fpclassifyf:
  5157                           	callstack 26
  5158   004C6A  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5159   004C6E  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5160   004C72  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5161   004C76  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5162   004C7A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5163   004C7E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5164   004C82  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5165   004C86  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5166   004C8A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5167   004C8E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5168   004C92  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5169   004C96  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5170   004C9A  0E18               	movlw	24
  5171   004C9C  EF55  F026         	goto	u4250
  5172   004CA0                     u4255:
  5173   004CA0  90D8               	bcf	status,0,c
  5174   004CA2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5175   004CA4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5176   004CA6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5177   004CA8  3205               	rrcf	??___fpclassifyf^0,f,c
  5178   004CAA                     u4250:
  5179   004CAA  2EE8               	decfsz	wreg,f,c
  5180   004CAC  EF50  F026         	goto	u4255
  5181   004CB0  5005               	movf	??___fpclassifyf^0,w,c
  5182   004CB2  6E09               	movwf	___fpclassifyf@e^0,c
  5183   004CB4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5184   004CB6  5009               	movf	___fpclassifyf@e^0,w,c
  5185   004CB8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5186   004CBA  A4D8               	btfss	status,2,c
  5187   004CBC  EF62  F026         	goto	u4261
  5188   004CC0  EF64  F026         	goto	u4260
  5189   004CC4                     u4261:
  5190   004CC4  EF84  F026         	goto	l4632
  5191   004CC8                     u4260:
  5192   004CC8  90D8               	bcf	status,0,c
  5193   004CCA  340B               	rlcf	___fpclassifyf@u^0,w,c
  5194   004CCC  6E05               	movwf	??___fpclassifyf^0,c
  5195   004CCE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5196   004CD0  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5197   004CD2  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5198   004CD4  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5199   004CD6  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5200   004CD8  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5201   004CDA  5005               	movf	??___fpclassifyf^0,w,c
  5202   004CDC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5203   004CDE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5204   004CE0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5205   004CE2  A4D8               	btfss	status,2,c
  5206   004CE4  EF76  F026         	goto	u4271
  5207   004CE8  EF78  F026         	goto	u4270
  5208   004CEC                     u4271:
  5209   004CEC  EF7E  F026         	goto	l4628
  5210   004CF0                     u4270:
  5211   004CF0  0E00               	movlw	0
  5212   004CF2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5213   004CF4  0E02               	movlw	2
  5214   004CF6  6E01               	movwf	?___fpclassifyf^0,c
  5215   004CF8  EFB3  F026         	goto	l1529
  5216   004CFC                     l4628:
  5217   004CFC  0E00               	movlw	0
  5218   004CFE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5219   004D00  0E03               	movlw	3
  5220   004D02  6E01               	movwf	?___fpclassifyf^0,c
  5221   004D04  EFB3  F026         	goto	l1529
  5222   004D08                     l4632:
  5223   004D08  2809               	incf	___fpclassifyf@e^0,w,c
  5224   004D0A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5225   004D0C  A4D8               	btfss	status,2,c
  5226   004D0E  EF8B  F026         	goto	u4281
  5227   004D12  EF8D  F026         	goto	u4280
  5228   004D16                     u4281:
  5229   004D16  EFAF  F026         	goto	l4638
  5230   004D1A                     u4280:
  5231   004D1A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5232   004D1E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5233   004D22  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5234   004D26  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5235   004D2A  0E09               	movlw	9
  5236   004D2C                     u4295:
  5237   004D2C  90D8               	bcf	status,0,c
  5238   004D2E  3605               	rlcf	??___fpclassifyf^0,f,c
  5239   004D30  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5240   004D32  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5241   004D34  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5242   004D36  2EE8               	decfsz	wreg,f,c
  5243   004D38  EF96  F026         	goto	u4295
  5244   004D3C  5005               	movf	??___fpclassifyf^0,w,c
  5245   004D3E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5246   004D40  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5247   004D42  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5248   004D44  B4D8               	btfsc	status,2,c
  5249   004D46  EFA7  F026         	goto	u4301
  5250   004D4A  EFAA  F026         	goto	u4300
  5251   004D4E                     u4301:
  5252   004D4E  0E01               	movlw	1
  5253   004D50  EFAB  F026         	goto	u4310
  5254   004D54                     u4300:
  5255   004D54  0E00               	movlw	0
  5256   004D56                     u4310:
  5257   004D56  6E01               	movwf	?___fpclassifyf^0,c
  5258   004D58  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5259   004D5A  EFB3  F026         	goto	l1529
  5260   004D5E                     l4638:
  5261   004D5E  0E00               	movlw	0
  5262   004D60  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5263   004D62  0E04               	movlw	4
  5264   004D64  6E01               	movwf	?___fpclassifyf^0,c
  5265   004D66                     l1529:
  5266   004D66  0012               	return		;funcret
  5267   004D68                     __end_of___fpclassifyf:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function ___fltol *****************
  5271 ;; Defined at:
  5272 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  f1              4    0[COMRAM] int 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  exp1            1    9[COMRAM] unsigned char 
  5277 ;;  sign1           1    8[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  4    0[COMRAM] long 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
>>>>>>> Stashed changes
      +1  BANK12  BANK13
  5287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
<<<<<<< Updated upstream
  5412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;Total ram usage:        4 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; Hardware stack levels required when called: 5
  5418 ;; This function calls:
  5419 ;;		_ForwardOneBlock
  5420 ;;		_reverseDetect
  5421 ;;		_turnLeft45
  5422 ;; This function is called by:
  5423 ;;		_go_Home
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text27
  5428   003D00                     __ptext27:
  5429                           	callstack 0
  5430   003D00                     _ReversePink:
  5431                           	callstack 24
  5432   003D00                     
  5433                           ;dc_motor.c: 333:     reverseDetect(&motorL, &motorR);
  5434   003D00  0EF5               	movlw	low _motorL
  5435   003D02  6E1A               	movwf	reverseDetect@mL^0,c
  5436   003D04  0E00               	movlw	high _motorL
  5437   003D06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5438   003D08  0EBC               	movlw	low _motorR
  5439   003D0A  6E1C               	movwf	reverseDetect@mR^0,c
  5440   003D0C  0E01               	movlw	high _motorR
  5441   003D0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5442   003D10  EC09  F023         	call	_reverseDetect	;wreg free
  5443                           
  5444                           ;dc_motor.c: 334:     turnLeft45(&motorL, &motorR);
  5445   003D14  0EF5               	movlw	low _motorL
  5446   003D16  6E1A               	movwf	turnLeft45@mL^0,c
  5447   003D18  0E00               	movlw	high _motorL
  5448   003D1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5449   003D1C  0EBC               	movlw	low _motorR
  5450   003D1E  6E1C               	movwf	turnLeft45@mR^0,c
  5451   003D20  0E01               	movlw	high _motorR
  5452   003D22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5453   003D24  EC62  F023         	call	_turnLeft45	;wreg free
  5454                           
  5455                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5456   003D28  0EF5               	movlw	low _motorL
  5457   003D2A  6E1A               	movwf	turnLeft45@mL^0,c
  5458   003D2C  0E00               	movlw	high _motorL
  5459   003D2E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5460   003D30  0EBC               	movlw	low _motorR
  5461   003D32  6E1C               	movwf	turnLeft45@mR^0,c
  5462   003D34  0E01               	movlw	high _motorR
  5463   003D36  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5464   003D38  EC62  F023         	call	_turnLeft45	;wreg free
  5465                           
  5466                           ;dc_motor.c: 336:     ForwardOneBlock(&motorL, &motorR);
  5467   003D3C  0EF5               	movlw	low _motorL
  5468   003D3E  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5469   003D40  0E00               	movlw	high _motorL
  5470   003D42  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5471   003D44  0EBC               	movlw	low _motorR
  5472   003D46  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5473   003D48  0E01               	movlw	high _motorR
  5474   003D4A  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5475   003D4C  EC55  F022         	call	_ForwardOneBlock	;wreg free
  5476                           
  5477                           ;dc_motor.c: 337:     reverseDetect(&motorL, &motorR);
  5478   003D50  0EF5               	movlw	low _motorL
  5479   003D52  6E1A               	movwf	reverseDetect@mL^0,c
  5480   003D54  0E00               	movlw	high _motorL
  5481   003D56  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5482   003D58  0EBC               	movlw	low _motorR
  5483   003D5A  6E1C               	movwf	reverseDetect@mR^0,c
  5484   003D5C  0E01               	movlw	high _motorR
  5485   003D5E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5486   003D60  EC09  F023         	call	_reverseDetect	;wreg free
  5487                           
  5488                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
  5489   003D64  0EF5               	movlw	low _motorL
  5490   003D66  6E1A               	movwf	turnLeft45@mL^0,c
  5491   003D68  0E00               	movlw	high _motorL
  5492   003D6A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5493   003D6C  0EBC               	movlw	low _motorR
  5494   003D6E  6E1C               	movwf	turnLeft45@mR^0,c
  5495   003D70  0E01               	movlw	high _motorR
  5496   003D72  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5497   003D74  EC62  F023         	call	_turnLeft45	;wreg free
  5498                           
  5499                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
  5500   003D78  0EF5               	movlw	low _motorL
  5501   003D7A  6E1A               	movwf	turnLeft45@mL^0,c
  5502   003D7C  0E00               	movlw	high _motorL
  5503   003D7E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5504   003D80  0EBC               	movlw	low _motorR
  5505   003D82  6E1C               	movwf	turnLeft45@mR^0,c
  5506   003D84  0E01               	movlw	high _motorR
  5507   003D86  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5508   003D88  EC62  F023         	call	_turnLeft45	;wreg free
  5509                           
  5510                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
  5511   003D8C  0EF5               	movlw	low _motorL
  5512   003D8E  6E1A               	movwf	turnLeft45@mL^0,c
  5513   003D90  0E00               	movlw	high _motorL
  5514   003D92  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5515   003D94  0EBC               	movlw	low _motorR
  5516   003D96  6E1C               	movwf	turnLeft45@mR^0,c
  5517   003D98  0E01               	movlw	high _motorR
  5518   003D9A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5519   003D9C  EC62  F023         	call	_turnLeft45	;wreg free
  5520                           
  5521                           ;dc_motor.c: 341:     turnLeft45(&motorL, &motorR);
  5522   003DA0  0EF5               	movlw	low _motorL
  5523   003DA2  6E1A               	movwf	turnLeft45@mL^0,c
  5524   003DA4  0E00               	movlw	high _motorL
  5525   003DA6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5526   003DA8  0EBC               	movlw	low _motorR
  5527   003DAA  6E1C               	movwf	turnLeft45@mR^0,c
  5528   003DAC  0E01               	movlw	high _motorR
  5529   003DAE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5530   003DB0  EC62  F023         	call	_turnLeft45	;wreg free
  5531   003DB4  0012               	return		;funcret
  5532   003DB6                     __end_of_ReversePink:
  5533                           	callstack 0
  5534                           
  5535 ;; *************** function _ForwardOneBlock *****************
  5536 ;; Defined at:
  5537 ;;		line 228 in file "dc_motor.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5540 ;;		 -> motorL(9), 
  5541 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5542 ;;		 -> motorR(9), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;Total ram usage:        6 bytes
  5559 ;; Hardware stack levels used: 1
  5560 ;; Hardware stack levels required when called: 4
  5561 ;; This function calls:
  5562 ;;		_fullSpeedAhead
  5563 ;;		_stop
  5564 ;; This function is called by:
  5565 ;;		_ReverseYellow
  5566 ;;		_ReversePink
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text28
  5571   0044AA                     __ptext28:
  5572                           	callstack 0
  5573   0044AA                     _ForwardOneBlock:
  5574                           	callstack 24
  5575   0044AA                     
  5576                           ;dc_motor.c: 229:     fullSpeedAhead(mL,mR);
  5577   0044AA  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5578   0044AE  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5579   0044B2  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5580   0044B6  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5581   0044BA  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  5582   0044BE                     
  5583                           ;dc_motor.c: 230:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5584   0044BE  0EA3               	movlw	163
  5585   0044C0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5586   0044C2  0E57               	movlw	87
  5587   0044C4  6E1E               	movwf	??_ForwardOneBlock^0,c
  5588   0044C6  0E02               	movlw	2
  5589   0044C8                     u4797:
  5590   0044C8  2EE8               	decfsz	wreg,f,c
  5591   0044CA  D7FE               	bra	u4797
  5592   0044CC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5593   0044CE  D7FC               	bra	u4797
  5594   0044D0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5595   0044D2  D7FA               	bra	u4797
  5596   0044D4  D000               	nop2	
  5597   0044D6                     
  5598                           ;dc_motor.c: 231:     stop(&motorL, &motorR);
  5599   0044D6  0EF5               	movlw	low _motorL
  5600   0044D8  6E14               	movwf	stop@mL^0,c
  5601   0044DA  0E00               	movlw	high _motorL
  5602   0044DC  6E15               	movwf	(stop@mL+1)^0,c
  5603   0044DE  0EBC               	movlw	low _motorR
  5604   0044E0  6E16               	movwf	stop@mR^0,c
  5605   0044E2  0E01               	movlw	high _motorR
  5606   0044E4  6E17               	movwf	(stop@mR+1)^0,c
  5607   0044E6  EC05  F021         	call	_stop	;wreg free
  5608                           
  5609                           ;dc_motor.c: 232:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5610   0044EA  0E05               	movlw	5
  5611   0044EC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5612   0044EE  0E0F               	movlw	15
  5613   0044F0  6E1E               	movwf	??_ForwardOneBlock^0,c
  5614   0044F2  0EF1               	movlw	241
  5615   0044F4                     u4807:
  5616   0044F4  2EE8               	decfsz	wreg,f,c
  5617   0044F6  D7FE               	bra	u4807
  5618   0044F8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5619   0044FA  D7FC               	bra	u4807
  5620   0044FC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5621   0044FE  D7FA               	bra	u4807
  5622   004500  F000               	nop	
  5623   004502  0012               	return		;funcret
  5624   004504                     __end_of_ForwardOneBlock:
  5625                           	callstack 0
  5626                           
  5627 ;; *************** function _RedMove *****************
  5628 ;; Defined at:
  5629 ;;		line 252 in file "dc_motor.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5632 ;;		 -> motorL(9), 
  5633 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5634 ;;		 -> motorR(9), 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;Total ram usage:        4 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; Hardware stack levels required when called: 5
  5653 ;; This function calls:
  5654 ;;		_reverseDetect
  5655 ;;		_turnRight45
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;;		_go_Home
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text29
  5663   004BA2                     __ptext29:
  5664                           	callstack 0
  5665   004BA2                     _RedMove:
  5666                           	callstack 24
  5667   004BA2                     
  5668                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  5669   004BA2  0EF5               	movlw	low _motorL
  5670   004BA4  6E1A               	movwf	reverseDetect@mL^0,c
  5671   004BA6  0E00               	movlw	high _motorL
  5672   004BA8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5673   004BAA  0EBC               	movlw	low _motorR
  5674   004BAC  6E1C               	movwf	reverseDetect@mR^0,c
  5675   004BAE  0E01               	movlw	high _motorR
  5676   004BB0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5677   004BB2  EC09  F023         	call	_reverseDetect	;wreg free
  5678                           
  5679                           ;dc_motor.c: 255:     turnRight45(&motorL, &motorR);
  5680   004BB6  0EF5               	movlw	low _motorL
  5681   004BB8  6E1A               	movwf	turnRight45@mL^0,c
  5682   004BBA  0E00               	movlw	high _motorL
  5683   004BBC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5684   004BBE  0EBC               	movlw	low _motorR
  5685   004BC0  6E1C               	movwf	turnRight45@mR^0,c
  5686   004BC2  0E01               	movlw	high _motorR
  5687   004BC4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5688   004BC6  EC36  F023         	call	_turnRight45	;wreg free
  5689                           
  5690                           ;dc_motor.c: 256:     turnRight45(&motorL, &motorR);
  5691   004BCA  0EF5               	movlw	low _motorL
  5692   004BCC  6E1A               	movwf	turnRight45@mL^0,c
  5693   004BCE  0E00               	movlw	high _motorL
  5694   004BD0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5695   004BD2  0EBC               	movlw	low _motorR
  5696   004BD4  6E1C               	movwf	turnRight45@mR^0,c
  5697   004BD6  0E01               	movlw	high _motorR
  5698   004BD8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5699   004BDA  EC36  F023         	call	_turnRight45	;wreg free
  5700   004BDE  0012               	return		;funcret
  5701   004BE0                     __end_of_RedMove:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _OrangeMove *****************
  5705 ;; Defined at:
  5706 ;;		line 298 in file "dc_motor.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5709 ;;		 -> motorL(9), 
  5710 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5711 ;;		 -> motorR(9), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;Total ram usage:        4 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 5
  5730 ;; This function calls:
  5731 ;;		_reverseDetect
  5732 ;;		_turnRight45
  5733 ;; This function is called by:
  5734 ;;		_main
  5735 ;;		_go_Home
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text30
  5740   00476E                     __ptext30:
  5741                           	callstack 0
  5742   00476E                     _OrangeMove:
  5743                           	callstack 24
  5744   00476E                     
  5745                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  5746   00476E  0EF5               	movlw	low _motorL
  5747   004770  6E1A               	movwf	reverseDetect@mL^0,c
  5748   004772  0E00               	movlw	high _motorL
  5749   004774  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5750   004776  0EBC               	movlw	low _motorR
  5751   004778  6E1C               	movwf	reverseDetect@mR^0,c
  5752   00477A  0E01               	movlw	high _motorR
  5753   00477C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5754   00477E  EC09  F023         	call	_reverseDetect	;wreg free
  5755                           
  5756                           ;dc_motor.c: 301:     turnRight45(&motorL, &motorR);
  5757   004782  0EF5               	movlw	low _motorL
  5758   004784  6E1A               	movwf	turnRight45@mL^0,c
  5759   004786  0E00               	movlw	high _motorL
  5760   004788  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5761   00478A  0EBC               	movlw	low _motorR
  5762   00478C  6E1C               	movwf	turnRight45@mR^0,c
  5763   00478E  0E01               	movlw	high _motorR
  5764   004790  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5765   004792  EC36  F023         	call	_turnRight45	;wreg free
  5766                           
  5767                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  5768   004796  0EF5               	movlw	low _motorL
  5769   004798  6E1A               	movwf	turnRight45@mL^0,c
  5770   00479A  0E00               	movlw	high _motorL
  5771   00479C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5772   00479E  0EBC               	movlw	low _motorR
  5773   0047A0  6E1C               	movwf	turnRight45@mR^0,c
  5774   0047A2  0E01               	movlw	high _motorR
  5775   0047A4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5776   0047A6  EC36  F023         	call	_turnRight45	;wreg free
  5777                           
  5778                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  5779   0047AA  0EF5               	movlw	low _motorL
  5780   0047AC  6E1A               	movwf	turnRight45@mL^0,c
  5781   0047AE  0E00               	movlw	high _motorL
  5782   0047B0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5783   0047B2  0EBC               	movlw	low _motorR
  5784   0047B4  6E1C               	movwf	turnRight45@mR^0,c
  5785   0047B6  0E01               	movlw	high _motorR
  5786   0047B8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5787   0047BA  EC36  F023         	call	_turnRight45	;wreg free
  5788   0047BE  0012               	return		;funcret
  5789   0047C0                     __end_of_OrangeMove:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function _LightBlueMove *****************
  5793 ;; Defined at:
  5794 ;;		line 307 in file "dc_motor.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5797 ;;		 -> motorL(9), 
  5798 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5799 ;;		 -> motorR(9), 
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  1    wreg      void 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;Total ram usage:        4 bytes
  5816 ;; Hardware stack levels used: 1
  5817 ;; Hardware stack levels required when called: 5
  5818 ;; This function calls:
  5819 ;;		_reverseDetect
  5820 ;;		_turnLeft45
  5821 ;; This function is called by:
  5822 ;;		_main
  5823 ;;		_go_Home
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text31
  5828   0047C0                     __ptext31:
  5829                           	callstack 0
  5830   0047C0                     _LightBlueMove:
  5831                           	callstack 24
  5832   0047C0                     
  5833                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
  5834   0047C0  0EF5               	movlw	low _motorL
  5835   0047C2  6E1A               	movwf	reverseDetect@mL^0,c
  5836   0047C4  0E00               	movlw	high _motorL
  5837   0047C6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5838   0047C8  0EBC               	movlw	low _motorR
  5839   0047CA  6E1C               	movwf	reverseDetect@mR^0,c
  5840   0047CC  0E01               	movlw	high _motorR
  5841   0047CE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5842   0047D0  EC09  F023         	call	_reverseDetect	;wreg free
  5843                           
  5844                           ;dc_motor.c: 310:     turnLeft45(&motorL, &motorR);
  5845   0047D4  0EF5               	movlw	low _motorL
  5846   0047D6  6E1A               	movwf	turnLeft45@mL^0,c
  5847   0047D8  0E00               	movlw	high _motorL
  5848   0047DA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5849   0047DC  0EBC               	movlw	low _motorR
  5850   0047DE  6E1C               	movwf	turnLeft45@mR^0,c
  5851   0047E0  0E01               	movlw	high _motorR
  5852   0047E2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5853   0047E4  EC62  F023         	call	_turnLeft45	;wreg free
  5854                           
  5855                           ;dc_motor.c: 311:     turnLeft45(&motorL, &motorR);
  5856   0047E8  0EF5               	movlw	low _motorL
  5857   0047EA  6E1A               	movwf	turnLeft45@mL^0,c
  5858   0047EC  0E00               	movlw	high _motorL
  5859   0047EE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5860   0047F0  0EBC               	movlw	low _motorR
  5861   0047F2  6E1C               	movwf	turnLeft45@mR^0,c
  5862   0047F4  0E01               	movlw	high _motorR
  5863   0047F6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5864   0047F8  EC62  F023         	call	_turnLeft45	;wreg free
  5865                           
  5866                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
  5867   0047FC  0EF5               	movlw	low _motorL
  5868   0047FE  6E1A               	movwf	turnLeft45@mL^0,c
  5869   004800  0E00               	movlw	high _motorL
  5870   004802  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5871   004804  0EBC               	movlw	low _motorR
  5872   004806  6E1C               	movwf	turnLeft45@mR^0,c
  5873   004808  0E01               	movlw	high _motorR
  5874   00480A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5875   00480C  EC62  F023         	call	_turnLeft45	;wreg free
  5876   004810  0012               	return		;funcret
  5877   004812                     __end_of_LightBlueMove:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _GreenMove *****************
  5881 ;; Defined at:
  5882 ;;		line 260 in file "dc_motor.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5885 ;;		 -> motorL(9), 
  5886 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5887 ;;		 -> motorR(9), 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 5
  5906 ;; This function calls:
  5907 ;;		_reverseDetect
  5908 ;;		_turnLeft45
  5909 ;; This function is called by:
  5910 ;;		_main
  5911 ;;		_go_Home
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text32
  5916   004BE0                     __ptext32:
  5917                           	callstack 0
  5918   004BE0                     _GreenMove:
  5919                           	callstack 24
  5920   004BE0                     
  5921                           ;dc_motor.c: 261:     reverseDetect(&motorL, &motorR);
  5922   004BE0  0EF5               	movlw	low _motorL
  5923   004BE2  6E1A               	movwf	reverseDetect@mL^0,c
  5924   004BE4  0E00               	movlw	high _motorL
  5925   004BE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5926   004BE8  0EBC               	movlw	low _motorR
  5927   004BEA  6E1C               	movwf	reverseDetect@mR^0,c
  5928   004BEC  0E01               	movlw	high _motorR
  5929   004BEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5930   004BF0  EC09  F023         	call	_reverseDetect	;wreg free
  5931                           
  5932                           ;dc_motor.c: 263:     turnLeft45(&motorL, &motorR);
  5933   004BF4  0EF5               	movlw	low _motorL
  5934   004BF6  6E1A               	movwf	turnLeft45@mL^0,c
  5935   004BF8  0E00               	movlw	high _motorL
  5936   004BFA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5937   004BFC  0EBC               	movlw	low _motorR
  5938   004BFE  6E1C               	movwf	turnLeft45@mR^0,c
  5939   004C00  0E01               	movlw	high _motorR
  5940   004C02  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5941   004C04  EC62  F023         	call	_turnLeft45	;wreg free
  5942                           
  5943                           ;dc_motor.c: 264:     turnLeft45(&motorL, &motorR);
  5944   004C08  0EF5               	movlw	low _motorL
  5945   004C0A  6E1A               	movwf	turnLeft45@mL^0,c
  5946   004C0C  0E00               	movlw	high _motorL
  5947   004C0E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5948   004C10  0EBC               	movlw	low _motorR
  5949   004C12  6E1C               	movwf	turnLeft45@mR^0,c
  5950   004C14  0E01               	movlw	high _motorR
  5951   004C16  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5952   004C18  EC62  F023         	call	_turnLeft45	;wreg free
  5953   004C1C  0012               	return		;funcret
  5954   004C1E                     __end_of_GreenMove:
  5955                           	callstack 0
  5956                           
  5957 ;; *************** function _BlueMove *****************
  5958 ;; Defined at:
  5959 ;;		line 268 in file "dc_motor.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5962 ;;		 -> motorL(9), 
  5963 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5964 ;;		 -> motorR(9), 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5980 ;;Total ram usage:        4 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 5
  5983 ;; This function calls:
  5984 ;;		_reverseDetect
  5985 ;;		_turnRight45
  5986 ;; This function is called by:
  5987 ;;		_main
  5988 ;;		_go_Home
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text33
  5993   0043E6                     __ptext33:
  5994                           	callstack 0
  5995   0043E6                     _BlueMove:
  5996                           	callstack 24
  5997   0043E6                     
  5998                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  5999   0043E6  0EF5               	movlw	low _motorL
  6000   0043E8  6E1A               	movwf	reverseDetect@mL^0,c
  6001   0043EA  0E00               	movlw	high _motorL
  6002   0043EC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6003   0043EE  0EBC               	movlw	low _motorR
  6004   0043F0  6E1C               	movwf	reverseDetect@mR^0,c
  6005   0043F2  0E01               	movlw	high _motorR
  6006   0043F4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6007   0043F6  EC09  F023         	call	_reverseDetect	;wreg free
  6008                           
  6009                           ;dc_motor.c: 271:     turnRight45(&motorL, &motorR);
  6010   0043FA  0EF5               	movlw	low _motorL
  6011   0043FC  6E1A               	movwf	turnRight45@mL^0,c
  6012   0043FE  0E00               	movlw	high _motorL
  6013   004400  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6014   004402  0EBC               	movlw	low _motorR
  6015   004404  6E1C               	movwf	turnRight45@mR^0,c
  6016   004406  0E01               	movlw	high _motorR
  6017   004408  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6018   00440A  EC36  F023         	call	_turnRight45	;wreg free
  6019                           
  6020                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  6021   00440E  0EF5               	movlw	low _motorL
  6022   004410  6E1A               	movwf	turnRight45@mL^0,c
  6023   004412  0E00               	movlw	high _motorL
  6024   004414  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6025   004416  0EBC               	movlw	low _motorR
  6026   004418  6E1C               	movwf	turnRight45@mR^0,c
  6027   00441A  0E01               	movlw	high _motorR
  6028   00441C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6029   00441E  EC36  F023         	call	_turnRight45	;wreg free
  6030                           
  6031                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  6032   004422  0EF5               	movlw	low _motorL
  6033   004424  6E1A               	movwf	turnRight45@mL^0,c
  6034   004426  0E00               	movlw	high _motorL
  6035   004428  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6036   00442A  0EBC               	movlw	low _motorR
  6037   00442C  6E1C               	movwf	turnRight45@mR^0,c
  6038   00442E  0E01               	movlw	high _motorR
  6039   004430  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6040   004432  EC36  F023         	call	_turnRight45	;wreg free
  6041                           
  6042                           ;dc_motor.c: 274:     turnRight45(&motorL, &motorR);
  6043   004436  0EF5               	movlw	low _motorL
  6044   004438  6E1A               	movwf	turnRight45@mL^0,c
  6045   00443A  0E00               	movlw	high _motorL
  6046   00443C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6047   00443E  0EBC               	movlw	low _motorR
  6048   004440  6E1C               	movwf	turnRight45@mR^0,c
  6049   004442  0E01               	movlw	high _motorR
  6050   004444  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6051   004446  EC36  F023         	call	_turnRight45	;wreg free
  6052   00444A  0012               	return		;funcret
  6053   00444C                     __end_of_BlueMove:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _getTMR0val *****************
  6057 ;; Defined at:
  6058 ;;		line 28 in file "timers.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  moving          2    0[COMRAM] int 
  6063 ;;  temp            2    0        unsigned int 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;Total ram usage:        2 bytes
  6078 ;; Hardware stack levels used: 1
  6079 ;; Hardware stack levels required when called: 1
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_main
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text34
  6088   004D02                     __ptext34:
  6089                           	callstack 0
  6090   004D02                     _getTMR0val:
  6091                           	callstack 29
  6092   004D02  50D3               	movf	211,w,c	;volatile
  6093   004D04                     
  6094                           ;timers.c: 32:     int moving=TMR0H<<8;
  6095   004D04  50D4               	movf	212,w,c	;volatile
  6096   004D06  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6097   004D08  6A01               	clrf	getTMR0val@moving^0,c
  6098   004D0A                     
  6099                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6100   004D0A  90D8               	bcf	status,0,c
  6101   004D0C  0100               	movlb	0	; () banked
  6102   004D0E  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  6103   004D10  6ED9               	movwf	fsr2l,c
  6104   004D12  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6105   004D14  6EDA               	movwf	fsr2h,c
  6106   004D16  0E00               	movlw	low _Time_forward
  6107   004D18  26D9               	addwf	fsr2l,f,c
  6108   004D1A  0E02               	movlw	high _Time_forward
  6109   004D1C  22DA               	addwfc	fsr2h,f,c
  6110   004D1E  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6111   004D22  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6112   004D26                     
  6113                           ; BSR set to: 0
  6114   004D26  0012               	return		;funcret
  6115   004D28                     __end_of_getTMR0val:
  6116                           	callstack 0
  6117                           
  6118 ;; *************** function _colour_rel *****************
  6119 ;; Defined at:
  6120 ;;		line 114 in file "color.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  vals            2   49[COMRAM] PTR struct RGB
  6123 ;;		 -> vals(8), 
  6124 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6125 ;;		 -> rel(12), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  B               4   73[COMRAM] float 
  6128 ;;  G               4   69[COMRAM] float 
  6129 ;;  R               4   65[COMRAM] float 
  6130 ;;  L               4   53[COMRAM] float 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;Total ram usage:       28 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 2
  6147 ;; This function calls:
  6148 ;;		___fladd
  6149 ;;		___fldiv
  6150 ;;		___xxtofl
  6151 ;; This function is called by:
  6152 ;;		_main
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text35
  6157   002AC8                     __ptext35:
  6158                           	callstack 0
  6159   002AC8                     _colour_rel:
  6160                           	callstack 28
  6161   002AC8                     
  6162                           ;color.c: 115:     float R = vals->R;
  6163   002AC8  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6164   002ACC  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6165   002AD0  CFDE F001          	movff	postinc2,___xxtofl@val
  6166   002AD4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6167   002AD8  0E00               	movlw	0
  6168   002ADA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6169   002ADC  0EFF               	movlw	-1
  6170   002ADE  6E03               	movwf	(___xxtofl@val+2)^0,c
  6171   002AE0  6E04               	movwf	(___xxtofl@val+3)^0,c
  6172   002AE2  0E01               	movlw	1
  6173   002AE4  EC90  F019         	call	___xxtofl
  6174   002AE8  C001  F042         	movff	?___xxtofl,colour_rel@R
  6175   002AEC  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6176   002AF0  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6177   002AF4  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6178                           
  6179                           ;color.c: 116:     float G = vals->G;
  6180   002AF8  EE20 F002          	lfsr	2,2
  6181   002AFC  5032               	movf	colour_rel@vals^0,w,c
  6182   002AFE  26D9               	addwf	fsr2l,f,c
  6183   002B00  5033               	movf	(colour_rel@vals+1)^0,w,c
  6184   002B02  22DA               	addwfc	fsr2h,f,c
  6185   002B04  CFDE F001          	movff	postinc2,___xxtofl@val
  6186   002B08  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6187   002B0C  0E00               	movlw	0
  6188   002B0E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6189   002B10  0EFF               	movlw	-1
  6190   002B12  6E03               	movwf	(___xxtofl@val+2)^0,c
  6191   002B14  6E04               	movwf	(___xxtofl@val+3)^0,c
  6192   002B16  0E01               	movlw	1
  6193   002B18  EC90  F019         	call	___xxtofl
  6194   002B1C  C001  F046         	movff	?___xxtofl,colour_rel@G
  6195   002B20  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6196   002B24  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6197   002B28  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6198                           
  6199                           ;color.c: 117:     float B = vals->B;
  6200   002B2C  EE20 F004          	lfsr	2,4
  6201   002B30  5032               	movf	colour_rel@vals^0,w,c
  6202   002B32  26D9               	addwf	fsr2l,f,c
  6203   002B34  5033               	movf	(colour_rel@vals+1)^0,w,c
  6204   002B36  22DA               	addwfc	fsr2h,f,c
  6205   002B38  CFDE F001          	movff	postinc2,___xxtofl@val
  6206   002B3C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6207   002B40  0E00               	movlw	0
  6208   002B42  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6209   002B44  0EFF               	movlw	-1
  6210   002B46  6E03               	movwf	(___xxtofl@val+2)^0,c
  6211   002B48  6E04               	movwf	(___xxtofl@val+3)^0,c
  6212   002B4A  0E01               	movlw	1
  6213   002B4C  EC90  F019         	call	___xxtofl
  6214   002B50  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6215   002B54  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6216   002B58  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6217   002B5C  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6218                           
  6219                           ;color.c: 118:     float L = vals->L;
  6220   002B60  EE20 F006          	lfsr	2,6
  6221   002B64  5032               	movf	colour_rel@vals^0,w,c
  6222   002B66  26D9               	addwf	fsr2l,f,c
  6223   002B68  5033               	movf	(colour_rel@vals+1)^0,w,c
  6224   002B6A  22DA               	addwfc	fsr2h,f,c
  6225   002B6C  CFDE F001          	movff	postinc2,___xxtofl@val
  6226   002B70  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6227   002B74  0E00               	movlw	0
  6228   002B76  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6229   002B78  0EFF               	movlw	-1
  6230   002B7A  6E03               	movwf	(___xxtofl@val+2)^0,c
  6231   002B7C  6E04               	movwf	(___xxtofl@val+3)^0,c
  6232   002B7E  0E01               	movlw	1
  6233   002B80  EC90  F019         	call	___xxtofl
  6234   002B84  C001  F036         	movff	?___xxtofl,colour_rel@L
  6235   002B88  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6236   002B8C  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6237   002B90  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6238   002B94                     
  6239                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6240   002B94  C046  F005         	movff	colour_rel@G,___fladd@a
  6241   002B98  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6242   002B9C  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6243   002BA0  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6244   002BA4  C042  F001         	movff	colour_rel@R,___fladd@b
  6245   002BA8  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6246   002BAC  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6247   002BB0  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6248   002BB4  EC22  F00F         	call	___fladd	;wreg free
  6249   002BB8  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6250   002BBC  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6251   002BC0  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6252   002BC4  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6253   002BC8                     
  6254                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6255   002BC8  C04A  F005         	movff	colour_rel@B,___fladd@a
  6256   002BCC  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6257   002BD0  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6258   002BD4  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6259   002BD8  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6260   002BDC  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6261   002BE0  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6262   002BE4  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6263   002BE8  EC22  F00F         	call	___fladd	;wreg free
  6264   002BEC  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6265   002BF0  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6266   002BF4  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6267   002BF8  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6268                           
  6269                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6270   002BFC  C042  F019         	movff	colour_rel@R,___fldiv@b
  6271   002C00  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6272   002C04  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6273   002C08  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6274   002C0C  C036  F005         	movff	colour_rel@L,___fladd@a
  6275   002C10  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6276   002C14  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6277   002C18  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6278   002C1C  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6279   002C20  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6280   002C24  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6281   002C28  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6282   002C2C  EC22  F00F         	call	___fladd	;wreg free
  6283   002C30  C001  F01D         	movff	?___fladd,___fldiv@a
  6284   002C34  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6285   002C38  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6286   002C3C  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6287   002C40  EC97  F013         	call	___fldiv	;wreg free
  6288   002C44  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6289   002C48  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6290   002C4C  C019  FFDE         	movff	?___fldiv,postinc2
  6291   002C50  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6292   002C54  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6293   002C58  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6294   002C5C                     
  6295                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6296   002C5C  C046  F005         	movff	colour_rel@G,___fladd@a
  6297   002C60  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6298   002C64  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6299   002C68  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6300   002C6C  C042  F001         	movff	colour_rel@R,___fladd@b
  6301   002C70  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6302   002C74  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6303   002C78  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6304   002C7C  EC22  F00F         	call	___fladd	;wreg free
  6305   002C80  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6306   002C84  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6307   002C88  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6308   002C8C  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6309   002C90                     
  6310                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6311   002C90  C04A  F005         	movff	colour_rel@B,___fladd@a
  6312   002C94  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6313   002C98  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6314   002C9C  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6315   002CA0  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6316   002CA4  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6317   002CA8  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6318   002CAC  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6319   002CB0  EC22  F00F         	call	___fladd	;wreg free
  6320   002CB4  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6321   002CB8  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6322   002CBC  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6323   002CC0  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6324                           
  6325                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6326   002CC4  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6327   002CC8  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6328   002CCC  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6329   002CD0  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6330   002CD4  C036  F005         	movff	colour_rel@L,___fladd@a
  6331   002CD8  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6332   002CDC  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6333   002CE0  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6334   002CE4  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6335   002CE8  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6336   002CEC  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6337   002CF0  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6338   002CF4  EC22  F00F         	call	___fladd	;wreg free
  6339   002CF8  C001  F01D         	movff	?___fladd,___fldiv@a
  6340   002CFC  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6341   002D00  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6342   002D04  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6343   002D08  EC97  F013         	call	___fldiv	;wreg free
  6344   002D0C  EE20 F008          	lfsr	2,8
  6345   002D10  5034               	movf	colour_rel@rel^0,w,c
  6346   002D12  26D9               	addwf	fsr2l,f,c
  6347   002D14  5035               	movf	(colour_rel@rel+1)^0,w,c
  6348   002D16  22DA               	addwfc	fsr2h,f,c
  6349   002D18  C019  FFDE         	movff	?___fldiv,postinc2
  6350   002D1C  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6351   002D20  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6352   002D24  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6353   002D28                     
  6354                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6355   002D28  C046  F005         	movff	colour_rel@G,___fladd@a
  6356   002D2C  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6357   002D30  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6358   002D34  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6359   002D38  C042  F001         	movff	colour_rel@R,___fladd@b
  6360   002D3C  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6361   002D40  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6362   002D44  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6363   002D48  EC22  F00F         	call	___fladd	;wreg free
  6364   002D4C  C001  F03A         	movff	?___fladd,_colour_rel$2950
  6365   002D50  C002  F03B         	movff	?___fladd+1,_colour_rel$2950+1
  6366   002D54  C003  F03C         	movff	?___fladd+2,_colour_rel$2950+2
  6367   002D58  C004  F03D         	movff	?___fladd+3,_colour_rel$2950+3
  6368   002D5C                     
  6369                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6370   002D5C  C04A  F005         	movff	colour_rel@B,___fladd@a
  6371   002D60  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6372   002D64  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6373   002D68  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6374   002D6C  C03A  F001         	movff	_colour_rel$2950,___fladd@b
  6375   002D70  C03B  F002         	movff	_colour_rel$2950+1,___fladd@b+1
  6376   002D74  C03C  F003         	movff	_colour_rel$2950+2,___fladd@b+2
  6377   002D78  C03D  F004         	movff	_colour_rel$2950+3,___fladd@b+3
  6378   002D7C  EC22  F00F         	call	___fladd	;wreg free
  6379   002D80  C001  F03E         	movff	?___fladd,_colour_rel$2951
  6380   002D84  C002  F03F         	movff	?___fladd+1,_colour_rel$2951+1
  6381   002D88  C003  F040         	movff	?___fladd+2,_colour_rel$2951+2
  6382   002D8C  C004  F041         	movff	?___fladd+3,_colour_rel$2951+3
  6383                           
  6384                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6385   002D90  C046  F019         	movff	colour_rel@G,___fldiv@b
  6386   002D94  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6387   002D98  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6388   002D9C  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6389   002DA0  C036  F005         	movff	colour_rel@L,___fladd@a
  6390   002DA4  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6391   002DA8  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6392   002DAC  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6393   002DB0  C03E  F001         	movff	_colour_rel$2951,___fladd@b
  6394   002DB4  C03F  F002         	movff	_colour_rel$2951+1,___fladd@b+1
  6395   002DB8  C040  F003         	movff	_colour_rel$2951+2,___fladd@b+2
  6396   002DBC  C041  F004         	movff	_colour_rel$2951+3,___fladd@b+3
  6397   002DC0  EC22  F00F         	call	___fladd	;wreg free
  6398   002DC4  C001  F01D         	movff	?___fladd,___fldiv@a
  6399   002DC8  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6400   002DCC  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6401   002DD0  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6402   002DD4  EC97  F013         	call	___fldiv	;wreg free
  6403   002DD8  EE20 F004          	lfsr	2,4
  6404   002DDC  5034               	movf	colour_rel@rel^0,w,c
  6405   002DDE  26D9               	addwf	fsr2l,f,c
  6406   002DE0  5035               	movf	(colour_rel@rel+1)^0,w,c
  6407   002DE2  22DA               	addwfc	fsr2h,f,c
  6408   002DE4  C019  FFDE         	movff	?___fldiv,postinc2
  6409   002DE8  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6410   002DEC  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6411   002DF0  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6412   002DF4  0012               	return		;funcret
  6413   002DF6                     __end_of_colour_rel:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _color_click_init *****************
  6417 ;; Defined at:
  6418 ;;		line 7 in file "color.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;Total ram usage:        1 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 4
  6439 ;; This function calls:
  6440 ;;		_I2C_2_Master_Init
  6441 ;;		_color_writetoaddr
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text36
  6448   004812                     __ptext36:
  6449                           	callstack 0
  6450   004812                     _color_click_init:
  6451                           	callstack 26
  6452   004812                     
  6453                           ;color.c: 10:     I2C_2_Master_Init();
  6454   004812  EC43  F026         	call	_I2C_2_Master_Init	;wreg free
  6455   004816                     
  6456                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6457   004816  0E01               	movlw	1
  6458   004818  6E03               	movwf	color_writetoaddr@value^0,c
  6459   00481A  0E00               	movlw	0
  6460   00481C  ECA7  F026         	call	_color_writetoaddr
  6461   004820                     
  6462                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6463   004820  0E3F               	movlw	63
  6464   004822  6E05               	movwf	??_color_click_init^0,c
  6465   004824  0E55               	movlw	85
  6466   004826                     u4817:
  6467   004826  2EE8               	decfsz	wreg,f,c
  6468   004828  D7FE               	bra	u4817
  6469   00482A  2E05               	decfsz	??_color_click_init^0,f,c
  6470   00482C  D7FC               	bra	u4817
  6471   00482E  F000               	nop	
  6472   004830                     
  6473                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6474   004830  0E03               	movlw	3
  6475   004832  6E03               	movwf	color_writetoaddr@value^0,c
  6476   004834  0E00               	movlw	0
  6477   004836  ECA7  F026         	call	_color_writetoaddr
  6478   00483A                     
  6479                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6480   00483A  0ED5               	movlw	213
  6481   00483C  6E03               	movwf	color_writetoaddr@value^0,c
  6482   00483E  0E01               	movlw	1
  6483   004840  ECA7  F026         	call	_color_writetoaddr
  6484   004844                     
  6485                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6486   004844  0E00               	movlw	0
  6487   004846  6E03               	movwf	color_writetoaddr@value^0,c
  6488   004848  0E0F               	movlw	15
  6489   00484A  ECA7  F026         	call	_color_writetoaddr
  6490   00484E                     
  6491                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6492   00484E  9287               	bcf	135,1,c	;volatile
  6493   004850                     
  6494                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6495   004850  9881               	bcf	129,4,c	;volatile
  6496   004852                     
  6497                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6498   004852  9E86               	bcf	134,7,c	;volatile
  6499   004854                     
  6500                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6501   004854  9684               	bcf	132,3,c	;volatile
  6502   004856                     
  6503                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6504   004856  9884               	bcf	132,4,c	;volatile
  6505   004858                     
  6506                           ;color.c: 28:     LATGbits.LATG1=0;
  6507   004858  927F               	bcf	127,1,c	;volatile
  6508   00485A                     
  6509                           ;color.c: 29:     LATFbits.LATF7=0;
  6510   00485A  9E7E               	bcf	126,7,c	;volatile
  6511   00485C                     
  6512                           ;color.c: 30:     LATAbits.LATA4=0;
  6513   00485C  9879               	bcf	121,4,c	;volatile
  6514   00485E                     
  6515                           ;color.c: 32:     LATDbits.LATD3=0;
  6516   00485E  967C               	bcf	124,3,c	;volatile
  6517   004860                     
  6518                           ;color.c: 33:     LATDbits.LATD4=0;
  6519   004860  987C               	bcf	124,4,c	;volatile
  6520   004862  0012               	return		;funcret
  6521   004864                     __end_of_color_click_init:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _color_writetoaddr *****************
  6525 ;; Defined at:
  6526 ;;		line 41 in file "color.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  address         1    wreg     unsigned char 
  6529 ;;  value           1    2[COMRAM] unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  address         1    3[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;Total ram usage:        2 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 3
  6548 ;; This function calls:
  6549 ;;		_I2C_2_Master_Start
  6550 ;;		_I2C_2_Master_Stop
  6551 ;;		_I2C_2_Master_Write
  6552 ;; This function is called by:
  6553 ;;		_color_click_init
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text37
  6558   004D4E                     __ptext37:
  6559                           	callstack 0
  6560   004D4E                     _color_writetoaddr:
  6561                           	callstack 26
  6562                           
  6563                           ;incstack = 0
  6564                           ;color_writetoaddr@address stored from wreg
  6565   004D4E  6E04               	movwf	color_writetoaddr@address^0,c
  6566   004D50                     
  6567                           ;color.c: 42:     I2C_2_Master_Start();
  6568   004D50  ECF9  F026         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6571   004D54  0E52               	movlw	82
  6572   004D56  ECE9  F026         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6575   004D5A  5004               	movf	color_writetoaddr@address^0,w,c
  6576   004D5C  0980               	iorlw	128
  6577   004D5E  ECE9  F026         	call	_I2C_2_Master_Write
  6578                           
  6579                           ;color.c: 45:     I2C_2_Master_Write(value);
  6580   004D62  5003               	movf	color_writetoaddr@value^0,w,c
  6581   004D64  ECE9  F026         	call	_I2C_2_Master_Write
  6582                           
  6583                           ;color.c: 46:     I2C_2_Master_Stop();
  6584   004D68  ECF4  F026         	call	_I2C_2_Master_Stop	;wreg free
  6585   004D6C  0012               	return		;funcret
  6586   004D6E                     __end_of_color_writetoaddr:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _I2C_2_Master_Write *****************
  6590 ;; Defined at:
  6591 ;;		line 45 in file "i2c.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  data_byte       1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  data_byte       1    1[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;Total ram usage:        1 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; Hardware stack levels required when called: 2
  6612 ;; This function calls:
  6613 ;;		_I2C_2_Master_Idle
  6614 ;; This function is called by:
  6615 ;;		_color_writetoaddr
  6616 ;;		_color_read_lum
  6617 ;;		_color_read_Red
  6618 ;;		_color_read_Green
  6619 ;;		_color_read_Blue
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text38
  6624   004DD2                     __ptext38:
  6625                           	callstack 0
  6626   004DD2                     _I2C_2_Master_Write:
  6627                           	callstack 26
  6628                           
  6629                           ;incstack = 0
  6630                           ;I2C_2_Master_Write@data_byte stored from wreg
  6631   004DD2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6632   004DD4                     
  6633                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6634   004DD4  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6635   004DD8                     
  6636                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6637   004DD8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6638   004DDC  0012               	return		;funcret
  6639   004DDE                     __end_of_I2C_2_Master_Write:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _I2C_2_Master_Stop *****************
  6643 ;; Defined at:
  6644 ;;		line 39 in file "i2c.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used: 1
  6664 ;; Hardware stack levels required when called: 2
  6665 ;; This function calls:
  6666 ;;		_I2C_2_Master_Idle
  6667 ;; This function is called by:
  6668 ;;		_color_writetoaddr
  6669 ;;		_color_read_lum
  6670 ;;		_color_read_Red
  6671 ;;		_color_read_Green
  6672 ;;		_color_read_Blue
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text39
  6677   004DE8                     __ptext39:
  6678                           	callstack 0
  6679   004DE8                     _I2C_2_Master_Stop:
  6680                           	callstack 26
  6681   004DE8                     
  6682                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6683   004DE8  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6684   004DEC                     
  6685                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6686   004DEC  010E               	movlb	14	; () banked
  6687   004DEE  85DA               	bsf	218,2,b	;volatile
  6688   004DF0                     
  6689                           ; BSR set to: 14
  6690   004DF0  0012               	return		;funcret
  6691   004DF2                     __end_of_I2C_2_Master_Stop:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _I2C_2_Master_Start *****************
  6695 ;; Defined at:
  6696 ;;		line 27 in file "i2c.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		_I2C_2_Master_Idle
  6719 ;; This function is called by:
  6720 ;;		_color_writetoaddr
  6721 ;;		_color_read_lum
  6722 ;;		_color_read_Red
  6723 ;;		_color_read_Green
  6724 ;;		_color_read_Blue
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text40
  6729   004DF2                     __ptext40:
  6730                           	callstack 0
  6731   004DF2                     _I2C_2_Master_Start:
  6732                           	callstack 26
  6733   004DF2                     
  6734                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6735   004DF2  EC6D  F026         	call	_I2C_2_Master_Idle	;wreg free
  6736   004DF6                     
  6737                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6738   004DF6  010E               	movlb	14	; () banked
  6739   004DF8  81DA               	bsf	218,0,b	;volatile
  6740   004DFA                     
  6741                           ; BSR set to: 14
  6742   004DFA  0012               	return		;funcret
  6743   004DFC                     __end_of_I2C_2_Master_Start:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _I2C_2_Master_Idle *****************
  6747 ;; Defined at:
  6748 ;;		line 22 in file "i2c.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;Total ram usage:        1 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_I2C_2_Master_Start
  6773 ;;		_I2C_2_Master_RepStart
  6774 ;;		_I2C_2_Master_Stop
  6775 ;;		_I2C_2_Master_Write
  6776 ;;		_I2C_2_Master_Read
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text41
  6781   004CDA                     __ptext41:
  6782                           	callstack 0
  6783   004CDA                     _I2C_2_Master_Idle:
  6784                           	callstack 26
  6785   004CDA                     l143:
  6786   004CDA  010E               	movlb	14	; () banked
  6787   004CDC  B5D8               	btfsc	216,2,b	;volatile
  6788   004CDE  EF73  F026         	goto	u2641
  6789   004CE2  EF75  F026         	goto	u2640
  6790   004CE6                     u2641:
  6791   004CE6  EF6D  F026         	goto	l143
  6792   004CEA                     u2640:
  6793   004CEA                     
  6794                           ; BSR set to: 14
  6795   004CEA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6796   004CEE  0E1F               	movlw	31
  6797   004CF0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6798   004CF2  A4D8               	btfss	status,2,c
  6799   004CF4  EF7E  F026         	goto	u2651
  6800   004CF8  EF80  F026         	goto	u2650
  6801   004CFC                     u2651:
  6802   004CFC  EF6D  F026         	goto	l143
  6803   004D00                     u2650:
  6804   004D00                     
  6805                           ; BSR set to: 14
  6806   004D00  0012               	return		;funcret
  6807   004D02                     __end_of_I2C_2_Master_Idle:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _I2C_2_Master_Init *****************
  6811 ;; Defined at:
  6812 ;;		line 4 in file "i2c.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 1
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_color_click_init
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text42
  6842   004C86                     __ptext42:
  6843                           	callstack 0
  6844   004C86                     _I2C_2_Master_Init:
  6845                           	callstack 28
  6846   004C86                     
  6847                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6848   004C86  010E               	movlb	14	; () banked
  6849   004C88  51D9               	movf	217,w,b	;volatile
  6850   004C8A  0BF0               	andlw	-16
  6851   004C8C  0908               	iorlw	8
  6852   004C8E  6FD9               	movwf	217,b	;volatile
  6853   004C90                     
  6854                           ; BSR set to: 14
  6855                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6856   004C90  8BD9               	bsf	217,5,b	;volatile
  6857                           
  6858                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6859   004C92  0E9F               	movlw	159
  6860   004C94  6FD6               	movwf	214,b	;volatile
  6861   004C96                     
  6862                           ; BSR set to: 14
  6863                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6864   004C96  8A84               	bsf	132,5,c	;volatile
  6865   004C98                     
  6866                           ; BSR set to: 14
  6867                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6868   004C98  8C84               	bsf	132,6,c	;volatile
  6869   004C9A                     
  6870                           ; BSR set to: 14
  6871                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6872   004C9A  9BA7               	bcf	167,5,b	;volatile
  6873   004C9C                     
  6874                           ; BSR set to: 14
  6875                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6876   004C9C  9DA7               	bcf	167,6,b	;volatile
  6877                           
  6878                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6879   004C9E  0E1D               	movlw	29
  6880   004CA0  6F1D               	movwf	29,b	;volatile
  6881                           
  6882                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6883   004CA2  0E1E               	movlw	30
  6884   004CA4  6F1C               	movwf	28,b	;volatile
  6885                           
  6886                           ;i2c.c: 18:   RD5PPS=0x1C;
  6887   004CA6  0E1C               	movlw	28
  6888   004CA8  6F6F               	movwf	111,b	;volatile
  6889                           
  6890                           ;i2c.c: 19:   RD6PPS=0x1B;
  6891   004CAA  0E1B               	movlw	27
  6892   004CAC  6F70               	movwf	112,b	;volatile
  6893   004CAE                     
  6894                           ; BSR set to: 14
  6895   004CAE  0012               	return		;funcret
  6896   004CB0                     __end_of_I2C_2_Master_Init:
  6897                           	callstack 0
  6898                           
  6899 ;; *************** function _YellowMove *****************
  6900 ;; Defined at:
  6901 ;;		line 278 in file "dc_motor.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6904 ;;		 -> motorL(9), 
  6905 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6906 ;;		 -> motorR(9), 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;Total ram usage:        4 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 5
  6925 ;; This function calls:
  6926 ;;		_reverseDetect
  6927 ;;		_reverseOneBlock
  6928 ;;		_turnRight45
  6929 ;; This function is called by:
  6930 ;;		_main
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text43
  6935   004864                     __ptext43:
  6936                           	callstack 0
  6937   004864                     _YellowMove:
  6938                           	callstack 25
  6939   004864                     
  6940                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6941   004864  0EF5               	movlw	low _motorL
  6942   004866  6E1A               	movwf	reverseDetect@mL^0,c
  6943   004868  0E00               	movlw	high _motorL
  6944   00486A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6945   00486C  0EBC               	movlw	low _motorR
  6946   00486E  6E1C               	movwf	reverseDetect@mR^0,c
  6947   004870  0E01               	movlw	high _motorR
  6948   004872  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6949   004874  EC09  F023         	call	_reverseDetect	;wreg free
  6950                           
  6951                           ;dc_motor.c: 281:     reverseOneBlock(&motorL, &motorR);
  6952   004878  0EF5               	movlw	low _motorL
  6953   00487A  6E1A               	movwf	reverseOneBlock@mL^0,c
  6954   00487C  0E00               	movlw	high _motorL
  6955   00487E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6956   004880  0EBC               	movlw	low _motorR
  6957   004882  6E1C               	movwf	reverseOneBlock@mR^0,c
  6958   004884  0E01               	movlw	high _motorR
  6959   004886  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6960   004888  ECDC  F022         	call	_reverseOneBlock	;wreg free
  6961                           
  6962                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6963   00488C  0EF5               	movlw	low _motorL
  6964   00488E  6E1A               	movwf	turnRight45@mL^0,c
  6965   004890  0E00               	movlw	high _motorL
  6966   004892  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6967   004894  0EBC               	movlw	low _motorR
  6968   004896  6E1C               	movwf	turnRight45@mR^0,c
  6969   004898  0E01               	movlw	high _motorR
  6970   00489A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6971   00489C  EC36  F023         	call	_turnRight45	;wreg free
  6972                           
  6973                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6974   0048A0  0EF5               	movlw	low _motorL
  6975   0048A2  6E1A               	movwf	turnRight45@mL^0,c
  6976   0048A4  0E00               	movlw	high _motorL
  6977   0048A6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6978   0048A8  0EBC               	movlw	low _motorR
  6979   0048AA  6E1C               	movwf	turnRight45@mR^0,c
  6980   0048AC  0E01               	movlw	high _motorR
  6981   0048AE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6982   0048B0  EC36  F023         	call	_turnRight45	;wreg free
  6983   0048B4  0012               	return		;funcret
  6984   0048B6                     __end_of_YellowMove:
  6985                           	callstack 0
  6986                           
  6987 ;; *************** function _turnRight45 *****************
  6988 ;; Defined at:
  6989 ;;		line 201 in file "dc_motor.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6992 ;;		 -> motorL(9), 
  6993 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6994 ;;		 -> motorR(9), 
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7006 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;Total ram usage:        6 bytes
  7011 ;; Hardware stack levels used: 1
  7012 ;; Hardware stack levels required when called: 4
  7013 ;; This function calls:
  7014 ;;		_stop
  7015 ;;		_turnRight
  7016 ;; This function is called by:
  7017 ;;		_RedMove
  7018 ;;		_BlueMove
  7019 ;;		_YellowMove
  7020 ;;		_OrangeMove
  7021 ;;		_ReverseYellow
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text44
  7026   00466C                     __ptext44:
  7027                           	callstack 0
  7028   00466C                     _turnRight45:
  7029                           	callstack 24
  7030   00466C                     
  7031                           ;dc_motor.c: 202:     turnRight(mL,mR);
  7032   00466C  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  7033   004670  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  7034   004674  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  7035   004678  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  7036   00467C  EC85  F01F         	call	_turnRight	;wreg free
  7037   004680                     
  7038                           ;dc_motor.c: 203:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7039   004680  0E12               	movlw	18
  7040   004682  6E1F               	movwf	(??_turnRight45+1)^0,c
  7041   004684  0EDC               	movlw	220
  7042   004686  6E1E               	movwf	??_turnRight45^0,c
  7043   004688  0E60               	movlw	96
  7044   00468A                     u4827:
  7045   00468A  2EE8               	decfsz	wreg,f,c
  7046   00468C  D7FE               	bra	u4827
  7047   00468E  2E1E               	decfsz	??_turnRight45^0,f,c
  7048   004690  D7FC               	bra	u4827
  7049   004692  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7050   004694  D7FA               	bra	u4827
  7051   004696                     
  7052                           ;dc_motor.c: 204:     stop(&motorL, &motorR);
  7053   004696  0EF5               	movlw	low _motorL
  7054   004698  6E14               	movwf	stop@mL^0,c
  7055   00469A  0E00               	movlw	high _motorL
  7056   00469C  6E15               	movwf	(stop@mL+1)^0,c
  7057   00469E  0EBC               	movlw	low _motorR
  7058   0046A0  6E16               	movwf	stop@mR^0,c
  7059   0046A2  0E01               	movlw	high _motorR
  7060   0046A4  6E17               	movwf	(stop@mR+1)^0,c
  7061   0046A6  EC05  F021         	call	_stop	;wreg free
  7062                           
  7063                           ;dc_motor.c: 205:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7064   0046AA  0E05               	movlw	5
  7065   0046AC  6E1F               	movwf	(??_turnRight45+1)^0,c
  7066   0046AE  0E0F               	movlw	15
  7067   0046B0  6E1E               	movwf	??_turnRight45^0,c
  7068   0046B2  0EF1               	movlw	241
  7069   0046B4                     u4837:
  7070   0046B4  2EE8               	decfsz	wreg,f,c
  7071   0046B6  D7FE               	bra	u4837
  7072   0046B8  2E1E               	decfsz	??_turnRight45^0,f,c
  7073   0046BA  D7FC               	bra	u4837
  7074   0046BC  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7075   0046BE  D7FA               	bra	u4837
  7076   0046C0  F000               	nop	
  7077   0046C2  0012               	return		;funcret
  7078   0046C4                     __end_of_turnRight45:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _turnRight *****************
  7082 ;; Defined at:
  7083 ;;		line 128 in file "dc_motor.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7086 ;;		 -> motorL(9), 
  7087 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7088 ;;		 -> motorR(9), 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;Total ram usage:        6 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 3
  7107 ;; This function calls:
  7108 ;;		_setMotorPWM
  7109 ;; This function is called by:
  7110 ;;		_turnRight45
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text45
  7115   003F0A                     __ptext45:
  7116                           	callstack 0
  7117   003F0A                     _turnRight:
  7118                           	callstack 24
  7119   003F0A                     
  7120                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  7121   003F0A  EE20 F001          	lfsr	2,1
  7122   003F0E  5014               	movf	turnRight@mL^0,w,c
  7123   003F10  26D9               	addwf	fsr2l,f,c
  7124   003F12  5015               	movf	(turnRight@mL+1)^0,w,c
  7125   003F14  22DA               	addwfc	fsr2h,f,c
  7126   003F16  0E01               	movlw	1
  7127   003F18  6EDF               	movwf	indf2,c
  7128                           
  7129                           ;dc_motor.c: 131:     mR->direction =0;
  7130   003F1A  EE20 F001          	lfsr	2,1
  7131   003F1E  5016               	movf	turnRight@mR^0,w,c
  7132   003F20  26D9               	addwf	fsr2l,f,c
  7133   003F22  5017               	movf	(turnRight@mR+1)^0,w,c
  7134   003F24  22DA               	addwfc	fsr2h,f,c
  7135   003F26  0E00               	movlw	0
  7136   003F28  6EDF               	movwf	indf2,c
  7137                           
  7138                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  7139   003F2A  EFBB  F01F         	goto	l3418
  7140   003F2E                     l3410:
  7141                           
  7142                           ;dc_motor.c: 135:         mL->power+=10;
  7143   003F2E  C014  FFD9         	movff	turnRight@mL,fsr2l
  7144   003F32  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7145   003F36  0E0A               	movlw	10
  7146   003F38  26DF               	addwf	indf2,f,c
  7147                           
  7148                           ;dc_motor.c: 136:         mR->power+=10;
  7149   003F3A  C016  FFD9         	movff	turnRight@mR,fsr2l
  7150   003F3E  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7151   003F42  0E0A               	movlw	10
  7152   003F44  26DF               	addwf	indf2,f,c
  7153   003F46                     
  7154                           ;dc_motor.c: 138:         setMotorPWM(mL);
  7155   003F46  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7156   003F4A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7157   003F4E  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7158   003F52                     
  7159                           ;dc_motor.c: 139:         setMotorPWM(mR);
  7160   003F52  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7161   003F56  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7162   003F5A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7163   003F5E                     
  7164                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7165   003F5E  0E02               	movlw	2
  7166   003F60  6E19               	movwf	(??_turnRight+1)^0,c
  7167   003F62  0EA0               	movlw	160
  7168   003F64  6E18               	movwf	??_turnRight^0,c
  7169   003F66  0E92               	movlw	146
  7170   003F68                     u4847:
  7171   003F68  2EE8               	decfsz	wreg,f,c
  7172   003F6A  D7FE               	bra	u4847
  7173   003F6C  2E18               	decfsz	??_turnRight^0,f,c
  7174   003F6E  D7FC               	bra	u4847
  7175   003F70  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7176   003F72  D7FA               	bra	u4847
  7177   003F74  D000               	nop2	
  7178   003F76                     l3418:
  7179   003F76  C014  FFD9         	movff	turnRight@mL,fsr2l
  7180   003F7A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7181   003F7E  0E1E               	movlw	30
  7182   003F80  60DF               	cpfslt	indf2,c
  7183   003F82  EFC5  F01F         	goto	u2721
  7184   003F86  EFC7  F01F         	goto	u2720
  7185   003F8A                     u2721:
  7186   003F8A  EFD3  F01F         	goto	l508
  7187   003F8E                     u2720:
  7188   003F8E  C016  FFD9         	movff	turnRight@mR,fsr2l
  7189   003F92  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7190   003F96  0E1D               	movlw	29
  7191   003F98  64DF               	cpfsgt	indf2,c
  7192   003F9A  EFD1  F01F         	goto	u2731
  7193   003F9E  EFD3  F01F         	goto	u2730
  7194   003FA2                     u2731:
  7195   003FA2  EF97  F01F         	goto	l3410
  7196   003FA6                     u2730:
  7197   003FA6                     l508:
  7198   003FA6  0012               	return		;funcret
  7199   003FA8                     __end_of_turnRight:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _Timer0_init *****************
  7203 ;; Defined at:
  7204 ;;		line 8 in file "timers.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; Hardware stack levels required when called: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text46
  7233   004D6E                     __ptext46:
  7234                           	callstack 0
  7235   004D6E                     _Timer0_init:
  7236                           	callstack 29
  7237   004D6E                     
  7238                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7239   004D6E  50D6               	movf	214,w,c	;volatile
  7240   004D70  0B1F               	andlw	-225
  7241   004D72  0940               	iorlw	64
  7242   004D74  6ED6               	movwf	214,c	;volatile
  7243   004D76                     
  7244                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7245   004D76  88D6               	bsf	214,4,c	;volatile
  7246                           
  7247                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7248   004D78  50D6               	movf	214,w,c	;volatile
  7249   004D7A  0BF0               	andlw	-16
  7250   004D7C  090E               	iorlw	14
  7251   004D7E  6ED6               	movwf	214,c	;volatile
  7252   004D80                     
  7253                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7254   004D80  88D5               	bsf	213,4,c	;volatile
  7255                           
  7256                           ;timers.c: 16:     TMR0H=0;
  7257   004D82  0E00               	movlw	0
  7258   004D84  6ED4               	movwf	212,c	;volatile
  7259                           
  7260                           ;timers.c: 17:     TMR0L=0;
  7261   004D86  0E00               	movlw	0
  7262   004D88  6ED3               	movwf	211,c	;volatile
  7263   004D8A                     
  7264                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7265   004D8A  8ED5               	bsf	213,7,c	;volatile
  7266   004D8C  0012               	return		;funcret
  7267   004D8E                     __end_of_Timer0_init:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _RetryMove *****************
  7271 ;; Defined at:
  7272 ;;		line 315 in file "dc_motor.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7275 ;;		 -> motorL(9), 
  7276 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7277 ;;		 -> motorR(9), 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        4 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 5
  7296 ;; This function calls:
  7297 ;;		_Backhalfblock
  7298 ;;		_Forwardhalfblock
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text47
  7305   004CB0                     __ptext47:
  7306                           	callstack 0
  7307   004CB0                     _RetryMove:
  7308                           	callstack 25
  7309   004CB0                     
  7310                           ;dc_motor.c: 316:     Backhalfblock(&motorL, &motorR);
  7311   004CB0  0EF5               	movlw	low _motorL
  7312   004CB2  6E1A               	movwf	Backhalfblock@mL^0,c
  7313   004CB4  0E00               	movlw	high _motorL
  7314   004CB6  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  7315   004CB8  0EBC               	movlw	low _motorR
  7316   004CBA  6E1C               	movwf	Backhalfblock@mR^0,c
  7317   004CBC  0E01               	movlw	high _motorR
  7318   004CBE  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  7319   004CC0  ECAF  F022         	call	_Backhalfblock	;wreg free
  7320                           
  7321                           ;dc_motor.c: 317:     Forwardhalfblock(&motorL, &motorR);
  7322   004CC4  0EF5               	movlw	low _motorL
  7323   004CC6  6E1A               	movwf	Forwardhalfblock@mL^0,c
  7324   004CC8  0E00               	movlw	high _motorL
  7325   004CCA  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  7326   004CCC  0EBC               	movlw	low _motorR
  7327   004CCE  6E1C               	movwf	Forwardhalfblock@mR^0,c
  7328   004CD0  0E01               	movlw	high _motorR
  7329   004CD2  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  7330   004CD4  EC82  F022         	call	_Forwardhalfblock	;wreg free
  7331   004CD8  0012               	return		;funcret
  7332   004CDA                     __end_of_RetryMove:
  7333                           	callstack 0
  7334                           
  7335 ;; *************** function _Forwardhalfblock *****************
  7336 ;; Defined at:
  7337 ;;		line 235 in file "dc_motor.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7340 ;;		 -> motorL(9), 
  7341 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7342 ;;		 -> motorR(9), 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;Total ram usage:        6 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 4
  7361 ;; This function calls:
  7362 ;;		_fullSpeedAhead
  7363 ;;		_stop
  7364 ;; This function is called by:
  7365 ;;		_main
  7366 ;;		_RetryMove
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text48
  7371   004504                     __ptext48:
  7372                           	callstack 0
  7373   004504                     _Forwardhalfblock:
  7374                           	callstack 25
  7375   004504                     
  7376                           ;dc_motor.c: 236:     fullSpeedAhead(mL,mR);
  7377   004504  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  7378   004508  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  7379   00450C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  7380   004510  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  7381   004514  ECD4  F01F         	call	_fullSpeedAhead	;wreg free
  7382   004518                     
  7383                           ;dc_motor.c: 237:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  7384   004518  0E52               	movlw	82
  7385   00451A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7386   00451C  0E2B               	movlw	43
  7387   00451E  6E1E               	movwf	??_Forwardhalfblock^0,c
  7388   004520  0E00               	movlw	0
  7389   004522                     u4857:
  7390   004522  2EE8               	decfsz	wreg,f,c
  7391   004524  D7FE               	bra	u4857
  7392   004526  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7393   004528  D7FC               	bra	u4857
  7394   00452A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7395   00452C  D7FA               	bra	u4857
  7396   00452E  D000               	nop2	
  7397   004530                     
  7398                           ;dc_motor.c: 238:     stop(&motorL, &motorR);
  7399   004530  0EF5               	movlw	low _motorL
  7400   004532  6E14               	movwf	stop@mL^0,c
  7401   004534  0E00               	movlw	high _motorL
  7402   004536  6E15               	movwf	(stop@mL+1)^0,c
  7403   004538  0EBC               	movlw	low _motorR
  7404   00453A  6E16               	movwf	stop@mR^0,c
  7405   00453C  0E01               	movlw	high _motorR
  7406   00453E  6E17               	movwf	(stop@mR+1)^0,c
  7407   004540  EC05  F021         	call	_stop	;wreg free
  7408                           
  7409                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7410   004544  0E05               	movlw	5
  7411   004546  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  7412   004548  0E0F               	movlw	15
  7413   00454A  6E1E               	movwf	??_Forwardhalfblock^0,c
  7414   00454C  0EF1               	movlw	241
  7415   00454E                     u4867:
  7416   00454E  2EE8               	decfsz	wreg,f,c
  7417   004550  D7FE               	bra	u4867
  7418   004552  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  7419   004554  D7FC               	bra	u4867
  7420   004556  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  7421   004558  D7FA               	bra	u4867
  7422   00455A  F000               	nop	
  7423   00455C  0012               	return		;funcret
  7424   00455E                     __end_of_Forwardhalfblock:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _fullSpeedAhead *****************
  7428 ;; Defined at:
  7429 ;;		line 146 in file "dc_motor.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7432 ;;		 -> motorL(9), 
  7433 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7434 ;;		 -> motorR(9), 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7450 ;;Total ram usage:        6 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 3
  7453 ;; This function calls:
  7454 ;;		_setMotorPWM
  7455 ;; This function is called by:
  7456 ;;		_main
  7457 ;;		_ForwardOneBlock
  7458 ;;		_Forwardhalfblock
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text49
  7463   003FA8                     __ptext49:
  7464                           	callstack 0
  7465   003FA8                     _fullSpeedAhead:
  7466                           	callstack 24
  7467   003FA8                     
  7468                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  7469   003FA8  EE20 F001          	lfsr	2,1
  7470   003FAC  5014               	movf	fullSpeedAhead@mL^0,w,c
  7471   003FAE  26D9               	addwf	fsr2l,f,c
  7472   003FB0  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7473   003FB2  22DA               	addwfc	fsr2h,f,c
  7474   003FB4  0E01               	movlw	1
  7475   003FB6  6EDF               	movwf	indf2,c
  7476                           
  7477                           ;dc_motor.c: 150:     mR->direction =1;
  7478   003FB8  EE20 F001          	lfsr	2,1
  7479   003FBC  5016               	movf	fullSpeedAhead@mR^0,w,c
  7480   003FBE  26D9               	addwf	fsr2l,f,c
  7481   003FC0  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7482   003FC2  22DA               	addwfc	fsr2h,f,c
  7483   003FC4  0E01               	movlw	1
  7484   003FC6  6EDF               	movwf	indf2,c
  7485                           
  7486                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  7487   003FC8  EF0A  F020         	goto	l3376
  7488   003FCC                     l3368:
  7489                           
  7490                           ;dc_motor.c: 153:         mL->power+=10;
  7491   003FCC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7492   003FD0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7493   003FD4  0E0A               	movlw	10
  7494   003FD6  26DF               	addwf	indf2,f,c
  7495                           
  7496                           ;dc_motor.c: 154:         mR->power+=10;
  7497   003FD8  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7498   003FDC  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7499   003FE0  0E0A               	movlw	10
  7500   003FE2  26DF               	addwf	indf2,f,c
  7501   003FE4                     
  7502                           ;dc_motor.c: 156:         setMotorPWM(mL);
  7503   003FE4  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7504   003FE8  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7505   003FEC  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7506   003FF0                     
  7507                           ;dc_motor.c: 157:         setMotorPWM(mR);
  7508   003FF0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7509   003FF4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7510   003FF8  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7511   003FFC                     
  7512                           ;dc_motor.c: 160:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7513   003FFC  0E02               	movlw	2
  7514   003FFE  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  7515   004000  0EA0               	movlw	160
  7516   004002  6E18               	movwf	??_fullSpeedAhead^0,c
  7517   004004  0E92               	movlw	146
  7518   004006                     u4877:
  7519   004006  2EE8               	decfsz	wreg,f,c
  7520   004008  D7FE               	bra	u4877
  7521   00400A  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7522   00400C  D7FC               	bra	u4877
  7523   00400E  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  7524   004010  D7FA               	bra	u4877
  7525   004012  D000               	nop2	
  7526   004014                     l3376:
  7527   004014  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7528   004018  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7529   00401C  0E1E               	movlw	30
  7530   00401E  60DF               	cpfslt	indf2,c
  7531   004020  EF14  F020         	goto	u2661
  7532   004024  EF16  F020         	goto	u2660
  7533   004028                     u2661:
  7534   004028  EF22  F020         	goto	l516
  7535   00402C                     u2660:
  7536   00402C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7537   004030  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7538   004034  0E1D               	movlw	29
  7539   004036  64DF               	cpfsgt	indf2,c
  7540   004038  EF20  F020         	goto	u2671
  7541   00403C  EF22  F020         	goto	u2670
  7542   004040                     u2671:
  7543   004040  EFE6  F01F         	goto	l3368
  7544   004044                     u2670:
  7545   004044                     l516:
  7546   004044  0012               	return		;funcret
  7547   004046                     __end_of_fullSpeedAhead:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _Backhalfblock *****************
  7551 ;; Defined at:
  7552 ;;		line 241 in file "dc_motor.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7555 ;;		 -> motorL(9), 
  7556 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7557 ;;		 -> motorR(9), 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;Total ram usage:        6 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 4
  7576 ;; This function calls:
  7577 ;;		_fullSpeedBack
  7578 ;;		_stop
  7579 ;; This function is called by:
  7580 ;;		_RetryMove
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text50
  7585   00455E                     __ptext50:
  7586                           	callstack 0
  7587   00455E                     _Backhalfblock:
  7588                           	callstack 25
  7589   00455E                     
  7590                           ;dc_motor.c: 242:     fullSpeedBack(mL,mR);
  7591   00455E  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  7592   004562  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  7593   004566  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  7594   00456A  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  7595   00456E  EC72  F020         	call	_fullSpeedBack	;wreg free
  7596   004572                     
  7597                           ;dc_motor.c: 243:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  7598   004572  0E52               	movlw	82
  7599   004574  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  7600   004576  0E2B               	movlw	43
  7601   004578  6E1E               	movwf	??_Backhalfblock^0,c
  7602   00457A  0E00               	movlw	0
  7603   00457C                     u4887:
  7604   00457C  2EE8               	decfsz	wreg,f,c
  7605   00457E  D7FE               	bra	u4887
  7606   004580  2E1E               	decfsz	??_Backhalfblock^0,f,c
  7607   004582  D7FC               	bra	u4887
  7608   004584  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  7609   004586  D7FA               	bra	u4887
  7610   004588  D000               	nop2	
  7611   00458A                     
  7612                           ;dc_motor.c: 244:     stop(&motorL, &motorR);
  7613   00458A  0EF5               	movlw	low _motorL
  7614   00458C  6E14               	movwf	stop@mL^0,c
  7615   00458E  0E00               	movlw	high _motorL
  7616   004590  6E15               	movwf	(stop@mL+1)^0,c
  7617   004592  0EBC               	movlw	low _motorR
  7618   004594  6E16               	movwf	stop@mR^0,c
  7619   004596  0E01               	movlw	high _motorR
  7620   004598  6E17               	movwf	(stop@mR+1)^0,c
  7621   00459A  EC05  F021         	call	_stop	;wreg free
  7622                           
  7623                           ;dc_motor.c: 245:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7624   00459E  0E05               	movlw	5
  7625   0045A0  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  7626   0045A2  0E0F               	movlw	15
  7627   0045A4  6E1E               	movwf	??_Backhalfblock^0,c
  7628   0045A6  0EF1               	movlw	241
  7629   0045A8                     u4897:
  7630   0045A8  2EE8               	decfsz	wreg,f,c
  7631   0045AA  D7FE               	bra	u4897
  7632   0045AC  2E1E               	decfsz	??_Backhalfblock^0,f,c
  7633   0045AE  D7FC               	bra	u4897
  7634   0045B0  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  7635   0045B2  D7FA               	bra	u4897
  7636   0045B4  F000               	nop	
  7637   0045B6  0012               	return		;funcret
  7638   0045B8                     __end_of_Backhalfblock:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _PinkMove *****************
  7642 ;; Defined at:
  7643 ;;		line 288 in file "dc_motor.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7646 ;;		 -> motorL(9), 
  7647 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7648 ;;		 -> motorR(9), 
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;Total ram usage:        4 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; Hardware stack levels required when called: 5
  7667 ;; This function calls:
  7668 ;;		_reverseDetect
  7669 ;;		_reverseOneBlock
  7670 ;;		_turnLeft45
  7671 ;; This function is called by:
  7672 ;;		_main
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text51
  7677   0048B6                     __ptext51:
  7678                           	callstack 0
  7679   0048B6                     _PinkMove:
  7680                           	callstack 25
  7681   0048B6                     
  7682                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7683   0048B6  0EF5               	movlw	low _motorL
  7684   0048B8  6E1A               	movwf	reverseDetect@mL^0,c
  7685   0048BA  0E00               	movlw	high _motorL
  7686   0048BC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7687   0048BE  0EBC               	movlw	low _motorR
  7688   0048C0  6E1C               	movwf	reverseDetect@mR^0,c
  7689   0048C2  0E01               	movlw	high _motorR
  7690   0048C4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7691   0048C6  EC09  F023         	call	_reverseDetect	;wreg free
  7692                           
  7693                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7694   0048CA  0EF5               	movlw	low _motorL
  7695   0048CC  6E1A               	movwf	reverseOneBlock@mL^0,c
  7696   0048CE  0E00               	movlw	high _motorL
  7697   0048D0  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7698   0048D2  0EBC               	movlw	low _motorR
  7699   0048D4  6E1C               	movwf	reverseOneBlock@mR^0,c
  7700   0048D6  0E01               	movlw	high _motorR
  7701   0048D8  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7702   0048DA  ECDC  F022         	call	_reverseOneBlock	;wreg free
  7703                           
  7704                           ;dc_motor.c: 293:     turnLeft45(&motorL, &motorR);
  7705   0048DE  0EF5               	movlw	low _motorL
  7706   0048E0  6E1A               	movwf	turnLeft45@mL^0,c
  7707   0048E2  0E00               	movlw	high _motorL
  7708   0048E4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7709   0048E6  0EBC               	movlw	low _motorR
  7710   0048E8  6E1C               	movwf	turnLeft45@mR^0,c
  7711   0048EA  0E01               	movlw	high _motorR
  7712   0048EC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7713   0048EE  EC62  F023         	call	_turnLeft45	;wreg free
  7714                           
  7715                           ;dc_motor.c: 294:     turnLeft45(&motorL, &motorR);
  7716   0048F2  0EF5               	movlw	low _motorL
  7717   0048F4  6E1A               	movwf	turnLeft45@mL^0,c
  7718   0048F6  0E00               	movlw	high _motorL
  7719   0048F8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7720   0048FA  0EBC               	movlw	low _motorR
  7721   0048FC  6E1C               	movwf	turnLeft45@mR^0,c
  7722   0048FE  0E01               	movlw	high _motorR
  7723   004900  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7724   004902  EC62  F023         	call	_turnLeft45	;wreg free
  7725   004906  0012               	return		;funcret
  7726   004908                     __end_of_PinkMove:
  7727                           	callstack 0
  7728                           
  7729 ;; *************** function _turnLeft45 *****************
  7730 ;; Defined at:
  7731 ;;		line 208 in file "dc_motor.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7734 ;;		 -> motorL(9), 
  7735 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7736 ;;		 -> motorR(9), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;Total ram usage:        6 bytes
  7753 ;; Hardware stack levels used: 1
  7754 ;; Hardware stack levels required when called: 4
  7755 ;; This function calls:
  7756 ;;		_stop
  7757 ;;		_turnLeft
  7758 ;; This function is called by:
  7759 ;;		_GreenMove
  7760 ;;		_PinkMove
  7761 ;;		_LightBlueMove
  7762 ;;		_ReversePink
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text52
  7767   0046C4                     __ptext52:
  7768                           	callstack 0
  7769   0046C4                     _turnLeft45:
  7770                           	callstack 24
  7771   0046C4                     
  7772                           ;dc_motor.c: 209:     turnLeft(mL,mR);
  7773   0046C4  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7774   0046C8  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7775   0046CC  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7776   0046D0  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7777   0046D4  EC23  F020         	call	_turnLeft	;wreg free
  7778   0046D8                     
  7779                           ;dc_motor.c: 210:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7780   0046D8  0E12               	movlw	18
  7781   0046DA  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7782   0046DC  0EDC               	movlw	220
  7783   0046DE  6E1E               	movwf	??_turnLeft45^0,c
  7784   0046E0  0E60               	movlw	96
  7785   0046E2                     u4907:
  7786   0046E2  2EE8               	decfsz	wreg,f,c
  7787   0046E4  D7FE               	bra	u4907
  7788   0046E6  2E1E               	decfsz	??_turnLeft45^0,f,c
  7789   0046E8  D7FC               	bra	u4907
  7790   0046EA  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7791   0046EC  D7FA               	bra	u4907
  7792   0046EE                     
  7793                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7794   0046EE  0EF5               	movlw	low _motorL
  7795   0046F0  6E14               	movwf	stop@mL^0,c
  7796   0046F2  0E00               	movlw	high _motorL
  7797   0046F4  6E15               	movwf	(stop@mL+1)^0,c
  7798   0046F6  0EBC               	movlw	low _motorR
  7799   0046F8  6E16               	movwf	stop@mR^0,c
  7800   0046FA  0E01               	movlw	high _motorR
  7801   0046FC  6E17               	movwf	(stop@mR+1)^0,c
  7802   0046FE  EC05  F021         	call	_stop	;wreg free
  7803                           
  7804                           ;dc_motor.c: 212:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7805   004702  0E05               	movlw	5
  7806   004704  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7807   004706  0E0F               	movlw	15
  7808   004708  6E1E               	movwf	??_turnLeft45^0,c
  7809   00470A  0EF1               	movlw	241
  7810   00470C                     u4917:
  7811   00470C  2EE8               	decfsz	wreg,f,c
  7812   00470E  D7FE               	bra	u4917
  7813   004710  2E1E               	decfsz	??_turnLeft45^0,f,c
  7814   004712  D7FC               	bra	u4917
  7815   004714  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7816   004716  D7FA               	bra	u4917
  7817   004718  F000               	nop	
  7818   00471A  0012               	return		;funcret
  7819   00471C                     __end_of_turnLeft45:
  7820                           	callstack 0
  7821                           
  7822 ;; *************** function _turnLeft *****************
  7823 ;; Defined at:
  7824 ;;		line 110 in file "dc_motor.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7827 ;;		 -> motorL(9), 
  7828 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7829 ;;		 -> motorR(9), 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:        6 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 3
  7848 ;; This function calls:
  7849 ;;		_setMotorPWM
  7850 ;; This function is called by:
  7851 ;;		_turnLeft45
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text53
  7856   004046                     __ptext53:
  7857                           	callstack 0
  7858   004046                     _turnLeft:
  7859                           	callstack 24
  7860   004046                     
  7861                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7862   004046  EE20 F001          	lfsr	2,1
  7863   00404A  5014               	movf	turnLeft@mL^0,w,c
  7864   00404C  26D9               	addwf	fsr2l,f,c
  7865   00404E  5015               	movf	(turnLeft@mL+1)^0,w,c
  7866   004050  22DA               	addwfc	fsr2h,f,c
  7867   004052  0E00               	movlw	0
  7868   004054  6EDF               	movwf	indf2,c
  7869                           
  7870                           ;dc_motor.c: 113:     mR->direction =1;
  7871   004056  EE20 F001          	lfsr	2,1
  7872   00405A  5016               	movf	turnLeft@mR^0,w,c
  7873   00405C  26D9               	addwf	fsr2l,f,c
  7874   00405E  5017               	movf	(turnLeft@mR+1)^0,w,c
  7875   004060  22DA               	addwfc	fsr2h,f,c
  7876   004062  0E01               	movlw	1
  7877   004064  6EDF               	movwf	indf2,c
  7878                           
  7879                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7880   004066  EF59  F020         	goto	l3404
  7881   00406A                     l3396:
  7882                           
  7883                           ;dc_motor.c: 117:         mL->power+=10;
  7884   00406A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7885   00406E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7886   004072  0E0A               	movlw	10
  7887   004074  26DF               	addwf	indf2,f,c
  7888                           
  7889                           ;dc_motor.c: 118:         mR->power+=10;
  7890   004076  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7891   00407A  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7892   00407E  0E0A               	movlw	10
  7893   004080  26DF               	addwf	indf2,f,c
  7894   004082                     
  7895                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7896   004082  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7897   004086  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7898   00408A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7899   00408E                     
  7900                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7901   00408E  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7902   004092  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7903   004096  EC2E  F01B         	call	_setMotorPWM	;wreg free
  7904   00409A                     
  7905                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7906   00409A  0E02               	movlw	2
  7907   00409C  6E19               	movwf	(??_turnLeft+1)^0,c
  7908   00409E  0EA0               	movlw	160
  7909   0040A0  6E18               	movwf	??_turnLeft^0,c
  7910   0040A2  0E92               	movlw	146
  7911   0040A4                     u4927:
  7912   0040A4  2EE8               	decfsz	wreg,f,c
  7913   0040A6  D7FE               	bra	u4927
  7914   0040A8  2E18               	decfsz	??_turnLeft^0,f,c
  7915   0040AA  D7FC               	bra	u4927
  7916   0040AC  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7917   0040AE  D7FA               	bra	u4927
  7918   0040B0  D000               	nop2	
  7919   0040B2                     l3404:
  7920   0040B2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7921   0040B6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7922   0040BA  0E1E               	movlw	30
  7923   0040BC  60DF               	cpfslt	indf2,c
  7924   0040BE  EF63  F020         	goto	u2701
  7925   0040C2  EF65  F020         	goto	u2700
  7926   0040C6                     u2701:
  7927   0040C6  EF71  F020         	goto	l500
  7928   0040CA                     u2700:
  7929   0040CA  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7930   0040CE  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7931   0040D2  0E1D               	movlw	29
  7932   0040D4  64DF               	cpfsgt	indf2,c
  7933   0040D6  EF6F  F020         	goto	u2711
  7934   0040DA  EF71  F020         	goto	u2710
  7935   0040DE                     u2711:
  7936   0040DE  EF35  F020         	goto	l3396
  7937   0040E2                     u2710:
  7938   0040E2                     l500:
  7939   0040E2  0012               	return		;funcret
  7940   0040E4                     __end_of_turnLeft:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _reverseOneBlock *****************
  7944 ;; Defined at:
  7945 ;;		line 222 in file "dc_motor.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7948 ;;		 -> motorL(9), 
  7949 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7950 ;;		 -> motorR(9), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7966 ;;Total ram usage:        6 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 4
  7969 ;; This function calls:
  7970 ;;		_fullSpeedBack
  7971 ;;		_stop
  7972 ;; This function is called by:
  7973 ;;		_YellowMove
  7974 ;;		_PinkMove
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text54
  7979   0045B8                     __ptext54:
  7980                           	callstack 0
  7981   0045B8                     _reverseOneBlock:
  7982                           	callstack 25
  7983   0045B8                     
  7984                           ;dc_motor.c: 223:     fullSpeedBack(mL,mR);
  7985   0045B8  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7986   0045BC  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7987   0045C0  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7988   0045C4  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7989   0045C8  EC72  F020         	call	_fullSpeedBack	;wreg free
  7990   0045CC                     
  7991                           ;dc_motor.c: 224:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7992   0045CC  0EA3               	movlw	163
  7993   0045CE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7994   0045D0  0E57               	movlw	87
  7995   0045D2  6E1E               	movwf	??_reverseOneBlock^0,c
  7996   0045D4  0E02               	movlw	2
  7997   0045D6                     u4937:
  7998   0045D6  2EE8               	decfsz	wreg,f,c
  7999   0045D8  D7FE               	bra	u4937
  8000   0045DA  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8001   0045DC  D7FC               	bra	u4937
  8002   0045DE  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8003   0045E0  D7FA               	bra	u4937
  8004   0045E2  D000               	nop2	
  8005   0045E4                     
  8006                           ;dc_motor.c: 225:     stop(&motorL, &motorR);
  8007   0045E4  0EF5               	movlw	low _motorL
  8008   0045E6  6E14               	movwf	stop@mL^0,c
  8009   0045E8  0E00               	movlw	high _motorL
  8010   0045EA  6E15               	movwf	(stop@mL+1)^0,c
  8011   0045EC  0EBC               	movlw	low _motorR
  8012   0045EE  6E16               	movwf	stop@mR^0,c
  8013   0045F0  0E01               	movlw	high _motorR
  8014   0045F2  6E17               	movwf	(stop@mR+1)^0,c
  8015   0045F4  EC05  F021         	call	_stop	;wreg free
  8016                           
  8017                           ;dc_motor.c: 226:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8018   0045F8  0E05               	movlw	5
  8019   0045FA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  8020   0045FC  0E0F               	movlw	15
  8021   0045FE  6E1E               	movwf	??_reverseOneBlock^0,c
  8022   004600  0EF1               	movlw	241
  8023   004602                     u4947:
  8024   004602  2EE8               	decfsz	wreg,f,c
  8025   004604  D7FE               	bra	u4947
  8026   004606  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8027   004608  D7FC               	bra	u4947
  8028   00460A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8029   00460C  D7FA               	bra	u4947
  8030   00460E  F000               	nop	
  8031   004610  0012               	return		;funcret
  8032   004612                     __end_of_reverseOneBlock:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _reverseDetect *****************
  8036 ;; Defined at:
  8037 ;;		line 215 in file "dc_motor.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8040 ;;		 -> motorL(9), 
  8041 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8042 ;;		 -> motorR(9), 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 4
  8061 ;; This function calls:
  8062 ;;		_fullSpeedBack
  8063 ;;		_stop
  8064 ;; This function is called by:
  8065 ;;		_RedMove
  8066 ;;		_GreenMove
  8067 ;;		_BlueMove
  8068 ;;		_YellowMove
  8069 ;;		_PinkMove
  8070 ;;		_OrangeMove
  8071 ;;		_LightBlueMove
  8072 ;;		_ReverseYellow
  8073 ;;		_ReversePink
  8074 ;;		_go_Home
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text55
  8079   004612                     __ptext55:
  8080                           	callstack 0
  8081   004612                     _reverseDetect:
  8082                           	callstack 25
  8083   004612                     
  8084                           ;dc_motor.c: 216:     fullSpeedBack(mL,mR);
  8085   004612  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  8086   004616  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  8087   00461A  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  8088   00461E  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  8089   004622  EC72  F020         	call	_fullSpeedBack	;wreg free
  8090   004626                     
  8091                           ;dc_motor.c: 217:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8092   004626  0E11               	movlw	17
  8093   004628  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8094   00462A  0E3C               	movlw	60
  8095   00462C  6E1E               	movwf	??_reverseDetect^0,c
  8096   00462E  0ECB               	movlw	203
  8097   004630                     u4957:
  8098   004630  2EE8               	decfsz	wreg,f,c
  8099   004632  D7FE               	bra	u4957
  8100   004634  2E1E               	decfsz	??_reverseDetect^0,f,c
  8101   004636  D7FC               	bra	u4957
  8102   004638  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8103   00463A  D7FA               	bra	u4957
  8104   00463C  F000               	nop	
  8105   00463E                     
  8106                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8107   00463E  0EF5               	movlw	low _motorL
  8108   004640  6E14               	movwf	stop@mL^0,c
  8109   004642  0E00               	movlw	high _motorL
  8110   004644  6E15               	movwf	(stop@mL+1)^0,c
  8111   004646  0EBC               	movlw	low _motorR
  8112   004648  6E16               	movwf	stop@mR^0,c
  8113   00464A  0E01               	movlw	high _motorR
  8114   00464C  6E17               	movwf	(stop@mR+1)^0,c
  8115   00464E  EC05  F021         	call	_stop	;wreg free
  8116                           
  8117                           ;dc_motor.c: 219:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8118   004652  0E05               	movlw	5
  8119   004654  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8120   004656  0E0F               	movlw	15
  8121   004658  6E1E               	movwf	??_reverseDetect^0,c
  8122   00465A  0EF1               	movlw	241
  8123   00465C                     u4967:
  8124   00465C  2EE8               	decfsz	wreg,f,c
  8125   00465E  D7FE               	bra	u4967
  8126   004660  2E1E               	decfsz	??_reverseDetect^0,f,c
  8127   004662  D7FC               	bra	u4967
  8128   004664  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8129   004666  D7FA               	bra	u4967
  8130   004668  F000               	nop	
  8131   00466A  0012               	return		;funcret
  8132   00466C                     __end_of_reverseDetect:
  8133                           	callstack 0
  8134                           
  8135 ;; *************** function _stop *****************
  8136 ;; Defined at:
  8137 ;;		line 92 in file "dc_motor.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8140 ;;		 -> motorL(9), 
  8141 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8142 ;;		 -> motorR(9), 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;Total ram usage:        6 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 3
  8161 ;; This function calls:
  8162 ;;		_setMotorPWM
  8163 ;; This function is called by:
  8164 ;;		_main
  8165 ;;		_turnRight45
  8166 ;;		_turnLeft45
  8167 ;;		_reverseDetect
  8168 ;;		_reverseOneBlock
  8169 ;;		_ForwardOneBlock
  8170 ;;		_Forwardhalfblock
  8171 ;;		_Backhalfblock
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text56
  8176   00420A                     __ptext56:
  8177                           	callstack 0
  8178   00420A                     _stop:
  8179                           	callstack 27
  8180   00420A                     
  8181                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  8182   00420A  EF2B  F021         	goto	l3390
  8183   00420E                     l3382:
  8184                           
  8185                           ;dc_motor.c: 96:         mL->power-=10;
  8186   00420E  C014  FFD9         	movff	stop@mL,fsr2l
  8187   004212  C015  FFDA         	movff	stop@mL+1,fsr2h
  8188   004216  0E0A               	movlw	10
  8189   004218  5EDF               	subwf	indf2,f,c
  8190                           
  8191                           ;dc_motor.c: 97:         mR->power-=10;
  8192   00421A  C016  FFD9         	movff	stop@mR,fsr2l
  8193   00421E  C017  FFDA         	movff	stop@mR+1,fsr2h
  8194   004222  0E0A               	movlw	10
  8195   004224  5EDF               	subwf	indf2,f,c
  8196   004226                     
  8197                           ;dc_motor.c: 102:         setMotorPWM(mL);
  8198   004226  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8199   00422A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8200   00422E  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8201   004232                     
  8202                           ;dc_motor.c: 103:         setMotorPWM(mR);
  8203   004232  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8204   004236  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8205   00423A  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8206   00423E                     
  8207                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8208   00423E  0E02               	movlw	2
  8209   004240  6E19               	movwf	(??_stop+1)^0,c
  8210   004242  0EA0               	movlw	160
  8211   004244  6E18               	movwf	??_stop^0,c
  8212   004246  0E92               	movlw	146
  8213   004248                     u4977:
  8214   004248  2EE8               	decfsz	wreg,f,c
  8215   00424A  D7FE               	bra	u4977
  8216   00424C  2E18               	decfsz	??_stop^0,f,c
  8217   00424E  D7FC               	bra	u4977
  8218   004250  2E19               	decfsz	(??_stop+1)^0,f,c
  8219   004252  D7FA               	bra	u4977
  8220   004254  D000               	nop2	
  8221   004256                     l3390:
  8222                           
  8223                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  8224   004256  C014  FFD9         	movff	stop@mL,fsr2l
  8225   00425A  C015  FFDA         	movff	stop@mL+1,fsr2h
  8226   00425E  50DF               	movf	indf2,w,c
  8227   004260  A4D8               	btfss	status,2,c
  8228   004262  EF35  F021         	goto	u2681
  8229   004266  EF37  F021         	goto	u2680
  8230   00426A                     u2681:
  8231   00426A  EF07  F021         	goto	l3382
  8232   00426E                     u2680:
  8233   00426E  C016  FFD9         	movff	stop@mR,fsr2l
  8234   004272  C017  FFDA         	movff	stop@mR+1,fsr2h
  8235   004276  50DF               	movf	indf2,w,c
  8236   004278  A4D8               	btfss	status,2,c
  8237   00427A  EF41  F021         	goto	u2691
  8238   00427E  EF43  F021         	goto	u2690
  8239   004282                     u2691:
  8240   004282  EF07  F021         	goto	l3382
  8241   004286                     u2690:
  8242   004286  0012               	return		;funcret
  8243   004288                     __end_of_stop:
  8244                           	callstack 0
  8245                           
  8246 ;; *************** function _fullSpeedBack *****************
  8247 ;; Defined at:
  8248 ;;		line 184 in file "dc_motor.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8251 ;;		 -> motorL(9), 
  8252 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8253 ;;		 -> motorR(9), 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;Total ram usage:        6 bytes
  8270 ;; Hardware stack levels used: 1
  8271 ;; Hardware stack levels required when called: 3
  8272 ;; This function calls:
  8273 ;;		_setMotorPWM
  8274 ;; This function is called by:
  8275 ;;		_reverseDetect
  8276 ;;		_reverseOneBlock
  8277 ;;		_Backhalfblock
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text57
  8282   0040E4                     __ptext57:
  8283                           	callstack 0
  8284   0040E4                     _fullSpeedBack:
  8285                           	callstack 25
  8286   0040E4                     
  8287                           ;dc_motor.c: 184: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: {;dc_motor.c: 187:     mL->direction =0;
  8288   0040E4  EE20 F001          	lfsr	2,1
  8289   0040E8  5014               	movf	fullSpeedBack@mL^0,w,c
  8290   0040EA  26D9               	addwf	fsr2l,f,c
  8291   0040EC  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  8292   0040EE  22DA               	addwfc	fsr2h,f,c
  8293   0040F0  0E00               	movlw	0
  8294   0040F2  6EDF               	movwf	indf2,c
  8295                           
  8296                           ;dc_motor.c: 188:     mR->direction =0;
  8297   0040F4  EE20 F001          	lfsr	2,1
  8298   0040F8  5016               	movf	fullSpeedBack@mR^0,w,c
  8299   0040FA  26D9               	addwf	fsr2l,f,c
  8300   0040FC  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  8301   0040FE  22DA               	addwfc	fsr2h,f,c
  8302   004100  0E00               	movlw	0
  8303   004102  6EDF               	movwf	indf2,c
  8304                           
  8305                           ;dc_motor.c: 189:     while (mL->power < power && mR->power < power){
  8306   004104  EFA8  F020         	goto	l3432
  8307   004108                     l3424:
  8308                           
  8309                           ;dc_motor.c: 191:         mL->power+=10;
  8310   004108  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8311   00410C  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8312   004110  0E0A               	movlw	10
  8313   004112  26DF               	addwf	indf2,f,c
  8314                           
  8315                           ;dc_motor.c: 192:         mR->power+=10;
  8316   004114  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8317   004118  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8318   00411C  0E0A               	movlw	10
  8319   00411E  26DF               	addwf	indf2,f,c
  8320   004120                     
  8321                           ;dc_motor.c: 194:         setMotorPWM(mL);
  8322   004120  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  8323   004124  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  8324   004128  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8325   00412C                     
  8326                           ;dc_motor.c: 195:         setMotorPWM(mR);
  8327   00412C  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  8328   004130  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  8329   004134  EC2E  F01B         	call	_setMotorPWM	;wreg free
  8330   004138                     
  8331                           ;dc_motor.c: 197:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8332   004138  0E02               	movlw	2
  8333   00413A  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  8334   00413C  0EA0               	movlw	160
  8335   00413E  6E18               	movwf	??_fullSpeedBack^0,c
  8336   004140  0E92               	movlw	146
  8337   004142                     u4987:
  8338   004142  2EE8               	decfsz	wreg,f,c
  8339   004144  D7FE               	bra	u4987
  8340   004146  2E18               	decfsz	??_fullSpeedBack^0,f,c
  8341   004148  D7FC               	bra	u4987
  8342   00414A  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  8343   00414C  D7FA               	bra	u4987
  8344   00414E  D000               	nop2	
  8345   004150                     l3432:
  8346   004150  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8347   004154  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8348   004158  0E1E               	movlw	30
  8349   00415A  60DF               	cpfslt	indf2,c
  8350   00415C  EFB2  F020         	goto	u2741
  8351   004160  EFB4  F020         	goto	u2740
  8352   004164                     u2741:
  8353   004164  EFC0  F020         	goto	l532
  8354   004168                     u2740:
  8355   004168  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8356   00416C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8357   004170  0E1D               	movlw	29
  8358   004172  64DF               	cpfsgt	indf2,c
  8359   004174  EFBE  F020         	goto	u2751
  8360   004178  EFC0  F020         	goto	u2750
  8361   00417C                     u2751:
  8362   00417C  EF84  F020         	goto	l3424
  8363   004180                     u2750:
  8364   004180                     l532:
  8365   004180  0012               	return		;funcret
  8366   004182                     __end_of_fullSpeedBack:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _setMotorPWM *****************
  8370 ;; Defined at:
  8371 ;;		line 67 in file "dc_motor.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8374 ;;		 -> motorR(9), motorL(9), 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  negDuty         1   18[COMRAM] unsigned char 
  8377 ;;  posDuty         1   17[COMRAM] unsigned char 
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;Total ram usage:        6 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 2
  8394 ;; This function calls:
  8395 ;;		___lwdiv
  8396 ;;		___wmul
  8397 ;; This function is called by:
  8398 ;;		_stop
  8399 ;;		_turnLeft
  8400 ;;		_turnRight
  8401 ;;		_fullSpeedAhead
  8402 ;;		_timed_forward
  8403 ;;		_fullSpeedBack
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text58
  8408   00365C                     __ptext58:
  8409                           	callstack 0
  8410   00365C                     _setMotorPWM:
  8411                           	callstack 27
  8412   00365C                     
  8413                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  8414   00365C  EE20 F002          	lfsr	2,2
  8415   003660  500E               	movf	setMotorPWM@m^0,w,c
  8416   003662  26D9               	addwf	fsr2l,f,c
  8417   003664  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8418   003666  22DA               	addwfc	fsr2h,f,c
  8419   003668  50DF               	movf	indf2,w,c
  8420   00366A  B4D8               	btfsc	status,2,c
  8421   00366C  EF3A  F01B         	goto	u2461
  8422   003670  EF3C  F01B         	goto	u2460
  8423   003674                     u2461:
  8424   003674  EF70  F01B         	goto	l3254
  8425   003678                     u2460:
  8426   003678                     
  8427                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8428   003678  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8429   00367C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8430   003680  50DF               	movf	indf2,w,c
  8431   003682  6E10               	movwf	??_setMotorPWM^0,c
  8432   003684  5010               	movf	??_setMotorPWM^0,w,c
  8433   003686  6E01               	movwf	___wmul@multiplier^0,c
  8434   003688  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8435   00368A  EE20 F003          	lfsr	2,3
  8436   00368E  500E               	movf	setMotorPWM@m^0,w,c
  8437   003690  26D9               	addwf	fsr2l,f,c
  8438   003692  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8439   003694  22DA               	addwfc	fsr2h,f,c
  8440   003696  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8441   00369A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8442   00369E  EC94  F026         	call	___wmul	;wreg free
  8443   0036A2  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8444   0036A6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8445   0036AA  0E00               	movlw	0
  8446   0036AC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8447   0036AE  0E64               	movlw	100
  8448   0036B0  6E09               	movwf	___lwdiv@divisor^0,c
  8449   0036B2  EC81  F021         	call	___lwdiv	;wreg free
  8450   0036B6  EE20 F003          	lfsr	2,3
  8451   0036BA  500E               	movf	setMotorPWM@m^0,w,c
  8452   0036BC  26D9               	addwf	fsr2l,f,c
  8453   0036BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8454   0036C0  22DA               	addwfc	fsr2h,f,c
  8455   0036C2  50DF               	movf	indf2,w,c
  8456   0036C4  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8457   0036C6  5007               	movf	?___lwdiv^0,w,c
  8458   0036C8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8459   0036CA  6E12               	movwf	setMotorPWM@posDuty^0,c
  8460   0036CC                     
  8461                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  8462   0036CC  EE20 F003          	lfsr	2,3
  8463   0036D0  500E               	movf	setMotorPWM@m^0,w,c
  8464   0036D2  26D9               	addwf	fsr2l,f,c
  8465   0036D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8466   0036D6  22DA               	addwfc	fsr2h,f,c
  8467   0036D8  50DF               	movf	indf2,w,c
  8468   0036DA  6E13               	movwf	setMotorPWM@negDuty^0,c
  8469                           
  8470                           ;dc_motor.c: 74:     }
  8471   0036DC  EF93  F01B         	goto	l3258
  8472   0036E0                     l3254:
  8473                           
  8474                           ;dc_motor.c: 76:         posDuty=0;
  8475   0036E0  0E00               	movlw	0
  8476   0036E2  6E12               	movwf	setMotorPWM@posDuty^0,c
  8477   0036E4                     
  8478                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8479   0036E4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8480   0036E8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8481   0036EC  50DF               	movf	indf2,w,c
  8482   0036EE  6E10               	movwf	??_setMotorPWM^0,c
  8483   0036F0  5010               	movf	??_setMotorPWM^0,w,c
  8484   0036F2  6E01               	movwf	___wmul@multiplier^0,c
  8485   0036F4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8486   0036F6  EE20 F003          	lfsr	2,3
  8487   0036FA  500E               	movf	setMotorPWM@m^0,w,c
  8488   0036FC  26D9               	addwf	fsr2l,f,c
  8489   0036FE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8490   003700  22DA               	addwfc	fsr2h,f,c
  8491   003702  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8492   003706  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8493   00370A  EC94  F026         	call	___wmul	;wreg free
  8494   00370E  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8495   003712  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8496   003716  0E00               	movlw	0
  8497   003718  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8498   00371A  0E64               	movlw	100
  8499   00371C  6E09               	movwf	___lwdiv@divisor^0,c
  8500   00371E  EC81  F021         	call	___lwdiv	;wreg free
  8501   003722  5007               	movf	?___lwdiv^0,w,c
  8502   003724  6E13               	movwf	setMotorPWM@negDuty^0,c
  8503   003726                     l3258:
  8504                           
  8505                           ;dc_motor.c: 80:     if (m->direction) {
  8506   003726  EE20 F001          	lfsr	2,1
  8507   00372A  500E               	movf	setMotorPWM@m^0,w,c
  8508   00372C  26D9               	addwf	fsr2l,f,c
  8509   00372E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8510   003730  22DA               	addwfc	fsr2h,f,c
  8511   003732  50DF               	movf	indf2,w,c
  8512   003734  B4D8               	btfsc	status,2,c
  8513   003736  EF9F  F01B         	goto	u2471
  8514   00373A  EFA1  F01B         	goto	u2470
  8515   00373E                     u2471:
  8516   00373E  EFC3  F01B         	goto	l3262
  8517   003742                     u2470:
  8518   003742                     
  8519                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8520   003742  EE20 F005          	lfsr	2,5
  8521   003746  500E               	movf	setMotorPWM@m^0,w,c
  8522   003748  26D9               	addwf	fsr2l,f,c
  8523   00374A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8524   00374C  22DA               	addwfc	fsr2h,f,c
  8525   00374E  CFDE F010          	movff	postinc2,??_setMotorPWM
  8526   003752  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8527   003756  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8528   00375A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8529   00375E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8530                           
  8531                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8532   003762  EE20 F007          	lfsr	2,7
  8533   003766  500E               	movf	setMotorPWM@m^0,w,c
  8534   003768  26D9               	addwf	fsr2l,f,c
  8535   00376A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8536   00376C  22DA               	addwfc	fsr2h,f,c
  8537   00376E  CFDE F010          	movff	postinc2,??_setMotorPWM
  8538   003772  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8539   003776  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8540   00377A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8541   00377E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8542                           
  8543                           ;dc_motor.c: 85:     } else {
  8544   003782  EFE3  F01B         	goto	l486
  8545   003786                     l3262:
  8546                           
  8547                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8548   003786  EE20 F005          	lfsr	2,5
  8549   00378A  500E               	movf	setMotorPWM@m^0,w,c
  8550   00378C  26D9               	addwf	fsr2l,f,c
  8551   00378E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8552   003790  22DA               	addwfc	fsr2h,f,c
  8553   003792  CFDE F010          	movff	postinc2,??_setMotorPWM
  8554   003796  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8555   00379A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8556   00379E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8557   0037A2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8558                           
  8559                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8560   0037A6  EE20 F007          	lfsr	2,7
  8561   0037AA  500E               	movf	setMotorPWM@m^0,w,c
  8562   0037AC  26D9               	addwf	fsr2l,f,c
  8563   0037AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8564   0037B0  22DA               	addwfc	fsr2h,f,c
  8565   0037B2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8566   0037B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8567   0037BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8568   0037BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8569   0037C2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8570   0037C6                     l486:
  8571   0037C6  0012               	return		;funcret
  8572   0037C8                     __end_of_setMotorPWM:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function ___wmul *****************
  8576 ;; Defined at:
  8577 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  multiplier      2    0[COMRAM] unsigned int 
  8580 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  product         2    4[COMRAM] unsigned int 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  2    0[COMRAM] unsigned int 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, prodl, prodh
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:        6 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_setMotorPWM
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text59
  8607   004D28                     __ptext59:
  8608                           	callstack 0
  8609   004D28                     ___wmul:
  8610                           	callstack 27
  8611   004D28  5001               	movf	___wmul@multiplier^0,w,c
  8612   004D2A  0203               	mulwf	___wmul@multiplicand^0,c
  8613   004D2C  CFF3 F005          	movff	prodl,___wmul@product
  8614   004D30  CFF4 F006          	movff	prodh,___wmul@product+1
  8615   004D34  5001               	movf	___wmul@multiplier^0,w,c
  8616   004D36  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8617   004D38  50F3               	movf	243,w,c
  8618   004D3A  2606               	addwf	(___wmul@product+1)^0,f,c
  8619   004D3C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8620   004D3E  0203               	mulwf	___wmul@multiplicand^0,c
  8621   004D40  50F3               	movf	243,w,c
  8622   004D42  2606               	addwf	(___wmul@product+1)^0,f,c
  8623   004D44  C005  F001         	movff	___wmul@product,?___wmul
  8624   004D48  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8625   004D4C  0012               	return		;funcret
  8626   004D4E                     __end_of___wmul:
  8627                           	callstack 0
  8628                           
  8629 ;; *************** function ___lwdiv *****************
  8630 ;; Defined at:
  8631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;  dividend        2    6[COMRAM] unsigned int 
  8634 ;;  divisor         2    8[COMRAM] unsigned int 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  quotient        2   10[COMRAM] unsigned int 
  8637 ;;  counter         1   12[COMRAM] unsigned char 
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  2    6[COMRAM] unsigned int 
  8640 ;; Registers used:
  8641 ;;		wreg, status,2, status,0
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;Total ram usage:        7 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; Hardware stack levels required when called: 1
  8654 ;; This function calls:
  8655 ;;		Nothing
  8656 ;; This function is called by:
  8657 ;;		_setMotorPWM
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text60
  8662   004302                     __ptext60:
  8663                           	callstack 0
  8664   004302                     ___lwdiv:
  8665                           	callstack 27
  8666   004302  0E00               	movlw	0
  8667   004304  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8668   004306  0E00               	movlw	0
  8669   004308  6E0B               	movwf	___lwdiv@quotient^0,c
  8670   00430A  5009               	movf	___lwdiv@divisor^0,w,c
  8671   00430C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8672   00430E  B4D8               	btfsc	status,2,c
  8673   004310  EF8C  F021         	goto	u2421
  8674   004314  EF8E  F021         	goto	u2420
  8675   004318                     u2421:
  8676   004318  EFB6  F021         	goto	l1159
  8677   00431C                     u2420:
  8678   00431C  0E01               	movlw	1
  8679   00431E  6E0D               	movwf	___lwdiv@counter^0,c
  8680   004320  EF96  F021         	goto	l3226
  8681   004324                     l3224:
  8682   004324  90D8               	bcf	status,0,c
  8683   004326  3609               	rlcf	___lwdiv@divisor^0,f,c
  8684   004328  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8685   00432A  2A0D               	incf	___lwdiv@counter^0,f,c
  8686   00432C                     l3226:
  8687   00432C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8688   00432E  EF9B  F021         	goto	u2431
  8689   004332  EF9D  F021         	goto	u2430
  8690   004336                     u2431:
  8691   004336  EF92  F021         	goto	l3224
  8692   00433A                     u2430:
  8693   00433A                     l3228:
  8694   00433A  90D8               	bcf	status,0,c
  8695   00433C  360B               	rlcf	___lwdiv@quotient^0,f,c
  8696   00433E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8697   004340  5009               	movf	___lwdiv@divisor^0,w,c
  8698   004342  5C07               	subwf	___lwdiv@dividend^0,w,c
  8699   004344  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8700   004346  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8701   004348  A0D8               	btfss	status,0,c
  8702   00434A  EFA9  F021         	goto	u2441
  8703   00434E  EFAB  F021         	goto	u2440
  8704   004352                     u2441:
  8705   004352  EFB0  F021         	goto	l3236
  8706   004356                     u2440:
  8707   004356  5009               	movf	___lwdiv@divisor^0,w,c
  8708   004358  5E07               	subwf	___lwdiv@dividend^0,f,c
  8709   00435A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8710   00435C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8711   00435E  800B               	bsf	___lwdiv@quotient^0,0,c
  8712   004360                     l3236:
  8713   004360  90D8               	bcf	status,0,c
  8714   004362  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8715   004364  3209               	rrcf	___lwdiv@divisor^0,f,c
  8716   004366  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8717   004368  EF9D  F021         	goto	l3228
  8718   00436C                     l1159:
  8719   00436C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8720   004370  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8721   004374  0012               	return		;funcret
  8722   004376                     __end_of___lwdiv:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _Interrupts_init *****************
  8726 ;; Defined at:
  8727 ;;		line 8 in file "interrupts.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		None
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 1
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_main
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text61
  8756   004DC4                     __ptext61:
  8757                           	callstack 0
  8758   004DC4                     _Interrupts_init:
  8759                           	callstack 29
  8760   004DC4                     
  8761                           ;interrupts.c: 10:     INTCONbits.IPEN=0;
  8762   004DC4  9AF2               	bcf	242,5,c	;volatile
  8763                           
  8764                           ;interrupts.c: 11:     PIE2bits.C1IE=1;
  8765   004DC6  010E               	movlb	14	; () banked
  8766   004DC8  812B               	bsf	43,0,b	;volatile
  8767                           
  8768                           ;interrupts.c: 12:     INTCONbits.PEIE=1;
  8769   004DCA  8CF2               	bsf	242,6,c	;volatile
  8770                           
  8771                           ;interrupts.c: 13:     INTCONbits.GIE=1;
  8772   004DCC  8EF2               	bsf	242,7,c	;volatile
  8773                           
  8774                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
  8775   004DCE  8B29               	bsf	41,5,b	;volatile
  8776   004DD0                     
  8777                           ; BSR set to: 14
  8778   004DD0  0012               	return		;funcret
  8779   004DD2                     __end_of_Interrupts_init:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _Colour_decider *****************
  8783 ;; Defined at:
  8784 ;;		line 125 in file "color.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  vals            2   74[COMRAM] PTR struct RGB
  8787 ;;		 -> vals(8), 
  8788 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8789 ;;		 -> rel(12), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  RGB_col        12    6[BANK0 ] float [3]
  8792 ;;  Hue             4   28[BANK0 ] float 
  8793 ;;  Cmin            4   22[BANK0 ] float 
  8794 ;;  Cmax            4   18[BANK0 ] float 
  8795 ;;  i               2   26[BANK0 ] int 
  8796 ;;  Cmax_i          2    4[BANK0 ] int 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  2   74[COMRAM] int 
  8799 ;; Registers used:
  8800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:       38 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 3
  8813 ;; This function calls:
  8814 ;;		___fladd
  8815 ;;		___fldiv
  8816 ;;		___fleq
  8817 ;;		___flge
  8818 ;;		___flmul
  8819 ;;		___flsub
  8820 ;;		___xxtofl
  8821 ;; This function is called by:
  8822 ;;		_main
  8823 ;; This function uses a non-reentrant model
  8824 ;;
  8825                           
  8826                           	psect	text62
  8827   000E26                     __ptext62:
  8828                           	callstack 0
  8829   000E26                     _Colour_decider:
  8830                           	callstack 27
  8831   000E26                     
  8832                           ;color.c: 126:     float Cmax = 0;
  8833   000E26  0E00               	movlw	0
  8834   000E28  0100               	movlb	0	; () banked
  8835   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8836   000E2C  0E00               	movlw	0
  8837   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8838   000E30  0E00               	movlw	0
  8839   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8840   000E34  0E00               	movlw	0
  8841   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8842                           
  8843                           ;color.c: 127:     float Cmin= 100000;
  8844   000E38  0E00               	movlw	0
  8845   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8846   000E3C  0E50               	movlw	80
  8847   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8848   000E40  0EC3               	movlw	195
  8849   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8850   000E44  0E47               	movlw	71
  8851   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8852                           
  8853                           ;color.c: 128:     int Cmax_i =4;
  8854   000E48  0E00               	movlw	0
  8855   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8856   000E4C  0E04               	movlw	4
  8857   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8858   000E50                     
  8859                           ; BSR set to: 0
  8860                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8861   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8862   000E54  0E0B               	movlw	11
  8863   000E56                     u3951:
  8864   000E56  6ADE               	clrf	postinc2,c
  8865   000E58  06E8               	decf	wreg,f,c
  8866   000E5A  E2FD               	bc	u3951
  8867   000E5C                     
  8868                           ; BSR set to: 0
  8869   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8870   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8871   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8872   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8873   000E6C  0E00               	movlw	0
  8874   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8875   000E70  0EFF               	movlw	-1
  8876   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8877   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8878   000E76  0E01               	movlw	1
  8879   000E78  EC90  F019         	call	___xxtofl
  8880   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8881   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8882   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8883   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8884   000E8C  EE20 F002          	lfsr	2,2
  8885   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8886   000E92  26D9               	addwf	fsr2l,f,c
  8887   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8888   000E96  22DA               	addwfc	fsr2h,f,c
  8889   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8890   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8891   000EA0  0E00               	movlw	0
  8892   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8893   000EA4  0EFF               	movlw	-1
  8894   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8895   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8896   000EAA  0E01               	movlw	1
  8897   000EAC  EC90  F019         	call	___xxtofl
  8898   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8899   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8900   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8901   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8902   000EC0  EE20 F004          	lfsr	2,4
  8903   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8904   000EC6  26D9               	addwf	fsr2l,f,c
  8905   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8906   000ECA  22DA               	addwfc	fsr2h,f,c
  8907   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8908   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8909   000ED4  0E00               	movlw	0
  8910   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8911   000ED8  0EFF               	movlw	-1
  8912   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8913   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8914   000EDE  0E01               	movlw	1
  8915   000EE0  EC90  F019         	call	___xxtofl
  8916   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8917   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8918   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8919   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8920   000EF4                     
  8921                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8922   000EF4  0E00               	movlw	0
  8923   000EF6  0100               	movlb	0	; () banked
  8924   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8925   000EFA  0E00               	movlw	0
  8926   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8927   000EFE                     l4302:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8931   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8932   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8933   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8934   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8935   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8936   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8937   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8938   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8939   000F16  90D8               	bcf	status,0,c
  8940   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8941   000F1A  6ED9               	movwf	fsr2l,c
  8942   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8943   000F1E  6EDA               	movwf	fsr2h,c
  8944   000F20  90D8               	bcf	status,0,c
  8945   000F22  36D9               	rlcf	fsr2l,f,c
  8946   000F24  36DA               	rlcf	fsr2h,f,c
  8947   000F26  504F               	movf	??_Colour_decider^0,w,c
  8948   000F28  26D9               	addwf	fsr2l,f,c
  8949   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8950   000F2C  22DA               	addwfc	fsr2h,f,c
  8951   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8952   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8953   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8954   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8955   000F3E  EC3E  F01D         	call	___flge	;wreg free
  8956   000F42  B0D8               	btfsc	status,0,c
  8957   000F44  EFA6  F007         	goto	u3961
  8958   000F48  EFA8  F007         	goto	u3960
  8959   000F4C                     u3961:
  8960   000F4C  EFC5  F007         	goto	l4308
  8961   000F50                     u3960:
  8962   000F50                     
  8963                           ;color.c: 137:             Cmax=RGB_col[i];
  8964   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8965   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8966   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8967   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8968   000F58  90D8               	bcf	status,0,c
  8969   000F5A  0100               	movlb	0	; () banked
  8970   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8971   000F5E  6ED9               	movwf	fsr2l,c
  8972   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8973   000F62  6EDA               	movwf	fsr2h,c
  8974   000F64  90D8               	bcf	status,0,c
  8975   000F66  36D9               	rlcf	fsr2l,f,c
  8976   000F68  36DA               	rlcf	fsr2h,f,c
  8977   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8978   000F6C  26D9               	addwf	fsr2l,f,c
  8979   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8980   000F70  22DA               	addwfc	fsr2h,f,c
  8981   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8982   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8983   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8984   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8985   000F82                     
  8986                           ; BSR set to: 0
  8987                           ;color.c: 138:             Cmax_i=i;
  8988   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8989   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8990   000F8A                     l4308:
  8991                           
  8992                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8993   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8994   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8995   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8996   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8997   000F92  90D8               	bcf	status,0,c
  8998   000F94  0100               	movlb	0	; () banked
  8999   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9000   000F98  6ED9               	movwf	fsr2l,c
  9001   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9002   000F9C  6EDA               	movwf	fsr2h,c
  9003   000F9E  90D8               	bcf	status,0,c
  9004   000FA0  36D9               	rlcf	fsr2l,f,c
  9005   000FA2  36DA               	rlcf	fsr2h,f,c
  9006   000FA4  504F               	movf	??_Colour_decider^0,w,c
  9007   000FA6  26D9               	addwf	fsr2l,f,c
  9008   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  9009   000FAA  22DA               	addwfc	fsr2h,f,c
  9010   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  9011   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9012   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9013   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9014   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  9015   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9016   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9017   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9018   000FCC  EC3E  F01D         	call	___flge	;wreg free
  9019   000FD0  B0D8               	btfsc	status,0,c
  9020   000FD2  EFED  F007         	goto	u3971
  9021   000FD6  EFEF  F007         	goto	u3970
  9022   000FDA                     u3971:
  9023   000FDA  EF08  F008         	goto	l4312
  9024   000FDE                     u3970:
  9025   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  9026   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  9027   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  9028   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9029   000FE6  90D8               	bcf	status,0,c
  9030   000FE8  0100               	movlb	0	; () banked
  9031   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9032   000FEC  6ED9               	movwf	fsr2l,c
  9033   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9034   000FF0  6EDA               	movwf	fsr2h,c
  9035   000FF2  90D8               	bcf	status,0,c
  9036   000FF4  36D9               	rlcf	fsr2l,f,c
  9037   000FF6  36DA               	rlcf	fsr2h,f,c
  9038   000FF8  504F               	movf	??_Colour_decider^0,w,c
  9039   000FFA  26D9               	addwf	fsr2l,f,c
  9040   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9041   000FFE  22DA               	addwfc	fsr2h,f,c
  9042   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9043   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9044   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9045   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9046   001010                     l4312:
  9047                           
  9048                           ;color.c: 141:     }
  9049   001010  0100               	movlb	0	; () banked
  9050   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9051   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9052   001016                     
  9053                           ; BSR set to: 0
  9054   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9055   001018  EF17  F008         	goto	u3981
  9056   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9057   00101E  E109               	bnz	u3980
  9058   001020  0E03               	movlw	3
  9059   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9060   001024  A0D8               	btfss	status,0,c
  9061   001026  EF17  F008         	goto	u3981
  9062   00102A  EF19  F008         	goto	u3980
  9063   00102E                     u3981:
  9064   00102E  EF7F  F007         	goto	l4302
  9065   001032                     u3980:
  9066   001032                     
  9067                           ; BSR set to: 0
  9068                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9069   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9070   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9071   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9072   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9073   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9074   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9075   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9076   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9077   001052  EC4B  F025         	call	___flsub	;wreg free
  9078   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  9079   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  9080   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  9081   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  9082   001066  0E00               	movlw	0
  9083   001068  6E1D               	movwf	___fleq@ff2^0,c
  9084   00106A  0E00               	movlw	0
  9085   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  9086   00106E  0E00               	movlw	0
  9087   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  9088   001072  0E00               	movlw	0
  9089   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  9090   001076  EC30  F01F         	call	___fleq	;wreg free
  9091   00107A  A0D8               	btfss	status,0,c
  9092   00107C  EF42  F008         	goto	u3991
  9093   001080  EF44  F008         	goto	u3990
  9094   001084                     u3991:
  9095   001084  EF4A  F008         	goto	l4322
  9096   001088                     u3990:
  9097   001088                     l4318:
  9098   001088  0E00               	movlw	0
  9099   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9100   00108C  0E00               	movlw	0
  9101   00108E  6E4B               	movwf	?_Colour_decider^0,c
  9102   001090  EF80  F00C         	goto	l76
  9103   001094                     l4322:
  9104                           
  9105                           ;color.c: 146:     if (Cmax_i==0){
  9106   001094  0100               	movlb	0	; () banked
  9107   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9108   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9109   00109A  A4D8               	btfss	status,2,c
  9110   00109C  EF52  F008         	goto	u4001
  9111   0010A0  EF54  F008         	goto	u4000
  9112   0010A4                     u4001:
  9113   0010A4  EFC8  F008         	goto	l4330
  9114   0010A8                     u4000:
  9115   0010A8                     
  9116                           ; BSR set to: 0
  9117                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9118   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9119   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9120   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9121   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9122   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9123   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9124   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9125   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9126   0010C8  EC4B  F025         	call	___flsub	;wreg free
  9127   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  9128   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9129   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9130   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9131   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  9132   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9133   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9134   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9135   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  9136   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9137   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9138   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9139   0010FC  EC4B  F025         	call	___flsub	;wreg free
  9140   001100  C011  F019         	movff	?___flsub,___fldiv@b
  9141   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9142   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9143   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9144   001110  EC97  F013         	call	___fldiv	;wreg free
  9145   001114  C019  F032         	movff	?___fldiv,___flmul@b
  9146   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9147   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9148   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9149   001124  0E00               	movlw	0
  9150   001126  6E36               	movwf	___flmul@a^0,c
  9151   001128  0E00               	movlw	0
  9152   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9153   00112C  0E70               	movlw	112
  9154   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9155   001130  0E42               	movlw	66
  9156   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9157   001134  EC82  F011         	call	___flmul	;wreg free
  9158   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9159   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9160   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9161   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9162   001148                     
  9163                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9164   001148  0100               	movlb	0	; () banked
  9165   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9166   00114C  EFAC  F008         	goto	u4010
  9167   001150  EFAA  F008         	goto	u4011
  9168   001154                     u4011:
  9169   001154  EFA7  F009         	goto	l4340
  9170   001158                     u4010:
  9171   001158                     
  9172                           ; BSR set to: 0
  9173   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9174   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9175   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9176   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9177   001168  0E00               	movlw	0
  9178   00116A  6E05               	movwf	___fladd@a^0,c
  9179   00116C  0E00               	movlw	0
  9180   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9181   001170  0EB4               	movlw	180
  9182   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9183   001174  0E43               	movlw	67
  9184   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9185   001178  EC22  F00F         	call	___fladd	;wreg free
  9186   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9187   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9188   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9189   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9190   00118C  EFA7  F009         	goto	l4340
  9191   001190                     l4330:
  9192                           
  9193                           ; BSR set to: 0
  9194   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9195   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9196   001194  A4D8               	btfss	status,2,c
  9197   001196  EFCF  F008         	goto	u4021
  9198   00119A  EFD1  F008         	goto	u4020
  9199   00119E                     u4021:
  9200   00119E  EF3D  F009         	goto	l4336
  9201   0011A2                     u4020:
  9202   0011A2                     
  9203                           ; BSR set to: 0
  9204                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9205   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9206   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9207   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9208   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9209   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9210   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9211   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9212   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9213   0011C2  EC4B  F025         	call	___flsub	;wreg free
  9214   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9215   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9216   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9217   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9218   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9219   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9220   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9221   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9222   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9223   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9224   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9225   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9226   0011F6  EC4B  F025         	call	___flsub	;wreg free
  9227   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9228   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9229   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9230   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9231   00120A  EC97  F013         	call	___fldiv	;wreg free
  9232   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2952
  9233   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2952+1
  9234   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2952+2
  9235   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2952+3
  9236   00121E                     
  9237                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9238   00121E  0E00               	movlw	0
  9239   001220  6E05               	movwf	___fladd@a^0,c
  9240   001222  0E00               	movlw	0
  9241   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9242   001226  0E00               	movlw	0
  9243   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9244   00122A  0E40               	movlw	64
  9245   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9246   00122E  C060  F001         	movff	_Colour_decider$2952,___fladd@b
  9247   001232  C061  F002         	movff	_Colour_decider$2952+1,___fladd@b+1
  9248   001236  C062  F003         	movff	_Colour_decider$2952+2,___fladd@b+2
  9249   00123A  C063  F004         	movff	_Colour_decider$2952+3,___fladd@b+3
  9250   00123E  EC22  F00F         	call	___fladd	;wreg free
  9251   001242  C001  F032         	movff	?___fladd,___flmul@b
  9252   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9253   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9254   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9255   001252  0E00               	movlw	0
  9256   001254  6E36               	movwf	___flmul@a^0,c
  9257   001256  0E00               	movlw	0
  9258   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9259   00125A  0E70               	movlw	112
  9260   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9261   00125E  0E42               	movlw	66
  9262   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9263   001262  EC82  F011         	call	___flmul	;wreg free
  9264   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9265   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9266   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9267   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9268                           
  9269                           ;color.c: 155:     }
  9270   001276  EFA7  F009         	goto	l4340
  9271   00127A                     l4336:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9275   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9276   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9277   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9278   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9279   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9280   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9281   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9282   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9283   00129A  EC4B  F025         	call	___flsub	;wreg free
  9284   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9285   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9286   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9287   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9288   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9289   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9290   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9291   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9292   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9293   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9294   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9295   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9296   0012CE  EC4B  F025         	call	___flsub	;wreg free
  9297   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9298   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9299   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9300   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9301   0012E2  EC97  F013         	call	___fldiv	;wreg free
  9302   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2952
  9303   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2952+1
  9304   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2952+2
  9305   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2952+3
  9306   0012F6                     
  9307                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9308   0012F6  0E00               	movlw	0
  9309   0012F8  6E05               	movwf	___fladd@a^0,c
  9310   0012FA  0E00               	movlw	0
  9311   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9312   0012FE  0E80               	movlw	128
  9313   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9314   001302  0E40               	movlw	64
  9315   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9316   001306  C060  F001         	movff	_Colour_decider$2952,___fladd@b
  9317   00130A  C061  F002         	movff	_Colour_decider$2952+1,___fladd@b+1
  9318   00130E  C062  F003         	movff	_Colour_decider$2952+2,___fladd@b+2
  9319   001312  C063  F004         	movff	_Colour_decider$2952+3,___fladd@b+3
  9320   001316  EC22  F00F         	call	___fladd	;wreg free
  9321   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9322   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9323   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9324   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9325   00132A  0E00               	movlw	0
  9326   00132C  6E36               	movwf	___flmul@a^0,c
  9327   00132E  0E00               	movlw	0
  9328   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9329   001332  0E70               	movlw	112
  9330   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9331   001336  0E42               	movlw	66
  9332   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9333   00133A  EC82  F011         	call	___flmul	;wreg free
  9334   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9335   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9336   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9337   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9338   00134E                     l4340:
  9339                           
  9340                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9341   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9342   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9343   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9344   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9345   00135E  0E00               	movlw	0
  9346   001360  6E05               	movwf	___flge@ff2^0,c
  9347   001362  0E00               	movlw	0
  9348   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9349   001366  0EA5               	movlw	165
  9350   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9351   00136A  0E43               	movlw	67
  9352   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9353   00136E  EC3E  F01D         	call	___flge	;wreg free
  9354   001372  A0D8               	btfss	status,0,c
  9355   001374  EFBE  F009         	goto	u4031
  9356   001378  EFC0  F009         	goto	u4030
  9357   00137C                     u4031:
  9358   00137C  EFDF  F009         	goto	l4350
  9359   001380                     u4030:
  9360   001380  0E00               	movlw	0
  9361   001382  6E01               	movwf	___flge@ff1^0,c
  9362   001384  0E00               	movlw	0
  9363   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9364   001388  0EB4               	movlw	180
  9365   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9366   00138C  0E43               	movlw	67
  9367   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9368   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9369   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9370   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9371   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9372   0013A0  EC3E  F01D         	call	___flge	;wreg free
  9373   0013A4  A0D8               	btfss	status,0,c
  9374   0013A6  EFD7  F009         	goto	u4041
  9375   0013AA  EFD9  F009         	goto	u4040
  9376   0013AE                     u4041:
  9377   0013AE  EFDF  F009         	goto	l4350
  9378   0013B2                     u4040:
  9379   0013B2                     
  9380                           ;color.c: 164:         return 1;
  9381   0013B2  0E00               	movlw	0
  9382   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9383   0013B6  0E01               	movlw	1
  9384   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9385   0013BA  EF80  F00C         	goto	l76
  9386   0013BE                     l4350:
  9387   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9388   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9389   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9390   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9391   0013CE  0E00               	movlw	0
  9392   0013D0  6E05               	movwf	___flge@ff2^0,c
  9393   0013D2  0E00               	movlw	0
  9394   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9395   0013D6  0EA0               	movlw	160
  9396   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9397   0013DA  0E40               	movlw	64
  9398   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9399   0013DE  EC3E  F01D         	call	___flge	;wreg free
  9400   0013E2  A0D8               	btfss	status,0,c
  9401   0013E4  EFF6  F009         	goto	u4051
  9402   0013E8  EFF8  F009         	goto	u4050
  9403   0013EC                     u4051:
  9404   0013EC  EF17  F00A         	goto	l4360
  9405   0013F0                     u4050:
  9406   0013F0  0E00               	movlw	0
  9407   0013F2  6E01               	movwf	___flge@ff1^0,c
  9408   0013F4  0E00               	movlw	0
  9409   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9410   0013F8  0E40               	movlw	64
  9411   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9412   0013FC  0E41               	movlw	65
  9413   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9414   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9415   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9416   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9417   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9418   001410  EC3E  F01D         	call	___flge	;wreg free
  9419   001414  A0D8               	btfss	status,0,c
  9420   001416  EF0F  F00A         	goto	u4061
  9421   00141A  EF11  F00A         	goto	u4060
  9422   00141E                     u4061:
  9423   00141E  EF17  F00A         	goto	l4360
  9424   001422                     u4060:
  9425   001422                     
  9426                           ;color.c: 168:         return 2;
  9427   001422  0E00               	movlw	0
  9428   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9429   001426  0E02               	movlw	2
  9430   001428  6E4B               	movwf	?_Colour_decider^0,c
  9431   00142A  EF80  F00C         	goto	l76
  9432   00142E                     l4360:
  9433   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9434   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9435   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9436   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9437   00143E  0E00               	movlw	0
  9438   001440  6E05               	movwf	___flge@ff2^0,c
  9439   001442  0E00               	movlw	0
  9440   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9441   001446  0EA0               	movlw	160
  9442   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9443   00144A  0E41               	movlw	65
  9444   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9445   00144E  EC3E  F01D         	call	___flge	;wreg free
  9446   001452  A0D8               	btfss	status,0,c
  9447   001454  EF2E  F00A         	goto	u4071
  9448   001458  EF30  F00A         	goto	u4070
  9449   00145C                     u4071:
  9450   00145C  EFB0  F00A         	goto	l4386
  9451   001460                     u4070:
  9452   001460  0E00               	movlw	0
  9453   001462  6E01               	movwf	___flge@ff1^0,c
  9454   001464  0E00               	movlw	0
  9455   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9456   001468  0EE8               	movlw	232
  9457   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9458   00146C  0E41               	movlw	65
  9459   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9460   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9461   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9462   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9463   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9464   001480  EC3E  F01D         	call	___flge	;wreg free
  9465   001484  A0D8               	btfss	status,0,c
  9466   001486  EF47  F00A         	goto	u4081
  9467   00148A  EF49  F00A         	goto	u4080
  9468   00148E                     u4081:
  9469   00148E  EFB0  F00A         	goto	l4386
  9470   001492                     u4080:
  9471   001492                     
  9472                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9473   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9474   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9475   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9476   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9477   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9478   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9479   0014AA  0ECD               	movlw	205
  9480   0014AC  6E05               	movwf	___flge@ff2^0,c
  9481   0014AE  0ECC               	movlw	204
  9482   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9483   0014B2  0E4C               	movlw	76
  9484   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9485   0014B6  0E3E               	movlw	62
  9486   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9487   0014BA  EC3E  F01D         	call	___flge	;wreg free
  9488   0014BE  A0D8               	btfss	status,0,c
  9489   0014C0  EF64  F00A         	goto	u4091
  9490   0014C4  EF66  F00A         	goto	u4090
  9491   0014C8                     u4091:
  9492   0014C8  EF85  F00A         	goto	l4374
  9493   0014CC                     u4090:
  9494   0014CC  0E00               	movlw	0
  9495   0014CE  6E01               	movwf	___flge@ff1^0,c
  9496   0014D0  0E00               	movlw	0
  9497   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9498   0014D4  0E80               	movlw	128
  9499   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9500   0014D8  0E3E               	movlw	62
  9501   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9502   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9503   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9504   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9505   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9506   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9507   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9508   0014F4  EC3E  F01D         	call	___flge	;wreg free
  9509   0014F8  A0D8               	btfss	status,0,c
  9510   0014FA  EF81  F00A         	goto	u4101
  9511   0014FE  EF83  F00A         	goto	u4100
  9512   001502                     u4101:
  9513   001502  EF85  F00A         	goto	l4374
  9514   001506                     u4100:
  9515   001506  EF44  F008         	goto	l4318
  9516   00150A                     l4374:
  9517   00150A  EE20 F008          	lfsr	2,8
  9518   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9519   001510  26D9               	addwf	fsr2l,f,c
  9520   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9521   001514  22DA               	addwfc	fsr2h,f,c
  9522   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9523   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9524   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9525   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9526   001526  0E29               	movlw	41
  9527   001528  6E05               	movwf	___flge@ff2^0,c
  9528   00152A  0E5C               	movlw	92
  9529   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9530   00152E  0E0F               	movlw	15
  9531   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9532   001532  0E3E               	movlw	62
  9533   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9534   001536  EC3E  F01D         	call	___flge	;wreg free
  9535   00153A  A0D8               	btfss	status,0,c
  9536   00153C  EFA2  F00A         	goto	u4111
  9537   001540  EFA4  F00A         	goto	u4110
  9538   001544                     u4111:
  9539   001544  EFAA  F00A         	goto	l4382
  9540   001548                     u4110:
  9541   001548                     l4376:
  9542                           
  9543                           ;color.c: 179:             return 4;
  9544   001548  0E00               	movlw	0
  9545   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9546   00154C  0E04               	movlw	4
  9547   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9548   001550  EF80  F00C         	goto	l76
  9549   001554                     l4382:
  9550                           
  9551                           ;color.c: 182:             return 3;
  9552   001554  0E00               	movlw	0
  9553   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9554   001558  0E03               	movlw	3
  9555   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9556   00155C  EF80  F00C         	goto	l76
  9557   001560                     l4386:
  9558   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9559   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9560   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9561   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9562   001570  0E00               	movlw	0
  9563   001572  6E05               	movwf	___flge@ff2^0,c
  9564   001574  0E00               	movlw	0
  9565   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9566   001578  0E34               	movlw	52
  9567   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9568   00157C  0E42               	movlw	66
  9569   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9570   001580  EC3E  F01D         	call	___flge	;wreg free
  9571   001584  A0D8               	btfss	status,0,c
  9572   001586  EFC7  F00A         	goto	u4121
  9573   00158A  EFC9  F00A         	goto	u4120
  9574   00158E                     u4121:
  9575   00158E  EF2E  F00B         	goto	l4410
  9576   001592                     u4120:
  9577   001592  0E00               	movlw	0
  9578   001594  6E01               	movwf	___flge@ff1^0,c
  9579   001596  0E00               	movlw	0
  9580   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9581   00159A  0EA0               	movlw	160
  9582   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9583   00159E  0E42               	movlw	66
  9584   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9585   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9586   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9587   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9588   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9589   0015B2  EC3E  F01D         	call	___flge	;wreg free
  9590   0015B6  A0D8               	btfss	status,0,c
  9591   0015B8  EFE0  F00A         	goto	u4131
  9592   0015BC  EFE2  F00A         	goto	u4130
  9593   0015C0                     u4131:
  9594   0015C0  EF2E  F00B         	goto	l4410
  9595   0015C4                     u4130:
  9596   0015C4                     
  9597                           ;color.c: 188:         if(0.15<=rel->B){
  9598   0015C4  EE20 F008          	lfsr	2,8
  9599   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9600   0015CA  26D9               	addwf	fsr2l,f,c
  9601   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9602   0015CE  22DA               	addwfc	fsr2h,f,c
  9603   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9604   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9605   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9606   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9607   0015E0  0E9A               	movlw	154
  9608   0015E2  6E05               	movwf	___flge@ff2^0,c
  9609   0015E4  0E99               	movlw	153
  9610   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9611   0015E8  0E19               	movlw	25
  9612   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9613   0015EC  0E3E               	movlw	62
  9614   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9615   0015F0  EC3E  F01D         	call	___flge	;wreg free
  9616   0015F4  A0D8               	btfss	status,0,c
  9617   0015F6  EFFF  F00A         	goto	u4141
  9618   0015FA  EF01  F00B         	goto	u4140
  9619   0015FE                     u4141:
  9620   0015FE  EF03  F00B         	goto	l4398
  9621   001602                     u4140:
  9622   001602  EFA4  F00A         	goto	l4376
  9623   001606                     l4398:
  9624   001606  EE20 F008          	lfsr	2,8
  9625   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9626   00160C  26D9               	addwf	fsr2l,f,c
  9627   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9628   001610  22DA               	addwfc	fsr2h,f,c
  9629   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9630   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9631   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9632   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9633   001622  0E8F               	movlw	143
  9634   001624  6E05               	movwf	___flge@ff2^0,c
  9635   001626  0EC2               	movlw	194
  9636   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9637   00162A  0EF5               	movlw	245
  9638   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9639   00162E  0E3D               	movlw	61
  9640   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9641   001632  EC3E  F01D         	call	___flge	;wreg free
  9642   001636  A0D8               	btfss	status,0,c
  9643   001638  EF20  F00B         	goto	u4151
  9644   00163C  EF22  F00B         	goto	u4150
  9645   001640                     u4151:
  9646   001640  EF28  F00B         	goto	l4406
  9647   001644                     u4150:
  9648   001644                     l4400:
  9649                           
  9650                           ;color.c: 192:             return 6;
  9651   001644  0E00               	movlw	0
  9652   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9653   001648  0E06               	movlw	6
  9654   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9655   00164C  EF80  F00C         	goto	l76
  9656   001650                     l4406:
  9657                           
  9658                           ;color.c: 195:             return 5;
  9659   001650  0E00               	movlw	0
  9660   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9661   001654  0E05               	movlw	5
  9662   001656  6E4B               	movwf	?_Colour_decider^0,c
  9663   001658  EF80  F00C         	goto	l76
  9664   00165C                     l4410:
  9665   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9666   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9667   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9668   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9669   00166C  0E00               	movlw	0
  9670   00166E  6E05               	movwf	___flge@ff2^0,c
  9671   001670  0E00               	movlw	0
  9672   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9673   001674  0EA2               	movlw	162
  9674   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9675   001678  0E42               	movlw	66
  9676   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9677   00167C  EC3E  F01D         	call	___flge	;wreg free
  9678   001680  A0D8               	btfss	status,0,c
  9679   001682  EF45  F00B         	goto	u4161
  9680   001686  EF47  F00B         	goto	u4160
  9681   00168A                     u4161:
  9682   00168A  EF81  F00B         	goto	l4426
  9683   00168E                     u4160:
  9684   00168E  0E00               	movlw	0
  9685   001690  6E01               	movwf	___flge@ff1^0,c
  9686   001692  0E00               	movlw	0
  9687   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9688   001696  0EE6               	movlw	230
  9689   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9690   00169A  0E42               	movlw	66
  9691   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9692   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9693   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9694   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9695   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9696   0016AE  EC3E  F01D         	call	___flge	;wreg free
  9697   0016B2  A0D8               	btfss	status,0,c
  9698   0016B4  EF5E  F00B         	goto	u4171
  9699   0016B8  EF60  F00B         	goto	u4170
  9700   0016BC                     u4171:
  9701   0016BC  EF81  F00B         	goto	l4426
  9702   0016C0                     u4170:
  9703   0016C0                     
  9704                           ;color.c: 201:         if(0.15<=rel->B){
  9705   0016C0  EE20 F008          	lfsr	2,8
  9706   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9707   0016C6  26D9               	addwf	fsr2l,f,c
  9708   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9709   0016CA  22DA               	addwfc	fsr2h,f,c
  9710   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9711   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9712   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9713   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9714   0016DC  0E9A               	movlw	154
  9715   0016DE  6E05               	movwf	___flge@ff2^0,c
  9716   0016E0  0E99               	movlw	153
  9717   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9718   0016E4  0E19               	movlw	25
  9719   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9720   0016E8  0E3E               	movlw	62
  9721   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9722   0016EC  EC3E  F01D         	call	___flge	;wreg free
  9723   0016F0  A0D8               	btfss	status,0,c
  9724   0016F2  EF7D  F00B         	goto	u4181
  9725   0016F6  EF7F  F00B         	goto	u4180
  9726   0016FA                     u4181:
  9727   0016FA  EF22  F00B         	goto	l4400
  9728   0016FE                     u4180:
  9729   0016FE  EFA4  F00A         	goto	l4376
  9730   001702                     l4426:
  9731   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9732   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9733   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9734   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9735   001712  0E00               	movlw	0
  9736   001714  6E05               	movwf	___flge@ff2^0,c
  9737   001716  0E00               	movlw	0
  9738   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9739   00171A  0EF0               	movlw	240
  9740   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9741   00171E  0E41               	movlw	65
  9742   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9743   001722  EC3E  F01D         	call	___flge	;wreg free
  9744   001726  A0D8               	btfss	status,0,c
  9745   001728  EF98  F00B         	goto	u4191
  9746   00172C  EF9A  F00B         	goto	u4190
  9747   001730                     u4191:
  9748   001730  EFB3  F00B         	goto	l4430
  9749   001734                     u4190:
  9750   001734  0E00               	movlw	0
  9751   001736  6E01               	movwf	___flge@ff1^0,c
  9752   001738  0E00               	movlw	0
  9753   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9754   00173C  0E68               	movlw	104
  9755   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9756   001740  0E42               	movlw	66
  9757   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9758   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9759   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9760   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9761   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9762   001754  EC3E  F01D         	call	___flge	;wreg free
  9763   001758  B0D8               	btfsc	status,0,c
  9764   00175A  EFB1  F00B         	goto	u4201
  9765   00175E  EFB3  F00B         	goto	u4200
  9766   001762                     u4201:
  9767   001762  EFA4  F00A         	goto	l4376
  9768   001766                     u4200:
  9769   001766                     l4430:
  9770   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9771   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9772   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9773   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9774   001776  0E00               	movlw	0
  9775   001778  6E05               	movwf	___flge@ff2^0,c
  9776   00177A  0E00               	movlw	0
  9777   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9778   00177E  0EF0               	movlw	240
  9779   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9780   001782  0E42               	movlw	66
  9781   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9782   001786  EC3E  F01D         	call	___flge	;wreg free
  9783   00178A  A0D8               	btfss	status,0,c
  9784   00178C  EFCA  F00B         	goto	u4211
  9785   001790  EFCC  F00B         	goto	u4210
  9786   001794                     u4211:
  9787   001794  EFE7  F00B         	goto	l4440
  9788   001798                     u4210:
  9789   001798  0E00               	movlw	0
  9790   00179A  6E01               	movwf	___flge@ff1^0,c
  9791   00179C  0E00               	movlw	0
  9792   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9793   0017A0  0E5C               	movlw	92
  9794   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9795   0017A4  0E43               	movlw	67
  9796   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9797   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9798   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9799   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9800   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9801   0017B8  EC3E  F01D         	call	___flge	;wreg free
  9802   0017BC  A0D8               	btfss	status,0,c
  9803   0017BE  EFE3  F00B         	goto	u4221
  9804   0017C2  EFE5  F00B         	goto	u4220
  9805   0017C6                     u4221:
  9806   0017C6  EFE7  F00B         	goto	l4440
  9807   0017CA                     u4220:
  9808   0017CA  EFA4  F00A         	goto	l4376
  9809   0017CE                     l4440:
  9810   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9811   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9812   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9813   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9814   0017DE  0E00               	movlw	0
  9815   0017E0  6E05               	movwf	___flge@ff2^0,c
  9816   0017E2  0E00               	movlw	0
  9817   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9818   0017E6  0E60               	movlw	96
  9819   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9820   0017EA  0E41               	movlw	65
  9821   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9822   0017EE  EC3E  F01D         	call	___flge	;wreg free
  9823   0017F2  A0D8               	btfss	status,0,c
  9824   0017F4  EFFE  F00B         	goto	u4231
  9825   0017F8  EF00  F00C         	goto	u4230
  9826   0017FC                     u4231:
  9827   0017FC  EF7C  F00C         	goto	l4466
  9828   001800                     u4230:
  9829   001800  0E00               	movlw	0
  9830   001802  6E01               	movwf	___flge@ff1^0,c
  9831   001804  0E00               	movlw	0
  9832   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9833   001808  0E98               	movlw	152
  9834   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9835   00180C  0E41               	movlw	65
  9836   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9837   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9838   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9839   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9840   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9841   001820  EC3E  F01D         	call	___flge	;wreg free
  9842   001824  A0D8               	btfss	status,0,c
  9843   001826  EF17  F00C         	goto	u4241
  9844   00182A  EF19  F00C         	goto	u4240
  9845   00182E                     u4241:
  9846   00182E  EF7C  F00C         	goto	l4466
  9847   001832                     u4240:
  9848   001832                     
  9849                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9850   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9851   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9852   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9853   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9854   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9855   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9856   00184A  0ECD               	movlw	205
  9857   00184C  6E05               	movwf	___flge@ff2^0,c
  9858   00184E  0ECC               	movlw	204
  9859   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9860   001852  0E4C               	movlw	76
  9861   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9862   001856  0E3E               	movlw	62
  9863   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9864   00185A  EC3E  F01D         	call	___flge	;wreg free
  9865   00185E  A0D8               	btfss	status,0,c
  9866   001860  EF34  F00C         	goto	u4251
  9867   001864  EF36  F00C         	goto	u4250
  9868   001868                     u4251:
  9869   001868  EF55  F00C         	goto	l4454
  9870   00186C                     u4250:
  9871   00186C  0E1F               	movlw	31
  9872   00186E  6E01               	movwf	___flge@ff1^0,c
  9873   001870  0E85               	movlw	133
  9874   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9875   001874  0E6B               	movlw	107
  9876   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9877   001878  0E3E               	movlw	62
  9878   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9879   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9880   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9881   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9882   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9883   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9884   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9885   001894  EC3E  F01D         	call	___flge	;wreg free
  9886   001898  A0D8               	btfss	status,0,c
  9887   00189A  EF51  F00C         	goto	u4261
  9888   00189E  EF53  F00C         	goto	u4260
  9889   0018A2                     u4261:
  9890   0018A2  EF55  F00C         	goto	l4454
  9891   0018A6                     u4260:
  9892   0018A6  EF44  F008         	goto	l4318
  9893   0018AA                     l4454:
  9894   0018AA  EE20 F008          	lfsr	2,8
  9895   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9896   0018B0  26D9               	addwf	fsr2l,f,c
  9897   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9898   0018B4  22DA               	addwfc	fsr2h,f,c
  9899   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9900   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9901   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9902   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9903   0018C6  0E9A               	movlw	154
  9904   0018C8  6E05               	movwf	___flge@ff2^0,c
  9905   0018CA  0E99               	movlw	153
  9906   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9907   0018CE  0E19               	movlw	25
  9908   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9909   0018D2  0E3E               	movlw	62
  9910   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9911   0018D6  EC3E  F01D         	call	___flge	;wreg free
  9912   0018DA  A0D8               	btfss	status,0,c
  9913   0018DC  EF72  F00C         	goto	u4271
  9914   0018E0  EF74  F00C         	goto	u4270
  9915   0018E4                     u4271:
  9916   0018E4  EF76  F00C         	goto	l4462
  9917   0018E8                     u4270:
  9918   0018E8  EFA4  F00A         	goto	l4376
  9919   0018EC                     l4462:
  9920                           
  9921                           ;color.c: 223:             return 7;
  9922   0018EC  0E00               	movlw	0
  9923   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9924   0018F0  0E07               	movlw	7
  9925   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9926   0018F4  EF80  F00C         	goto	l76
  9927   0018F8                     l4466:
  9928                           
  9929                           ;color.c: 227:         return 10;
  9930   0018F8  0E00               	movlw	0
  9931   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9932   0018FC  0E0A               	movlw	10
  9933   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9934   001900                     l76:
  9935   001900  0012               	return		;funcret
  9936   001902                     __end_of_Colour_decider:
  9937                           	callstack 0
  9938                           
  9939 ;; *************** function ___xxtofl *****************
  9940 ;; Defined at:
  9941 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;  sign            1    wreg     unsigned char 
  9944 ;;  val             4    0[COMRAM] long 
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;  sign            1    8[COMRAM] unsigned char 
  9947 ;;  arg             4   10[COMRAM] unsigned long 
  9948 ;;  exp             1    9[COMRAM] unsigned char 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  4    0[COMRAM] unsigned char 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9962 ;;Total ram usage:       14 bytes
  9963 ;; Hardware stack levels used: 1
  9964 ;; Hardware stack levels required when called: 1
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_colour_rel
  9969 ;;		_Colour_decider
  9970 ;;		_turnRight45
  9971 ;;		_turnLeft45
  9972 ;;		_reverseOneBlock
  9973 ;;		_ForwardOneBlock
  9974 ;;		_Forwardhalfblock
  9975 ;;		_Backhalfblock
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text63
  9980   003320                     __ptext63:
  9981                           	callstack 0
  9982   003320                     ___xxtofl:
  9983                           	callstack 28
  9984                           
  9985                           ;incstack = 0
  9986                           ;___xxtofl@sign stored from wreg
  9987   003320  6E09               	movwf	___xxtofl@sign^0,c
  9988   003322  5009               	movf	___xxtofl@sign^0,w,c
  9989   003324  B4D8               	btfsc	status,2,c
  9990   003326  EF97  F019         	goto	u3841
  9991   00332A  EF99  F019         	goto	u3840
  9992   00332E                     u3841:
  9993   00332E  EFBB  F019         	goto	l1323
  9994   003332                     u3840:
  9995   003332  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9996   003334  EFA0  F019         	goto	u3850
  9997   003338  EF9E  F019         	goto	u3851
  9998   00333C                     u3851:
  9999   00333C  EFBB  F019         	goto	l1323
 10000   003340                     u3850:
 10001   003340  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10002   003344  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10003   003348  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10004   00334C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10005   003350  1E05               	comf	??___xxtofl^0,f,c
 10006   003352  1E06               	comf	(??___xxtofl+1)^0,f,c
 10007   003354  1E07               	comf	(??___xxtofl+2)^0,f,c
 10008   003356  1E08               	comf	(??___xxtofl+3)^0,f,c
 10009   003358  2A05               	incf	??___xxtofl^0,f,c
 10010   00335A  0E00               	movlw	0
 10011   00335C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10012   00335E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10013   003360  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10014   003362  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10015   003366  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10016   00336A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10017   00336E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10018   003372  EFC3  F019         	goto	l4188
 10019   003376                     l1323:
 10020   003376  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10021   00337A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10022   00337E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10023   003382  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10024   003386                     l4188:
 10025   003386  5001               	movf	___xxtofl@val^0,w,c
 10026   003388  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10027   00338A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10028   00338C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10029   00338E  A4D8               	btfss	status,2,c
 10030   003390  EFCC  F019         	goto	u3861
 10031   003394  EFCE  F019         	goto	u3860
 10032   003398                     u3861:
 10033   003398  EFD8  F019         	goto	l4194
 10034   00339C                     u3860:
 10035   00339C  0E00               	movlw	0
 10036   00339E  6E01               	movwf	?___xxtofl^0,c
 10037   0033A0  0E00               	movlw	0
 10038   0033A2  6E02               	movwf	(?___xxtofl+1)^0,c
 10039   0033A4  0E00               	movlw	0
 10040   0033A6  6E03               	movwf	(?___xxtofl+2)^0,c
 10041   0033A8  0E00               	movlw	0
 10042   0033AA  6E04               	movwf	(?___xxtofl+3)^0,c
 10043   0033AC  EF69  F01A         	goto	l1326
 10044   0033B0                     l4194:
 10045   0033B0  0E96               	movlw	150
 10046   0033B2  6E0A               	movwf	___xxtofl@exp^0,c
 10047   0033B4  EFE2  F019         	goto	l4198
 10048   0033B8                     l4196:
 10049   0033B8  2A0A               	incf	___xxtofl@exp^0,f,c
 10050   0033BA  90D8               	bcf	status,0,c
 10051   0033BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10052   0033BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10053   0033C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10054   0033C2  320B               	rrcf	___xxtofl@arg^0,f,c
 10055   0033C4                     l4198:
 10056   0033C4  0E00               	movlw	0
 10057   0033C6  140B               	andwf	___xxtofl@arg^0,w,c
 10058   0033C8  6E05               	movwf	??___xxtofl^0,c
 10059   0033CA  0E00               	movlw	0
 10060   0033CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10061   0033CE  6E06               	movwf	(??___xxtofl+1)^0,c
 10062   0033D0  0E00               	movlw	0
 10063   0033D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10064   0033D4  6E07               	movwf	(??___xxtofl+2)^0,c
 10065   0033D6  0EFE               	movlw	254
 10066   0033D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10067   0033DA  6E08               	movwf	(??___xxtofl+3)^0,c
 10068   0033DC  5005               	movf	??___xxtofl^0,w,c
 10069   0033DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10070   0033E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10071   0033E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10072   0033E4  A4D8               	btfss	status,2,c
 10073   0033E6  EFF7  F019         	goto	u3871
 10074   0033EA  EFF9  F019         	goto	u3870
 10075   0033EE                     u3871:
 10076   0033EE  EFDC  F019         	goto	l4196
 10077   0033F2                     u3870:
 10078   0033F2  EF07  F01A         	goto	l1330
 10079   0033F6                     l4200:
 10080   0033F6  2A0A               	incf	___xxtofl@exp^0,f,c
 10081   0033F8  0E01               	movlw	1
 10082   0033FA  260B               	addwf	___xxtofl@arg^0,f,c
 10083   0033FC  0E00               	movlw	0
 10084   0033FE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10085   003400  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10086   003402  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10087   003404  90D8               	bcf	status,0,c
 10088   003406  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10089   003408  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10090   00340A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10091   00340C  320B               	rrcf	___xxtofl@arg^0,f,c
 10092   00340E                     l1330:
 10093   00340E  0E00               	movlw	0
 10094   003410  140B               	andwf	___xxtofl@arg^0,w,c
 10095   003412  6E05               	movwf	??___xxtofl^0,c
 10096   003414  0E00               	movlw	0
 10097   003416  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10098   003418  6E06               	movwf	(??___xxtofl+1)^0,c
 10099   00341A  0E00               	movlw	0
 10100   00341C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10101   00341E  6E07               	movwf	(??___xxtofl+2)^0,c
 10102   003420  0EFF               	movlw	255
 10103   003422  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10104   003424  6E08               	movwf	(??___xxtofl+3)^0,c
 10105   003426  5005               	movf	??___xxtofl^0,w,c
 10106   003428  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10107   00342A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10108   00342C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10109   00342E  A4D8               	btfss	status,2,c
 10110   003430  EF1C  F01A         	goto	u3881
 10111   003434  EF1E  F01A         	goto	u3880
 10112   003438                     u3881:
 10113   003438  EFFB  F019         	goto	l4200
 10114   00343C                     u3880:
 10115   00343C  EF26  F01A         	goto	l4208
 10116   003440                     l4206:
 10117   003440  060A               	decf	___xxtofl@exp^0,f,c
 10118   003442  90D8               	bcf	status,0,c
 10119   003444  360B               	rlcf	___xxtofl@arg^0,f,c
 10120   003446  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10121   003448  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10122   00344A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10123   00344C                     l4208:
 10124   00344C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10125   00344E  EF2B  F01A         	goto	u3891
 10126   003452  EF2D  F01A         	goto	u3890
 10127   003456                     u3891:
 10128   003456  EF35  F01A         	goto	l1337
 10129   00345A                     u3890:
 10130   00345A  0E02               	movlw	2
 10131   00345C  600A               	cpfslt	___xxtofl@exp^0,c
 10132   00345E  EF33  F01A         	goto	u3901
 10133   003462  EF35  F01A         	goto	u3900
 10134   003466                     u3901:
 10135   003466  EF20  F01A         	goto	l4206
 10136   00346A                     u3900:
 10137   00346A                     l1337:
 10138   00346A  B00A               	btfsc	___xxtofl@exp^0,0,c
 10139   00346C  EF3A  F01A         	goto	u3911
 10140   003470  EF3C  F01A         	goto	u3910
 10141   003474                     u3911:
 10142   003474  EF3D  F01A         	goto	l4214
 10143   003478                     u3910:
 10144   003478  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10145   00347A                     l4214:
 10146   00347A  90D8               	bcf	status,0,c
 10147   00347C  320A               	rrcf	___xxtofl@exp^0,f,c
 10148   00347E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10149   003482  6A06               	clrf	(??___xxtofl+1)^0,c
 10150   003484  6A07               	clrf	(??___xxtofl+2)^0,c
 10151   003486  6A08               	clrf	(??___xxtofl+3)^0,c
 10152   003488  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10153   00348C  6A07               	clrf	(??___xxtofl+2)^0,c
 10154   00348E  6A06               	clrf	(??___xxtofl+1)^0,c
 10155   003490  6A05               	clrf	??___xxtofl^0,c
 10156   003492  5005               	movf	??___xxtofl^0,w,c
 10157   003494  120B               	iorwf	___xxtofl@arg^0,f,c
 10158   003496  5006               	movf	(??___xxtofl+1)^0,w,c
 10159   003498  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10160   00349A  5007               	movf	(??___xxtofl+2)^0,w,c
 10161   00349C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10162   00349E  5008               	movf	(??___xxtofl+3)^0,w,c
 10163   0034A0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10164   0034A2  5009               	movf	___xxtofl@sign^0,w,c
 10165   0034A4  B4D8               	btfsc	status,2,c
 10166   0034A6  EF57  F01A         	goto	u3921
 10167   0034AA  EF59  F01A         	goto	u3920
 10168   0034AE                     u3921:
 10169   0034AE  EF61  F01A         	goto	l4224
 10170   0034B2                     u3920:
 10171   0034B2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10172   0034B4  EF60  F01A         	goto	u3930
 10173   0034B8  EF5E  F01A         	goto	u3931
 10174   0034BC                     u3931:
 10175   0034BC  EF61  F01A         	goto	l4224
 10176   0034C0                     u3930:
 10177   0034C0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10178   0034C2                     l4224:
 10179   0034C2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10180   0034C6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10181   0034CA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10182   0034CE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10183   0034D2                     l1326:
 10184   0034D2  0012               	return		;funcret
 10185   0034D4                     __end_of___xxtofl:
 10186                           	callstack 0
 10187                           
 10188 ;; *************** function ___flsub *****************
 10189 ;; Defined at:
 10190 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  b               4   16[COMRAM] unsigned char 
 10193 ;;  a               4   20[COMRAM] unsigned char 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;		None
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  4   16[COMRAM] unsigned char 
 10198 ;; Registers used:
 10199 ;;		wreg, status,2, status,0, cstack
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10205 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;Total ram usage:        8 bytes
 10210 ;; Hardware stack levels used: 1
 10211 ;; Hardware stack levels required when called: 2
 10212 ;; This function calls:
 10213 ;;		___fladd
 10214 ;; This function is called by:
 10215 ;;		_Colour_decider
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text64
 10220   004A96                     __ptext64:
 10221                           	callstack 0
 10222   004A96                     ___flsub:
 10223                           	callstack 27
 10224   004A96  0E00               	movlw	0
 10225   004A98  1A15               	xorwf	___flsub@a^0,f,c
 10226   004A9A  0E00               	movlw	0
 10227   004A9C  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10228   004A9E  0E00               	movlw	0
 10229   004AA0  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10230   004AA2  0E80               	movlw	128
 10231   004AA4  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10232   004AA6  C011  F001         	movff	___flsub@b,___fladd@b
 10233   004AAA  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10234   004AAE  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10235   004AB2  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10236   004AB6  C015  F005         	movff	___flsub@a,___fladd@a
 10237   004ABA  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10238   004ABE  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10239   004AC2  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10240   004AC6  EC22  F00F         	call	___fladd	;wreg free
 10241   004ACA  C001  F011         	movff	?___fladd,?___flsub
 10242   004ACE  C002  F012         	movff	?___fladd+1,?___flsub+1
 10243   004AD2  C003  F013         	movff	?___fladd+2,?___flsub+2
 10244   004AD6  C004  F014         	movff	?___fladd+3,?___flsub+3
 10245   004ADA  0012               	return		;funcret
 10246   004ADC                     __end_of___flsub:
 10247                           	callstack 0
 10248                           
 10249 ;; *************** function ___fladd *****************
 10250 ;; Defined at:
 10251 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;  b               4    0[COMRAM] unsigned char 
 10254 ;;  a               4    4[COMRAM] unsigned char 
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;  grs             1   15[COMRAM] unsigned char 
 10257 ;;  bexp            1   14[COMRAM] unsigned char 
 10258 ;;  aexp            1   13[COMRAM] unsigned char 
 10259 ;;  signs           1   12[COMRAM] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  4    0[COMRAM] unsigned char 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10270 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;Total ram usage:       16 bytes
 10274 ;; Hardware stack levels used: 1
 10275 ;; Hardware stack levels required when called: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_colour_rel
 10280 ;;		_Colour_decider
 10281 ;;		___flsub
 10282 ;; This function uses a non-reentrant model
 10283 ;;
 10284                           
 10285                           	psect	text65
 10286   001E44                     __ptext65:
 10287                           	callstack 0
 10288   001E44                     ___fladd:
 10289                           	callstack 28
 10290   001E44  5004               	movf	(___fladd@b+3)^0,w,c
 10291   001E46  0B80               	andlw	128
 10292   001E48  6E0D               	movwf	___fladd@signs^0,c
 10293   001E4A  5004               	movf	(___fladd@b+3)^0,w,c
 10294   001E4C  2404               	addwf	(___fladd@b+3)^0,w,c
 10295   001E4E  6E0F               	movwf	___fladd@bexp^0,c
 10296   001E50  AE03               	btfss	(___fladd@b+2)^0,7,c
 10297   001E52  EF2D  F00F         	goto	u2891
 10298   001E56  EF2F  F00F         	goto	u2890
 10299   001E5A                     u2891:
 10300   001E5A  EF30  F00F         	goto	l3554
 10301   001E5E                     u2890:
 10302   001E5E  800F               	bsf	___fladd@bexp^0,0,c
 10303   001E60                     l3554:
 10304   001E60  500F               	movf	___fladd@bexp^0,w,c
 10305   001E62  B4D8               	btfsc	status,2,c
 10306   001E64  EF36  F00F         	goto	u2901
 10307   001E68  EF38  F00F         	goto	u2900
 10308   001E6C                     u2901:
 10309   001E6C  EF4D  F00F         	goto	l3564
 10310   001E70                     u2900:
 10311   001E70  280F               	incf	___fladd@bexp^0,w,c
 10312   001E72  A4D8               	btfss	status,2,c
 10313   001E74  EF3E  F00F         	goto	u2911
 10314   001E78  EF40  F00F         	goto	u2910
 10315   001E7C                     u2911:
 10316   001E7C  EF48  F00F         	goto	l3560
 10317   001E80                     u2910:
 10318   001E80  0E00               	movlw	0
 10319   001E82  6E01               	movwf	___fladd@b^0,c
 10320   001E84  0E00               	movlw	0
 10321   001E86  6E02               	movwf	(___fladd@b+1)^0,c
 10322   001E88  0E00               	movlw	0
 10323   001E8A  6E03               	movwf	(___fladd@b+2)^0,c
 10324   001E8C  0E00               	movlw	0
 10325   001E8E  6E04               	movwf	(___fladd@b+3)^0,c
 10326   001E90                     l3560:
 10327   001E90  8E03               	bsf	(___fladd@b+2)^0,7,c
 10328   001E92  0E00               	movlw	0
 10329   001E94  6E04               	movwf	(___fladd@b+3)^0,c
 10330   001E96  EF55  F00F         	goto	l3566
 10331   001E9A                     l3564:
 10332   001E9A  0E00               	movlw	0
 10333   001E9C  6E01               	movwf	___fladd@b^0,c
 10334   001E9E  0E00               	movlw	0
 10335   001EA0  6E02               	movwf	(___fladd@b+1)^0,c
 10336   001EA2  0E00               	movlw	0
 10337   001EA4  6E03               	movwf	(___fladd@b+2)^0,c
 10338   001EA6  0E00               	movlw	0
 10339   001EA8  6E04               	movwf	(___fladd@b+3)^0,c
 10340   001EAA                     l3566:
 10341   001EAA  5008               	movf	(___fladd@a+3)^0,w,c
 10342   001EAC  0B80               	andlw	128
 10343   001EAE  6E0E               	movwf	___fladd@aexp^0,c
 10344   001EB0  500D               	movf	___fladd@signs^0,w,c
 10345   001EB2  180E               	xorwf	___fladd@aexp^0,w,c
 10346   001EB4  B4D8               	btfsc	status,2,c
 10347   001EB6  EF5F  F00F         	goto	u2921
 10348   001EBA  EF61  F00F         	goto	u2920
 10349   001EBE                     u2921:
 10350   001EBE  EF62  F00F         	goto	l3572
 10351   001EC2                     u2920:
 10352   001EC2  8C0D               	bsf	___fladd@signs^0,6,c
 10353   001EC4                     l3572:
 10354   001EC4  5008               	movf	(___fladd@a+3)^0,w,c
 10355   001EC6  2408               	addwf	(___fladd@a+3)^0,w,c
 10356   001EC8  6E0E               	movwf	___fladd@aexp^0,c
 10357   001ECA  AE07               	btfss	(___fladd@a+2)^0,7,c
 10358   001ECC  EF6A  F00F         	goto	u2931
 10359   001ED0  EF6C  F00F         	goto	u2930
 10360   001ED4                     u2931:
 10361   001ED4  EF6D  F00F         	goto	l3578
 10362   001ED8                     u2930:
 10363   001ED8  800E               	bsf	___fladd@aexp^0,0,c
 10364   001EDA                     l3578:
 10365   001EDA  500E               	movf	___fladd@aexp^0,w,c
 10366   001EDC  B4D8               	btfsc	status,2,c
 10367   001EDE  EF73  F00F         	goto	u2941
 10368   001EE2  EF75  F00F         	goto	u2940
 10369   001EE6                     u2941:
 10370   001EE6  EF8A  F00F         	goto	l3588
 10371   001EEA                     u2940:
 10372   001EEA  280E               	incf	___fladd@aexp^0,w,c
 10373   001EEC  A4D8               	btfss	status,2,c
 10374   001EEE  EF7B  F00F         	goto	u2951
 10375   001EF2  EF7D  F00F         	goto	u2950
 10376   001EF6                     u2951:
 10377   001EF6  EF85  F00F         	goto	l3584
 10378   001EFA                     u2950:
 10379   001EFA  0E00               	movlw	0
 10380   001EFC  6E05               	movwf	___fladd@a^0,c
 10381   001EFE  0E00               	movlw	0
 10382   001F00  6E06               	movwf	(___fladd@a+1)^0,c
 10383   001F02  0E00               	movlw	0
 10384   001F04  6E07               	movwf	(___fladd@a+2)^0,c
 10385   001F06  0E00               	movlw	0
 10386   001F08  6E08               	movwf	(___fladd@a+3)^0,c
 10387   001F0A                     l3584:
 10388   001F0A  8E07               	bsf	(___fladd@a+2)^0,7,c
 10389   001F0C  0E00               	movlw	0
 10390   001F0E  6E08               	movwf	(___fladd@a+3)^0,c
 10391   001F10  EF92  F00F         	goto	l3590
 10392   001F14                     l3588:
 10393   001F14  0E00               	movlw	0
 10394   001F16  6E05               	movwf	___fladd@a^0,c
 10395   001F18  0E00               	movlw	0
 10396   001F1A  6E06               	movwf	(___fladd@a+1)^0,c
 10397   001F1C  0E00               	movlw	0
 10398   001F1E  6E07               	movwf	(___fladd@a+2)^0,c
 10399   001F20  0E00               	movlw	0
 10400   001F22  6E08               	movwf	(___fladd@a+3)^0,c
 10401   001F24                     l3590:
 10402   001F24  500F               	movf	___fladd@bexp^0,w,c
 10403   001F26  5C0E               	subwf	___fladd@aexp^0,w,c
 10404   001F28  B0D8               	btfsc	status,0,c
 10405   001F2A  EF99  F00F         	goto	u2961
 10406   001F2E  EF9B  F00F         	goto	u2960
 10407   001F32                     u2961:
 10408   001F32  EFC2  F00F         	goto	l3626
 10409   001F36                     u2960:
 10410   001F36  AC0D               	btfss	___fladd@signs^0,6,c
 10411   001F38  EFA0  F00F         	goto	u2971
 10412   001F3C  EFA2  F00F         	goto	u2970
 10413   001F40                     u2971:
 10414   001F40  EFA4  F00F         	goto	l3596
 10415   001F44                     u2970:
 10416   001F44  0E80               	movlw	128
 10417   001F46  1A0D               	xorwf	___fladd@signs^0,f,c
 10418   001F48                     l3596:
 10419   001F48  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10420   001F4C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10421   001F50  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10422   001F54  C001  F010         	movff	___fladd@b,___fladd@grs
 10423   001F58  C005  F001         	movff	___fladd@a,___fladd@b
 10424   001F5C  C010  F005         	movff	___fladd@grs,___fladd@a
 10425   001F60  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10426   001F64  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10427   001F68  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10428   001F6C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10429   001F70  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10430   001F74  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10431   001F78  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10432   001F7C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10433   001F80  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10434   001F84                     l3626:
 10435   001F84  0E00               	movlw	0
 10436   001F86  6E10               	movwf	___fladd@grs^0,c
 10437   001F88  500F               	movf	___fladd@bexp^0,w,c
 10438   001F8A  C00E  F009         	movff	___fladd@aexp,??___fladd
 10439   001F8E  6A0A               	clrf	(??___fladd+1)^0,c
 10440   001F90  5E09               	subwf	??___fladd^0,f,c
 10441   001F92  0E00               	movlw	0
 10442   001F94  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10443   001F96  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10444   001F98  EFD7  F00F         	goto	u2981
 10445   001F9C  500A               	movf	(??___fladd+1)^0,w,c
 10446   001F9E  E109               	bnz	u2980
 10447   001FA0  0E1A               	movlw	26
 10448   001FA2  5C09               	subwf	??___fladd^0,w,c
 10449   001FA4  A0D8               	btfss	status,0,c
 10450   001FA6  EFD7  F00F         	goto	u2981
 10451   001FAA  EFD9  F00F         	goto	u2980
 10452   001FAE                     u2981:
 10453   001FAE  EF10  F010         	goto	l1197
 10454   001FB2                     u2980:
 10455   001FB2  5001               	movf	___fladd@b^0,w,c
 10456   001FB4  1002               	iorwf	(___fladd@b+1)^0,w,c
 10457   001FB6  1003               	iorwf	(___fladd@b+2)^0,w,c
 10458   001FB8  1004               	iorwf	(___fladd@b+3)^0,w,c
 10459   001FBA  A4D8               	btfss	status,2,c
 10460   001FBC  EFE2  F00F         	goto	u2991
 10461   001FC0  EFE5  F00F         	goto	u2990
 10462   001FC4                     u2991:
 10463   001FC4  0E01               	movlw	1
 10464   001FC6  EFE6  F00F         	goto	u3000
 10465   001FCA                     u2990:
 10466   001FCA  0E00               	movlw	0
 10467   001FCC                     u3000:
 10468   001FCC  6E10               	movwf	___fladd@grs^0,c
 10469   001FCE  0E00               	movlw	0
 10470   001FD0  6E01               	movwf	___fladd@b^0,c
 10471   001FD2  0E00               	movlw	0
 10472   001FD4  6E02               	movwf	(___fladd@b+1)^0,c
 10473   001FD6  0E00               	movlw	0
 10474   001FD8  6E03               	movwf	(___fladd@b+2)^0,c
 10475   001FDA  0E00               	movlw	0
 10476   001FDC  6E04               	movwf	(___fladd@b+3)^0,c
 10477   001FDE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10478   001FE2  EF19  F010         	goto	l1196
 10479   001FE6                     l1198:
 10480   001FE6  A010               	btfss	___fladd@grs^0,0,c
 10481   001FE8  EFF8  F00F         	goto	u3011
 10482   001FEC  EFFA  F00F         	goto	u3010
 10483   001FF0                     u3011:
 10484   001FF0  EF00  F010         	goto	l3638
 10485   001FF4                     u3010:
 10486   001FF4  90D8               	bcf	status,0,c
 10487   001FF6  3010               	rrcf	___fladd@grs^0,w,c
 10488   001FF8  0901               	iorlw	1
 10489   001FFA  6E10               	movwf	___fladd@grs^0,c
 10490   001FFC  EF02  F010         	goto	l3640
 10491   002000                     l3638:
 10492   002000  90D8               	bcf	status,0,c
 10493   002002  3210               	rrcf	___fladd@grs^0,f,c
 10494   002004                     l3640:
 10495   002004  A001               	btfss	___fladd@b^0,0,c
 10496   002006  EF07  F010         	goto	u3021
 10497   00200A  EF09  F010         	goto	u3020
 10498   00200E                     u3021:
 10499   00200E  EF0A  F010         	goto	l3644
 10500   002012                     u3020:
 10501   002012  8E10               	bsf	___fladd@grs^0,7,c
 10502   002014                     l3644:
 10503   002014  3404               	rlcf	(___fladd@b+3)^0,w,c
 10504   002016  3204               	rrcf	(___fladd@b+3)^0,f,c
 10505   002018  3203               	rrcf	(___fladd@b+2)^0,f,c
 10506   00201A  3202               	rrcf	(___fladd@b+1)^0,f,c
 10507   00201C  3201               	rrcf	___fladd@b^0,f,c
 10508   00201E  2A0F               	incf	___fladd@bexp^0,f,c
 10509   002020                     l1197:
 10510   002020  500E               	movf	___fladd@aexp^0,w,c
 10511   002022  5C0F               	subwf	___fladd@bexp^0,w,c
 10512   002024  A0D8               	btfss	status,0,c
 10513   002026  EF17  F010         	goto	u3031
 10514   00202A  EF19  F010         	goto	u3030
 10515   00202E                     u3031:
 10516   00202E  EFF3  F00F         	goto	l1198
 10517   002032                     u3030:
 10518   002032                     l1196:
 10519   002032  BC0D               	btfsc	___fladd@signs^0,6,c
 10520   002034  EF1E  F010         	goto	u3041
 10521   002038  EF20  F010         	goto	u3040
 10522   00203C                     u3041:
 10523   00203C  EF60  F010         	goto	l3672
 10524   002040                     u3040:
 10525   002040  500F               	movf	___fladd@bexp^0,w,c
 10526   002042  A4D8               	btfss	status,2,c
 10527   002044  EF26  F010         	goto	u3051
 10528   002048  EF28  F010         	goto	u3050
 10529   00204C                     u3051:
 10530   00204C  EF32  F010         	goto	l3654
 10531   002050                     u3050:
 10532   002050  0E00               	movlw	0
 10533   002052  6E01               	movwf	?___fladd^0,c
 10534   002054  0E00               	movlw	0
 10535   002056  6E02               	movwf	(?___fladd+1)^0,c
 10536   002058  0E00               	movlw	0
 10537   00205A  6E03               	movwf	(?___fladd+2)^0,c
 10538   00205C  0E00               	movlw	0
 10539   00205E  6E04               	movwf	(?___fladd+3)^0,c
 10540   002060  EF81  F011         	goto	l1205
 10541   002064                     l3654:
 10542   002064  5005               	movf	___fladd@a^0,w,c
 10543   002066  2601               	addwf	___fladd@b^0,f,c
 10544   002068  5006               	movf	(___fladd@a+1)^0,w,c
 10545   00206A  2202               	addwfc	(___fladd@b+1)^0,f,c
 10546   00206C  5007               	movf	(___fladd@a+2)^0,w,c
 10547   00206E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10548   002070  5008               	movf	(___fladd@a+3)^0,w,c
 10549   002072  2204               	addwfc	(___fladd@b+3)^0,f,c
 10550   002074  A004               	btfss	(___fladd@b+3)^0,0,c
 10551   002076  EF3F  F010         	goto	u3061
 10552   00207A  EF41  F010         	goto	u3060
 10553   00207E                     u3061:
 10554   00207E  EFED  F010         	goto	l3708
 10555   002082                     u3060:
 10556   002082  A010               	btfss	___fladd@grs^0,0,c
 10557   002084  EF46  F010         	goto	u3071
 10558   002088  EF48  F010         	goto	u3070
 10559   00208C                     u3071:
 10560   00208C  EF4E  F010         	goto	l3662
 10561   002090                     u3070:
 10562   002090  90D8               	bcf	status,0,c
 10563   002092  3010               	rrcf	___fladd@grs^0,w,c
 10564   002094  0901               	iorlw	1
 10565   002096  6E10               	movwf	___fladd@grs^0,c
 10566   002098  EF50  F010         	goto	l3664
 10567   00209C                     l3662:
 10568   00209C  90D8               	bcf	status,0,c
 10569   00209E  3210               	rrcf	___fladd@grs^0,f,c
 10570   0020A0                     l3664:
 10571   0020A0  A001               	btfss	___fladd@b^0,0,c
 10572   0020A2  EF55  F010         	goto	u3081
 10573   0020A6  EF57  F010         	goto	u3080
 10574   0020AA                     u3081:
 10575   0020AA  EF58  F010         	goto	l3668
 10576   0020AE                     u3080:
 10577   0020AE  8E10               	bsf	___fladd@grs^0,7,c
 10578   0020B0                     l3668:
 10579   0020B0  3404               	rlcf	(___fladd@b+3)^0,w,c
 10580   0020B2  3204               	rrcf	(___fladd@b+3)^0,f,c
 10581   0020B4  3203               	rrcf	(___fladd@b+2)^0,f,c
 10582   0020B6  3202               	rrcf	(___fladd@b+1)^0,f,c
 10583   0020B8  3201               	rrcf	___fladd@b^0,f,c
 10584   0020BA  2A0F               	incf	___fladd@bexp^0,f,c
 10585   0020BC  EFED  F010         	goto	l3708
 10586   0020C0                     l3672:
 10587   0020C0  5005               	movf	___fladd@a^0,w,c
 10588   0020C2  5C01               	subwf	___fladd@b^0,w,c
 10589   0020C4  5006               	movf	(___fladd@a+1)^0,w,c
 10590   0020C6  5802               	subwfb	(___fladd@b+1)^0,w,c
 10591   0020C8  5007               	movf	(___fladd@a+2)^0,w,c
 10592   0020CA  5803               	subwfb	(___fladd@b+2)^0,w,c
 10593   0020CC  5004               	movf	(___fladd@b+3)^0,w,c
 10594   0020CE  0A80               	xorlw	128
 10595   0020D0  6E09               	movwf	??___fladd^0,c
 10596   0020D2  5008               	movf	(___fladd@a+3)^0,w,c
 10597   0020D4  0A80               	xorlw	128
 10598   0020D6  5809               	subwfb	??___fladd^0,w,c
 10599   0020D8  B0D8               	btfsc	status,0,c
 10600   0020DA  EF71  F010         	goto	u3091
 10601   0020DE  EF73  F010         	goto	u3090
 10602   0020E2                     u3091:
 10603   0020E2  EF9E  F010         	goto	l3682
 10604   0020E6                     u3090:
 10605   0020E6  5001               	movf	___fladd@b^0,w,c
 10606   0020E8  5C05               	subwf	___fladd@a^0,w,c
 10607   0020EA  6E09               	movwf	??___fladd^0,c
 10608   0020EC  5002               	movf	(___fladd@b+1)^0,w,c
 10609   0020EE  5806               	subwfb	(___fladd@a+1)^0,w,c
 10610   0020F0  6E0A               	movwf	(??___fladd+1)^0,c
 10611   0020F2  5003               	movf	(___fladd@b+2)^0,w,c
 10612   0020F4  5807               	subwfb	(___fladd@a+2)^0,w,c
 10613   0020F6  6E0B               	movwf	(??___fladd+2)^0,c
 10614   0020F8  5004               	movf	(___fladd@b+3)^0,w,c
 10615   0020FA  5808               	subwfb	(___fladd@a+3)^0,w,c
 10616   0020FC  6E0C               	movwf	(??___fladd+3)^0,c
 10617   0020FE  0EFF               	movlw	255
 10618   002100  2409               	addwf	??___fladd^0,w,c
 10619   002102  6E01               	movwf	___fladd@b^0,c
 10620   002104  0EFF               	movlw	255
 10621   002106  200A               	addwfc	(??___fladd+1)^0,w,c
 10622   002108  6E02               	movwf	(___fladd@b+1)^0,c
 10623   00210A  0EFF               	movlw	255
 10624   00210C  200B               	addwfc	(??___fladd+2)^0,w,c
 10625   00210E  6E03               	movwf	(___fladd@b+2)^0,c
 10626   002110  0EFF               	movlw	255
 10627   002112  200C               	addwfc	(??___fladd+3)^0,w,c
 10628   002114  6E04               	movwf	(___fladd@b+3)^0,c
 10629   002116  0E80               	movlw	128
 10630   002118  1A0D               	xorwf	___fladd@signs^0,f,c
 10631   00211A  6C10               	negf	___fladd@grs^0,c
 10632   00211C  5010               	movf	___fladd@grs^0,w,c
 10633   00211E  A4D8               	btfss	status,2,c
 10634   002120  EF94  F010         	goto	u3101
 10635   002124  EF96  F010         	goto	u3100
 10636   002128                     u3101:
 10637   002128  EFA6  F010         	goto	l1213
 10638   00212C                     u3100:
 10639   00212C  0E01               	movlw	1
 10640   00212E  2601               	addwf	___fladd@b^0,f,c
 10641   002130  0E00               	movlw	0
 10642   002132  2202               	addwfc	(___fladd@b+1)^0,f,c
 10643   002134  2203               	addwfc	(___fladd@b+2)^0,f,c
 10644   002136  2204               	addwfc	(___fladd@b+3)^0,f,c
 10645   002138  EFA6  F010         	goto	l1213
 10646   00213C                     l3682:
 10647   00213C  5005               	movf	___fladd@a^0,w,c
 10648   00213E  5E01               	subwf	___fladd@b^0,f,c
 10649   002140  5006               	movf	(___fladd@a+1)^0,w,c
 10650   002142  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10651   002144  5007               	movf	(___fladd@a+2)^0,w,c
 10652   002146  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10653   002148  5008               	movf	(___fladd@a+3)^0,w,c
 10654   00214A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10655   00214C                     l1213:
 10656   00214C  5001               	movf	___fladd@b^0,w,c
 10657   00214E  1002               	iorwf	(___fladd@b+1)^0,w,c
 10658   002150  1003               	iorwf	(___fladd@b+2)^0,w,c
 10659   002152  1004               	iorwf	(___fladd@b+3)^0,w,c
 10660   002154  A4D8               	btfss	status,2,c
 10661   002156  EFAF  F010         	goto	u3111
 10662   00215A  EFB1  F010         	goto	u3110
 10663   00215E                     u3111:
 10664   00215E  EFE6  F010         	goto	l3706
 10665   002162                     u3110:
 10666   002162  5010               	movf	___fladd@grs^0,w,c
 10667   002164  A4D8               	btfss	status,2,c
 10668   002166  EFB7  F010         	goto	u3121
 10669   00216A  EFB9  F010         	goto	u3120
 10670   00216E                     u3121:
 10671   00216E  EFE6  F010         	goto	l3706
 10672   002172                     u3120:
 10673   002172  0E00               	movlw	0
 10674   002174  6E01               	movwf	?___fladd^0,c
 10675   002176  0E00               	movlw	0
 10676   002178  6E02               	movwf	(?___fladd+1)^0,c
 10677   00217A  0E00               	movlw	0
 10678   00217C  6E03               	movwf	(?___fladd+2)^0,c
 10679   00217E  0E00               	movlw	0
 10680   002180  6E04               	movwf	(?___fladd+3)^0,c
 10681   002182  EF81  F011         	goto	l1205
 10682   002186                     l3690:
 10683   002186  90D8               	bcf	status,0,c
 10684   002188  3601               	rlcf	___fladd@b^0,f,c
 10685   00218A  3602               	rlcf	(___fladd@b+1)^0,f,c
 10686   00218C  3603               	rlcf	(___fladd@b+2)^0,f,c
 10687   00218E  3604               	rlcf	(___fladd@b+3)^0,f,c
 10688   002190  AE10               	btfss	___fladd@grs^0,7,c
 10689   002192  EFCD  F010         	goto	u3131
 10690   002196  EFCF  F010         	goto	u3130
 10691   00219A                     u3131:
 10692   00219A  EFD0  F010         	goto	l3696
 10693   00219E                     u3130:
 10694   00219E  8001               	bsf	___fladd@b^0,0,c
 10695   0021A0                     l3696:
 10696   0021A0  A010               	btfss	___fladd@grs^0,0,c
 10697   0021A2  EFD5  F010         	goto	u3141
 10698   0021A6  EFD7  F010         	goto	u3140
 10699   0021AA                     u3141:
 10700   0021AA  EFDB  F010         	goto	l3700
 10701   0021AE                     u3140:
 10702   0021AE  80D8               	bsf	status,0,c
 10703   0021B0  3610               	rlcf	___fladd@grs^0,f,c
 10704   0021B2  EFDD  F010         	goto	l3702
 10705   0021B6                     l3700:
 10706   0021B6  90D8               	bcf	status,0,c
 10707   0021B8  3610               	rlcf	___fladd@grs^0,f,c
 10708   0021BA                     l3702:
 10709   0021BA  500F               	movf	___fladd@bexp^0,w,c
 10710   0021BC  B4D8               	btfsc	status,2,c
 10711   0021BE  EFE3  F010         	goto	u3151
 10712   0021C2  EFE5  F010         	goto	u3150
 10713   0021C6                     u3151:
 10714   0021C6  EFE6  F010         	goto	l3706
 10715   0021CA                     u3150:
 10716   0021CA  060F               	decf	___fladd@bexp^0,f,c
 10717   0021CC                     l3706:
 10718   0021CC  AE03               	btfss	(___fladd@b+2)^0,7,c
 10719   0021CE  EFEB  F010         	goto	u3161
 10720   0021D2  EFED  F010         	goto	u3160
 10721   0021D6                     u3161:
 10722   0021D6  EFC3  F010         	goto	l3690
 10723   0021DA                     u3160:
 10724   0021DA                     l3708:
 10725   0021DA  0E00               	movlw	0
 10726   0021DC  6E0E               	movwf	___fladd@aexp^0,c
 10727   0021DE  AE10               	btfss	___fladd@grs^0,7,c
 10728   0021E0  EFF4  F010         	goto	u3171
 10729   0021E4  EFF6  F010         	goto	u3170
 10730   0021E8                     u3171:
 10731   0021E8  EF0E  F011         	goto	l1222
 10732   0021EC                     u3170:
 10733   0021EC  C010  F009         	movff	___fladd@grs,??___fladd
 10734   0021F0  0E7F               	movlw	127
 10735   0021F2  1609               	andwf	??___fladd^0,f,c
 10736   0021F4  B4D8               	btfsc	status,2,c
 10737   0021F6  EFFF  F010         	goto	u3181
 10738   0021FA  EF01  F011         	goto	u3180
 10739   0021FE                     u3181:
 10740   0021FE  EF05  F011         	goto	l1223
 10741   002202                     u3180:
 10742   002202                     l3714:
 10743   002202  0E01               	movlw	1
 10744   002204  6E0E               	movwf	___fladd@aexp^0,c
 10745   002206  EF0E  F011         	goto	l1222
 10746   00220A                     l1223:
 10747   00220A  A001               	btfss	___fladd@b^0,0,c
 10748   00220C  EF0A  F011         	goto	u3191
 10749   002210  EF0C  F011         	goto	u3190
 10750   002214                     u3191:
 10751   002214  EF0E  F011         	goto	l1222
 10752   002218                     u3190:
 10753   002218  EF01  F011         	goto	l3714
 10754   00221C                     l1222:
 10755   00221C  500E               	movf	___fladd@aexp^0,w,c
 10756   00221E  B4D8               	btfsc	status,2,c
 10757   002220  EF14  F011         	goto	u3201
 10758   002224  EF16  F011         	goto	u3200
 10759   002228                     u3201:
 10760   002228  EF41  F011         	goto	l3726
 10761   00222C                     u3200:
 10762   00222C  0E01               	movlw	1
 10763   00222E  2601               	addwf	___fladd@b^0,f,c
 10764   002230  0E00               	movlw	0
 10765   002232  2202               	addwfc	(___fladd@b+1)^0,f,c
 10766   002234  2203               	addwfc	(___fladd@b+2)^0,f,c
 10767   002236  2204               	addwfc	(___fladd@b+3)^0,f,c
 10768   002238  A004               	btfss	(___fladd@b+3)^0,0,c
 10769   00223A  EF21  F011         	goto	u3211
 10770   00223E  EF23  F011         	goto	u3210
 10771   002242                     u3211:
 10772   002242  EF41  F011         	goto	l3726
 10773   002246                     u3210:
 10774   002246  C001  F009         	movff	___fladd@b,??___fladd
 10775   00224A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10776   00224E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10777   002252  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10778   002256  340C               	rlcf	(??___fladd+3)^0,w,c
 10779   002258  320C               	rrcf	(??___fladd+3)^0,f,c
 10780   00225A  320B               	rrcf	(??___fladd+2)^0,f,c
 10781   00225C  320A               	rrcf	(??___fladd+1)^0,f,c
 10782   00225E  3209               	rrcf	??___fladd^0,f,c
 10783   002260  C009  F001         	movff	??___fladd,___fladd@b
 10784   002264  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10785   002268  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10786   00226C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10787   002270  280F               	incf	___fladd@bexp^0,w,c
 10788   002272  B4D8               	btfsc	status,2,c
 10789   002274  EF3E  F011         	goto	u3221
 10790   002278  EF40  F011         	goto	u3220
 10791   00227C                     u3221:
 10792   00227C  EF41  F011         	goto	l3726
 10793   002280                     u3220:
 10794   002280  2A0F               	incf	___fladd@bexp^0,f,c
 10795   002282                     l3726:
 10796   002282  280F               	incf	___fladd@bexp^0,w,c
 10797   002284  B4D8               	btfsc	status,2,c
 10798   002286  EF47  F011         	goto	u3231
 10799   00228A  EF49  F011         	goto	u3230
 10800   00228E                     u3231:
 10801   00228E  EF51  F011         	goto	l3730
 10802   002292                     u3230:
 10803   002292  500F               	movf	___fladd@bexp^0,w,c
 10804   002294  A4D8               	btfss	status,2,c
 10805   002296  EF4F  F011         	goto	u3241
 10806   00229A  EF51  F011         	goto	u3240
 10807   00229E                     u3241:
 10808   00229E  EF63  F011         	goto	l3734
 10809   0022A2                     u3240:
 10810   0022A2                     l3730:
 10811   0022A2  0E00               	movlw	0
 10812   0022A4  6E01               	movwf	___fladd@b^0,c
 10813   0022A6  0E00               	movlw	0
 10814   0022A8  6E02               	movwf	(___fladd@b+1)^0,c
 10815   0022AA  0E00               	movlw	0
 10816   0022AC  6E03               	movwf	(___fladd@b+2)^0,c
 10817   0022AE  0E00               	movlw	0
 10818   0022B0  6E04               	movwf	(___fladd@b+3)^0,c
 10819   0022B2  500F               	movf	___fladd@bexp^0,w,c
 10820   0022B4  A4D8               	btfss	status,2,c
 10821   0022B6  EF5F  F011         	goto	u3251
 10822   0022BA  EF61  F011         	goto	u3250
 10823   0022BE                     u3251:
 10824   0022BE  EF63  F011         	goto	l3734
 10825   0022C2                     u3250:
 10826   0022C2  0E00               	movlw	0
 10827   0022C4  6E0D               	movwf	___fladd@signs^0,c
 10828   0022C6                     l3734:
 10829   0022C6  A00F               	btfss	___fladd@bexp^0,0,c
 10830   0022C8  EF68  F011         	goto	u3261
 10831   0022CC  EF6A  F011         	goto	u3260
 10832   0022D0                     u3261:
 10833   0022D0  EF6D  F011         	goto	l3738
 10834   0022D4                     u3260:
 10835   0022D4  8E03               	bsf	(___fladd@b+2)^0,7,c
 10836   0022D6  EF6E  F011         	goto	l3740
 10837   0022DA                     l3738:
 10838   0022DA  9E03               	bcf	(___fladd@b+2)^0,7,c
 10839   0022DC                     l3740:
 10840   0022DC  90D8               	bcf	status,0,c
 10841   0022DE  300F               	rrcf	___fladd@bexp^0,w,c
 10842   0022E0  6E04               	movwf	(___fladd@b+3)^0,c
 10843   0022E2  AE0D               	btfss	___fladd@signs^0,7,c
 10844   0022E4  EF76  F011         	goto	u3271
 10845   0022E8  EF78  F011         	goto	u3270
 10846   0022EC                     u3271:
 10847   0022EC  EF79  F011         	goto	l3746
 10848   0022F0                     u3270:
 10849   0022F0  8E04               	bsf	(___fladd@b+3)^0,7,c
 10850   0022F2                     l3746:
 10851   0022F2  C001  F001         	movff	___fladd@b,?___fladd
 10852   0022F6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10853   0022FA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10854   0022FE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10855   002302                     l1205:
 10856   002302  0012               	return		;funcret
 10857   002304                     __end_of___fladd:
 10858                           	callstack 0
 10859                           
 10860 ;; *************** function ___flmul *****************
 10861 ;; Defined at:
 10862 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  b               4   49[COMRAM] unsigned char 
 10865 ;;  a               4   53[COMRAM] unsigned char 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  prod            4   68[COMRAM] struct .
 10868 ;;  grs             4   62[COMRAM] unsigned long 
 10869 ;;  temp            2   72[COMRAM] struct .
 10870 ;;  bexp            1   67[COMRAM] unsigned char 
 10871 ;;  aexp            1   66[COMRAM] unsigned char 
 10872 ;;  sign            1   61[COMRAM] unsigned char 
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  4   49[COMRAM] unsigned char 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, prodl, prodh
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;Total ram usage:       25 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 1
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_Colour_decider
 10893 ;;		_turnRight45
 10894 ;;		_turnLeft45
 10895 ;;		_reverseOneBlock
 10896 ;;		_ForwardOneBlock
 10897 ;;		_Forwardhalfblock
 10898 ;;		_Backhalfblock
 10899 ;; This function uses a non-reentrant model
 10900 ;;
 10901                           
 10902                           	psect	text66
 10903   002304                     __ptext66:
 10904                           	callstack 0
 10905   002304                     ___flmul:
 10906                           	callstack 28
 10907   002304  5035               	movf	(___flmul@b+3)^0,w,c
 10908   002306  0B80               	andlw	128
 10909   002308  6E3E               	movwf	___flmul@sign^0,c
 10910   00230A  5035               	movf	(___flmul@b+3)^0,w,c
 10911   00230C  2435               	addwf	(___flmul@b+3)^0,w,c
 10912   00230E  6E44               	movwf	___flmul@bexp^0,c
 10913   002310  AE34               	btfss	(___flmul@b+2)^0,7,c
 10914   002312  EF8D  F011         	goto	u3571
 10915   002316  EF8F  F011         	goto	u3570
 10916   00231A                     u3571:
 10917   00231A  EF90  F011         	goto	l4014
 10918   00231E                     u3570:
 10919   00231E  8044               	bsf	___flmul@bexp^0,0,c
 10920   002320                     l4014:
 10921   002320  5044               	movf	___flmul@bexp^0,w,c
 10922   002322  B4D8               	btfsc	status,2,c
 10923   002324  EF96  F011         	goto	u3581
 10924   002328  EF98  F011         	goto	u3580
 10925   00232C                     u3581:
 10926   00232C  EFAB  F011         	goto	l4022
 10927   002330                     u3580:
 10928   002330  2844               	incf	___flmul@bexp^0,w,c
 10929   002332  A4D8               	btfss	status,2,c
 10930   002334  EF9E  F011         	goto	u3591
 10931   002338  EFA0  F011         	goto	u3590
 10932   00233C                     u3591:
 10933   00233C  EFA8  F011         	goto	l4020
 10934   002340                     u3590:
 10935   002340  0E00               	movlw	0
 10936   002342  6E32               	movwf	___flmul@b^0,c
 10937   002344  0E00               	movlw	0
 10938   002346  6E33               	movwf	(___flmul@b+1)^0,c
 10939   002348  0E00               	movlw	0
 10940   00234A  6E34               	movwf	(___flmul@b+2)^0,c
 10941   00234C  0E00               	movlw	0
 10942   00234E  6E35               	movwf	(___flmul@b+3)^0,c
 10943   002350                     l4020:
 10944   002350  8E34               	bsf	(___flmul@b+2)^0,7,c
 10945   002352  EFB3  F011         	goto	l4024
 10946   002356                     l4022:
 10947   002356  0E00               	movlw	0
 10948   002358  6E32               	movwf	___flmul@b^0,c
 10949   00235A  0E00               	movlw	0
 10950   00235C  6E33               	movwf	(___flmul@b+1)^0,c
 10951   00235E  0E00               	movlw	0
 10952   002360  6E34               	movwf	(___flmul@b+2)^0,c
 10953   002362  0E00               	movlw	0
 10954   002364  6E35               	movwf	(___flmul@b+3)^0,c
 10955   002366                     l4024:
 10956   002366  5039               	movf	(___flmul@a+3)^0,w,c
 10957   002368  0B80               	andlw	128
 10958   00236A  1A3E               	xorwf	___flmul@sign^0,f,c
 10959   00236C  5039               	movf	(___flmul@a+3)^0,w,c
 10960   00236E  2439               	addwf	(___flmul@a+3)^0,w,c
 10961   002370  6E43               	movwf	___flmul@aexp^0,c
 10962   002372  AE38               	btfss	(___flmul@a+2)^0,7,c
 10963   002374  EFBE  F011         	goto	u3601
 10964   002378  EFC0  F011         	goto	u3600
 10965   00237C                     u3601:
 10966   00237C  EFC1  F011         	goto	l4032
 10967   002380                     u3600:
 10968   002380  8043               	bsf	___flmul@aexp^0,0,c
 10969   002382                     l4032:
 10970   002382  5043               	movf	___flmul@aexp^0,w,c
 10971   002384  B4D8               	btfsc	status,2,c
 10972   002386  EFC7  F011         	goto	u3611
 10973   00238A  EFC9  F011         	goto	u3610
 10974   00238E                     u3611:
 10975   00238E  EFDC  F011         	goto	l4040
 10976   002392                     u3610:
 10977   002392  2843               	incf	___flmul@aexp^0,w,c
 10978   002394  A4D8               	btfss	status,2,c
 10979   002396  EFCF  F011         	goto	u3621
 10980   00239A  EFD1  F011         	goto	u3620
 10981   00239E                     u3621:
 10982   00239E  EFD9  F011         	goto	l4038
 10983   0023A2                     u3620:
 10984   0023A2  0E00               	movlw	0
 10985   0023A4  6E36               	movwf	___flmul@a^0,c
 10986   0023A6  0E00               	movlw	0
 10987   0023A8  6E37               	movwf	(___flmul@a+1)^0,c
 10988   0023AA  0E00               	movlw	0
 10989   0023AC  6E38               	movwf	(___flmul@a+2)^0,c
 10990   0023AE  0E00               	movlw	0
 10991   0023B0  6E39               	movwf	(___flmul@a+3)^0,c
 10992   0023B2                     l4038:
 10993   0023B2  8E38               	bsf	(___flmul@a+2)^0,7,c
 10994   0023B4  EFE4  F011         	goto	l1282
 10995   0023B8                     l4040:
 10996   0023B8  0E00               	movlw	0
 10997   0023BA  6E36               	movwf	___flmul@a^0,c
 10998   0023BC  0E00               	movlw	0
 10999   0023BE  6E37               	movwf	(___flmul@a+1)^0,c
 11000   0023C0  0E00               	movlw	0
 11001   0023C2  6E38               	movwf	(___flmul@a+2)^0,c
 11002   0023C4  0E00               	movlw	0
 11003   0023C6  6E39               	movwf	(___flmul@a+3)^0,c
 11004   0023C8                     l1282:
 11005   0023C8  5043               	movf	___flmul@aexp^0,w,c
 11006   0023CA  B4D8               	btfsc	status,2,c
 11007   0023CC  EFEA  F011         	goto	u3631
 11008   0023D0  EFEC  F011         	goto	u3630
 11009   0023D4                     u3631:
 11010   0023D4  EFF4  F011         	goto	l4044
 11011   0023D8                     u3630:
 11012   0023D8  5044               	movf	___flmul@bexp^0,w,c
 11013   0023DA  A4D8               	btfss	status,2,c
 11014   0023DC  EFF2  F011         	goto	u3641
 11015   0023E0  EFF4  F011         	goto	u3640
 11016   0023E4                     u3641:
 11017   0023E4  EFFE  F011         	goto	l4048
 11018   0023E8                     u3640:
 11019   0023E8                     l4044:
 11020   0023E8  0E00               	movlw	0
 11021   0023EA  6E32               	movwf	?___flmul^0,c
 11022   0023EC  0E00               	movlw	0
 11023   0023EE  6E33               	movwf	(?___flmul+1)^0,c
 11024   0023F0  0E00               	movlw	0
 11025   0023F2  6E34               	movwf	(?___flmul+2)^0,c
 11026   0023F4  0E00               	movlw	0
 11027   0023F6  6E35               	movwf	(?___flmul+3)^0,c
 11028   0023F8  EF96  F013         	goto	l1286
 11029   0023FC                     l4048:
 11030   0023FC  5038               	movf	(___flmul@a+2)^0,w,c
 11031   0023FE  0232               	mulwf	___flmul@b^0,c
 11032   002400  CFF3 F049          	movff	prodl,___flmul@temp
 11033   002404  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11034   002408  5049               	movf	___flmul@temp^0,w,c
 11035   00240A  6E3F               	movwf	___flmul@grs^0,c
 11036   00240C  6A40               	clrf	(___flmul@grs+1)^0,c
 11037   00240E  6A41               	clrf	(___flmul@grs+2)^0,c
 11038   002410  6A42               	clrf	(___flmul@grs+3)^0,c
 11039   002412  504A               	movf	(___flmul@temp+1)^0,w,c
 11040   002414  6E45               	movwf	___flmul@prod^0,c
 11041   002416  6A46               	clrf	(___flmul@prod+1)^0,c
 11042   002418  6A47               	clrf	(___flmul@prod+2)^0,c
 11043   00241A  6A48               	clrf	(___flmul@prod+3)^0,c
 11044   00241C  5037               	movf	(___flmul@a+1)^0,w,c
 11045   00241E  0233               	mulwf	(___flmul@b+1)^0,c
 11046   002420  CFF3 F049          	movff	prodl,___flmul@temp
 11047   002424  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11048   002428  5049               	movf	___flmul@temp^0,w,c
 11049   00242A  263F               	addwf	___flmul@grs^0,f,c
 11050   00242C  0E00               	movlw	0
 11051   00242E  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11052   002430  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11053   002432  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11054   002434  504A               	movf	(___flmul@temp+1)^0,w,c
 11055   002436  2645               	addwf	___flmul@prod^0,f,c
 11056   002438  0E00               	movlw	0
 11057   00243A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11058   00243C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11059   00243E  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11060   002440  5036               	movf	___flmul@a^0,w,c
 11061   002442  0234               	mulwf	(___flmul@b+2)^0,c
 11062   002444  CFF3 F049          	movff	prodl,___flmul@temp
 11063   002448  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11064   00244C  5049               	movf	___flmul@temp^0,w,c
 11065   00244E  263F               	addwf	___flmul@grs^0,f,c
 11066   002450  0E00               	movlw	0
 11067   002452  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11068   002454  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11069   002456  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11070   002458  504A               	movf	(___flmul@temp+1)^0,w,c
 11071   00245A  2645               	addwf	___flmul@prod^0,f,c
 11072   00245C  0E00               	movlw	0
 11073   00245E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11074   002460  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11075   002462  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11076   002464  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11077   002468  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11078   00246C  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11079   002470  6A3F               	clrf	___flmul@grs^0,c
 11080   002472  5036               	movf	___flmul@a^0,w,c
 11081   002474  0233               	mulwf	(___flmul@b+1)^0,c
 11082   002476  CFF3 F049          	movff	prodl,___flmul@temp
 11083   00247A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11084   00247E  5049               	movf	___flmul@temp^0,w,c
 11085   002480  263F               	addwf	___flmul@grs^0,f,c
 11086   002482  504A               	movf	(___flmul@temp+1)^0,w,c
 11087   002484  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11088   002486  0E00               	movlw	0
 11089   002488  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11090   00248A  0E00               	movlw	0
 11091   00248C  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11092   00248E  5037               	movf	(___flmul@a+1)^0,w,c
 11093   002490  0232               	mulwf	___flmul@b^0,c
 11094   002492  CFF3 F049          	movff	prodl,___flmul@temp
 11095   002496  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11096   00249A  5049               	movf	___flmul@temp^0,w,c
 11097   00249C  263F               	addwf	___flmul@grs^0,f,c
 11098   00249E  504A               	movf	(___flmul@temp+1)^0,w,c
 11099   0024A0  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11100   0024A2  0E00               	movlw	0
 11101   0024A4  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11102   0024A6  0E00               	movlw	0
 11103   0024A8  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11104   0024AA  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11105   0024AE  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11106   0024B2  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11107   0024B6  6A3F               	clrf	___flmul@grs^0,c
 11108   0024B8  5036               	movf	___flmul@a^0,w,c
 11109   0024BA  0232               	mulwf	___flmul@b^0,c
 11110   0024BC  CFF3 F049          	movff	prodl,___flmul@temp
 11111   0024C0  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11112   0024C4  5049               	movf	___flmul@temp^0,w,c
 11113   0024C6  263F               	addwf	___flmul@grs^0,f,c
 11114   0024C8  504A               	movf	(___flmul@temp+1)^0,w,c
 11115   0024CA  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11116   0024CC  0E00               	movlw	0
 11117   0024CE  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11118   0024D0  0E00               	movlw	0
 11119   0024D2  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11120   0024D4  5038               	movf	(___flmul@a+2)^0,w,c
 11121   0024D6  0233               	mulwf	(___flmul@b+1)^0,c
 11122   0024D8  CFF3 F049          	movff	prodl,___flmul@temp
 11123   0024DC  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11124   0024E0  5049               	movf	___flmul@temp^0,w,c
 11125   0024E2  2645               	addwf	___flmul@prod^0,f,c
 11126   0024E4  504A               	movf	(___flmul@temp+1)^0,w,c
 11127   0024E6  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11128   0024E8  0E00               	movlw	0
 11129   0024EA  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11130   0024EC  0E00               	movlw	0
 11131   0024EE  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11132   0024F0  5037               	movf	(___flmul@a+1)^0,w,c
 11133   0024F2  0234               	mulwf	(___flmul@b+2)^0,c
 11134   0024F4  CFF3 F049          	movff	prodl,___flmul@temp
 11135   0024F8  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11136   0024FC  5049               	movf	___flmul@temp^0,w,c
 11137   0024FE  2645               	addwf	___flmul@prod^0,f,c
 11138   002500  504A               	movf	(___flmul@temp+1)^0,w,c
 11139   002502  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11140   002504  0E00               	movlw	0
 11141   002506  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11142   002508  0E00               	movlw	0
 11143   00250A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11144   00250C  5038               	movf	(___flmul@a+2)^0,w,c
 11145   00250E  0234               	mulwf	(___flmul@b+2)^0,c
 11146   002510  CFF3 F049          	movff	prodl,___flmul@temp
 11147   002514  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11148   002518  5049               	movf	___flmul@temp^0,w,c
 11149   00251A  6E3A               	movwf	??___flmul^0,c
 11150   00251C  504A               	movf	(___flmul@temp+1)^0,w,c
 11151   00251E  6E3B               	movwf	(??___flmul+1)^0,c
 11152   002520  6A3C               	clrf	(??___flmul+2)^0,c
 11153   002522  6A3D               	clrf	(??___flmul+3)^0,c
 11154   002524  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11155   002528  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11156   00252C  C03A  F03B         	movff	??___flmul,??___flmul+1
 11157   002530  6A3A               	clrf	??___flmul^0,c
 11158   002532  503A               	movf	??___flmul^0,w,c
 11159   002534  2645               	addwf	___flmul@prod^0,f,c
 11160   002536  503B               	movf	(??___flmul+1)^0,w,c
 11161   002538  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11162   00253A  503C               	movf	(??___flmul+2)^0,w,c
 11163   00253C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11164   00253E  503D               	movf	(??___flmul+3)^0,w,c
 11165   002540  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11166   002542  C03F  F03A         	movff	___flmul@grs,??___flmul
 11167   002546  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11168   00254A  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11169   00254E  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11170   002552  0E19               	movlw	25
 11171   002554  EFB1  F012         	goto	u3650
 11172   002558                     u3655:
 11173   002558  90D8               	bcf	status,0,c
 11174   00255A  323D               	rrcf	(??___flmul+3)^0,f,c
 11175   00255C  323C               	rrcf	(??___flmul+2)^0,f,c
 11176   00255E  323B               	rrcf	(??___flmul+1)^0,f,c
 11177   002560  323A               	rrcf	??___flmul^0,f,c
 11178   002562                     u3650:
 11179   002562  2EE8               	decfsz	wreg,f,c
 11180   002564  EFAC  F012         	goto	u3655
 11181   002568  503A               	movf	??___flmul^0,w,c
 11182   00256A  2645               	addwf	___flmul@prod^0,f,c
 11183   00256C  503B               	movf	(??___flmul+1)^0,w,c
 11184   00256E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11185   002570  503C               	movf	(??___flmul+2)^0,w,c
 11186   002572  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11187   002574  503D               	movf	(??___flmul+3)^0,w,c
 11188   002576  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11189   002578  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11190   00257C  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11191   002580  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11192   002584  6A3F               	clrf	___flmul@grs^0,c
 11193   002586  5043               	movf	___flmul@aexp^0,w,c
 11194   002588  C044  F03A         	movff	___flmul@bexp,??___flmul
 11195   00258C  6A3B               	clrf	(??___flmul+1)^0,c
 11196   00258E  263A               	addwf	??___flmul^0,f,c
 11197   002590  0E00               	movlw	0
 11198   002592  223B               	addwfc	(??___flmul+1)^0,f,c
 11199   002594  0E82               	movlw	130
 11200   002596  243A               	addwf	??___flmul^0,w,c
 11201   002598  6E49               	movwf	___flmul@temp^0,c
 11202   00259A  0EFF               	movlw	255
 11203   00259C  203B               	addwfc	(??___flmul+1)^0,w,c
 11204   00259E  6E4A               	movwf	(___flmul@temp+1)^0,c
 11205   0025A0  EFE7  F012         	goto	l4096
 11206   0025A4                     l4090:
 11207   0025A4  90D8               	bcf	status,0,c
 11208   0025A6  3645               	rlcf	___flmul@prod^0,f,c
 11209   0025A8  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11210   0025AA  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11211   0025AC  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11212   0025AE  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11213   0025B0  EFDC  F012         	goto	u3661
 11214   0025B4  EFDE  F012         	goto	u3660
 11215   0025B8                     u3661:
 11216   0025B8  EFDF  F012         	goto	l1289
 11217   0025BC                     u3660:
 11218   0025BC  8045               	bsf	___flmul@prod^0,0,c
 11219   0025BE                     l1289:
 11220   0025BE  90D8               	bcf	status,0,c
 11221   0025C0  363F               	rlcf	___flmul@grs^0,f,c
 11222   0025C2  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11223   0025C4  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11224   0025C6  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11225   0025C8  0649               	decf	___flmul@temp^0,f,c
 11226   0025CA  A0D8               	btfss	status,0,c
 11227   0025CC  064A               	decf	(___flmul@temp+1)^0,f,c
 11228   0025CE                     l4096:
 11229   0025CE  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11230   0025D0  EFEC  F012         	goto	u3671
 11231   0025D4  EFEE  F012         	goto	u3670
 11232   0025D8                     u3671:
 11233   0025D8  EFD2  F012         	goto	l4090
 11234   0025DC                     u3670:
 11235   0025DC  0E00               	movlw	0
 11236   0025DE  6E43               	movwf	___flmul@aexp^0,c
 11237   0025E0  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11238   0025E2  EFF5  F012         	goto	u3681
 11239   0025E6  EFF7  F012         	goto	u3680
 11240   0025EA                     u3681:
 11241   0025EA  EF1B  F013         	goto	l1291
 11242   0025EE                     u3680:
 11243   0025EE  0EFF               	movlw	255
 11244   0025F0  143F               	andwf	___flmul@grs^0,w,c
 11245   0025F2  6E3A               	movwf	??___flmul^0,c
 11246   0025F4  0EFF               	movlw	255
 11247   0025F6  1440               	andwf	(___flmul@grs+1)^0,w,c
 11248   0025F8  6E3B               	movwf	(??___flmul+1)^0,c
 11249   0025FA  0EFF               	movlw	255
 11250   0025FC  1441               	andwf	(___flmul@grs+2)^0,w,c
 11251   0025FE  6E3C               	movwf	(??___flmul+2)^0,c
 11252   002600  0E7F               	movlw	127
 11253   002602  1442               	andwf	(___flmul@grs+3)^0,w,c
 11254   002604  6E3D               	movwf	(??___flmul+3)^0,c
 11255   002606  503A               	movf	??___flmul^0,w,c
 11256   002608  103B               	iorwf	(??___flmul+1)^0,w,c
 11257   00260A  103C               	iorwf	(??___flmul+2)^0,w,c
 11258   00260C  103D               	iorwf	(??___flmul+3)^0,w,c
 11259   00260E  B4D8               	btfsc	status,2,c
 11260   002610  EF0C  F013         	goto	u3691
 11261   002614  EF0E  F013         	goto	u3690
 11262   002618                     u3691:
 11263   002618  EF12  F013         	goto	l1292
 11264   00261C                     u3690:
 11265   00261C                     l4104:
 11266   00261C  0E01               	movlw	1
 11267   00261E  6E43               	movwf	___flmul@aexp^0,c
 11268   002620  EF1B  F013         	goto	l1291
 11269   002624                     l1292:
 11270   002624  A045               	btfss	___flmul@prod^0,0,c
 11271   002626  EF17  F013         	goto	u3701
 11272   00262A  EF19  F013         	goto	u3700
 11273   00262E                     u3701:
 11274   00262E  EF1B  F013         	goto	l1291
 11275   002632                     u3700:
 11276   002632  EF0E  F013         	goto	l4104
 11277   002636                     l1291:
 11278   002636  5043               	movf	___flmul@aexp^0,w,c
 11279   002638  B4D8               	btfsc	status,2,c
 11280   00263A  EF21  F013         	goto	u3711
 11281   00263E  EF23  F013         	goto	u3710
 11282   002642                     u3711:
 11283   002642  EF47  F013         	goto	l4116
 11284   002646                     u3710:
 11285   002646  0E01               	movlw	1
 11286   002648  2645               	addwf	___flmul@prod^0,f,c
 11287   00264A  0E00               	movlw	0
 11288   00264C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11289   00264E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11290   002650  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11291   002652  A048               	btfss	(___flmul@prod+3)^0,0,c
 11292   002654  EF2E  F013         	goto	u3721
 11293   002658  EF30  F013         	goto	u3720
 11294   00265C                     u3721:
 11295   00265C  EF47  F013         	goto	l4116
 11296   002660                     u3720:
 11297   002660  C045  F03A         	movff	___flmul@prod,??___flmul
 11298   002664  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11299   002668  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11300   00266C  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11301   002670  343D               	rlcf	(??___flmul+3)^0,w,c
 11302   002672  323D               	rrcf	(??___flmul+3)^0,f,c
 11303   002674  323C               	rrcf	(??___flmul+2)^0,f,c
 11304   002676  323B               	rrcf	(??___flmul+1)^0,f,c
 11305   002678  323A               	rrcf	??___flmul^0,f,c
 11306   00267A  C03A  F045         	movff	??___flmul,___flmul@prod
 11307   00267E  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11308   002682  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11309   002686  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11310   00268A  4A49               	infsnz	___flmul@temp^0,f,c
 11311   00268C  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11312   00268E                     l4116:
 11313   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11314   002690  EF52  F013         	goto	u3731
 11315   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 11316   002696  E108               	bnz	u3730
 11317   002698  2849               	incf	___flmul@temp^0,w,c
 11318   00269A  A0D8               	btfss	status,0,c
 11319   00269C  EF52  F013         	goto	u3731
 11320   0026A0  EF54  F013         	goto	u3730
 11321   0026A4                     u3731:
 11322   0026A4  EF5E  F013         	goto	l4120
 11323   0026A8                     u3730:
 11324   0026A8  0E00               	movlw	0
 11325   0026AA  6E45               	movwf	___flmul@prod^0,c
 11326   0026AC  0E00               	movlw	0
 11327   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 11328   0026B0  0E80               	movlw	128
 11329   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 11330   0026B4  0E7F               	movlw	127
 11331   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 11332   0026B8  EF8C  F013         	goto	l4132
 11333   0026BC                     l4120:
 11334   0026BC  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11335   0026BE  EF6B  F013         	goto	u3740
 11336   0026C2  504A               	movf	(___flmul@temp+1)^0,w,c
 11337   0026C4  E106               	bnz	u3741
 11338   0026C6  0449               	decf	___flmul@temp^0,w,c
 11339   0026C8  B0D8               	btfsc	status,0,c
 11340   0026CA  EF69  F013         	goto	u3741
 11341   0026CE  EF6B  F013         	goto	u3740
 11342   0026D2                     u3741:
 11343   0026D2  EF77  F013         	goto	l1299
 11344   0026D6                     u3740:
 11345   0026D6  0E00               	movlw	0
 11346   0026D8  6E45               	movwf	___flmul@prod^0,c
 11347   0026DA  0E00               	movlw	0
 11348   0026DC  6E46               	movwf	(___flmul@prod+1)^0,c
 11349   0026DE  0E00               	movlw	0
 11350   0026E0  6E47               	movwf	(___flmul@prod+2)^0,c
 11351   0026E2  0E00               	movlw	0
 11352   0026E4  6E48               	movwf	(___flmul@prod+3)^0,c
 11353   0026E6  0E00               	movlw	0
 11354   0026E8  6E3E               	movwf	___flmul@sign^0,c
 11355   0026EA  EF8C  F013         	goto	l4132
 11356   0026EE                     l1299:
 11357   0026EE  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11358   0026F2  0EFF               	movlw	255
 11359   0026F4  1645               	andwf	___flmul@prod^0,f,c
 11360   0026F6  0EFF               	movlw	255
 11361   0026F8  1646               	andwf	(___flmul@prod+1)^0,f,c
 11362   0026FA  0E7F               	movlw	127
 11363   0026FC  1647               	andwf	(___flmul@prod+2)^0,f,c
 11364   0026FE  0E00               	movlw	0
 11365   002700  1648               	andwf	(___flmul@prod+3)^0,f,c
 11366   002702  A044               	btfss	___flmul@bexp^0,0,c
 11367   002704  EF86  F013         	goto	u3751
 11368   002708  EF88  F013         	goto	u3750
 11369   00270C                     u3751:
 11370   00270C  EF89  F013         	goto	l4130
 11371   002710                     u3750:
 11372   002710  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11373   002712                     l4130:
 11374   002712  90D8               	bcf	status,0,c
 11375   002714  3044               	rrcf	___flmul@bexp^0,w,c
 11376   002716  6E48               	movwf	(___flmul@prod+3)^0,c
 11377   002718                     l4132:
 11378   002718  503E               	movf	___flmul@sign^0,w,c
 11379   00271A  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11380   00271C  C045  F032         	movff	___flmul@prod,?___flmul
 11381   002720  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11382   002724  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11383   002728  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11384   00272C                     l1286:
 11385   00272C  0012               	return		;funcret
 11386   00272E                     __end_of___flmul:
 11387                           	callstack 0
 11388                           
 11389 ;; *************** function ___flge *****************
 11390 ;; Defined at:
 11391 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  ff1             4    0[COMRAM] unsigned char 
 11394 ;;  ff2             4    4[COMRAM] unsigned char 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;		None               void
 11399 ;; Registers used:
 11400 ;;		wreg, status,2, status,0
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11406 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;Total ram usage:       12 bytes
 11411 ;; Hardware stack levels used: 1
 11412 ;; Hardware stack levels required when called: 1
 11413 ;; This function calls:
 11414 ;;		Nothing
 11415 ;; This function is called by:
 11416 ;;		_Colour_decider
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text67
 11421   003A7C                     __ptext67:
 11422                           	callstack 0
 11423   003A7C                     ___flge:
 11424                           	callstack 28
 11425   003A7C  0E00               	movlw	0
 11426   003A7E  1401               	andwf	___flge@ff1^0,w,c
 11427   003A80  6E09               	movwf	??___flge^0,c
 11428   003A82  0E00               	movlw	0
 11429   003A84  1402               	andwf	(___flge@ff1+1)^0,w,c
 11430   003A86  6E0A               	movwf	(??___flge+1)^0,c
 11431   003A88  0E80               	movlw	128
 11432   003A8A  1403               	andwf	(___flge@ff1+2)^0,w,c
 11433   003A8C  6E0B               	movwf	(??___flge+2)^0,c
 11434   003A8E  0E7F               	movlw	127
 11435   003A90  1404               	andwf	(___flge@ff1+3)^0,w,c
 11436   003A92  6E0C               	movwf	(??___flge+3)^0,c
 11437   003A94  5009               	movf	??___flge^0,w,c
 11438   003A96  100A               	iorwf	(??___flge+1)^0,w,c
 11439   003A98  100B               	iorwf	(??___flge+2)^0,w,c
 11440   003A9A  100C               	iorwf	(??___flge+3)^0,w,c
 11441   003A9C  A4D8               	btfss	status,2,c
 11442   003A9E  EF53  F01D         	goto	u3791
 11443   003AA2  EF55  F01D         	goto	u3790
 11444   003AA6                     u3791:
 11445   003AA6  EF5D  F01D         	goto	l4164
 11446   003AAA                     u3790:
 11447   003AAA  0E00               	movlw	0
 11448   003AAC  6E01               	movwf	___flge@ff1^0,c
 11449   003AAE  0E00               	movlw	0
 11450   003AB0  6E02               	movwf	(___flge@ff1+1)^0,c
 11451   003AB2  0E00               	movlw	0
 11452   003AB4  6E03               	movwf	(___flge@ff1+2)^0,c
 11453   003AB6  0E00               	movlw	0
 11454   003AB8  6E04               	movwf	(___flge@ff1+3)^0,c
 11455   003ABA                     l4164:
 11456   003ABA  0E00               	movlw	0
 11457   003ABC  1405               	andwf	___flge@ff2^0,w,c
 11458   003ABE  6E09               	movwf	??___flge^0,c
 11459   003AC0  0E00               	movlw	0
 11460   003AC2  1406               	andwf	(___flge@ff2+1)^0,w,c
 11461   003AC4  6E0A               	movwf	(??___flge+1)^0,c
 11462   003AC6  0E80               	movlw	128
 11463   003AC8  1407               	andwf	(___flge@ff2+2)^0,w,c
 11464   003ACA  6E0B               	movwf	(??___flge+2)^0,c
 11465   003ACC  0E7F               	movlw	127
 11466   003ACE  1408               	andwf	(___flge@ff2+3)^0,w,c
 11467   003AD0  6E0C               	movwf	(??___flge+3)^0,c
 11468   003AD2  5009               	movf	??___flge^0,w,c
 11469   003AD4  100A               	iorwf	(??___flge+1)^0,w,c
 11470   003AD6  100B               	iorwf	(??___flge+2)^0,w,c
 11471   003AD8  100C               	iorwf	(??___flge+3)^0,w,c
 11472   003ADA  A4D8               	btfss	status,2,c
 11473   003ADC  EF72  F01D         	goto	u3801
 11474   003AE0  EF74  F01D         	goto	u3800
 11475   003AE4                     u3801:
 11476   003AE4  EF7C  F01D         	goto	l4168
 11477   003AE8                     u3800:
 11478   003AE8  0E00               	movlw	0
 11479   003AEA  6E05               	movwf	___flge@ff2^0,c
 11480   003AEC  0E00               	movlw	0
 11481   003AEE  6E06               	movwf	(___flge@ff2+1)^0,c
 11482   003AF0  0E00               	movlw	0
 11483   003AF2  6E07               	movwf	(___flge@ff2+2)^0,c
 11484   003AF4  0E00               	movlw	0
 11485   003AF6  6E08               	movwf	(___flge@ff2+3)^0,c
 11486   003AF8                     l4168:
 11487   003AF8  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11488   003AFA  EF81  F01D         	goto	u3811
 11489   003AFE  EF83  F01D         	goto	u3810
 11490   003B02                     u3811:
 11491   003B02  EF8C  F01D         	goto	l4172
 11492   003B06                     u3810:
 11493   003B06  6C01               	negf	___flge@ff1^0,c
 11494   003B08  1E02               	comf	(___flge@ff1+1)^0,f,c
 11495   003B0A  B0D8               	btfsc	status,0,c
 11496   003B0C  2A02               	incf	(___flge@ff1+1)^0,f,c
 11497   003B0E  1E03               	comf	(___flge@ff1+2)^0,f,c
 11498   003B10  B0D8               	btfsc	status,0,c
 11499   003B12  2A03               	incf	(___flge@ff1+2)^0,f,c
 11500   003B14  0E80               	movlw	128
 11501   003B16  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11502   003B18                     l4172:
 11503   003B18  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11504   003B1A  EF91  F01D         	goto	u3821
 11505   003B1E  EF93  F01D         	goto	u3820
 11506   003B22                     u3821:
 11507   003B22  EF9C  F01D         	goto	l933
 11508   003B26                     u3820:
 11509   003B26  6C05               	negf	___flge@ff2^0,c
 11510   003B28  1E06               	comf	(___flge@ff2+1)^0,f,c
 11511   003B2A  B0D8               	btfsc	status,0,c
 11512   003B2C  2A06               	incf	(___flge@ff2+1)^0,f,c
 11513   003B2E  1E07               	comf	(___flge@ff2+2)^0,f,c
 11514   003B30  B0D8               	btfsc	status,0,c
 11515   003B32  2A07               	incf	(___flge@ff2+2)^0,f,c
 11516   003B34  0E80               	movlw	128
 11517   003B36  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11518   003B38                     l933:
 11519   003B38  0E00               	movlw	0
 11520   003B3A  1A01               	xorwf	___flge@ff1^0,f,c
 11521   003B3C  0E00               	movlw	0
 11522   003B3E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11523   003B40  0E00               	movlw	0
 11524   003B42  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11525   003B44  0E80               	movlw	128
 11526   003B46  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11527   003B48  0E00               	movlw	0
 11528   003B4A  1A05               	xorwf	___flge@ff2^0,f,c
 11529   003B4C  0E00               	movlw	0
 11530   003B4E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11531   003B50  0E00               	movlw	0
 11532   003B52  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11533   003B54  0E80               	movlw	128
 11534   003B56  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11535   003B58  5005               	movf	___flge@ff2^0,w,c
 11536   003B5A  5C01               	subwf	___flge@ff1^0,w,c
 11537   003B5C  5006               	movf	(___flge@ff2+1)^0,w,c
 11538   003B5E  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11539   003B60  5007               	movf	(___flge@ff2+2)^0,w,c
 11540   003B62  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11541   003B64  5008               	movf	(___flge@ff2+3)^0,w,c
 11542   003B66  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11543   003B68  B0D8               	btfsc	status,0,c
 11544   003B6A  EFB9  F01D         	goto	u3831
 11545   003B6E  EFBB  F01D         	goto	u3830
 11546   003B72                     u3831:
 11547   003B72  EFBE  F01D         	goto	l4178
 11548   003B76                     u3830:
 11549   003B76  90D8               	bcf	status,0,c
 11550   003B78  EFBF  F01D         	goto	l938
 11551   003B7C                     l4178:
 11552   003B7C  80D8               	bsf	status,0,c
 11553   003B7E                     l938:
 11554   003B7E  0012               	return		;funcret
 11555   003B80                     __end_of___flge:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function ___fleq *****************
 11559 ;; Defined at:
 11560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  ff1             4   24[COMRAM] unsigned char 
 11563 ;;  ff2             4   28[COMRAM] unsigned char 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;		None               void
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11575 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;Total ram usage:       12 bytes
 11580 ;; Hardware stack levels used: 1
 11581 ;; Hardware stack levels required when called: 1
 11582 ;; This function calls:
 11583 ;;		Nothing
 11584 ;; This function is called by:
 11585 ;;		_Colour_decider
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text68
 11590   003E60                     __ptext68:
 11591                           	callstack 0
 11592   003E60                     ___fleq:
 11593                           	callstack 28
 11594   003E60  0E00               	movlw	0
 11595   003E62  1419               	andwf	___fleq@ff1^0,w,c
 11596   003E64  6E21               	movwf	??___fleq^0,c
 11597   003E66  0E00               	movlw	0
 11598   003E68  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11599   003E6A  6E22               	movwf	(??___fleq+1)^0,c
 11600   003E6C  0E80               	movlw	128
 11601   003E6E  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11602   003E70  6E23               	movwf	(??___fleq+2)^0,c
 11603   003E72  0E7F               	movlw	127
 11604   003E74  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11605   003E76  6E24               	movwf	(??___fleq+3)^0,c
 11606   003E78  5021               	movf	??___fleq^0,w,c
 11607   003E7A  1022               	iorwf	(??___fleq+1)^0,w,c
 11608   003E7C  1023               	iorwf	(??___fleq+2)^0,w,c
 11609   003E7E  1024               	iorwf	(??___fleq+3)^0,w,c
 11610   003E80  A4D8               	btfss	status,2,c
 11611   003E82  EF45  F01F         	goto	u3761
 11612   003E86  EF47  F01F         	goto	u3760
 11613   003E8A                     u3761:
 11614   003E8A  EF4F  F01F         	goto	l4148
 11615   003E8E                     u3760:
 11616   003E8E  0E00               	movlw	0
 11617   003E90  6E19               	movwf	___fleq@ff1^0,c
 11618   003E92  0E00               	movlw	0
 11619   003E94  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11620   003E96  0E00               	movlw	0
 11621   003E98  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11622   003E9A  0E00               	movlw	0
 11623   003E9C  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11624   003E9E                     l4148:
 11625   003E9E  0E00               	movlw	0
 11626   003EA0  141D               	andwf	___fleq@ff2^0,w,c
 11627   003EA2  6E21               	movwf	??___fleq^0,c
 11628   003EA4  0E00               	movlw	0
 11629   003EA6  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11630   003EA8  6E22               	movwf	(??___fleq+1)^0,c
 11631   003EAA  0E80               	movlw	128
 11632   003EAC  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11633   003EAE  6E23               	movwf	(??___fleq+2)^0,c
 11634   003EB0  0E7F               	movlw	127
 11635   003EB2  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11636   003EB4  6E24               	movwf	(??___fleq+3)^0,c
 11637   003EB6  5021               	movf	??___fleq^0,w,c
 11638   003EB8  1022               	iorwf	(??___fleq+1)^0,w,c
 11639   003EBA  1023               	iorwf	(??___fleq+2)^0,w,c
 11640   003EBC  1024               	iorwf	(??___fleq+3)^0,w,c
 11641   003EBE  A4D8               	btfss	status,2,c
 11642   003EC0  EF64  F01F         	goto	u3771
 11643   003EC4  EF66  F01F         	goto	u3770
 11644   003EC8                     u3771:
 11645   003EC8  EF6E  F01F         	goto	l4152
 11646   003ECC                     u3770:
 11647   003ECC  0E00               	movlw	0
 11648   003ECE  6E1D               	movwf	___fleq@ff2^0,c
 11649   003ED0  0E00               	movlw	0
 11650   003ED2  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11651   003ED4  0E00               	movlw	0
 11652   003ED6  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11653   003ED8  0E00               	movlw	0
 11654   003EDA  6E20               	movwf	(___fleq@ff2+3)^0,c
 11655   003EDC                     l4152:
 11656   003EDC  501D               	movf	___fleq@ff2^0,w,c
 11657   003EDE  1819               	xorwf	___fleq@ff1^0,w,c
 11658   003EE0  E10F               	bnz	u3780
 11659   003EE2  501E               	movf	(___fleq@ff2+1)^0,w,c
 11660   003EE4  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11661   003EE6  E10C               	bnz	u3780
 11662   003EE8  501F               	movf	(___fleq@ff2+2)^0,w,c
 11663   003EEA  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11664   003EEC  E109               	bnz	u3780
 11665   003EEE  5020               	movf	(___fleq@ff2+3)^0,w,c
 11666   003EF0  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11667   003EF2  B4D8               	btfsc	status,2,c
 11668   003EF4  EF7E  F01F         	goto	u3781
 11669   003EF8  EF80  F01F         	goto	u3780
 11670   003EFC                     u3781:
 11671   003EFC  EF83  F01F         	goto	l4156
 11672   003F00                     u3780:
 11673   003F00  90D8               	bcf	status,0,c
 11674   003F02  EF84  F01F         	goto	l927
 11675   003F06                     l4156:
 11676   003F06  80D8               	bsf	status,0,c
 11677   003F08                     l927:
 11678   003F08  0012               	return		;funcret
 11679   003F0A                     __end_of___fleq:
 11680                           	callstack 0
 11681                           
 11682 ;; *************** function ___fldiv *****************
 11683 ;; Defined at:
 11684 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  b               4   24[COMRAM] unsigned char 
 11687 ;;  a               4   28[COMRAM] unsigned char 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  grs             4   43[COMRAM] unsigned long 
 11690 ;;  rem             4   36[COMRAM] unsigned long 
 11691 ;;  new_exp         2   41[COMRAM] short 
 11692 ;;  aexp            1   48[COMRAM] unsigned char 
 11693 ;;  bexp            1   47[COMRAM] unsigned char 
 11694 ;;  sign            1   40[COMRAM] unsigned char 
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  4   24[COMRAM] unsigned char 
 11697 ;; Registers used:
 11698 ;;		wreg, status,2, status,0
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11704 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11706 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11707 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11708 ;;Total ram usage:       25 bytes
 11709 ;; Hardware stack levels used: 1
 11710 ;; Hardware stack levels required when called: 1
 11711 ;; This function calls:
 11712 ;;		Nothing
 11713 ;; This function is called by:
 11714 ;;		_colour_rel
 11715 ;;		_Colour_decider
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text69
 11720   00272E                     __ptext69:
 11721                           	callstack 0
 11722   00272E                     ___fldiv:
 11723                           	callstack 28
 11724   00272E  501C               	movf	(___fldiv@b+3)^0,w,c
 11725   002730  0B80               	andlw	128
 11726   002732  6E29               	movwf	___fldiv@sign^0,c
 11727   002734  501C               	movf	(___fldiv@b+3)^0,w,c
 11728   002736  241C               	addwf	(___fldiv@b+3)^0,w,c
 11729   002738  6E30               	movwf	___fldiv@bexp^0,c
 11730   00273A  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11731   00273C  EFA2  F013         	goto	u3341
 11732   002740  EFA4  F013         	goto	u3340
 11733   002744                     u3341:
 11734   002744  EFA5  F013         	goto	l3876
 11735   002748                     u3340:
 11736   002748  8030               	bsf	___fldiv@bexp^0,0,c
 11737   00274A                     l3876:
 11738   00274A  5030               	movf	___fldiv@bexp^0,w,c
 11739   00274C  B4D8               	btfsc	status,2,c
 11740   00274E  EFAB  F013         	goto	u3351
 11741   002752  EFAD  F013         	goto	u3350
 11742   002756                     u3351:
 11743   002756  EFC2  F013         	goto	l3886
 11744   00275A                     u3350:
 11745   00275A  2830               	incf	___fldiv@bexp^0,w,c
 11746   00275C  A4D8               	btfss	status,2,c
 11747   00275E  EFB3  F013         	goto	u3361
 11748   002762  EFB5  F013         	goto	u3360
 11749   002766                     u3361:
 11750   002766  EFBD  F013         	goto	l3882
 11751   00276A                     u3360:
 11752   00276A  0E00               	movlw	0
 11753   00276C  6E19               	movwf	___fldiv@b^0,c
 11754   00276E  0E00               	movlw	0
 11755   002770  6E1A               	movwf	(___fldiv@b+1)^0,c
 11756   002772  0E00               	movlw	0
 11757   002774  6E1B               	movwf	(___fldiv@b+2)^0,c
 11758   002776  0E00               	movlw	0
 11759   002778  6E1C               	movwf	(___fldiv@b+3)^0,c
 11760   00277A                     l3882:
 11761   00277A  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11762   00277C  0E00               	movlw	0
 11763   00277E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11764   002780  EFCA  F013         	goto	l3888
 11765   002784                     l3886:
 11766   002784  0E00               	movlw	0
 11767   002786  6E19               	movwf	___fldiv@b^0,c
 11768   002788  0E00               	movlw	0
 11769   00278A  6E1A               	movwf	(___fldiv@b+1)^0,c
 11770   00278C  0E00               	movlw	0
 11771   00278E  6E1B               	movwf	(___fldiv@b+2)^0,c
 11772   002790  0E00               	movlw	0
 11773   002792  6E1C               	movwf	(___fldiv@b+3)^0,c
 11774   002794                     l3888:
 11775   002794  5020               	movf	(___fldiv@a+3)^0,w,c
 11776   002796  0B80               	andlw	128
 11777   002798  1A29               	xorwf	___fldiv@sign^0,f,c
 11778   00279A  5020               	movf	(___fldiv@a+3)^0,w,c
 11779   00279C  2420               	addwf	(___fldiv@a+3)^0,w,c
 11780   00279E  6E31               	movwf	___fldiv@aexp^0,c
 11781   0027A0  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11782   0027A2  EFD5  F013         	goto	u3371
 11783   0027A6  EFD7  F013         	goto	u3370
 11784   0027AA                     u3371:
 11785   0027AA  EFD8  F013         	goto	l3896
 11786   0027AE                     u3370:
 11787   0027AE  8031               	bsf	___fldiv@aexp^0,0,c
 11788   0027B0                     l3896:
 11789   0027B0  5031               	movf	___fldiv@aexp^0,w,c
 11790   0027B2  B4D8               	btfsc	status,2,c
 11791   0027B4  EFDE  F013         	goto	u3381
 11792   0027B8  EFE0  F013         	goto	u3380
 11793   0027BC                     u3381:
 11794   0027BC  EFF5  F013         	goto	l3906
 11795   0027C0                     u3380:
 11796   0027C0  2831               	incf	___fldiv@aexp^0,w,c
 11797   0027C2  A4D8               	btfss	status,2,c
 11798   0027C4  EFE6  F013         	goto	u3391
 11799   0027C8  EFE8  F013         	goto	u3390
 11800   0027CC                     u3391:
 11801   0027CC  EFF0  F013         	goto	l3902
 11802   0027D0                     u3390:
 11803   0027D0  0E00               	movlw	0
 11804   0027D2  6E1D               	movwf	___fldiv@a^0,c
 11805   0027D4  0E00               	movlw	0
 11806   0027D6  6E1E               	movwf	(___fldiv@a+1)^0,c
 11807   0027D8  0E00               	movlw	0
 11808   0027DA  6E1F               	movwf	(___fldiv@a+2)^0,c
 11809   0027DC  0E00               	movlw	0
 11810   0027DE  6E20               	movwf	(___fldiv@a+3)^0,c
 11811   0027E0                     l3902:
 11812   0027E0  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11813   0027E2  0E00               	movlw	0
 11814   0027E4  6E20               	movwf	(___fldiv@a+3)^0,c
 11815   0027E6  EFFD  F013         	goto	l3908
 11816   0027EA                     l3906:
 11817   0027EA  0E00               	movlw	0
 11818   0027EC  6E1D               	movwf	___fldiv@a^0,c
 11819   0027EE  0E00               	movlw	0
 11820   0027F0  6E1E               	movwf	(___fldiv@a+1)^0,c
 11821   0027F2  0E00               	movlw	0
 11822   0027F4  6E1F               	movwf	(___fldiv@a+2)^0,c
 11823   0027F6  0E00               	movlw	0
 11824   0027F8  6E20               	movwf	(___fldiv@a+3)^0,c
 11825   0027FA                     l3908:
 11826   0027FA  501D               	movf	___fldiv@a^0,w,c
 11827   0027FC  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11828   0027FE  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11829   002800  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11830   002802  A4D8               	btfss	status,2,c
 11831   002804  EF06  F014         	goto	u3401
 11832   002808  EF08  F014         	goto	u3400
 11833   00280C                     u3401:
 11834   00280C  EF20  F014         	goto	l3920
 11835   002810                     u3400:
 11836   002810  0E00               	movlw	0
 11837   002812  6E19               	movwf	___fldiv@b^0,c
 11838   002814  0E00               	movlw	0
 11839   002816  6E1A               	movwf	(___fldiv@b+1)^0,c
 11840   002818  0E00               	movlw	0
 11841   00281A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11842   00281C  0E00               	movlw	0
 11843   00281E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11844   002820  0E80               	movlw	128
 11845   002822  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11846   002824  0E7F               	movlw	127
 11847   002826  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11848   002828                     l3914:
 11849   002828  5029               	movf	___fldiv@sign^0,w,c
 11850   00282A  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11851   00282C  C019  F019         	movff	___fldiv@b,?___fldiv
 11852   002830  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11853   002834  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11854   002838  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11855   00283C  EF63  F015         	goto	l1250
 11856   002840                     l3920:
 11857   002840  5030               	movf	___fldiv@bexp^0,w,c
 11858   002842  A4D8               	btfss	status,2,c
 11859   002844  EF26  F014         	goto	u3411
 11860   002848  EF28  F014         	goto	u3410
 11861   00284C                     u3411:
 11862   00284C  EF32  F014         	goto	l3928
 11863   002850                     u3410:
 11864   002850  0E00               	movlw	0
 11865   002852  6E19               	movwf	?___fldiv^0,c
 11866   002854  0E00               	movlw	0
 11867   002856  6E1A               	movwf	(?___fldiv+1)^0,c
 11868   002858  0E00               	movlw	0
 11869   00285A  6E1B               	movwf	(?___fldiv+2)^0,c
 11870   00285C  0E00               	movlw	0
 11871   00285E  6E1C               	movwf	(?___fldiv+3)^0,c
 11872   002860  EF63  F015         	goto	l1250
 11873   002864                     l3928:
 11874   002864  5031               	movf	___fldiv@aexp^0,w,c
 11875   002866  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11876   00286A  6A22               	clrf	(??___fldiv+1)^0,c
 11877   00286C  5E21               	subwf	??___fldiv^0,f,c
 11878   00286E  0E00               	movlw	0
 11879   002870  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11880   002872  0E7F               	movlw	127
 11881   002874  2421               	addwf	??___fldiv^0,w,c
 11882   002876  6E2A               	movwf	___fldiv@new_exp^0,c
 11883   002878  0E00               	movlw	0
 11884   00287A  2022               	addwfc	(??___fldiv+1)^0,w,c
 11885   00287C  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11886   00287E  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11887   002882  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11888   002886  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11889   00288A  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11890   00288E  0E00               	movlw	0
 11891   002890  6E19               	movwf	___fldiv@b^0,c
 11892   002892  0E00               	movlw	0
 11893   002894  6E1A               	movwf	(___fldiv@b+1)^0,c
 11894   002896  0E00               	movlw	0
 11895   002898  6E1B               	movwf	(___fldiv@b+2)^0,c
 11896   00289A  0E00               	movlw	0
 11897   00289C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11898   00289E  0E00               	movlw	0
 11899   0028A0  6E2C               	movwf	___fldiv@grs^0,c
 11900   0028A2  0E00               	movlw	0
 11901   0028A4  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11902   0028A6  0E00               	movlw	0
 11903   0028A8  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11904   0028AA  0E00               	movlw	0
 11905   0028AC  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11906   0028AE  0E00               	movlw	0
 11907   0028B0  6E31               	movwf	___fldiv@aexp^0,c
 11908   0028B2  EF93  F014         	goto	l1252
 11909   0028B6                     l3938:
 11910   0028B6  5031               	movf	___fldiv@aexp^0,w,c
 11911   0028B8  B4D8               	btfsc	status,2,c
 11912   0028BA  EF61  F014         	goto	u3421
 11913   0028BE  EF63  F014         	goto	u3420
 11914   0028C2                     u3421:
 11915   0028C2  EF7A  F014         	goto	l3946
 11916   0028C6                     u3420:
 11917   0028C6  90D8               	bcf	status,0,c
 11918   0028C8  3625               	rlcf	___fldiv@rem^0,f,c
 11919   0028CA  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11920   0028CC  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11921   0028CE  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11922   0028D0  90D8               	bcf	status,0,c
 11923   0028D2  3619               	rlcf	___fldiv@b^0,f,c
 11924   0028D4  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11925   0028D6  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11926   0028D8  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11927   0028DA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11928   0028DC  EF72  F014         	goto	u3431
 11929   0028E0  EF74  F014         	goto	u3430
 11930   0028E4                     u3431:
 11931   0028E4  EF75  F014         	goto	l1255
 11932   0028E8                     u3430:
 11933   0028E8  8019               	bsf	___fldiv@b^0,0,c
 11934   0028EA                     l1255:
 11935   0028EA  90D8               	bcf	status,0,c
 11936   0028EC  362C               	rlcf	___fldiv@grs^0,f,c
 11937   0028EE  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11938   0028F0  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11939   0028F2  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11940   0028F4                     l3946:
 11941   0028F4  501D               	movf	___fldiv@a^0,w,c
 11942   0028F6  5C25               	subwf	___fldiv@rem^0,w,c
 11943   0028F8  501E               	movf	(___fldiv@a+1)^0,w,c
 11944   0028FA  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11945   0028FC  501F               	movf	(___fldiv@a+2)^0,w,c
 11946   0028FE  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11947   002900  5020               	movf	(___fldiv@a+3)^0,w,c
 11948   002902  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11949   002904  A0D8               	btfss	status,0,c
 11950   002906  EF87  F014         	goto	u3441
 11951   00290A  EF89  F014         	goto	u3440
 11952   00290E                     u3441:
 11953   00290E  EF92  F014         	goto	l3952
 11954   002912                     u3440:
 11955   002912  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11956   002914  501D               	movf	___fldiv@a^0,w,c
 11957   002916  5E25               	subwf	___fldiv@rem^0,f,c
 11958   002918  501E               	movf	(___fldiv@a+1)^0,w,c
 11959   00291A  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11960   00291C  501F               	movf	(___fldiv@a+2)^0,w,c
 11961   00291E  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11962   002920  5020               	movf	(___fldiv@a+3)^0,w,c
 11963   002922  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11964   002924                     l3952:
 11965   002924  2A31               	incf	___fldiv@aexp^0,f,c
 11966   002926                     l1252:
 11967   002926  0E19               	movlw	25
 11968   002928  6431               	cpfsgt	___fldiv@aexp^0,c
 11969   00292A  EF99  F014         	goto	u3451
 11970   00292E  EF9B  F014         	goto	u3450
 11971   002932                     u3451:
 11972   002932  EF5B  F014         	goto	l3938
 11973   002936                     u3450:
 11974   002936  5025               	movf	___fldiv@rem^0,w,c
 11975   002938  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11976   00293A  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11977   00293C  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11978   00293E  B4D8               	btfsc	status,2,c
 11979   002940  EFA4  F014         	goto	u3461
 11980   002944  EFA6  F014         	goto	u3460
 11981   002948                     u3461:
 11982   002948  EFBE  F014         	goto	l3964
 11983   00294C                     u3460:
 11984   00294C  802C               	bsf	___fldiv@grs^0,0,c
 11985   00294E  EFBE  F014         	goto	l3964
 11986   002952                     l3958:
 11987   002952  90D8               	bcf	status,0,c
 11988   002954  3619               	rlcf	___fldiv@b^0,f,c
 11989   002956  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11990   002958  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11991   00295A  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11992   00295C  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11993   00295E  EFB3  F014         	goto	u3471
 11994   002962  EFB5  F014         	goto	u3470
 11995   002966                     u3471:
 11996   002966  EFB6  F014         	goto	l1261
 11997   00296A                     u3470:
 11998   00296A  8019               	bsf	___fldiv@b^0,0,c
 11999   00296C                     l1261:
 12000   00296C  90D8               	bcf	status,0,c
 12001   00296E  362C               	rlcf	___fldiv@grs^0,f,c
 12002   002970  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12003   002972  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12004   002974  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12005   002976  062A               	decf	___fldiv@new_exp^0,f,c
 12006   002978  A0D8               	btfss	status,0,c
 12007   00297A  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 12008   00297C                     l3964:
 12009   00297C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 12010   00297E  EFC3  F014         	goto	u3481
 12011   002982  EFC5  F014         	goto	u3480
 12012   002986                     u3481:
 12013   002986  EFA9  F014         	goto	l3958
 12014   00298A                     u3480:
 12015   00298A  0E00               	movlw	0
 12016   00298C  6E31               	movwf	___fldiv@aexp^0,c
 12017   00298E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12018   002990  EFCC  F014         	goto	u3491
 12019   002994  EFCE  F014         	goto	u3490
 12020   002998                     u3491:
 12021   002998  EFF2  F014         	goto	l1263
 12022   00299C                     u3490:
 12023   00299C  0EFF               	movlw	255
 12024   00299E  142C               	andwf	___fldiv@grs^0,w,c
 12025   0029A0  6E21               	movwf	??___fldiv^0,c
 12026   0029A2  0EFF               	movlw	255
 12027   0029A4  142D               	andwf	(___fldiv@grs+1)^0,w,c
 12028   0029A6  6E22               	movwf	(??___fldiv+1)^0,c
 12029   0029A8  0EFF               	movlw	255
 12030   0029AA  142E               	andwf	(___fldiv@grs+2)^0,w,c
 12031   0029AC  6E23               	movwf	(??___fldiv+2)^0,c
 12032   0029AE  0E7F               	movlw	127
 12033   0029B0  142F               	andwf	(___fldiv@grs+3)^0,w,c
 12034   0029B2  6E24               	movwf	(??___fldiv+3)^0,c
 12035   0029B4  5021               	movf	??___fldiv^0,w,c
 12036   0029B6  1022               	iorwf	(??___fldiv+1)^0,w,c
 12037   0029B8  1023               	iorwf	(??___fldiv+2)^0,w,c
 12038   0029BA  1024               	iorwf	(??___fldiv+3)^0,w,c
 12039   0029BC  B4D8               	btfsc	status,2,c
 12040   0029BE  EFE3  F014         	goto	u3501
 12041   0029C2  EFE5  F014         	goto	u3500
 12042   0029C6                     u3501:
 12043   0029C6  EFE9  F014         	goto	l1264
 12044   0029CA                     u3500:
 12045   0029CA                     l3972:
 12046   0029CA  0E01               	movlw	1
 12047   0029CC  6E31               	movwf	___fldiv@aexp^0,c
 12048   0029CE  EFF2  F014         	goto	l1263
 12049   0029D2                     l1264:
 12050   0029D2  A019               	btfss	___fldiv@b^0,0,c
 12051   0029D4  EFEE  F014         	goto	u3511
 12052   0029D8  EFF0  F014         	goto	u3510
 12053   0029DC                     u3511:
 12054   0029DC  EFF2  F014         	goto	l1263
 12055   0029E0                     u3510:
 12056   0029E0  EFE5  F014         	goto	l3972
 12057   0029E4                     l1263:
 12058   0029E4  5031               	movf	___fldiv@aexp^0,w,c
 12059   0029E6  B4D8               	btfsc	status,2,c
 12060   0029E8  EFF8  F014         	goto	u3521
 12061   0029EC  EFFA  F014         	goto	u3520
 12062   0029F0                     u3521:
 12063   0029F0  EF1E  F015         	goto	l3984
 12064   0029F4                     u3520:
 12065   0029F4  0E01               	movlw	1
 12066   0029F6  2619               	addwf	___fldiv@b^0,f,c
 12067   0029F8  0E00               	movlw	0
 12068   0029FA  221A               	addwfc	(___fldiv@b+1)^0,f,c
 12069   0029FC  221B               	addwfc	(___fldiv@b+2)^0,f,c
 12070   0029FE  221C               	addwfc	(___fldiv@b+3)^0,f,c
 12071   002A00  A01C               	btfss	(___fldiv@b+3)^0,0,c
 12072   002A02  EF05  F015         	goto	u3531
 12073   002A06  EF07  F015         	goto	u3530
 12074   002A0A                     u3531:
 12075   002A0A  EF1E  F015         	goto	l3984
 12076   002A0E                     u3530:
 12077   002A0E  C019  F021         	movff	___fldiv@b,??___fldiv
 12078   002A12  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 12079   002A16  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 12080   002A1A  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 12081   002A1E  3424               	rlcf	(??___fldiv+3)^0,w,c
 12082   002A20  3224               	rrcf	(??___fldiv+3)^0,f,c
 12083   002A22  3223               	rrcf	(??___fldiv+2)^0,f,c
 12084   002A24  3222               	rrcf	(??___fldiv+1)^0,f,c
 12085   002A26  3221               	rrcf	??___fldiv^0,f,c
 12086   002A28  C021  F019         	movff	??___fldiv,___fldiv@b
 12087   002A2C  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 12088   002A30  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 12089   002A34  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 12090   002A38  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 12091   002A3A  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 12092   002A3C                     l3984:
 12093   002A3C  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12094   002A3E  EF29  F015         	goto	u3541
 12095   002A42  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12096   002A44  E108               	bnz	u3540
 12097   002A46  282A               	incf	___fldiv@new_exp^0,w,c
 12098   002A48  A0D8               	btfss	status,0,c
 12099   002A4A  EF29  F015         	goto	u3541
 12100   002A4E  EF2B  F015         	goto	u3540
 12101   002A52                     u3541:
 12102   002A52  EF36  F015         	goto	l3988
 12103   002A56                     u3540:
 12104   002A56  0E00               	movlw	0
 12105   002A58  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12106   002A5A  682A               	setf	___fldiv@new_exp^0,c
 12107   002A5C  0E00               	movlw	0
 12108   002A5E  6E19               	movwf	___fldiv@b^0,c
 12109   002A60  0E00               	movlw	0
 12110   002A62  6E1A               	movwf	(___fldiv@b+1)^0,c
 12111   002A64  0E00               	movlw	0
 12112   002A66  6E1B               	movwf	(___fldiv@b+2)^0,c
 12113   002A68  0E00               	movlw	0
 12114   002A6A  6E1C               	movwf	(___fldiv@b+3)^0,c
 12115   002A6C                     l3988:
 12116   002A6C  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12117   002A6E  EF43  F015         	goto	u3550
 12118   002A72  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12119   002A74  E106               	bnz	u3551
 12120   002A76  042A               	decf	___fldiv@new_exp^0,w,c
 12121   002A78  B0D8               	btfsc	status,0,c
 12122   002A7A  EF41  F015         	goto	u3551
 12123   002A7E  EF43  F015         	goto	u3550
 12124   002A82                     u3551:
 12125   002A82  EF51  F015         	goto	l3992
 12126   002A86                     u3550:
 12127   002A86  0E00               	movlw	0
 12128   002A88  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12129   002A8A  0E00               	movlw	0
 12130   002A8C  6E2A               	movwf	___fldiv@new_exp^0,c
 12131   002A8E  0E00               	movlw	0
 12132   002A90  6E19               	movwf	___fldiv@b^0,c
 12133   002A92  0E00               	movlw	0
 12134   002A94  6E1A               	movwf	(___fldiv@b+1)^0,c
 12135   002A96  0E00               	movlw	0
 12136   002A98  6E1B               	movwf	(___fldiv@b+2)^0,c
 12137   002A9A  0E00               	movlw	0
 12138   002A9C  6E1C               	movwf	(___fldiv@b+3)^0,c
 12139   002A9E  0E00               	movlw	0
 12140   002AA0  6E29               	movwf	___fldiv@sign^0,c
 12141   002AA2                     l3992:
 12142   002AA2  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 12143   002AA6  A030               	btfss	___fldiv@bexp^0,0,c
 12144   002AA8  EF58  F015         	goto	u3561
 12145   002AAC  EF5A  F015         	goto	u3560
 12146   002AB0                     u3561:
 12147   002AB0  EF5D  F015         	goto	l3998
 12148   002AB4                     u3560:
 12149   002AB4  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12150   002AB6  EF5E  F015         	goto	l4000
 12151   002ABA                     l3998:
 12152   002ABA  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12153   002ABC                     l4000:
 12154   002ABC  90D8               	bcf	status,0,c
 12155   002ABE  3030               	rrcf	___fldiv@bexp^0,w,c
 12156   002AC0  6E1C               	movwf	(___fldiv@b+3)^0,c
 12157   002AC2  EF14  F014         	goto	l3914
 12158   002AC6                     l1250:
 12159   002AC6  0012               	return		;funcret
 12160   002AC8                     __end_of___fldiv:
 12161                           	callstack 0
 12162                           
 12163 ;; *************** function _HighISR *****************
 12164 ;; Defined at:
 12165 ;;		line 24 in file "interrupts.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;		None
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1    wreg      void 
 12172 ;; Registers used:
 12173 ;;		wreg, status,2
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12183 ;;Total ram usage:        0 bytes
 12184 ;; Hardware stack levels used: 1
 12185 ;; This function calls:
 12186 ;;		Nothing
 12187 ;; This function is called by:
 12188 ;;		Interrupt level 2
 12189 ;; This function uses a non-reentrant model
 12190 ;;
 12191                           
 12192                           	psect	intcode
 12193   000008                     __pintcode:
 12194                           	callstack 0
 12195   000008                     _HighISR:
 12196                           	callstack 22
 12197                           
 12198                           ;incstack = 0
 12199   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12200   00000A                     
 12201                           ;interrupts.c: 26: if (PIR0bits.TMR0IF){
 12202   00000A  010E               	movlb	14	; () banked
 12203   00000C  AB33               	btfss	51,5,b	;volatile
 12204   00000E  EF0B  F000         	goto	i2u445_41
 12205   000012  EF0D  F000         	goto	i2u445_40
 12206   000016                     i2u445_41:
 12207   000016  EF15  F000         	goto	i2l270
 12208   00001A                     i2u445_40:
 12209   00001A                     
 12210                           ; BSR set to: 14
 12211                           ;interrupts.c: 27:         lost_flag=1;
 12212   00001A  0E00               	movlw	0
 12213   00001C  0100               	movlb	0	; () banked
 12214   00001E  6FF3               	movwf	(_lost_flag+1)& (0+255),b
 12215   000020  0E01               	movlw	1
 12216   000022  6FF2               	movwf	_lost_flag& (0+255),b
 12217   000024                     
 12218                           ; BSR set to: 0
 12219                           ;interrupts.c: 28:         PIR0bits.TMR0IF=0;
 12220   000024  010E               	movlb	14	; () banked
 12221   000026  9B33               	bcf	51,5,b	;volatile
 12222   000028                     
 12223                           ; BSR set to: 14
 12224                           ;interrupts.c: 29:         PIE0bits.TMR0IE = 0;
 12225   000028  9B29               	bcf	41,5,b	;volatile
 12226   00002A                     i2l270:
 12227                           
 12228                           ; BSR set to: 14
 12229   00002A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12230   00002C  0011               	retfie		f
 12231   00002E                     __end_of_HighISR:
 12232                           	callstack 0
 12233                           
 12234                           	psect	rparam
 12235   000000                     
 12236                           	psect	temp
 12237   00005F                     btemp:
 12238                           	callstack 0
 12239   00005F                     	ds	1
 12240   000000                     int$flags	set	btemp
 12241   000000                     wtemp8	set	btemp+1
 12242   000000                     ttemp5	set	btemp+1
 12243   000000                     ttemp6	set	btemp+4
 12244   000000                     ttemp7	set	btemp+8
 12245                           
 12246                           	psect	idloc
 12247                           
 12248                           ;Config register IDLOC0 @ 0x200000
 12249                           ;	unspecified, using default values
 12250   200000                     	org	2097152
 12251   200000  0FFF               	dw	4095
 12252                           
 12253                           ;Config register IDLOC1 @ 0x200002
 12254                           ;	unspecified, using default values
 12255   200002                     	org	2097154
 12256   200002  0FFF               	dw	4095
 12257                           
 12258                           ;Config register IDLOC2 @ 0x200004
 12259                           ;	unspecified, using default values
 12260   200004                     	org	2097156
 12261   200004  0FFF               	dw	4095
 12262                           
 12263                           ;Config register IDLOC3 @ 0x200006
 12264                           ;	unspecified, using default values
 12265   200006                     	org	2097158
 12266   200006  0FFF               	dw	4095
 12267                           
 12268                           ;Config register IDLOC4 @ 0x200008
 12269                           ;	unspecified, using default values
 12270   200008                     	org	2097160
 12271   200008  0FFF               	dw	4095
 12272                           
 12273                           ;Config register IDLOC5 @ 0x20000A
 12274                           ;	unspecified, using default values
 12275   20000A                     	org	2097162
 12276   20000A  0FFF               	dw	4095
 12277                           
 12278                           ;Config register IDLOC6 @ 0x20000C
 12279                           ;	unspecified, using default values
 12280   20000C                     	org	2097164
 12281   20000C  0FFF               	dw	4095
 12282                           
 12283                           ;Config register IDLOC7 @ 0x20000E
 12284                           ;	unspecified, using default values
 12285   20000E                     	org	2097166
 12286   20000E  0FFF               	dw	4095
 12287                           
 12288                           	psect	config
 12289                           
 12290                           ;Config register CONFIG1L @ 0x300000
 12291                           ;	External Oscillator mode Selection bits
 12292                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12293                           ;	Power-up default value for COSC bits
 12294                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12295   300000                     	org	3145728
 12296   300000  AA                 	db	170
 12297                           
 12298                           ;Config register CONFIG1H @ 0x300001
 12299                           ;	unspecified, using default values
 12300                           ;	Clock Out Enable bit
 12301                           ;	CLKOUTEN = 0x1, unprogrammed default
 12302                           ;	Clock Switch Enable bit
 12303                           ;	CSWEN = 0x1, unprogrammed default
 12304                           ;	Fail-Safe Clock Monitor Enable bit
 12305                           ;	FCMEN = 0x1, unprogrammed default
 12306   300001                     	org	3145729
 12307   300001  FF                 	db	255
 12308                           
 12309                           ;Config register CONFIG2L @ 0x300002
 12310                           ;	unspecified, using default values
 12311                           ;	Master Clear Enable bit
 12312                           ;	MCLRE = 0x1, unprogrammed default
 12313                           ;	Power-up Timer Enable bit
 12314                           ;	PWRTE = 0x1, unprogrammed default
 12315                           ;	Low-power BOR enable bit
 12316                           ;	LPBOREN = 0x1, unprogrammed default
 12317                           ;	Brown-out Reset Enable bits
 12318                           ;	BOREN = 0x3, unprogrammed default
 12319   300002                     	org	3145730
 12320   300002  FF                 	db	255
 12321                           
 12322                           ;Config register CONFIG2H @ 0x300003
 12323                           ;	unspecified, using default values
 12324                           ;	Brown Out Reset Voltage selection bits
 12325                           ;	BORV = 0x3, unprogrammed default
 12326                           ;	ZCD Disable bit
 12327                           ;	ZCD = 0x1, unprogrammed default
 12328                           ;	PPSLOCK bit One-Way Set Enable bit
 12329                           ;	PPS1WAY = 0x1, unprogrammed default
 12330                           ;	Stack Full/Underflow Reset Enable bit
 12331                           ;	STVREN = 0x1, unprogrammed default
 12332                           ;	Debugger Enable bit
 12333                           ;	DEBUG = 0x1, unprogrammed default
 12334                           ;	Extended Instruction Set Enable bit
 12335                           ;	XINST = 0x1, unprogrammed default
 12336   300003                     	org	3145731
 12337   300003  FF                 	db	255
 12338                           
 12339                           ;Config register CONFIG3L @ 0x300004
 12340                           ;	WDT Period Select bits
 12341                           ;	WDTCPS = 0x1F, unprogrammed default
 12342                           ;	WDT operating mode
 12343                           ;	WDTE = OFF, WDT Disabled
 12344   300004                     	org	3145732
 12345   300004  9F                 	db	159
 12346                           
 12347                           ;Config register CONFIG3H @ 0x300005
 12348                           ;	unspecified, using default values
 12349                           ;	WDT Window Select bits
 12350                           ;	WDTCWS = 0x7, unprogrammed default
 12351                           ;	WDT input clock selector
 12352                           ;	WDTCCS = 0x7, unprogrammed default
 12353   300005                     	org	3145733
 12354   300005  FF                 	db	255
 12355                           
 12356                           ;Config register CONFIG4L @ 0x300006
 12357                           ;	unspecified, using default values
 12358                           ;	Write Protection Block 0
 12359                           ;	WRT0 = 0x1, unprogrammed default
 12360                           ;	Write Protection Block 1
 12361                           ;	WRT1 = 0x1, unprogrammed default
 12362                           ;	Write Protection Block 2
 12363                           ;	WRT2 = 0x1, unprogrammed default
 12364                           ;	Write Protection Block 3
 12365                           ;	WRT3 = 0x1, unprogrammed default
 12366                           ;	Write Protection Block 3
 12367                           ;	WRT4 = 0x1, unprogrammed default
 12368                           ;	Write Protection Block 3
 12369                           ;	WRT5 = 0x1, unprogrammed default
 12370                           ;	Write Protection Block 3
 12371                           ;	WRT6 = 0x1, unprogrammed default
 12372                           ;	Write Protection Block 3
 12373                           ;	WRT7 = 0x1, unprogrammed default
 12374   300006                     	org	3145734
 12375   300006  FF                 	db	255
 12376                           
 12377                           ;Config register CONFIG4H @ 0x300007
 12378                           ;	unspecified, using default values
 12379                           ;	Configuration Register Write Protection bit
 12380                           ;	WRTC = 0x1, unprogrammed default
 12381                           ;	Boot Block Write Protection bit
 12382                           ;	WRTB = 0x1, unprogrammed default
 12383                           ;	Data EEPROM Write Protection bit
 12384                           ;	WRTD = 0x1, unprogrammed default
 12385                           ;	Scanner Enable bit
 12386                           ;	SCANE = 0x1, unprogrammed default
 12387                           ;	Low Voltage Programming Enable bit
 12388                           ;	LVP = 0x1, unprogrammed default
 12389   300007                     	org	3145735
 12390   300007  FF                 	db	255
 12391                           
 12392                           ;Config register CONFIG5L @ 0x300008
 12393                           ;	unspecified, using default values
 12394                           ;	UserNVM Program Memory Code Protection bit
 12395                           ;	CP = 0x1, unprogrammed default
 12396                           ;	DataNVM Memory Code Protection bit
 12397                           ;	CPD = 0x1, unprogrammed default
 12398   300008                     	org	3145736
 12399   300008  FF                 	db	255
 12400                           
 12401                           ;Config register CONFIG5H @ 0x300009
 12402                           ;	unspecified, using default values
 12403   300009                     	org	3145737
 12404   300009  FF                 	db	255
 12405                           
 12406                           ;Config register CONFIG6L @ 0x30000A
 12407                           ;	unspecified, using default values
 12408                           ;	Table Read Protection Block 0
 12409                           ;	EBTR0 = 0x1, unprogrammed default
 12410                           ;	Table Read Protection Block 1
 12411                           ;	EBTR1 = 0x1, unprogrammed default
 12412                           ;	Table Read Protection Block 2
 12413                           ;	EBTR2 = 0x1, unprogrammed default
 12414                           ;	Table Read Protection Block 3
 12415                           ;	EBTR3 = 0x1, unprogrammed default
 12416                           ;	Table Read Protection Block 4
 12417                           ;	EBTR4 = 0x1, unprogrammed default
 12418                           ;	Table Read Protection Block 5
 12419                           ;	EBTR5 = 0x1, unprogrammed default
 12420                           ;	Table Read Protection Block 6
 12421                           ;	EBTR6 = 0x1, unprogrammed default
 12422                           ;	Table Read Protection Block 7
 12423                           ;	EBTR7 = 0x1, unprogrammed default
 12424   30000A                     	org	3145738
 12425   30000A  FF                 	db	255
 12426                           
 12427                           ;Config register CONFIG6H @ 0x30000B
 12428                           ;	unspecified, using default values
 12429                           ;	Boot Block Table Read Protection bit
 12430                           ;	EBTRB = 0x1, unprogrammed default
 12431   30000B                     	org	3145739
 12432   30000B  FF                 	db	255
 12433                           tosu	equ	0xFFF
 12434                           tosh	equ	0xFFE
 12435                           tosl	equ	0xFFD
 12436                           stkptr	equ	0xFFC
 12437                           pclatu	equ	0xFFB
 12438                           pclath	equ	0xFFA
 12439                           pcl	equ	0xFF9
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           indf0	equ	0xFEF
 12447                           postinc0	equ	0xFEE
 12448                           postdec0	equ	0xFED
 12449                           preinc0	equ	0xFEC
 12450                           plusw0	equ	0xFEB
 12451                           fsr0h	equ	0xFEA
 12452                           fsr0l	equ	0xFE9
 12453                           wreg	equ	0xFE8
 12454                           indf1	equ	0xFE7
 12455                           postinc1	equ	0xFE6
 12456                           postdec1	equ	0xFE5
 12457                           preinc1	equ	0xFE4
 12458                           plusw1	equ	0xFE3
 12459                           fsr1h	equ	0xFE2
 12460                           fsr1l	equ	0xFE1
 12461                           bsr	equ	0xFE0
 12462                           indf2	equ	0xFDF
 12463                           postinc2	equ	0xFDE
 12464                           postdec2	equ	0xFDD
 12465                           preinc2	equ	0xFDC
 12466                           plusw2	equ	0xFDB
 12467                           fsr2h	equ	0xFDA
 12468                           fsr2l	equ	0xFD9
 12469                           status	equ	0xFD8
=======
  5288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;Total ram usage:       10 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; This function calls:
  5294 ;;		Nothing
  5295 ;; This function is called by:
  5296 ;;		_reverseOneBlock
  5297 ;;		_ForwardOneBlock
  5298 ;;		_Forwardhalfblock
  5299 ;;		_efgtoa
  5300 ;;		_Backhalfblock
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           	psect	text11
  5305   004A60                     __ptext11:
  5306                           	callstack 0
  5307   004A60                     ___fltol:
  5308                           	callstack 26
  5309   004A60  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5310   004A62  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5311   004A64  6E0A               	movwf	___fltol@exp1^0,c
  5312   004A66  500A               	movf	___fltol@exp1^0,w,c
  5313   004A68  A4D8               	btfss	status,2,c
  5314   004A6A  EF39  F025         	goto	u4151
  5315   004A6E  EF3B  F025         	goto	u4150
  5316   004A72                     u4151:
  5317   004A72  EF45  F025         	goto	l4564
  5318   004A76                     u4150:
  5319   004A76                     l4560:
  5320   004A76  0E00               	movlw	0
  5321   004A78  6E01               	movwf	?___fltol^0,c
  5322   004A7A  0E00               	movlw	0
  5323   004A7C  6E02               	movwf	(?___fltol+1)^0,c
  5324   004A7E  0E00               	movlw	0
  5325   004A80  6E03               	movwf	(?___fltol+2)^0,c
  5326   004A82  0E00               	movlw	0
  5327   004A84  6E04               	movwf	(?___fltol+3)^0,c
  5328   004A86  EFB2  F025         	goto	l1002
  5329   004A8A                     l4564:
  5330   004A8A  C001  F005         	movff	___fltol@f1,??___fltol
  5331   004A8E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5332   004A92  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5333   004A96  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5334   004A9A  0E20               	movlw	32
  5335   004A9C  EF55  F025         	goto	u4160
  5336   004AA0                     u4165:
  5337   004AA0  90D8               	bcf	status,0,c
  5338   004AA2  3208               	rrcf	(??___fltol+3)^0,f,c
  5339   004AA4  3207               	rrcf	(??___fltol+2)^0,f,c
  5340   004AA6  3206               	rrcf	(??___fltol+1)^0,f,c
  5341   004AA8  3205               	rrcf	??___fltol^0,f,c
  5342   004AAA                     u4160:
  5343   004AAA  2EE8               	decfsz	wreg,f,c
  5344   004AAC  EF50  F025         	goto	u4165
  5345   004AB0  5005               	movf	??___fltol^0,w,c
  5346   004AB2  6E09               	movwf	___fltol@sign1^0,c
  5347   004AB4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5348   004AB6  0EFF               	movlw	255
  5349   004AB8  1601               	andwf	___fltol@f1^0,f,c
  5350   004ABA  0EFF               	movlw	255
  5351   004ABC  1602               	andwf	(___fltol@f1+1)^0,f,c
  5352   004ABE  0EFF               	movlw	255
  5353   004AC0  1603               	andwf	(___fltol@f1+2)^0,f,c
  5354   004AC2  0E00               	movlw	0
  5355   004AC4  1604               	andwf	(___fltol@f1+3)^0,f,c
  5356   004AC6  0E96               	movlw	150
  5357   004AC8  5E0A               	subwf	___fltol@exp1^0,f,c
  5358   004ACA  BE0A               	btfsc	___fltol@exp1^0,7,c
  5359   004ACC  EF6C  F025         	goto	u4170
  5360   004AD0  EF6A  F025         	goto	u4171
  5361   004AD4                     u4171:
  5362   004AD4  EF82  F025         	goto	l4584
  5363   004AD8                     u4170:
  5364   004AD8  500A               	movf	___fltol@exp1^0,w,c
  5365   004ADA  0A80               	xorlw	128
  5366   004ADC  0F97               	addlw	151
  5367   004ADE  B0D8               	btfsc	status,0,c
  5368   004AE0  EF74  F025         	goto	u4181
  5369   004AE4  EF76  F025         	goto	u4180
  5370   004AE8                     u4181:
  5371   004AE8  EF78  F025         	goto	l4580
  5372   004AEC                     u4180:
  5373   004AEC  EF3B  F025         	goto	l4560
  5374   004AF0                     l4580:
  5375   004AF0  90D8               	bcf	status,0,c
  5376   004AF2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5377   004AF4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5378   004AF6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5379   004AF8  3201               	rrcf	___fltol@f1^0,f,c
  5380   004AFA  3E0A               	incfsz	___fltol@exp1^0,f,c
  5381   004AFC  EF78  F025         	goto	l4580
  5382   004B00  EF9A  F025         	goto	l4594
  5383   004B04                     l4584:
  5384   004B04  0E1F               	movlw	31
  5385   004B06  640A               	cpfsgt	___fltol@exp1^0,c
  5386   004B08  EF88  F025         	goto	u4191
  5387   004B0C  EF8A  F025         	goto	u4190
  5388   004B10                     u4191:
  5389   004B10  EF92  F025         	goto	l4592
  5390   004B14                     u4190:
  5391   004B14  EF3B  F025         	goto	l4560
  5392   004B18                     l4590:
  5393   004B18  90D8               	bcf	status,0,c
  5394   004B1A  3601               	rlcf	___fltol@f1^0,f,c
  5395   004B1C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5396   004B1E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5397   004B20  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5398   004B22  060A               	decf	___fltol@exp1^0,f,c
  5399   004B24                     l4592:
  5400   004B24  500A               	movf	___fltol@exp1^0,w,c
  5401   004B26  A4D8               	btfss	status,2,c
  5402   004B28  EF98  F025         	goto	u4201
  5403   004B2C  EF9A  F025         	goto	u4200
  5404   004B30                     u4201:
  5405   004B30  EF8C  F025         	goto	l4590
  5406   004B34                     u4200:
  5407   004B34                     l4594:
  5408   004B34  5009               	movf	___fltol@sign1^0,w,c
  5409   004B36  B4D8               	btfsc	status,2,c
  5410   004B38  EFA0  F025         	goto	u4211
  5411   004B3C  EFA2  F025         	goto	u4210
  5412   004B40                     u4211:
  5413   004B40  EFAA  F025         	goto	l4598
  5414   004B44                     u4210:
  5415   004B44  1E04               	comf	(___fltol@f1+3)^0,f,c
  5416   004B46  1E03               	comf	(___fltol@f1+2)^0,f,c
  5417   004B48  1E02               	comf	(___fltol@f1+1)^0,f,c
  5418   004B4A  6C01               	negf	___fltol@f1^0,c
  5419   004B4C  0E00               	movlw	0
  5420   004B4E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5421   004B50  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5422   004B52  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5423   004B54                     l4598:
  5424   004B54  C001  F001         	movff	___fltol@f1,?___fltol
  5425   004B58  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5426   004B5C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5427   004B60  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5428   004B64                     l1002:
  5429   004B64  0012               	return		;funcret
  5430   004B66                     __end_of___fltol:
  5431                           	callstack 0
  5432                           
  5433 ;; *************** function ___flneg *****************
  5434 ;; Defined at:
  5435 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  f1              4    0[COMRAM] long 
  5438 ;; Auto vars:     Size  Location     Type
  5439 ;;		None
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  4    0[COMRAM] long 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;Total ram usage:        4 bytes
  5454 ;; Hardware stack levels used: 1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_efgtoa
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text12
  5463   005EF8                     __ptext12:
  5464                           	callstack 0
  5465   005EF8                     ___flneg:
  5466                           	callstack 26
  5467   005EF8  5001               	movf	___flneg@f1^0,w,c
  5468   005EFA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5469   005EFC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5470   005EFE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5471   005F00  B4D8               	btfsc	status,2,c
  5472   005F02  EF85  F02F         	goto	u4141
  5473   005F06  EF87  F02F         	goto	u4140
  5474   005F0A                     u4141:
  5475   005F0A  EF8F  F02F         	goto	l4554
  5476   005F0E                     u4140:
  5477   005F0E  0E00               	movlw	0
  5478   005F10  1A01               	xorwf	___flneg@f1^0,f,c
  5479   005F12  0E00               	movlw	0
  5480   005F14  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5481   005F16  0E00               	movlw	0
  5482   005F18  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5483   005F1A  0E80               	movlw	128
  5484   005F1C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5485   005F1E                     l4554:
  5486   005F1E  C001  F001         	movff	___flneg@f1,?___flneg
  5487   005F22  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5488   005F26  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5489   005F2A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5490   005F2E  0012               	return		;funcret
  5491   005F30                     __end_of___flneg:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _dtoa *****************
  5495 ;; Defined at:
  5496 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5499 ;;		 -> sprintf@f(11), 
  5500 ;;  d               8   29[COMRAM] long long 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  n               8   51[COMRAM] long long 
  5503 ;;  i               2   59[COMRAM] int 
  5504 ;;  w               2   49[COMRAM] int 
  5505 ;;  p               2   47[COMRAM] int 
  5506 ;;  s               1   61[COMRAM] unsigned char 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5516 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5517 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;Total ram usage:       35 bytes
  5521 ;; Hardware stack levels used: 1
  5522 ;; Hardware stack levels required when called: 4
  5523 ;; This function calls:
  5524 ;;		___aodiv
  5525 ;;		___aomod
  5526 ;;		_abs
  5527 ;;		_pad
  5528 ;; This function is called by:
  5529 ;;		_vfpfcnvrt
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           	psect	text13
  5534   003DE4                     __ptext13:
  5535                           	callstack 0
  5536   003DE4                     _dtoa:
  5537                           	callstack 23
  5538   003DE4                     
  5539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5540   003DE4  C01E  F034         	movff	dtoa@d,dtoa@n
  5541   003DE8  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5542   003DEC  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5543   003DF0  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5544   003DF4  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5545   003DF8  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5546   003DFC  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5547   003E00  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5548   003E04                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5550   003E04  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5551   003E06  EF07  F01F         	goto	u4581
  5552   003E0A  EF0A  F01F         	goto	u4580
  5553   003E0E                     u4581:
  5554   003E0E  0E01               	movlw	1
  5555   003E10  EF0B  F01F         	goto	u4590
  5556   003E14                     u4580:
  5557   003E14  0E00               	movlw	0
  5558   003E16                     u4590:
  5559   003E16  6E3E               	movwf	dtoa@s^0,c
  5560   003E18                     
  5561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5562   003E18  503E               	movf	dtoa@s^0,w,c
  5563   003E1A  B4D8               	btfsc	status,2,c
  5564   003E1C  EF12  F01F         	goto	u4601
  5565   003E20  EF14  F01F         	goto	u4600
  5566   003E24                     u4601:
  5567   003E24  EF24  F01F         	goto	l4778
  5568   003E28                     u4600:
  5569   003E28                     
  5570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5571   003E28  1E3B               	comf	(dtoa@n+7)^0,f,c
  5572   003E2A  1E3A               	comf	(dtoa@n+6)^0,f,c
  5573   003E2C  1E39               	comf	(dtoa@n+5)^0,f,c
  5574   003E2E  1E38               	comf	(dtoa@n+4)^0,f,c
  5575   003E30  1E37               	comf	(dtoa@n+3)^0,f,c
  5576   003E32  1E36               	comf	(dtoa@n+2)^0,f,c
  5577   003E34  1E35               	comf	(dtoa@n+1)^0,f,c
  5578   003E36  6C34               	negf	dtoa@n^0,c
  5579   003E38  0E00               	movlw	0
  5580   003E3A  2235               	addwfc	(dtoa@n+1)^0,f,c
  5581   003E3C  2236               	addwfc	(dtoa@n+2)^0,f,c
  5582   003E3E  2237               	addwfc	(dtoa@n+3)^0,f,c
  5583   003E40  2238               	addwfc	(dtoa@n+4)^0,f,c
  5584   003E42  2239               	addwfc	(dtoa@n+5)^0,f,c
  5585   003E44  223A               	addwfc	(dtoa@n+6)^0,f,c
  5586   003E46  223B               	addwfc	(dtoa@n+7)^0,f,c
  5587   003E48                     l4778:
  5588                           
  5589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5590   003E48  0100               	movlb	0	; () banked
  5591   003E4A  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5592   003E4C  EF32  F01F         	goto	u4610
  5593   003E50  51F0               	movf	(_prec+1)& (0+255),w,b
  5594   003E52  E106               	bnz	u4611
  5595   003E54  05EF               	decf	_prec& (0+255),w,b
  5596   003E56  B0D8               	btfsc	status,0,c
  5597   003E58  EF30  F01F         	goto	u4611
  5598   003E5C  EF32  F01F         	goto	u4610
  5599   003E60                     u4611:
  5600   003E60  EF38  F01F         	goto	l1424
  5601   003E64                     u4610:
  5602   003E64                     
  5603                           ; BSR set to: 0
  5604   003E64  0E00               	movlw	0
  5605   003E66  6E31               	movwf	(dtoa@p+1)^0,c
  5606   003E68  0E01               	movlw	1
  5607   003E6A  6E30               	movwf	dtoa@p^0,c
  5608   003E6C  EF3C  F01F         	goto	l1426
  5609   003E70                     l1424:
  5610                           
  5611                           ; BSR set to: 0
  5612   003E70  C0EF  F030         	movff	_prec,dtoa@p
  5613   003E74  C0F0  F031         	movff	_prec+1,dtoa@p+1
  5614   003E78                     l1426:
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5618   003E78  C0ED  F032         	movff	_width,dtoa@w
  5619   003E7C  C0EE  F033         	movff	_width+1,dtoa@w+1
  5620   003E80                     
  5621                           ; BSR set to: 0
  5622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5623   003E80  503E               	movf	dtoa@s^0,w,c
  5624   003E82  B4D8               	btfsc	status,2,c
  5625   003E84  EF46  F01F         	goto	u4621
  5626   003E88  EF48  F01F         	goto	u4620
  5627   003E8C                     u4621:
  5628   003E8C  EF5F  F01F         	goto	l1427
  5629   003E90                     u4620:
  5630   003E90                     
  5631                           ; BSR set to: 0
  5632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5633   003E90  0632               	decf	dtoa@w^0,f,c
  5634   003E92  A0D8               	btfss	status,0,c
  5635   003E94  0633               	decf	(dtoa@w+1)^0,f,c
  5636   003E96                     
  5637                           ; BSR set to: 0
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5639   003E96  503E               	movf	dtoa@s^0,w,c
  5640   003E98  A4D8               	btfss	status,2,c
  5641   003E9A  EF51  F01F         	goto	u4631
  5642   003E9E  EF53  F01F         	goto	u4630
  5643   003EA2                     u4631:
  5644   003EA2  EF59  F01F         	goto	l4790
  5645   003EA6                     u4630:
  5646   003EA6                     
  5647                           ; BSR set to: 0
  5648   003EA6  0E00               	movlw	0
  5649   003EA8  6E2F               	movwf	(_dtoa$2759+1)^0,c
  5650   003EAA  0E2B               	movlw	43
  5651   003EAC  6E2E               	movwf	_dtoa$2759^0,c
  5652   003EAE  EF5D  F01F         	goto	l4792
  5653   003EB2                     l4790:
  5654                           
  5655                           ; BSR set to: 0
  5656   003EB2  0E00               	movlw	0
  5657   003EB4  6E2F               	movwf	(_dtoa$2759+1)^0,c
  5658   003EB6  0E2D               	movlw	45
  5659   003EB8  6E2E               	movwf	_dtoa$2759^0,c
  5660   003EBA                     l4792:
  5661                           
  5662                           ; BSR set to: 0
  5663   003EBA  C02E  F03E         	movff	_dtoa$2759,dtoa@s
  5664   003EBE                     l1427:
  5665                           
  5666                           ; BSR set to: 0
  5667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5668   003EBE  0E00               	movlw	0
  5669   003EC0  6E3D               	movwf	(dtoa@i+1)^0,c
  5670   003EC2  0E4F               	movlw	79
  5671   003EC4  6E3C               	movwf	dtoa@i^0,c
  5672   003EC6                     
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5675   003EC6  0E00               	movlw	0
  5676   003EC8  0102               	movlb	2	; () banked
  5677   003ECA  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5678                           
  5679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5680   003ECC  EFE4  F01F         	goto	l4806
  5681   003ED0                     l4796:
  5682                           
  5683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5684   003ED0  063C               	decf	dtoa@i^0,f,c
  5685   003ED2  A0D8               	btfss	status,0,c
  5686   003ED4  063D               	decf	(dtoa@i+1)^0,f,c
  5687   003ED6                     
  5688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5689   003ED6  0EA0               	movlw	low _dbuf
  5690   003ED8  243C               	addwf	dtoa@i^0,w,c
  5691   003EDA  6ED9               	movwf	fsr2l,c
  5692   003EDC  0E02               	movlw	high _dbuf
  5693   003EDE  203D               	addwfc	(dtoa@i+1)^0,w,c
  5694   003EE0  6EDA               	movwf	fsr2h,c
  5695   003EE2  C034  F001         	movff	dtoa@n,___aomod@dividend
  5696   003EE6  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5697   003EEA  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5698   003EEE  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5699   003EF2  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5700   003EF6  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5701   003EFA  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5702   003EFE  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5703   003F02  0E0A               	movlw	10
  5704   003F04  6E09               	movwf	___aomod@divisor^0,c
  5705   003F06  0E00               	movlw	0
  5706   003F08  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5707   003F0A  0E00               	movlw	0
  5708   003F0C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5709   003F0E  0E00               	movlw	0
  5710   003F10  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5711   003F12  0E00               	movlw	0
  5712   003F14  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5713   003F16  0E00               	movlw	0
  5714   003F18  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5715   003F1A  0E00               	movlw	0
  5716   003F1C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5717   003F1E  0E00               	movlw	0
  5718   003F20  6E10               	movwf	(___aomod@divisor+7)^0,c
  5719   003F22  EC7E  F024         	call	___aomod	;wreg free
  5720   003F26  C001  F026         	movff	?___aomod,??_dtoa
  5721   003F2A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5722   003F2E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5723   003F32  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5724   003F36  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5725   003F3A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5726   003F3E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5727   003F42  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5728   003F46  C026  F013         	movff	??_dtoa,abs@a
  5729   003F4A  C027  F014         	movff	??_dtoa+1,abs@a+1
  5730   003F4E  EC1E  F02F         	call	_abs	;wreg free
  5731   003F52  5013               	movf	?_abs^0,w,c
  5732   003F54  0F30               	addlw	48
  5733   003F56  6EDF               	movwf	indf2,c
  5734   003F58                     
  5735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5736   003F58  0630               	decf	dtoa@p^0,f,c
  5737   003F5A  A0D8               	btfss	status,0,c
  5738   003F5C  0631               	decf	(dtoa@p+1)^0,f,c
  5739   003F5E                     
  5740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5741   003F5E  0632               	decf	dtoa@w^0,f,c
  5742   003F60  A0D8               	btfss	status,0,c
  5743   003F62  0633               	decf	(dtoa@w+1)^0,f,c
  5744   003F64                     
  5745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5746   003F64  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5747   003F68  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5748   003F6C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5749   003F70  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5750   003F74  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5751   003F78  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5752   003F7C  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5753   003F80  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5754   003F84  0E0A               	movlw	10
  5755   003F86  6E09               	movwf	___aodiv@divisor^0,c
  5756   003F88  0E00               	movlw	0
  5757   003F8A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5758   003F8C  0E00               	movlw	0
  5759   003F8E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5760   003F90  0E00               	movlw	0
  5761   003F92  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5762   003F94  0E00               	movlw	0
  5763   003F96  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5764   003F98  0E00               	movlw	0
  5765   003F9A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5766   003F9C  0E00               	movlw	0
  5767   003F9E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5768   003FA0  0E00               	movlw	0
  5769   003FA2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5770   003FA4  EC04  F023         	call	___aodiv	;wreg free
  5771   003FA8  C001  F034         	movff	?___aodiv,dtoa@n
  5772   003FAC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5773   003FB0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5774   003FB4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5775   003FB8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5776   003FBC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5777   003FC0  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5778   003FC4  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5779   003FC8                     l4806:
  5780                           
  5781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5782   003FC8  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5783   003FCA  EFEF  F01F         	goto	u4641
  5784   003FCE  503D               	movf	(dtoa@i+1)^0,w,c
  5785   003FD0  E108               	bnz	u4640
  5786   003FD2  043C               	decf	dtoa@i^0,w,c
  5787   003FD4  A0D8               	btfss	status,0,c
  5788   003FD6  EFEF  F01F         	goto	u4641
  5789   003FDA  EFF1  F01F         	goto	u4640
  5790   003FDE                     u4641:
  5791   003FDE  EF0D  F020         	goto	l4812
  5792   003FE2                     u4640:
  5793   003FE2  5034               	movf	dtoa@n^0,w,c
  5794   003FE4  1035               	iorwf	(dtoa@n+1)^0,w,c
  5795   003FE6  1036               	iorwf	(dtoa@n+2)^0,w,c
  5796   003FE8  1037               	iorwf	(dtoa@n+3)^0,w,c
  5797   003FEA  1038               	iorwf	(dtoa@n+4)^0,w,c
  5798   003FEC  1039               	iorwf	(dtoa@n+5)^0,w,c
  5799   003FEE  103A               	iorwf	(dtoa@n+6)^0,w,c
  5800   003FF0  103B               	iorwf	(dtoa@n+7)^0,w,c
  5801   003FF2  A4D8               	btfss	status,2,c
  5802   003FF4  EFFE  F01F         	goto	u4651
  5803   003FF8  EF00  F020         	goto	u4650
  5804   003FFC                     u4651:
  5805   003FFC  EF68  F01F         	goto	l4796
  5806   004000                     u4650:
  5807   004000  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5808   004002  EF0D  F020         	goto	u4660
  5809   004006  5031               	movf	(dtoa@p+1)^0,w,c
  5810   004008  E106               	bnz	u4661
  5811   00400A  0430               	decf	dtoa@p^0,w,c
  5812   00400C  B0D8               	btfsc	status,0,c
  5813   00400E  EF0B  F020         	goto	u4661
  5814   004012  EF0D  F020         	goto	u4660
  5815   004016                     u4661:
  5816   004016  EF68  F01F         	goto	l4796
  5817   00401A                     u4660:
  5818   00401A                     l4812:
  5819                           
  5820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5821   00401A  503E               	movf	dtoa@s^0,w,c
  5822   00401C  B4D8               	btfsc	status,2,c
  5823   00401E  EF13  F020         	goto	u4671
  5824   004022  EF15  F020         	goto	u4670
  5825   004026                     u4671:
  5826   004026  EF20  F020         	goto	l4818
  5827   00402A                     u4670:
  5828   00402A                     
  5829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5830   00402A  063C               	decf	dtoa@i^0,f,c
  5831   00402C  A0D8               	btfss	status,0,c
  5832   00402E  063D               	decf	(dtoa@i+1)^0,f,c
  5833   004030                     
  5834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5835   004030  0EA0               	movlw	low _dbuf
  5836   004032  243C               	addwf	dtoa@i^0,w,c
  5837   004034  6ED9               	movwf	fsr2l,c
  5838   004036  0E02               	movlw	high _dbuf
  5839   004038  203D               	addwfc	(dtoa@i+1)^0,w,c
  5840   00403A  6EDA               	movwf	fsr2h,c
  5841   00403C  C03E  FFDF         	movff	dtoa@s,indf2
  5842   004040                     l4818:
  5843                           
  5844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5845   004040  C01C  F011         	movff	dtoa@fp,pad@fp
  5846   004044  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5847   004048  0EA0               	movlw	low _dbuf
  5848   00404A  243C               	addwf	dtoa@i^0,w,c
  5849   00404C  6E13               	movwf	pad@buf^0,c
  5850   00404E  0E02               	movlw	high _dbuf
  5851   004050  203D               	addwfc	(dtoa@i+1)^0,w,c
  5852   004052  6E14               	movwf	(pad@buf+1)^0,c
  5853   004054  C032  F015         	movff	dtoa@w,pad@p
  5854   004058  C033  F016         	movff	dtoa@w+1,pad@p+1
  5855   00405C  EC79  F02A         	call	_pad	;wreg free
  5856   004060  0012               	return		;funcret
  5857   004062                     __end_of_dtoa:
  5858                           	callstack 0
  5859                           
  5860 ;; *************** function _pad *****************
  5861 ;; Defined at:
  5862 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5865 ;;		 -> sprintf@f(11), 
  5866 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5867 ;;		 -> dbuf(80), 
  5868 ;;  p               2   20[COMRAM] int 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  w               2   25[COMRAM] int 
  5871 ;;  i               2   23[COMRAM] int 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:       11 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 3
  5888 ;; This function calls:
  5889 ;;		_fputc
  5890 ;;		_fputs
  5891 ;; This function is called by:
  5892 ;;		_dtoa
  5893 ;;		_efgtoa
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text14
  5898   0054F2                     __ptext14:
  5899                           	callstack 0
  5900   0054F2                     _pad:
  5901                           	callstack 23
  5902   0054F2                     
  5903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5904   0054F2  BE16               	btfsc	(pad@p+1)^0,7,c
  5905   0054F4  EF7E  F02A         	goto	u4221
  5906   0054F8  EF80  F02A         	goto	u4220
  5907   0054FC                     u4221:
  5908   0054FC  EF86  F02A         	goto	l4606
  5909   005500                     u4220:
  5910   005500  C015  F01A         	movff	pad@p,pad@w
  5911   005504  C016  F01B         	movff	pad@p+1,pad@w+1
  5912   005508  EF8A  F02A         	goto	l1415
  5913   00550C                     l4606:
  5914   00550C  0E00               	movlw	0
  5915   00550E  6E1B               	movwf	(pad@w+1)^0,c
  5916   005510  0E00               	movlw	0
  5917   005512  6E1A               	movwf	pad@w^0,c
  5918   005514                     l1415:
  5919                           
  5920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5921   005514  0E00               	movlw	0
  5922   005516  6E19               	movwf	(pad@i+1)^0,c
  5923   005518  0E00               	movlw	0
  5924   00551A  6E18               	movwf	pad@i^0,c
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5927   00551C  EF9C  F02A         	goto	l4612
  5928   005520                     l4608:
  5929                           
  5930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5931   005520  0E00               	movlw	0
  5932   005522  6E02               	movwf	(fputc@c+1)^0,c
  5933   005524  0E20               	movlw	32
  5934   005526  6E01               	movwf	fputc@c^0,c
  5935   005528  C011  F003         	movff	pad@fp,fputc@fp
  5936   00552C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5937   005530  ECB4  F026         	call	_fputc	;wreg free
  5938   005534                     
  5939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5940   005534  4A18               	infsnz	pad@i^0,f,c
  5941   005536  2A19               	incf	(pad@i+1)^0,f,c
  5942   005538                     l4612:
  5943                           
  5944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5945   005538  501A               	movf	pad@w^0,w,c
  5946   00553A  5C18               	subwf	pad@i^0,w,c
  5947   00553C  5019               	movf	(pad@i+1)^0,w,c
  5948   00553E  0A80               	xorlw	128
  5949   005540  6E17               	movwf	??_pad^0,c
  5950   005542  501B               	movf	(pad@w+1)^0,w,c
  5951   005544  0A80               	xorlw	128
  5952   005546  5817               	subwfb	??_pad^0,w,c
  5953   005548  A0D8               	btfss	status,0,c
  5954   00554A  EFA9  F02A         	goto	u4231
  5955   00554E  EFAB  F02A         	goto	u4230
  5956   005552                     u4231:
  5957   005552  EF90  F02A         	goto	l4608
  5958   005556                     u4230:
  5959   005556                     
  5960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5961   005556  C013  F00A         	movff	pad@buf,fputs@s
  5962   00555A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5963   00555E  C011  F00C         	movff	pad@fp,fputs@fp
  5964   005562  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5965   005566  ECDB  F02E         	call	_fputs	;wreg free
  5966   00556A  0012               	return		;funcret
  5967   00556C                     __end_of_pad:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function _fputs *****************
  5971 ;; Defined at:
  5972 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5975 ;;		 -> dbuf(80), 
  5976 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5977 ;;		 -> sprintf@f(11), 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  i               2   14[COMRAM] int 
  5980 ;;  c               1   13[COMRAM] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2    9[COMRAM] int 
  5983 ;; Registers used:
  5984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;Total ram usage:        7 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 2
  5997 ;; This function calls:
  5998 ;;		_fputc
  5999 ;; This function is called by:
  6000 ;;		_pad
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text15
  6005   005DB6                     __ptext15:
  6006                           	callstack 0
  6007   005DB6                     _fputs:
  6008                           	callstack 23
  6009   005DB6  0E00               	movlw	0
  6010   005DB8  6E10               	movwf	(fputs@i+1)^0,c
  6011   005DBA  0E00               	movlw	0
  6012   005DBC  6E0F               	movwf	fputs@i^0,c
  6013   005DBE  EFEC  F02E         	goto	l4140
  6014   005DC2                     l4136:
  6015   005DC2  C00E  F001         	movff	fputs@c,fputc@c
  6016   005DC6  6A02               	clrf	(fputc@c+1)^0,c
  6017   005DC8  C00C  F003         	movff	fputs@fp,fputc@fp
  6018   005DCC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6019   005DD0  ECB4  F026         	call	_fputc	;wreg free
  6020   005DD4  4A0F               	infsnz	fputs@i^0,f,c
  6021   005DD6  2A10               	incf	(fputs@i+1)^0,f,c
  6022   005DD8                     l4140:
  6023   005DD8  500F               	movf	fputs@i^0,w,c
  6024   005DDA  240A               	addwf	fputs@s^0,w,c
  6025   005DDC  6ED9               	movwf	fsr2l,c
  6026   005DDE  5010               	movf	(fputs@i+1)^0,w,c
  6027   005DE0  200B               	addwfc	(fputs@s+1)^0,w,c
  6028   005DE2  6EDA               	movwf	fsr2h,c
  6029   005DE4  50DF               	movf	indf2,w,c
  6030   005DE6  6E0E               	movwf	fputs@c^0,c
  6031   005DE8  500E               	movf	fputs@c^0,w,c
  6032   005DEA  A4D8               	btfss	status,2,c
  6033   005DEC  EFFA  F02E         	goto	u3481
  6034   005DF0  EFFC  F02E         	goto	u3480
  6035   005DF4                     u3481:
  6036   005DF4  EFE1  F02E         	goto	l4136
  6037   005DF8                     u3480:
  6038   005DF8  0012               	return		;funcret
  6039   005DFA                     __end_of_fputs:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function _fputc *****************
  6043 ;; Defined at:
  6044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  c               2    0[COMRAM] int 
  6047 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6048 ;;		 -> sprintf@f(11), 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2    0[COMRAM] int 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;Total ram usage:        9 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 1
  6067 ;; This function calls:
  6068 ;;		_putch
  6069 ;; This function is called by:
  6070 ;;		_pad
  6071 ;;		_vfpfcnvrt
  6072 ;;		_fputs
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text16
  6077   004D68                     __ptext16:
  6078                           	callstack 0
  6079   004D68                     _fputc:
  6080                           	callstack 26
  6081   004D68  5003               	movf	fputc@fp^0,w,c
  6082   004D6A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6083   004D6C  B4D8               	btfsc	status,2,c
  6084   004D6E  EFBB  F026         	goto	u3021
  6085   004D72  EFBD  F026         	goto	u3020
  6086   004D76                     u3021:
  6087   004D76  EFC6  F026         	goto	l3894
  6088   004D7A                     u3020:
  6089   004D7A  5003               	movf	fputc@fp^0,w,c
  6090   004D7C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6091   004D7E  A4D8               	btfss	status,2,c
  6092   004D80  EFC4  F026         	goto	u3031
  6093   004D84  EFC6  F026         	goto	u3030
  6094   004D88                     u3031:
  6095   004D88  EFCB  F026         	goto	l3896
  6096   004D8C                     u3030:
  6097   004D8C                     l3894:
  6098   004D8C  5001               	movf	fputc@c^0,w,c
  6099   004D8E  EC8A  F030         	call	_putch
  6100   004D92  EF18  F027         	goto	l1575
  6101   004D96                     l3896:
  6102   004D96  EE20 F009          	lfsr	2,9
  6103   004D9A  5003               	movf	fputc@fp^0,w,c
  6104   004D9C  26D9               	addwf	fsr2l,f,c
  6105   004D9E  5004               	movf	(fputc@fp+1)^0,w,c
  6106   004DA0  22DA               	addwfc	fsr2h,f,c
  6107   004DA2  50DE               	movf	postinc2,w,c
  6108   004DA4  10DE               	iorwf	postinc2,w,c
  6109   004DA6  B4D8               	btfsc	status,2,c
  6110   004DA8  EFD8  F026         	goto	u3041
  6111   004DAC  EFDA  F026         	goto	u3040
  6112   004DB0                     u3041:
  6113   004DB0  EFF5  F026         	goto	l3900
  6114   004DB4                     u3040:
  6115   004DB4  EE20 F009          	lfsr	2,9
  6116   004DB8  5003               	movf	fputc@fp^0,w,c
  6117   004DBA  26D9               	addwf	fsr2l,f,c
  6118   004DBC  5004               	movf	(fputc@fp+1)^0,w,c
  6119   004DBE  22DA               	addwfc	fsr2h,f,c
  6120   004DC0  EE10 F003          	lfsr	1,3
  6121   004DC4  5003               	movf	fputc@fp^0,w,c
  6122   004DC6  26E1               	addwf	fsr1l,f,c
  6123   004DC8  5004               	movf	(fputc@fp+1)^0,w,c
  6124   004DCA  22E2               	addwfc	fsr1h,f,c
  6125   004DCC  50DE               	movf	postinc2,w,c
  6126   004DCE  5CE6               	subwf	postinc1,w,c
  6127   004DD0  50E6               	movf	postinc1,w,c
  6128   004DD2  0A80               	xorlw	128
  6129   004DD4  6E09               	movwf	(??_fputc+4)^0,c
  6130   004DD6  50DE               	movf	postinc2,w,c
  6131   004DD8  0A80               	xorlw	128
  6132   004DDA  5809               	subwfb	(??_fputc+4)^0,w,c
  6133   004DDC  B0D8               	btfsc	status,0,c
  6134   004DDE  EFF3  F026         	goto	u3051
  6135   004DE2  EFF5  F026         	goto	u3050
  6136   004DE6                     u3051:
  6137   004DE6  EF18  F027         	goto	l1575
  6138   004DEA                     u3050:
  6139   004DEA                     l3900:
  6140   004DEA  EE20 F003          	lfsr	2,3
  6141   004DEE  5003               	movf	fputc@fp^0,w,c
  6142   004DF0  26D9               	addwf	fsr2l,f,c
  6143   004DF2  5004               	movf	(fputc@fp+1)^0,w,c
  6144   004DF4  22DA               	addwfc	fsr2h,f,c
  6145   004DF6  CFDE F005          	movff	postinc2,??_fputc
  6146   004DFA  CFDD F006          	movff	postdec2,??_fputc+1
  6147   004DFE  C003  FFD9         	movff	fputc@fp,fsr2l
  6148   004E02  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6149   004E06  CFDE F007          	movff	postinc2,??_fputc+2
  6150   004E0A  CFDD F008          	movff	postdec2,??_fputc+3
  6151   004E0E  5005               	movf	??_fputc^0,w,c
  6152   004E10  2407               	addwf	(??_fputc+2)^0,w,c
  6153   004E12  6ED9               	movwf	fsr2l,c
  6154   004E14  5006               	movf	(??_fputc+1)^0,w,c
  6155   004E16  2008               	addwfc	(??_fputc+3)^0,w,c
  6156   004E18  6EDA               	movwf	fsr2h,c
  6157   004E1A  C001  FFDF         	movff	fputc@c,indf2
  6158   004E1E  EE20 F003          	lfsr	2,3
  6159   004E22  5003               	movf	fputc@fp^0,w,c
  6160   004E24  26D9               	addwf	fsr2l,f,c
  6161   004E26  5004               	movf	(fputc@fp+1)^0,w,c
  6162   004E28  22DA               	addwfc	fsr2h,f,c
  6163   004E2A  2ADE               	incf	postinc2,f,c
  6164   004E2C  0E00               	movlw	0
  6165   004E2E  22DD               	addwfc	postdec2,f,c
  6166   004E30                     l1575:
  6167   004E30  0012               	return		;funcret
  6168   004E32                     __end_of_fputc:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _putch *****************
  6172 ;; Defined at:
  6173 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  c               1    wreg     unsigned char 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  c               1    0[COMRAM] unsigned char 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_fputc
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text17
  6201   006114                     __ptext17:
  6202                           	callstack 0
  6203   006114                     _putch:
  6204                           	callstack 26
  6205   006114  0012               	return		;funcret
  6206   006116                     __end_of_putch:
  6207                           	callstack 0
  6208                           
  6209 ;; *************** function _abs *****************
  6210 ;; Defined at:
  6211 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  a               2   18[COMRAM] int 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  2   18[COMRAM] int 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;Total ram usage:        4 bytes
  6230 ;; Hardware stack levels used: 1
  6231 ;; This function calls:
  6232 ;;		Nothing
  6233 ;; This function is called by:
  6234 ;;		_dtoa
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text18
  6239   005E3C                     __ptext18:
  6240                           	callstack 0
  6241   005E3C                     _abs:
  6242                           	callstack 26
  6243   005E3C  BE14               	btfsc	(abs@a+1)^0,7,c
  6244   005E3E  EF2B  F02F         	goto	u4240
  6245   005E42  5014               	movf	(abs@a+1)^0,w,c
  6246   005E44  E106               	bnz	u4241
  6247   005E46  0413               	decf	abs@a^0,w,c
  6248   005E48  B0D8               	btfsc	status,0,c
  6249   005E4A  EF29  F02F         	goto	u4241
  6250   005E4E  EF2B  F02F         	goto	u4240
  6251   005E52                     u4241:
  6252   005E52  EF39  F02F         	goto	l1534
  6253   005E56                     u4240:
  6254   005E56  C013  F015         	movff	abs@a,??_abs
  6255   005E5A  C014  F016         	movff	abs@a+1,??_abs+1
  6256   005E5E  1E15               	comf	??_abs^0,f,c
  6257   005E60  1E16               	comf	(??_abs+1)^0,f,c
  6258   005E62  4A15               	infsnz	??_abs^0,f,c
  6259   005E64  2A16               	incf	(??_abs+1)^0,f,c
  6260   005E66  C015  F013         	movff	??_abs,?_abs
  6261   005E6A  C016  F014         	movff	??_abs+1,?_abs+1
  6262   005E6E  EF3D  F02F         	goto	l1537
  6263   005E72                     l1534:
  6264   005E72  C013  F013         	movff	abs@a,?_abs
  6265   005E76  C014  F014         	movff	abs@a+1,?_abs+1
  6266   005E7A                     l1537:
  6267   005E7A  0012               	return		;funcret
  6268   005E7C                     __end_of_abs:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function ___aomod *****************
  6272 ;; Defined at:
  6273 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  dividend        8    0[COMRAM] long long 
  6276 ;;  divisor         8    8[COMRAM] long long 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  sign            1   17[COMRAM] unsigned char 
  6279 ;;  counter         1   16[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  8    0[COMRAM] long long 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6289 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;Total ram usage:       18 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_dtoa
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text19
  6303   0048FC                     __ptext19:
  6304                           	callstack 0
  6305   0048FC                     ___aomod:
  6306                           	callstack 26
  6307   0048FC  0E00               	movlw	0
  6308   0048FE  6E12               	movwf	___aomod@sign^0,c
  6309   004900  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6310   004902  EF87  F024         	goto	u3580
  6311   004906  EF85  F024         	goto	u3581
  6312   00490A                     u3581:
  6313   00490A  EF99  F024         	goto	l4210
  6314   00490E                     u3580:
  6315   00490E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6316   004910  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6317   004912  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6318   004914  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6319   004916  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6320   004918  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6321   00491A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6322   00491C  6C01               	negf	___aomod@dividend^0,c
  6323   00491E  0E00               	movlw	0
  6324   004920  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6325   004922  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6326   004924  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6327   004926  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6328   004928  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6329   00492A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6330   00492C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6331   00492E  0E01               	movlw	1
  6332   004930  6E12               	movwf	___aomod@sign^0,c
  6333   004932                     l4210:
  6334   004932  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6335   004934  EFA0  F024         	goto	u3590
  6336   004938  EF9E  F024         	goto	u3591
  6337   00493C                     u3591:
  6338   00493C  EFB0  F024         	goto	l4214
  6339   004940                     u3590:
  6340   004940  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6341   004942  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6342   004944  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6343   004946  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6344   004948  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6345   00494A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6346   00494C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6347   00494E  6C09               	negf	___aomod@divisor^0,c
  6348   004950  0E00               	movlw	0
  6349   004952  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6350   004954  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6351   004956  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6352   004958  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6353   00495A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6354   00495C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6355   00495E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6356   004960                     l4214:
  6357   004960  5009               	movf	___aomod@divisor^0,w,c
  6358   004962  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6359   004964  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6360   004966  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6361   004968  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6362   00496A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6363   00496C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6364   00496E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6365   004970  B4D8               	btfsc	status,2,c
  6366   004972  EFBD  F024         	goto	u3601
  6367   004976  EFBF  F024         	goto	u3600
  6368   00497A                     u3601:
  6369   00497A  EF07  F025         	goto	l4230
  6370   00497E                     u3600:
  6371   00497E  0E01               	movlw	1
  6372   004980  6E11               	movwf	___aomod@counter^0,c
  6373   004982  EFCD  F024         	goto	l4220
  6374   004986                     l4218:
  6375   004986  90D8               	bcf	status,0,c
  6376   004988  3609               	rlcf	___aomod@divisor^0,f,c
  6377   00498A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6378   00498C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6379   00498E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6380   004990  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6381   004992  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6382   004994  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6383   004996  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6384   004998  2A11               	incf	___aomod@counter^0,f,c
  6385   00499A                     l4220:
  6386   00499A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6387   00499C  EFD2  F024         	goto	u3611
  6388   0049A0  EFD4  F024         	goto	u3610
  6389   0049A4                     u3611:
  6390   0049A4  EFC3  F024         	goto	l4218
  6391   0049A8                     u3610:
  6392   0049A8                     l4222:
  6393   0049A8  5009               	movf	___aomod@divisor^0,w,c
  6394   0049AA  5C01               	subwf	___aomod@dividend^0,w,c
  6395   0049AC  500A               	movf	(___aomod@divisor+1)^0,w,c
  6396   0049AE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6397   0049B0  500B               	movf	(___aomod@divisor+2)^0,w,c
  6398   0049B2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6399   0049B4  500C               	movf	(___aomod@divisor+3)^0,w,c
  6400   0049B6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6401   0049B8  500D               	movf	(___aomod@divisor+4)^0,w,c
  6402   0049BA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6403   0049BC  500E               	movf	(___aomod@divisor+5)^0,w,c
  6404   0049BE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6405   0049C0  500F               	movf	(___aomod@divisor+6)^0,w,c
  6406   0049C2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6407   0049C4  5010               	movf	(___aomod@divisor+7)^0,w,c
  6408   0049C6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6409   0049C8  A0D8               	btfss	status,0,c
  6410   0049CA  EFE9  F024         	goto	u3621
  6411   0049CE  EFEB  F024         	goto	u3620
  6412   0049D2                     u3621:
  6413   0049D2  EFFB  F024         	goto	l4226
  6414   0049D6                     u3620:
  6415   0049D6  5009               	movf	___aomod@divisor^0,w,c
  6416   0049D8  5E01               	subwf	___aomod@dividend^0,f,c
  6417   0049DA  500A               	movf	(___aomod@divisor+1)^0,w,c
  6418   0049DC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6419   0049DE  500B               	movf	(___aomod@divisor+2)^0,w,c
  6420   0049E0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6421   0049E2  500C               	movf	(___aomod@divisor+3)^0,w,c
  6422   0049E4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6423   0049E6  500D               	movf	(___aomod@divisor+4)^0,w,c
  6424   0049E8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6425   0049EA  500E               	movf	(___aomod@divisor+5)^0,w,c
  6426   0049EC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6427   0049EE  500F               	movf	(___aomod@divisor+6)^0,w,c
  6428   0049F0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6429   0049F2  5010               	movf	(___aomod@divisor+7)^0,w,c
  6430   0049F4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6431   0049F6                     l4226:
  6432   0049F6  90D8               	bcf	status,0,c
  6433   0049F8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6434   0049FA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6435   0049FC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6436   0049FE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6437   004A00  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6438   004A02  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6439   004A04  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6440   004A06  3209               	rrcf	___aomod@divisor^0,f,c
  6441   004A08  2E11               	decfsz	___aomod@counter^0,f,c
  6442   004A0A  EFD4  F024         	goto	l4222
  6443   004A0E                     l4230:
  6444   004A0E  5012               	movf	___aomod@sign^0,w,c
  6445   004A10  B4D8               	btfsc	status,2,c
  6446   004A12  EF0D  F025         	goto	u3631
  6447   004A16  EF0F  F025         	goto	u3630
  6448   004A1A                     u3631:
  6449   004A1A  EF1F  F025         	goto	l4234
  6450   004A1E                     u3630:
  6451   004A1E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6452   004A20  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6453   004A22  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6454   004A24  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6455   004A26  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6456   004A28  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6457   004A2A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6458   004A2C  6C01               	negf	___aomod@dividend^0,c
  6459   004A2E  0E00               	movlw	0
  6460   004A30  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6461   004A32  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6462   004A34  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6463   004A36  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6464   004A38  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6465   004A3A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6466   004A3C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6467   004A3E                     l4234:
  6468   004A3E  C001  F001         	movff	___aomod@dividend,?___aomod
  6469   004A42  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6470   004A46  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6471   004A4A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6472   004A4E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6473   004A52  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6474   004A56  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6475   004A5A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6476   004A5E  0012               	return		;funcret
  6477   004A60                     __end_of___aomod:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function ___aodiv *****************
  6481 ;; Defined at:
  6482 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  dividend        8    0[COMRAM] long long 
  6485 ;;  divisor         8    8[COMRAM] long long 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  quotient        8   18[COMRAM] long long 
  6488 ;;  sign            1   17[COMRAM] unsigned char 
  6489 ;;  counter         1   16[COMRAM] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  8    0[COMRAM] long long 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6499 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;Total ram usage:       26 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_dtoa
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text20
  6513   004608                     __ptext20:
  6514                           	callstack 0
  6515   004608                     ___aodiv:
  6516                           	callstack 26
  6517   004608  0E00               	movlw	0
  6518   00460A  6E12               	movwf	___aodiv@sign^0,c
  6519   00460C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6520   00460E  EF0D  F023         	goto	u3510
  6521   004612  EF0B  F023         	goto	u3511
  6522   004616                     u3511:
  6523   004616  EF1F  F023         	goto	l4166
  6524   00461A                     u3510:
  6525   00461A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6526   00461C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6527   00461E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6528   004620  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6529   004622  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6530   004624  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6531   004626  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6532   004628  6C09               	negf	___aodiv@divisor^0,c
  6533   00462A  0E00               	movlw	0
  6534   00462C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6535   00462E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6536   004630  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6537   004632  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6538   004634  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6539   004636  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6540   004638  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6541   00463A  0E01               	movlw	1
  6542   00463C  6E12               	movwf	___aodiv@sign^0,c
  6543   00463E                     l4166:
  6544   00463E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6545   004640  EF26  F023         	goto	u3520
  6546   004644  EF24  F023         	goto	u3521
  6547   004648                     u3521:
  6548   004648  EF38  F023         	goto	l4172
  6549   00464C                     u3520:
  6550   00464C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6551   00464E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6552   004650  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6553   004652  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6554   004654  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6555   004656  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6556   004658  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6557   00465A  6C01               	negf	___aodiv@dividend^0,c
  6558   00465C  0E00               	movlw	0
  6559   00465E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6560   004660  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6561   004662  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6562   004664  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6563   004666  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6564   004668  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6565   00466A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6566   00466C  0E01               	movlw	1
  6567   00466E  1A12               	xorwf	___aodiv@sign^0,f,c
  6568   004670                     l4172:
  6569   004670  EE20  F013         	lfsr	2,___aodiv@quotient
  6570   004674  0E07               	movlw	7
  6571   004676                     u3531:
  6572   004676  6ADE               	clrf	postinc2,c
  6573   004678  06E8               	decf	wreg,f,c
  6574   00467A  E2FD               	bc	u3531
  6575   00467C  5009               	movf	___aodiv@divisor^0,w,c
  6576   00467E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6577   004680  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6578   004682  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6579   004684  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6580   004686  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6581   004688  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6582   00468A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6583   00468C  B4D8               	btfsc	status,2,c
  6584   00468E  EF4B  F023         	goto	u3541
  6585   004692  EF4D  F023         	goto	u3540
  6586   004696                     u3541:
  6587   004696  EF9F  F023         	goto	l4194
  6588   00469A                     u3540:
  6589   00469A  0E01               	movlw	1
  6590   00469C  6E11               	movwf	___aodiv@counter^0,c
  6591   00469E  EF5B  F023         	goto	l4180
  6592   0046A2                     l4178:
  6593   0046A2  90D8               	bcf	status,0,c
  6594   0046A4  3609               	rlcf	___aodiv@divisor^0,f,c
  6595   0046A6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6596   0046A8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6597   0046AA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6598   0046AC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6599   0046AE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6600   0046B0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6601   0046B2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6602   0046B4  2A11               	incf	___aodiv@counter^0,f,c
  6603   0046B6                     l4180:
  6604   0046B6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6605   0046B8  EF60  F023         	goto	u3551
  6606   0046BC  EF62  F023         	goto	u3550
  6607   0046C0                     u3551:
  6608   0046C0  EF51  F023         	goto	l4178
  6609   0046C4                     u3550:
  6610   0046C4                     l4182:
  6611   0046C4  90D8               	bcf	status,0,c
  6612   0046C6  3613               	rlcf	___aodiv@quotient^0,f,c
  6613   0046C8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6614   0046CA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6615   0046CC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6616   0046CE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6617   0046D0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6618   0046D2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6619   0046D4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6620   0046D6  5009               	movf	___aodiv@divisor^0,w,c
  6621   0046D8  5C01               	subwf	___aodiv@dividend^0,w,c
  6622   0046DA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6623   0046DC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6624   0046DE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6625   0046E0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6626   0046E2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6627   0046E4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6628   0046E6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6629   0046E8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6630   0046EA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6631   0046EC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6632   0046EE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6633   0046F0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6634   0046F2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6635   0046F4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6636   0046F6  A0D8               	btfss	status,0,c
  6637   0046F8  EF80  F023         	goto	u3561
  6638   0046FC  EF82  F023         	goto	u3560
  6639   004700                     u3561:
  6640   004700  EF93  F023         	goto	l4190
  6641   004704                     u3560:
  6642   004704  5009               	movf	___aodiv@divisor^0,w,c
  6643   004706  5E01               	subwf	___aodiv@dividend^0,f,c
  6644   004708  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6645   00470A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6646   00470C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6647   00470E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6648   004710  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6649   004712  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6650   004714  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6651   004716  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6652   004718  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6653   00471A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6654   00471C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6655   00471E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6656   004720  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6657   004722  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6658   004724  8013               	bsf	___aodiv@quotient^0,0,c
  6659   004726                     l4190:
  6660   004726  90D8               	bcf	status,0,c
  6661   004728  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6662   00472A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6663   00472C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6664   00472E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6665   004730  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6666   004732  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6667   004734  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6668   004736  3209               	rrcf	___aodiv@divisor^0,f,c
  6669   004738  2E11               	decfsz	___aodiv@counter^0,f,c
  6670   00473A  EF62  F023         	goto	l4182
  6671   00473E                     l4194:
  6672   00473E  5012               	movf	___aodiv@sign^0,w,c
  6673   004740  B4D8               	btfsc	status,2,c
  6674   004742  EFA5  F023         	goto	u3571
  6675   004746  EFA7  F023         	goto	u3570
  6676   00474A                     u3571:
  6677   00474A  EFB7  F023         	goto	l4198
  6678   00474E                     u3570:
  6679   00474E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6680   004750  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6681   004752  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6682   004754  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6683   004756  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6684   004758  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6685   00475A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6686   00475C  6C13               	negf	___aodiv@quotient^0,c
  6687   00475E  0E00               	movlw	0
  6688   004760  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6689   004762  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6690   004764  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6691   004766  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6692   004768  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6693   00476A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6694   00476C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6695   00476E                     l4198:
  6696   00476E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6697   004772  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6698   004776  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6699   00477A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6700   00477E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6701   004782  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6702   004786  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6703   00478A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6704   00478E  0012               	return		;funcret
  6705   004790                     __end_of___aodiv:
  6706                           	callstack 0
  6707                           
  6708 ;; *************** function _sendStringSerial4 *****************
  6709 ;; Defined at:
  6710 ;;		line 33 in file "serial.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  string          2    1[COMRAM] PTR unsigned char 
  6713 ;;		 -> main@buf(100), 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;Total ram usage:        2 bytes
  6730 ;; Hardware stack levels used: 1
  6731 ;; Hardware stack levels required when called: 1
  6732 ;; This function calls:
  6733 ;;		_sendCharSerial4
  6734 ;; This function is called by:
  6735 ;;		_main
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           	psect	text21
  6740   005F9E                     __ptext21:
  6741                           	callstack 0
  6742   005F9E                     _sendStringSerial4:
  6743                           	callstack 29
  6744   005F9E                     
  6745                           ;serial.c: 34:     while (*string!=0){
  6746   005F9E  EFDA  F02F         	goto	l5574
  6747   005FA2                     l5570:
  6748                           
  6749                           ;serial.c: 35:         sendCharSerial4(*string++);
  6750   005FA2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6751   005FA6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6752   005FAA  50DF               	movf	indf2,w,c
  6753   005FAC  EC65  F030         	call	_sendCharSerial4
  6754   005FB0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6755   005FB2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6756   005FB4                     l5574:
  6757                           
  6758                           ;serial.c: 34:     while (*string!=0){
  6759   005FB4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6760   005FB8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6761   005FBC  50DF               	movf	indf2,w,c
  6762   005FBE  A4D8               	btfss	status,2,c
  6763   005FC0  EFE4  F02F         	goto	u5541
  6764   005FC4  EFE6  F02F         	goto	u5540
  6765   005FC8                     u5541:
  6766   005FC8  EFD1  F02F         	goto	l5570
  6767   005FCC                     u5540:
  6768   005FCC  0012               	return		;funcret
  6769   005FCE                     __end_of_sendStringSerial4:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _sendCharSerial4 *****************
  6773 ;; Defined at:
  6774 ;;		line 26 in file "serial.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  charToSend      1    wreg     unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  charToSend      1    0[COMRAM] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;Total ram usage:        1 bytes
  6793 ;; Hardware stack levels used: 1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		_sendStringSerial4
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text22
  6802   0060CA                     __ptext22:
  6803                           	callstack 0
  6804   0060CA                     _sendCharSerial4:
  6805                           	callstack 29
  6806                           
  6807                           ;incstack = 0
  6808                           ;sendCharSerial4@charToSend stored from wreg
  6809   0060CA  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6810   0060CC                     l209:
  6811   0060CC  010E               	movlb	14	; () banked
  6812   0060CE  A537               	btfss	55,2,b	;volatile
  6813   0060D0  EF6C  F030         	goto	u5071
  6814   0060D4  EF6E  F030         	goto	u5070
  6815   0060D8                     u5071:
  6816   0060D8  EF66  F030         	goto	l209
  6817   0060DC                     u5070:
  6818   0060DC                     
  6819                           ; BSR set to: 14
  6820                           ;serial.c: 28:     TX4REG = charToSend;
  6821   0060DC  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6822   0060E0                     
  6823                           ; BSR set to: 14
  6824   0060E0  0012               	return		;funcret
  6825   0060E2                     __end_of_sendCharSerial4:
  6826                           	callstack 0
  6827                           
  6828 ;; *************** function _readColours *****************
  6829 ;; Defined at:
  6830 ;;		line 105 in file "color.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;  vals            2   11[COMRAM] PTR struct RGB
  6833 ;;		 -> vals(8), 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6845 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;Total ram usage:        2 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; Hardware stack levels required when called: 3
  6852 ;; This function calls:
  6853 ;;		_color_read_Blue
  6854 ;;		_color_read_Green
  6855 ;;		_color_read_Red
  6856 ;;		_color_read_lum
  6857 ;; This function is called by:
  6858 ;;		_main
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text23
  6863   0056AC                     __ptext23:
  6864                           	callstack 0
  6865   0056AC                     _readColours:
  6866                           	callstack 27
  6867   0056AC                     
  6868                           ;color.c: 107:     vals ->R = color_read_Red();
  6869   0056AC  ECAA  F02D         	call	_color_read_Red	;wreg free
  6870   0056B0  C00C  FFD9         	movff	readColours@vals,fsr2l
  6871   0056B4  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6872   0056B8  C005  FFDE         	movff	?_color_read_Red,postinc2
  6873   0056BC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6874                           
  6875                           ;color.c: 108:     vals ->B = color_read_Blue();
  6876   0056C0  ECFA  F02D         	call	_color_read_Blue	;wreg free
  6877   0056C4  EE20 F004          	lfsr	2,4
  6878   0056C8  500C               	movf	readColours@vals^0,w,c
  6879   0056CA  26D9               	addwf	fsr2l,f,c
  6880   0056CC  500D               	movf	(readColours@vals+1)^0,w,c
  6881   0056CE  22DA               	addwfc	fsr2h,f,c
  6882   0056D0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6883   0056D4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6884                           
  6885                           ;color.c: 109:     vals ->G = color_read_Green();
  6886   0056D8  ECD2  F02D         	call	_color_read_Green	;wreg free
  6887   0056DC  EE20 F002          	lfsr	2,2
  6888   0056E0  500C               	movf	readColours@vals^0,w,c
  6889   0056E2  26D9               	addwf	fsr2l,f,c
  6890   0056E4  500D               	movf	(readColours@vals+1)^0,w,c
  6891   0056E6  22DA               	addwfc	fsr2h,f,c
  6892   0056E8  C005  FFDE         	movff	?_color_read_Green,postinc2
  6893   0056EC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6894                           
  6895                           ;color.c: 110:     vals ->L = color_read_lum();
  6896   0056F0  EC82  F02D         	call	_color_read_lum	;wreg free
  6897   0056F4  EE20 F006          	lfsr	2,6
  6898   0056F8  500C               	movf	readColours@vals^0,w,c
  6899   0056FA  26D9               	addwf	fsr2l,f,c
  6900   0056FC  500D               	movf	(readColours@vals+1)^0,w,c
  6901   0056FE  22DA               	addwfc	fsr2h,f,c
  6902   005700  C005  FFDE         	movff	?_color_read_lum,postinc2
  6903   005704  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6904   005708  0012               	return		;funcret
  6905   00570A                     __end_of_readColours:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _color_read_lum *****************
  6909 ;; Defined at:
  6910 ;;		line 49 in file "color.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  tmp             2    9[COMRAM] unsigned int 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  2    4[COMRAM] unsigned int 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6926 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;Total ram usage:        7 bytes
  6929 ;; Hardware stack levels used: 1
  6930 ;; Hardware stack levels required when called: 2
  6931 ;; This function calls:
  6932 ;;		_I2C_2_Master_Read
  6933 ;;		_I2C_2_Master_RepStart
  6934 ;;		_I2C_2_Master_Start
  6935 ;;		_I2C_2_Master_Stop
  6936 ;;		_I2C_2_Master_Write
  6937 ;; This function is called by:
  6938 ;;		_readColours
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text24
  6943   005B04                     __ptext24:
  6944                           	callstack 0
  6945   005B04                     _color_read_lum:
  6946                           	callstack 27
  6947   005B04                     
  6948                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6949   005B04  EC81  F030         	call	_I2C_2_Master_Start	;wreg free
  6950                           
  6951                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6952   005B08  0E52               	movlw	82
  6953   005B0A  EC71  F030         	call	_I2C_2_Master_Write
  6954                           
  6955                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6956   005B0E  0EB4               	movlw	180
  6957   005B10  EC71  F030         	call	_I2C_2_Master_Write
  6958                           
  6959                           ;color.c: 55:  I2C_2_Master_RepStart();
  6960   005B14  EC77  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6961                           
  6962                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6963   005B18  0E53               	movlw	83
  6964   005B1A  EC71  F030         	call	_I2C_2_Master_Write
  6965                           
  6966                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6967   005B1E  0E01               	movlw	1
  6968   005B20  ECFD  F02E         	call	_I2C_2_Master_Read
  6969   005B24  6E07               	movwf	??_color_read_lum^0,c
  6970   005B26  5007               	movf	??_color_read_lum^0,w,c
  6971   005B28  6E0A               	movwf	color_read_lum@tmp^0,c
  6972   005B2A  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6973                           
  6974                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6975   005B2C  0E00               	movlw	0
  6976   005B2E  ECFD  F02E         	call	_I2C_2_Master_Read
  6977   005B32  6E07               	movwf	??_color_read_lum^0,c
  6978   005B34  5007               	movf	??_color_read_lum^0,w,c
  6979   005B36  6E09               	movwf	(??_color_read_lum+2)^0,c
  6980   005B38  6A08               	clrf	(??_color_read_lum+1)^0,c
  6981   005B3A  500A               	movf	color_read_lum@tmp^0,w,c
  6982   005B3C  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6983   005B3E  6E0A               	movwf	color_read_lum@tmp^0,c
  6984   005B40  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6985   005B42  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6986   005B44  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6987                           
  6988                           ;color.c: 59:  I2C_2_Master_Stop();
  6989   005B46  EC7C  F030         	call	_I2C_2_Master_Stop	;wreg free
  6990   005B4A                     
  6991                           ;color.c: 60:  return tmp;
  6992   005B4A  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6993   005B4E  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6994   005B52  0012               	return		;funcret
  6995   005B54                     __end_of_color_read_lum:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _color_read_Red *****************
  6999 ;; Defined at:
  7000 ;;		line 63 in file "color.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  tmp             2    9[COMRAM] unsigned int 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  2    4[COMRAM] unsigned int 
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;Total ram usage:        7 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 2
  7021 ;; This function calls:
  7022 ;;		_I2C_2_Master_Read
  7023 ;;		_I2C_2_Master_RepStart
  7024 ;;		_I2C_2_Master_Start
  7025 ;;		_I2C_2_Master_Stop
  7026 ;;		_I2C_2_Master_Write
  7027 ;; This function is called by:
  7028 ;;		_readColours
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text25
  7033   005B54                     __ptext25:
  7034                           	callstack 0
  7035   005B54                     _color_read_Red:
  7036                           	callstack 27
  7037   005B54                     
  7038                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7039   005B54  EC81  F030         	call	_I2C_2_Master_Start	;wreg free
  7040                           
  7041                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7042   005B58  0E52               	movlw	82
  7043   005B5A  EC71  F030         	call	_I2C_2_Master_Write
  7044                           
  7045                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7046   005B5E  0EB6               	movlw	182
  7047   005B60  EC71  F030         	call	_I2C_2_Master_Write
  7048                           
  7049                           ;color.c: 69:  I2C_2_Master_RepStart();
  7050   005B64  EC77  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7051                           
  7052                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7053   005B68  0E53               	movlw	83
  7054   005B6A  EC71  F030         	call	_I2C_2_Master_Write
  7055                           
  7056                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7057   005B6E  0E01               	movlw	1
  7058   005B70  ECFD  F02E         	call	_I2C_2_Master_Read
  7059   005B74  6E07               	movwf	??_color_read_Red^0,c
  7060   005B76  5007               	movf	??_color_read_Red^0,w,c
  7061   005B78  6E0A               	movwf	color_read_Red@tmp^0,c
  7062   005B7A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7063                           
  7064                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7065   005B7C  0E00               	movlw	0
  7066   005B7E  ECFD  F02E         	call	_I2C_2_Master_Read
  7067   005B82  6E07               	movwf	??_color_read_Red^0,c
  7068   005B84  5007               	movf	??_color_read_Red^0,w,c
  7069   005B86  6E09               	movwf	(??_color_read_Red+2)^0,c
  7070   005B88  6A08               	clrf	(??_color_read_Red+1)^0,c
  7071   005B8A  500A               	movf	color_read_Red@tmp^0,w,c
  7072   005B8C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7073   005B8E  6E0A               	movwf	color_read_Red@tmp^0,c
  7074   005B90  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7075   005B92  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7076   005B94  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7077                           
  7078                           ;color.c: 73:  I2C_2_Master_Stop();
  7079   005B96  EC7C  F030         	call	_I2C_2_Master_Stop	;wreg free
  7080   005B9A                     
  7081                           ;color.c: 74:  return tmp;
  7082   005B9A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7083   005B9E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7084   005BA2  0012               	return		;funcret
  7085   005BA4                     __end_of_color_read_Red:
  7086                           	callstack 0
  7087                           
  7088 ;; *************** function _color_read_Green *****************
  7089 ;; Defined at:
  7090 ;;		line 76 in file "color.c"
  7091 ;; Parameters:    Size  Location     Type
  7092 ;;		None
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;  tmp             2    9[COMRAM] unsigned int 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  2    4[COMRAM] unsigned int 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;Total ram usage:        7 bytes
  7109 ;; Hardware stack levels used: 1
  7110 ;; Hardware stack levels required when called: 2
  7111 ;; This function calls:
  7112 ;;		_I2C_2_Master_Read
  7113 ;;		_I2C_2_Master_RepStart
  7114 ;;		_I2C_2_Master_Start
  7115 ;;		_I2C_2_Master_Stop
  7116 ;;		_I2C_2_Master_Write
  7117 ;; This function is called by:
  7118 ;;		_readColours
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text26
  7123   005BA4                     __ptext26:
  7124                           	callstack 0
  7125   005BA4                     _color_read_Green:
  7126                           	callstack 27
  7127   005BA4                     
  7128                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7129   005BA4  EC81  F030         	call	_I2C_2_Master_Start	;wreg free
  7130                           
  7131                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7132   005BA8  0E52               	movlw	82
  7133   005BAA  EC71  F030         	call	_I2C_2_Master_Write
  7134                           
  7135                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7136   005BAE  0EB8               	movlw	184
  7137   005BB0  EC71  F030         	call	_I2C_2_Master_Write
  7138                           
  7139                           ;color.c: 82:  I2C_2_Master_RepStart();
  7140   005BB4  EC77  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7141                           
  7142                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7143   005BB8  0E53               	movlw	83
  7144   005BBA  EC71  F030         	call	_I2C_2_Master_Write
  7145                           
  7146                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7147   005BBE  0E01               	movlw	1
  7148   005BC0  ECFD  F02E         	call	_I2C_2_Master_Read
  7149   005BC4  6E07               	movwf	??_color_read_Green^0,c
  7150   005BC6  5007               	movf	??_color_read_Green^0,w,c
  7151   005BC8  6E0A               	movwf	color_read_Green@tmp^0,c
  7152   005BCA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7153                           
  7154                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7155   005BCC  0E00               	movlw	0
  7156   005BCE  ECFD  F02E         	call	_I2C_2_Master_Read
  7157   005BD2  6E07               	movwf	??_color_read_Green^0,c
  7158   005BD4  5007               	movf	??_color_read_Green^0,w,c
  7159   005BD6  6E09               	movwf	(??_color_read_Green+2)^0,c
  7160   005BD8  6A08               	clrf	(??_color_read_Green+1)^0,c
  7161   005BDA  500A               	movf	color_read_Green@tmp^0,w,c
  7162   005BDC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7163   005BDE  6E0A               	movwf	color_read_Green@tmp^0,c
  7164   005BE0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7165   005BE2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7166   005BE4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7167                           
  7168                           ;color.c: 86:  I2C_2_Master_Stop();
  7169   005BE6  EC7C  F030         	call	_I2C_2_Master_Stop	;wreg free
  7170   005BEA                     
  7171                           ;color.c: 87:  return tmp;
  7172   005BEA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7173   005BEE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7174   005BF2  0012               	return		;funcret
  7175   005BF4                     __end_of_color_read_Green:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _color_read_Blue *****************
  7179 ;; Defined at:
  7180 ;;		line 90 in file "color.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  tmp             2    9[COMRAM] unsigned int 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  2    4[COMRAM] unsigned int 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7197 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;Total ram usage:        7 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; Hardware stack levels required when called: 2
  7201 ;; This function calls:
  7202 ;;		_I2C_2_Master_Read
  7203 ;;		_I2C_2_Master_RepStart
  7204 ;;		_I2C_2_Master_Start
  7205 ;;		_I2C_2_Master_Stop
  7206 ;;		_I2C_2_Master_Write
  7207 ;; This function is called by:
  7208 ;;		_readColours
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text27
  7213   005BF4                     __ptext27:
  7214                           	callstack 0
  7215   005BF4                     _color_read_Blue:
  7216                           	callstack 27
  7217   005BF4                     
  7218                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7219   005BF4  EC81  F030         	call	_I2C_2_Master_Start	;wreg free
  7220                           
  7221                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7222   005BF8  0E52               	movlw	82
  7223   005BFA  EC71  F030         	call	_I2C_2_Master_Write
  7224                           
  7225                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7226   005BFE  0EBA               	movlw	186
  7227   005C00  EC71  F030         	call	_I2C_2_Master_Write
  7228                           
  7229                           ;color.c: 96:  I2C_2_Master_RepStart();
  7230   005C04  EC77  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7231                           
  7232                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7233   005C08  0E53               	movlw	83
  7234   005C0A  EC71  F030         	call	_I2C_2_Master_Write
  7235                           
  7236                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7237   005C0E  0E01               	movlw	1
  7238   005C10  ECFD  F02E         	call	_I2C_2_Master_Read
  7239   005C14  6E07               	movwf	??_color_read_Blue^0,c
  7240   005C16  5007               	movf	??_color_read_Blue^0,w,c
  7241   005C18  6E0A               	movwf	color_read_Blue@tmp^0,c
  7242   005C1A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7243                           
  7244                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7245   005C1C  0E00               	movlw	0
  7246   005C1E  ECFD  F02E         	call	_I2C_2_Master_Read
  7247   005C22  6E07               	movwf	??_color_read_Blue^0,c
  7248   005C24  5007               	movf	??_color_read_Blue^0,w,c
  7249   005C26  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7250   005C28  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7251   005C2A  500A               	movf	color_read_Blue@tmp^0,w,c
  7252   005C2C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7253   005C2E  6E0A               	movwf	color_read_Blue@tmp^0,c
  7254   005C30  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7255   005C32  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7256   005C34  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7257                           
  7258                           ;color.c: 100:  I2C_2_Master_Stop();
  7259   005C36  EC7C  F030         	call	_I2C_2_Master_Stop	;wreg free
  7260   005C3A                     
  7261                           ;color.c: 101:  return tmp;
  7262   005C3A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7263   005C3E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7264   005C42  0012               	return		;funcret
  7265   005C44                     __end_of_color_read_Blue:
  7266                           	callstack 0
  7267                           
  7268 ;; *************** function _I2C_2_Master_RepStart *****************
  7269 ;; Defined at:
  7270 ;;		line 33 in file "i2c.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;		None
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  1    wreg      void 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0, cstack
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7288 ;;Total ram usage:        0 bytes
  7289 ;; Hardware stack levels used: 1
  7290 ;; Hardware stack levels required when called: 1
  7291 ;; This function calls:
  7292 ;;		_I2C_2_Master_Idle
  7293 ;; This function is called by:
  7294 ;;		_color_read_lum
  7295 ;;		_color_read_Red
  7296 ;;		_color_read_Green
  7297 ;;		_color_read_Blue
  7298 ;; This function uses a non-reentrant model
  7299 ;;
  7300                           
  7301                           	psect	text28
  7302   0060EE                     __ptext28:
  7303                           	callstack 0
  7304   0060EE                     _I2C_2_Master_RepStart:
  7305                           	callstack 27
  7306   0060EE                     
  7307                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7308   0060EE  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7309   0060F2                     
  7310                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7311   0060F2  010E               	movlb	14	; () banked
  7312   0060F4  83DA               	bsf	218,1,b	;volatile
  7313   0060F6                     
  7314                           ; BSR set to: 14
  7315   0060F6  0012               	return		;funcret
  7316   0060F8                     __end_of_I2C_2_Master_RepStart:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function _I2C_2_Master_Read *****************
  7320 ;; Defined at:
  7321 ;;		line 51 in file "i2c.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  ack             1    wreg     unsigned char 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  ack             1    2[COMRAM] unsigned char 
  7326 ;;  tmp             1    3[COMRAM] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      unsigned char 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7340 ;;Total ram usage:        3 bytes
  7341 ;; Hardware stack levels used: 1
  7342 ;; Hardware stack levels required when called: 1
  7343 ;; This function calls:
  7344 ;;		_I2C_2_Master_Idle
  7345 ;; This function is called by:
  7346 ;;		_color_read_lum
  7347 ;;		_color_read_Red
  7348 ;;		_color_read_Green
  7349 ;;		_color_read_Blue
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text29
  7354   005DFA                     __ptext29:
  7355                           	callstack 0
  7356   005DFA                     _I2C_2_Master_Read:
  7357                           	callstack 27
  7358                           
  7359                           ; BSR set to: 14
  7360                           ;incstack = 0
  7361                           ;I2C_2_Master_Read@ack stored from wreg
  7362   005DFA  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7363   005DFC                     
  7364                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7365   005DFC  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7366   005E00                     
  7367                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7368   005E00  010E               	movlb	14	; () banked
  7369   005E02  87DA               	bsf	218,3,b	;volatile
  7370                           
  7371                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7372   005E04  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7373   005E08                     
  7374                           ;i2c.c: 57:   tmp = SSP2BUF;
  7375   005E08  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7376                           
  7377                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7378   005E0C  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7379   005E10                     
  7380                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7381   005E10  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7382   005E12  B4D8               	btfsc	status,2,c
  7383   005E14  EF0E  F02F         	goto	u5001
  7384   005E18  EF12  F02F         	goto	u5000
  7385   005E1C                     u5001:
  7386   005E1C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7387   005E1E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7388   005E20  EF13  F02F         	goto	u5018
  7389   005E24                     u5000:
  7390   005E24  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7391   005E26                     u5018:
  7392   005E26  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7393   005E28  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7394   005E2A  010E               	movlb	14	; () banked
  7395   005E2C  51DA               	movf	218,w,b	;volatile
  7396   005E2E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7397   005E30  0BDF               	andlw	-33
  7398   005E32  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7399   005E34  6FDA               	movwf	218,b	;volatile
  7400   005E36                     
  7401                           ; BSR set to: 14
  7402                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7403   005E36  89DA               	bsf	218,4,b	;volatile
  7404   005E38                     
  7405                           ; BSR set to: 14
  7406                           ;i2c.c: 61:   return tmp;
  7407   005E38  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7408   005E3A                     
  7409                           ; BSR set to: 14
  7410   005E3A  0012               	return		;funcret
  7411   005E3C                     __end_of_I2C_2_Master_Read:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function _initUSART4 *****************
  7415 ;; Defined at:
  7416 ;;		line 4 in file "serial.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;Total ram usage:        0 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_main
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text30
  7444   0060AC                     __ptext30:
  7445                           	callstack 0
  7446   0060AC                     _initUSART4:
  7447                           	callstack 30
  7448   0060AC                     
  7449                           ;serial.c: 5:     RC0PPS = 0x12;
  7450   0060AC  0E12               	movlw	18
  7451   0060AE  010E               	movlb	14	; () banked
  7452   0060B0  6F62               	movwf	98,b	;volatile
  7453                           
  7454                           ;serial.c: 6:     RX4PPS = 0x11;
  7455   0060B2  0E11               	movlw	17
  7456   0060B4  6F15               	movwf	21,b	;volatile
  7457   0060B6                     
  7458                           ; BSR set to: 14
  7459                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7460   0060B6  97E9               	bcf	233,3,b	;volatile
  7461   0060B8                     
  7462                           ; BSR set to: 14
  7463                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7464   0060B8  95E8               	bcf	232,2,b	;volatile
  7465                           
  7466                           ;serial.c: 9:     SP4BRGL = 51;
  7467   0060BA  0E33               	movlw	51
  7468   0060BC  6FE5               	movwf	229,b	;volatile
  7469                           
  7470                           ;serial.c: 10:     SP4BRGH = 0;
  7471   0060BE  0E00               	movlw	0
  7472   0060C0  6FE6               	movwf	230,b	;volatile
  7473   0060C2                     
  7474                           ; BSR set to: 14
  7475                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7476   0060C2  89E7               	bsf	231,4,b	;volatile
  7477   0060C4                     
  7478                           ; BSR set to: 14
  7479                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7480   0060C4  8BE8               	bsf	232,5,b	;volatile
  7481   0060C6                     
  7482                           ; BSR set to: 14
  7483                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7484   0060C6  8FE7               	bsf	231,7,b	;volatile
  7485   0060C8                     
  7486                           ; BSR set to: 14
  7487   0060C8  0012               	return		;funcret
  7488   0060CA                     __end_of_initUSART4:
  7489                           	callstack 0
  7490                           
  7491 ;; *************** function _initDCmotorsPWM *****************
  7492 ;; Defined at:
  7493 ;;		line 6 in file "dc_motor.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;                  1    wreg      void 
  7500 ;; Registers used:
  7501 ;;		wreg, status,2
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;Total ram usage:        2 bytes
  7512 ;; Hardware stack levels used: 1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_main
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           	psect	text31
  7521   00536A                     __ptext31:
  7522                           	callstack 0
  7523   00536A                     _initDCmotorsPWM:
  7524                           	callstack 30
  7525   00536A                     
  7526                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7527   00536A  0E05               	movlw	5
  7528   00536C  010E               	movlb	14	; () banked
  7529   00536E  6F74               	movwf	116,b	;volatile
  7530                           
  7531                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7532   005370  0E06               	movlw	6
  7533   005372  6F76               	movwf	118,b	;volatile
  7534                           
  7535                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7536   005374  0E07               	movlw	7
  7537   005376  6F69               	movwf	105,b	;volatile
  7538                           
  7539                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7540   005378  0E08               	movlw	8
  7541   00537A  6F88               	movwf	136,b	;volatile
  7542   00537C                     
  7543                           ; BSR set to: 14
  7544                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7545   00537C  9485               	bcf	133,2,c	;volatile
  7546   00537E                     
  7547                           ; BSR set to: 14
  7548                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7549   00537E  9885               	bcf	133,4,c	;volatile
  7550   005380                     
  7551                           ; BSR set to: 14
  7552                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7553   005380  9E83               	bcf	131,7,c	;volatile
  7554   005382                     
  7555                           ; BSR set to: 14
  7556                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7557   005382  9C87               	bcf	135,6,c	;volatile
  7558                           
  7559                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7560   005384  50BD               	movf	189,w,c	;volatile
  7561   005386  0B8F               	andlw	-113
  7562   005388  0930               	iorlw	48
  7563   00538A  6EBD               	movwf	189,c	;volatile
  7564                           
  7565                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7566   00538C  0EE0               	movlw	-32
  7567   00538E  16BE               	andwf	190,f,c	;volatile
  7568                           
  7569                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7570   005390  50BF               	movf	191,w,c	;volatile
  7571   005392  0BF0               	andlw	-16
  7572   005394  0901               	iorlw	1
  7573   005396  6EBF               	movwf	191,c	;volatile
  7574   005398                     
  7575                           ; BSR set to: 14
  7576                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7577   005398  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7578   00539C                     
  7579                           ; BSR set to: 14
  7580                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7581   00539C  8EBD               	bsf	189,7,c	;volatile
  7582                           
  7583                           ;dc_motor.c: 34:     CCPR1H=0;
  7584   00539E  0E00               	movlw	0
  7585   0053A0  6EAA               	movwf	170,c	;volatile
  7586                           
  7587                           ;dc_motor.c: 35:     CCPR2H=0;
  7588   0053A2  0E00               	movlw	0
  7589   0053A4  6EA6               	movwf	166,c	;volatile
  7590                           
  7591                           ;dc_motor.c: 36:     CCPR3H=0;
  7592   0053A6  0E00               	movlw	0
  7593   0053A8  010F               	movlb	15	; () banked
  7594   0053AA  6F25               	movwf	37,b	;volatile
  7595                           
  7596                           ;dc_motor.c: 37:     CCPR4H=0;
  7597   0053AC  0E00               	movlw	0
  7598   0053AE  6F21               	movwf	33,b	;volatile
  7599                           
  7600                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7601   0053B0  0EFC               	movlw	-4
  7602   0053B2  16AD               	andwf	173,f,c	;volatile
  7603                           
  7604                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7605   0053B4  0EF3               	movlw	-13
  7606   0053B6  16AD               	andwf	173,f,c	;volatile
  7607                           
  7608                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7609   0053B8  0ECF               	movlw	-49
  7610   0053BA  16AD               	andwf	173,f,c	;volatile
  7611                           
  7612                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7613   0053BC  0E3F               	movlw	-193
  7614   0053BE  16AD               	andwf	173,f,c	;volatile
  7615   0053C0                     
  7616                           ; BSR set to: 15
  7617                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7618   0053C0  88AB               	bsf	171,4,c	;volatile
  7619                           
  7620                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7621   0053C2  50AB               	movf	171,w,c	;volatile
  7622   0053C4  0BF0               	andlw	-16
  7623   0053C6  090C               	iorlw	12
  7624   0053C8  6EAB               	movwf	171,c	;volatile
  7625   0053CA                     
  7626                           ; BSR set to: 15
  7627                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7628   0053CA  8EAB               	bsf	171,7,c	;volatile
  7629   0053CC                     
  7630                           ; BSR set to: 15
  7631                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7632   0053CC  88A7               	bsf	167,4,c	;volatile
  7633                           
  7634                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7635   0053CE  50A7               	movf	167,w,c	;volatile
  7636   0053D0  0BF0               	andlw	-16
  7637   0053D2  090C               	iorlw	12
  7638   0053D4  6EA7               	movwf	167,c	;volatile
  7639   0053D6                     
  7640                           ; BSR set to: 15
  7641                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7642   0053D6  8EA7               	bsf	167,7,c	;volatile
  7643   0053D8                     
  7644                           ; BSR set to: 15
  7645                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7646   0053D8  8926               	bsf	38,4,b	;volatile
  7647                           
  7648                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7649   0053DA  5126               	movf	38,w,b	;volatile
  7650   0053DC  0BF0               	andlw	-16
  7651   0053DE  090C               	iorlw	12
  7652   0053E0  6F26               	movwf	38,b	;volatile
  7653   0053E2                     
  7654                           ; BSR set to: 15
  7655                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7656   0053E2  8F26               	bsf	38,7,b	;volatile
  7657   0053E4                     
  7658                           ; BSR set to: 15
  7659                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7660   0053E4  8922               	bsf	34,4,b	;volatile
  7661                           
  7662                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7663   0053E6  5122               	movf	34,w,b	;volatile
  7664   0053E8  0BF0               	andlw	-16
  7665   0053EA  090C               	iorlw	12
  7666   0053EC  6F22               	movwf	34,b	;volatile
  7667   0053EE                     
  7668                           ; BSR set to: 15
  7669                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7670   0053EE  8F22               	bsf	34,7,b	;volatile
  7671   0053F0                     
  7672                           ; BSR set to: 15
  7673   0053F0  0012               	return		;funcret
  7674   0053F2                     __end_of_initDCmotorsPWM:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function _go_Home *****************
  7678 ;; Defined at:
  7679 ;;		line 5 in file "Memory.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7682 ;;		 -> WayBack(50), 
  7683 ;;  Time_forward    2   37[COMRAM] PTR int 
  7684 ;;		 -> Time_forward(100), 
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  i               2   42[COMRAM] int 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7696 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:        9 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 5
  7703 ;; This function calls:
  7704 ;;		_BlueMove
  7705 ;;		_GreenMove
  7706 ;;		_LightBlueMove
  7707 ;;		_OrangeMove
  7708 ;;		_RedMove
  7709 ;;		_ReversePink
  7710 ;;		_ReverseYellow
  7711 ;;		_reverseDetect
  7712 ;;		_stop
  7713 ;;		_timed_forward
  7714 ;; This function is called by:
  7715 ;;		_main
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text32
  7720   003B04                     __ptext32:
  7721                           	callstack 0
  7722   003B04                     _go_Home:
  7723                           	callstack 25
  7724   003B04                     
  7725                           ;Memory.c: 6:     int i;;Memory.c: 7:     BlueMove(&motorL, &motorR);
  7726   003B04  0EC7               	movlw	low _motorL
  7727   003B06  6E20               	movwf	BlueMove@mL^0,c
  7728   003B08  0E01               	movlw	high _motorL
  7729   003B0A  6E21               	movwf	(BlueMove@mL+1)^0,c
  7730   003B0C  0EBE               	movlw	low _motorR
  7731   003B0E  6E22               	movwf	BlueMove@mR^0,c
  7732   003B10  0E01               	movlw	high _motorR
  7733   003B12  6E23               	movwf	(BlueMove@mR+1)^0,c
  7734   003B14  EC23  F02B         	call	_BlueMove	;wreg free
  7735   003B18                     
  7736                           ;Memory.c: 8:     T0CON0bits.T0EN=0;
  7737   003B18  9ED5               	bcf	213,7,c	;volatile
  7738   003B1A                     
  7739                           ;Memory.c: 9:     for (i = move_count; i >= 0; i--){
  7740   003B1A  C17A  F02B         	movff	_move_count,go_Home@i	;volatile
  7741   003B1E  C17B  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7742   003B22                     l5710:
  7743   003B22  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7744   003B24  EF98  F01D         	goto	u5680
  7745   003B28  EF96  F01D         	goto	u5681
  7746   003B2C                     u5681:
  7747   003B2C  EF9A  F01D         	goto	l5714
  7748   003B30                     u5680:
  7749   003B30  EFE2  F01E         	goto	l5748
  7750   003B34                     l5714:
  7751                           
  7752                           ;Memory.c: 10:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7753   003B34  0EC7               	movlw	low _motorL
  7754   003B36  6E14               	movwf	timed_forward@mL^0,c
  7755   003B38  0E01               	movlw	high _motorL
  7756   003B3A  6E15               	movwf	(timed_forward@mL+1)^0,c
  7757   003B3C  0EBE               	movlw	low _motorR
  7758   003B3E  6E16               	movwf	timed_forward@mR^0,c
  7759   003B40  0E01               	movlw	high _motorR
  7760   003B42  6E17               	movwf	(timed_forward@mR+1)^0,c
  7761   003B44  90D8               	bcf	status,0,c
  7762   003B46  342B               	rlcf	go_Home@i^0,w,c
  7763   003B48  6ED9               	movwf	fsr2l,c
  7764   003B4A  342C               	rlcf	(go_Home@i+1)^0,w,c
  7765   003B4C  6EDA               	movwf	fsr2h,c
  7766   003B4E  5026               	movf	go_Home@Time_forward^0,w,c
  7767   003B50  26D9               	addwf	fsr2l,f,c
  7768   003B52  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7769   003B54  22DA               	addwfc	fsr2h,f,c
  7770   003B56  CFDE F018          	movff	postinc2,timed_forward@time
  7771   003B5A  CFDD F019          	movff	postdec2,timed_forward@time+1
  7772   003B5E  ECCF  F027         	call	_timed_forward	;wreg free
  7773   003B62                     
  7774                           ;Memory.c: 15:         if (WayBack[i-1]==1){
  7775   003B62  502B               	movf	go_Home@i^0,w,c
  7776   003B64  2424               	addwf	go_Home@WayBack^0,w,c
  7777   003B66  6E28               	movwf	??_go_Home^0,c
  7778   003B68  502C               	movf	(go_Home@i+1)^0,w,c
  7779   003B6A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7780   003B6C  6E29               	movwf	(??_go_Home+1)^0,c
  7781   003B6E  0EFF               	movlw	255
  7782   003B70  2428               	addwf	??_go_Home^0,w,c
  7783   003B72  6ED9               	movwf	fsr2l,c
  7784   003B74  0EFF               	movlw	255
  7785   003B76  2029               	addwfc	(??_go_Home+1)^0,w,c
  7786   003B78  6EDA               	movwf	fsr2h,c
  7787   003B7A  04DE               	decf	postinc2,w,c
  7788   003B7C  A4D8               	btfss	status,2,c
  7789   003B7E  EFC3  F01D         	goto	u5691
  7790   003B82  EFC5  F01D         	goto	u5690
  7791   003B86                     u5691:
  7792   003B86  EFDB  F01D         	goto	l5720
  7793   003B8A                     u5690:
  7794   003B8A                     
  7795                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7796   003B8A  0EC7               	movlw	low _motorL
  7797   003B8C  6E1A               	movwf	reverseDetect@mL^0,c
  7798   003B8E  0E01               	movlw	high _motorL
  7799   003B90  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7800   003B92  0EBE               	movlw	low _motorR
  7801   003B94  6E1C               	movwf	reverseDetect@mR^0,c
  7802   003B96  0E01               	movlw	high _motorR
  7803   003B98  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7804   003B9A  ECDF  F02B         	call	_reverseDetect	;wreg free
  7805                           
  7806                           ;Memory.c: 17:             GreenMove(&motorL, &motorR);
  7807   003B9E  0EC7               	movlw	low _motorL
  7808   003BA0  6E20               	movwf	GreenMove@mL^0,c
  7809   003BA2  0E01               	movlw	high _motorL
  7810   003BA4  6E21               	movwf	(GreenMove@mL+1)^0,c
  7811   003BA6  0EBE               	movlw	low _motorR
  7812   003BA8  6E22               	movwf	GreenMove@mR^0,c
  7813   003BAA  0E01               	movlw	high _motorR
  7814   003BAC  6E23               	movwf	(GreenMove@mR+1)^0,c
  7815   003BAE  EC5D  F02F         	call	_GreenMove	;wreg free
  7816                           
  7817                           ;Memory.c: 18:         }
  7818   003BB2  EFDD  F01E         	goto	l5744
  7819   003BB6                     l5720:
  7820   003BB6  502B               	movf	go_Home@i^0,w,c
  7821   003BB8  2424               	addwf	go_Home@WayBack^0,w,c
  7822   003BBA  6E28               	movwf	??_go_Home^0,c
  7823   003BBC  502C               	movf	(go_Home@i+1)^0,w,c
  7824   003BBE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7825   003BC0  6E29               	movwf	(??_go_Home+1)^0,c
  7826   003BC2  0EFF               	movlw	255
  7827   003BC4  2428               	addwf	??_go_Home^0,w,c
  7828   003BC6  6ED9               	movwf	fsr2l,c
  7829   003BC8  0EFF               	movlw	255
  7830   003BCA  2029               	addwfc	(??_go_Home+1)^0,w,c
  7831   003BCC  6EDA               	movwf	fsr2h,c
  7832   003BCE  0E02               	movlw	2
  7833   003BD0  18DE               	xorwf	postinc2,w,c
  7834   003BD2  A4D8               	btfss	status,2,c
  7835   003BD4  EFEE  F01D         	goto	u5701
  7836   003BD8  EFF0  F01D         	goto	u5700
  7837   003BDC                     u5701:
  7838   003BDC  EF06  F01E         	goto	l5724
  7839   003BE0                     u5700:
  7840   003BE0                     
  7841                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7842   003BE0  0EC7               	movlw	low _motorL
  7843   003BE2  6E1A               	movwf	reverseDetect@mL^0,c
  7844   003BE4  0E01               	movlw	high _motorL
  7845   003BE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7846   003BE8  0EBE               	movlw	low _motorR
  7847   003BEA  6E1C               	movwf	reverseDetect@mR^0,c
  7848   003BEC  0E01               	movlw	high _motorR
  7849   003BEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7850   003BF0  ECDF  F02B         	call	_reverseDetect	;wreg free
  7851                           
  7852                           ;Memory.c: 21:             LightBlueMove(&motorL, &motorR);
  7853   003BF4  0EC7               	movlw	low _motorL
  7854   003BF6  6E20               	movwf	LightBlueMove@mL^0,c
  7855   003BF8  0E01               	movlw	high _motorL
  7856   003BFA  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7857   003BFC  0EBE               	movlw	low _motorR
  7858   003BFE  6E22               	movwf	LightBlueMove@mR^0,c
  7859   003C00  0E01               	movlw	high _motorR
  7860   003C02  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7861   003C04  ECB6  F02C         	call	_LightBlueMove	;wreg free
  7862                           
  7863                           ;Memory.c: 22:         }
  7864   003C08  EFDD  F01E         	goto	l5744
  7865   003C0C                     l5724:
  7866   003C0C  502B               	movf	go_Home@i^0,w,c
  7867   003C0E  2424               	addwf	go_Home@WayBack^0,w,c
  7868   003C10  6E28               	movwf	??_go_Home^0,c
  7869   003C12  502C               	movf	(go_Home@i+1)^0,w,c
  7870   003C14  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7871   003C16  6E29               	movwf	(??_go_Home+1)^0,c
  7872   003C18  0EFF               	movlw	255
  7873   003C1A  2428               	addwf	??_go_Home^0,w,c
  7874   003C1C  6ED9               	movwf	fsr2l,c
  7875   003C1E  0EFF               	movlw	255
  7876   003C20  2029               	addwfc	(??_go_Home+1)^0,w,c
  7877   003C22  6EDA               	movwf	fsr2h,c
  7878   003C24  0E03               	movlw	3
  7879   003C26  18DE               	xorwf	postinc2,w,c
  7880   003C28  A4D8               	btfss	status,2,c
  7881   003C2A  EF19  F01E         	goto	u5711
  7882   003C2E  EF1B  F01E         	goto	u5710
  7883   003C32                     u5711:
  7884   003C32  EF31  F01E         	goto	l5728
  7885   003C36                     u5710:
  7886   003C36                     
  7887                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7888   003C36  0EC7               	movlw	low _motorL
  7889   003C38  6E1A               	movwf	reverseDetect@mL^0,c
  7890   003C3A  0E01               	movlw	high _motorL
  7891   003C3C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7892   003C3E  0EBE               	movlw	low _motorR
  7893   003C40  6E1C               	movwf	reverseDetect@mR^0,c
  7894   003C42  0E01               	movlw	high _motorR
  7895   003C44  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7896   003C46  ECDF  F02B         	call	_reverseDetect	;wreg free
  7897                           
  7898                           ;Memory.c: 25:             ReverseYellow(&motorL, &motorR);
  7899   003C4A  0EC7               	movlw	low _motorL
  7900   003C4C  6E20               	movwf	ReverseYellow@mL^0,c
  7901   003C4E  0E01               	movlw	high _motorL
  7902   003C50  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7903   003C52  0EBE               	movlw	low _motorR
  7904   003C54  6E22               	movwf	ReverseYellow@mR^0,c
  7905   003C56  0E01               	movlw	high _motorR
  7906   003C58  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7907   003C5A  EC19  F027         	call	_ReverseYellow	;wreg free
  7908                           
  7909                           ;Memory.c: 26:         }
  7910   003C5E  EFDD  F01E         	goto	l5744
  7911   003C62                     l5728:
  7912   003C62  502B               	movf	go_Home@i^0,w,c
  7913   003C64  2424               	addwf	go_Home@WayBack^0,w,c
  7914   003C66  6E28               	movwf	??_go_Home^0,c
  7915   003C68  502C               	movf	(go_Home@i+1)^0,w,c
  7916   003C6A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7917   003C6C  6E29               	movwf	(??_go_Home+1)^0,c
  7918   003C6E  0EFF               	movlw	255
  7919   003C70  2428               	addwf	??_go_Home^0,w,c
  7920   003C72  6ED9               	movwf	fsr2l,c
  7921   003C74  0EFF               	movlw	255
  7922   003C76  2029               	addwfc	(??_go_Home+1)^0,w,c
  7923   003C78  6EDA               	movwf	fsr2h,c
  7924   003C7A  0E04               	movlw	4
  7925   003C7C  18DE               	xorwf	postinc2,w,c
  7926   003C7E  A4D8               	btfss	status,2,c
  7927   003C80  EF44  F01E         	goto	u5721
  7928   003C84  EF46  F01E         	goto	u5720
  7929   003C88                     u5721:
  7930   003C88  EF5C  F01E         	goto	l5732
  7931   003C8C                     u5720:
  7932   003C8C                     
  7933                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7934   003C8C  0EC7               	movlw	low _motorL
  7935   003C8E  6E1A               	movwf	reverseDetect@mL^0,c
  7936   003C90  0E01               	movlw	high _motorL
  7937   003C92  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7938   003C94  0EBE               	movlw	low _motorR
  7939   003C96  6E1C               	movwf	reverseDetect@mR^0,c
  7940   003C98  0E01               	movlw	high _motorR
  7941   003C9A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7942   003C9C  ECDF  F02B         	call	_reverseDetect	;wreg free
  7943                           
  7944                           ;Memory.c: 29:             BlueMove(&motorL, &motorR);
  7945   003CA0  0EC7               	movlw	low _motorL
  7946   003CA2  6E20               	movwf	BlueMove@mL^0,c
  7947   003CA4  0E01               	movlw	high _motorL
  7948   003CA6  6E21               	movwf	(BlueMove@mL+1)^0,c
  7949   003CA8  0EBE               	movlw	low _motorR
  7950   003CAA  6E22               	movwf	BlueMove@mR^0,c
  7951   003CAC  0E01               	movlw	high _motorR
  7952   003CAE  6E23               	movwf	(BlueMove@mR+1)^0,c
  7953   003CB0  EC23  F02B         	call	_BlueMove	;wreg free
  7954                           
  7955                           ;Memory.c: 30:         }
  7956   003CB4  EFDD  F01E         	goto	l5744
  7957   003CB8                     l5732:
  7958   003CB8  502B               	movf	go_Home@i^0,w,c
  7959   003CBA  2424               	addwf	go_Home@WayBack^0,w,c
  7960   003CBC  6E28               	movwf	??_go_Home^0,c
  7961   003CBE  502C               	movf	(go_Home@i+1)^0,w,c
  7962   003CC0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7963   003CC2  6E29               	movwf	(??_go_Home+1)^0,c
  7964   003CC4  0EFF               	movlw	255
  7965   003CC6  2428               	addwf	??_go_Home^0,w,c
  7966   003CC8  6ED9               	movwf	fsr2l,c
  7967   003CCA  0EFF               	movlw	255
  7968   003CCC  2029               	addwfc	(??_go_Home+1)^0,w,c
  7969   003CCE  6EDA               	movwf	fsr2h,c
  7970   003CD0  0E05               	movlw	5
  7971   003CD2  18DE               	xorwf	postinc2,w,c
  7972   003CD4  A4D8               	btfss	status,2,c
  7973   003CD6  EF6F  F01E         	goto	u5731
  7974   003CDA  EF71  F01E         	goto	u5730
  7975   003CDE                     u5731:
  7976   003CDE  EF87  F01E         	goto	l5736
  7977   003CE2                     u5730:
  7978   003CE2                     
  7979                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  7980   003CE2  0EC7               	movlw	low _motorL
  7981   003CE4  6E1A               	movwf	reverseDetect@mL^0,c
  7982   003CE6  0E01               	movlw	high _motorL
  7983   003CE8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7984   003CEA  0EBE               	movlw	low _motorR
  7985   003CEC  6E1C               	movwf	reverseDetect@mR^0,c
  7986   003CEE  0E01               	movlw	high _motorR
  7987   003CF0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7988   003CF2  ECDF  F02B         	call	_reverseDetect	;wreg free
  7989                           
  7990                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  7991   003CF6  0EC7               	movlw	low _motorL
  7992   003CF8  6E20               	movwf	RedMove@mL^0,c
  7993   003CFA  0E01               	movlw	high _motorL
  7994   003CFC  6E21               	movwf	(RedMove@mL+1)^0,c
  7995   003CFE  0EBE               	movlw	low _motorR
  7996   003D00  6E22               	movwf	RedMove@mR^0,c
  7997   003D02  0E01               	movlw	high _motorR
  7998   003D04  6E23               	movwf	(RedMove@mR+1)^0,c
  7999   003D06  EC3E  F02F         	call	_RedMove	;wreg free
  8000                           
  8001                           ;Memory.c: 34:         }
  8002   003D0A  EFDD  F01E         	goto	l5744
  8003   003D0E                     l5736:
  8004   003D0E  502B               	movf	go_Home@i^0,w,c
  8005   003D10  2424               	addwf	go_Home@WayBack^0,w,c
  8006   003D12  6E28               	movwf	??_go_Home^0,c
  8007   003D14  502C               	movf	(go_Home@i+1)^0,w,c
  8008   003D16  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8009   003D18  6E29               	movwf	(??_go_Home+1)^0,c
  8010   003D1A  0EFF               	movlw	255
  8011   003D1C  2428               	addwf	??_go_Home^0,w,c
  8012   003D1E  6ED9               	movwf	fsr2l,c
  8013   003D20  0EFF               	movlw	255
  8014   003D22  2029               	addwfc	(??_go_Home+1)^0,w,c
  8015   003D24  6EDA               	movwf	fsr2h,c
  8016   003D26  0E06               	movlw	6
  8017   003D28  18DE               	xorwf	postinc2,w,c
  8018   003D2A  A4D8               	btfss	status,2,c
  8019   003D2C  EF9A  F01E         	goto	u5741
  8020   003D30  EF9C  F01E         	goto	u5740
  8021   003D34                     u5741:
  8022   003D34  EFB2  F01E         	goto	l5740
  8023   003D38                     u5740:
  8024   003D38                     
  8025                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8026   003D38  0EC7               	movlw	low _motorL
  8027   003D3A  6E1A               	movwf	reverseDetect@mL^0,c
  8028   003D3C  0E01               	movlw	high _motorL
  8029   003D3E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8030   003D40  0EBE               	movlw	low _motorR
  8031   003D42  6E1C               	movwf	reverseDetect@mR^0,c
  8032   003D44  0E01               	movlw	high _motorR
  8033   003D46  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8034   003D48  ECDF  F02B         	call	_reverseDetect	;wreg free
  8035                           
  8036                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  8037   003D4C  0EC7               	movlw	low _motorL
  8038   003D4E  6E20               	movwf	OrangeMove@mL^0,c
  8039   003D50  0E01               	movlw	high _motorL
  8040   003D52  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8041   003D54  0EBE               	movlw	low _motorR
  8042   003D56  6E22               	movwf	OrangeMove@mR^0,c
  8043   003D58  0E01               	movlw	high _motorR
  8044   003D5A  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8045   003D5C  EC8D  F02C         	call	_OrangeMove	;wreg free
  8046                           
  8047                           ;Memory.c: 38:         }
  8048   003D60  EFDD  F01E         	goto	l5744
  8049   003D64                     l5740:
  8050   003D64  502B               	movf	go_Home@i^0,w,c
  8051   003D66  2424               	addwf	go_Home@WayBack^0,w,c
  8052   003D68  6E28               	movwf	??_go_Home^0,c
  8053   003D6A  502C               	movf	(go_Home@i+1)^0,w,c
  8054   003D6C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8055   003D6E  6E29               	movwf	(??_go_Home+1)^0,c
  8056   003D70  0EFF               	movlw	255
  8057   003D72  2428               	addwf	??_go_Home^0,w,c
  8058   003D74  6ED9               	movwf	fsr2l,c
  8059   003D76  0EFF               	movlw	255
  8060   003D78  2029               	addwfc	(??_go_Home+1)^0,w,c
  8061   003D7A  6EDA               	movwf	fsr2h,c
  8062   003D7C  0E07               	movlw	7
  8063   003D7E  18DE               	xorwf	postinc2,w,c
  8064   003D80  A4D8               	btfss	status,2,c
  8065   003D82  EFC5  F01E         	goto	u5751
  8066   003D86  EFC7  F01E         	goto	u5750
  8067   003D8A                     u5751:
  8068   003D8A  EFDD  F01E         	goto	l664
  8069   003D8E                     u5750:
  8070   003D8E                     
  8071                           ;Memory.c: 40:             reverseDetect(&motorL, &motorR);
  8072   003D8E  0EC7               	movlw	low _motorL
  8073   003D90  6E1A               	movwf	reverseDetect@mL^0,c
  8074   003D92  0E01               	movlw	high _motorL
  8075   003D94  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8076   003D96  0EBE               	movlw	low _motorR
  8077   003D98  6E1C               	movwf	reverseDetect@mR^0,c
  8078   003D9A  0E01               	movlw	high _motorR
  8079   003D9C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8080   003D9E  ECDF  F02B         	call	_reverseDetect	;wreg free
  8081                           
  8082                           ;Memory.c: 41:             ReversePink(&motorL, &motorR);
  8083   003DA2  0EC7               	movlw	low _motorL
  8084   003DA4  6E20               	movwf	ReversePink@mL^0,c
  8085   003DA6  0E01               	movlw	high _motorL
  8086   003DA8  6E21               	movwf	(ReversePink@mL+1)^0,c
  8087   003DAA  0EBE               	movlw	low _motorR
  8088   003DAC  6E22               	movwf	ReversePink@mR^0,c
  8089   003DAE  0E01               	movlw	high _motorR
  8090   003DB0  6E23               	movwf	(ReversePink@mR+1)^0,c
  8091   003DB2  EC74  F027         	call	_ReversePink	;wreg free
  8092   003DB6  EFDD  F01E         	goto	l5744
  8093   003DBA                     l664:
  8094   003DBA                     l5744:
  8095                           
  8096                           ;Memory.c: 43:   }
  8097   003DBA  062B               	decf	go_Home@i^0,f,c
  8098   003DBC  A0D8               	btfss	status,0,c
  8099   003DBE  062C               	decf	(go_Home@i+1)^0,f,c
  8100   003DC0  EF91  F01D         	goto	l5710
  8101   003DC4                     l5748:
  8102                           
  8103                           ;Memory.c: 44:     stop(&motorL, &motorR);
  8104   003DC4  0EC7               	movlw	low _motorL
  8105   003DC6  6E14               	movwf	stop@mL^0,c
  8106   003DC8  0E01               	movlw	high _motorL
  8107   003DCA  6E15               	movwf	(stop@mL+1)^0,c
  8108   003DCC  0EBE               	movlw	low _motorR
  8109   003DCE  6E16               	movwf	stop@mR^0,c
  8110   003DD0  0E01               	movlw	high _motorR
  8111   003DD2  6E17               	movwf	(stop@mR+1)^0,c
  8112   003DD4  EC3A  F02A         	call	_stop	;wreg free
  8113   003DD8                     
  8114                           ;Memory.c: 45:     run_flag=0;
  8115   003DD8  0E00               	movlw	0
  8116   003DDA  0101               	movlb	1	; () banked
  8117   003DDC  6F7D               	movwf	(_run_flag+1)& (0+255),b
  8118   003DDE  0E00               	movlw	0
  8119   003DE0  6F7C               	movwf	_run_flag& (0+255),b
  8120   003DE2                     
  8121                           ; BSR set to: 1
  8122   003DE2  0012               	return		;funcret
  8123   003DE4                     __end_of_go_Home:
  8124                           	callstack 0
  8125                           
  8126 ;; *************** function _timed_forward *****************
  8127 ;; Defined at:
  8128 ;;		line 165 in file "dc_motor.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8131 ;;		 -> motorL(9), 
  8132 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8133 ;;		 -> motorR(9), 
  8134 ;;  time            2   23[COMRAM] int 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8146 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;Total ram usage:        8 bytes
  8151 ;; Hardware stack levels used: 1
  8152 ;; Hardware stack levels required when called: 2
  8153 ;; This function calls:
  8154 ;;		_delayed_ms
  8155 ;;		_setMotorPWM
  8156 ;; This function is called by:
  8157 ;;		_go_Home
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text33
  8162   004F9E                     __ptext33:
  8163                           	callstack 0
  8164   004F9E                     _timed_forward:
  8165                           	callstack 27
  8166   004F9E                     
  8167                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8168   004F9E  EE20 F001          	lfsr	2,1
  8169   004FA2  5014               	movf	timed_forward@mL^0,w,c
  8170   004FA4  26D9               	addwf	fsr2l,f,c
  8171   004FA6  5015               	movf	(timed_forward@mL+1)^0,w,c
  8172   004FA8  22DA               	addwfc	fsr2h,f,c
  8173   004FAA  0E01               	movlw	1
  8174   004FAC  6EDF               	movwf	indf2,c
  8175                           
  8176                           ;dc_motor.c: 169:     mR->direction =1;
  8177   004FAE  EE20 F001          	lfsr	2,1
  8178   004FB2  5016               	movf	timed_forward@mR^0,w,c
  8179   004FB4  26D9               	addwf	fsr2l,f,c
  8180   004FB6  5017               	movf	(timed_forward@mR+1)^0,w,c
  8181   004FB8  22DA               	addwfc	fsr2h,f,c
  8182   004FBA  0E01               	movlw	1
  8183   004FBC  6EDF               	movwf	indf2,c
  8184                           
  8185                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8186   004FBE  EF05  F028         	goto	l5252
  8187   004FC2                     l5244:
  8188                           
  8189                           ;dc_motor.c: 172:         mL->power+=10;
  8190   004FC2  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8191   004FC6  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8192   004FCA  0E0A               	movlw	10
  8193   004FCC  26DF               	addwf	indf2,f,c
  8194                           
  8195                           ;dc_motor.c: 173:         mR->power+=10;
  8196   004FCE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8197   004FD2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8198   004FD6  0E0A               	movlw	10
  8199   004FD8  26DF               	addwf	indf2,f,c
  8200   004FDA                     
  8201                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8202   004FDA  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8203   004FDE  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8204   004FE2  ECC8  F023         	call	_setMotorPWM	;wreg free
  8205   004FE6                     
  8206                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8207   004FE6  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8208   004FEA  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8209   004FEE  ECC8  F023         	call	_setMotorPWM	;wreg free
  8210   004FF2                     
  8211                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8212   004FF2  0E02               	movlw	2
  8213   004FF4  6E1B               	movwf	(??_timed_forward+1)^0,c
  8214   004FF6  0EA0               	movlw	160
  8215   004FF8  6E1A               	movwf	??_timed_forward^0,c
  8216   004FFA  0E92               	movlw	146
  8217   004FFC                     u6137:
  8218   004FFC  2EE8               	decfsz	wreg,f,c
  8219   004FFE  D7FE               	bra	u6137
  8220   005000  2E1A               	decfsz	??_timed_forward^0,f,c
  8221   005002  D7FC               	bra	u6137
  8222   005004  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8223   005006  D7FA               	bra	u6137
  8224   005008  D000               	nop2	
  8225   00500A                     l5252:
  8226   00500A  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8227   00500E  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8228   005012  0E1E               	movlw	30
  8229   005014  60DF               	cpfslt	indf2,c
  8230   005016  EF0F  F028         	goto	u5081
  8231   00501A  EF11  F028         	goto	u5080
  8232   00501E                     u5081:
  8233   00501E  EF1D  F028         	goto	l5256
  8234   005022                     u5080:
  8235   005022  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8236   005026  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8237   00502A  0E1D               	movlw	29
  8238   00502C  64DF               	cpfsgt	indf2,c
  8239   00502E  EF1B  F028         	goto	u5091
  8240   005032  EF1D  F028         	goto	u5090
  8241   005036                     u5091:
  8242   005036  EFE1  F027         	goto	l5244
  8243   00503A                     u5090:
  8244   00503A                     l5256:
  8245                           
  8246                           ;dc_motor.c: 181:     delayed_ms(time);
  8247   00503A  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8248   00503E  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8249   005042  EC98  F02F         	call	_delayed_ms	;wreg free
  8250   005046  0012               	return		;funcret
  8251   005048                     __end_of_timed_forward:
  8252                           	callstack 0
  8253                           
  8254 ;; *************** function _delayed_ms *****************
  8255 ;; Defined at:
  8256 ;;		line 39 in file "timers.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  time            2    0[COMRAM] int 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  i               2    3[COMRAM] unsigned int 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8274 ;;Total ram usage:        5 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_timed_forward
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text34
  8284   005F30                     __ptext34:
  8285                           	callstack 0
  8286   005F30                     _delayed_ms:
  8287                           	callstack 28
  8288   005F30                     
  8289                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8290   005F30  0E00               	movlw	0
  8291   005F32  6E05               	movwf	(delayed_ms@i+1)^0,c
  8292   005F34  0E00               	movlw	0
  8293   005F36  6E04               	movwf	delayed_ms@i^0,c
  8294   005F38  EFA8  F02F         	goto	l699
  8295   005F3C                     l5076:
  8296                           
  8297                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8298   005F3C  0E15               	movlw	21
  8299   005F3E  6E03               	movwf	??_delayed_ms^0,c
  8300   005F40  0EC6               	movlw	198
  8301   005F42                     u6147:
  8302   005F42  2EE8               	decfsz	wreg,f,c
  8303   005F44  D7FE               	bra	u6147
  8304   005F46  2E03               	decfsz	??_delayed_ms^0,f,c
  8305   005F48  D7FC               	bra	u6147
  8306   005F4A  D000               	nop2	
  8307   005F4C                     
  8308                           ;timers.c: 42:     }
  8309   005F4C  4A04               	infsnz	delayed_ms@i^0,f,c
  8310   005F4E  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8311   005F50                     l699:
  8312   005F50  5001               	movf	delayed_ms@time^0,w,c
  8313   005F52  5C04               	subwf	delayed_ms@i^0,w,c
  8314   005F54  5002               	movf	(delayed_ms@time+1)^0,w,c
  8315   005F56  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8316   005F58  A0D8               	btfss	status,0,c
  8317   005F5A  EFB1  F02F         	goto	u5021
  8318   005F5E  EFB3  F02F         	goto	u5020
  8319   005F62                     u5021:
  8320   005F62  EF9E  F02F         	goto	l5076
  8321   005F66                     u5020:
  8322   005F66  0012               	return		;funcret
  8323   005F68                     __end_of_delayed_ms:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _ReverseYellow *****************
  8327 ;; Defined at:
  8328 ;;		line 334 in file "dc_motor.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8331 ;;		 -> motorL(9), 
  8332 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8333 ;;		 -> motorR(9), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; Hardware stack levels required when called: 4
  8352 ;; This function calls:
  8353 ;;		_ForwardOneBlock
  8354 ;;		_reverseDetect
  8355 ;;		_turnRight45
  8356 ;; This function is called by:
  8357 ;;		_go_Home
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text35
  8362   004E32                     __ptext35:
  8363                           	callstack 0
  8364   004E32                     _ReverseYellow:
  8365                           	callstack 25
  8366   004E32                     
  8367                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8368   004E32  0EC7               	movlw	low _motorL
  8369   004E34  6E1A               	movwf	reverseDetect@mL^0,c
  8370   004E36  0E01               	movlw	high _motorL
  8371   004E38  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8372   004E3A  0EBE               	movlw	low _motorR
  8373   004E3C  6E1C               	movwf	reverseDetect@mR^0,c
  8374   004E3E  0E01               	movlw	high _motorR
  8375   004E40  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8376   004E42  ECDF  F02B         	call	_reverseDetect	;wreg free
  8377                           
  8378                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8379   004E46  0EC7               	movlw	low _motorL
  8380   004E48  6E1A               	movwf	turnRight45@mL^0,c
  8381   004E4A  0E01               	movlw	high _motorL
  8382   004E4C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8383   004E4E  0EBE               	movlw	low _motorR
  8384   004E50  6E1C               	movwf	turnRight45@mR^0,c
  8385   004E52  0E01               	movlw	high _motorR
  8386   004E54  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8387   004E56  EC22  F02E         	call	_turnRight45	;wreg free
  8388                           
  8389                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8390   004E5A  0EC7               	movlw	low _motorL
  8391   004E5C  6E1A               	movwf	turnRight45@mL^0,c
  8392   004E5E  0E01               	movlw	high _motorL
  8393   004E60  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8394   004E62  0EBE               	movlw	low _motorR
  8395   004E64  6E1C               	movwf	turnRight45@mR^0,c
  8396   004E66  0E01               	movlw	high _motorR
  8397   004E68  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8398   004E6A  EC22  F02E         	call	_turnRight45	;wreg free
  8399                           
  8400                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8401   004E6E  0EC7               	movlw	low _motorL
  8402   004E70  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8403   004E72  0E01               	movlw	high _motorL
  8404   004E74  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8405   004E76  0EBE               	movlw	low _motorR
  8406   004E78  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8407   004E7A  0E01               	movlw	high _motorR
  8408   004E7C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8409   004E7E  EC85  F02B         	call	_ForwardOneBlock	;wreg free
  8410                           
  8411                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8412   004E82  0EC7               	movlw	low _motorL
  8413   004E84  6E1A               	movwf	reverseDetect@mL^0,c
  8414   004E86  0E01               	movlw	high _motorL
  8415   004E88  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8416   004E8A  0EBE               	movlw	low _motorR
  8417   004E8C  6E1C               	movwf	reverseDetect@mR^0,c
  8418   004E8E  0E01               	movlw	high _motorR
  8419   004E90  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8420   004E92  ECDF  F02B         	call	_reverseDetect	;wreg free
  8421                           
  8422                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8423   004E96  0EC7               	movlw	low _motorL
  8424   004E98  6E1A               	movwf	turnRight45@mL^0,c
  8425   004E9A  0E01               	movlw	high _motorL
  8426   004E9C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8427   004E9E  0EBE               	movlw	low _motorR
  8428   004EA0  6E1C               	movwf	turnRight45@mR^0,c
  8429   004EA2  0E01               	movlw	high _motorR
  8430   004EA4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8431   004EA6  EC22  F02E         	call	_turnRight45	;wreg free
  8432                           
  8433                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8434   004EAA  0EC7               	movlw	low _motorL
  8435   004EAC  6E1A               	movwf	turnRight45@mL^0,c
  8436   004EAE  0E01               	movlw	high _motorL
  8437   004EB0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8438   004EB2  0EBE               	movlw	low _motorR
  8439   004EB4  6E1C               	movwf	turnRight45@mR^0,c
  8440   004EB6  0E01               	movlw	high _motorR
  8441   004EB8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8442   004EBA  EC22  F02E         	call	_turnRight45	;wreg free
  8443                           
  8444                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8445   004EBE  0EC7               	movlw	low _motorL
  8446   004EC0  6E1A               	movwf	turnRight45@mL^0,c
  8447   004EC2  0E01               	movlw	high _motorL
  8448   004EC4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8449   004EC6  0EBE               	movlw	low _motorR
  8450   004EC8  6E1C               	movwf	turnRight45@mR^0,c
  8451   004ECA  0E01               	movlw	high _motorR
  8452   004ECC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8453   004ECE  EC22  F02E         	call	_turnRight45	;wreg free
  8454                           
  8455                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8456   004ED2  0EC7               	movlw	low _motorL
  8457   004ED4  6E1A               	movwf	turnRight45@mL^0,c
  8458   004ED6  0E01               	movlw	high _motorL
  8459   004ED8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8460   004EDA  0EBE               	movlw	low _motorR
  8461   004EDC  6E1C               	movwf	turnRight45@mR^0,c
  8462   004EDE  0E01               	movlw	high _motorR
  8463   004EE0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8464   004EE2  EC22  F02E         	call	_turnRight45	;wreg free
  8465   004EE6  0012               	return		;funcret
  8466   004EE8                     __end_of_ReverseYellow:
  8467                           	callstack 0
  8468                           
  8469 ;; *************** function _ReversePink *****************
  8470 ;; Defined at:
  8471 ;;		line 345 in file "dc_motor.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8474 ;;		 -> motorL(9), 
  8475 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8476 ;;		 -> motorR(9), 
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8492 ;;Total ram usage:        4 bytes
  8493 ;; Hardware stack levels used: 1
  8494 ;; Hardware stack levels required when called: 4
  8495 ;; This function calls:
  8496 ;;		_ForwardOneBlock
  8497 ;;		_reverseDetect
  8498 ;;		_turnLeft45
  8499 ;; This function is called by:
  8500 ;;		_go_Home
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text36
  8505   004EE8                     __ptext36:
  8506                           	callstack 0
  8507   004EE8                     _ReversePink:
  8508                           	callstack 25
  8509   004EE8                     
  8510                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8511   004EE8  0EC7               	movlw	low _motorL
  8512   004EEA  6E1A               	movwf	reverseDetect@mL^0,c
  8513   004EEC  0E01               	movlw	high _motorL
  8514   004EEE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8515   004EF0  0EBE               	movlw	low _motorR
  8516   004EF2  6E1C               	movwf	reverseDetect@mR^0,c
  8517   004EF4  0E01               	movlw	high _motorR
  8518   004EF6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8519   004EF8  ECDF  F02B         	call	_reverseDetect	;wreg free
  8520                           
  8521                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8522   004EFC  0EC7               	movlw	low _motorL
  8523   004EFE  6E1A               	movwf	turnLeft45@mL^0,c
  8524   004F00  0E01               	movlw	high _motorL
  8525   004F02  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8526   004F04  0EBE               	movlw	low _motorR
  8527   004F06  6E1C               	movwf	turnLeft45@mR^0,c
  8528   004F08  0E01               	movlw	high _motorR
  8529   004F0A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8530   004F0C  EC49  F02E         	call	_turnLeft45	;wreg free
  8531                           
  8532                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8533   004F10  0EC7               	movlw	low _motorL
  8534   004F12  6E1A               	movwf	turnLeft45@mL^0,c
  8535   004F14  0E01               	movlw	high _motorL
  8536   004F16  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8537   004F18  0EBE               	movlw	low _motorR
  8538   004F1A  6E1C               	movwf	turnLeft45@mR^0,c
  8539   004F1C  0E01               	movlw	high _motorR
  8540   004F1E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8541   004F20  EC49  F02E         	call	_turnLeft45	;wreg free
  8542                           
  8543                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8544   004F24  0EC7               	movlw	low _motorL
  8545   004F26  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8546   004F28  0E01               	movlw	high _motorL
  8547   004F2A  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8548   004F2C  0EBE               	movlw	low _motorR
  8549   004F2E  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8550   004F30  0E01               	movlw	high _motorR
  8551   004F32  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8552   004F34  EC85  F02B         	call	_ForwardOneBlock	;wreg free
  8553                           
  8554                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8555   004F38  0EC7               	movlw	low _motorL
  8556   004F3A  6E1A               	movwf	reverseDetect@mL^0,c
  8557   004F3C  0E01               	movlw	high _motorL
  8558   004F3E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8559   004F40  0EBE               	movlw	low _motorR
  8560   004F42  6E1C               	movwf	reverseDetect@mR^0,c
  8561   004F44  0E01               	movlw	high _motorR
  8562   004F46  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8563   004F48  ECDF  F02B         	call	_reverseDetect	;wreg free
  8564                           
  8565                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8566   004F4C  0EC7               	movlw	low _motorL
  8567   004F4E  6E1A               	movwf	turnLeft45@mL^0,c
  8568   004F50  0E01               	movlw	high _motorL
  8569   004F52  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8570   004F54  0EBE               	movlw	low _motorR
  8571   004F56  6E1C               	movwf	turnLeft45@mR^0,c
  8572   004F58  0E01               	movlw	high _motorR
  8573   004F5A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8574   004F5C  EC49  F02E         	call	_turnLeft45	;wreg free
  8575                           
  8576                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8577   004F60  0EC7               	movlw	low _motorL
  8578   004F62  6E1A               	movwf	turnLeft45@mL^0,c
  8579   004F64  0E01               	movlw	high _motorL
  8580   004F66  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8581   004F68  0EBE               	movlw	low _motorR
  8582   004F6A  6E1C               	movwf	turnLeft45@mR^0,c
  8583   004F6C  0E01               	movlw	high _motorR
  8584   004F6E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8585   004F70  EC49  F02E         	call	_turnLeft45	;wreg free
  8586                           
  8587                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8588   004F74  0EC7               	movlw	low _motorL
  8589   004F76  6E1A               	movwf	turnLeft45@mL^0,c
  8590   004F78  0E01               	movlw	high _motorL
  8591   004F7A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8592   004F7C  0EBE               	movlw	low _motorR
  8593   004F7E  6E1C               	movwf	turnLeft45@mR^0,c
  8594   004F80  0E01               	movlw	high _motorR
  8595   004F82  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8596   004F84  EC49  F02E         	call	_turnLeft45	;wreg free
  8597                           
  8598                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8599   004F88  0EC7               	movlw	low _motorL
  8600   004F8A  6E1A               	movwf	turnLeft45@mL^0,c
  8601   004F8C  0E01               	movlw	high _motorL
  8602   004F8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8603   004F90  0EBE               	movlw	low _motorR
  8604   004F92  6E1C               	movwf	turnLeft45@mR^0,c
  8605   004F94  0E01               	movlw	high _motorR
  8606   004F96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8607   004F98  EC49  F02E         	call	_turnLeft45	;wreg free
  8608   004F9C  0012               	return		;funcret
  8609   004F9E                     __end_of_ReversePink:
  8610                           	callstack 0
  8611                           
  8612 ;; *************** function _ForwardOneBlock *****************
  8613 ;; Defined at:
  8614 ;;		line 238 in file "dc_motor.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8617 ;;		 -> motorL(9), 
  8618 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8619 ;;		 -> motorR(9), 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;Total ram usage:        6 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; Hardware stack levels required when called: 3
  8638 ;; This function calls:
  8639 ;;		_fullSpeedAhead
  8640 ;;		_stop
  8641 ;; This function is called by:
  8642 ;;		_ReverseYellow
  8643 ;;		_ReversePink
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text37
  8648   00570A                     __ptext37:
  8649                           	callstack 0
  8650   00570A                     _ForwardOneBlock:
  8651                           	callstack 25
  8652   00570A                     
  8653                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8654   00570A  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8655   00570E  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8656   005712  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8657   005716  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8658   00571A  EC66  F029         	call	_fullSpeedAhead	;wreg free
  8659   00571E                     
  8660                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8661   00571E  0EA3               	movlw	163
  8662   005720  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8663   005722  0E57               	movlw	87
  8664   005724  6E1E               	movwf	??_ForwardOneBlock^0,c
  8665   005726  0E02               	movlw	2
  8666   005728                     u6157:
  8667   005728  2EE8               	decfsz	wreg,f,c
  8668   00572A  D7FE               	bra	u6157
  8669   00572C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8670   00572E  D7FC               	bra	u6157
  8671   005730  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8672   005732  D7FA               	bra	u6157
  8673   005734  D000               	nop2	
  8674   005736                     
  8675                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8676   005736  0EC7               	movlw	low _motorL
  8677   005738  6E14               	movwf	stop@mL^0,c
  8678   00573A  0E01               	movlw	high _motorL
  8679   00573C  6E15               	movwf	(stop@mL+1)^0,c
  8680   00573E  0EBE               	movlw	low _motorR
  8681   005740  6E16               	movwf	stop@mR^0,c
  8682   005742  0E01               	movlw	high _motorR
  8683   005744  6E17               	movwf	(stop@mR+1)^0,c
  8684   005746  EC3A  F02A         	call	_stop	;wreg free
  8685                           
  8686                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8687   00574A  0E05               	movlw	5
  8688   00574C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8689   00574E  0E0F               	movlw	15
  8690   005750  6E1E               	movwf	??_ForwardOneBlock^0,c
  8691   005752  0EF1               	movlw	241
  8692   005754                     u6167:
  8693   005754  2EE8               	decfsz	wreg,f,c
  8694   005756  D7FE               	bra	u6167
  8695   005758  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8696   00575A  D7FC               	bra	u6167
  8697   00575C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8698   00575E  D7FA               	bra	u6167
  8699   005760  F000               	nop	
  8700   005762  0012               	return		;funcret
  8701   005764                     __end_of_ForwardOneBlock:
  8702                           	callstack 0
  8703                           
  8704 ;; *************** function _RedMove *****************
  8705 ;; Defined at:
  8706 ;;		line 262 in file "dc_motor.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8709 ;;		 -> motorL(9), 
  8710 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8711 ;;		 -> motorR(9), 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;		None
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      void 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;Total ram usage:        4 bytes
  8728 ;; Hardware stack levels used: 1
  8729 ;; Hardware stack levels required when called: 4
  8730 ;; This function calls:
  8731 ;;		_reverseDetect
  8732 ;;		_turnRight45
  8733 ;; This function is called by:
  8734 ;;		_main
  8735 ;;		_go_Home
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text38
  8740   005E7C                     __ptext38:
  8741                           	callstack 0
  8742   005E7C                     _RedMove:
  8743                           	callstack 25
  8744   005E7C                     
  8745                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8746   005E7C  0EC7               	movlw	low _motorL
  8747   005E7E  6E1A               	movwf	reverseDetect@mL^0,c
  8748   005E80  0E01               	movlw	high _motorL
  8749   005E82  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8750   005E84  0EBE               	movlw	low _motorR
  8751   005E86  6E1C               	movwf	reverseDetect@mR^0,c
  8752   005E88  0E01               	movlw	high _motorR
  8753   005E8A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8754   005E8C  ECDF  F02B         	call	_reverseDetect	;wreg free
  8755                           
  8756                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8757   005E90  0EC7               	movlw	low _motorL
  8758   005E92  6E1A               	movwf	turnRight45@mL^0,c
  8759   005E94  0E01               	movlw	high _motorL
  8760   005E96  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8761   005E98  0EBE               	movlw	low _motorR
  8762   005E9A  6E1C               	movwf	turnRight45@mR^0,c
  8763   005E9C  0E01               	movlw	high _motorR
  8764   005E9E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8765   005EA0  EC22  F02E         	call	_turnRight45	;wreg free
  8766                           
  8767                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8768   005EA4  0EC7               	movlw	low _motorL
  8769   005EA6  6E1A               	movwf	turnRight45@mL^0,c
  8770   005EA8  0E01               	movlw	high _motorL
  8771   005EAA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8772   005EAC  0EBE               	movlw	low _motorR
  8773   005EAE  6E1C               	movwf	turnRight45@mR^0,c
  8774   005EB0  0E01               	movlw	high _motorR
  8775   005EB2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8776   005EB4  EC22  F02E         	call	_turnRight45	;wreg free
  8777   005EB8  0012               	return		;funcret
  8778   005EBA                     __end_of_RedMove:
  8779                           	callstack 0
  8780                           
  8781 ;; *************** function _OrangeMove *****************
  8782 ;; Defined at:
  8783 ;;		line 308 in file "dc_motor.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8786 ;;		 -> motorL(9), 
  8787 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8788 ;;		 -> motorR(9), 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;		None
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;Total ram usage:        4 bytes
  8805 ;; Hardware stack levels used: 1
  8806 ;; Hardware stack levels required when called: 4
  8807 ;; This function calls:
  8808 ;;		_reverseDetect
  8809 ;;		_turnRight45
  8810 ;; This function is called by:
  8811 ;;		_main
  8812 ;;		_go_Home
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text39
  8817   00591A                     __ptext39:
  8818                           	callstack 0
  8819   00591A                     _OrangeMove:
  8820                           	callstack 25
  8821   00591A                     
  8822                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8823   00591A  0EC7               	movlw	low _motorL
  8824   00591C  6E1A               	movwf	reverseDetect@mL^0,c
  8825   00591E  0E01               	movlw	high _motorL
  8826   005920  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8827   005922  0EBE               	movlw	low _motorR
  8828   005924  6E1C               	movwf	reverseDetect@mR^0,c
  8829   005926  0E01               	movlw	high _motorR
  8830   005928  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8831   00592A  ECDF  F02B         	call	_reverseDetect	;wreg free
  8832                           
  8833                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8834   00592E  0EC7               	movlw	low _motorL
  8835   005930  6E1A               	movwf	turnRight45@mL^0,c
  8836   005932  0E01               	movlw	high _motorL
  8837   005934  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8838   005936  0EBE               	movlw	low _motorR
  8839   005938  6E1C               	movwf	turnRight45@mR^0,c
  8840   00593A  0E01               	movlw	high _motorR
  8841   00593C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8842   00593E  EC22  F02E         	call	_turnRight45	;wreg free
  8843                           
  8844                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8845   005942  0EC7               	movlw	low _motorL
  8846   005944  6E1A               	movwf	turnRight45@mL^0,c
  8847   005946  0E01               	movlw	high _motorL
  8848   005948  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8849   00594A  0EBE               	movlw	low _motorR
  8850   00594C  6E1C               	movwf	turnRight45@mR^0,c
  8851   00594E  0E01               	movlw	high _motorR
  8852   005950  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8853   005952  EC22  F02E         	call	_turnRight45	;wreg free
  8854                           
  8855                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8856   005956  0EC7               	movlw	low _motorL
  8857   005958  6E1A               	movwf	turnRight45@mL^0,c
  8858   00595A  0E01               	movlw	high _motorL
  8859   00595C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8860   00595E  0EBE               	movlw	low _motorR
  8861   005960  6E1C               	movwf	turnRight45@mR^0,c
  8862   005962  0E01               	movlw	high _motorR
  8863   005964  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8864   005966  EC22  F02E         	call	_turnRight45	;wreg free
  8865   00596A  0012               	return		;funcret
  8866   00596C                     __end_of_OrangeMove:
  8867                           	callstack 0
  8868                           
  8869 ;; *************** function _LightBlueMove *****************
  8870 ;; Defined at:
  8871 ;;		line 317 in file "dc_motor.c"
  8872 ;; Parameters:    Size  Location     Type
  8873 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8874 ;;		 -> motorL(9), 
  8875 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8876 ;;		 -> motorR(9), 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;		None
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;Total ram usage:        4 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 4
  8895 ;; This function calls:
  8896 ;;		_reverseDetect
  8897 ;;		_turnLeft45
  8898 ;; This function is called by:
  8899 ;;		_main
  8900 ;;		_go_Home
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text40
  8905   00596C                     __ptext40:
  8906                           	callstack 0
  8907   00596C                     _LightBlueMove:
  8908                           	callstack 25
  8909   00596C                     
  8910                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8911   00596C  0EC7               	movlw	low _motorL
  8912   00596E  6E1A               	movwf	reverseDetect@mL^0,c
  8913   005970  0E01               	movlw	high _motorL
  8914   005972  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8915   005974  0EBE               	movlw	low _motorR
  8916   005976  6E1C               	movwf	reverseDetect@mR^0,c
  8917   005978  0E01               	movlw	high _motorR
  8918   00597A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8919   00597C  ECDF  F02B         	call	_reverseDetect	;wreg free
  8920                           
  8921                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8922   005980  0EC7               	movlw	low _motorL
  8923   005982  6E1A               	movwf	turnLeft45@mL^0,c
  8924   005984  0E01               	movlw	high _motorL
  8925   005986  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8926   005988  0EBE               	movlw	low _motorR
  8927   00598A  6E1C               	movwf	turnLeft45@mR^0,c
  8928   00598C  0E01               	movlw	high _motorR
  8929   00598E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8930   005990  EC49  F02E         	call	_turnLeft45	;wreg free
  8931                           
  8932                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8933   005994  0EC7               	movlw	low _motorL
  8934   005996  6E1A               	movwf	turnLeft45@mL^0,c
  8935   005998  0E01               	movlw	high _motorL
  8936   00599A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8937   00599C  0EBE               	movlw	low _motorR
  8938   00599E  6E1C               	movwf	turnLeft45@mR^0,c
  8939   0059A0  0E01               	movlw	high _motorR
  8940   0059A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8941   0059A4  EC49  F02E         	call	_turnLeft45	;wreg free
  8942                           
  8943                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8944   0059A8  0EC7               	movlw	low _motorL
  8945   0059AA  6E1A               	movwf	turnLeft45@mL^0,c
  8946   0059AC  0E01               	movlw	high _motorL
  8947   0059AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8948   0059B0  0EBE               	movlw	low _motorR
  8949   0059B2  6E1C               	movwf	turnLeft45@mR^0,c
  8950   0059B4  0E01               	movlw	high _motorR
  8951   0059B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8952   0059B8  EC49  F02E         	call	_turnLeft45	;wreg free
  8953   0059BC  0012               	return		;funcret
  8954   0059BE                     __end_of_LightBlueMove:
  8955                           	callstack 0
  8956                           
  8957 ;; *************** function _GreenMove *****************
  8958 ;; Defined at:
  8959 ;;		line 270 in file "dc_motor.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8962 ;;		 -> motorL(9), 
  8963 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8964 ;;		 -> motorR(9), 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;Total ram usage:        4 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 4
  8983 ;; This function calls:
  8984 ;;		_reverseDetect
  8985 ;;		_turnLeft45
  8986 ;; This function is called by:
  8987 ;;		_main
  8988 ;;		_go_Home
  8989 ;; This function uses a non-reentrant model
  8990 ;;
  8991                           
  8992                           	psect	text41
  8993   005EBA                     __ptext41:
  8994                           	callstack 0
  8995   005EBA                     _GreenMove:
  8996                           	callstack 25
  8997   005EBA                     
  8998                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  8999   005EBA  0EC7               	movlw	low _motorL
  9000   005EBC  6E1A               	movwf	reverseDetect@mL^0,c
  9001   005EBE  0E01               	movlw	high _motorL
  9002   005EC0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9003   005EC2  0EBE               	movlw	low _motorR
  9004   005EC4  6E1C               	movwf	reverseDetect@mR^0,c
  9005   005EC6  0E01               	movlw	high _motorR
  9006   005EC8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9007   005ECA  ECDF  F02B         	call	_reverseDetect	;wreg free
  9008                           
  9009                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9010   005ECE  0EC7               	movlw	low _motorL
  9011   005ED0  6E1A               	movwf	turnLeft45@mL^0,c
  9012   005ED2  0E01               	movlw	high _motorL
  9013   005ED4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9014   005ED6  0EBE               	movlw	low _motorR
  9015   005ED8  6E1C               	movwf	turnLeft45@mR^0,c
  9016   005EDA  0E01               	movlw	high _motorR
  9017   005EDC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9018   005EDE  EC49  F02E         	call	_turnLeft45	;wreg free
  9019                           
  9020                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9021   005EE2  0EC7               	movlw	low _motorL
  9022   005EE4  6E1A               	movwf	turnLeft45@mL^0,c
  9023   005EE6  0E01               	movlw	high _motorL
  9024   005EE8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9025   005EEA  0EBE               	movlw	low _motorR
  9026   005EEC  6E1C               	movwf	turnLeft45@mR^0,c
  9027   005EEE  0E01               	movlw	high _motorR
  9028   005EF0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9029   005EF2  EC49  F02E         	call	_turnLeft45	;wreg free
  9030   005EF6  0012               	return		;funcret
  9031   005EF8                     __end_of_GreenMove:
  9032                           	callstack 0
  9033                           
  9034 ;; *************** function _BlueMove *****************
  9035 ;; Defined at:
  9036 ;;		line 278 in file "dc_motor.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9039 ;;		 -> motorL(9), 
  9040 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9041 ;;		 -> motorR(9), 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;		None
  9044 ;; Return value:  Size  Location     Type
  9045 ;;                  1    wreg      void 
  9046 ;; Registers used:
  9047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9048 ;; Tracked objects:
  9049 ;;		On entry : 0/0
  9050 ;;		On exit  : 0/0
  9051 ;;		Unchanged: 0/0
  9052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;Total ram usage:        4 bytes
  9058 ;; Hardware stack levels used: 1
  9059 ;; Hardware stack levels required when called: 4
  9060 ;; This function calls:
  9061 ;;		_reverseDetect
  9062 ;;		_turnRight45
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;;		_go_Home
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text42
  9070   005646                     __ptext42:
  9071                           	callstack 0
  9072   005646                     _BlueMove:
  9073                           	callstack 25
  9074   005646                     
  9075                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9076   005646  0EC7               	movlw	low _motorL
  9077   005648  6E1A               	movwf	reverseDetect@mL^0,c
  9078   00564A  0E01               	movlw	high _motorL
  9079   00564C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9080   00564E  0EBE               	movlw	low _motorR
  9081   005650  6E1C               	movwf	reverseDetect@mR^0,c
  9082   005652  0E01               	movlw	high _motorR
  9083   005654  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9084   005656  ECDF  F02B         	call	_reverseDetect	;wreg free
  9085                           
  9086                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9087   00565A  0EC7               	movlw	low _motorL
  9088   00565C  6E1A               	movwf	turnRight45@mL^0,c
  9089   00565E  0E01               	movlw	high _motorL
  9090   005660  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9091   005662  0EBE               	movlw	low _motorR
  9092   005664  6E1C               	movwf	turnRight45@mR^0,c
  9093   005666  0E01               	movlw	high _motorR
  9094   005668  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9095   00566A  EC22  F02E         	call	_turnRight45	;wreg free
  9096                           
  9097                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9098   00566E  0EC7               	movlw	low _motorL
  9099   005670  6E1A               	movwf	turnRight45@mL^0,c
  9100   005672  0E01               	movlw	high _motorL
  9101   005674  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9102   005676  0EBE               	movlw	low _motorR
  9103   005678  6E1C               	movwf	turnRight45@mR^0,c
  9104   00567A  0E01               	movlw	high _motorR
  9105   00567C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9106   00567E  EC22  F02E         	call	_turnRight45	;wreg free
  9107                           
  9108                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9109   005682  0EC7               	movlw	low _motorL
  9110   005684  6E1A               	movwf	turnRight45@mL^0,c
  9111   005686  0E01               	movlw	high _motorL
  9112   005688  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9113   00568A  0EBE               	movlw	low _motorR
  9114   00568C  6E1C               	movwf	turnRight45@mR^0,c
  9115   00568E  0E01               	movlw	high _motorR
  9116   005690  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9117   005692  EC22  F02E         	call	_turnRight45	;wreg free
  9118                           
  9119                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9120   005696  0EC7               	movlw	low _motorL
  9121   005698  6E1A               	movwf	turnRight45@mL^0,c
  9122   00569A  0E01               	movlw	high _motorL
  9123   00569C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9124   00569E  0EBE               	movlw	low _motorR
  9125   0056A0  6E1C               	movwf	turnRight45@mR^0,c
  9126   0056A2  0E01               	movlw	high _motorR
  9127   0056A4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9128   0056A6  EC22  F02E         	call	_turnRight45	;wreg free
  9129   0056AA  0012               	return		;funcret
  9130   0056AC                     __end_of_BlueMove:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function _getTMR0val *****************
  9134 ;; Defined at:
  9135 ;;		line 28 in file "timers.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  moving          2    0[COMRAM] int 
  9140 ;;  temp            2    0        unsigned int 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;Total ram usage:        2 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_main
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text43
  9164   006020                     __ptext43:
  9165                           	callstack 0
  9166   006020                     _getTMR0val:
  9167                           	callstack 30
  9168   006020  50D3               	movf	211,w,c	;volatile
  9169   006022                     
  9170                           ;timers.c: 32:     int moving=TMR0H<<8;
  9171   006022  50D4               	movf	212,w,c	;volatile
  9172   006024  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9173   006026  6A01               	clrf	getTMR0val@moving^0,c
  9174   006028                     
  9175                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9176   006028  90D8               	bcf	status,0,c
  9177   00602A  0101               	movlb	1	; () banked
  9178   00602C  357A               	rlcf	_move_count& (0+255),w,b	;volatile
  9179   00602E  6ED9               	movwf	fsr2l,c
  9180   006030  357B               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9181   006032  6EDA               	movwf	fsr2h,c
  9182   006034  0E3C               	movlw	low _Time_forward
  9183   006036  26D9               	addwf	fsr2l,f,c
  9184   006038  0E02               	movlw	high _Time_forward
  9185   00603A  22DA               	addwfc	fsr2h,f,c
  9186   00603C  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9187   006040  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9188   006044                     
  9189                           ; BSR set to: 1
  9190   006044  0012               	return		;funcret
  9191   006046                     __end_of_getTMR0val:
  9192                           	callstack 0
  9193                           
  9194 ;; *************** function _colour_rel *****************
  9195 ;; Defined at:
  9196 ;;		line 114 in file "color.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  vals            2   74[COMRAM] PTR struct RGB
  9199 ;;		 -> vals(8), 
  9200 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9201 ;;		 -> rel(12), 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  B               4   20[BANK0 ] float 
  9204 ;;  G               4   16[BANK0 ] float 
  9205 ;;  R               4   12[BANK0 ] float 
  9206 ;;  L               4    0[BANK0 ] float 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9217 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;Total ram usage:       28 bytes
  9221 ;; Hardware stack levels used: 1
  9222 ;; Hardware stack levels required when called: 1
  9223 ;; This function calls:
  9224 ;;		___fladd
  9225 ;;		___fldiv
  9226 ;;		___xxtofl
  9227 ;; This function is called by:
  9228 ;;		_main
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text44
  9233   0034D0                     __ptext44:
  9234                           	callstack 0
  9235   0034D0                     _colour_rel:
  9236                           	callstack 29
  9237   0034D0                     
  9238                           ;color.c: 115:     float R = vals->R;
  9239   0034D0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9240   0034D4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9241   0034D8  CFDE F001          	movff	postinc2,___xxtofl@val
  9242   0034DC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9243   0034E0  0E00               	movlw	0
  9244   0034E2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9245   0034E4  0EFF               	movlw	-1
  9246   0034E6  6E03               	movwf	(___xxtofl@val+2)^0,c
  9247   0034E8  6E04               	movwf	(___xxtofl@val+3)^0,c
  9248   0034EA  0E01               	movlw	1
  9249   0034EC  EC2A  F022         	call	___xxtofl
  9250   0034F0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9251   0034F4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9252   0034F8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9253   0034FC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9254                           
  9255                           ;color.c: 116:     float G = vals->G;
  9256   003500  EE20 F002          	lfsr	2,2
  9257   003504  504B               	movf	colour_rel@vals^0,w,c
  9258   003506  26D9               	addwf	fsr2l,f,c
  9259   003508  504C               	movf	(colour_rel@vals+1)^0,w,c
  9260   00350A  22DA               	addwfc	fsr2h,f,c
  9261   00350C  CFDE F001          	movff	postinc2,___xxtofl@val
  9262   003510  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9263   003514  0E00               	movlw	0
  9264   003516  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9265   003518  0EFF               	movlw	-1
  9266   00351A  6E03               	movwf	(___xxtofl@val+2)^0,c
  9267   00351C  6E04               	movwf	(___xxtofl@val+3)^0,c
  9268   00351E  0E01               	movlw	1
  9269   003520  EC2A  F022         	call	___xxtofl
  9270   003524  C001  F070         	movff	?___xxtofl,colour_rel@G
  9271   003528  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9272   00352C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9273   003530  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9274                           
  9275                           ;color.c: 117:     float B = vals->B;
  9276   003534  EE20 F004          	lfsr	2,4
  9277   003538  504B               	movf	colour_rel@vals^0,w,c
  9278   00353A  26D9               	addwf	fsr2l,f,c
  9279   00353C  504C               	movf	(colour_rel@vals+1)^0,w,c
  9280   00353E  22DA               	addwfc	fsr2h,f,c
  9281   003540  CFDE F001          	movff	postinc2,___xxtofl@val
  9282   003544  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9283   003548  0E00               	movlw	0
  9284   00354A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9285   00354C  0EFF               	movlw	-1
  9286   00354E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9287   003550  6E04               	movwf	(___xxtofl@val+3)^0,c
  9288   003552  0E01               	movlw	1
  9289   003554  EC2A  F022         	call	___xxtofl
  9290   003558  C001  F074         	movff	?___xxtofl,colour_rel@B
  9291   00355C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9292   003560  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9293   003564  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9294                           
  9295                           ;color.c: 118:     float L = vals->L;
  9296   003568  EE20 F006          	lfsr	2,6
  9297   00356C  504B               	movf	colour_rel@vals^0,w,c
  9298   00356E  26D9               	addwf	fsr2l,f,c
  9299   003570  504C               	movf	(colour_rel@vals+1)^0,w,c
  9300   003572  22DA               	addwfc	fsr2h,f,c
  9301   003574  CFDE F001          	movff	postinc2,___xxtofl@val
  9302   003578  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9303   00357C  0E00               	movlw	0
  9304   00357E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9305   003580  0EFF               	movlw	-1
  9306   003582  6E03               	movwf	(___xxtofl@val+2)^0,c
  9307   003584  6E04               	movwf	(___xxtofl@val+3)^0,c
  9308   003586  0E01               	movlw	1
  9309   003588  EC2A  F022         	call	___xxtofl
  9310   00358C  C001  F060         	movff	?___xxtofl,colour_rel@L
  9311   003590  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9312   003594  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9313   003598  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9314   00359C                     
  9315                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9316   00359C  C070  F005         	movff	colour_rel@G,___fladd@a
  9317   0035A0  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9318   0035A4  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9319   0035A8  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9320   0035AC  C06C  F001         	movff	colour_rel@R,___fladd@b
  9321   0035B0  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9322   0035B4  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9323   0035B8  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9324   0035BC  EC26  F014         	call	___fladd	;wreg free
  9325   0035C0  C001  F064         	movff	?___fladd,_colour_rel$3160
  9326   0035C4  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9327   0035C8  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9328   0035CC  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9329   0035D0                     
  9330                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9331   0035D0  C074  F005         	movff	colour_rel@B,___fladd@a
  9332   0035D4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9333   0035D8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9334   0035DC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9335   0035E0  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9336   0035E4  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9337   0035E8  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9338   0035EC  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9339   0035F0  EC26  F014         	call	___fladd	;wreg free
  9340   0035F4  C001  F068         	movff	?___fladd,_colour_rel$3161
  9341   0035F8  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9342   0035FC  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9343   003600  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9344                           
  9345                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9346   003604  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9347   003608  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9348   00360C  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9349   003610  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9350   003614  C060  F005         	movff	colour_rel@L,___fladd@a
  9351   003618  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9352   00361C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9353   003620  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9354   003624  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9355   003628  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9356   00362C  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9357   003630  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9358   003634  EC26  F014         	call	___fladd	;wreg free
  9359   003638  C001  F036         	movff	?___fladd,___fldiv@a
  9360   00363C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9361   003640  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9362   003644  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9363   003648  EC9B  F018         	call	___fldiv	;wreg free
  9364   00364C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9365   003650  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9366   003654  C032  FFDE         	movff	?___fldiv,postinc2
  9367   003658  C033  FFDE         	movff	?___fldiv+1,postinc2
  9368   00365C  C034  FFDE         	movff	?___fldiv+2,postinc2
  9369   003660  C035  FFDE         	movff	?___fldiv+3,postinc2
  9370   003664                     
  9371                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9372   003664  C070  F005         	movff	colour_rel@G,___fladd@a
  9373   003668  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9374   00366C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9375   003670  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9376   003674  C06C  F001         	movff	colour_rel@R,___fladd@b
  9377   003678  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9378   00367C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9379   003680  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9380   003684  EC26  F014         	call	___fladd	;wreg free
  9381   003688  C001  F064         	movff	?___fladd,_colour_rel$3160
  9382   00368C  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9383   003690  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9384   003694  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9385   003698                     
  9386                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9387   003698  C074  F005         	movff	colour_rel@B,___fladd@a
  9388   00369C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9389   0036A0  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9390   0036A4  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9391   0036A8  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9392   0036AC  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9393   0036B0  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9394   0036B4  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9395   0036B8  EC26  F014         	call	___fladd	;wreg free
  9396   0036BC  C001  F068         	movff	?___fladd,_colour_rel$3161
  9397   0036C0  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9398   0036C4  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9399   0036C8  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9400                           
  9401                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9402   0036CC  C074  F032         	movff	colour_rel@B,___fldiv@b
  9403   0036D0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9404   0036D4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9405   0036D8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9406   0036DC  C060  F005         	movff	colour_rel@L,___fladd@a
  9407   0036E0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9408   0036E4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9409   0036E8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9410   0036EC  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9411   0036F0  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9412   0036F4  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9413   0036F8  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9414   0036FC  EC26  F014         	call	___fladd	;wreg free
  9415   003700  C001  F036         	movff	?___fladd,___fldiv@a
  9416   003704  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9417   003708  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9418   00370C  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9419   003710  EC9B  F018         	call	___fldiv	;wreg free
  9420   003714  EE20 F008          	lfsr	2,8
  9421   003718  504D               	movf	colour_rel@rel^0,w,c
  9422   00371A  26D9               	addwf	fsr2l,f,c
  9423   00371C  504E               	movf	(colour_rel@rel+1)^0,w,c
  9424   00371E  22DA               	addwfc	fsr2h,f,c
  9425   003720  C032  FFDE         	movff	?___fldiv,postinc2
  9426   003724  C033  FFDE         	movff	?___fldiv+1,postinc2
  9427   003728  C034  FFDE         	movff	?___fldiv+2,postinc2
  9428   00372C  C035  FFDE         	movff	?___fldiv+3,postinc2
  9429   003730                     
  9430                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9431   003730  C070  F005         	movff	colour_rel@G,___fladd@a
  9432   003734  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9433   003738  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9434   00373C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9435   003740  C06C  F001         	movff	colour_rel@R,___fladd@b
  9436   003744  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9437   003748  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9438   00374C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9439   003750  EC26  F014         	call	___fladd	;wreg free
  9440   003754  C001  F064         	movff	?___fladd,_colour_rel$3160
  9441   003758  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9442   00375C  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9443   003760  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9444   003764                     
  9445                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9446   003764  C074  F005         	movff	colour_rel@B,___fladd@a
  9447   003768  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9448   00376C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9449   003770  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9450   003774  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9451   003778  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9452   00377C  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9453   003780  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9454   003784  EC26  F014         	call	___fladd	;wreg free
  9455   003788  C001  F068         	movff	?___fladd,_colour_rel$3161
  9456   00378C  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9457   003790  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9458   003794  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9459                           
  9460                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9461   003798  C070  F032         	movff	colour_rel@G,___fldiv@b
  9462   00379C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9463   0037A0  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9464   0037A4  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9465   0037A8  C060  F005         	movff	colour_rel@L,___fladd@a
  9466   0037AC  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9467   0037B0  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9468   0037B4  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9469   0037B8  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9470   0037BC  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9471   0037C0  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9472   0037C4  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9473   0037C8  EC26  F014         	call	___fladd	;wreg free
  9474   0037CC  C001  F036         	movff	?___fladd,___fldiv@a
  9475   0037D0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9476   0037D4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9477   0037D8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9478   0037DC  EC9B  F018         	call	___fldiv	;wreg free
  9479   0037E0  EE20 F004          	lfsr	2,4
  9480   0037E4  504D               	movf	colour_rel@rel^0,w,c
  9481   0037E6  26D9               	addwf	fsr2l,f,c
  9482   0037E8  504E               	movf	(colour_rel@rel+1)^0,w,c
  9483   0037EA  22DA               	addwfc	fsr2h,f,c
  9484   0037EC  C032  FFDE         	movff	?___fldiv,postinc2
  9485   0037F0  C033  FFDE         	movff	?___fldiv+1,postinc2
  9486   0037F4  C034  FFDE         	movff	?___fldiv+2,postinc2
  9487   0037F8  C035  FFDE         	movff	?___fldiv+3,postinc2
  9488   0037FC  0012               	return		;funcret
  9489   0037FE                     __end_of_colour_rel:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function _color_click_init *****************
  9493 ;; Defined at:
  9494 ;;		line 7 in file "color.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;		None
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;		None
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;Total ram usage:        1 bytes
  9513 ;; Hardware stack levels used: 1
  9514 ;; Hardware stack levels required when called: 3
  9515 ;; This function calls:
  9516 ;;		_I2C_2_Master_Init
  9517 ;;		_color_writetoaddr
  9518 ;; This function is called by:
  9519 ;;		_main
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text45
  9524   0059BE                     __ptext45:
  9525                           	callstack 0
  9526   0059BE                     _color_click_init:
  9527                           	callstack 27
  9528   0059BE                     
  9529                           ;color.c: 10:     I2C_2_Master_Init();
  9530   0059BE  ECE7  F02F         	call	_I2C_2_Master_Init	;wreg free
  9531   0059C2                     
  9532                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9533   0059C2  0E01               	movlw	1
  9534   0059C4  6E03               	movwf	color_writetoaddr@value^0,c
  9535   0059C6  0E00               	movlw	0
  9536   0059C8  EC36  F030         	call	_color_writetoaddr
  9537   0059CC                     
  9538                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9539   0059CC  0E3F               	movlw	63
  9540   0059CE  6E05               	movwf	??_color_click_init^0,c
  9541   0059D0  0E55               	movlw	85
  9542   0059D2                     u6177:
  9543   0059D2  2EE8               	decfsz	wreg,f,c
  9544   0059D4  D7FE               	bra	u6177
  9545   0059D6  2E05               	decfsz	??_color_click_init^0,f,c
  9546   0059D8  D7FC               	bra	u6177
  9547   0059DA  F000               	nop	
  9548   0059DC                     
  9549                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9550   0059DC  0E03               	movlw	3
  9551   0059DE  6E03               	movwf	color_writetoaddr@value^0,c
  9552   0059E0  0E00               	movlw	0
  9553   0059E2  EC36  F030         	call	_color_writetoaddr
  9554   0059E6                     
  9555                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9556   0059E6  0ED5               	movlw	213
  9557   0059E8  6E03               	movwf	color_writetoaddr@value^0,c
  9558   0059EA  0E01               	movlw	1
  9559   0059EC  EC36  F030         	call	_color_writetoaddr
  9560   0059F0                     
  9561                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9562   0059F0  0E00               	movlw	0
  9563   0059F2  6E03               	movwf	color_writetoaddr@value^0,c
  9564   0059F4  0E0F               	movlw	15
  9565   0059F6  EC36  F030         	call	_color_writetoaddr
  9566   0059FA                     
  9567                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9568   0059FA  9287               	bcf	135,1,c	;volatile
  9569   0059FC                     
  9570                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9571   0059FC  9881               	bcf	129,4,c	;volatile
  9572   0059FE                     
  9573                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9574   0059FE  9E86               	bcf	134,7,c	;volatile
  9575   005A00                     
  9576                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9577   005A00  9684               	bcf	132,3,c	;volatile
  9578   005A02                     
  9579                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9580   005A02  9884               	bcf	132,4,c	;volatile
  9581   005A04                     
  9582                           ;color.c: 28:     LATGbits.LATG1=0;
  9583   005A04  927F               	bcf	127,1,c	;volatile
  9584   005A06                     
  9585                           ;color.c: 29:     LATFbits.LATF7=0;
  9586   005A06  9E7E               	bcf	126,7,c	;volatile
  9587   005A08                     
  9588                           ;color.c: 30:     LATAbits.LATA4=0;
  9589   005A08  9879               	bcf	121,4,c	;volatile
  9590   005A0A                     
  9591                           ;color.c: 32:     LATDbits.LATD3=0;
  9592   005A0A  967C               	bcf	124,3,c	;volatile
  9593   005A0C                     
  9594                           ;color.c: 33:     LATDbits.LATD4=0;
  9595   005A0C  987C               	bcf	124,4,c	;volatile
  9596   005A0E  0012               	return		;funcret
  9597   005A10                     __end_of_color_click_init:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _color_writetoaddr *****************
  9601 ;; Defined at:
  9602 ;;		line 41 in file "color.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  address         1    wreg     unsigned char 
  9605 ;;  value           1    2[COMRAM] unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  address         1    3[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0, cstack
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;Total ram usage:        2 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 2
  9624 ;; This function calls:
  9625 ;;		_I2C_2_Master_Start
  9626 ;;		_I2C_2_Master_Stop
  9627 ;;		_I2C_2_Master_Write
  9628 ;; This function is called by:
  9629 ;;		_color_click_init
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text46
  9634   00606C                     __ptext46:
  9635                           	callstack 0
  9636   00606C                     _color_writetoaddr:
  9637                           	callstack 27
  9638                           
  9639                           ;incstack = 0
  9640                           ;color_writetoaddr@address stored from wreg
  9641   00606C  6E04               	movwf	color_writetoaddr@address^0,c
  9642   00606E                     
  9643                           ;color.c: 42:     I2C_2_Master_Start();
  9644   00606E  EC81  F030         	call	_I2C_2_Master_Start	;wreg free
  9645                           
  9646                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9647   006072  0E52               	movlw	82
  9648   006074  EC71  F030         	call	_I2C_2_Master_Write
  9649                           
  9650                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9651   006078  5004               	movf	color_writetoaddr@address^0,w,c
  9652   00607A  0980               	iorlw	128
  9653   00607C  EC71  F030         	call	_I2C_2_Master_Write
  9654                           
  9655                           ;color.c: 45:     I2C_2_Master_Write(value);
  9656   006080  5003               	movf	color_writetoaddr@value^0,w,c
  9657   006082  EC71  F030         	call	_I2C_2_Master_Write
  9658                           
  9659                           ;color.c: 46:     I2C_2_Master_Stop();
  9660   006086  EC7C  F030         	call	_I2C_2_Master_Stop	;wreg free
  9661   00608A  0012               	return		;funcret
  9662   00608C                     __end_of_color_writetoaddr:
  9663                           	callstack 0
  9664                           
  9665 ;; *************** function _I2C_2_Master_Write *****************
  9666 ;; Defined at:
  9667 ;;		line 45 in file "i2c.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  data_byte       1    wreg     unsigned char 
  9670 ;; Auto vars:     Size  Location     Type
  9671 ;;  data_byte       1    1[COMRAM] unsigned char 
  9672 ;; Return value:  Size  Location     Type
  9673 ;;                  1    wreg      void 
  9674 ;; Registers used:
  9675 ;;		wreg, status,2, status,0, cstack
  9676 ;; Tracked objects:
  9677 ;;		On entry : 0/0
  9678 ;;		On exit  : 0/0
  9679 ;;		Unchanged: 0/0
  9680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;Total ram usage:        1 bytes
  9686 ;; Hardware stack levels used: 1
  9687 ;; Hardware stack levels required when called: 1
  9688 ;; This function calls:
  9689 ;;		_I2C_2_Master_Idle
  9690 ;; This function is called by:
  9691 ;;		_color_writetoaddr
  9692 ;;		_color_read_lum
  9693 ;;		_color_read_Red
  9694 ;;		_color_read_Green
  9695 ;;		_color_read_Blue
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text47
  9700   0060E2                     __ptext47:
  9701                           	callstack 0
  9702   0060E2                     _I2C_2_Master_Write:
  9703                           	callstack 27
  9704                           
  9705                           ;incstack = 0
  9706                           ;I2C_2_Master_Write@data_byte stored from wreg
  9707   0060E2  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9708   0060E4                     
  9709                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9710   0060E4  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9711   0060E8                     
  9712                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9713   0060E8  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9714   0060EC  0012               	return		;funcret
  9715   0060EE                     __end_of_I2C_2_Master_Write:
  9716                           	callstack 0
  9717                           
  9718 ;; *************** function _I2C_2_Master_Stop *****************
  9719 ;; Defined at:
  9720 ;;		line 39 in file "i2c.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;		None
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg, status,2, status,0, cstack
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;Total ram usage:        0 bytes
  9739 ;; Hardware stack levels used: 1
  9740 ;; Hardware stack levels required when called: 1
  9741 ;; This function calls:
  9742 ;;		_I2C_2_Master_Idle
  9743 ;; This function is called by:
  9744 ;;		_color_writetoaddr
  9745 ;;		_color_read_lum
  9746 ;;		_color_read_Red
  9747 ;;		_color_read_Green
  9748 ;;		_color_read_Blue
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text48
  9753   0060F8                     __ptext48:
  9754                           	callstack 0
  9755   0060F8                     _I2C_2_Master_Stop:
  9756                           	callstack 27
  9757   0060F8                     
  9758                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9759   0060F8  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9760   0060FC                     
  9761                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9762   0060FC  010E               	movlb	14	; () banked
  9763   0060FE  85DA               	bsf	218,2,b	;volatile
  9764   006100                     
  9765                           ; BSR set to: 14
  9766   006100  0012               	return		;funcret
  9767   006102                     __end_of_I2C_2_Master_Stop:
  9768                           	callstack 0
  9769                           
  9770 ;; *************** function _I2C_2_Master_Start *****************
  9771 ;; Defined at:
  9772 ;;		line 27 in file "i2c.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 1
  9793 ;; This function calls:
  9794 ;;		_I2C_2_Master_Idle
  9795 ;; This function is called by:
  9796 ;;		_color_writetoaddr
  9797 ;;		_color_read_lum
  9798 ;;		_color_read_Red
  9799 ;;		_color_read_Green
  9800 ;;		_color_read_Blue
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text49
  9805   006102                     __ptext49:
  9806                           	callstack 0
  9807   006102                     _I2C_2_Master_Start:
  9808                           	callstack 27
  9809   006102                     
  9810                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9811   006102  ECFC  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9812   006106                     
  9813                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9814   006106  010E               	movlb	14	; () banked
  9815   006108  81DA               	bsf	218,0,b	;volatile
  9816   00610A                     
  9817                           ; BSR set to: 14
  9818   00610A  0012               	return		;funcret
  9819   00610C                     __end_of_I2C_2_Master_Start:
  9820                           	callstack 0
  9821                           
  9822 ;; *************** function _I2C_2_Master_Idle *****************
  9823 ;; Defined at:
  9824 ;;		line 22 in file "i2c.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9842 ;;Total ram usage:        1 bytes
  9843 ;; Hardware stack levels used: 1
  9844 ;; This function calls:
  9845 ;;		Nothing
  9846 ;; This function is called by:
  9847 ;;		_I2C_2_Master_Start
  9848 ;;		_I2C_2_Master_RepStart
  9849 ;;		_I2C_2_Master_Stop
  9850 ;;		_I2C_2_Master_Write
  9851 ;;		_I2C_2_Master_Read
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text50
  9856   005FF8                     __ptext50:
  9857                           	callstack 0
  9858   005FF8                     _I2C_2_Master_Idle:
  9859                           	callstack 27
  9860   005FF8                     l143:
  9861   005FF8  010E               	movlb	14	; () banked
  9862   005FFA  B5D8               	btfsc	216,2,b	;volatile
  9863   005FFC  EF02  F030         	goto	u4451
  9864   006000  EF04  F030         	goto	u4450
  9865   006004                     u4451:
  9866   006004  EFFC  F02F         	goto	l143
  9867   006008                     u4450:
  9868   006008                     
  9869                           ; BSR set to: 14
  9870   006008  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9871   00600C  0E1F               	movlw	31
  9872   00600E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9873   006010  A4D8               	btfss	status,2,c
  9874   006012  EF0D  F030         	goto	u4461
  9875   006016  EF0F  F030         	goto	u4460
  9876   00601A                     u4461:
  9877   00601A  EFFC  F02F         	goto	l143
  9878   00601E                     u4460:
  9879   00601E                     
  9880                           ; BSR set to: 14
  9881   00601E  0012               	return		;funcret
  9882   006020                     __end_of_I2C_2_Master_Idle:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _I2C_2_Master_Init *****************
  9886 ;; Defined at:
  9887 ;;		line 4 in file "i2c.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;		None
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;		None
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  1    wreg      void 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9905 ;;Total ram usage:        0 bytes
  9906 ;; Hardware stack levels used: 1
  9907 ;; This function calls:
  9908 ;;		Nothing
  9909 ;; This function is called by:
  9910 ;;		_color_click_init
  9911 ;;		_main
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text51
  9916   005FCE                     __ptext51:
  9917                           	callstack 0
  9918   005FCE                     _I2C_2_Master_Init:
  9919                           	callstack 29
  9920   005FCE                     
  9921                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9922   005FCE  010E               	movlb	14	; () banked
  9923   005FD0  51D9               	movf	217,w,b	;volatile
  9924   005FD2  0BF0               	andlw	-16
  9925   005FD4  0908               	iorlw	8
  9926   005FD6  6FD9               	movwf	217,b	;volatile
  9927   005FD8                     
  9928                           ; BSR set to: 14
  9929                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9930   005FD8  8BD9               	bsf	217,5,b	;volatile
  9931                           
  9932                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9933   005FDA  0E9F               	movlw	159
  9934   005FDC  6FD6               	movwf	214,b	;volatile
  9935   005FDE                     
  9936                           ; BSR set to: 14
  9937                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9938   005FDE  8A84               	bsf	132,5,c	;volatile
  9939   005FE0                     
  9940                           ; BSR set to: 14
  9941                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9942   005FE0  8C84               	bsf	132,6,c	;volatile
  9943   005FE2                     
  9944                           ; BSR set to: 14
  9945                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9946   005FE2  9BA7               	bcf	167,5,b	;volatile
  9947   005FE4                     
  9948                           ; BSR set to: 14
  9949                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9950   005FE4  9DA7               	bcf	167,6,b	;volatile
  9951                           
  9952                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9953   005FE6  0E1D               	movlw	29
  9954   005FE8  6F1D               	movwf	29,b	;volatile
  9955                           
  9956                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9957   005FEA  0E1E               	movlw	30
  9958   005FEC  6F1C               	movwf	28,b	;volatile
  9959                           
  9960                           ;i2c.c: 18:   RD5PPS=0x1C;
  9961   005FEE  0E1C               	movlw	28
  9962   005FF0  6F6F               	movwf	111,b	;volatile
  9963                           
  9964                           ;i2c.c: 19:   RD6PPS=0x1B;
  9965   005FF2  0E1B               	movlw	27
  9966   005FF4  6F70               	movwf	112,b	;volatile
  9967   005FF6                     
  9968                           ; BSR set to: 14
  9969   005FF6  0012               	return		;funcret
  9970   005FF8                     __end_of_I2C_2_Master_Init:
  9971                           	callstack 0
  9972                           
  9973 ;; *************** function _YellowMove *****************
  9974 ;; Defined at:
  9975 ;;		line 288 in file "dc_motor.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9978 ;;		 -> motorL(9), 
  9979 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9980 ;;		 -> motorR(9), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9996 ;;Total ram usage:        4 bytes
  9997 ;; Hardware stack levels used: 1
  9998 ;; Hardware stack levels required when called: 4
  9999 ;; This function calls:
 10000 ;;		_reverseDetect
 10001 ;;		_reverseOneBlock
 10002 ;;		_turnRight45
 10003 ;; This function is called by:
 10004 ;;		_main
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text52
 10009   005A10                     __ptext52:
 10010                           	callstack 0
 10011   005A10                     _YellowMove:
 10012                           	callstack 26
 10013   005A10                     
 10014                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10015   005A10  0EC7               	movlw	low _motorL
 10016   005A12  6E1A               	movwf	reverseDetect@mL^0,c
 10017   005A14  0E01               	movlw	high _motorL
 10018   005A16  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10019   005A18  0EBE               	movlw	low _motorR
 10020   005A1A  6E1C               	movwf	reverseDetect@mR^0,c
 10021   005A1C  0E01               	movlw	high _motorR
 10022   005A1E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10023   005A20  ECDF  F02B         	call	_reverseDetect	;wreg free
 10024                           
 10025                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10026   005A24  0EC7               	movlw	low _motorL
 10027   005A26  6E1A               	movwf	reverseOneBlock@mL^0,c
 10028   005A28  0E01               	movlw	high _motorL
 10029   005A2A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10030   005A2C  0EBE               	movlw	low _motorR
 10031   005A2E  6E1C               	movwf	reverseOneBlock@mR^0,c
 10032   005A30  0E01               	movlw	high _motorR
 10033   005A32  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10034   005A34  ECB2  F02B         	call	_reverseOneBlock	;wreg free
 10035                           
 10036                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10037   005A38  0EC7               	movlw	low _motorL
 10038   005A3A  6E1A               	movwf	turnRight45@mL^0,c
 10039   005A3C  0E01               	movlw	high _motorL
 10040   005A3E  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10041   005A40  0EBE               	movlw	low _motorR
 10042   005A42  6E1C               	movwf	turnRight45@mR^0,c
 10043   005A44  0E01               	movlw	high _motorR
 10044   005A46  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10045   005A48  EC22  F02E         	call	_turnRight45	;wreg free
 10046                           
 10047                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10048   005A4C  0EC7               	movlw	low _motorL
 10049   005A4E  6E1A               	movwf	turnRight45@mL^0,c
 10050   005A50  0E01               	movlw	high _motorL
 10051   005A52  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10052   005A54  0EBE               	movlw	low _motorR
 10053   005A56  6E1C               	movwf	turnRight45@mR^0,c
 10054   005A58  0E01               	movlw	high _motorR
 10055   005A5A  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10056   005A5C  EC22  F02E         	call	_turnRight45	;wreg free
 10057   005A60  0012               	return		;funcret
 10058   005A62                     __end_of_YellowMove:
 10059                           	callstack 0
 10060                           
 10061 ;; *************** function _turnRight45 *****************
 10062 ;; Defined at:
 10063 ;;		line 211 in file "dc_motor.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10066 ;;		 -> motorL(9), 
 10067 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10068 ;;		 -> motorR(9), 
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10083 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;Total ram usage:        6 bytes
 10085 ;; Hardware stack levels used: 1
 10086 ;; Hardware stack levels required when called: 3
 10087 ;; This function calls:
 10088 ;;		_TurnDelay
 10089 ;;		_stop
 10090 ;;		_turnRight
 10091 ;; This function is called by:
 10092 ;;		_RedMove
 10093 ;;		_BlueMove
 10094 ;;		_YellowMove
 10095 ;;		_OrangeMove
 10096 ;;		_ReverseYellow
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text53
 10101   005C44                     __ptext53:
 10102                           	callstack 0
 10103   005C44                     _turnRight45:
 10104                           	callstack 25
 10105   005C44                     
 10106                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10107   005C44  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10108   005C48  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10109   005C4C  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10110   005C50  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10111   005C54  EC79  F028         	call	_turnRight	;wreg free
 10112   005C58                     
 10113                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10114   005C58  C0F7  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10115   005C5C  C0F8  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10116   005C60  ECB4  F02F         	call	_TurnDelay	;wreg free
 10117   005C64                     
 10118                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10119   005C64  0EC7               	movlw	low _motorL
 10120   005C66  6E14               	movwf	stop@mL^0,c
 10121   005C68  0E01               	movlw	high _motorL
 10122   005C6A  6E15               	movwf	(stop@mL+1)^0,c
 10123   005C6C  0EBE               	movlw	low _motorR
 10124   005C6E  6E16               	movwf	stop@mR^0,c
 10125   005C70  0E01               	movlw	high _motorR
 10126   005C72  6E17               	movwf	(stop@mR+1)^0,c
 10127   005C74  EC3A  F02A         	call	_stop	;wreg free
 10128   005C78                     
 10129                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10130   005C78  0E05               	movlw	5
 10131   005C7A  6E1F               	movwf	(??_turnRight45+1)^0,c
 10132   005C7C  0E0F               	movlw	15
 10133   005C7E  6E1E               	movwf	??_turnRight45^0,c
 10134   005C80  0EF1               	movlw	241
 10135   005C82                     u6187:
 10136   005C82  2EE8               	decfsz	wreg,f,c
 10137   005C84  D7FE               	bra	u6187
 10138   005C86  2E1E               	decfsz	??_turnRight45^0,f,c
 10139   005C88  D7FC               	bra	u6187
 10140   005C8A  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10141   005C8C  D7FA               	bra	u6187
 10142   005C8E  F000               	nop	
 10143   005C90  0012               	return		;funcret
 10144   005C92                     __end_of_turnRight45:
 10145                           	callstack 0
 10146                           
 10147 ;; *************** function _turnRight *****************
 10148 ;; Defined at:
 10149 ;;		line 129 in file "dc_motor.c"
 10150 ;; Parameters:    Size  Location     Type
 10151 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10152 ;;		 -> motorL(9), 
 10153 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10154 ;;		 -> motorR(9), 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      void 
 10159 ;; Registers used:
 10160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10170 ;;Total ram usage:        6 bytes
 10171 ;; Hardware stack levels used: 1
 10172 ;; Hardware stack levels required when called: 2
 10173 ;; This function calls:
 10174 ;;		_setMotorPWM
 10175 ;; This function is called by:
 10176 ;;		_turnRight45
 10177 ;; This function uses a non-reentrant model
 10178 ;;
 10179                           
 10180                           	psect	text54
 10181   0050F2                     __ptext54:
 10182                           	callstack 0
 10183   0050F2                     _turnRight:
 10184                           	callstack 25
 10185   0050F2                     
 10186                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10187   0050F2  EE20 F001          	lfsr	2,1
 10188   0050F6  5014               	movf	turnRight@mL^0,w,c
 10189   0050F8  26D9               	addwf	fsr2l,f,c
 10190   0050FA  5015               	movf	(turnRight@mL+1)^0,w,c
 10191   0050FC  22DA               	addwfc	fsr2h,f,c
 10192   0050FE  0E01               	movlw	1
 10193   005100  6EDF               	movwf	indf2,c
 10194                           
 10195                           ;dc_motor.c: 132:     mR->direction =0;
 10196   005102  EE20 F001          	lfsr	2,1
 10197   005106  5016               	movf	turnRight@mR^0,w,c
 10198   005108  26D9               	addwf	fsr2l,f,c
 10199   00510A  5017               	movf	(turnRight@mR+1)^0,w,c
 10200   00510C  22DA               	addwfc	fsr2h,f,c
 10201   00510E  0E00               	movlw	0
 10202   005110  6EDF               	movwf	indf2,c
 10203                           
 10204                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10205   005112  EFAF  F028         	goto	l4746
 10206   005116                     l4738:
 10207                           
 10208                           ;dc_motor.c: 136:         mL->power+=10;
 10209   005116  C014  FFD9         	movff	turnRight@mL,fsr2l
 10210   00511A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10211   00511E  0E0A               	movlw	10
 10212   005120  26DF               	addwf	indf2,f,c
 10213                           
 10214                           ;dc_motor.c: 137:         mR->power+=10;
 10215   005122  C016  FFD9         	movff	turnRight@mR,fsr2l
 10216   005126  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10217   00512A  0E0A               	movlw	10
 10218   00512C  26DF               	addwf	indf2,f,c
 10219   00512E                     
 10220                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10221   00512E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10222   005132  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10223   005136  ECC8  F023         	call	_setMotorPWM	;wreg free
 10224   00513A                     
 10225                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10226   00513A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10227   00513E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10228   005142  ECC8  F023         	call	_setMotorPWM	;wreg free
 10229   005146                     
 10230                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10231   005146  0E02               	movlw	2
 10232   005148  6E19               	movwf	(??_turnRight+1)^0,c
 10233   00514A  0EA0               	movlw	160
 10234   00514C  6E18               	movwf	??_turnRight^0,c
 10235   00514E  0E92               	movlw	146
 10236   005150                     u6197:
 10237   005150  2EE8               	decfsz	wreg,f,c
 10238   005152  D7FE               	bra	u6197
 10239   005154  2E18               	decfsz	??_turnRight^0,f,c
 10240   005156  D7FC               	bra	u6197
 10241   005158  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10242   00515A  D7FA               	bra	u6197
 10243   00515C  D000               	nop2	
 10244   00515E                     l4746:
 10245   00515E  C014  FFD9         	movff	turnRight@mL,fsr2l
 10246   005162  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10247   005166  0E1E               	movlw	30
 10248   005168  60DF               	cpfslt	indf2,c
 10249   00516A  EFB9  F028         	goto	u4531
 10250   00516E  EFBB  F028         	goto	u4530
 10251   005172                     u4531:
 10252   005172  EFC7  F028         	goto	l515
 10253   005176                     u4530:
 10254   005176  C016  FFD9         	movff	turnRight@mR,fsr2l
 10255   00517A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10256   00517E  0E1D               	movlw	29
 10257   005180  64DF               	cpfsgt	indf2,c
 10258   005182  EFC5  F028         	goto	u4541
 10259   005186  EFC7  F028         	goto	u4540
 10260   00518A                     u4541:
 10261   00518A  EF8B  F028         	goto	l4738
 10262   00518E                     u4540:
 10263   00518E                     l515:
 10264   00518E  0012               	return		;funcret
 10265   005190                     __end_of_turnRight:
 10266                           	callstack 0
 10267                           
 10268 ;; *************** function _Timer0_init *****************
 10269 ;; Defined at:
 10270 ;;		line 8 in file "timers.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, status,2
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;Total ram usage:        0 bytes
 10289 ;; Hardware stack levels used: 1
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_main
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           	psect	text55
 10298   00608C                     __ptext55:
 10299                           	callstack 0
 10300   00608C                     _Timer0_init:
 10301                           	callstack 30
 10302   00608C                     
 10303                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10304   00608C  50D6               	movf	214,w,c	;volatile
 10305   00608E  0B1F               	andlw	-225
 10306   006090  0940               	iorlw	64
 10307   006092  6ED6               	movwf	214,c	;volatile
 10308   006094                     
 10309                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10310   006094  88D6               	bsf	214,4,c	;volatile
 10311                           
 10312                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10313   006096  50D6               	movf	214,w,c	;volatile
 10314   006098  0BF0               	andlw	-16
 10315   00609A  090E               	iorlw	14
 10316   00609C  6ED6               	movwf	214,c	;volatile
 10317   00609E                     
 10318                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10319   00609E  88D5               	bsf	213,4,c	;volatile
 10320                           
 10321                           ;timers.c: 16:     TMR0H=0;
 10322   0060A0  0E00               	movlw	0
 10323   0060A2  6ED4               	movwf	212,c	;volatile
 10324                           
 10325                           ;timers.c: 17:     TMR0L=0;
 10326   0060A4  0E00               	movlw	0
 10327   0060A6  6ED3               	movwf	211,c	;volatile
 10328   0060A8                     
 10329                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10330   0060A8  9ED5               	bcf	213,7,c	;volatile
 10331   0060AA  0012               	return		;funcret
 10332   0060AC                     __end_of_Timer0_init:
 10333                           	callstack 0
 10334                           
 10335 ;; *************** function _RetryMove *****************
 10336 ;; Defined at:
 10337 ;;		line 325 in file "dc_motor.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10340 ;;		 -> motorL(9), 
 10341 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10342 ;;		 -> motorR(9), 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;		None
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10358 ;;Total ram usage:        6 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 3
 10361 ;; This function calls:
 10362 ;;		_fullSpeedAhead
 10363 ;;		_fullSpeedBack
 10364 ;;		_stop
 10365 ;; This function is called by:
 10366 ;;		_main
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text56
 10371   0053F2                     __ptext56:
 10372                           	callstack 0
 10373   0053F2                     _RetryMove:
 10374                           	callstack 27
 10375   0053F2                     
 10376                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 10377   0053F2  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
 10378   0053F6  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 10379   0053FA  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
 10380   0053FE  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 10381   005402  EC17  F029         	call	_fullSpeedBack	;wreg free
 10382   005406                     
 10383                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10384   005406  0E29               	movlw	41
 10385   005408  6E1F               	movwf	(??_RetryMove+1)^0,c
 10386   00540A  0E96               	movlw	150
 10387   00540C  6E1E               	movwf	??_RetryMove^0,c
 10388   00540E  0E7F               	movlw	127
 10389   005410                     u6207:
 10390   005410  2EE8               	decfsz	wreg,f,c
 10391   005412  D7FE               	bra	u6207
 10392   005414  2E1E               	decfsz	??_RetryMove^0,f,c
 10393   005416  D7FC               	bra	u6207
 10394   005418  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10395   00541A  D7FA               	bra	u6207
 10396   00541C  F000               	nop	
 10397   00541E                     
 10398                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10399   00541E  0EC7               	movlw	low _motorL
 10400   005420  6E14               	movwf	stop@mL^0,c
 10401   005422  0E01               	movlw	high _motorL
 10402   005424  6E15               	movwf	(stop@mL+1)^0,c
 10403   005426  0EBE               	movlw	low _motorR
 10404   005428  6E16               	movwf	stop@mR^0,c
 10405   00542A  0E01               	movlw	high _motorR
 10406   00542C  6E17               	movwf	(stop@mR+1)^0,c
 10407   00542E  EC3A  F02A         	call	_stop	;wreg free
 10408   005432                     
 10409                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10410   005432  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10411   005436  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10412   00543A  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10413   00543E  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10414   005442  EC66  F029         	call	_fullSpeedAhead	;wreg free
 10415   005446                     
 10416                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10417   005446  0E29               	movlw	41
 10418   005448  6E1F               	movwf	(??_RetryMove+1)^0,c
 10419   00544A  0E96               	movlw	150
 10420   00544C  6E1E               	movwf	??_RetryMove^0,c
 10421   00544E  0E7F               	movlw	127
 10422   005450                     u6217:
 10423   005450  2EE8               	decfsz	wreg,f,c
 10424   005452  D7FE               	bra	u6217
 10425   005454  2E1E               	decfsz	??_RetryMove^0,f,c
 10426   005456  D7FC               	bra	u6217
 10427   005458  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10428   00545A  D7FA               	bra	u6217
 10429   00545C  F000               	nop	
 10430                           
 10431                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10432   00545E  0EC7               	movlw	low _motorL
 10433   005460  6E14               	movwf	stop@mL^0,c
 10434   005462  0E01               	movlw	high _motorL
 10435   005464  6E15               	movwf	(stop@mL+1)^0,c
 10436   005466  0EBE               	movlw	low _motorR
 10437   005468  6E16               	movwf	stop@mR^0,c
 10438   00546A  0E01               	movlw	high _motorR
 10439   00546C  6E17               	movwf	(stop@mR+1)^0,c
 10440   00546E  EC3A  F02A         	call	_stop	;wreg free
 10441   005472  0012               	return		;funcret
 10442   005474                     __end_of_RetryMove:
 10443                           	callstack 0
 10444                           
 10445 ;; *************** function _PinkMove *****************
 10446 ;; Defined at:
 10447 ;;		line 298 in file "dc_motor.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10450 ;;		 -> motorL(9), 
 10451 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10452 ;;		 -> motorR(9), 
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;Total ram usage:        4 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; Hardware stack levels required when called: 4
 10471 ;; This function calls:
 10472 ;;		_reverseDetect
 10473 ;;		_reverseOneBlock
 10474 ;;		_turnLeft45
 10475 ;; This function is called by:
 10476 ;;		_main
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text57
 10481   005A62                     __ptext57:
 10482                           	callstack 0
 10483   005A62                     _PinkMove:
 10484                           	callstack 26
 10485   005A62                     
 10486                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10487   005A62  0EC7               	movlw	low _motorL
 10488   005A64  6E1A               	movwf	reverseDetect@mL^0,c
 10489   005A66  0E01               	movlw	high _motorL
 10490   005A68  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10491   005A6A  0EBE               	movlw	low _motorR
 10492   005A6C  6E1C               	movwf	reverseDetect@mR^0,c
 10493   005A6E  0E01               	movlw	high _motorR
 10494   005A70  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10495   005A72  ECDF  F02B         	call	_reverseDetect	;wreg free
 10496                           
 10497                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10498   005A76  0EC7               	movlw	low _motorL
 10499   005A78  6E1A               	movwf	reverseOneBlock@mL^0,c
 10500   005A7A  0E01               	movlw	high _motorL
 10501   005A7C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10502   005A7E  0EBE               	movlw	low _motorR
 10503   005A80  6E1C               	movwf	reverseOneBlock@mR^0,c
 10504   005A82  0E01               	movlw	high _motorR
 10505   005A84  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10506   005A86  ECB2  F02B         	call	_reverseOneBlock	;wreg free
 10507                           
 10508                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10509   005A8A  0EC7               	movlw	low _motorL
 10510   005A8C  6E1A               	movwf	turnLeft45@mL^0,c
 10511   005A8E  0E01               	movlw	high _motorL
 10512   005A90  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10513   005A92  0EBE               	movlw	low _motorR
 10514   005A94  6E1C               	movwf	turnLeft45@mR^0,c
 10515   005A96  0E01               	movlw	high _motorR
 10516   005A98  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10517   005A9A  EC49  F02E         	call	_turnLeft45	;wreg free
 10518                           
 10519                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10520   005A9E  0EC7               	movlw	low _motorL
 10521   005AA0  6E1A               	movwf	turnLeft45@mL^0,c
 10522   005AA2  0E01               	movlw	high _motorL
 10523   005AA4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10524   005AA6  0EBE               	movlw	low _motorR
 10525   005AA8  6E1C               	movwf	turnLeft45@mR^0,c
 10526   005AAA  0E01               	movlw	high _motorR
 10527   005AAC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10528   005AAE  EC49  F02E         	call	_turnLeft45	;wreg free
 10529   005AB2  0012               	return		;funcret
 10530   005AB4                     __end_of_PinkMove:
 10531                           	callstack 0
 10532                           
 10533 ;; *************** function _turnLeft45 *****************
 10534 ;; Defined at:
 10535 ;;		line 218 in file "dc_motor.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10538 ;;		 -> motorL(9), 
 10539 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10540 ;;		 -> motorR(9), 
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;Total ram usage:        6 bytes
 10557 ;; Hardware stack levels used: 1
 10558 ;; Hardware stack levels required when called: 3
 10559 ;; This function calls:
 10560 ;;		_TurnDelay
 10561 ;;		_stop
 10562 ;;		_turnLeft
 10563 ;; This function is called by:
 10564 ;;		_GreenMove
 10565 ;;		_PinkMove
 10566 ;;		_LightBlueMove
 10567 ;;		_ReversePink
 10568 ;;		_turnCalibration
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           	psect	text58
 10573   005C92                     __ptext58:
 10574                           	callstack 0
 10575   005C92                     _turnLeft45:
 10576                           	callstack 26
 10577   005C92                     
 10578                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10579   005C92  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10580   005C96  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10581   005C9A  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10582   005C9E  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10583   005CA2  ECC8  F028         	call	_turnLeft	;wreg free
 10584   005CA6                     
 10585                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10586   005CA6  C0F7  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10587   005CAA  C0F8  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10588   005CAE  ECB4  F02F         	call	_TurnDelay	;wreg free
 10589   005CB2                     
 10590                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10591   005CB2  0EC7               	movlw	low _motorL
 10592   005CB4  6E14               	movwf	stop@mL^0,c
 10593   005CB6  0E01               	movlw	high _motorL
 10594   005CB8  6E15               	movwf	(stop@mL+1)^0,c
 10595   005CBA  0EBE               	movlw	low _motorR
 10596   005CBC  6E16               	movwf	stop@mR^0,c
 10597   005CBE  0E01               	movlw	high _motorR
 10598   005CC0  6E17               	movwf	(stop@mR+1)^0,c
 10599   005CC2  EC3A  F02A         	call	_stop	;wreg free
 10600   005CC6                     
 10601                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10602   005CC6  0E05               	movlw	5
 10603   005CC8  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10604   005CCA  0E0F               	movlw	15
 10605   005CCC  6E1E               	movwf	??_turnLeft45^0,c
 10606   005CCE  0EF1               	movlw	241
 10607   005CD0                     u6227:
 10608   005CD0  2EE8               	decfsz	wreg,f,c
 10609   005CD2  D7FE               	bra	u6227
 10610   005CD4  2E1E               	decfsz	??_turnLeft45^0,f,c
 10611   005CD6  D7FC               	bra	u6227
 10612   005CD8  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10613   005CDA  D7FA               	bra	u6227
 10614   005CDC  F000               	nop	
 10615   005CDE  0012               	return		;funcret
 10616   005CE0                     __end_of_turnLeft45:
 10617                           	callstack 0
 10618                           
 10619 ;; *************** function _turnLeft *****************
 10620 ;; Defined at:
 10621 ;;		line 111 in file "dc_motor.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10624 ;;		 -> motorL(9), 
 10625 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10626 ;;		 -> motorR(9), 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10642 ;;Total ram usage:        6 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 2
 10645 ;; This function calls:
 10646 ;;		_setMotorPWM
 10647 ;; This function is called by:
 10648 ;;		_turnLeft45
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text59
 10653   005190                     __ptext59:
 10654                           	callstack 0
 10655   005190                     _turnLeft:
 10656                           	callstack 26
 10657   005190                     
 10658                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10659   005190  EE20 F001          	lfsr	2,1
 10660   005194  5014               	movf	turnLeft@mL^0,w,c
 10661   005196  26D9               	addwf	fsr2l,f,c
 10662   005198  5015               	movf	(turnLeft@mL+1)^0,w,c
 10663   00519A  22DA               	addwfc	fsr2h,f,c
 10664   00519C  0E00               	movlw	0
 10665   00519E  6EDF               	movwf	indf2,c
 10666                           
 10667                           ;dc_motor.c: 114:     mR->direction =1;
 10668   0051A0  EE20 F001          	lfsr	2,1
 10669   0051A4  5016               	movf	turnLeft@mR^0,w,c
 10670   0051A6  26D9               	addwf	fsr2l,f,c
 10671   0051A8  5017               	movf	(turnLeft@mR+1)^0,w,c
 10672   0051AA  22DA               	addwfc	fsr2h,f,c
 10673   0051AC  0E01               	movlw	1
 10674   0051AE  6EDF               	movwf	indf2,c
 10675                           
 10676                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10677   0051B0  EFFE  F028         	goto	l4732
 10678   0051B4                     l4724:
 10679                           
 10680                           ;dc_motor.c: 118:         mL->power+=10;
 10681   0051B4  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10682   0051B8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10683   0051BC  0E0A               	movlw	10
 10684   0051BE  26DF               	addwf	indf2,f,c
 10685                           
 10686                           ;dc_motor.c: 119:         mR->power+=10;
 10687   0051C0  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10688   0051C4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10689   0051C8  0E0A               	movlw	10
 10690   0051CA  26DF               	addwf	indf2,f,c
 10691   0051CC                     
 10692                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10693   0051CC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10694   0051D0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10695   0051D4  ECC8  F023         	call	_setMotorPWM	;wreg free
 10696   0051D8                     
 10697                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10698   0051D8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10699   0051DC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10700   0051E0  ECC8  F023         	call	_setMotorPWM	;wreg free
 10701   0051E4                     
 10702                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10703   0051E4  0E02               	movlw	2
 10704   0051E6  6E19               	movwf	(??_turnLeft+1)^0,c
 10705   0051E8  0EA0               	movlw	160
 10706   0051EA  6E18               	movwf	??_turnLeft^0,c
 10707   0051EC  0E92               	movlw	146
 10708   0051EE                     u6237:
 10709   0051EE  2EE8               	decfsz	wreg,f,c
 10710   0051F0  D7FE               	bra	u6237
 10711   0051F2  2E18               	decfsz	??_turnLeft^0,f,c
 10712   0051F4  D7FC               	bra	u6237
 10713   0051F6  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10714   0051F8  D7FA               	bra	u6237
 10715   0051FA  D000               	nop2	
 10716   0051FC                     l4732:
 10717   0051FC  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10718   005200  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10719   005204  0E1E               	movlw	30
 10720   005206  60DF               	cpfslt	indf2,c
 10721   005208  EF08  F029         	goto	u4511
 10722   00520C  EF0A  F029         	goto	u4510
 10723   005210                     u4511:
 10724   005210  EF16  F029         	goto	l507
 10725   005214                     u4510:
 10726   005214  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10727   005218  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10728   00521C  0E1D               	movlw	29
 10729   00521E  64DF               	cpfsgt	indf2,c
 10730   005220  EF14  F029         	goto	u4521
 10731   005224  EF16  F029         	goto	u4520
 10732   005228                     u4521:
 10733   005228  EFDA  F028         	goto	l4724
 10734   00522C                     u4520:
 10735   00522C                     l507:
 10736   00522C  0012               	return		;funcret
 10737   00522E                     __end_of_turnLeft:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _TurnDelay *****************
 10741 ;; Defined at:
 10742 ;;		line 204 in file "dc_motor.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  Turn45Delay     2    0[COMRAM] int 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;Total ram usage:        3 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; This function calls:
 10763 ;;		Nothing
 10764 ;; This function is called by:
 10765 ;;		_turnRight45
 10766 ;;		_turnLeft45
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text60
 10771   005F68                     __ptext60:
 10772                           	callstack 0
 10773   005F68                     _TurnDelay:
 10774                           	callstack 28
 10775   005F68                     
 10776                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10777   005F68  EFC1  F02F         	goto	l542
 10778   005F6C                     l4766:
 10779                           
 10780                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10781   005F6C  0E15               	movlw	21
 10782   005F6E  6E03               	movwf	??_TurnDelay^0,c
 10783   005F70  0EC6               	movlw	198
 10784   005F72                     u6247:
 10785   005F72  2EE8               	decfsz	wreg,f,c
 10786   005F74  D7FE               	bra	u6247
 10787   005F76  2E03               	decfsz	??_TurnDelay^0,f,c
 10788   005F78  D7FC               	bra	u6247
 10789   005F7A  D000               	nop2	
 10790   005F7C                     
 10791                           ;dc_motor.c: 207:         Turn45Delay--;
 10792   005F7C  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10793   005F7E  A0D8               	btfss	status,0,c
 10794   005F80  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10795   005F82                     l542:
 10796                           
 10797                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10798   005F82  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10799   005F84  EFCE  F02F         	goto	u4570
 10800   005F88  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10801   005F8A  E106               	bnz	u4571
 10802   005F8C  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10803   005F8E  B0D8               	btfsc	status,0,c
 10804   005F90  EFCC  F02F         	goto	u4571
 10805   005F94  EFCE  F02F         	goto	u4570
 10806   005F98                     u4571:
 10807   005F98  EFB6  F02F         	goto	l4766
 10808   005F9C                     u4570:
 10809   005F9C  0012               	return		;funcret
 10810   005F9E                     __end_of_TurnDelay:
 10811                           	callstack 0
 10812                           
 10813 ;; *************** function _reverseOneBlock *****************
 10814 ;; Defined at:
 10815 ;;		line 232 in file "dc_motor.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10818 ;;		 -> motorL(9), 
 10819 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10820 ;;		 -> motorR(9), 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10832 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;Total ram usage:        6 bytes
 10837 ;; Hardware stack levels used: 1
 10838 ;; Hardware stack levels required when called: 3
 10839 ;; This function calls:
 10840 ;;		_fullSpeedBack
 10841 ;;		_stop
 10842 ;; This function is called by:
 10843 ;;		_YellowMove
 10844 ;;		_PinkMove
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text61
 10849   005764                     __ptext61:
 10850                           	callstack 0
 10851   005764                     _reverseOneBlock:
 10852                           	callstack 26
 10853   005764                     
 10854                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10855   005764  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10856   005768  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10857   00576C  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10858   005770  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10859   005774  EC17  F029         	call	_fullSpeedBack	;wreg free
 10860   005778                     
 10861                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10862   005778  0EA3               	movlw	163
 10863   00577A  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10864   00577C  0E57               	movlw	87
 10865   00577E  6E1E               	movwf	??_reverseOneBlock^0,c
 10866   005780  0E02               	movlw	2
 10867   005782                     u6257:
 10868   005782  2EE8               	decfsz	wreg,f,c
 10869   005784  D7FE               	bra	u6257
 10870   005786  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10871   005788  D7FC               	bra	u6257
 10872   00578A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10873   00578C  D7FA               	bra	u6257
 10874   00578E  D000               	nop2	
 10875   005790                     
 10876                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10877   005790  0EC7               	movlw	low _motorL
 10878   005792  6E14               	movwf	stop@mL^0,c
 10879   005794  0E01               	movlw	high _motorL
 10880   005796  6E15               	movwf	(stop@mL+1)^0,c
 10881   005798  0EBE               	movlw	low _motorR
 10882   00579A  6E16               	movwf	stop@mR^0,c
 10883   00579C  0E01               	movlw	high _motorR
 10884   00579E  6E17               	movwf	(stop@mR+1)^0,c
 10885   0057A0  EC3A  F02A         	call	_stop	;wreg free
 10886                           
 10887                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10888   0057A4  0E05               	movlw	5
 10889   0057A6  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10890   0057A8  0E0F               	movlw	15
 10891   0057AA  6E1E               	movwf	??_reverseOneBlock^0,c
 10892   0057AC  0EF1               	movlw	241
 10893   0057AE                     u6267:
 10894   0057AE  2EE8               	decfsz	wreg,f,c
 10895   0057B0  D7FE               	bra	u6267
 10896   0057B2  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10897   0057B4  D7FC               	bra	u6267
 10898   0057B6  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10899   0057B8  D7FA               	bra	u6267
 10900   0057BA  F000               	nop	
 10901   0057BC  0012               	return		;funcret
 10902   0057BE                     __end_of_reverseOneBlock:
 10903                           	callstack 0
 10904                           
 10905 ;; *************** function _reverseDetect *****************
 10906 ;; Defined at:
 10907 ;;		line 225 in file "dc_motor.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10910 ;;		 -> motorL(9), 
 10911 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10912 ;;		 -> motorR(9), 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10928 ;;Total ram usage:        6 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; Hardware stack levels required when called: 3
 10931 ;; This function calls:
 10932 ;;		_fullSpeedBack
 10933 ;;		_stop
 10934 ;; This function is called by:
 10935 ;;		_RedMove
 10936 ;;		_GreenMove
 10937 ;;		_BlueMove
 10938 ;;		_YellowMove
 10939 ;;		_PinkMove
 10940 ;;		_OrangeMove
 10941 ;;		_LightBlueMove
 10942 ;;		_ReverseYellow
 10943 ;;		_ReversePink
 10944 ;;		_go_Home
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text62
 10949   0057BE                     __ptext62:
 10950                           	callstack 0
 10951   0057BE                     _reverseDetect:
 10952                           	callstack 26
 10953   0057BE                     
 10954                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10955   0057BE  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10956   0057C2  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10957   0057C6  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10958   0057CA  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10959   0057CE  EC17  F029         	call	_fullSpeedBack	;wreg free
 10960   0057D2                     
 10961                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10962   0057D2  0E11               	movlw	17
 10963   0057D4  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10964   0057D6  0E3C               	movlw	60
 10965   0057D8  6E1E               	movwf	??_reverseDetect^0,c
 10966   0057DA  0ECB               	movlw	203
 10967   0057DC                     u6277:
 10968   0057DC  2EE8               	decfsz	wreg,f,c
 10969   0057DE  D7FE               	bra	u6277
 10970   0057E0  2E1E               	decfsz	??_reverseDetect^0,f,c
 10971   0057E2  D7FC               	bra	u6277
 10972   0057E4  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10973   0057E6  D7FA               	bra	u6277
 10974   0057E8  F000               	nop	
 10975   0057EA                     
 10976                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 10977   0057EA  0EC7               	movlw	low _motorL
 10978   0057EC  6E14               	movwf	stop@mL^0,c
 10979   0057EE  0E01               	movlw	high _motorL
 10980   0057F0  6E15               	movwf	(stop@mL+1)^0,c
 10981   0057F2  0EBE               	movlw	low _motorR
 10982   0057F4  6E16               	movwf	stop@mR^0,c
 10983   0057F6  0E01               	movlw	high _motorR
 10984   0057F8  6E17               	movwf	(stop@mR+1)^0,c
 10985   0057FA  EC3A  F02A         	call	_stop	;wreg free
 10986                           
 10987                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10988   0057FE  0E05               	movlw	5
 10989   005800  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10990   005802  0E0F               	movlw	15
 10991   005804  6E1E               	movwf	??_reverseDetect^0,c
 10992   005806  0EF1               	movlw	241
 10993   005808                     u6287:
 10994   005808  2EE8               	decfsz	wreg,f,c
 10995   00580A  D7FE               	bra	u6287
 10996   00580C  2E1E               	decfsz	??_reverseDetect^0,f,c
 10997   00580E  D7FC               	bra	u6287
 10998   005810  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10999   005812  D7FA               	bra	u6287
 11000   005814  F000               	nop	
 11001   005816  0012               	return		;funcret
 11002   005818                     __end_of_reverseDetect:
 11003                           	callstack 0
 11004                           
 11005 ;; *************** function _fullSpeedBack *****************
 11006 ;; Defined at:
 11007 ;;		line 185 in file "dc_motor.c"
 11008 ;; Parameters:    Size  Location     Type
 11009 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11010 ;;		 -> motorL(9), 
 11011 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11012 ;;		 -> motorR(9), 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;Total ram usage:        6 bytes
 11029 ;; Hardware stack levels used: 1
 11030 ;; Hardware stack levels required when called: 2
 11031 ;; This function calls:
 11032 ;;		_setMotorPWM
 11033 ;; This function is called by:
 11034 ;;		_reverseDetect
 11035 ;;		_reverseOneBlock
 11036 ;;		_RetryMove
 11037 ;;		_Backhalfblock
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text63
 11042   00522E                     __ptext63:
 11043                           	callstack 0
 11044   00522E                     _fullSpeedBack:
 11045                           	callstack 26
 11046   00522E                     
 11047                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11048   00522E  EE20 F001          	lfsr	2,1
 11049   005232  5014               	movf	fullSpeedBack@mL^0,w,c
 11050   005234  26D9               	addwf	fsr2l,f,c
 11051   005236  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11052   005238  22DA               	addwfc	fsr2h,f,c
 11053   00523A  0E00               	movlw	0
 11054   00523C  6EDF               	movwf	indf2,c
 11055                           
 11056                           ;dc_motor.c: 189:     mR->direction =0;
 11057   00523E  EE20 F001          	lfsr	2,1
 11058   005242  5016               	movf	fullSpeedBack@mR^0,w,c
 11059   005244  26D9               	addwf	fsr2l,f,c
 11060   005246  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11061   005248  22DA               	addwfc	fsr2h,f,c
 11062   00524A  0E00               	movlw	0
 11063   00524C  6EDF               	movwf	indf2,c
 11064                           
 11065                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11066   00524E  EF4D  F029         	goto	l4760
 11067   005252                     l4752:
 11068                           
 11069                           ;dc_motor.c: 192:         mL->power+=10;
 11070   005252  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11071   005256  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11072   00525A  0E0A               	movlw	10
 11073   00525C  26DF               	addwf	indf2,f,c
 11074                           
 11075                           ;dc_motor.c: 193:         mR->power+=10;
 11076   00525E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11077   005262  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11078   005266  0E0A               	movlw	10
 11079   005268  26DF               	addwf	indf2,f,c
 11080   00526A                     
 11081                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11082   00526A  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11083   00526E  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11084   005272  ECC8  F023         	call	_setMotorPWM	;wreg free
 11085   005276                     
 11086                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11087   005276  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11088   00527A  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11089   00527E  ECC8  F023         	call	_setMotorPWM	;wreg free
 11090   005282                     
 11091                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11092   005282  0E02               	movlw	2
 11093   005284  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11094   005286  0EA0               	movlw	160
 11095   005288  6E18               	movwf	??_fullSpeedBack^0,c
 11096   00528A  0E92               	movlw	146
 11097   00528C                     u6297:
 11098   00528C  2EE8               	decfsz	wreg,f,c
 11099   00528E  D7FE               	bra	u6297
 11100   005290  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11101   005292  D7FC               	bra	u6297
 11102   005294  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11103   005296  D7FA               	bra	u6297
 11104   005298  D000               	nop2	
 11105   00529A                     l4760:
 11106   00529A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11107   00529E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11108   0052A2  0E1E               	movlw	30
 11109   0052A4  60DF               	cpfslt	indf2,c
 11110   0052A6  EF57  F029         	goto	u4551
 11111   0052AA  EF59  F029         	goto	u4550
 11112   0052AE                     u4551:
 11113   0052AE  EF65  F029         	goto	l539
 11114   0052B2                     u4550:
 11115   0052B2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11116   0052B6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11117   0052BA  0E1D               	movlw	29
 11118   0052BC  64DF               	cpfsgt	indf2,c
 11119   0052BE  EF63  F029         	goto	u4561
 11120   0052C2  EF65  F029         	goto	u4560
 11121   0052C6                     u4561:
 11122   0052C6  EF29  F029         	goto	l4752
 11123   0052CA                     u4560:
 11124   0052CA                     l539:
 11125   0052CA  0012               	return		;funcret
 11126   0052CC                     __end_of_fullSpeedBack:
 11127                           	callstack 0
 11128                           
 11129 ;; *************** function _Interrupts_init *****************
 11130 ;; Defined at:
 11131 ;;		line 9 in file "interrupts.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		None
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;Total ram usage:        0 bytes
 11150 ;; Hardware stack levels used: 1
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		_main
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158                           	psect	text64
 11159   006116                     __ptext64:
 11160                           	callstack 0
 11161   006116                     _Interrupts_init:
 11162                           	callstack 30
 11163   006116  0012               	return		;funcret
 11164   006118                     __end_of_Interrupts_init:
 11165                           	callstack 0
 11166                           
 11167 ;; *************** function _Forwardhalfblock *****************
 11168 ;; Defined at:
 11169 ;;		line 245 in file "dc_motor.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11172 ;;		 -> motorL(9), 
 11173 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11174 ;;		 -> motorR(9), 
 11175 ;; Auto vars:     Size  Location     Type
 11176 ;;		None
 11177 ;; Return value:  Size  Location     Type
 11178 ;;                  1    wreg      void 
 11179 ;; Registers used:
 11180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11181 ;; Tracked objects:
 11182 ;;		On entry : 0/0
 11183 ;;		On exit  : 0/0
 11184 ;;		Unchanged: 0/0
 11185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11190 ;;Total ram usage:        6 bytes
 11191 ;; Hardware stack levels used: 1
 11192 ;; Hardware stack levels required when called: 3
 11193 ;; This function calls:
 11194 ;;		_fullSpeedAhead
 11195 ;;		_stop
 11196 ;; This function is called by:
 11197 ;;		_main
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           	psect	text65
 11202   005818                     __ptext65:
 11203                           	callstack 0
 11204   005818                     _Forwardhalfblock:
 11205                           	callstack 27
 11206   005818                     
 11207                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11208   005818  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11209   00581C  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11210   005820  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11211   005824  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11212   005828  EC66  F029         	call	_fullSpeedAhead	;wreg free
 11213   00582C                     
 11214                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11215   00582C  0E52               	movlw	82
 11216   00582E  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11217   005830  0E2B               	movlw	43
 11218   005832  6E1E               	movwf	??_Forwardhalfblock^0,c
 11219   005834  0E00               	movlw	0
 11220   005836                     u6307:
 11221   005836  2EE8               	decfsz	wreg,f,c
 11222   005838  D7FE               	bra	u6307
 11223   00583A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11224   00583C  D7FC               	bra	u6307
 11225   00583E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11226   005840  D7FA               	bra	u6307
 11227   005842  D000               	nop2	
 11228   005844                     
 11229                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11230   005844  0EC7               	movlw	low _motorL
 11231   005846  6E14               	movwf	stop@mL^0,c
 11232   005848  0E01               	movlw	high _motorL
 11233   00584A  6E15               	movwf	(stop@mL+1)^0,c
 11234   00584C  0EBE               	movlw	low _motorR
 11235   00584E  6E16               	movwf	stop@mR^0,c
 11236   005850  0E01               	movlw	high _motorR
 11237   005852  6E17               	movwf	(stop@mR+1)^0,c
 11238   005854  EC3A  F02A         	call	_stop	;wreg free
 11239                           
 11240                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11241   005858  0E05               	movlw	5
 11242   00585A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11243   00585C  0E0F               	movlw	15
 11244   00585E  6E1E               	movwf	??_Forwardhalfblock^0,c
 11245   005860  0EF1               	movlw	241
 11246   005862                     u6317:
 11247   005862  2EE8               	decfsz	wreg,f,c
 11248   005864  D7FE               	bra	u6317
 11249   005866  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11250   005868  D7FC               	bra	u6317
 11251   00586A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11252   00586C  D7FA               	bra	u6317
 11253   00586E  F000               	nop	
 11254   005870  0012               	return		;funcret
 11255   005872                     __end_of_Forwardhalfblock:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _stop *****************
 11259 ;; Defined at:
 11260 ;;		line 93 in file "dc_motor.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11263 ;;		 -> motorL(9), 
 11264 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11265 ;;		 -> motorR(9), 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;		None
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11281 ;;Total ram usage:        6 bytes
 11282 ;; Hardware stack levels used: 1
 11283 ;; Hardware stack levels required when called: 2
 11284 ;; This function calls:
 11285 ;;		_setMotorPWM
 11286 ;; This function is called by:
 11287 ;;		_main
 11288 ;;		_turnRight45
 11289 ;;		_turnLeft45
 11290 ;;		_reverseDetect
 11291 ;;		_reverseOneBlock
 11292 ;;		_ForwardOneBlock
 11293 ;;		_Forwardhalfblock
 11294 ;;		_RetryMove
 11295 ;;		_go_Home
 11296 ;;		_Backhalfblock
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text66
 11301   005474                     __ptext66:
 11302                           	callstack 0
 11303   005474                     _stop:
 11304                           	callstack 26
 11305   005474                     
 11306                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11307   005474  EF60  F02A         	goto	l4718
 11308   005478                     l4710:
 11309                           
 11310                           ;dc_motor.c: 97:         mL->power-=10;
 11311   005478  C014  FFD9         	movff	stop@mL,fsr2l
 11312   00547C  C015  FFDA         	movff	stop@mL+1,fsr2h
 11313   005480  0E0A               	movlw	10
 11314   005482  5EDF               	subwf	indf2,f,c
 11315                           
 11316                           ;dc_motor.c: 98:         mR->power-=10;
 11317   005484  C016  FFD9         	movff	stop@mR,fsr2l
 11318   005488  C017  FFDA         	movff	stop@mR+1,fsr2h
 11319   00548C  0E0A               	movlw	10
 11320   00548E  5EDF               	subwf	indf2,f,c
 11321   005490                     
 11322                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11323   005490  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11324   005494  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11325   005498  ECC8  F023         	call	_setMotorPWM	;wreg free
 11326   00549C                     
 11327                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11328   00549C  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11329   0054A0  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11330   0054A4  ECC8  F023         	call	_setMotorPWM	;wreg free
 11331   0054A8                     
 11332                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11333   0054A8  0E02               	movlw	2
 11334   0054AA  6E19               	movwf	(??_stop+1)^0,c
 11335   0054AC  0EA0               	movlw	160
 11336   0054AE  6E18               	movwf	??_stop^0,c
 11337   0054B0  0E92               	movlw	146
 11338   0054B2                     u6327:
 11339   0054B2  2EE8               	decfsz	wreg,f,c
 11340   0054B4  D7FE               	bra	u6327
 11341   0054B6  2E18               	decfsz	??_stop^0,f,c
 11342   0054B8  D7FC               	bra	u6327
 11343   0054BA  2E19               	decfsz	(??_stop+1)^0,f,c
 11344   0054BC  D7FA               	bra	u6327
 11345   0054BE  D000               	nop2	
 11346   0054C0                     l4718:
 11347                           
 11348                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11349   0054C0  C014  FFD9         	movff	stop@mL,fsr2l
 11350   0054C4  C015  FFDA         	movff	stop@mL+1,fsr2h
 11351   0054C8  50DF               	movf	indf2,w,c
 11352   0054CA  A4D8               	btfss	status,2,c
 11353   0054CC  EF6A  F02A         	goto	u4491
 11354   0054D0  EF6C  F02A         	goto	u4490
 11355   0054D4                     u4491:
 11356   0054D4  EF3C  F02A         	goto	l4710
 11357   0054D8                     u4490:
 11358   0054D8  C016  FFD9         	movff	stop@mR,fsr2l
 11359   0054DC  C017  FFDA         	movff	stop@mR+1,fsr2h
 11360   0054E0  50DF               	movf	indf2,w,c
 11361   0054E2  A4D8               	btfss	status,2,c
 11362   0054E4  EF76  F02A         	goto	u4501
 11363   0054E8  EF78  F02A         	goto	u4500
 11364   0054EC                     u4501:
 11365   0054EC  EF3C  F02A         	goto	l4710
 11366   0054F0                     u4500:
 11367   0054F0  0012               	return		;funcret
 11368   0054F2                     __end_of_stop:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function _fullSpeedAhead *****************
 11372 ;; Defined at:
 11373 ;;		line 147 in file "dc_motor.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11376 ;;		 -> motorL(9), 
 11377 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11378 ;;		 -> motorR(9), 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;		None
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11394 ;;Total ram usage:        6 bytes
 11395 ;; Hardware stack levels used: 1
 11396 ;; Hardware stack levels required when called: 2
 11397 ;; This function calls:
 11398 ;;		_setMotorPWM
 11399 ;; This function is called by:
 11400 ;;		_main
 11401 ;;		_ForwardOneBlock
 11402 ;;		_Forwardhalfblock
 11403 ;;		_RetryMove
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text67
 11408   0052CC                     __ptext67:
 11409                           	callstack 0
 11410   0052CC                     _fullSpeedAhead:
 11411                           	callstack 25
 11412   0052CC                     
 11413                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11414   0052CC  EE20 F001          	lfsr	2,1
 11415   0052D0  5014               	movf	fullSpeedAhead@mL^0,w,c
 11416   0052D2  26D9               	addwf	fsr2l,f,c
 11417   0052D4  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11418   0052D6  22DA               	addwfc	fsr2h,f,c
 11419   0052D8  0E01               	movlw	1
 11420   0052DA  6EDF               	movwf	indf2,c
 11421                           
 11422                           ;dc_motor.c: 151:     mR->direction =1;
 11423   0052DC  EE20 F001          	lfsr	2,1
 11424   0052E0  5016               	movf	fullSpeedAhead@mR^0,w,c
 11425   0052E2  26D9               	addwf	fsr2l,f,c
 11426   0052E4  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11427   0052E6  22DA               	addwfc	fsr2h,f,c
 11428   0052E8  0E01               	movlw	1
 11429   0052EA  6EDF               	movwf	indf2,c
 11430                           
 11431                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11432   0052EC  EF9C  F029         	goto	l4704
 11433   0052F0                     l4696:
 11434                           
 11435                           ;dc_motor.c: 154:         mL->power+=10;
 11436   0052F0  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11437   0052F4  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11438   0052F8  0E0A               	movlw	10
 11439   0052FA  26DF               	addwf	indf2,f,c
 11440                           
 11441                           ;dc_motor.c: 155:         mR->power+=10;
 11442   0052FC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11443   005300  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11444   005304  0E0A               	movlw	10
 11445   005306  26DF               	addwf	indf2,f,c
 11446   005308                     
 11447                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11448   005308  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11449   00530C  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11450   005310  ECC8  F023         	call	_setMotorPWM	;wreg free
 11451   005314                     
 11452                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11453   005314  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11454   005318  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11455   00531C  ECC8  F023         	call	_setMotorPWM	;wreg free
 11456   005320                     
 11457                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11458   005320  0E02               	movlw	2
 11459   005322  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11460   005324  0EA0               	movlw	160
 11461   005326  6E18               	movwf	??_fullSpeedAhead^0,c
 11462   005328  0E92               	movlw	146
 11463   00532A                     u6337:
 11464   00532A  2EE8               	decfsz	wreg,f,c
 11465   00532C  D7FE               	bra	u6337
 11466   00532E  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11467   005330  D7FC               	bra	u6337
 11468   005332  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11469   005334  D7FA               	bra	u6337
 11470   005336  D000               	nop2	
 11471   005338                     l4704:
 11472   005338  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11473   00533C  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11474   005340  0E1E               	movlw	30
 11475   005342  60DF               	cpfslt	indf2,c
 11476   005344  EFA6  F029         	goto	u4471
 11477   005348  EFA8  F029         	goto	u4470
 11478   00534C                     u4471:
 11479   00534C  EFB4  F029         	goto	l523
 11480   005350                     u4470:
 11481   005350  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11482   005354  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11483   005358  0E1D               	movlw	29
 11484   00535A  64DF               	cpfsgt	indf2,c
 11485   00535C  EFB2  F029         	goto	u4481
 11486   005360  EFB4  F029         	goto	u4480
 11487   005364                     u4481:
 11488   005364  EF78  F029         	goto	l4696
 11489   005368                     u4480:
 11490   005368                     l523:
 11491   005368  0012               	return		;funcret
 11492   00536A                     __end_of_fullSpeedAhead:
 11493                           	callstack 0
 11494                           
 11495 ;; *************** function _setMotorPWM *****************
 11496 ;; Defined at:
 11497 ;;		line 68 in file "dc_motor.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11500 ;;		 -> motorR(9), motorL(9), 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  negDuty         1   18[COMRAM] unsigned char 
 11503 ;;  posDuty         1   17[COMRAM] unsigned char 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1    wreg      void 
 11506 ;; Registers used:
 11507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11517 ;;Total ram usage:        6 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 1
 11520 ;; This function calls:
 11521 ;;		___lwdiv
 11522 ;;		___wmul
 11523 ;; This function is called by:
 11524 ;;		_stop
 11525 ;;		_turnLeft
 11526 ;;		_turnRight
 11527 ;;		_fullSpeedAhead
 11528 ;;		_timed_forward
 11529 ;;		_fullSpeedBack
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text68
 11534   004790                     __ptext68:
 11535                           	callstack 0
 11536   004790                     _setMotorPWM:
 11537                           	callstack 26
 11538   004790                     
 11539                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11540   004790  EE20 F002          	lfsr	2,2
 11541   004794  500E               	movf	setMotorPWM@m^0,w,c
 11542   004796  26D9               	addwf	fsr2l,f,c
 11543   004798  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11544   00479A  22DA               	addwfc	fsr2h,f,c
 11545   00479C  50DF               	movf	indf2,w,c
 11546   00479E  B4D8               	btfsc	status,2,c
 11547   0047A0  EFD4  F023         	goto	u3491
 11548   0047A4  EFD6  F023         	goto	u3490
 11549   0047A8                     u3491:
 11550   0047A8  EF0A  F024         	goto	l4148
 11551   0047AC                     u3490:
 11552   0047AC                     
 11553                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11554   0047AC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11555   0047B0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11556   0047B4  50DF               	movf	indf2,w,c
 11557   0047B6  6E10               	movwf	??_setMotorPWM^0,c
 11558   0047B8  5010               	movf	??_setMotorPWM^0,w,c
 11559   0047BA  6E01               	movwf	___wmul@multiplier^0,c
 11560   0047BC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11561   0047BE  EE20 F003          	lfsr	2,3
 11562   0047C2  500E               	movf	setMotorPWM@m^0,w,c
 11563   0047C4  26D9               	addwf	fsr2l,f,c
 11564   0047C6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11565   0047C8  22DA               	addwfc	fsr2h,f,c
 11566   0047CA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11567   0047CE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11568   0047D2  EC23  F030         	call	___wmul	;wreg free
 11569   0047D6  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11570   0047DA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11571   0047DE  0E00               	movlw	0
 11572   0047E0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11573   0047E2  0E64               	movlw	100
 11574   0047E4  6E09               	movwf	___lwdiv@divisor^0,c
 11575   0047E6  ECB6  F02A         	call	___lwdiv	;wreg free
 11576   0047EA  EE20 F003          	lfsr	2,3
 11577   0047EE  500E               	movf	setMotorPWM@m^0,w,c
 11578   0047F0  26D9               	addwf	fsr2l,f,c
 11579   0047F2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11580   0047F4  22DA               	addwfc	fsr2h,f,c
 11581   0047F6  50DF               	movf	indf2,w,c
 11582   0047F8  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11583   0047FA  5007               	movf	?___lwdiv^0,w,c
 11584   0047FC  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11585   0047FE  6E12               	movwf	setMotorPWM@posDuty^0,c
 11586   004800                     
 11587                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11588   004800  EE20 F003          	lfsr	2,3
 11589   004804  500E               	movf	setMotorPWM@m^0,w,c
 11590   004806  26D9               	addwf	fsr2l,f,c
 11591   004808  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11592   00480A  22DA               	addwfc	fsr2h,f,c
 11593   00480C  50DF               	movf	indf2,w,c
 11594   00480E  6E13               	movwf	setMotorPWM@negDuty^0,c
 11595                           
 11596                           ;dc_motor.c: 75:     }
 11597   004810  EF2D  F024         	goto	l4152
 11598   004814                     l4148:
 11599                           
 11600                           ;dc_motor.c: 77:         posDuty=0;
 11601   004814  0E00               	movlw	0
 11602   004816  6E12               	movwf	setMotorPWM@posDuty^0,c
 11603   004818                     
 11604                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11605   004818  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11606   00481C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11607   004820  50DF               	movf	indf2,w,c
 11608   004822  6E10               	movwf	??_setMotorPWM^0,c
 11609   004824  5010               	movf	??_setMotorPWM^0,w,c
 11610   004826  6E01               	movwf	___wmul@multiplier^0,c
 11611   004828  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11612   00482A  EE20 F003          	lfsr	2,3
 11613   00482E  500E               	movf	setMotorPWM@m^0,w,c
 11614   004830  26D9               	addwf	fsr2l,f,c
 11615   004832  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11616   004834  22DA               	addwfc	fsr2h,f,c
 11617   004836  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11618   00483A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11619   00483E  EC23  F030         	call	___wmul	;wreg free
 11620   004842  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11621   004846  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11622   00484A  0E00               	movlw	0
 11623   00484C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11624   00484E  0E64               	movlw	100
 11625   004850  6E09               	movwf	___lwdiv@divisor^0,c
 11626   004852  ECB6  F02A         	call	___lwdiv	;wreg free
 11627   004856  5007               	movf	?___lwdiv^0,w,c
 11628   004858  6E13               	movwf	setMotorPWM@negDuty^0,c
 11629   00485A                     l4152:
 11630                           
 11631                           ;dc_motor.c: 81:     if (m->direction) {
 11632   00485A  EE20 F001          	lfsr	2,1
 11633   00485E  500E               	movf	setMotorPWM@m^0,w,c
 11634   004860  26D9               	addwf	fsr2l,f,c
 11635   004862  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11636   004864  22DA               	addwfc	fsr2h,f,c
 11637   004866  50DF               	movf	indf2,w,c
 11638   004868  B4D8               	btfsc	status,2,c
 11639   00486A  EF39  F024         	goto	u3501
 11640   00486E  EF3B  F024         	goto	u3500
 11641   004872                     u3501:
 11642   004872  EF5D  F024         	goto	l4156
 11643   004876                     u3500:
 11644   004876                     
 11645                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11646   004876  EE20 F005          	lfsr	2,5
 11647   00487A  500E               	movf	setMotorPWM@m^0,w,c
 11648   00487C  26D9               	addwf	fsr2l,f,c
 11649   00487E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11650   004880  22DA               	addwfc	fsr2h,f,c
 11651   004882  CFDE F010          	movff	postinc2,??_setMotorPWM
 11652   004886  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11653   00488A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11654   00488E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11655   004892  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11656                           
 11657                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11658   004896  EE20 F007          	lfsr	2,7
 11659   00489A  500E               	movf	setMotorPWM@m^0,w,c
 11660   00489C  26D9               	addwf	fsr2l,f,c
 11661   00489E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11662   0048A0  22DA               	addwfc	fsr2h,f,c
 11663   0048A2  CFDE F010          	movff	postinc2,??_setMotorPWM
 11664   0048A6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11665   0048AA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11666   0048AE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11667   0048B2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11668                           
 11669                           ;dc_motor.c: 86:     } else {
 11670   0048B6  EF7D  F024         	goto	l493
 11671   0048BA                     l4156:
 11672                           
 11673                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11674   0048BA  EE20 F005          	lfsr	2,5
 11675   0048BE  500E               	movf	setMotorPWM@m^0,w,c
 11676   0048C0  26D9               	addwf	fsr2l,f,c
 11677   0048C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11678   0048C4  22DA               	addwfc	fsr2h,f,c
 11679   0048C6  CFDE F010          	movff	postinc2,??_setMotorPWM
 11680   0048CA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11681   0048CE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11682   0048D2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11683   0048D6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11684                           
 11685                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11686   0048DA  EE20 F007          	lfsr	2,7
 11687   0048DE  500E               	movf	setMotorPWM@m^0,w,c
 11688   0048E0  26D9               	addwf	fsr2l,f,c
 11689   0048E2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11690   0048E4  22DA               	addwfc	fsr2h,f,c
 11691   0048E6  CFDE F010          	movff	postinc2,??_setMotorPWM
 11692   0048EA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11693   0048EE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11694   0048F2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11695   0048F6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11696   0048FA                     l493:
 11697   0048FA  0012               	return		;funcret
 11698   0048FC                     __end_of_setMotorPWM:
 11699                           	callstack 0
 11700                           
 11701 ;; *************** function ___wmul *****************
 11702 ;; Defined at:
 11703 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;  multiplier      2    0[COMRAM] unsigned int 
 11706 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;  product         2    4[COMRAM] unsigned int 
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  2    0[COMRAM] unsigned int 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2, status,0, prodl, prodh
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11722 ;;Total ram usage:        6 bytes
 11723 ;; Hardware stack levels used: 1
 11724 ;; This function calls:
 11725 ;;		Nothing
 11726 ;; This function is called by:
 11727 ;;		_setMotorPWM
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text69
 11732   006046                     __ptext69:
 11733                           	callstack 0
 11734   006046                     ___wmul:
 11735                           	callstack 26
 11736   006046  5001               	movf	___wmul@multiplier^0,w,c
 11737   006048  0203               	mulwf	___wmul@multiplicand^0,c
 11738   00604A  CFF3 F005          	movff	prodl,___wmul@product
 11739   00604E  CFF4 F006          	movff	prodh,___wmul@product+1
 11740   006052  5001               	movf	___wmul@multiplier^0,w,c
 11741   006054  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11742   006056  50F3               	movf	243,w,c
 11743   006058  2606               	addwf	(___wmul@product+1)^0,f,c
 11744   00605A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11745   00605C  0203               	mulwf	___wmul@multiplicand^0,c
 11746   00605E  50F3               	movf	243,w,c
 11747   006060  2606               	addwf	(___wmul@product+1)^0,f,c
 11748   006062  C005  F001         	movff	___wmul@product,?___wmul
 11749   006066  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11750   00606A  0012               	return		;funcret
 11751   00606C                     __end_of___wmul:
 11752                           	callstack 0
 11753                           
 11754 ;; *************** function ___lwdiv *****************
 11755 ;; Defined at:
 11756 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11757 ;; Parameters:    Size  Location     Type
 11758 ;;  dividend        2    6[COMRAM] unsigned int 
 11759 ;;  divisor         2    8[COMRAM] unsigned int 
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;  quotient        2   10[COMRAM] unsigned int 
 11762 ;;  counter         1   12[COMRAM] unsigned char 
 11763 ;; Return value:  Size  Location     Type
 11764 ;;                  2    6[COMRAM] unsigned int 
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, status,0
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11776 ;;Total ram usage:        7 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; This function calls:
 11779 ;;		Nothing
 11780 ;; This function is called by:
 11781 ;;		_setMotorPWM
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text70
 11786   00556C                     __ptext70:
 11787                           	callstack 0
 11788   00556C                     ___lwdiv:
 11789                           	callstack 26
 11790   00556C  0E00               	movlw	0
 11791   00556E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11792   005570  0E00               	movlw	0
 11793   005572  6E0B               	movwf	___lwdiv@quotient^0,c
 11794   005574  5009               	movf	___lwdiv@divisor^0,w,c
 11795   005576  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11796   005578  B4D8               	btfsc	status,2,c
 11797   00557A  EFC1  F02A         	goto	u3451
 11798   00557E  EFC3  F02A         	goto	u3450
 11799   005582                     u3451:
 11800   005582  EFEB  F02A         	goto	l1196
 11801   005586                     u3450:
 11802   005586  0E01               	movlw	1
 11803   005588  6E0D               	movwf	___lwdiv@counter^0,c
 11804   00558A  EFCB  F02A         	goto	l4120
 11805   00558E                     l4118:
 11806   00558E  90D8               	bcf	status,0,c
 11807   005590  3609               	rlcf	___lwdiv@divisor^0,f,c
 11808   005592  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11809   005594  2A0D               	incf	___lwdiv@counter^0,f,c
 11810   005596                     l4120:
 11811   005596  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11812   005598  EFD0  F02A         	goto	u3461
 11813   00559C  EFD2  F02A         	goto	u3460
 11814   0055A0                     u3461:
 11815   0055A0  EFC7  F02A         	goto	l4118
 11816   0055A4                     u3460:
 11817   0055A4                     l4122:
 11818   0055A4  90D8               	bcf	status,0,c
 11819   0055A6  360B               	rlcf	___lwdiv@quotient^0,f,c
 11820   0055A8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11821   0055AA  5009               	movf	___lwdiv@divisor^0,w,c
 11822   0055AC  5C07               	subwf	___lwdiv@dividend^0,w,c
 11823   0055AE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11824   0055B0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11825   0055B2  A0D8               	btfss	status,0,c
 11826   0055B4  EFDE  F02A         	goto	u3471
 11827   0055B8  EFE0  F02A         	goto	u3470
 11828   0055BC                     u3471:
 11829   0055BC  EFE5  F02A         	goto	l4130
 11830   0055C0                     u3470:
 11831   0055C0  5009               	movf	___lwdiv@divisor^0,w,c
 11832   0055C2  5E07               	subwf	___lwdiv@dividend^0,f,c
 11833   0055C4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11834   0055C6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11835   0055C8  800B               	bsf	___lwdiv@quotient^0,0,c
 11836   0055CA                     l4130:
 11837   0055CA  90D8               	bcf	status,0,c
 11838   0055CC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11839   0055CE  3209               	rrcf	___lwdiv@divisor^0,f,c
 11840   0055D0  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11841   0055D2  EFD2  F02A         	goto	l4122
 11842   0055D6                     l1196:
 11843   0055D6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11844   0055DA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11845   0055DE  0012               	return		;funcret
 11846   0055E0                     __end_of___lwdiv:
 11847                           	callstack 0
 11848                           
 11849 ;; *************** function _Colour_decider *****************
 11850 ;; Defined at:
 11851 ;;		line 125 in file "color.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;  vals            2   74[COMRAM] PTR struct RGB
 11854 ;;		 -> vals(8), 
 11855 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11856 ;;		 -> rel(12), 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  RGB_col        12    6[BANK0 ] float [3]
 11859 ;;  Hue             4   28[BANK0 ] float 
 11860 ;;  Cmin            4   22[BANK0 ] float 
 11861 ;;  Cmax            4   18[BANK0 ] float 
 11862 ;;  i               2   26[BANK0 ] int 
 11863 ;;  Cmax_i          2    4[BANK0 ] int 
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  2   74[COMRAM] int 
 11866 ;; Registers used:
 11867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11873 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11874 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11876 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11877 ;;Total ram usage:       38 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 2
 11880 ;; This function calls:
 11881 ;;		___fladd
 11882 ;;		___fldiv
 11883 ;;		___fleq
 11884 ;;		___flge
 11885 ;;		___flmul
 11886 ;;		___flsub
 11887 ;;		___xxtofl
 11888 ;; This function is called by:
 11889 ;;		_main
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           	psect	text71
 11894   000E52                     __ptext71:
 11895                           	callstack 0
 11896   000E52                     _Colour_decider:
 11897                           	callstack 28
 11898   000E52                     
 11899                           ;color.c: 126:     float Cmax = 0;
 11900   000E52  0E00               	movlw	0
 11901   000E54  0100               	movlb	0	; () banked
 11902   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11903   000E58  0E00               	movlw	0
 11904   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11905   000E5C  0E00               	movlw	0
 11906   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11907   000E60  0E00               	movlw	0
 11908   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11909                           
 11910                           ;color.c: 127:     float Cmin= 100000;
 11911   000E64  0E00               	movlw	0
 11912   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11913   000E68  0E50               	movlw	80
 11914   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11915   000E6C  0EC3               	movlw	195
 11916   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11917   000E70  0E47               	movlw	71
 11918   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11919                           
 11920                           ;color.c: 128:     int Cmax_i =4;
 11921   000E74  0E00               	movlw	0
 11922   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11923   000E78  0E04               	movlw	4
 11924   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11925   000E7C                     
 11926                           ; BSR set to: 0
 11927                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11928   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11929   000E80  0E0B               	movlw	11
 11930   000E82                     u5211:
 11931   000E82  6ADE               	clrf	postinc2,c
 11932   000E84  06E8               	decf	wreg,f,c
 11933   000E86  E2FD               	bc	u5211
 11934   000E88                     
 11935                           ; BSR set to: 0
 11936   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11937   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11938   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 11939   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11940   000E98  0E00               	movlw	0
 11941   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11942   000E9C  0EFF               	movlw	-1
 11943   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 11944   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 11945   000EA2  0E01               	movlw	1
 11946   000EA4  EC2A  F022         	call	___xxtofl
 11947   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11948   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11949   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11950   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11951   000EB8  EE20 F002          	lfsr	2,2
 11952   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 11953   000EBE  26D9               	addwf	fsr2l,f,c
 11954   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11955   000EC2  22DA               	addwfc	fsr2h,f,c
 11956   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 11957   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11958   000ECC  0E00               	movlw	0
 11959   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11960   000ED0  0EFF               	movlw	-1
 11961   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 11962   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 11963   000ED6  0E01               	movlw	1
 11964   000ED8  EC2A  F022         	call	___xxtofl
 11965   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11966   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11967   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11968   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11969   000EEC  EE20 F004          	lfsr	2,4
 11970   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 11971   000EF2  26D9               	addwf	fsr2l,f,c
 11972   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11973   000EF6  22DA               	addwfc	fsr2h,f,c
 11974   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 11975   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11976   000F00  0E00               	movlw	0
 11977   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11978   000F04  0EFF               	movlw	-1
 11979   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 11980   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 11981   000F0A  0E01               	movlw	1
 11982   000F0C  EC2A  F022         	call	___xxtofl
 11983   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 11984   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 11985   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 11986   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 11987   000F20                     
 11988                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 11989   000F20  0E00               	movlw	0
 11990   000F22  0100               	movlb	0	; () banked
 11991   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 11992   000F26  0E00               	movlw	0
 11993   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 11994   000F2A                     l5388:
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 11998   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 11999   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12000   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12001   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12002   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 12003   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 12004   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 12005   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 12006   000F42  90D8               	bcf	status,0,c
 12007   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12008   000F46  6ED9               	movwf	fsr2l,c
 12009   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12010   000F4A  6EDA               	movwf	fsr2h,c
 12011   000F4C  90D8               	bcf	status,0,c
 12012   000F4E  36D9               	rlcf	fsr2l,f,c
 12013   000F50  36DA               	rlcf	fsr2h,f,c
 12014   000F52  504F               	movf	??_Colour_decider^0,w,c
 12015   000F54  26D9               	addwf	fsr2l,f,c
 12016   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 12017   000F58  22DA               	addwfc	fsr2h,f,c
 12018   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 12019   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12020   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 12021   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 12022   000F6A  ECB3  F025         	call	___flge	;wreg free
 12023   000F6E  B0D8               	btfsc	status,0,c
 12024   000F70  EFBC  F007         	goto	u5221
 12025   000F74  EFBE  F007         	goto	u5220
 12026   000F78                     u5221:
 12027   000F78  EFDB  F007         	goto	l5394
 12028   000F7C                     u5220:
 12029   000F7C                     
 12030                           ;color.c: 137:             Cmax=RGB_col[i];
 12031   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 12032   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 12033   000F80  0E00               	movlw	high Colour_decider@RGB_col
 12034   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 12035   000F84  90D8               	bcf	status,0,c
 12036   000F86  0100               	movlb	0	; () banked
 12037   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12038   000F8A  6ED9               	movwf	fsr2l,c
 12039   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12040   000F8E  6EDA               	movwf	fsr2h,c
 12041   000F90  90D8               	bcf	status,0,c
 12042   000F92  36D9               	rlcf	fsr2l,f,c
 12043   000F94  36DA               	rlcf	fsr2h,f,c
 12044   000F96  504F               	movf	??_Colour_decider^0,w,c
 12045   000F98  26D9               	addwf	fsr2l,f,c
 12046   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 12047   000F9C  22DA               	addwfc	fsr2h,f,c
 12048   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12049   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12050   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12051   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12052   000FAE                     
 12053                           ; BSR set to: 0
 12054                           ;color.c: 138:             Cmax_i=i;
 12055   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12056   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12057   000FB6                     l5394:
 12058                           
 12059                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12060   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 12061   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 12062   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 12063   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12064   000FBE  90D8               	bcf	status,0,c
 12065   000FC0  0100               	movlb	0	; () banked
 12066   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12067   000FC4  6ED9               	movwf	fsr2l,c
 12068   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12069   000FC8  6EDA               	movwf	fsr2h,c
 12070   000FCA  90D8               	bcf	status,0,c
 12071   000FCC  36D9               	rlcf	fsr2l,f,c
 12072   000FCE  36DA               	rlcf	fsr2h,f,c
 12073   000FD0  504F               	movf	??_Colour_decider^0,w,c
 12074   000FD2  26D9               	addwf	fsr2l,f,c
 12075   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 12076   000FD6  22DA               	addwfc	fsr2h,f,c
 12077   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 12078   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12079   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12080   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12081   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12082   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12083   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12084   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12085   000FF8  ECB3  F025         	call	___flge	;wreg free
 12086   000FFC  B0D8               	btfsc	status,0,c
 12087   000FFE  EF03  F008         	goto	u5231
 12088   001002  EF05  F008         	goto	u5230
 12089   001006                     u5231:
 12090   001006  EF1E  F008         	goto	l5398
 12091   00100A                     u5230:
 12092   00100A  0E66               	movlw	low Colour_decider@RGB_col
 12093   00100C  6E4F               	movwf	??_Colour_decider^0,c
 12094   00100E  0E00               	movlw	high Colour_decider@RGB_col
 12095   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 12096   001012  90D8               	bcf	status,0,c
 12097   001014  0100               	movlb	0	; () banked
 12098   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12099   001018  6ED9               	movwf	fsr2l,c
 12100   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12101   00101C  6EDA               	movwf	fsr2h,c
 12102   00101E  90D8               	bcf	status,0,c
 12103   001020  36D9               	rlcf	fsr2l,f,c
 12104   001022  36DA               	rlcf	fsr2h,f,c
 12105   001024  504F               	movf	??_Colour_decider^0,w,c
 12106   001026  26D9               	addwf	fsr2l,f,c
 12107   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 12108   00102A  22DA               	addwfc	fsr2h,f,c
 12109   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12110   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12111   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12112   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12113   00103C                     l5398:
 12114                           
 12115                           ;color.c: 141:     }
 12116   00103C  0100               	movlb	0	; () banked
 12117   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12118   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12119   001042                     
 12120                           ; BSR set to: 0
 12121   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12122   001044  EF2D  F008         	goto	u5241
 12123   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12124   00104A  E109               	bnz	u5240
 12125   00104C  0E03               	movlw	3
 12126   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12127   001050  A0D8               	btfss	status,0,c
 12128   001052  EF2D  F008         	goto	u5241
 12129   001056  EF2F  F008         	goto	u5240
 12130   00105A                     u5241:
 12131   00105A  EF95  F007         	goto	l5388
 12132   00105E                     u5240:
 12133   00105E                     
 12134                           ; BSR set to: 0
 12135                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12136   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12137   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12138   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12139   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12140   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12141   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12142   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12143   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12144   00107E  EC96  F02E         	call	___flsub	;wreg free
 12145   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 12146   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12147   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12148   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12149   001092  0E00               	movlw	0
 12150   001094  6E36               	movwf	___fleq@ff2^0,c
 12151   001096  0E00               	movlw	0
 12152   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 12153   00109A  0E00               	movlw	0
 12154   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 12155   00109E  0E00               	movlw	0
 12156   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 12157   0010A2  EC24  F028         	call	___fleq	;wreg free
 12158   0010A6  A0D8               	btfss	status,0,c
 12159   0010A8  EF58  F008         	goto	u5251
 12160   0010AC  EF5A  F008         	goto	u5250
 12161   0010B0                     u5251:
 12162   0010B0  EF60  F008         	goto	l5408
 12163   0010B4                     u5250:
 12164   0010B4                     l5404:
 12165   0010B4  0E00               	movlw	0
 12166   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12167   0010B8  0E00               	movlw	0
 12168   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 12169   0010BC  EF96  F00C         	goto	l76
 12170   0010C0                     l5408:
 12171                           
 12172                           ;color.c: 146:     if (Cmax_i==0){
 12173   0010C0  0100               	movlb	0	; () banked
 12174   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12175   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12176   0010C6  A4D8               	btfss	status,2,c
 12177   0010C8  EF68  F008         	goto	u5261
 12178   0010CC  EF6A  F008         	goto	u5260
 12179   0010D0                     u5261:
 12180   0010D0  EFDE  F008         	goto	l5416
 12181   0010D4                     u5260:
 12182   0010D4                     
 12183                           ; BSR set to: 0
 12184                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12185   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12186   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12187   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12188   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12189   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12190   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12191   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12192   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12193   0010F4  EC96  F02E         	call	___flsub	;wreg free
 12194   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 12195   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12196   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12197   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12198   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12199   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12200   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12201   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12202   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12203   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12204   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12205   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12206   001128  EC96  F02E         	call	___flsub	;wreg free
 12207   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 12208   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12209   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12210   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12211   00113C  EC9B  F018         	call	___fldiv	;wreg free
 12212   001140  C032  F011         	movff	?___fldiv,___flmul@b
 12213   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12214   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12215   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12216   001150  0E00               	movlw	0
 12217   001152  6E15               	movwf	___flmul@a^0,c
 12218   001154  0E00               	movlw	0
 12219   001156  6E16               	movwf	(___flmul@a+1)^0,c
 12220   001158  0E70               	movlw	112
 12221   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 12222   00115C  0E42               	movlw	66
 12223   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 12224   001160  EC86  F016         	call	___flmul	;wreg free
 12225   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12226   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12227   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12228   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12229   001174                     
 12230                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12231   001174  0100               	movlb	0	; () banked
 12232   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12233   001178  EFC2  F008         	goto	u5270
 12234   00117C  EFC0  F008         	goto	u5271
 12235   001180                     u5271:
 12236   001180  EFBD  F009         	goto	l5426
 12237   001184                     u5270:
 12238   001184                     
 12239                           ; BSR set to: 0
 12240   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12241   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12242   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12243   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12244   001194  0E00               	movlw	0
 12245   001196  6E05               	movwf	___fladd@a^0,c
 12246   001198  0E00               	movlw	0
 12247   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 12248   00119C  0EB4               	movlw	180
 12249   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 12250   0011A0  0E43               	movlw	67
 12251   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 12252   0011A4  EC26  F014         	call	___fladd	;wreg free
 12253   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12254   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12255   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12256   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12257   0011B8  EFBD  F009         	goto	l5426
 12258   0011BC                     l5416:
 12259                           
 12260                           ; BSR set to: 0
 12261   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12262   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12263   0011C0  A4D8               	btfss	status,2,c
 12264   0011C2  EFE5  F008         	goto	u5281
 12265   0011C6  EFE7  F008         	goto	u5280
 12266   0011CA                     u5281:
 12267   0011CA  EF53  F009         	goto	l5422
 12268   0011CE                     u5280:
 12269   0011CE                     
 12270                           ; BSR set to: 0
 12271                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12272   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12273   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12274   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12275   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12276   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12277   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12278   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12279   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12280   0011EE  EC96  F02E         	call	___flsub	;wreg free
 12281   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 12282   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12283   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12284   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12285   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12286   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12287   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12288   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12289   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12290   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12291   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12292   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12293   001222  EC96  F02E         	call	___flsub	;wreg free
 12294   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 12295   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12296   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12297   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12298   001236  EC9B  F018         	call	___fldiv	;wreg free
 12299   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$3162
 12300   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3162+1
 12301   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$3162+2
 12302   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$3162+3
 12303   00124A                     
 12304                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12305   00124A  0E00               	movlw	0
 12306   00124C  6E05               	movwf	___fladd@a^0,c
 12307   00124E  0E00               	movlw	0
 12308   001250  6E06               	movwf	(___fladd@a+1)^0,c
 12309   001252  0E00               	movlw	0
 12310   001254  6E07               	movwf	(___fladd@a+2)^0,c
 12311   001256  0E40               	movlw	64
 12312   001258  6E08               	movwf	(___fladd@a+3)^0,c
 12313   00125A  C060  F001         	movff	_Colour_decider$3162,___fladd@b
 12314   00125E  C061  F002         	movff	_Colour_decider$3162+1,___fladd@b+1
 12315   001262  C062  F003         	movff	_Colour_decider$3162+2,___fladd@b+2
 12316   001266  C063  F004         	movff	_Colour_decider$3162+3,___fladd@b+3
 12317   00126A  EC26  F014         	call	___fladd	;wreg free
 12318   00126E  C001  F011         	movff	?___fladd,___flmul@b
 12319   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12320   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12321   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12322   00127E  0E00               	movlw	0
 12323   001280  6E15               	movwf	___flmul@a^0,c
 12324   001282  0E00               	movlw	0
 12325   001284  6E16               	movwf	(___flmul@a+1)^0,c
 12326   001286  0E70               	movlw	112
 12327   001288  6E17               	movwf	(___flmul@a+2)^0,c
 12328   00128A  0E42               	movlw	66
 12329   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 12330   00128E  EC86  F016         	call	___flmul	;wreg free
 12331   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12332   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12333   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12334   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12335                           
 12336                           ;color.c: 155:     }
 12337   0012A2  EFBD  F009         	goto	l5426
 12338   0012A6                     l5422:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12342   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12343   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12344   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12345   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12346   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12347   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12348   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12349   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12350   0012C6  EC96  F02E         	call	___flsub	;wreg free
 12351   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 12352   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12353   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12354   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12355   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12356   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12357   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12358   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12359   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12360   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12361   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12362   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12363   0012FA  EC96  F02E         	call	___flsub	;wreg free
 12364   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 12365   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12366   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12367   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12368   00130E  EC9B  F018         	call	___fldiv	;wreg free
 12369   001312  C032  F060         	movff	?___fldiv,_Colour_decider$3162
 12370   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$3162+1
 12371   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3162+2
 12372   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3162+3
 12373   001322                     
 12374                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12375   001322  0E00               	movlw	0
 12376   001324  6E05               	movwf	___fladd@a^0,c
 12377   001326  0E00               	movlw	0
 12378   001328  6E06               	movwf	(___fladd@a+1)^0,c
 12379   00132A  0E80               	movlw	128
 12380   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 12381   00132E  0E40               	movlw	64
 12382   001330  6E08               	movwf	(___fladd@a+3)^0,c
 12383   001332  C060  F001         	movff	_Colour_decider$3162,___fladd@b
 12384   001336  C061  F002         	movff	_Colour_decider$3162+1,___fladd@b+1
 12385   00133A  C062  F003         	movff	_Colour_decider$3162+2,___fladd@b+2
 12386   00133E  C063  F004         	movff	_Colour_decider$3162+3,___fladd@b+3
 12387   001342  EC26  F014         	call	___fladd	;wreg free
 12388   001346  C001  F011         	movff	?___fladd,___flmul@b
 12389   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12390   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12391   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12392   001356  0E00               	movlw	0
 12393   001358  6E15               	movwf	___flmul@a^0,c
 12394   00135A  0E00               	movlw	0
 12395   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 12396   00135E  0E70               	movlw	112
 12397   001360  6E17               	movwf	(___flmul@a+2)^0,c
 12398   001362  0E42               	movlw	66
 12399   001364  6E18               	movwf	(___flmul@a+3)^0,c
 12400   001366  EC86  F016         	call	___flmul	;wreg free
 12401   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12402   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12403   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12404   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12405   00137A                     l5426:
 12406                           
 12407                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12408   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12409   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12410   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12411   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12412   00138A  0E00               	movlw	0
 12413   00138C  6E2E               	movwf	___flge@ff2^0,c
 12414   00138E  0E00               	movlw	0
 12415   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 12416   001392  0EA5               	movlw	165
 12417   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 12418   001396  0E43               	movlw	67
 12419   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 12420   00139A  ECB3  F025         	call	___flge	;wreg free
 12421   00139E  A0D8               	btfss	status,0,c
 12422   0013A0  EFD4  F009         	goto	u5291
 12423   0013A4  EFD6  F009         	goto	u5290
 12424   0013A8                     u5291:
 12425   0013A8  EFF5  F009         	goto	l5436
 12426   0013AC                     u5290:
 12427   0013AC  0E00               	movlw	0
 12428   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12429   0013B0  0E00               	movlw	0
 12430   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12431   0013B4  0EB4               	movlw	180
 12432   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12433   0013B8  0E43               	movlw	67
 12434   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12435   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12436   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12437   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12438   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12439   0013CC  ECB3  F025         	call	___flge	;wreg free
 12440   0013D0  A0D8               	btfss	status,0,c
 12441   0013D2  EFED  F009         	goto	u5301
 12442   0013D6  EFEF  F009         	goto	u5300
 12443   0013DA                     u5301:
 12444   0013DA  EFF5  F009         	goto	l5436
 12445   0013DE                     u5300:
 12446   0013DE                     
 12447                           ;color.c: 164:         return 1;
 12448   0013DE  0E00               	movlw	0
 12449   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12450   0013E2  0E01               	movlw	1
 12451   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12452   0013E6  EF96  F00C         	goto	l76
 12453   0013EA                     l5436:
 12454   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12455   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12456   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12457   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12458   0013FA  0E00               	movlw	0
 12459   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12460   0013FE  0E00               	movlw	0
 12461   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12462   001402  0EA0               	movlw	160
 12463   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12464   001406  0E40               	movlw	64
 12465   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12466   00140A  ECB3  F025         	call	___flge	;wreg free
 12467   00140E  A0D8               	btfss	status,0,c
 12468   001410  EF0C  F00A         	goto	u5311
 12469   001414  EF0E  F00A         	goto	u5310
 12470   001418                     u5311:
 12471   001418  EF2D  F00A         	goto	l5446
 12472   00141C                     u5310:
 12473   00141C  0E00               	movlw	0
 12474   00141E  6E2A               	movwf	___flge@ff1^0,c
 12475   001420  0E00               	movlw	0
 12476   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12477   001424  0E40               	movlw	64
 12478   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12479   001428  0E41               	movlw	65
 12480   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12481   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12482   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12483   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12484   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12485   00143C  ECB3  F025         	call	___flge	;wreg free
 12486   001440  A0D8               	btfss	status,0,c
 12487   001442  EF25  F00A         	goto	u5321
 12488   001446  EF27  F00A         	goto	u5320
 12489   00144A                     u5321:
 12490   00144A  EF2D  F00A         	goto	l5446
 12491   00144E                     u5320:
 12492   00144E                     
 12493                           ;color.c: 168:         return 2;
 12494   00144E  0E00               	movlw	0
 12495   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12496   001452  0E02               	movlw	2
 12497   001454  6E4B               	movwf	?_Colour_decider^0,c
 12498   001456  EF96  F00C         	goto	l76
 12499   00145A                     l5446:
 12500   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12501   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12502   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12503   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12504   00146A  0E00               	movlw	0
 12505   00146C  6E2E               	movwf	___flge@ff2^0,c
 12506   00146E  0E00               	movlw	0
 12507   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12508   001472  0EA0               	movlw	160
 12509   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12510   001476  0E41               	movlw	65
 12511   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12512   00147A  ECB3  F025         	call	___flge	;wreg free
 12513   00147E  A0D8               	btfss	status,0,c
 12514   001480  EF44  F00A         	goto	u5331
 12515   001484  EF46  F00A         	goto	u5330
 12516   001488                     u5331:
 12517   001488  EFC6  F00A         	goto	l5472
 12518   00148C                     u5330:
 12519   00148C  0E00               	movlw	0
 12520   00148E  6E2A               	movwf	___flge@ff1^0,c
 12521   001490  0E00               	movlw	0
 12522   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12523   001494  0EE8               	movlw	232
 12524   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12525   001498  0E41               	movlw	65
 12526   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12527   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12528   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12529   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12530   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12531   0014AC  ECB3  F025         	call	___flge	;wreg free
 12532   0014B0  A0D8               	btfss	status,0,c
 12533   0014B2  EF5D  F00A         	goto	u5341
 12534   0014B6  EF5F  F00A         	goto	u5340
 12535   0014BA                     u5341:
 12536   0014BA  EFC6  F00A         	goto	l5472
 12537   0014BE                     u5340:
 12538   0014BE                     
 12539                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12540   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12541   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12542   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12543   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12544   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12545   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12546   0014D6  0ECD               	movlw	205
 12547   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12548   0014DA  0ECC               	movlw	204
 12549   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12550   0014DE  0E4C               	movlw	76
 12551   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12552   0014E2  0E3E               	movlw	62
 12553   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12554   0014E6  ECB3  F025         	call	___flge	;wreg free
 12555   0014EA  A0D8               	btfss	status,0,c
 12556   0014EC  EF7A  F00A         	goto	u5351
 12557   0014F0  EF7C  F00A         	goto	u5350
 12558   0014F4                     u5351:
 12559   0014F4  EF9B  F00A         	goto	l5460
 12560   0014F8                     u5350:
 12561   0014F8  0E00               	movlw	0
 12562   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12563   0014FC  0E00               	movlw	0
 12564   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12565   001500  0E80               	movlw	128
 12566   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12567   001504  0E3E               	movlw	62
 12568   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12569   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12570   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12571   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12572   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12573   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12574   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12575   001520  ECB3  F025         	call	___flge	;wreg free
 12576   001524  A0D8               	btfss	status,0,c
 12577   001526  EF97  F00A         	goto	u5361
 12578   00152A  EF99  F00A         	goto	u5360
 12579   00152E                     u5361:
 12580   00152E  EF9B  F00A         	goto	l5460
 12581   001532                     u5360:
 12582   001532  EF5A  F008         	goto	l5404
 12583   001536                     l5460:
 12584   001536  EE20 F008          	lfsr	2,8
 12585   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12586   00153C  26D9               	addwf	fsr2l,f,c
 12587   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12588   001540  22DA               	addwfc	fsr2h,f,c
 12589   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12590   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12591   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12592   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12593   001552  0E29               	movlw	41
 12594   001554  6E2E               	movwf	___flge@ff2^0,c
 12595   001556  0E5C               	movlw	92
 12596   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12597   00155A  0E0F               	movlw	15
 12598   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12599   00155E  0E3E               	movlw	62
 12600   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12601   001562  ECB3  F025         	call	___flge	;wreg free
 12602   001566  A0D8               	btfss	status,0,c
 12603   001568  EFB8  F00A         	goto	u5371
 12604   00156C  EFBA  F00A         	goto	u5370
 12605   001570                     u5371:
 12606   001570  EFC0  F00A         	goto	l5468
 12607   001574                     u5370:
 12608   001574                     l5462:
 12609                           
 12610                           ;color.c: 179:             return 4;
 12611   001574  0E00               	movlw	0
 12612   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12613   001578  0E04               	movlw	4
 12614   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12615   00157C  EF96  F00C         	goto	l76
 12616   001580                     l5468:
 12617                           
 12618                           ;color.c: 182:             return 3;
 12619   001580  0E00               	movlw	0
 12620   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12621   001584  0E03               	movlw	3
 12622   001586  6E4B               	movwf	?_Colour_decider^0,c
 12623   001588  EF96  F00C         	goto	l76
 12624   00158C                     l5472:
 12625   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12626   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12627   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12628   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12629   00159C  0E00               	movlw	0
 12630   00159E  6E2E               	movwf	___flge@ff2^0,c
 12631   0015A0  0E00               	movlw	0
 12632   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12633   0015A4  0E34               	movlw	52
 12634   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12635   0015A8  0E42               	movlw	66
 12636   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12637   0015AC  ECB3  F025         	call	___flge	;wreg free
 12638   0015B0  A0D8               	btfss	status,0,c
 12639   0015B2  EFDD  F00A         	goto	u5381
 12640   0015B6  EFDF  F00A         	goto	u5380
 12641   0015BA                     u5381:
 12642   0015BA  EF44  F00B         	goto	l5496
 12643   0015BE                     u5380:
 12644   0015BE  0E00               	movlw	0
 12645   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12646   0015C2  0E00               	movlw	0
 12647   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12648   0015C6  0EA0               	movlw	160
 12649   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12650   0015CA  0E42               	movlw	66
 12651   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12652   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12653   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12654   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12655   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12656   0015DE  ECB3  F025         	call	___flge	;wreg free
 12657   0015E2  A0D8               	btfss	status,0,c
 12658   0015E4  EFF6  F00A         	goto	u5391
 12659   0015E8  EFF8  F00A         	goto	u5390
 12660   0015EC                     u5391:
 12661   0015EC  EF44  F00B         	goto	l5496
 12662   0015F0                     u5390:
 12663   0015F0                     
 12664                           ;color.c: 188:         if(0.15<=rel->B){
 12665   0015F0  EE20 F008          	lfsr	2,8
 12666   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12667   0015F6  26D9               	addwf	fsr2l,f,c
 12668   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12669   0015FA  22DA               	addwfc	fsr2h,f,c
 12670   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12671   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12672   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12673   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12674   00160C  0E9A               	movlw	154
 12675   00160E  6E2E               	movwf	___flge@ff2^0,c
 12676   001610  0E99               	movlw	153
 12677   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12678   001614  0E19               	movlw	25
 12679   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12680   001618  0E3E               	movlw	62
 12681   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12682   00161C  ECB3  F025         	call	___flge	;wreg free
 12683   001620  A0D8               	btfss	status,0,c
 12684   001622  EF15  F00B         	goto	u5401
 12685   001626  EF17  F00B         	goto	u5400
 12686   00162A                     u5401:
 12687   00162A  EF19  F00B         	goto	l5484
 12688   00162E                     u5400:
 12689   00162E  EFBA  F00A         	goto	l5462
 12690   001632                     l5484:
 12691   001632  EE20 F008          	lfsr	2,8
 12692   001636  504D               	movf	Colour_decider@rel^0,w,c
 12693   001638  26D9               	addwf	fsr2l,f,c
 12694   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12695   00163C  22DA               	addwfc	fsr2h,f,c
 12696   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12697   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12698   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12699   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12700   00164E  0E8F               	movlw	143
 12701   001650  6E2E               	movwf	___flge@ff2^0,c
 12702   001652  0EC2               	movlw	194
 12703   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12704   001656  0EF5               	movlw	245
 12705   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12706   00165A  0E3D               	movlw	61
 12707   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12708   00165E  ECB3  F025         	call	___flge	;wreg free
 12709   001662  A0D8               	btfss	status,0,c
 12710   001664  EF36  F00B         	goto	u5411
 12711   001668  EF38  F00B         	goto	u5410
 12712   00166C                     u5411:
 12713   00166C  EF3E  F00B         	goto	l5492
 12714   001670                     u5410:
 12715   001670                     l5486:
 12716                           
 12717                           ;color.c: 192:             return 6;
 12718   001670  0E00               	movlw	0
 12719   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12720   001674  0E06               	movlw	6
 12721   001676  6E4B               	movwf	?_Colour_decider^0,c
 12722   001678  EF96  F00C         	goto	l76
 12723   00167C                     l5492:
 12724                           
 12725                           ;color.c: 195:             return 5;
 12726   00167C  0E00               	movlw	0
 12727   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12728   001680  0E05               	movlw	5
 12729   001682  6E4B               	movwf	?_Colour_decider^0,c
 12730   001684  EF96  F00C         	goto	l76
 12731   001688                     l5496:
 12732   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12733   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12734   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12735   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12736   001698  0E00               	movlw	0
 12737   00169A  6E2E               	movwf	___flge@ff2^0,c
 12738   00169C  0E00               	movlw	0
 12739   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12740   0016A0  0EA2               	movlw	162
 12741   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12742   0016A4  0E42               	movlw	66
 12743   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12744   0016A8  ECB3  F025         	call	___flge	;wreg free
 12745   0016AC  A0D8               	btfss	status,0,c
 12746   0016AE  EF5B  F00B         	goto	u5421
 12747   0016B2  EF5D  F00B         	goto	u5420
 12748   0016B6                     u5421:
 12749   0016B6  EF97  F00B         	goto	l5512
 12750   0016BA                     u5420:
 12751   0016BA  0E00               	movlw	0
 12752   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12753   0016BE  0E00               	movlw	0
 12754   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12755   0016C2  0EE6               	movlw	230
 12756   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12757   0016C6  0E42               	movlw	66
 12758   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12759   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12760   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12761   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12762   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12763   0016DA  ECB3  F025         	call	___flge	;wreg free
 12764   0016DE  A0D8               	btfss	status,0,c
 12765   0016E0  EF74  F00B         	goto	u5431
 12766   0016E4  EF76  F00B         	goto	u5430
 12767   0016E8                     u5431:
 12768   0016E8  EF97  F00B         	goto	l5512
 12769   0016EC                     u5430:
 12770   0016EC                     
 12771                           ;color.c: 201:         if(0.15<=rel->B){
 12772   0016EC  EE20 F008          	lfsr	2,8
 12773   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12774   0016F2  26D9               	addwf	fsr2l,f,c
 12775   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12776   0016F6  22DA               	addwfc	fsr2h,f,c
 12777   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12778   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12779   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12780   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12781   001708  0E9A               	movlw	154
 12782   00170A  6E2E               	movwf	___flge@ff2^0,c
 12783   00170C  0E99               	movlw	153
 12784   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12785   001710  0E19               	movlw	25
 12786   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12787   001714  0E3E               	movlw	62
 12788   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12789   001718  ECB3  F025         	call	___flge	;wreg free
 12790   00171C  A0D8               	btfss	status,0,c
 12791   00171E  EF93  F00B         	goto	u5441
 12792   001722  EF95  F00B         	goto	u5440
 12793   001726                     u5441:
 12794   001726  EF38  F00B         	goto	l5486
 12795   00172A                     u5440:
 12796   00172A  EFBA  F00A         	goto	l5462
 12797   00172E                     l5512:
 12798   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12799   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12800   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12801   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12802   00173E  0E00               	movlw	0
 12803   001740  6E2E               	movwf	___flge@ff2^0,c
 12804   001742  0E00               	movlw	0
 12805   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12806   001746  0EF0               	movlw	240
 12807   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12808   00174A  0E41               	movlw	65
 12809   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12810   00174E  ECB3  F025         	call	___flge	;wreg free
 12811   001752  A0D8               	btfss	status,0,c
 12812   001754  EFAE  F00B         	goto	u5451
 12813   001758  EFB0  F00B         	goto	u5450
 12814   00175C                     u5451:
 12815   00175C  EFC9  F00B         	goto	l5516
 12816   001760                     u5450:
 12817   001760  0E00               	movlw	0
 12818   001762  6E2A               	movwf	___flge@ff1^0,c
 12819   001764  0E00               	movlw	0
 12820   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12821   001768  0E68               	movlw	104
 12822   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12823   00176C  0E42               	movlw	66
 12824   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12825   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12826   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12827   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12828   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12829   001780  ECB3  F025         	call	___flge	;wreg free
 12830   001784  B0D8               	btfsc	status,0,c
 12831   001786  EFC7  F00B         	goto	u5461
 12832   00178A  EFC9  F00B         	goto	u5460
 12833   00178E                     u5461:
 12834   00178E  EFBA  F00A         	goto	l5462
 12835   001792                     u5460:
 12836   001792                     l5516:
 12837   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12838   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12839   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12840   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12841   0017A2  0E00               	movlw	0
 12842   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12843   0017A6  0E00               	movlw	0
 12844   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12845   0017AA  0EF0               	movlw	240
 12846   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12847   0017AE  0E42               	movlw	66
 12848   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12849   0017B2  ECB3  F025         	call	___flge	;wreg free
 12850   0017B6  A0D8               	btfss	status,0,c
 12851   0017B8  EFE0  F00B         	goto	u5471
 12852   0017BC  EFE2  F00B         	goto	u5470
 12853   0017C0                     u5471:
 12854   0017C0  EFFD  F00B         	goto	l5526
 12855   0017C4                     u5470:
 12856   0017C4  0E00               	movlw	0
 12857   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12858   0017C8  0E00               	movlw	0
 12859   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12860   0017CC  0E5C               	movlw	92
 12861   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12862   0017D0  0E43               	movlw	67
 12863   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12864   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12865   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12866   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12867   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12868   0017E4  ECB3  F025         	call	___flge	;wreg free
 12869   0017E8  A0D8               	btfss	status,0,c
 12870   0017EA  EFF9  F00B         	goto	u5481
 12871   0017EE  EFFB  F00B         	goto	u5480
 12872   0017F2                     u5481:
 12873   0017F2  EFFD  F00B         	goto	l5526
 12874   0017F6                     u5480:
 12875   0017F6  EFBA  F00A         	goto	l5462
 12876   0017FA                     l5526:
 12877   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12878   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12879   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12880   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12881   00180A  0E00               	movlw	0
 12882   00180C  6E2E               	movwf	___flge@ff2^0,c
 12883   00180E  0E00               	movlw	0
 12884   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12885   001812  0E60               	movlw	96
 12886   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12887   001816  0E41               	movlw	65
 12888   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12889   00181A  ECB3  F025         	call	___flge	;wreg free
 12890   00181E  A0D8               	btfss	status,0,c
 12891   001820  EF14  F00C         	goto	u5491
 12892   001824  EF16  F00C         	goto	u5490
 12893   001828                     u5491:
 12894   001828  EF92  F00C         	goto	l5552
 12895   00182C                     u5490:
 12896   00182C  0E00               	movlw	0
 12897   00182E  6E2A               	movwf	___flge@ff1^0,c
 12898   001830  0E00               	movlw	0
 12899   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12900   001834  0E98               	movlw	152
 12901   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 12902   001838  0E41               	movlw	65
 12903   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12904   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12905   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12906   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12907   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12908   00184C  ECB3  F025         	call	___flge	;wreg free
 12909   001850  A0D8               	btfss	status,0,c
 12910   001852  EF2D  F00C         	goto	u5501
 12911   001856  EF2F  F00C         	goto	u5500
 12912   00185A                     u5501:
 12913   00185A  EF92  F00C         	goto	l5552
 12914   00185E                     u5500:
 12915   00185E                     
 12916                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 12917   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12918   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12919   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 12920   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12921   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12922   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12923   001876  0ECD               	movlw	205
 12924   001878  6E2E               	movwf	___flge@ff2^0,c
 12925   00187A  0ECC               	movlw	204
 12926   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12927   00187E  0E4C               	movlw	76
 12928   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 12929   001882  0E3E               	movlw	62
 12930   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 12931   001886  ECB3  F025         	call	___flge	;wreg free
 12932   00188A  A0D8               	btfss	status,0,c
 12933   00188C  EF4A  F00C         	goto	u5511
 12934   001890  EF4C  F00C         	goto	u5510
 12935   001894                     u5511:
 12936   001894  EF6B  F00C         	goto	l5540
 12937   001898                     u5510:
 12938   001898  0E1F               	movlw	31
 12939   00189A  6E2A               	movwf	___flge@ff1^0,c
 12940   00189C  0E85               	movlw	133
 12941   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12942   0018A0  0E6B               	movlw	107
 12943   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12944   0018A4  0E3E               	movlw	62
 12945   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12946   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12947   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12948   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 12949   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12950   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 12951   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 12952   0018C0  ECB3  F025         	call	___flge	;wreg free
 12953   0018C4  A0D8               	btfss	status,0,c
 12954   0018C6  EF67  F00C         	goto	u5521
 12955   0018CA  EF69  F00C         	goto	u5520
 12956   0018CE                     u5521:
 12957   0018CE  EF6B  F00C         	goto	l5540
 12958   0018D2                     u5520:
 12959   0018D2  EF5A  F008         	goto	l5404
 12960   0018D6                     l5540:
 12961   0018D6  EE20 F008          	lfsr	2,8
 12962   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 12963   0018DC  26D9               	addwf	fsr2l,f,c
 12964   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12965   0018E0  22DA               	addwfc	fsr2h,f,c
 12966   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 12967   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12968   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12969   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12970   0018F2  0E9A               	movlw	154
 12971   0018F4  6E2E               	movwf	___flge@ff2^0,c
 12972   0018F6  0E99               	movlw	153
 12973   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12974   0018FA  0E19               	movlw	25
 12975   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 12976   0018FE  0E3E               	movlw	62
 12977   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 12978   001902  ECB3  F025         	call	___flge	;wreg free
 12979   001906  A0D8               	btfss	status,0,c
 12980   001908  EF88  F00C         	goto	u5531
 12981   00190C  EF8A  F00C         	goto	u5530
 12982   001910                     u5531:
 12983   001910  EF8C  F00C         	goto	l5548
 12984   001914                     u5530:
 12985   001914  EFBA  F00A         	goto	l5462
 12986   001918                     l5548:
 12987                           
 12988                           ;color.c: 223:             return 7;
 12989   001918  0E00               	movlw	0
 12990   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12991   00191C  0E07               	movlw	7
 12992   00191E  6E4B               	movwf	?_Colour_decider^0,c
 12993   001920  EF96  F00C         	goto	l76
 12994   001924                     l5552:
 12995                           
 12996                           ;color.c: 227:         return 10;
 12997   001924  0E00               	movlw	0
 12998   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12999   001928  0E0A               	movlw	10
 13000   00192A  6E4B               	movwf	?_Colour_decider^0,c
 13001   00192C                     l76:
 13002   00192C  0012               	return		;funcret
 13003   00192E                     __end_of_Colour_decider:
 13004                           	callstack 0
 13005                           
 13006 ;; *************** function ___xxtofl *****************
 13007 ;; Defined at:
 13008 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13009 ;; Parameters:    Size  Location     Type
 13010 ;;  sign            1    wreg     unsigned char 
 13011 ;;  val             4    0[COMRAM] long 
 13012 ;; Auto vars:     Size  Location     Type
 13013 ;;  sign            1    8[COMRAM] unsigned char 
 13014 ;;  arg             4   10[COMRAM] unsigned long 
 13015 ;;  exp             1    9[COMRAM] unsigned char 
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  4    0[COMRAM] unsigned char 
 13018 ;; Registers used:
 13019 ;;		wreg, status,2, status,0
 13020 ;; Tracked objects:
 13021 ;;		On entry : 0/0
 13022 ;;		On exit  : 0/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13026 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13028 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13029 ;;Total ram usage:       14 bytes
 13030 ;; Hardware stack levels used: 1
 13031 ;; This function calls:
 13032 ;;		Nothing
 13033 ;; This function is called by:
 13034 ;;		_colour_rel
 13035 ;;		_Colour_decider
 13036 ;;		_reverseOneBlock
 13037 ;;		_ForwardOneBlock
 13038 ;;		_Forwardhalfblock
 13039 ;;		_Backhalfblock
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text72
 13044   004454                     __ptext72:
 13045                           	callstack 0
 13046   004454                     ___xxtofl:
 13047                           	callstack 29
 13048                           
 13049                           ;incstack = 0
 13050                           ;___xxtofl@sign stored from wreg
 13051   004454  6E09               	movwf	___xxtofl@sign^0,c
 13052   004456  5009               	movf	___xxtofl@sign^0,w,c
 13053   004458  B4D8               	btfsc	status,2,c
 13054   00445A  EF31  F022         	goto	u5101
 13055   00445E  EF33  F022         	goto	u5100
 13056   004462                     u5101:
 13057   004462  EF55  F022         	goto	l1360
 13058   004466                     u5100:
 13059   004466  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13060   004468  EF3A  F022         	goto	u5110
 13061   00446C  EF38  F022         	goto	u5111
 13062   004470                     u5111:
 13063   004470  EF55  F022         	goto	l1360
 13064   004474                     u5110:
 13065   004474  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13066   004478  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13067   00447C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13068   004480  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13069   004484  1E05               	comf	??___xxtofl^0,f,c
 13070   004486  1E06               	comf	(??___xxtofl+1)^0,f,c
 13071   004488  1E07               	comf	(??___xxtofl+2)^0,f,c
 13072   00448A  1E08               	comf	(??___xxtofl+3)^0,f,c
 13073   00448C  2A05               	incf	??___xxtofl^0,f,c
 13074   00448E  0E00               	movlw	0
 13075   004490  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13076   004492  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13077   004494  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13078   004496  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13079   00449A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13080   00449E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13081   0044A2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13082   0044A6  EF5D  F022         	goto	l5274
 13083   0044AA                     l1360:
 13084   0044AA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13085   0044AE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13086   0044B2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13087   0044B6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13088   0044BA                     l5274:
 13089   0044BA  5001               	movf	___xxtofl@val^0,w,c
 13090   0044BC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13091   0044BE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13092   0044C0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13093   0044C2  A4D8               	btfss	status,2,c
 13094   0044C4  EF66  F022         	goto	u5121
 13095   0044C8  EF68  F022         	goto	u5120
 13096   0044CC                     u5121:
 13097   0044CC  EF72  F022         	goto	l5280
 13098   0044D0                     u5120:
 13099   0044D0  0E00               	movlw	0
 13100   0044D2  6E01               	movwf	?___xxtofl^0,c
 13101   0044D4  0E00               	movlw	0
 13102   0044D6  6E02               	movwf	(?___xxtofl+1)^0,c
 13103   0044D8  0E00               	movlw	0
 13104   0044DA  6E03               	movwf	(?___xxtofl+2)^0,c
 13105   0044DC  0E00               	movlw	0
 13106   0044DE  6E04               	movwf	(?___xxtofl+3)^0,c
 13107   0044E0  EF03  F023         	goto	l1363
 13108   0044E4                     l5280:
 13109   0044E4  0E96               	movlw	150
 13110   0044E6  6E0A               	movwf	___xxtofl@exp^0,c
 13111   0044E8  EF7C  F022         	goto	l5284
 13112   0044EC                     l5282:
 13113   0044EC  2A0A               	incf	___xxtofl@exp^0,f,c
 13114   0044EE  90D8               	bcf	status,0,c
 13115   0044F0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13116   0044F2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13117   0044F4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13118   0044F6  320B               	rrcf	___xxtofl@arg^0,f,c
 13119   0044F8                     l5284:
 13120   0044F8  0E00               	movlw	0
 13121   0044FA  140B               	andwf	___xxtofl@arg^0,w,c
 13122   0044FC  6E05               	movwf	??___xxtofl^0,c
 13123   0044FE  0E00               	movlw	0
 13124   004500  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13125   004502  6E06               	movwf	(??___xxtofl+1)^0,c
 13126   004504  0E00               	movlw	0
 13127   004506  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13128   004508  6E07               	movwf	(??___xxtofl+2)^0,c
 13129   00450A  0EFE               	movlw	254
 13130   00450C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13131   00450E  6E08               	movwf	(??___xxtofl+3)^0,c
 13132   004510  5005               	movf	??___xxtofl^0,w,c
 13133   004512  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13134   004514  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13135   004516  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13136   004518  A4D8               	btfss	status,2,c
 13137   00451A  EF91  F022         	goto	u5131
 13138   00451E  EF93  F022         	goto	u5130
 13139   004522                     u5131:
 13140   004522  EF76  F022         	goto	l5282
 13141   004526                     u5130:
 13142   004526  EFA1  F022         	goto	l1367
 13143   00452A                     l5286:
 13144   00452A  2A0A               	incf	___xxtofl@exp^0,f,c
 13145   00452C  0E01               	movlw	1
 13146   00452E  260B               	addwf	___xxtofl@arg^0,f,c
 13147   004530  0E00               	movlw	0
 13148   004532  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13149   004534  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13150   004536  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13151   004538  90D8               	bcf	status,0,c
 13152   00453A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13153   00453C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13154   00453E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13155   004540  320B               	rrcf	___xxtofl@arg^0,f,c
 13156   004542                     l1367:
 13157   004542  0E00               	movlw	0
 13158   004544  140B               	andwf	___xxtofl@arg^0,w,c
 13159   004546  6E05               	movwf	??___xxtofl^0,c
 13160   004548  0E00               	movlw	0
 13161   00454A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13162   00454C  6E06               	movwf	(??___xxtofl+1)^0,c
 13163   00454E  0E00               	movlw	0
 13164   004550  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13165   004552  6E07               	movwf	(??___xxtofl+2)^0,c
 13166   004554  0EFF               	movlw	255
 13167   004556  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13168   004558  6E08               	movwf	(??___xxtofl+3)^0,c
 13169   00455A  5005               	movf	??___xxtofl^0,w,c
 13170   00455C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13171   00455E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13172   004560  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13173   004562  A4D8               	btfss	status,2,c
 13174   004564  EFB6  F022         	goto	u5141
 13175   004568  EFB8  F022         	goto	u5140
 13176   00456C                     u5141:
 13177   00456C  EF95  F022         	goto	l5286
 13178   004570                     u5140:
 13179   004570  EFC0  F022         	goto	l5294
 13180   004574                     l5292:
 13181   004574  060A               	decf	___xxtofl@exp^0,f,c
 13182   004576  90D8               	bcf	status,0,c
 13183   004578  360B               	rlcf	___xxtofl@arg^0,f,c
 13184   00457A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13185   00457C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13186   00457E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13187   004580                     l5294:
 13188   004580  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13189   004582  EFC5  F022         	goto	u5151
 13190   004586  EFC7  F022         	goto	u5150
 13191   00458A                     u5151:
 13192   00458A  EFCF  F022         	goto	l1374
 13193   00458E                     u5150:
 13194   00458E  0E02               	movlw	2
 13195   004590  600A               	cpfslt	___xxtofl@exp^0,c
 13196   004592  EFCD  F022         	goto	u5161
 13197   004596  EFCF  F022         	goto	u5160
 13198   00459A                     u5161:
 13199   00459A  EFBA  F022         	goto	l5292
 13200   00459E                     u5160:
 13201   00459E                     l1374:
 13202   00459E  B00A               	btfsc	___xxtofl@exp^0,0,c
 13203   0045A0  EFD4  F022         	goto	u5171
 13204   0045A4  EFD6  F022         	goto	u5170
 13205   0045A8                     u5171:
 13206   0045A8  EFD7  F022         	goto	l5300
 13207   0045AC                     u5170:
 13208   0045AC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13209   0045AE                     l5300:
 13210   0045AE  90D8               	bcf	status,0,c
 13211   0045B0  320A               	rrcf	___xxtofl@exp^0,f,c
 13212   0045B2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13213   0045B6  6A06               	clrf	(??___xxtofl+1)^0,c
 13214   0045B8  6A07               	clrf	(??___xxtofl+2)^0,c
 13215   0045BA  6A08               	clrf	(??___xxtofl+3)^0,c
 13216   0045BC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13217   0045C0  6A07               	clrf	(??___xxtofl+2)^0,c
 13218   0045C2  6A06               	clrf	(??___xxtofl+1)^0,c
 13219   0045C4  6A05               	clrf	??___xxtofl^0,c
 13220   0045C6  5005               	movf	??___xxtofl^0,w,c
 13221   0045C8  120B               	iorwf	___xxtofl@arg^0,f,c
 13222   0045CA  5006               	movf	(??___xxtofl+1)^0,w,c
 13223   0045CC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13224   0045CE  5007               	movf	(??___xxtofl+2)^0,w,c
 13225   0045D0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13226   0045D2  5008               	movf	(??___xxtofl+3)^0,w,c
 13227   0045D4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13228   0045D6  5009               	movf	___xxtofl@sign^0,w,c
 13229   0045D8  B4D8               	btfsc	status,2,c
 13230   0045DA  EFF1  F022         	goto	u5181
 13231   0045DE  EFF3  F022         	goto	u5180
 13232   0045E2                     u5181:
 13233   0045E2  EFFB  F022         	goto	l5310
 13234   0045E6                     u5180:
 13235   0045E6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13236   0045E8  EFFA  F022         	goto	u5190
 13237   0045EC  EFF8  F022         	goto	u5191
 13238   0045F0                     u5191:
 13239   0045F0  EFFB  F022         	goto	l5310
 13240   0045F4                     u5190:
 13241   0045F4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13242   0045F6                     l5310:
 13243   0045F6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13244   0045FA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13245   0045FE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13246   004602  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13247   004606                     l1363:
 13248   004606  0012               	return		;funcret
 13249   004608                     __end_of___xxtofl:
 13250                           	callstack 0
 13251                           
 13252 ;; *************** function ___flsub *****************
 13253 ;; Defined at:
 13254 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  b               4   41[COMRAM] unsigned char 
 13257 ;;  a               4   45[COMRAM] unsigned char 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  4   41[COMRAM] unsigned char 
 13262 ;; Registers used:
 13263 ;;		wreg, status,2, status,0, cstack
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/0
 13266 ;;		On exit  : 0/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13269 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13272 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13273 ;;Total ram usage:        8 bytes
 13274 ;; Hardware stack levels used: 1
 13275 ;; Hardware stack levels required when called: 1
 13276 ;; This function calls:
 13277 ;;		___fladd
 13278 ;; This function is called by:
 13279 ;;		_Colour_decider
 13280 ;;		_efgtoa
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text73
 13285   005D2C                     __ptext73:
 13286                           	callstack 0
 13287   005D2C                     ___flsub:
 13288                           	callstack 25
 13289   005D2C  0E00               	movlw	0
 13290   005D2E  1A2E               	xorwf	___flsub@a^0,f,c
 13291   005D30  0E00               	movlw	0
 13292   005D32  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13293   005D34  0E00               	movlw	0
 13294   005D36  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13295   005D38  0E80               	movlw	128
 13296   005D3A  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13297   005D3C  C02A  F001         	movff	___flsub@b,___fladd@b
 13298   005D40  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13299   005D44  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13300   005D48  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13301   005D4C  C02E  F005         	movff	___flsub@a,___fladd@a
 13302   005D50  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13303   005D54  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13304   005D58  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13305   005D5C  EC26  F014         	call	___fladd	;wreg free
 13306   005D60  C001  F02A         	movff	?___fladd,?___flsub
 13307   005D64  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13308   005D68  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13309   005D6C  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13310   005D70  0012               	return		;funcret
 13311   005D72                     __end_of___flsub:
 13312                           	callstack 0
 13313                           
 13314 ;; *************** function ___fladd *****************
 13315 ;; Defined at:
 13316 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  b               4    0[COMRAM] unsigned char 
 13319 ;;  a               4    4[COMRAM] unsigned char 
 13320 ;; Auto vars:     Size  Location     Type
 13321 ;;  grs             1   15[COMRAM] unsigned char 
 13322 ;;  bexp            1   14[COMRAM] unsigned char 
 13323 ;;  aexp            1   13[COMRAM] unsigned char 
 13324 ;;  signs           1   12[COMRAM] unsigned char 
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  4    0[COMRAM] unsigned char 
 13327 ;; Registers used:
 13328 ;;		wreg, status,2, status,0
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13335 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13338 ;;Total ram usage:       16 bytes
 13339 ;; Hardware stack levels used: 1
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_colour_rel
 13344 ;;		_Colour_decider
 13345 ;;		___flsub
 13346 ;;		_efgtoa
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text74
 13351   00284C                     __ptext74:
 13352                           	callstack 0
 13353   00284C                     ___fladd:
 13354                           	callstack 25
 13355   00284C  5004               	movf	(___fladd@b+3)^0,w,c
 13356   00284E  0B80               	andlw	128
 13357   002850  6E0D               	movwf	___fladd@signs^0,c
 13358   002852  5004               	movf	(___fladd@b+3)^0,w,c
 13359   002854  2404               	addwf	(___fladd@b+3)^0,w,c
 13360   002856  6E0F               	movwf	___fladd@bexp^0,c
 13361   002858  AE03               	btfss	(___fladd@b+2)^0,7,c
 13362   00285A  EF31  F014         	goto	u3061
 13363   00285E  EF33  F014         	goto	u3060
 13364   002862                     u3061:
 13365   002862  EF34  F014         	goto	l3916
 13366   002866                     u3060:
 13367   002866  800F               	bsf	___fladd@bexp^0,0,c
 13368   002868                     l3916:
 13369   002868  500F               	movf	___fladd@bexp^0,w,c
 13370   00286A  B4D8               	btfsc	status,2,c
 13371   00286C  EF3A  F014         	goto	u3071
 13372   002870  EF3C  F014         	goto	u3070
 13373   002874                     u3071:
 13374   002874  EF51  F014         	goto	l3926
 13375   002878                     u3070:
 13376   002878  280F               	incf	___fladd@bexp^0,w,c
 13377   00287A  A4D8               	btfss	status,2,c
 13378   00287C  EF42  F014         	goto	u3081
 13379   002880  EF44  F014         	goto	u3080
 13380   002884                     u3081:
 13381   002884  EF4C  F014         	goto	l3922
 13382   002888                     u3080:
 13383   002888  0E00               	movlw	0
 13384   00288A  6E01               	movwf	___fladd@b^0,c
 13385   00288C  0E00               	movlw	0
 13386   00288E  6E02               	movwf	(___fladd@b+1)^0,c
 13387   002890  0E00               	movlw	0
 13388   002892  6E03               	movwf	(___fladd@b+2)^0,c
 13389   002894  0E00               	movlw	0
 13390   002896  6E04               	movwf	(___fladd@b+3)^0,c
 13391   002898                     l3922:
 13392   002898  8E03               	bsf	(___fladd@b+2)^0,7,c
 13393   00289A  0E00               	movlw	0
 13394   00289C  6E04               	movwf	(___fladd@b+3)^0,c
 13395   00289E  EF59  F014         	goto	l3928
 13396   0028A2                     l3926:
 13397   0028A2  0E00               	movlw	0
 13398   0028A4  6E01               	movwf	___fladd@b^0,c
 13399   0028A6  0E00               	movlw	0
 13400   0028A8  6E02               	movwf	(___fladd@b+1)^0,c
 13401   0028AA  0E00               	movlw	0
 13402   0028AC  6E03               	movwf	(___fladd@b+2)^0,c
 13403   0028AE  0E00               	movlw	0
 13404   0028B0  6E04               	movwf	(___fladd@b+3)^0,c
 13405   0028B2                     l3928:
 13406   0028B2  5008               	movf	(___fladd@a+3)^0,w,c
 13407   0028B4  0B80               	andlw	128
 13408   0028B6  6E0E               	movwf	___fladd@aexp^0,c
 13409   0028B8  500D               	movf	___fladd@signs^0,w,c
 13410   0028BA  180E               	xorwf	___fladd@aexp^0,w,c
 13411   0028BC  B4D8               	btfsc	status,2,c
 13412   0028BE  EF63  F014         	goto	u3091
 13413   0028C2  EF65  F014         	goto	u3090
 13414   0028C6                     u3091:
 13415   0028C6  EF66  F014         	goto	l3934
 13416   0028CA                     u3090:
 13417   0028CA  8C0D               	bsf	___fladd@signs^0,6,c
 13418   0028CC                     l3934:
 13419   0028CC  5008               	movf	(___fladd@a+3)^0,w,c
 13420   0028CE  2408               	addwf	(___fladd@a+3)^0,w,c
 13421   0028D0  6E0E               	movwf	___fladd@aexp^0,c
 13422   0028D2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13423   0028D4  EF6E  F014         	goto	u3101
 13424   0028D8  EF70  F014         	goto	u3100
 13425   0028DC                     u3101:
 13426   0028DC  EF71  F014         	goto	l3940
 13427   0028E0                     u3100:
 13428   0028E0  800E               	bsf	___fladd@aexp^0,0,c
 13429   0028E2                     l3940:
 13430   0028E2  500E               	movf	___fladd@aexp^0,w,c
 13431   0028E4  B4D8               	btfsc	status,2,c
 13432   0028E6  EF77  F014         	goto	u3111
 13433   0028EA  EF79  F014         	goto	u3110
 13434   0028EE                     u3111:
 13435   0028EE  EF8E  F014         	goto	l3950
 13436   0028F2                     u3110:
 13437   0028F2  280E               	incf	___fladd@aexp^0,w,c
 13438   0028F4  A4D8               	btfss	status,2,c
 13439   0028F6  EF7F  F014         	goto	u3121
 13440   0028FA  EF81  F014         	goto	u3120
 13441   0028FE                     u3121:
 13442   0028FE  EF89  F014         	goto	l3946
 13443   002902                     u3120:
 13444   002902  0E00               	movlw	0
 13445   002904  6E05               	movwf	___fladd@a^0,c
 13446   002906  0E00               	movlw	0
 13447   002908  6E06               	movwf	(___fladd@a+1)^0,c
 13448   00290A  0E00               	movlw	0
 13449   00290C  6E07               	movwf	(___fladd@a+2)^0,c
 13450   00290E  0E00               	movlw	0
 13451   002910  6E08               	movwf	(___fladd@a+3)^0,c
 13452   002912                     l3946:
 13453   002912  8E07               	bsf	(___fladd@a+2)^0,7,c
 13454   002914  0E00               	movlw	0
 13455   002916  6E08               	movwf	(___fladd@a+3)^0,c
 13456   002918  EF96  F014         	goto	l3952
 13457   00291C                     l3950:
 13458   00291C  0E00               	movlw	0
 13459   00291E  6E05               	movwf	___fladd@a^0,c
 13460   002920  0E00               	movlw	0
 13461   002922  6E06               	movwf	(___fladd@a+1)^0,c
 13462   002924  0E00               	movlw	0
 13463   002926  6E07               	movwf	(___fladd@a+2)^0,c
 13464   002928  0E00               	movlw	0
 13465   00292A  6E08               	movwf	(___fladd@a+3)^0,c
 13466   00292C                     l3952:
 13467   00292C  500F               	movf	___fladd@bexp^0,w,c
 13468   00292E  5C0E               	subwf	___fladd@aexp^0,w,c
 13469   002930  B0D8               	btfsc	status,0,c
 13470   002932  EF9D  F014         	goto	u3131
 13471   002936  EF9F  F014         	goto	u3130
 13472   00293A                     u3131:
 13473   00293A  EFC6  F014         	goto	l3988
 13474   00293E                     u3130:
 13475   00293E  AC0D               	btfss	___fladd@signs^0,6,c
 13476   002940  EFA4  F014         	goto	u3141
 13477   002944  EFA6  F014         	goto	u3140
 13478   002948                     u3141:
 13479   002948  EFA8  F014         	goto	l3958
 13480   00294C                     u3140:
 13481   00294C  0E80               	movlw	128
 13482   00294E  1A0D               	xorwf	___fladd@signs^0,f,c
 13483   002950                     l3958:
 13484   002950  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13485   002954  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13486   002958  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13487   00295C  C001  F010         	movff	___fladd@b,___fladd@grs
 13488   002960  C005  F001         	movff	___fladd@a,___fladd@b
 13489   002964  C010  F005         	movff	___fladd@grs,___fladd@a
 13490   002968  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13491   00296C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13492   002970  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13493   002974  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13494   002978  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13495   00297C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13496   002980  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13497   002984  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13498   002988  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13499   00298C                     l3988:
 13500   00298C  0E00               	movlw	0
 13501   00298E  6E10               	movwf	___fladd@grs^0,c
 13502   002990  500F               	movf	___fladd@bexp^0,w,c
 13503   002992  C00E  F009         	movff	___fladd@aexp,??___fladd
 13504   002996  6A0A               	clrf	(??___fladd+1)^0,c
 13505   002998  5E09               	subwf	??___fladd^0,f,c
 13506   00299A  0E00               	movlw	0
 13507   00299C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13508   00299E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13509   0029A0  EFDB  F014         	goto	u3151
 13510   0029A4  500A               	movf	(??___fladd+1)^0,w,c
 13511   0029A6  E109               	bnz	u3150
 13512   0029A8  0E1A               	movlw	26
 13513   0029AA  5C09               	subwf	??___fladd^0,w,c
 13514   0029AC  A0D8               	btfss	status,0,c
 13515   0029AE  EFDB  F014         	goto	u3151
 13516   0029B2  EFDD  F014         	goto	u3150
 13517   0029B6                     u3151:
 13518   0029B6  EF14  F015         	goto	l1234
 13519   0029BA                     u3150:
 13520   0029BA  5001               	movf	___fladd@b^0,w,c
 13521   0029BC  1002               	iorwf	(___fladd@b+1)^0,w,c
 13522   0029BE  1003               	iorwf	(___fladd@b+2)^0,w,c
 13523   0029C0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13524   0029C2  A4D8               	btfss	status,2,c
 13525   0029C4  EFE6  F014         	goto	u3161
 13526   0029C8  EFE9  F014         	goto	u3160
 13527   0029CC                     u3161:
 13528   0029CC  0E01               	movlw	1
 13529   0029CE  EFEA  F014         	goto	u3170
 13530   0029D2                     u3160:
 13531   0029D2  0E00               	movlw	0
 13532   0029D4                     u3170:
 13533   0029D4  6E10               	movwf	___fladd@grs^0,c
 13534   0029D6  0E00               	movlw	0
 13535   0029D8  6E01               	movwf	___fladd@b^0,c
 13536   0029DA  0E00               	movlw	0
 13537   0029DC  6E02               	movwf	(___fladd@b+1)^0,c
 13538   0029DE  0E00               	movlw	0
 13539   0029E0  6E03               	movwf	(___fladd@b+2)^0,c
 13540   0029E2  0E00               	movlw	0
 13541   0029E4  6E04               	movwf	(___fladd@b+3)^0,c
 13542   0029E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13543   0029EA  EF1D  F015         	goto	l1233
 13544   0029EE                     l1235:
 13545   0029EE  A010               	btfss	___fladd@grs^0,0,c
 13546   0029F0  EFFC  F014         	goto	u3181
 13547   0029F4  EFFE  F014         	goto	u3180
 13548   0029F8                     u3181:
 13549   0029F8  EF04  F015         	goto	l4000
 13550   0029FC                     u3180:
 13551   0029FC  90D8               	bcf	status,0,c
 13552   0029FE  3010               	rrcf	___fladd@grs^0,w,c
 13553   002A00  0901               	iorlw	1
 13554   002A02  6E10               	movwf	___fladd@grs^0,c
 13555   002A04  EF06  F015         	goto	l4002
 13556   002A08                     l4000:
 13557   002A08  90D8               	bcf	status,0,c
 13558   002A0A  3210               	rrcf	___fladd@grs^0,f,c
 13559   002A0C                     l4002:
 13560   002A0C  A001               	btfss	___fladd@b^0,0,c
 13561   002A0E  EF0B  F015         	goto	u3191
 13562   002A12  EF0D  F015         	goto	u3190
 13563   002A16                     u3191:
 13564   002A16  EF0E  F015         	goto	l4006
 13565   002A1A                     u3190:
 13566   002A1A  8E10               	bsf	___fladd@grs^0,7,c
 13567   002A1C                     l4006:
 13568   002A1C  3404               	rlcf	(___fladd@b+3)^0,w,c
 13569   002A1E  3204               	rrcf	(___fladd@b+3)^0,f,c
 13570   002A20  3203               	rrcf	(___fladd@b+2)^0,f,c
 13571   002A22  3202               	rrcf	(___fladd@b+1)^0,f,c
 13572   002A24  3201               	rrcf	___fladd@b^0,f,c
 13573   002A26  2A0F               	incf	___fladd@bexp^0,f,c
 13574   002A28                     l1234:
 13575   002A28  500E               	movf	___fladd@aexp^0,w,c
 13576   002A2A  5C0F               	subwf	___fladd@bexp^0,w,c
 13577   002A2C  A0D8               	btfss	status,0,c
 13578   002A2E  EF1B  F015         	goto	u3201
 13579   002A32  EF1D  F015         	goto	u3200
 13580   002A36                     u3201:
 13581   002A36  EFF7  F014         	goto	l1235
 13582   002A3A                     u3200:
 13583   002A3A                     l1233:
 13584   002A3A  BC0D               	btfsc	___fladd@signs^0,6,c
 13585   002A3C  EF22  F015         	goto	u3211
 13586   002A40  EF24  F015         	goto	u3210
 13587   002A44                     u3211:
 13588   002A44  EF64  F015         	goto	l4034
 13589   002A48                     u3210:
 13590   002A48  500F               	movf	___fladd@bexp^0,w,c
 13591   002A4A  A4D8               	btfss	status,2,c
 13592   002A4C  EF2A  F015         	goto	u3221
 13593   002A50  EF2C  F015         	goto	u3220
 13594   002A54                     u3221:
 13595   002A54  EF36  F015         	goto	l4016
 13596   002A58                     u3220:
 13597   002A58  0E00               	movlw	0
 13598   002A5A  6E01               	movwf	?___fladd^0,c
 13599   002A5C  0E00               	movlw	0
 13600   002A5E  6E02               	movwf	(?___fladd+1)^0,c
 13601   002A60  0E00               	movlw	0
 13602   002A62  6E03               	movwf	(?___fladd+2)^0,c
 13603   002A64  0E00               	movlw	0
 13604   002A66  6E04               	movwf	(?___fladd+3)^0,c
 13605   002A68  EF85  F016         	goto	l1242
 13606   002A6C                     l4016:
 13607   002A6C  5005               	movf	___fladd@a^0,w,c
 13608   002A6E  2601               	addwf	___fladd@b^0,f,c
 13609   002A70  5006               	movf	(___fladd@a+1)^0,w,c
 13610   002A72  2202               	addwfc	(___fladd@b+1)^0,f,c
 13611   002A74  5007               	movf	(___fladd@a+2)^0,w,c
 13612   002A76  2203               	addwfc	(___fladd@b+2)^0,f,c
 13613   002A78  5008               	movf	(___fladd@a+3)^0,w,c
 13614   002A7A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13615   002A7C  A004               	btfss	(___fladd@b+3)^0,0,c
 13616   002A7E  EF43  F015         	goto	u3231
 13617   002A82  EF45  F015         	goto	u3230
 13618   002A86                     u3231:
 13619   002A86  EFF1  F015         	goto	l4070
 13620   002A8A                     u3230:
 13621   002A8A  A010               	btfss	___fladd@grs^0,0,c
 13622   002A8C  EF4A  F015         	goto	u3241
 13623   002A90  EF4C  F015         	goto	u3240
 13624   002A94                     u3241:
 13625   002A94  EF52  F015         	goto	l4024
 13626   002A98                     u3240:
 13627   002A98  90D8               	bcf	status,0,c
 13628   002A9A  3010               	rrcf	___fladd@grs^0,w,c
 13629   002A9C  0901               	iorlw	1
 13630   002A9E  6E10               	movwf	___fladd@grs^0,c
 13631   002AA0  EF54  F015         	goto	l4026
 13632   002AA4                     l4024:
 13633   002AA4  90D8               	bcf	status,0,c
 13634   002AA6  3210               	rrcf	___fladd@grs^0,f,c
 13635   002AA8                     l4026:
 13636   002AA8  A001               	btfss	___fladd@b^0,0,c
 13637   002AAA  EF59  F015         	goto	u3251
 13638   002AAE  EF5B  F015         	goto	u3250
 13639   002AB2                     u3251:
 13640   002AB2  EF5C  F015         	goto	l4030
 13641   002AB6                     u3250:
 13642   002AB6  8E10               	bsf	___fladd@grs^0,7,c
 13643   002AB8                     l4030:
 13644   002AB8  3404               	rlcf	(___fladd@b+3)^0,w,c
 13645   002ABA  3204               	rrcf	(___fladd@b+3)^0,f,c
 13646   002ABC  3203               	rrcf	(___fladd@b+2)^0,f,c
 13647   002ABE  3202               	rrcf	(___fladd@b+1)^0,f,c
 13648   002AC0  3201               	rrcf	___fladd@b^0,f,c
 13649   002AC2  2A0F               	incf	___fladd@bexp^0,f,c
 13650   002AC4  EFF1  F015         	goto	l4070
 13651   002AC8                     l4034:
 13652   002AC8  5005               	movf	___fladd@a^0,w,c
 13653   002ACA  5C01               	subwf	___fladd@b^0,w,c
 13654   002ACC  5006               	movf	(___fladd@a+1)^0,w,c
 13655   002ACE  5802               	subwfb	(___fladd@b+1)^0,w,c
 13656   002AD0  5007               	movf	(___fladd@a+2)^0,w,c
 13657   002AD2  5803               	subwfb	(___fladd@b+2)^0,w,c
 13658   002AD4  5004               	movf	(___fladd@b+3)^0,w,c
 13659   002AD6  0A80               	xorlw	128
 13660   002AD8  6E09               	movwf	??___fladd^0,c
 13661   002ADA  5008               	movf	(___fladd@a+3)^0,w,c
 13662   002ADC  0A80               	xorlw	128
 13663   002ADE  5809               	subwfb	??___fladd^0,w,c
 13664   002AE0  B0D8               	btfsc	status,0,c
 13665   002AE2  EF75  F015         	goto	u3261
 13666   002AE6  EF77  F015         	goto	u3260
 13667   002AEA                     u3261:
 13668   002AEA  EFA2  F015         	goto	l4044
 13669   002AEE                     u3260:
 13670   002AEE  5001               	movf	___fladd@b^0,w,c
 13671   002AF0  5C05               	subwf	___fladd@a^0,w,c
 13672   002AF2  6E09               	movwf	??___fladd^0,c
 13673   002AF4  5002               	movf	(___fladd@b+1)^0,w,c
 13674   002AF6  5806               	subwfb	(___fladd@a+1)^0,w,c
 13675   002AF8  6E0A               	movwf	(??___fladd+1)^0,c
 13676   002AFA  5003               	movf	(___fladd@b+2)^0,w,c
 13677   002AFC  5807               	subwfb	(___fladd@a+2)^0,w,c
 13678   002AFE  6E0B               	movwf	(??___fladd+2)^0,c
 13679   002B00  5004               	movf	(___fladd@b+3)^0,w,c
 13680   002B02  5808               	subwfb	(___fladd@a+3)^0,w,c
 13681   002B04  6E0C               	movwf	(??___fladd+3)^0,c
 13682   002B06  0EFF               	movlw	255
 13683   002B08  2409               	addwf	??___fladd^0,w,c
 13684   002B0A  6E01               	movwf	___fladd@b^0,c
 13685   002B0C  0EFF               	movlw	255
 13686   002B0E  200A               	addwfc	(??___fladd+1)^0,w,c
 13687   002B10  6E02               	movwf	(___fladd@b+1)^0,c
 13688   002B12  0EFF               	movlw	255
 13689   002B14  200B               	addwfc	(??___fladd+2)^0,w,c
 13690   002B16  6E03               	movwf	(___fladd@b+2)^0,c
 13691   002B18  0EFF               	movlw	255
 13692   002B1A  200C               	addwfc	(??___fladd+3)^0,w,c
 13693   002B1C  6E04               	movwf	(___fladd@b+3)^0,c
 13694   002B1E  0E80               	movlw	128
 13695   002B20  1A0D               	xorwf	___fladd@signs^0,f,c
 13696   002B22  6C10               	negf	___fladd@grs^0,c
 13697   002B24  5010               	movf	___fladd@grs^0,w,c
 13698   002B26  A4D8               	btfss	status,2,c
 13699   002B28  EF98  F015         	goto	u3271
 13700   002B2C  EF9A  F015         	goto	u3270
 13701   002B30                     u3271:
 13702   002B30  EFAA  F015         	goto	l1250
 13703   002B34                     u3270:
 13704   002B34  0E01               	movlw	1
 13705   002B36  2601               	addwf	___fladd@b^0,f,c
 13706   002B38  0E00               	movlw	0
 13707   002B3A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13708   002B3C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13709   002B3E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13710   002B40  EFAA  F015         	goto	l1250
 13711   002B44                     l4044:
 13712   002B44  5005               	movf	___fladd@a^0,w,c
 13713   002B46  5E01               	subwf	___fladd@b^0,f,c
 13714   002B48  5006               	movf	(___fladd@a+1)^0,w,c
 13715   002B4A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13716   002B4C  5007               	movf	(___fladd@a+2)^0,w,c
 13717   002B4E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13718   002B50  5008               	movf	(___fladd@a+3)^0,w,c
 13719   002B52  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13720   002B54                     l1250:
 13721   002B54  5001               	movf	___fladd@b^0,w,c
 13722   002B56  1002               	iorwf	(___fladd@b+1)^0,w,c
 13723   002B58  1003               	iorwf	(___fladd@b+2)^0,w,c
 13724   002B5A  1004               	iorwf	(___fladd@b+3)^0,w,c
 13725   002B5C  A4D8               	btfss	status,2,c
 13726   002B5E  EFB3  F015         	goto	u3281
 13727   002B62  EFB5  F015         	goto	u3280
 13728   002B66                     u3281:
 13729   002B66  EFEA  F015         	goto	l4068
 13730   002B6A                     u3280:
 13731   002B6A  5010               	movf	___fladd@grs^0,w,c
 13732   002B6C  A4D8               	btfss	status,2,c
 13733   002B6E  EFBB  F015         	goto	u3291
 13734   002B72  EFBD  F015         	goto	u3290
 13735   002B76                     u3291:
 13736   002B76  EFEA  F015         	goto	l4068
 13737   002B7A                     u3290:
 13738   002B7A  0E00               	movlw	0
 13739   002B7C  6E01               	movwf	?___fladd^0,c
 13740   002B7E  0E00               	movlw	0
 13741   002B80  6E02               	movwf	(?___fladd+1)^0,c
 13742   002B82  0E00               	movlw	0
 13743   002B84  6E03               	movwf	(?___fladd+2)^0,c
 13744   002B86  0E00               	movlw	0
 13745   002B88  6E04               	movwf	(?___fladd+3)^0,c
 13746   002B8A  EF85  F016         	goto	l1242
 13747   002B8E                     l4052:
 13748   002B8E  90D8               	bcf	status,0,c
 13749   002B90  3601               	rlcf	___fladd@b^0,f,c
 13750   002B92  3602               	rlcf	(___fladd@b+1)^0,f,c
 13751   002B94  3603               	rlcf	(___fladd@b+2)^0,f,c
 13752   002B96  3604               	rlcf	(___fladd@b+3)^0,f,c
 13753   002B98  AE10               	btfss	___fladd@grs^0,7,c
 13754   002B9A  EFD1  F015         	goto	u3301
 13755   002B9E  EFD3  F015         	goto	u3300
 13756   002BA2                     u3301:
 13757   002BA2  EFD4  F015         	goto	l4058
 13758   002BA6                     u3300:
 13759   002BA6  8001               	bsf	___fladd@b^0,0,c
 13760   002BA8                     l4058:
 13761   002BA8  A010               	btfss	___fladd@grs^0,0,c
 13762   002BAA  EFD9  F015         	goto	u3311
 13763   002BAE  EFDB  F015         	goto	u3310
 13764   002BB2                     u3311:
 13765   002BB2  EFDF  F015         	goto	l4062
 13766   002BB6                     u3310:
 13767   002BB6  80D8               	bsf	status,0,c
 13768   002BB8  3610               	rlcf	___fladd@grs^0,f,c
 13769   002BBA  EFE1  F015         	goto	l4064
 13770   002BBE                     l4062:
 13771   002BBE  90D8               	bcf	status,0,c
 13772   002BC0  3610               	rlcf	___fladd@grs^0,f,c
 13773   002BC2                     l4064:
 13774   002BC2  500F               	movf	___fladd@bexp^0,w,c
 13775   002BC4  B4D8               	btfsc	status,2,c
 13776   002BC6  EFE7  F015         	goto	u3321
 13777   002BCA  EFE9  F015         	goto	u3320
 13778   002BCE                     u3321:
 13779   002BCE  EFEA  F015         	goto	l4068
 13780   002BD2                     u3320:
 13781   002BD2  060F               	decf	___fladd@bexp^0,f,c
 13782   002BD4                     l4068:
 13783   002BD4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13784   002BD6  EFEF  F015         	goto	u3331
 13785   002BDA  EFF1  F015         	goto	u3330
 13786   002BDE                     u3331:
 13787   002BDE  EFC7  F015         	goto	l4052
 13788   002BE2                     u3330:
 13789   002BE2                     l4070:
 13790   002BE2  0E00               	movlw	0
 13791   002BE4  6E0E               	movwf	___fladd@aexp^0,c
 13792   002BE6  AE10               	btfss	___fladd@grs^0,7,c
 13793   002BE8  EFF8  F015         	goto	u3341
 13794   002BEC  EFFA  F015         	goto	u3340
 13795   002BF0                     u3341:
 13796   002BF0  EF12  F016         	goto	l1259
 13797   002BF4                     u3340:
 13798   002BF4  C010  F009         	movff	___fladd@grs,??___fladd
 13799   002BF8  0E7F               	movlw	127
 13800   002BFA  1609               	andwf	??___fladd^0,f,c
 13801   002BFC  B4D8               	btfsc	status,2,c
 13802   002BFE  EF03  F016         	goto	u3351
 13803   002C02  EF05  F016         	goto	u3350
 13804   002C06                     u3351:
 13805   002C06  EF09  F016         	goto	l1260
 13806   002C0A                     u3350:
 13807   002C0A                     l4076:
 13808   002C0A  0E01               	movlw	1
 13809   002C0C  6E0E               	movwf	___fladd@aexp^0,c
 13810   002C0E  EF12  F016         	goto	l1259
 13811   002C12                     l1260:
 13812   002C12  A001               	btfss	___fladd@b^0,0,c
 13813   002C14  EF0E  F016         	goto	u3361
 13814   002C18  EF10  F016         	goto	u3360
 13815   002C1C                     u3361:
 13816   002C1C  EF12  F016         	goto	l1259
 13817   002C20                     u3360:
 13818   002C20  EF05  F016         	goto	l4076
 13819   002C24                     l1259:
 13820   002C24  500E               	movf	___fladd@aexp^0,w,c
 13821   002C26  B4D8               	btfsc	status,2,c
 13822   002C28  EF18  F016         	goto	u3371
 13823   002C2C  EF1A  F016         	goto	u3370
 13824   002C30                     u3371:
 13825   002C30  EF45  F016         	goto	l4088
 13826   002C34                     u3370:
 13827   002C34  0E01               	movlw	1
 13828   002C36  2601               	addwf	___fladd@b^0,f,c
 13829   002C38  0E00               	movlw	0
 13830   002C3A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13831   002C3C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13832   002C3E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13833   002C40  A004               	btfss	(___fladd@b+3)^0,0,c
 13834   002C42  EF25  F016         	goto	u3381
 13835   002C46  EF27  F016         	goto	u3380
 13836   002C4A                     u3381:
 13837   002C4A  EF45  F016         	goto	l4088
 13838   002C4E                     u3380:
 13839   002C4E  C001  F009         	movff	___fladd@b,??___fladd
 13840   002C52  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13841   002C56  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13842   002C5A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13843   002C5E  340C               	rlcf	(??___fladd+3)^0,w,c
 13844   002C60  320C               	rrcf	(??___fladd+3)^0,f,c
 13845   002C62  320B               	rrcf	(??___fladd+2)^0,f,c
 13846   002C64  320A               	rrcf	(??___fladd+1)^0,f,c
 13847   002C66  3209               	rrcf	??___fladd^0,f,c
 13848   002C68  C009  F001         	movff	??___fladd,___fladd@b
 13849   002C6C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13850   002C70  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13851   002C74  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13852   002C78  280F               	incf	___fladd@bexp^0,w,c
 13853   002C7A  B4D8               	btfsc	status,2,c
 13854   002C7C  EF42  F016         	goto	u3391
 13855   002C80  EF44  F016         	goto	u3390
 13856   002C84                     u3391:
 13857   002C84  EF45  F016         	goto	l4088
 13858   002C88                     u3390:
 13859   002C88  2A0F               	incf	___fladd@bexp^0,f,c
 13860   002C8A                     l4088:
 13861   002C8A  280F               	incf	___fladd@bexp^0,w,c
 13862   002C8C  B4D8               	btfsc	status,2,c
 13863   002C8E  EF4B  F016         	goto	u3401
 13864   002C92  EF4D  F016         	goto	u3400
 13865   002C96                     u3401:
 13866   002C96  EF55  F016         	goto	l4092
 13867   002C9A                     u3400:
 13868   002C9A  500F               	movf	___fladd@bexp^0,w,c
 13869   002C9C  A4D8               	btfss	status,2,c
 13870   002C9E  EF53  F016         	goto	u3411
 13871   002CA2  EF55  F016         	goto	u3410
 13872   002CA6                     u3411:
 13873   002CA6  EF67  F016         	goto	l4096
 13874   002CAA                     u3410:
 13875   002CAA                     l4092:
 13876   002CAA  0E00               	movlw	0
 13877   002CAC  6E01               	movwf	___fladd@b^0,c
 13878   002CAE  0E00               	movlw	0
 13879   002CB0  6E02               	movwf	(___fladd@b+1)^0,c
 13880   002CB2  0E00               	movlw	0
 13881   002CB4  6E03               	movwf	(___fladd@b+2)^0,c
 13882   002CB6  0E00               	movlw	0
 13883   002CB8  6E04               	movwf	(___fladd@b+3)^0,c
 13884   002CBA  500F               	movf	___fladd@bexp^0,w,c
 13885   002CBC  A4D8               	btfss	status,2,c
 13886   002CBE  EF63  F016         	goto	u3421
 13887   002CC2  EF65  F016         	goto	u3420
 13888   002CC6                     u3421:
 13889   002CC6  EF67  F016         	goto	l4096
 13890   002CCA                     u3420:
 13891   002CCA  0E00               	movlw	0
 13892   002CCC  6E0D               	movwf	___fladd@signs^0,c
 13893   002CCE                     l4096:
 13894   002CCE  A00F               	btfss	___fladd@bexp^0,0,c
 13895   002CD0  EF6C  F016         	goto	u3431
 13896   002CD4  EF6E  F016         	goto	u3430
 13897   002CD8                     u3431:
 13898   002CD8  EF71  F016         	goto	l4100
 13899   002CDC                     u3430:
 13900   002CDC  8E03               	bsf	(___fladd@b+2)^0,7,c
 13901   002CDE  EF72  F016         	goto	l4102
 13902   002CE2                     l4100:
 13903   002CE2  9E03               	bcf	(___fladd@b+2)^0,7,c
 13904   002CE4                     l4102:
 13905   002CE4  90D8               	bcf	status,0,c
 13906   002CE6  300F               	rrcf	___fladd@bexp^0,w,c
 13907   002CE8  6E04               	movwf	(___fladd@b+3)^0,c
 13908   002CEA  AE0D               	btfss	___fladd@signs^0,7,c
 13909   002CEC  EF7A  F016         	goto	u3441
 13910   002CF0  EF7C  F016         	goto	u3440
 13911   002CF4                     u3441:
 13912   002CF4  EF7D  F016         	goto	l4108
 13913   002CF8                     u3440:
 13914   002CF8  8E04               	bsf	(___fladd@b+3)^0,7,c
 13915   002CFA                     l4108:
 13916   002CFA  C001  F001         	movff	___fladd@b,?___fladd
 13917   002CFE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13918   002D02  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13919   002D06  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13920   002D0A                     l1242:
 13921   002D0A  0012               	return		;funcret
 13922   002D0C                     __end_of___fladd:
 13923                           	callstack 0
 13924                           
 13925 ;; *************** function ___flmul *****************
 13926 ;; Defined at:
 13927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  b               4   16[COMRAM] unsigned char 
 13930 ;;  a               4   20[COMRAM] unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  prod            4   35[COMRAM] struct .
 13933 ;;  grs             4   29[COMRAM] unsigned long 
 13934 ;;  temp            2   39[COMRAM] struct .
 13935 ;;  bexp            1   34[COMRAM] unsigned char 
 13936 ;;  aexp            1   33[COMRAM] unsigned char 
 13937 ;;  sign            1   28[COMRAM] unsigned char 
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  4   16[COMRAM] unsigned char 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2, status,0, prodl, prodh
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13948 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13950 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13951 ;;Total ram usage:       25 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_Colour_decider
 13957 ;;		_reverseOneBlock
 13958 ;;		_ForwardOneBlock
 13959 ;;		_Forwardhalfblock
 13960 ;;		_efgtoa
 13961 ;;		_Backhalfblock
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965                           	psect	text75
 13966   002D0C                     __ptext75:
 13967                           	callstack 0
 13968   002D0C                     ___flmul:
 13969                           	callstack 26
 13970   002D0C  5014               	movf	(___flmul@b+3)^0,w,c
 13971   002D0E  0B80               	andlw	128
 13972   002D10  6E1D               	movwf	___flmul@sign^0,c
 13973   002D12  5014               	movf	(___flmul@b+3)^0,w,c
 13974   002D14  2414               	addwf	(___flmul@b+3)^0,w,c
 13975   002D16  6E23               	movwf	___flmul@bexp^0,c
 13976   002D18  AE13               	btfss	(___flmul@b+2)^0,7,c
 13977   002D1A  EF91  F016         	goto	u3871
 13978   002D1E  EF93  F016         	goto	u3870
 13979   002D22                     u3871:
 13980   002D22  EF94  F016         	goto	l4382
 13981   002D26                     u3870:
 13982   002D26  8023               	bsf	___flmul@bexp^0,0,c
 13983   002D28                     l4382:
 13984   002D28  5023               	movf	___flmul@bexp^0,w,c
 13985   002D2A  B4D8               	btfsc	status,2,c
 13986   002D2C  EF9A  F016         	goto	u3881
 13987   002D30  EF9C  F016         	goto	u3880
 13988   002D34                     u3881:
 13989   002D34  EFAF  F016         	goto	l4390
 13990   002D38                     u3880:
 13991   002D38  2823               	incf	___flmul@bexp^0,w,c
 13992   002D3A  A4D8               	btfss	status,2,c
 13993   002D3C  EFA2  F016         	goto	u3891
 13994   002D40  EFA4  F016         	goto	u3890
 13995   002D44                     u3891:
 13996   002D44  EFAC  F016         	goto	l4388
 13997   002D48                     u3890:
 13998   002D48  0E00               	movlw	0
 13999   002D4A  6E11               	movwf	___flmul@b^0,c
 14000   002D4C  0E00               	movlw	0
 14001   002D4E  6E12               	movwf	(___flmul@b+1)^0,c
 14002   002D50  0E00               	movlw	0
 14003   002D52  6E13               	movwf	(___flmul@b+2)^0,c
 14004   002D54  0E00               	movlw	0
 14005   002D56  6E14               	movwf	(___flmul@b+3)^0,c
 14006   002D58                     l4388:
 14007   002D58  8E13               	bsf	(___flmul@b+2)^0,7,c
 14008   002D5A  EFB7  F016         	goto	l4392
 14009   002D5E                     l4390:
 14010   002D5E  0E00               	movlw	0
 14011   002D60  6E11               	movwf	___flmul@b^0,c
 14012   002D62  0E00               	movlw	0
 14013   002D64  6E12               	movwf	(___flmul@b+1)^0,c
 14014   002D66  0E00               	movlw	0
 14015   002D68  6E13               	movwf	(___flmul@b+2)^0,c
 14016   002D6A  0E00               	movlw	0
 14017   002D6C  6E14               	movwf	(___flmul@b+3)^0,c
 14018   002D6E                     l4392:
 14019   002D6E  5018               	movf	(___flmul@a+3)^0,w,c
 14020   002D70  0B80               	andlw	128
 14021   002D72  1A1D               	xorwf	___flmul@sign^0,f,c
 14022   002D74  5018               	movf	(___flmul@a+3)^0,w,c
 14023   002D76  2418               	addwf	(___flmul@a+3)^0,w,c
 14024   002D78  6E22               	movwf	___flmul@aexp^0,c
 14025   002D7A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14026   002D7C  EFC2  F016         	goto	u3901
 14027   002D80  EFC4  F016         	goto	u3900
 14028   002D84                     u3901:
 14029   002D84  EFC5  F016         	goto	l4400
 14030   002D88                     u3900:
 14031   002D88  8022               	bsf	___flmul@aexp^0,0,c
 14032   002D8A                     l4400:
 14033   002D8A  5022               	movf	___flmul@aexp^0,w,c
 14034   002D8C  B4D8               	btfsc	status,2,c
 14035   002D8E  EFCB  F016         	goto	u3911
 14036   002D92  EFCD  F016         	goto	u3910
 14037   002D96                     u3911:
 14038   002D96  EFE0  F016         	goto	l4408
 14039   002D9A                     u3910:
 14040   002D9A  2822               	incf	___flmul@aexp^0,w,c
 14041   002D9C  A4D8               	btfss	status,2,c
 14042   002D9E  EFD3  F016         	goto	u3921
 14043   002DA2  EFD5  F016         	goto	u3920
 14044   002DA6                     u3921:
 14045   002DA6  EFDD  F016         	goto	l4406
 14046   002DAA                     u3920:
 14047   002DAA  0E00               	movlw	0
 14048   002DAC  6E15               	movwf	___flmul@a^0,c
 14049   002DAE  0E00               	movlw	0
 14050   002DB0  6E16               	movwf	(___flmul@a+1)^0,c
 14051   002DB2  0E00               	movlw	0
 14052   002DB4  6E17               	movwf	(___flmul@a+2)^0,c
 14053   002DB6  0E00               	movlw	0
 14054   002DB8  6E18               	movwf	(___flmul@a+3)^0,c
 14055   002DBA                     l4406:
 14056   002DBA  8E17               	bsf	(___flmul@a+2)^0,7,c
 14057   002DBC  EFE8  F016         	goto	l1319
 14058   002DC0                     l4408:
 14059   002DC0  0E00               	movlw	0
 14060   002DC2  6E15               	movwf	___flmul@a^0,c
 14061   002DC4  0E00               	movlw	0
 14062   002DC6  6E16               	movwf	(___flmul@a+1)^0,c
 14063   002DC8  0E00               	movlw	0
 14064   002DCA  6E17               	movwf	(___flmul@a+2)^0,c
 14065   002DCC  0E00               	movlw	0
 14066   002DCE  6E18               	movwf	(___flmul@a+3)^0,c
 14067   002DD0                     l1319:
 14068   002DD0  5022               	movf	___flmul@aexp^0,w,c
 14069   002DD2  B4D8               	btfsc	status,2,c
 14070   002DD4  EFEE  F016         	goto	u3931
 14071   002DD8  EFF0  F016         	goto	u3930
 14072   002DDC                     u3931:
 14073   002DDC  EFF8  F016         	goto	l4412
 14074   002DE0                     u3930:
 14075   002DE0  5023               	movf	___flmul@bexp^0,w,c
 14076   002DE2  A4D8               	btfss	status,2,c
 14077   002DE4  EFF6  F016         	goto	u3941
 14078   002DE8  EFF8  F016         	goto	u3940
 14079   002DEC                     u3941:
 14080   002DEC  EF02  F017         	goto	l4416
 14081   002DF0                     u3940:
 14082   002DF0                     l4412:
 14083   002DF0  0E00               	movlw	0
 14084   002DF2  6E11               	movwf	?___flmul^0,c
 14085   002DF4  0E00               	movlw	0
 14086   002DF6  6E12               	movwf	(?___flmul+1)^0,c
 14087   002DF8  0E00               	movlw	0
 14088   002DFA  6E13               	movwf	(?___flmul+2)^0,c
 14089   002DFC  0E00               	movlw	0
 14090   002DFE  6E14               	movwf	(?___flmul+3)^0,c
 14091   002E00  EF9A  F018         	goto	l1323
 14092   002E04                     l4416:
 14093   002E04  5017               	movf	(___flmul@a+2)^0,w,c
 14094   002E06  0211               	mulwf	___flmul@b^0,c
 14095   002E08  CFF3 F028          	movff	prodl,___flmul@temp
 14096   002E0C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14097   002E10  5028               	movf	___flmul@temp^0,w,c
 14098   002E12  6E1E               	movwf	___flmul@grs^0,c
 14099   002E14  6A1F               	clrf	(___flmul@grs+1)^0,c
 14100   002E16  6A20               	clrf	(___flmul@grs+2)^0,c
 14101   002E18  6A21               	clrf	(___flmul@grs+3)^0,c
 14102   002E1A  5029               	movf	(___flmul@temp+1)^0,w,c
 14103   002E1C  6E24               	movwf	___flmul@prod^0,c
 14104   002E1E  6A25               	clrf	(___flmul@prod+1)^0,c
 14105   002E20  6A26               	clrf	(___flmul@prod+2)^0,c
 14106   002E22  6A27               	clrf	(___flmul@prod+3)^0,c
 14107   002E24  5016               	movf	(___flmul@a+1)^0,w,c
 14108   002E26  0212               	mulwf	(___flmul@b+1)^0,c
 14109   002E28  CFF3 F028          	movff	prodl,___flmul@temp
 14110   002E2C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14111   002E30  5028               	movf	___flmul@temp^0,w,c
 14112   002E32  261E               	addwf	___flmul@grs^0,f,c
 14113   002E34  0E00               	movlw	0
 14114   002E36  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14115   002E38  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14116   002E3A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14117   002E3C  5029               	movf	(___flmul@temp+1)^0,w,c
 14118   002E3E  2624               	addwf	___flmul@prod^0,f,c
 14119   002E40  0E00               	movlw	0
 14120   002E42  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14121   002E44  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14122   002E46  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14123   002E48  5015               	movf	___flmul@a^0,w,c
 14124   002E4A  0213               	mulwf	(___flmul@b+2)^0,c
 14125   002E4C  CFF3 F028          	movff	prodl,___flmul@temp
 14126   002E50  CFF4 F029          	movff	prodh,___flmul@temp+1
 14127   002E54  5028               	movf	___flmul@temp^0,w,c
 14128   002E56  261E               	addwf	___flmul@grs^0,f,c
 14129   002E58  0E00               	movlw	0
 14130   002E5A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14131   002E5C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14132   002E5E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14133   002E60  5029               	movf	(___flmul@temp+1)^0,w,c
 14134   002E62  2624               	addwf	___flmul@prod^0,f,c
 14135   002E64  0E00               	movlw	0
 14136   002E66  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14137   002E68  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14138   002E6A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14139   002E6C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14140   002E70  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14141   002E74  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14142   002E78  6A1E               	clrf	___flmul@grs^0,c
 14143   002E7A  5015               	movf	___flmul@a^0,w,c
 14144   002E7C  0212               	mulwf	(___flmul@b+1)^0,c
 14145   002E7E  CFF3 F028          	movff	prodl,___flmul@temp
 14146   002E82  CFF4 F029          	movff	prodh,___flmul@temp+1
 14147   002E86  5028               	movf	___flmul@temp^0,w,c
 14148   002E88  261E               	addwf	___flmul@grs^0,f,c
 14149   002E8A  5029               	movf	(___flmul@temp+1)^0,w,c
 14150   002E8C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14151   002E8E  0E00               	movlw	0
 14152   002E90  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14153   002E92  0E00               	movlw	0
 14154   002E94  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14155   002E96  5016               	movf	(___flmul@a+1)^0,w,c
 14156   002E98  0211               	mulwf	___flmul@b^0,c
 14157   002E9A  CFF3 F028          	movff	prodl,___flmul@temp
 14158   002E9E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14159   002EA2  5028               	movf	___flmul@temp^0,w,c
 14160   002EA4  261E               	addwf	___flmul@grs^0,f,c
 14161   002EA6  5029               	movf	(___flmul@temp+1)^0,w,c
 14162   002EA8  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14163   002EAA  0E00               	movlw	0
 14164   002EAC  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14165   002EAE  0E00               	movlw	0
 14166   002EB0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14167   002EB2  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14168   002EB6  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14169   002EBA  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14170   002EBE  6A1E               	clrf	___flmul@grs^0,c
 14171   002EC0  5015               	movf	___flmul@a^0,w,c
 14172   002EC2  0211               	mulwf	___flmul@b^0,c
 14173   002EC4  CFF3 F028          	movff	prodl,___flmul@temp
 14174   002EC8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14175   002ECC  5028               	movf	___flmul@temp^0,w,c
 14176   002ECE  261E               	addwf	___flmul@grs^0,f,c
 14177   002ED0  5029               	movf	(___flmul@temp+1)^0,w,c
 14178   002ED2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14179   002ED4  0E00               	movlw	0
 14180   002ED6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14181   002ED8  0E00               	movlw	0
 14182   002EDA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14183   002EDC  5017               	movf	(___flmul@a+2)^0,w,c
 14184   002EDE  0212               	mulwf	(___flmul@b+1)^0,c
 14185   002EE0  CFF3 F028          	movff	prodl,___flmul@temp
 14186   002EE4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14187   002EE8  5028               	movf	___flmul@temp^0,w,c
 14188   002EEA  2624               	addwf	___flmul@prod^0,f,c
 14189   002EEC  5029               	movf	(___flmul@temp+1)^0,w,c
 14190   002EEE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14191   002EF0  0E00               	movlw	0
 14192   002EF2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14193   002EF4  0E00               	movlw	0
 14194   002EF6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14195   002EF8  5016               	movf	(___flmul@a+1)^0,w,c
 14196   002EFA  0213               	mulwf	(___flmul@b+2)^0,c
 14197   002EFC  CFF3 F028          	movff	prodl,___flmul@temp
 14198   002F00  CFF4 F029          	movff	prodh,___flmul@temp+1
 14199   002F04  5028               	movf	___flmul@temp^0,w,c
 14200   002F06  2624               	addwf	___flmul@prod^0,f,c
 14201   002F08  5029               	movf	(___flmul@temp+1)^0,w,c
 14202   002F0A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14203   002F0C  0E00               	movlw	0
 14204   002F0E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14205   002F10  0E00               	movlw	0
 14206   002F12  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14207   002F14  5017               	movf	(___flmul@a+2)^0,w,c
 14208   002F16  0213               	mulwf	(___flmul@b+2)^0,c
 14209   002F18  CFF3 F028          	movff	prodl,___flmul@temp
 14210   002F1C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14211   002F20  5028               	movf	___flmul@temp^0,w,c
 14212   002F22  6E19               	movwf	??___flmul^0,c
 14213   002F24  5029               	movf	(___flmul@temp+1)^0,w,c
 14214   002F26  6E1A               	movwf	(??___flmul+1)^0,c
 14215   002F28  6A1B               	clrf	(??___flmul+2)^0,c
 14216   002F2A  6A1C               	clrf	(??___flmul+3)^0,c
 14217   002F2C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14218   002F30  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14219   002F34  C019  F01A         	movff	??___flmul,??___flmul+1
 14220   002F38  6A19               	clrf	??___flmul^0,c
 14221   002F3A  5019               	movf	??___flmul^0,w,c
 14222   002F3C  2624               	addwf	___flmul@prod^0,f,c
 14223   002F3E  501A               	movf	(??___flmul+1)^0,w,c
 14224   002F40  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14225   002F42  501B               	movf	(??___flmul+2)^0,w,c
 14226   002F44  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14227   002F46  501C               	movf	(??___flmul+3)^0,w,c
 14228   002F48  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14229   002F4A  C01E  F019         	movff	___flmul@grs,??___flmul
 14230   002F4E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14231   002F52  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14232   002F56  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14233   002F5A  0E19               	movlw	25
 14234   002F5C  EFB5  F017         	goto	u3950
 14235   002F60                     u3955:
 14236   002F60  90D8               	bcf	status,0,c
 14237   002F62  321C               	rrcf	(??___flmul+3)^0,f,c
 14238   002F64  321B               	rrcf	(??___flmul+2)^0,f,c
 14239   002F66  321A               	rrcf	(??___flmul+1)^0,f,c
 14240   002F68  3219               	rrcf	??___flmul^0,f,c
 14241   002F6A                     u3950:
 14242   002F6A  2EE8               	decfsz	wreg,f,c
 14243   002F6C  EFB0  F017         	goto	u3955
 14244   002F70  5019               	movf	??___flmul^0,w,c
 14245   002F72  2624               	addwf	___flmul@prod^0,f,c
 14246   002F74  501A               	movf	(??___flmul+1)^0,w,c
 14247   002F76  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14248   002F78  501B               	movf	(??___flmul+2)^0,w,c
 14249   002F7A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14250   002F7C  501C               	movf	(??___flmul+3)^0,w,c
 14251   002F7E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14252   002F80  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14253   002F84  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14254   002F88  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14255   002F8C  6A1E               	clrf	___flmul@grs^0,c
 14256   002F8E  5022               	movf	___flmul@aexp^0,w,c
 14257   002F90  C023  F019         	movff	___flmul@bexp,??___flmul
 14258   002F94  6A1A               	clrf	(??___flmul+1)^0,c
 14259   002F96  2619               	addwf	??___flmul^0,f,c
 14260   002F98  0E00               	movlw	0
 14261   002F9A  221A               	addwfc	(??___flmul+1)^0,f,c
 14262   002F9C  0E82               	movlw	130
 14263   002F9E  2419               	addwf	??___flmul^0,w,c
 14264   002FA0  6E28               	movwf	___flmul@temp^0,c
 14265   002FA2  0EFF               	movlw	255
 14266   002FA4  201A               	addwfc	(??___flmul+1)^0,w,c
 14267   002FA6  6E29               	movwf	(___flmul@temp+1)^0,c
 14268   002FA8  EFEB  F017         	goto	l4464
 14269   002FAC                     l4458:
 14270   002FAC  90D8               	bcf	status,0,c
 14271   002FAE  3624               	rlcf	___flmul@prod^0,f,c
 14272   002FB0  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14273   002FB2  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14274   002FB4  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14275   002FB6  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14276   002FB8  EFE0  F017         	goto	u3961
 14277   002FBC  EFE2  F017         	goto	u3960
 14278   002FC0                     u3961:
 14279   002FC0  EFE3  F017         	goto	l1326
 14280   002FC4                     u3960:
 14281   002FC4  8024               	bsf	___flmul@prod^0,0,c
 14282   002FC6                     l1326:
 14283   002FC6  90D8               	bcf	status,0,c
 14284   002FC8  361E               	rlcf	___flmul@grs^0,f,c
 14285   002FCA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14286   002FCC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14287   002FCE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14288   002FD0  0628               	decf	___flmul@temp^0,f,c
 14289   002FD2  A0D8               	btfss	status,0,c
 14290   002FD4  0629               	decf	(___flmul@temp+1)^0,f,c
 14291   002FD6                     l4464:
 14292   002FD6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14293   002FD8  EFF0  F017         	goto	u3971
 14294   002FDC  EFF2  F017         	goto	u3970
 14295   002FE0                     u3971:
 14296   002FE0  EFD6  F017         	goto	l4458
 14297   002FE4                     u3970:
 14298   002FE4  0E00               	movlw	0
 14299   002FE6  6E22               	movwf	___flmul@aexp^0,c
 14300   002FE8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14301   002FEA  EFF9  F017         	goto	u3981
 14302   002FEE  EFFB  F017         	goto	u3980
 14303   002FF2                     u3981:
 14304   002FF2  EF1F  F018         	goto	l1328
 14305   002FF6                     u3980:
 14306   002FF6  0EFF               	movlw	255
 14307   002FF8  141E               	andwf	___flmul@grs^0,w,c
 14308   002FFA  6E19               	movwf	??___flmul^0,c
 14309   002FFC  0EFF               	movlw	255
 14310   002FFE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14311   003000  6E1A               	movwf	(??___flmul+1)^0,c
 14312   003002  0EFF               	movlw	255
 14313   003004  1420               	andwf	(___flmul@grs+2)^0,w,c
 14314   003006  6E1B               	movwf	(??___flmul+2)^0,c
 14315   003008  0E7F               	movlw	127
 14316   00300A  1421               	andwf	(___flmul@grs+3)^0,w,c
 14317   00300C  6E1C               	movwf	(??___flmul+3)^0,c
 14318   00300E  5019               	movf	??___flmul^0,w,c
 14319   003010  101A               	iorwf	(??___flmul+1)^0,w,c
 14320   003012  101B               	iorwf	(??___flmul+2)^0,w,c
 14321   003014  101C               	iorwf	(??___flmul+3)^0,w,c
 14322   003016  B4D8               	btfsc	status,2,c
 14323   003018  EF10  F018         	goto	u3991
 14324   00301C  EF12  F018         	goto	u3990
 14325   003020                     u3991:
 14326   003020  EF16  F018         	goto	l1329
 14327   003024                     u3990:
 14328   003024                     l4472:
 14329   003024  0E01               	movlw	1
 14330   003026  6E22               	movwf	___flmul@aexp^0,c
 14331   003028  EF1F  F018         	goto	l1328
 14332   00302C                     l1329:
 14333   00302C  A024               	btfss	___flmul@prod^0,0,c
 14334   00302E  EF1B  F018         	goto	u4001
 14335   003032  EF1D  F018         	goto	u4000
 14336   003036                     u4001:
 14337   003036  EF1F  F018         	goto	l1328
 14338   00303A                     u4000:
 14339   00303A  EF12  F018         	goto	l4472
 14340   00303E                     l1328:
 14341   00303E  5022               	movf	___flmul@aexp^0,w,c
 14342   003040  B4D8               	btfsc	status,2,c
 14343   003042  EF25  F018         	goto	u4011
 14344   003046  EF27  F018         	goto	u4010
 14345   00304A                     u4011:
 14346   00304A  EF4B  F018         	goto	l4484
 14347   00304E                     u4010:
 14348   00304E  0E01               	movlw	1
 14349   003050  2624               	addwf	___flmul@prod^0,f,c
 14350   003052  0E00               	movlw	0
 14351   003054  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14352   003056  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14353   003058  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14354   00305A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14355   00305C  EF32  F018         	goto	u4021
 14356   003060  EF34  F018         	goto	u4020
 14357   003064                     u4021:
 14358   003064  EF4B  F018         	goto	l4484
 14359   003068                     u4020:
 14360   003068  C024  F019         	movff	___flmul@prod,??___flmul
 14361   00306C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14362   003070  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14363   003074  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14364   003078  341C               	rlcf	(??___flmul+3)^0,w,c
 14365   00307A  321C               	rrcf	(??___flmul+3)^0,f,c
 14366   00307C  321B               	rrcf	(??___flmul+2)^0,f,c
 14367   00307E  321A               	rrcf	(??___flmul+1)^0,f,c
 14368   003080  3219               	rrcf	??___flmul^0,f,c
 14369   003082  C019  F024         	movff	??___flmul,___flmul@prod
 14370   003086  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14371   00308A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14372   00308E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14373   003092  4A28               	infsnz	___flmul@temp^0,f,c
 14374   003094  2A29               	incf	(___flmul@temp+1)^0,f,c
 14375   003096                     l4484:
 14376   003096  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14377   003098  EF56  F018         	goto	u4031
 14378   00309C  5029               	movf	(___flmul@temp+1)^0,w,c
 14379   00309E  E108               	bnz	u4030
 14380   0030A0  2828               	incf	___flmul@temp^0,w,c
 14381   0030A2  A0D8               	btfss	status,0,c
 14382   0030A4  EF56  F018         	goto	u4031
 14383   0030A8  EF58  F018         	goto	u4030
 14384   0030AC                     u4031:
 14385   0030AC  EF62  F018         	goto	l4488
 14386   0030B0                     u4030:
 14387   0030B0  0E00               	movlw	0
 14388   0030B2  6E24               	movwf	___flmul@prod^0,c
 14389   0030B4  0E00               	movlw	0
 14390   0030B6  6E25               	movwf	(___flmul@prod+1)^0,c
 14391   0030B8  0E80               	movlw	128
 14392   0030BA  6E26               	movwf	(___flmul@prod+2)^0,c
 14393   0030BC  0E7F               	movlw	127
 14394   0030BE  6E27               	movwf	(___flmul@prod+3)^0,c
 14395   0030C0  EF90  F018         	goto	l4500
 14396   0030C4                     l4488:
 14397   0030C4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14398   0030C6  EF6F  F018         	goto	u4040
 14399   0030CA  5029               	movf	(___flmul@temp+1)^0,w,c
 14400   0030CC  E106               	bnz	u4041
 14401   0030CE  0428               	decf	___flmul@temp^0,w,c
 14402   0030D0  B0D8               	btfsc	status,0,c
 14403   0030D2  EF6D  F018         	goto	u4041
 14404   0030D6  EF6F  F018         	goto	u4040
 14405   0030DA                     u4041:
 14406   0030DA  EF7B  F018         	goto	l1336
 14407   0030DE                     u4040:
 14408   0030DE  0E00               	movlw	0
 14409   0030E0  6E24               	movwf	___flmul@prod^0,c
 14410   0030E2  0E00               	movlw	0
 14411   0030E4  6E25               	movwf	(___flmul@prod+1)^0,c
 14412   0030E6  0E00               	movlw	0
 14413   0030E8  6E26               	movwf	(___flmul@prod+2)^0,c
 14414   0030EA  0E00               	movlw	0
 14415   0030EC  6E27               	movwf	(___flmul@prod+3)^0,c
 14416   0030EE  0E00               	movlw	0
 14417   0030F0  6E1D               	movwf	___flmul@sign^0,c
 14418   0030F2  EF90  F018         	goto	l4500
 14419   0030F6                     l1336:
 14420   0030F6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14421   0030FA  0EFF               	movlw	255
 14422   0030FC  1624               	andwf	___flmul@prod^0,f,c
 14423   0030FE  0EFF               	movlw	255
 14424   003100  1625               	andwf	(___flmul@prod+1)^0,f,c
 14425   003102  0E7F               	movlw	127
 14426   003104  1626               	andwf	(___flmul@prod+2)^0,f,c
 14427   003106  0E00               	movlw	0
 14428   003108  1627               	andwf	(___flmul@prod+3)^0,f,c
 14429   00310A  A023               	btfss	___flmul@bexp^0,0,c
 14430   00310C  EF8A  F018         	goto	u4051
 14431   003110  EF8C  F018         	goto	u4050
 14432   003114                     u4051:
 14433   003114  EF8D  F018         	goto	l4498
 14434   003118                     u4050:
 14435   003118  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14436   00311A                     l4498:
 14437   00311A  90D8               	bcf	status,0,c
 14438   00311C  3023               	rrcf	___flmul@bexp^0,w,c
 14439   00311E  6E27               	movwf	(___flmul@prod+3)^0,c
 14440   003120                     l4500:
 14441   003120  501D               	movf	___flmul@sign^0,w,c
 14442   003122  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14443   003124  C024  F011         	movff	___flmul@prod,?___flmul
 14444   003128  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14445   00312C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14446   003130  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14447   003134                     l1323:
 14448   003134  0012               	return		;funcret
 14449   003136                     __end_of___flmul:
 14450                           	callstack 0
 14451                           
 14452 ;; *************** function ___flge *****************
 14453 ;; Defined at:
 14454 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;  ff1             4   41[COMRAM] unsigned char 
 14457 ;;  ff2             4   45[COMRAM] unsigned char 
 14458 ;; Auto vars:     Size  Location     Type
 14459 ;;		None
 14460 ;; Return value:  Size  Location     Type
 14461 ;;		None               void
 14462 ;; Registers used:
 14463 ;;		wreg, status,2, status,0
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14469 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14471 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14472 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14473 ;;Total ram usage:       12 bytes
 14474 ;; Hardware stack levels used: 1
 14475 ;; This function calls:
 14476 ;;		Nothing
 14477 ;; This function is called by:
 14478 ;;		_Colour_decider
 14479 ;;		_efgtoa
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text76
 14484   004B66                     __ptext76:
 14485                           	callstack 0
 14486   004B66                     ___flge:
 14487                           	callstack 26
 14488   004B66  0E00               	movlw	0
 14489   004B68  142A               	andwf	___flge@ff1^0,w,c
 14490   004B6A  6E32               	movwf	??___flge^0,c
 14491   004B6C  0E00               	movlw	0
 14492   004B6E  142B               	andwf	(___flge@ff1+1)^0,w,c
 14493   004B70  6E33               	movwf	(??___flge+1)^0,c
 14494   004B72  0E80               	movlw	128
 14495   004B74  142C               	andwf	(___flge@ff1+2)^0,w,c
 14496   004B76  6E34               	movwf	(??___flge+2)^0,c
 14497   004B78  0E7F               	movlw	127
 14498   004B7A  142D               	andwf	(___flge@ff1+3)^0,w,c
 14499   004B7C  6E35               	movwf	(??___flge+3)^0,c
 14500   004B7E  5032               	movf	??___flge^0,w,c
 14501   004B80  1033               	iorwf	(??___flge+1)^0,w,c
 14502   004B82  1034               	iorwf	(??___flge+2)^0,w,c
 14503   004B84  1035               	iorwf	(??___flge+3)^0,w,c
 14504   004B86  A4D8               	btfss	status,2,c
 14505   004B88  EFC8  F025         	goto	u4091
 14506   004B8C  EFCA  F025         	goto	u4090
 14507   004B90                     u4091:
 14508   004B90  EFD2  F025         	goto	l4532
 14509   004B94                     u4090:
 14510   004B94  0E00               	movlw	0
 14511   004B96  6E2A               	movwf	___flge@ff1^0,c
 14512   004B98  0E00               	movlw	0
 14513   004B9A  6E2B               	movwf	(___flge@ff1+1)^0,c
 14514   004B9C  0E00               	movlw	0
 14515   004B9E  6E2C               	movwf	(___flge@ff1+2)^0,c
 14516   004BA0  0E00               	movlw	0
 14517   004BA2  6E2D               	movwf	(___flge@ff1+3)^0,c
 14518   004BA4                     l4532:
 14519   004BA4  0E00               	movlw	0
 14520   004BA6  142E               	andwf	___flge@ff2^0,w,c
 14521   004BA8  6E32               	movwf	??___flge^0,c
 14522   004BAA  0E00               	movlw	0
 14523   004BAC  142F               	andwf	(___flge@ff2+1)^0,w,c
 14524   004BAE  6E33               	movwf	(??___flge+1)^0,c
 14525   004BB0  0E80               	movlw	128
 14526   004BB2  1430               	andwf	(___flge@ff2+2)^0,w,c
 14527   004BB4  6E34               	movwf	(??___flge+2)^0,c
 14528   004BB6  0E7F               	movlw	127
 14529   004BB8  1431               	andwf	(___flge@ff2+3)^0,w,c
 14530   004BBA  6E35               	movwf	(??___flge+3)^0,c
 14531   004BBC  5032               	movf	??___flge^0,w,c
 14532   004BBE  1033               	iorwf	(??___flge+1)^0,w,c
 14533   004BC0  1034               	iorwf	(??___flge+2)^0,w,c
 14534   004BC2  1035               	iorwf	(??___flge+3)^0,w,c
 14535   004BC4  A4D8               	btfss	status,2,c
 14536   004BC6  EFE7  F025         	goto	u4101
 14537   004BCA  EFE9  F025         	goto	u4100
 14538   004BCE                     u4101:
 14539   004BCE  EFF1  F025         	goto	l4536
 14540   004BD2                     u4100:
 14541   004BD2  0E00               	movlw	0
 14542   004BD4  6E2E               	movwf	___flge@ff2^0,c
 14543   004BD6  0E00               	movlw	0
 14544   004BD8  6E2F               	movwf	(___flge@ff2+1)^0,c
 14545   004BDA  0E00               	movlw	0
 14546   004BDC  6E30               	movwf	(___flge@ff2+2)^0,c
 14547   004BDE  0E00               	movlw	0
 14548   004BE0  6E31               	movwf	(___flge@ff2+3)^0,c
 14549   004BE2                     l4536:
 14550   004BE2  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14551   004BE4  EFF6  F025         	goto	u4111
 14552   004BE8  EFF8  F025         	goto	u4110
 14553   004BEC                     u4111:
 14554   004BEC  EF01  F026         	goto	l4540
 14555   004BF0                     u4110:
 14556   004BF0  6C2A               	negf	___flge@ff1^0,c
 14557   004BF2  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14558   004BF4  B0D8               	btfsc	status,0,c
 14559   004BF6  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14560   004BF8  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14561   004BFA  B0D8               	btfsc	status,0,c
 14562   004BFC  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14563   004BFE  0E80               	movlw	128
 14564   004C00  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14565   004C02                     l4540:
 14566   004C02  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14567   004C04  EF06  F026         	goto	u4121
 14568   004C08  EF08  F026         	goto	u4120
 14569   004C0C                     u4121:
 14570   004C0C  EF11  F026         	goto	l970
 14571   004C10                     u4120:
 14572   004C10  6C2E               	negf	___flge@ff2^0,c
 14573   004C12  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14574   004C14  B0D8               	btfsc	status,0,c
 14575   004C16  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14576   004C18  1E30               	comf	(___flge@ff2+2)^0,f,c
 14577   004C1A  B0D8               	btfsc	status,0,c
 14578   004C1C  2A30               	incf	(___flge@ff2+2)^0,f,c
 14579   004C1E  0E80               	movlw	128
 14580   004C20  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14581   004C22                     l970:
 14582   004C22  0E00               	movlw	0
 14583   004C24  1A2A               	xorwf	___flge@ff1^0,f,c
 14584   004C26  0E00               	movlw	0
 14585   004C28  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14586   004C2A  0E00               	movlw	0
 14587   004C2C  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14588   004C2E  0E80               	movlw	128
 14589   004C30  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14590   004C32  0E00               	movlw	0
 14591   004C34  1A2E               	xorwf	___flge@ff2^0,f,c
 14592   004C36  0E00               	movlw	0
 14593   004C38  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14594   004C3A  0E00               	movlw	0
 14595   004C3C  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14596   004C3E  0E80               	movlw	128
 14597   004C40  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14598   004C42  502E               	movf	___flge@ff2^0,w,c
 14599   004C44  5C2A               	subwf	___flge@ff1^0,w,c
 14600   004C46  502F               	movf	(___flge@ff2+1)^0,w,c
 14601   004C48  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14602   004C4A  5030               	movf	(___flge@ff2+2)^0,w,c
 14603   004C4C  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14604   004C4E  5031               	movf	(___flge@ff2+3)^0,w,c
 14605   004C50  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14606   004C52  B0D8               	btfsc	status,0,c
 14607   004C54  EF2E  F026         	goto	u4131
 14608   004C58  EF30  F026         	goto	u4130
 14609   004C5C                     u4131:
 14610   004C5C  EF33  F026         	goto	l4546
 14611   004C60                     u4130:
 14612   004C60  90D8               	bcf	status,0,c
 14613   004C62  EF34  F026         	goto	l975
 14614   004C66                     l4546:
 14615   004C66  80D8               	bsf	status,0,c
 14616   004C68                     l975:
 14617   004C68  0012               	return		;funcret
 14618   004C6A                     __end_of___flge:
 14619                           	callstack 0
 14620                           
 14621 ;; *************** function ___fleq *****************
 14622 ;; Defined at:
 14623 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;  ff1             4   49[COMRAM] unsigned char 
 14626 ;;  ff2             4   53[COMRAM] unsigned char 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;		None
 14629 ;; Return value:  Size  Location     Type
 14630 ;;		None               void
 14631 ;; Registers used:
 14632 ;;		wreg, status,2, status,0
 14633 ;; Tracked objects:
 14634 ;;		On entry : 0/0
 14635 ;;		On exit  : 0/0
 14636 ;;		Unchanged: 0/0
 14637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14638 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14640 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14641 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14642 ;;Total ram usage:       12 bytes
 14643 ;; Hardware stack levels used: 1
 14644 ;; This function calls:
 14645 ;;		Nothing
 14646 ;; This function is called by:
 14647 ;;		_Colour_decider
 14648 ;;		_efgtoa
 14649 ;; This function uses a non-reentrant model
 14650 ;;
 14651                           
 14652                           	psect	text77
 14653   005048                     __ptext77:
 14654                           	callstack 0
 14655   005048                     ___fleq:
 14656                           	callstack 26
 14657   005048  0E00               	movlw	0
 14658   00504A  1432               	andwf	___fleq@ff1^0,w,c
 14659   00504C  6E3A               	movwf	??___fleq^0,c
 14660   00504E  0E00               	movlw	0
 14661   005050  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14662   005052  6E3B               	movwf	(??___fleq+1)^0,c
 14663   005054  0E80               	movlw	128
 14664   005056  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14665   005058  6E3C               	movwf	(??___fleq+2)^0,c
 14666   00505A  0E7F               	movlw	127
 14667   00505C  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14668   00505E  6E3D               	movwf	(??___fleq+3)^0,c
 14669   005060  503A               	movf	??___fleq^0,w,c
 14670   005062  103B               	iorwf	(??___fleq+1)^0,w,c
 14671   005064  103C               	iorwf	(??___fleq+2)^0,w,c
 14672   005066  103D               	iorwf	(??___fleq+3)^0,w,c
 14673   005068  A4D8               	btfss	status,2,c
 14674   00506A  EF39  F028         	goto	u4061
 14675   00506E  EF3B  F028         	goto	u4060
 14676   005072                     u4061:
 14677   005072  EF43  F028         	goto	l4516
 14678   005076                     u4060:
 14679   005076  0E00               	movlw	0
 14680   005078  6E32               	movwf	___fleq@ff1^0,c
 14681   00507A  0E00               	movlw	0
 14682   00507C  6E33               	movwf	(___fleq@ff1+1)^0,c
 14683   00507E  0E00               	movlw	0
 14684   005080  6E34               	movwf	(___fleq@ff1+2)^0,c
 14685   005082  0E00               	movlw	0
 14686   005084  6E35               	movwf	(___fleq@ff1+3)^0,c
 14687   005086                     l4516:
 14688   005086  0E00               	movlw	0
 14689   005088  1436               	andwf	___fleq@ff2^0,w,c
 14690   00508A  6E3A               	movwf	??___fleq^0,c
 14691   00508C  0E00               	movlw	0
 14692   00508E  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14693   005090  6E3B               	movwf	(??___fleq+1)^0,c
 14694   005092  0E80               	movlw	128
 14695   005094  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14696   005096  6E3C               	movwf	(??___fleq+2)^0,c
 14697   005098  0E7F               	movlw	127
 14698   00509A  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14699   00509C  6E3D               	movwf	(??___fleq+3)^0,c
 14700   00509E  503A               	movf	??___fleq^0,w,c
 14701   0050A0  103B               	iorwf	(??___fleq+1)^0,w,c
 14702   0050A2  103C               	iorwf	(??___fleq+2)^0,w,c
 14703   0050A4  103D               	iorwf	(??___fleq+3)^0,w,c
 14704   0050A6  A4D8               	btfss	status,2,c
 14705   0050A8  EF58  F028         	goto	u4071
 14706   0050AC  EF5A  F028         	goto	u4070
 14707   0050B0                     u4071:
 14708   0050B0  EF62  F028         	goto	l4520
 14709   0050B4                     u4070:
 14710   0050B4  0E00               	movlw	0
 14711   0050B6  6E36               	movwf	___fleq@ff2^0,c
 14712   0050B8  0E00               	movlw	0
 14713   0050BA  6E37               	movwf	(___fleq@ff2+1)^0,c
 14714   0050BC  0E00               	movlw	0
 14715   0050BE  6E38               	movwf	(___fleq@ff2+2)^0,c
 14716   0050C0  0E00               	movlw	0
 14717   0050C2  6E39               	movwf	(___fleq@ff2+3)^0,c
 14718   0050C4                     l4520:
 14719   0050C4  5036               	movf	___fleq@ff2^0,w,c
 14720   0050C6  1832               	xorwf	___fleq@ff1^0,w,c
 14721   0050C8  E10F               	bnz	u4080
 14722   0050CA  5037               	movf	(___fleq@ff2+1)^0,w,c
 14723   0050CC  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14724   0050CE  E10C               	bnz	u4080
 14725   0050D0  5038               	movf	(___fleq@ff2+2)^0,w,c
 14726   0050D2  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14727   0050D4  E109               	bnz	u4080
 14728   0050D6  5039               	movf	(___fleq@ff2+3)^0,w,c
 14729   0050D8  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14730   0050DA  B4D8               	btfsc	status,2,c
 14731   0050DC  EF72  F028         	goto	u4081
 14732   0050E0  EF74  F028         	goto	u4080
 14733   0050E4                     u4081:
 14734   0050E4  EF77  F028         	goto	l4524
 14735   0050E8                     u4080:
 14736   0050E8  90D8               	bcf	status,0,c
 14737   0050EA  EF78  F028         	goto	l964
 14738   0050EE                     l4524:
 14739   0050EE  80D8               	bsf	status,0,c
 14740   0050F0                     l964:
 14741   0050F0  0012               	return		;funcret
 14742   0050F2                     __end_of___fleq:
 14743                           	callstack 0
 14744                           
 14745 ;; *************** function ___fldiv *****************
 14746 ;; Defined at:
 14747 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;  b               4   49[COMRAM] unsigned char 
 14750 ;;  a               4   53[COMRAM] unsigned char 
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;  grs             4   68[COMRAM] unsigned long 
 14753 ;;  rem             4   61[COMRAM] unsigned long 
 14754 ;;  new_exp         2   66[COMRAM] short 
 14755 ;;  aexp            1   73[COMRAM] unsigned char 
 14756 ;;  bexp            1   72[COMRAM] unsigned char 
 14757 ;;  sign            1   65[COMRAM] unsigned char 
 14758 ;; Return value:  Size  Location     Type
 14759 ;;                  4   49[COMRAM] unsigned char 
 14760 ;; Registers used:
 14761 ;;		wreg, status,2, status,0
 14762 ;; Tracked objects:
 14763 ;;		On entry : 0/0
 14764 ;;		On exit  : 0/0
 14765 ;;		Unchanged: 0/0
 14766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14767 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14768 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14770 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14771 ;;Total ram usage:       25 bytes
 14772 ;; Hardware stack levels used: 1
 14773 ;; This function calls:
 14774 ;;		Nothing
 14775 ;; This function is called by:
 14776 ;;		_colour_rel
 14777 ;;		_Colour_decider
 14778 ;;		_efgtoa
 14779 ;; This function uses a non-reentrant model
 14780 ;;
 14781                           
 14782                           	psect	text78
 14783   003136                     __ptext78:
 14784                           	callstack 0
 14785   003136                     ___fldiv:
 14786                           	callstack 26
 14787   003136  5035               	movf	(___fldiv@b+3)^0,w,c
 14788   003138  0B80               	andlw	128
 14789   00313A  6E42               	movwf	___fldiv@sign^0,c
 14790   00313C  5035               	movf	(___fldiv@b+3)^0,w,c
 14791   00313E  2435               	addwf	(___fldiv@b+3)^0,w,c
 14792   003140  6E49               	movwf	___fldiv@bexp^0,c
 14793   003142  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14794   003144  EFA6  F018         	goto	u3641
 14795   003148  EFA8  F018         	goto	u3640
 14796   00314C                     u3641:
 14797   00314C  EFA9  F018         	goto	l4244
 14798   003150                     u3640:
 14799   003150  8049               	bsf	___fldiv@bexp^0,0,c
 14800   003152                     l4244:
 14801   003152  5049               	movf	___fldiv@bexp^0,w,c
 14802   003154  B4D8               	btfsc	status,2,c
 14803   003156  EFAF  F018         	goto	u3651
 14804   00315A  EFB1  F018         	goto	u3650
 14805   00315E                     u3651:
 14806   00315E  EFC6  F018         	goto	l4254
 14807   003162                     u3650:
 14808   003162  2849               	incf	___fldiv@bexp^0,w,c
 14809   003164  A4D8               	btfss	status,2,c
 14810   003166  EFB7  F018         	goto	u3661
 14811   00316A  EFB9  F018         	goto	u3660
 14812   00316E                     u3661:
 14813   00316E  EFC1  F018         	goto	l4250
 14814   003172                     u3660:
 14815   003172  0E00               	movlw	0
 14816   003174  6E32               	movwf	___fldiv@b^0,c
 14817   003176  0E00               	movlw	0
 14818   003178  6E33               	movwf	(___fldiv@b+1)^0,c
 14819   00317A  0E00               	movlw	0
 14820   00317C  6E34               	movwf	(___fldiv@b+2)^0,c
 14821   00317E  0E00               	movlw	0
 14822   003180  6E35               	movwf	(___fldiv@b+3)^0,c
 14823   003182                     l4250:
 14824   003182  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14825   003184  0E00               	movlw	0
 14826   003186  6E35               	movwf	(___fldiv@b+3)^0,c
 14827   003188  EFCE  F018         	goto	l4256
 14828   00318C                     l4254:
 14829   00318C  0E00               	movlw	0
 14830   00318E  6E32               	movwf	___fldiv@b^0,c
 14831   003190  0E00               	movlw	0
 14832   003192  6E33               	movwf	(___fldiv@b+1)^0,c
 14833   003194  0E00               	movlw	0
 14834   003196  6E34               	movwf	(___fldiv@b+2)^0,c
 14835   003198  0E00               	movlw	0
 14836   00319A  6E35               	movwf	(___fldiv@b+3)^0,c
 14837   00319C                     l4256:
 14838   00319C  5039               	movf	(___fldiv@a+3)^0,w,c
 14839   00319E  0B80               	andlw	128
 14840   0031A0  1A42               	xorwf	___fldiv@sign^0,f,c
 14841   0031A2  5039               	movf	(___fldiv@a+3)^0,w,c
 14842   0031A4  2439               	addwf	(___fldiv@a+3)^0,w,c
 14843   0031A6  6E4A               	movwf	___fldiv@aexp^0,c
 14844   0031A8  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14845   0031AA  EFD9  F018         	goto	u3671
 14846   0031AE  EFDB  F018         	goto	u3670
 14847   0031B2                     u3671:
 14848   0031B2  EFDC  F018         	goto	l4264
 14849   0031B6                     u3670:
 14850   0031B6  804A               	bsf	___fldiv@aexp^0,0,c
 14851   0031B8                     l4264:
 14852   0031B8  504A               	movf	___fldiv@aexp^0,w,c
 14853   0031BA  B4D8               	btfsc	status,2,c
 14854   0031BC  EFE2  F018         	goto	u3681
 14855   0031C0  EFE4  F018         	goto	u3680
 14856   0031C4                     u3681:
 14857   0031C4  EFF9  F018         	goto	l4274
 14858   0031C8                     u3680:
 14859   0031C8  284A               	incf	___fldiv@aexp^0,w,c
 14860   0031CA  A4D8               	btfss	status,2,c
 14861   0031CC  EFEA  F018         	goto	u3691
 14862   0031D0  EFEC  F018         	goto	u3690
 14863   0031D4                     u3691:
 14864   0031D4  EFF4  F018         	goto	l4270
 14865   0031D8                     u3690:
 14866   0031D8  0E00               	movlw	0
 14867   0031DA  6E36               	movwf	___fldiv@a^0,c
 14868   0031DC  0E00               	movlw	0
 14869   0031DE  6E37               	movwf	(___fldiv@a+1)^0,c
 14870   0031E0  0E00               	movlw	0
 14871   0031E2  6E38               	movwf	(___fldiv@a+2)^0,c
 14872   0031E4  0E00               	movlw	0
 14873   0031E6  6E39               	movwf	(___fldiv@a+3)^0,c
 14874   0031E8                     l4270:
 14875   0031E8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14876   0031EA  0E00               	movlw	0
 14877   0031EC  6E39               	movwf	(___fldiv@a+3)^0,c
 14878   0031EE  EF01  F019         	goto	l4276
 14879   0031F2                     l4274:
 14880   0031F2  0E00               	movlw	0
 14881   0031F4  6E36               	movwf	___fldiv@a^0,c
 14882   0031F6  0E00               	movlw	0
 14883   0031F8  6E37               	movwf	(___fldiv@a+1)^0,c
 14884   0031FA  0E00               	movlw	0
 14885   0031FC  6E38               	movwf	(___fldiv@a+2)^0,c
 14886   0031FE  0E00               	movlw	0
 14887   003200  6E39               	movwf	(___fldiv@a+3)^0,c
 14888   003202                     l4276:
 14889   003202  5036               	movf	___fldiv@a^0,w,c
 14890   003204  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14891   003206  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14892   003208  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14893   00320A  A4D8               	btfss	status,2,c
 14894   00320C  EF0A  F019         	goto	u3701
 14895   003210  EF0C  F019         	goto	u3700
 14896   003214                     u3701:
 14897   003214  EF24  F019         	goto	l4288
 14898   003218                     u3700:
 14899   003218  0E00               	movlw	0
 14900   00321A  6E32               	movwf	___fldiv@b^0,c
 14901   00321C  0E00               	movlw	0
 14902   00321E  6E33               	movwf	(___fldiv@b+1)^0,c
 14903   003220  0E00               	movlw	0
 14904   003222  6E34               	movwf	(___fldiv@b+2)^0,c
 14905   003224  0E00               	movlw	0
 14906   003226  6E35               	movwf	(___fldiv@b+3)^0,c
 14907   003228  0E80               	movlw	128
 14908   00322A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14909   00322C  0E7F               	movlw	127
 14910   00322E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14911   003230                     l4282:
 14912   003230  5042               	movf	___fldiv@sign^0,w,c
 14913   003232  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14914   003234  C032  F032         	movff	___fldiv@b,?___fldiv
 14915   003238  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14916   00323C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14917   003240  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14918   003244  EF67  F01A         	goto	l1287
 14919   003248                     l4288:
 14920   003248  5049               	movf	___fldiv@bexp^0,w,c
 14921   00324A  A4D8               	btfss	status,2,c
 14922   00324C  EF2A  F019         	goto	u3711
 14923   003250  EF2C  F019         	goto	u3710
 14924   003254                     u3711:
 14925   003254  EF36  F019         	goto	l4296
 14926   003258                     u3710:
 14927   003258  0E00               	movlw	0
 14928   00325A  6E32               	movwf	?___fldiv^0,c
 14929   00325C  0E00               	movlw	0
 14930   00325E  6E33               	movwf	(?___fldiv+1)^0,c
 14931   003260  0E00               	movlw	0
 14932   003262  6E34               	movwf	(?___fldiv+2)^0,c
 14933   003264  0E00               	movlw	0
 14934   003266  6E35               	movwf	(?___fldiv+3)^0,c
 14935   003268  EF67  F01A         	goto	l1287
 14936   00326C                     l4296:
 14937   00326C  504A               	movf	___fldiv@aexp^0,w,c
 14938   00326E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14939   003272  6A3B               	clrf	(??___fldiv+1)^0,c
 14940   003274  5E3A               	subwf	??___fldiv^0,f,c
 14941   003276  0E00               	movlw	0
 14942   003278  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14943   00327A  0E7F               	movlw	127
 14944   00327C  243A               	addwf	??___fldiv^0,w,c
 14945   00327E  6E43               	movwf	___fldiv@new_exp^0,c
 14946   003280  0E00               	movlw	0
 14947   003282  203B               	addwfc	(??___fldiv+1)^0,w,c
 14948   003284  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14949   003286  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14950   00328A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14951   00328E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14952   003292  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14953   003296  0E00               	movlw	0
 14954   003298  6E32               	movwf	___fldiv@b^0,c
 14955   00329A  0E00               	movlw	0
 14956   00329C  6E33               	movwf	(___fldiv@b+1)^0,c
 14957   00329E  0E00               	movlw	0
 14958   0032A0  6E34               	movwf	(___fldiv@b+2)^0,c
 14959   0032A2  0E00               	movlw	0
 14960   0032A4  6E35               	movwf	(___fldiv@b+3)^0,c
 14961   0032A6  0E00               	movlw	0
 14962   0032A8  6E45               	movwf	___fldiv@grs^0,c
 14963   0032AA  0E00               	movlw	0
 14964   0032AC  6E46               	movwf	(___fldiv@grs+1)^0,c
 14965   0032AE  0E00               	movlw	0
 14966   0032B0  6E47               	movwf	(___fldiv@grs+2)^0,c
 14967   0032B2  0E00               	movlw	0
 14968   0032B4  6E48               	movwf	(___fldiv@grs+3)^0,c
 14969   0032B6  0E00               	movlw	0
 14970   0032B8  6E4A               	movwf	___fldiv@aexp^0,c
 14971   0032BA  EF97  F019         	goto	l1289
 14972   0032BE                     l4306:
 14973   0032BE  504A               	movf	___fldiv@aexp^0,w,c
 14974   0032C0  B4D8               	btfsc	status,2,c
 14975   0032C2  EF65  F019         	goto	u3721
 14976   0032C6  EF67  F019         	goto	u3720
 14977   0032CA                     u3721:
 14978   0032CA  EF7E  F019         	goto	l4314
 14979   0032CE                     u3720:
 14980   0032CE  90D8               	bcf	status,0,c
 14981   0032D0  363E               	rlcf	___fldiv@rem^0,f,c
 14982   0032D2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14983   0032D4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14984   0032D6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14985   0032D8  90D8               	bcf	status,0,c
 14986   0032DA  3632               	rlcf	___fldiv@b^0,f,c
 14987   0032DC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14988   0032DE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14989   0032E0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14990   0032E2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14991   0032E4  EF76  F019         	goto	u3731
 14992   0032E8  EF78  F019         	goto	u3730
 14993   0032EC                     u3731:
 14994   0032EC  EF79  F019         	goto	l1292
 14995   0032F0                     u3730:
 14996   0032F0  8032               	bsf	___fldiv@b^0,0,c
 14997   0032F2                     l1292:
 14998   0032F2  90D8               	bcf	status,0,c
 14999   0032F4  3645               	rlcf	___fldiv@grs^0,f,c
 15000   0032F6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15001   0032F8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15002   0032FA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15003   0032FC                     l4314:
 15004   0032FC  5036               	movf	___fldiv@a^0,w,c
 15005   0032FE  5C3E               	subwf	___fldiv@rem^0,w,c
 15006   003300  5037               	movf	(___fldiv@a+1)^0,w,c
 15007   003302  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15008   003304  5038               	movf	(___fldiv@a+2)^0,w,c
 15009   003306  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15010   003308  5039               	movf	(___fldiv@a+3)^0,w,c
 15011   00330A  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15012   00330C  A0D8               	btfss	status,0,c
 15013   00330E  EF8B  F019         	goto	u3741
 15014   003312  EF8D  F019         	goto	u3740
 15015   003316                     u3741:
 15016   003316  EF96  F019         	goto	l4320
 15017   00331A                     u3740:
 15018   00331A  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15019   00331C  5036               	movf	___fldiv@a^0,w,c
 15020   00331E  5E3E               	subwf	___fldiv@rem^0,f,c
 15021   003320  5037               	movf	(___fldiv@a+1)^0,w,c
 15022   003322  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15023   003324  5038               	movf	(___fldiv@a+2)^0,w,c
 15024   003326  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15025   003328  5039               	movf	(___fldiv@a+3)^0,w,c
 15026   00332A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15027   00332C                     l4320:
 15028   00332C  2A4A               	incf	___fldiv@aexp^0,f,c
 15029   00332E                     l1289:
 15030   00332E  0E19               	movlw	25
 15031   003330  644A               	cpfsgt	___fldiv@aexp^0,c
 15032   003332  EF9D  F019         	goto	u3751
 15033   003336  EF9F  F019         	goto	u3750
 15034   00333A                     u3751:
 15035   00333A  EF5F  F019         	goto	l4306
 15036   00333E                     u3750:
 15037   00333E  503E               	movf	___fldiv@rem^0,w,c
 15038   003340  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15039   003342  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15040   003344  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15041   003346  B4D8               	btfsc	status,2,c
 15042   003348  EFA8  F019         	goto	u3761
 15043   00334C  EFAA  F019         	goto	u3760
 15044   003350                     u3761:
 15045   003350  EFC2  F019         	goto	l4332
 15046   003354                     u3760:
 15047   003354  8045               	bsf	___fldiv@grs^0,0,c
 15048   003356  EFC2  F019         	goto	l4332
 15049   00335A                     l4326:
 15050   00335A  90D8               	bcf	status,0,c
 15051   00335C  3632               	rlcf	___fldiv@b^0,f,c
 15052   00335E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15053   003360  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15054   003362  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15055   003364  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15056   003366  EFB7  F019         	goto	u3771
 15057   00336A  EFB9  F019         	goto	u3770
 15058   00336E                     u3771:
 15059   00336E  EFBA  F019         	goto	l1298
 15060   003372                     u3770:
 15061   003372  8032               	bsf	___fldiv@b^0,0,c
 15062   003374                     l1298:
 15063   003374  90D8               	bcf	status,0,c
 15064   003376  3645               	rlcf	___fldiv@grs^0,f,c
 15065   003378  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15066   00337A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15067   00337C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15068   00337E  0643               	decf	___fldiv@new_exp^0,f,c
 15069   003380  A0D8               	btfss	status,0,c
 15070   003382  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15071   003384                     l4332:
 15072   003384  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15073   003386  EFC7  F019         	goto	u3781
 15074   00338A  EFC9  F019         	goto	u3780
 15075   00338E                     u3781:
 15076   00338E  EFAD  F019         	goto	l4326
 15077   003392                     u3780:
 15078   003392  0E00               	movlw	0
 15079   003394  6E4A               	movwf	___fldiv@aexp^0,c
 15080   003396  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15081   003398  EFD0  F019         	goto	u3791
 15082   00339C  EFD2  F019         	goto	u3790
 15083   0033A0                     u3791:
 15084   0033A0  EFF6  F019         	goto	l1300
 15085   0033A4                     u3790:
 15086   0033A4  0EFF               	movlw	255
 15087   0033A6  1445               	andwf	___fldiv@grs^0,w,c
 15088   0033A8  6E3A               	movwf	??___fldiv^0,c
 15089   0033AA  0EFF               	movlw	255
 15090   0033AC  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15091   0033AE  6E3B               	movwf	(??___fldiv+1)^0,c
 15092   0033B0  0EFF               	movlw	255
 15093   0033B2  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15094   0033B4  6E3C               	movwf	(??___fldiv+2)^0,c
 15095   0033B6  0E7F               	movlw	127
 15096   0033B8  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15097   0033BA  6E3D               	movwf	(??___fldiv+3)^0,c
 15098   0033BC  503A               	movf	??___fldiv^0,w,c
 15099   0033BE  103B               	iorwf	(??___fldiv+1)^0,w,c
 15100   0033C0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15101   0033C2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15102   0033C4  B4D8               	btfsc	status,2,c
 15103   0033C6  EFE7  F019         	goto	u3801
 15104   0033CA  EFE9  F019         	goto	u3800
 15105   0033CE                     u3801:
 15106   0033CE  EFED  F019         	goto	l1301
 15107   0033D2                     u3800:
 15108   0033D2                     l4340:
 15109   0033D2  0E01               	movlw	1
 15110   0033D4  6E4A               	movwf	___fldiv@aexp^0,c
 15111   0033D6  EFF6  F019         	goto	l1300
 15112   0033DA                     l1301:
 15113   0033DA  A032               	btfss	___fldiv@b^0,0,c
 15114   0033DC  EFF2  F019         	goto	u3811
 15115   0033E0  EFF4  F019         	goto	u3810
 15116   0033E4                     u3811:
 15117   0033E4  EFF6  F019         	goto	l1300
 15118   0033E8                     u3810:
 15119   0033E8  EFE9  F019         	goto	l4340
 15120   0033EC                     l1300:
 15121   0033EC  504A               	movf	___fldiv@aexp^0,w,c
 15122   0033EE  B4D8               	btfsc	status,2,c
 15123   0033F0  EFFC  F019         	goto	u3821
 15124   0033F4  EFFE  F019         	goto	u3820
 15125   0033F8                     u3821:
 15126   0033F8  EF22  F01A         	goto	l4352
 15127   0033FC                     u3820:
 15128   0033FC  0E01               	movlw	1
 15129   0033FE  2632               	addwf	___fldiv@b^0,f,c
 15130   003400  0E00               	movlw	0
 15131   003402  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15132   003404  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15133   003406  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15134   003408  A035               	btfss	(___fldiv@b+3)^0,0,c
 15135   00340A  EF09  F01A         	goto	u3831
 15136   00340E  EF0B  F01A         	goto	u3830
 15137   003412                     u3831:
 15138   003412  EF22  F01A         	goto	l4352
 15139   003416                     u3830:
 15140   003416  C032  F03A         	movff	___fldiv@b,??___fldiv
 15141   00341A  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15142   00341E  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15143   003422  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15144   003426  343D               	rlcf	(??___fldiv+3)^0,w,c
 15145   003428  323D               	rrcf	(??___fldiv+3)^0,f,c
 15146   00342A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15147   00342C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15148   00342E  323A               	rrcf	??___fldiv^0,f,c
 15149   003430  C03A  F032         	movff	??___fldiv,___fldiv@b
 15150   003434  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15151   003438  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15152   00343C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15153   003440  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15154   003442  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15155   003444                     l4352:
 15156   003444  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15157   003446  EF2D  F01A         	goto	u3841
 15158   00344A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15159   00344C  E108               	bnz	u3840
 15160   00344E  2843               	incf	___fldiv@new_exp^0,w,c
 15161   003450  A0D8               	btfss	status,0,c
 15162   003452  EF2D  F01A         	goto	u3841
 15163   003456  EF2F  F01A         	goto	u3840
 15164   00345A                     u3841:
 15165   00345A  EF3A  F01A         	goto	l4356
 15166   00345E                     u3840:
 15167   00345E  0E00               	movlw	0
 15168   003460  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15169   003462  6843               	setf	___fldiv@new_exp^0,c
 15170   003464  0E00               	movlw	0
 15171   003466  6E32               	movwf	___fldiv@b^0,c
 15172   003468  0E00               	movlw	0
 15173   00346A  6E33               	movwf	(___fldiv@b+1)^0,c
 15174   00346C  0E00               	movlw	0
 15175   00346E  6E34               	movwf	(___fldiv@b+2)^0,c
 15176   003470  0E00               	movlw	0
 15177   003472  6E35               	movwf	(___fldiv@b+3)^0,c
 15178   003474                     l4356:
 15179   003474  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15180   003476  EF47  F01A         	goto	u3850
 15181   00347A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15182   00347C  E106               	bnz	u3851
 15183   00347E  0443               	decf	___fldiv@new_exp^0,w,c
 15184   003480  B0D8               	btfsc	status,0,c
 15185   003482  EF45  F01A         	goto	u3851
 15186   003486  EF47  F01A         	goto	u3850
 15187   00348A                     u3851:
 15188   00348A  EF55  F01A         	goto	l4360
 15189   00348E                     u3850:
 15190   00348E  0E00               	movlw	0
 15191   003490  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15192   003492  0E00               	movlw	0
 15193   003494  6E43               	movwf	___fldiv@new_exp^0,c
 15194   003496  0E00               	movlw	0
 15195   003498  6E32               	movwf	___fldiv@b^0,c
 15196   00349A  0E00               	movlw	0
 15197   00349C  6E33               	movwf	(___fldiv@b+1)^0,c
 15198   00349E  0E00               	movlw	0
 15199   0034A0  6E34               	movwf	(___fldiv@b+2)^0,c
 15200   0034A2  0E00               	movlw	0
 15201   0034A4  6E35               	movwf	(___fldiv@b+3)^0,c
 15202   0034A6  0E00               	movlw	0
 15203   0034A8  6E42               	movwf	___fldiv@sign^0,c
 15204   0034AA                     l4360:
 15205   0034AA  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15206   0034AE  A049               	btfss	___fldiv@bexp^0,0,c
 15207   0034B0  EF5C  F01A         	goto	u3861
 15208   0034B4  EF5E  F01A         	goto	u3860
 15209   0034B8                     u3861:
 15210   0034B8  EF61  F01A         	goto	l4366
 15211   0034BC                     u3860:
 15212   0034BC  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15213   0034BE  EF62  F01A         	goto	l4368
 15214   0034C2                     l4366:
 15215   0034C2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15216   0034C4                     l4368:
 15217   0034C4  90D8               	bcf	status,0,c
 15218   0034C6  3049               	rrcf	___fldiv@bexp^0,w,c
 15219   0034C8  6E35               	movwf	(___fldiv@b+3)^0,c
 15220   0034CA  EF18  F019         	goto	l4282
 15221   0034CE                     l1287:
 15222   0034CE  0012               	return		;funcret
 15223   0034D0                     __end_of___fldiv:
 15224                           	callstack 0
 15225                           
 15226                           	psect	rparam
 15227   000000                     
 15228                           	psect	idloc
 15229                           
 15230                           ;Config register IDLOC0 @ 0x200000
 15231                           ;	unspecified, using default values
 15232   200000                     	org	2097152
 15233   200000  0FFF               	dw	4095
 15234                           
 15235                           ;Config register IDLOC1 @ 0x200002
 15236                           ;	unspecified, using default values
 15237   200002                     	org	2097154
 15238   200002  0FFF               	dw	4095
 15239                           
 15240                           ;Config register IDLOC2 @ 0x200004
 15241                           ;	unspecified, using default values
 15242   200004                     	org	2097156
 15243   200004  0FFF               	dw	4095
 15244                           
 15245                           ;Config register IDLOC3 @ 0x200006
 15246                           ;	unspecified, using default values
 15247   200006                     	org	2097158
 15248   200006  0FFF               	dw	4095
 15249                           
 15250                           ;Config register IDLOC4 @ 0x200008
 15251                           ;	unspecified, using default values
 15252   200008                     	org	2097160
 15253   200008  0FFF               	dw	4095
 15254                           
 15255                           ;Config register IDLOC5 @ 0x20000A
 15256                           ;	unspecified, using default values
 15257   20000A                     	org	2097162
 15258   20000A  0FFF               	dw	4095
 15259                           
 15260                           ;Config register IDLOC6 @ 0x20000C
 15261                           ;	unspecified, using default values
 15262   20000C                     	org	2097164
 15263   20000C  0FFF               	dw	4095
 15264                           
 15265                           ;Config register IDLOC7 @ 0x20000E
 15266                           ;	unspecified, using default values
 15267   20000E                     	org	2097166
 15268   20000E  0FFF               	dw	4095
 15269                           
 15270                           	psect	config
 15271                           
 15272                           ;Config register CONFIG1L @ 0x300000
 15273                           ;	External Oscillator mode Selection bits
 15274                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15275                           ;	Power-up default value for COSC bits
 15276                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15277   300000                     	org	3145728
 15278   300000  AA                 	db	170
 15279                           
 15280                           ;Config register CONFIG1H @ 0x300001
 15281                           ;	unspecified, using default values
 15282                           ;	Clock Out Enable bit
 15283                           ;	CLKOUTEN = 0x1, unprogrammed default
 15284                           ;	Clock Switch Enable bit
 15285                           ;	CSWEN = 0x1, unprogrammed default
 15286                           ;	Fail-Safe Clock Monitor Enable bit
 15287                           ;	FCMEN = 0x1, unprogrammed default
 15288   300001                     	org	3145729
 15289   300001  FF                 	db	255
 15290                           
 15291                           ;Config register CONFIG2L @ 0x300002
 15292                           ;	unspecified, using default values
 15293                           ;	Master Clear Enable bit
 15294                           ;	MCLRE = 0x1, unprogrammed default
 15295                           ;	Power-up Timer Enable bit
 15296                           ;	PWRTE = 0x1, unprogrammed default
 15297                           ;	Low-power BOR enable bit
 15298                           ;	LPBOREN = 0x1, unprogrammed default
 15299                           ;	Brown-out Reset Enable bits
 15300                           ;	BOREN = 0x3, unprogrammed default
 15301   300002                     	org	3145730
 15302   300002  FF                 	db	255
 15303                           
 15304                           ;Config register CONFIG2H @ 0x300003
 15305                           ;	unspecified, using default values
 15306                           ;	Brown Out Reset Voltage selection bits
 15307                           ;	BORV = 0x3, unprogrammed default
 15308                           ;	ZCD Disable bit
 15309                           ;	ZCD = 0x1, unprogrammed default
 15310                           ;	PPSLOCK bit One-Way Set Enable bit
 15311                           ;	PPS1WAY = 0x1, unprogrammed default
 15312                           ;	Stack Full/Underflow Reset Enable bit
 15313                           ;	STVREN = 0x1, unprogrammed default
 15314                           ;	Debugger Enable bit
 15315                           ;	DEBUG = 0x1, unprogrammed default
 15316                           ;	Extended Instruction Set Enable bit
 15317                           ;	XINST = 0x1, unprogrammed default
 15318   300003                     	org	3145731
 15319   300003  FF                 	db	255
 15320                           
 15321                           ;Config register CONFIG3L @ 0x300004
 15322                           ;	WDT Period Select bits
 15323                           ;	WDTCPS = 0x1F, unprogrammed default
 15324                           ;	WDT operating mode
 15325                           ;	WDTE = OFF, WDT Disabled
 15326   300004                     	org	3145732
 15327   300004  9F                 	db	159
 15328                           
 15329                           ;Config register CONFIG3H @ 0x300005
 15330                           ;	unspecified, using default values
 15331                           ;	WDT Window Select bits
 15332                           ;	WDTCWS = 0x7, unprogrammed default
 15333                           ;	WDT input clock selector
 15334                           ;	WDTCCS = 0x7, unprogrammed default
 15335   300005                     	org	3145733
 15336   300005  FF                 	db	255
 15337                           
 15338                           ;Config register CONFIG4L @ 0x300006
 15339                           ;	unspecified, using default values
 15340                           ;	Write Protection Block 0
 15341                           ;	WRT0 = 0x1, unprogrammed default
 15342                           ;	Write Protection Block 1
 15343                           ;	WRT1 = 0x1, unprogrammed default
 15344                           ;	Write Protection Block 2
 15345                           ;	WRT2 = 0x1, unprogrammed default
 15346                           ;	Write Protection Block 3
 15347                           ;	WRT3 = 0x1, unprogrammed default
 15348                           ;	Write Protection Block 3
 15349                           ;	WRT4 = 0x1, unprogrammed default
 15350                           ;	Write Protection Block 3
 15351                           ;	WRT5 = 0x1, unprogrammed default
 15352                           ;	Write Protection Block 3
 15353                           ;	WRT6 = 0x1, unprogrammed default
 15354                           ;	Write Protection Block 3
 15355                           ;	WRT7 = 0x1, unprogrammed default
 15356   300006                     	org	3145734
 15357   300006  FF                 	db	255
 15358                           
 15359                           ;Config register CONFIG4H @ 0x300007
 15360                           ;	unspecified, using default values
 15361                           ;	Configuration Register Write Protection bit
 15362                           ;	WRTC = 0x1, unprogrammed default
 15363                           ;	Boot Block Write Protection bit
 15364                           ;	WRTB = 0x1, unprogrammed default
 15365                           ;	Data EEPROM Write Protection bit
 15366                           ;	WRTD = 0x1, unprogrammed default
 15367                           ;	Scanner Enable bit
 15368                           ;	SCANE = 0x1, unprogrammed default
 15369                           ;	Low Voltage Programming Enable bit
 15370                           ;	LVP = 0x1, unprogrammed default
 15371   300007                     	org	3145735
 15372   300007  FF                 	db	255
 15373                           
 15374                           ;Config register CONFIG5L @ 0x300008
 15375                           ;	unspecified, using default values
 15376                           ;	UserNVM Program Memory Code Protection bit
 15377                           ;	CP = 0x1, unprogrammed default
 15378                           ;	DataNVM Memory Code Protection bit
 15379                           ;	CPD = 0x1, unprogrammed default
 15380   300008                     	org	3145736
 15381   300008  FF                 	db	255
 15382                           
 15383                           ;Config register CONFIG5H @ 0x300009
 15384                           ;	unspecified, using default values
 15385   300009                     	org	3145737
 15386   300009  FF                 	db	255
 15387                           
 15388                           ;Config register CONFIG6L @ 0x30000A
 15389                           ;	unspecified, using default values
 15390                           ;	Table Read Protection Block 0
 15391                           ;	EBTR0 = 0x1, unprogrammed default
 15392                           ;	Table Read Protection Block 1
 15393                           ;	EBTR1 = 0x1, unprogrammed default
 15394                           ;	Table Read Protection Block 2
 15395                           ;	EBTR2 = 0x1, unprogrammed default
 15396                           ;	Table Read Protection Block 3
 15397                           ;	EBTR3 = 0x1, unprogrammed default
 15398                           ;	Table Read Protection Block 4
 15399                           ;	EBTR4 = 0x1, unprogrammed default
 15400                           ;	Table Read Protection Block 5
 15401                           ;	EBTR5 = 0x1, unprogrammed default
 15402                           ;	Table Read Protection Block 6
 15403                           ;	EBTR6 = 0x1, unprogrammed default
 15404                           ;	Table Read Protection Block 7
 15405                           ;	EBTR7 = 0x1, unprogrammed default
 15406   30000A                     	org	3145738
 15407   30000A  FF                 	db	255
 15408                           
 15409                           ;Config register CONFIG6H @ 0x30000B
 15410                           ;	unspecified, using default values
 15411                           ;	Boot Block Table Read Protection bit
 15412                           ;	EBTRB = 0x1, unprogrammed default
 15413   30000B                     	org	3145739
 15414   30000B  FF                 	db	255
 15415                           tosu	equ	0xFFF
 15416                           tosh	equ	0xFFE
 15417                           tosl	equ	0xFFD
 15418                           stkptr	equ	0xFFC
 15419                           pclatu	equ	0xFFB
 15420                           pclath	equ	0xFFA
 15421                           pcl	equ	0xFF9
 15422                           tblptru	equ	0xFF8
 15423                           tblptrh	equ	0xFF7
 15424                           tblptrl	equ	0xFF6
 15425                           tablat	equ	0xFF5
 15426                           prodh	equ	0xFF4
 15427                           prodl	equ	0xFF3
 15428                           indf0	equ	0xFEF
 15429                           postinc0	equ	0xFEE
 15430                           postdec0	equ	0xFED
 15431                           preinc0	equ	0xFEC
 15432                           plusw0	equ	0xFEB
 15433                           fsr0h	equ	0xFEA
 15434                           fsr0l	equ	0xFE9
 15435                           wreg	equ	0xFE8
 15436                           indf1	equ	0xFE7
 15437                           postinc1	equ	0xFE6
 15438                           postdec1	equ	0xFE5
 15439                           preinc1	equ	0xFE4
 15440                           plusw1	equ	0xFE3
 15441                           fsr1h	equ	0xFE2
 15442                           fsr1l	equ	0xFE1
 15443                           bsr	equ	0xFE0
 15444                           indf2	equ	0xFDF
 15445                           postinc2	equ	0xFDE
 15446                           postdec2	equ	0xFDD
 15447                           preinc2	equ	0xFDC
 15448                           plusw2	equ	0xFDB
 15449                           fsr2h	equ	0xFDA
 15450                           fsr2l	equ	0xFD9
 15451                           status	equ	0xFD8
>>>>>>> Stashed changes

Data Sizes:
    Strings     36
    Constant    0
    Data        7
<<<<<<< Updated upstream
    BSS         325
=======
    BSS         383
>>>>>>> Stashed changes
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< Updated upstream
    COMRAM           94     90      94
    BANK0           160    142     159
    BANK1           256      0     211
    BANK2           256      0     100
=======
    COMRAM           95     94      95
    BANK0           160    113     156
    BANK1           256    110     216
    BANK2           256      0     240
>>>>>>> Stashed changes
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

<<<<<<< Updated upstream
    S2601$vp	PTR void  size(2) Largest target is 0
=======
    S2731$vp	PTR void  size(2) Largest target is 0
>>>>>>> Stashed changes

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

<<<<<<< Updated upstream
    S2548$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2548$buffer	PTR unsigned char  size(2) Largest target is 0
=======
    S2647$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2647$buffer	PTR unsigned char  size(2) Largest target is 0
>>>>>>> Stashed changes

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_Backhalfblock
    _RetryMove->_Forwardhalfblock
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _fullSpeedAhead->_setMotorPWM
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (0) _main                                               112   112      0  348262
                                             88 COMRAM     2     2      0
                                             32 BANK0    110   110      0
=======
 (0) _main                                               114   114      0  406365
                                            111 BANK0      2     2      0
                                              0 BANK1    110   110      0
>>>>>>> Stashed changes
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
=======
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36181
                                             80 BANK0     31    13     18
>>>>>>> Stashed changes
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _go_Home                                              9     5      4  148921
=======
 (1) _go_Home                                              9     5      4  159859
>>>>>>> Stashed changes
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _ReverseYellow                                        4     0      4   24342
=======
 (2) _ReverseYellow                                        4     0      4   25277
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _ReversePink                                          4     0      4   23734
=======
 (2) _ReversePink                                          4     0      4   25277
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (3) _ForwardOneBlock                                      6     2      4    6594
=======
 (3) _ForwardOneBlock                                      6     2      4    6898
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _RedMove                                              4     0      4   17900
=======
 (2) _RedMove                                              4     0      4   18531
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _OrangeMove                                           4     0      4   17900
=======
 (2) _OrangeMove                                           4     0      4   18531
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _LightBlueMove                                        4     0      4   17292
=======
 (2) _LightBlueMove                                        4     0      4   18531
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _GreenMove                                            4     0      4   17292
=======
 (2) _GreenMove                                            4     0      4   18531
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _BlueMove                                             4     0      4   18204
=======
 (2) _BlueMove                                             4     0      4   18683
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8096
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _YellowMove                                           4     0      4   24342
=======
 (1) _YellowMove                                           4     0      4   25277
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (3) _turnRight45                                          6     2      4    8570
=======
 (3) _turnRight45                                          6     2      4    8897
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _RetryMove                                            4     0      4   13188
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                   _Forwardhalfblock
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6594
=======
 (1) _RetryMove                                            6     2      4    9707
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Backhalfblock                                        6     2      4    6442
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (1) _PinkMove                                             4     0      4   23734
=======
 (1) _PinkMove                                             4     0      4   25277
>>>>>>> Stashed changes
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (3) _turnLeft45                                           6     2      4    7962
=======
 (2) _turnLeft45                                           6     2      4    8897
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _reverseOneBlock                                      6     2      4    6594
=======
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (2) _reverseDetect                                        6     2      4    9026
=======
 (2) _reverseDetect                                        6     2      4    9330
>>>>>>> Stashed changes
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
<<<<<<< Updated upstream
 (3) _fullSpeedBack                                        6     2      4    2613
=======
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
>>>>>>> Stashed changes
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   21363
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1073
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2864
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _Backhalfblock
       _fullSpeedBack
       _stop
     _Forwardhalfblock
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      66        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
<<<<<<< Updated upstream
BANK1              100      0      D3       7       82.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      44        0.0%
BITBIGSFRllllhh     37      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      57        0.0%
BITBIGSFRllllll     26      0       0      64        0.0%
BITBIGSFRllllll     20      0       0      49        0.0%
BITBIGSFRllllll     1E      0       0      51        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRhlllh      17      0       0      38        0.0%
BITBIGSFRhlhlh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      52        0.0%
BITBIGSFRhlhllh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      50        0.0%
BITBIGSFRllllll      B      0       0      62        0.0%
BITBIGSFRllllhl      8      0       0      47        0.0%
BITBIGSFRllllll      6      0       0      63        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRhllll       6      0       0      39        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      59        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllhh      2      0       0      45        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      43        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlhlll      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      61        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRlllllh      1      0       0      48        0.0%
BITBIGSFRlllhh       1      0       0      42        0.0%
BITBIGSFRllh         1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
=======
BANK1              100     6E      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhllh      13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlllh      E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhllll      1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
>>>>>>> Stashed changes
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
<<<<<<< Updated upstream
ABS                  0      0     234      65        0.0%
DATA                 0      0     234       3        0.0%
=======
ABS                  0      0     2C3      60        0.0%
DATA                 0      0     2C3       3        0.0%
>>>>>>> Stashed changes
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sun Mar 12 20:46:59 2023

               _color_read_Red 4958                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4908                   ___fldiv@sign 0029                _color_read_Blue 49F8  
                           l51 4956                             l60 4A46                             l45 4862  
                           l54 49A6                             l63 44A8                             l48 4D6C  
                           l57 49F6                             l66 2DF4                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003               _color_read_Green 49A8  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 4DAA  
                          l140 4CAE                            l212 4DC2                            l143 4CDA  
                          l152 4DE6                            l161 4B60                            l209 4DAE  
                          l146 4D00                            l218 4C84                            l155 4DF0  
                          l500 40E2                            l149 4DFA                            l413 1DB4  
                          l158 4DDC                            l422 1E40                            l264 4DD0  
                          l532 4180                            l516 4044                            l508 3FA6  
                          l524 3E5E                            l541 466A                            l550 455C  
                          l535 46C2                            l391 199E                            l544 4610  
                          l553 45B6                            l538 471A                            l562 444A  
                          l571 47BE                            l547 4502                            l635 30A0  
                          l492 4286                            l556 4BDE                            l580 3CFE  
                          l565 48B4                            l629 3096                            l486 37C6  
                          l574 4810                            l662 4C3E                            l559 4C1C  
                          l583 3DB4                            l479 4208                            l568 4906  
                          l656 4D8C                            l577 4CD8                            l665 4C54  
                          l659 4D26                            l668 4D4C                            l933 3B38  
                          l782 365A                            l927 3F08                            l938 3B7E  
                          l795 392A                            _abs 4B62                            _pad 4288  
                          _rel 01B0                            wreg 000FE8                   ___flmul@aexp 0043  
                 ___flmul@bexp 0044                   ___flmul@sign 003E                   ___flmul@temp 0049  
                 ___flmul@prod 0045                Colour_decider@i 007A                           ?_abs 0013  
                         l1213 214C                           l1205 2302                           l1222 221C  
                         l1223 220A                           l1250 2AC6                           l1330 340E  
                         l1323 3376                           l1411 4BA0                           l1252 2926  
                         l1404 4A94                           l1261 296C                           l1238 4ADA  
                         l1326 34D2                           l1166 4374                           l1263 29E4  
                         l1255 28EA                           l1159 436C                           l1423 3C48  
                         l1431 4B1E                           l4000 2ABC                           l1264 29D2  
                         l1408 4B98                           l3200 3B92                           l1337 346A  
                         l1282 23C8                           l4010 2310                           l1434 4E02  
                         l3202 3BA4                           l1346 476C                           l1291 2636  
                         l1292 2624                           l4100 25E0                           l4020 2350  
                         l4012 231E                           l1196 2032                           l3220 430A  
                         l3212 4D28                           l3300 360A                           l3204 3BAE  
                         l1372 4300                           l1380 317C                           l1197 2020  
                         l4110 2652                           l4102 25EE                           l1286 272C  
                         l4030 2380                           l4022 2356                           l4014 2320  
                         l1198 1FE6                           l3230 4340                           l3222 431C  
                         l3214 4D44                           l3302 361A                           l3310 37CC  
                         l3206 3BCC                           l1391 331E                           l4120 26BC  
                         l4112 2660                           l4104 261C                           l4040 23B8  
                         l4032 2382                           l4024 2366                           l4016 2330  
                         l4008 2304                           l4200 33F6                           l3232 4356  
                         l3224 4324                           l3400 408E                           l3304 363A  
                         l3320 382C                           l3312 37DA                           l3208 3C02  
                         l3240 4ADC                           l1368 42AA                           l1289 25BE  
                         l1377 312E                           l4130 2712                           l4122 26D6  
                         l4114 268A                           l4050 2408                           l4042 23D8  
                         l4034 2392                           l4026 236C                           l4018 2340  
                         l4210 345A                           l4202 33F8                           l3234 435E  
                         l3226 432C                           l3218 4302                           l3250 3678  
                         l3402 409A                           l3410 3F2E                           l3330 38A2  
                         l3322 384A                           l3314 37FA                           l3242 4AE8  
                         l1299 26EE                           l1379 3136                           l4124 26F2  
                         l4132 2718                           l4108 2646                           l4116 268E  
                         l4060 2458                           l4052 2412                           l4044 23E8  
                         l4036 23A2                           l4028 2372                           l4140 4AA6  
                         l4220 34B2                           l4212 3478                           l4204 3404  
                         l3236 4360                           l3228 433A                           l3260 3742  
                         l3252 36CC                           l3404 40B2                           l3420 3F8E  
                         l3412 3F46                           l3500 4DDE                           l3340 390A  
                         l3332 38C2                           l3324 3852                           l3316 37FE  
                         l3308 37C8                           l3244 4AFA                           l4150 3ECC  
                         l4134 271C                           l4126 2702                           l4118 26A8  
                         l4070 249A                           l4062 2464                           l4054 2428  
                         l4038 23B2                           l4222 34C0                           l4214 347A  
                         l4206 3440                           l4310 0FDE                           l4302 0EFE  
                         l3238 4366                           l3262 3786                           l3254 36E0  
                         l3430 4138                           l3422 40E4                           l3406 40CA  
                         l3414 3F52                           l3510 4B36                           l3502 4DE2  
                         l3270 3506                           l3334 38D4                           l3326 3866  
                         l3318 380C                           l3246 4AFE                           l3350 42B6  
                         l1398 3A7A                           l4230 4A54                           l4152 3EDC  
                         l4144 3E60                           l4160 3A7C                           l4128 2710  
                         l4080 24FC                           l4072 24AA                           l4064 2472  
                         l4056 2434                           l4048 23FC                           l3600 1F50  
                         l4224 34C2                           l4216 347E                           l4208 344C  
                         l4400 1644                           l4312 1010                           l4304 0F50  
                         l3256 36E4                           l3248 365C                           l3424 4108  
                         l3432 4150                           l3416 3F5E                           l3408 3F0A  
                         l4240 4816                           l3520 4C2A                           l3512 4B5C  
                         l3504 4B22                           l3280 3548                           l3272 350A  
                         l3264 34D4                           l3328 3874                           l3336 38DA  
                         l3360 4B7C                           l3352 42CA                           l3344 4288  
                         l3440 30D6                           l4232 4A70                           l4154 3F00  
                         l4146 3E8E                           l4170 3B06                           l4162 3AAA  
                         l4090 25A4                           l4082 2518                           l4074 24C4  
                         l4066 247E                           l4058 244C                           l3610 1F64  
                         l3602 1F54                           l4138 4A96                           l4218 34A2  
                         l4410 165C                           l4330 1190                           l4322 1094  
                         l4314 1016                           l4306 0F82                           l3258 3726  
                         l3434 4168                           l3426 4120                           l3530 46C4  
                         l3370 3FE4                           l3418 3F76                           l3362 4CDA  
                         l4250 484E                           l4242 4820                           l3522 4C3A  
                         l3514 4B5E                           l3506 4B26                           l3290 35A2  
                         l3282 3566                           l3274 3518                           l3266 34D8  
                         l3338 38EA                           l3354 42CE                           l3346 4296  
                         l3450 314E                           l3442 30E6                           l4234 4A8C  
                         l4156 3F06                           l4148 3E9E                           l4172 3B18  
                         l4164 3ABA                           l4092 25AE                           l4084 2542  
                         l4076 24D4                           l4068 248E                           l3700 21B6  
                         l3620 1F78                           l3612 1F68                           l3604 1F58  
                         l4412 168E                           l4332 11A2                           l4340 134E  
                         l4324 10A8                           l4316 1032                           l4308 0F8A  
                         l3428 412C                           l3380 420A                           l3540 463E  
                         l3532 46D8                           l3372 3FF0                           l3524 466C  
                         l3364 4CEA                           l4260 4858                           l4252 4850  
                         l4244 4830                           l3508 4B2E                           l3292 35D0  
                         l3284 356E                           l3276 3538                           l3268 34E6  
                         l3356 42EC                           l3348 42A2                           l3460 3184  
                         l3452 3154                           l3444 3106                           l3436 30A2  
                         l4228 4A48                           l4174 3B26                           l4166 3AE8  
                         l4094 25BC                           l4086 2578                           l4078 24F0  
                         l3710 21DE                           l3702 21BA                           l3630 1FB2  
                         l3622 1F7C                           l3614 1F6C                           l3606 1F5C  
                         l3550 1E50                           l4190 339C                           l4182 3322  
                         l4430 1766                           l4414 16C0                           l4406 1650  
                         l4342 1380                           l4350 13BE                           l4334 121E  
                         l4326 1148                           l4318 1088                           l4502 4DC4  
                         l3382 420E                           l3390 4256                           l3534 46EE  
                         l3374 3FFC                           l3366 3FA8                           l4510 4D8A  
                         l3526 4680                           l4262 485A                           l4254 4852  
                         l4246 483A                           l4238 4812                           l3542 44AA  
                         l3518 4C1E                           l4270 444C                           l3294 35F0  
                         l3286 3582                           l3278 353C                           l3358 4B62  
                         l3198 3B80                           l3470 3222                           l3462 318E  
                         l3454 3164                           l3446 3122                           l3438 30C2  
                         l4176 3B76                           l4168 3AF8                           l4096 25CE  
                         l4088 2586                           l3720 2238                           l3712 21EC  
                         l3704 21CA                           l3640 2004                           l3632 1FCE  
                         l3624 1F80                           l3616 1F70                           l3608 1F60  
                         l3560 1E90                           l3552 1E5E                           l4184 3332  
                         l4432 1798                           l4440 17CE                           l4352 13F0  
                         l4360 142E                           l4344 13B2                           l4336 127A  
                         l4328 1158                           l3392 426E                           l3384 4226  
                         l3536 4612                           l3368 3FCC                           l3376 4014  
                         l4504 4D6E                           l3528 4696                           l4264 485C  
                         l4256 4854                           l4248 4844                           l4280 2C90  
                         l4272 2AC8                           l3544 44BE                           l4600 306A  
                         l4520 419A                           l4512 4182                           l3800 4958  
                         l3296 35F2                           l3288 3590                           l3480 32E8  
                         l3464 3194                           l3472 3286                           l3456 3170  
                         l3448 313E                           l4178 3B7C                           l4098 25DC  
                         l3730 22A2                           l3722 2246                           l3714 2202  
                         l3706 21CC                           l3650 2050                           l3642 2012  
                         l3634 1FDE                           l3618 1F74                           l3626 1F84  
                         l3570 1EC2                           l3562 1E92                           l3554 1E60  
                         l4194 33B0                           l4186 3340                           l4442 1800  
                         l4426 1702                           l4362 1460                           l4354 1422  
                         l4338 12F6                           l4290 0E5C                           l3386 4232  
                         l3538 4626                           l3394 4046                           l3378 402C  
                         l4506 4D76                           l3490 4DF6                           l4266 485E  
                         l4258 4856                           l4282 2D28                           l4274 2B94  
                         l3546 44D6                           l4602 3096                           l4530 41E4  
                         l4522 41B0                           l4514 4194                           l3802 499E  
                         l3298 3604                           l3482 32EE                           l3474 32A0  
                         l3466 3216                           l3458 3178                           l3900 27D0  
                         l3740 22DC                           l3732 22C2                           l3724 2280  
                         l3660 2090                           l3708 21DA                           l3644 2014  
                         l3636 1FF4                           l3628 1F88                           l3580 1EEA  
                         l3572 1EC4                           l3556 1E70                           l3564 1E9A  
                         l3548 1E44                           l4196 33B8                           l4188 3386  
                         l4444 1832                           l4428 1734                           l4364 1492  
                         l4292 0E8C                           l3388 423E                           l3396 406A  
                         l4508 4D80                           l3492 4DD4                           l4268 4860  
                         l4284 2D5C                           l4276 2BC8                           l4540 4206  
                         l4532 41EE                           l4524 41B4                           l4516 4196  
                         l3812 49F8                           l3820 4DBE                           l3484 32FE  
                         l3476 32BE                           l3468 321C                           l4700 1960  
                         l3910 2810                           l3902 27E0                           l3742 22E2  
                         l3734 22C6                           l3718 222C                           l3726 2282  
                         l3670 20BA                           l3662 209C                           l3654 2064  
                         l3646 201E                           l3638 2000                           l3590 1F24  
                         l3582 1EFA                           l3574 1ECA                           l3566 1EAA  
                         l3558 1E80                           l4198 33C4                           l4462 18EC  
                         l4446 186C                           l4454 18AA                           l4390 15C4  
                         l4382 1554                           l4366 14CC                           l4374 150A  
                         l4294 0EC0                           l4286 0E26                           l3398 4082  
                         l3822 4504                           l3494 4DD8                           l4278 2C5C  
                         l4542 4D02                           l3830 476E                           l4534 41F0  
                         l4526 41D8                           l4518 4198                           l4470 4D8E  
                         l3814 4A3E                           l3806 49A8                           l3478 32D8  
                         l3750 392C                           l4550 472E                           l4710 1980  
                         l4702 1964                           ?_pad 0011                           l3912 2820  
                         l3920 2840                           l3904 27E2                           l3744 22F0  
                         l3736 22D4                           l3728 2292                           l3680 212C  
                         l3664 20A0                           l3656 2074                           l3648 2040  
                         l3672 20C0                           l3592 1F36                           l3584 1F0A  
                         l3576 1ED8                           l3568 1EB0                           l4376 1548  
                         l4296 0EF4                           l4288 0E50                           l3824 4518  
                         l4560 4864                           l3488 4DF2                           l3496 4DE8  
                         l4544 4D04                           l3832 43E6                           l3840 3DDA  
                         l4536 41FA                           l4528 41E2                           l4480 4DA8  
                         l4472 4D98                           l3808 49EE                           l3760 3982  
                         l3752 3950                           l4552 4736                           l4800 1C3E  
                         l4720 19C4                           l4712 198A                           l4704 1968  
                         l3930 287E                           l3922 2850                           l3914 2828  
                         l3906 27EA                           l3746 22F2                           l3738 22DA  
                         l3690 2186                           l3674 20E6                           l3682 213C  
                         l3666 20AE                           l3658 2082                           l3594 1F44  
                         l3586 1F0C                           l3578 1EDA                           l4466 18F8  
                         l4386 1560                           l4562 48B6                           l3826 4530  
                         l3498 4DEC                           l4546 4D0A                           l3834 4BE0  
                         l3850 3E3A                           l3842 3DF2                           l4538 41FC  
                         l4474 4D9A                           l3818 4DAE                           l4482 4C56  
                         l3770 3A40                           l3762 399E                           l3754 395E  
                         l4554 473E                           l4810 1C84                           l4802 1C42  
                         l4730 1A04                           l4722 19C8                           l4714 1992  
                         l4706 1970                           l3940 28C6                           l3932 288E  
                         l3924 2850                           l3916 282C                           l3908 27FA  
                         l3692 2190                           l3684 2162                           l3676 211A  
                         l3668 20B0                           l3596 1F48                           l3588 1F14  
                         l4388 1592                           l3860 455E                           l4564 4CB0  
                         l3780 4C86                           l3836 47C0                           l3828 4BA2  
                         l3852 3E52                           l3844 3DFE                           l4580 2EBC  
                         l4572 2E10                           l4476 4DA4                           l4484 4C5A  
                         l3764 39BA                           l3756 396C                           l4556 475A  
                         l4548 471C                           l4820 1CCA                           l4812 1C88  
                         l4804 1C58                           l4740 1A54                           l4732 1A22  
                         l4724 19D0                           l4716 199A                           l4708 1978  
                         l4660 1906                           l3950 2914                           l3942 28DA  
                         l3934 289E                           l3870 272E                           l3694 219E  
                         l3686 2172                           l3678 211C                           l3598 1F4C  
                         l4398 1606                           l3854 45B8                           l3862 4572  
                         l3790 4C9C                           l3782 4C90                           l3846 3E0A  
                         l3838 3DB6                           l4590 2F94                           l4582 2EE8  
                         l4574 2E3E                           l4566 2DF6                           l4478 4DA6  
                         l4486 4C68                           l3766 3A10                           l3758 3972  
                         l3774 3A52                           l4830 1D10                           l4822 1CCE  
                         l4806 1C6C                           l4814 1C9E                           l4750 1AB6  
                         l4742 1A70                           l4734 1A28                           l4726 19E4  
                         l4718 19AC                           l4670 1922                           l4662 190A  
                         l3960 295C                           l3952 2924                           l3944 28E8  
                         l3936 28AE                           l3928 2864                           l3880 276A  
                         l3872 273A                           l3696 21A0                           l3856 45CC  
                         l3864 458A                           l3784 4C96                           l3792 4D50  
                         l3848 3E22                           l4592 2FBE                           l4584 2F12  
                         l4576 2E66                           l4568 2DFE                           l4488 4C6C  
                         l4840 1D68                           l4832 1D14                           l4816 1CB2  
                         l4824 1CE4                           l4808 1C80                           l4760 1B02  
                         l4752 1ABE                           l4744 1A8C                           l4736 1A2C  
                         l4728 19F0                           l4680 192E                           l4672 1924  
                         l4664 190E                           l3970 299C                           l3962 296A  
                         l3954 2936                           l3946 28F4                           l3938 28B6  
                         l3890 279A                           l3882 277A                           l3874 2748  
                         l3698 21AE                           l3858 45E4                           l3786 4C98  
                         l3866 3C4A                           l4594 2FEA                           l4586 2F3E  
                         l4578 2E92                           l3794 4908                           l4850 1DD0  
                         l4842 1D7C                           l4826 1CF8                           l4834 1D2A  
                         l4818 1CC6                           l4770 1B6C                           l4762 1B34  
                         l4746 1AA6                           l4754 1AD6                           l4738 1A40  
                         l4690 193E                           l4682 1930                           l4674 1926  
                         l4666 1912                           l4658 1902                           l3980 2A0E  
                         l3972 29CA                           l3956 294C                           l3964 297C  
                         l3948 2912                           l3892 27A0                           l3884 277C  
                         l3876 274A                           l3788 4C9A                           l3868 3D00  
                         l4596 3014                           l4588 2F68                           l3796 494E  
                         l4852 1DEA                           l4844 1DA6                           l4836 1D3E  
                         l4828 1D0C                           l4780 1BB2                           l4772 1B70  
                         l4764 1B40                           l4756 1AF4                           l4748 1AAE  
                         l4692 1942                           l4684 1932                           l4676 1928  
                         l4668 1916                           l3990 2A86                           l3982 2A38  
                         l3966 298A                           l3958 2952                           l3894 27AE  
                         l3878 275A                           l3886 2784                           l4598 3040  
                         l4854 1DFE                           l4838 1D56                           l4790 1BF8  
                         l4782 1BB6                           l4766 1B54                           l4774 1B86  
                         l4758 1AFC                           l4846 1DB8                           l4862 1E2C  
                         l4694 194A                           l4686 1934                           l4678 192A  
                         l3992 2AA2                           l3976 29F4                           l3984 2A3C  
                         l3968 298E                           l3896 27B0                           l3888 2794  
                         l4856 1E00                           l4848 1DCC                           l4792 1BFC  
                         l4776 1B9A                           l4784 1BCC                           l4768 1B68  
                         l4696 1952                           l4688 193A                           l3994 2AA6  
                         l3986 2A56                           l3978 2A00                           l3898 27C0  
                         l4858 1E14                           l4786 1BE0                           l4794 1C12  
                         l4778 1BAE                           l4698 195A                           l3996 2AB4  
                         l3988 2A6C                           l4796 1C26                           l4788 1BF4  
                         l3998 2ABA                           l4798 1C3A                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           u3000 1FCC  
                         u3010 1FF4                           u3011 1FF0                           u3100 212C  
                         u3020 2012                           u3101 2128                           u3021 200E  
                         u3110 2162                           u3030 2032                           u3111 215E  
                         u3031 202E                           u3200 222C                           u3120 2172  
                         u3040 2040                           u4000 10A8                           u2400 3BCC  
                 _BAUD4CONbits 000EE9                           u3201 2228                           u3121 216E  
                         u3041 203C                           u4001 10A4                           u2401 3BC8  
                         u3210 2246                           u3130 219E                           u3050 2050  
                         u4010 1158                           u2410 3C02                           u3211 2242  
                         u3131 219A                           u3051 204C                           u4011 1154  
                         u2411 3BFE                           u3220 2280                           u3140 21AE  
                         u3060 2082                           u4100 1506                           u4020 11A2  
                         u2420 431C                           u3300 39BA                           u3221 227C  
                         u3141 21AA                           u3061 207E                           u4101 1502  
                         u4021 119E                           u2421 4318                           u2501 3542  
                         u3301 39B6                           u3230 2292                           u3150 21CA  
                         u3070 2090                           u4110 1548                           u4030 1380  
                         u2430 433A                           u3310 4DBE                           u2510 3566  
                         u3231 228E                           u3151 21C6                           u3071 208C  
                         u4111 1544                           u4031 137C                           u2431 4336  
                         u3311 4DBA                           u2511 3562                           u3400 2810  
                         u3240 22A2                           u3160 21DA                           u3080 20AE  
                         u4200 1766                           u4120 1592                           u4040 13B2  
                         u2440 4356                           u3320 3E3A                           u2520 3590  
                         u2600 38EA                           u3401 280C                           u3241 229E  
                         u3161 21D6                           u3081 20AA                           u4201 1762  
                         u4121 158E                           u4041 13AE                           u2441 4352  
                         u3321 3E36                           u2521 358C                           u2601 38E6  
                         u3410 2850                           u3250 22C2                           u3170 21EC  
                         u3090 20E6                           u4210 1798                           u4130 15C4  
                         u4050 13F0                           u3330 3E52                           u2530 35D0  
                         u2450 4B1E                           u2610 4296                           _T2PR 000FBC  
                         u3411 284C                           u3251 22BE                           u3171 21E8  
                         u3091 20E2                           u4211 1794                           u4131 15C0  
                         u4051 13EC                           u3331 3E4E                           u2531 35CC  
                         u2451 4B1A                           u2611 4292                           u3500 29CA  
                         u3420 28C6                           u3340 2748                           u3260 22D4  
                         u3180 2202                           u4220 17CA                           u4140 1602  
                         u4060 1422                           u2460 3678                           u2700 40CA  
                         u2540 361A                           u2380 3B92                           u2620 42EC  
                         u3501 29C6                           u3421 28C2                           u3341 2744  
                         u3261 22D0                           u3181 21FE                           u4221 17C6  
                         u4141 15FE                           u4061 141E                           u2461 3674  
                         u2701 40C6                           u2541 3616                           u2381 3B8E  
                         u2621 42E8                           u3510 29E0                           u3430 28E8  
                         u3350 275A                           u3270 22F0                           u3190 2218  
                         u4230 1800                           u4150 1644                           u4070 1460  
                         u2470 3742                           u2710 40E2                           u2550 37DA  
                         u2630 4B7C                           u2390 3BA4                           u3511 29DC  
                         u3431 28E4                           u3351 2756                           u3271 22EC  
                         u3191 2214                           u4231 17FC                           u4151 1640  
                         u4071 145C                           u2471 373E                           u2711 40DE  
                         u2551 37D6                           u2631 4B78                           u2391 3BA0  
                         u3520 29F4                           u3440 2912                           u3360 276A  
                         u3600 2380                           u4240 1832                           u4160 168E  
                         u4080 1492                           u2720 3F8E                           u2640 4CEA  
                         u4320 2E0C                           u2480 34E6                           u2560 380C  
                         u2800 314E                           u3280 3950                           u3521 29F0  
                         u3441 290E                           u3361 2766                           u3601 237C  
                         u4241 182E                           u4161 168A                           u4081 148E  
                         u2721 3F8A                           u2641 4CE6                           u4321 2E08  
                         u2481 34E2                           u2561 3808                           u2801 314A  
                         u3281 394C                           u3530 2A0E                           u3450 2936  
                         u3370 27AE                           u3610 2392                           u4250 186C  
                         u4170 16C0                           u4090 14CC                           u2730 3FA6  
                         u2650 4D00                           u4330 2E66                           u2490 3518  
                         u2570 384A                           u2810 3164                           u3290 399E  
                         u3531 2A0A                           u3451 2932                           u3371 27AA  
                         u3611 238E                           u4251 1868                           u4171 16BC  
                         u4091 14C8                           u2731 3FA2                           u2651 4CFC  
                         u4331 2E62                           u2491 3514                           u2571 3846  
                         u2811 3160                           u3291 399A                           u3540 2A56  
                         u3460 294C                           u3380 27C0                           u3700 2632  
                         u3620 23A2                           u2900 1E70                           u4260 18A6  
                         u4180 16FE                           u2740 4168                           u2660 402C  
                         u4340 2EBC                           u2580 3874                           u2820 32A0  
                         u4500 1B54                           u3541 2A52                           u3461 2948  
                         u3381 27BC                           u3701 262E                           u3621 239E  
                         u2901 1E6C                           u4261 18A2                           u4181 16FA  
                         u2741 4164                           u2661 4028                           u4341 2EB8  
                         u2581 3870                           u2821 329C                           u4501 1B50  
                         u3550 2A86                           u3470 296A                           u3390 27D0  
                         u3710 2646                           u3630 23D8                           u2910 1E80  
                         u4270 18E8                           u4190 1734                           u2750 4180  
                         u2670 4044                           u4350 2F12                           u2590 38A2  
                         u2830 32BE                           u4510 1B9A                           u3551 2A82  
                         u3471 2966                           u3391 27CC                           u3711 2642  
                         u3631 23D4                           u2911 1E7C                           u4271 18E4  
                         u4191 1730                           u2751 417C                           u2671 4040  
                         u4351 2F0E                           u2591 389E                           u2831 32BA  
                         u4511 1B96                           u3560 2AB4                           u3480 298A  
                         u3800 3AE8                           u3720 2660                           u3640 23E8  
                         u2920 1EC2                           u2680 426E                           u4360 2F68  
                         u4280 4C84                           u2840 32D8                           u2760 30D2  
                         u4600 1E40                           u4520 1BE0                           u3561 2AB0  
                         u3481 2986                           u3801 3AE4                           u3721 265C  
                         u3641 23E4                           u2921 1EBE                           u2681 426A  
                         u4361 2F64                           u4281 4C80                           u2841 32D4  
                         u2761 30CC                           u4601 1E3C                           u4521 1BDC  
                         u3490 299C                           u3810 3B06                           u3730 26A8  
                         u3650 2562                           u3570 231E                           u2930 1ED8  
                         u2690 4286                           u4370 2FBE                           u2850 32E8  
                         u2770 30D4                           u4530 1C26                           u3491 2998  
                         u3811 3B02                           u3731 26A4                           u3571 231A  
                         u2931 1ED4                           u2691 4282                           u4371 2FBA  
                         u2851 32E4                           u4531 1C22                           u3820 3B26  
                         u3740 26D6                           u3660 25BC                           u3580 2330  
                         u2940 1EEA                           u3900 346A                           u4380 3014  
                         u2860 4B4A                           u2780 30E6                           u4540 1C6C  
                         u4460 19AC                           u3821 3B22                           u3741 26D2  
                         u3661 25B8                           u3581 232C                           u2941 1EE6  
                         u3901 3466                           u4381 3010                           u2861 4B42  
                         u2781 30E2                           u4541 1C68                           u4461 19A8  
                         u3830 3B76                           u3750 2710                           u3670 25DC  
                         u3590 2340                           u2950 1EFA                           u3910 3478  
                         u4390 306A                           u2790 3122                           u4550 1CB2  
                         u4470 1A22                           u3831 3B72                           u3751 270C  
                         u3671 25D8                           u3655 2558                           u3591 233C  
                         u2951 1EF6                           u3911 3474                           u4391 3066  
                         u2791 311E                           u4551 1CAE                           u4471 1A1E  
                         u3760 3E8E                           u3680 25EE                           u2960 1F36  
                         u3920 34B2                           u3840 3332                           u2880 4C54  
                         u4560 1CF8                           u4480 1AA6                           u3761 3E8A  
                         u3681 25EA                           u2961 1F32                           u3921 34AE  
                         u3841 332E                           u2881 4C50                           u4561 1CF4  
                         u4481 1AA2                           u3770 3ECC                           u3690 261C  
                         u2970 1F44                           u2890 1E5E                           u3930 34C0  
                         u3850 3340                           u4570 1D3E                           u4490 1AF4  
                         u3771 3EC8                           u3691 2618                           u2971 1F40  
                         u2891 1E5A                           u3931 34BC                           u3851 333C  
                         u4571 1D3A                           u4491 1AF0                           u3780 3F00  
                         u2980 1FB2                           u3860 339C                           u3940 4A8C  
                         u4580 1D68                           u3781 3EFC                           u2981 1FAE  
                         u3861 3398                           u3941 4A88                           u4581 1D64  
                         u3790 3AAA                           u2990 1FCA                           u3870 33F2  
                         u2878 4B4C                           u4590 1DCC                           u3791 3AA6  
                         u2991 1FC4                           u3871 33EE                           u3951 0E56  
                         u4807 44F4                           u4591 1DC8                           u3880 343C  
                         u3960 0F50                           u3881 3438                           u3961 0F4C  
                         u4817 4826                           u3890 345A                           u3970 0FDE  
                         u3891 3456                           u3971 0FDA                           u4907 46E2  
                         u4827 468A                           u4747 19B6                           u3980 1032  
                         u3981 102E                           u4917 470C                           u4837 46B4  
                         u4757 1A5E                           u3990 1088                           u3991 1084  
                         u4927 40A4                           u4847 3F68                           u4767 1AC8  
                         u4937 45D6                           u4857 4522                           u4777 3E14  
                         u4947 4602                           u4867 454E                           u4787 4C30  
                         u4957 4630                           u4877 4006                           u4797 44C8  
                         u4967 465C                           u4887 457C                           u4977 4248  
                         u4897 45A8                           u4987 4142                  _LightBlueMove 47C0  
                         abs@a 0013                           _dbuf 0190                           _main 1902  
                         _dtoa 30A2                           _prec 00EE                           _vals 01C5  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 420A                           prodh 000FF4                           prodl 000FF3  
                         start 002E                ___fldiv@new_exp 002A         __end_of_color_read_Red 49A8  
              __end_of_HighISR 002E         __end_of_color_read_lum 4958                  _Backhalfblock 455E  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 4BE0                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 466C                _RunOneBlockTime 01CD  
              __end_of___aodiv 365C                __end_of___fladd 2304                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 392C                __end_of___fldiv 2AC8  
              __end_of___flmul 272E                __end_of___flsub 4ADC                    colour_rel@B 004A  
                  colour_rel@G 0046                          ?_stop 0014                    colour_rel@L 0036  
                  colour_rel@R 0042                __end_of___lwdiv 4376                          i2l270 002A  
                 vfpfcnvrt@fmt 0041                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 30A2        __end_of_sendCharSerial4 4DC4     __end_of_I2C_2_Master_Start 4DFC  
   __end_of_I2C_2_Master_Write 4DDE                   YellowMove@mL 0020                          _flags 00F4  
                 YellowMove@mR 0022                          _fputc 3B80                          _fputs 4ADC  
               delayed_ms@time 0001                          pad@fp 0011                          _power 01D1  
                        _width 015C                          _putch 4E02                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 00E6  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 476E  
      __end_of_color_read_Blue 4A48          _I2C_2_Master_RepStart 4DDE               __end_of_BlueMove 444C  
               ?_Backhalfblock 001A                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 4376  
              _reverseOneBlock 45B8                   __end_of_main 1E44                   __end_of_dtoa 3320  
                 __end_of_stop 4288                _colour_rel$2950 003A                _colour_rel$2951 003E  
                       ??_main 0059                         ??_dtoa 0026          __end_of_ReverseYellow 3D00  
             __end_of_PinkMove 4908                         ??_stop 0018                  __activetblptr 000001  
=======
Symbol Table                                                                                   Sun Mar 12 22:15:05 2023

               _color_read_Red 5B54                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B04                   ___fldiv@sign 0042                _color_read_Blue 5BF4  
                           l51 5B52                             l60 5C42                             l45 5A0E  
                           l54 5BA2                             l63 5708                             l48 608A  
                           l57 5BF2                             l66 37FC                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4274  
             _color_read_Green 5BA4                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 60C8                            l140 5FF6                            l212 60E0  
                          l143 5FF8                            l152 60F6                            l161 5E3A  
                          l209 60CC                            l146 601E                            l218 5FCC  
                          l155 6100                            l411 2834                            l149 610A  
                          l421 2848                            l158 60EC                            l415 27F2  
                          l256 6116                            l600 4292                            l610 43E8  
                          l602 42E8                            l523 5368                            l507 522C  
                          l515 518E                            l531 5046                            l611 4438  
                          l603 435C                            l612 4452                            l604 43CC  
                          l605 4394                            l542 5F82                            l702 5F66  
                          l551 5CDE                            l560 5762                            l705 606A  
                          l545 5F9C                            l554 5816                            l563 5870  
                          l539 52CA                            l548 5C90                            l572 5EF6  
                          l493 48FA                            l557 57BC                            l581 5AB2  
                          l389 240C                            l590 5472                            l670 3DE2  
                          l486 53F0                            l575 56AA                            l584 596A  
                          l664 3DBA                            l832 4A5E                            l569 5EB8  
                          l593 4EE6                            l578 5A60                            l499 54F0  
                          l587 59BC                            l819 478E                            l596 4F9C  
                          l693 60AA                            l599 4402                            l696 6044  
                          l970 4C22                            l699 5F50                            l964 50F0  
                          l975 4C68                            l979 5F2E                            _abs 5E3C  
                          _pad 54F2                            _rel 01B2                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1002 4B64                           l1203 55DE  
                         ?_abs 0013                           l1300 33EC                           l1301 33DA  
                         l1233 2A3A                           l1250 2B54                           l1242 2D0A  
                         l1234 2A28                           l1323 3134                           l1235 29EE  
                         l1260 2C12                           l1326 2FC6                           l1319 2DD0  
                         l1415 5514                           l1336 30F6                           l1328 303E  
                         l4000 2A08                           l1360 44AA                           l1424 3E70  
                         l1329 302C                           l4010 2A48                           l4002 2A0C  
                         l1426 3E78                           l1259 2C24                           l1275 5D70  
                         l1363 4606                           l1419 556A                           l1427 3EBE  
                         l1292 32F2                           l4100 2CE2                           l4020 2A8A  
                         l4012 2A58                           l4004 2A1A                           l1196 55D6  
                         l1452 1CC0                           l4102 2CE4                           l4030 2AB8  
                         l4022 2A98                           l4006 2A1C                           l1374 459E  
                         l1534 5E72                           l1438 4060                           l1454 1B06  
                         l1287 34CE                           l1367 4542                           l1543 4272  
                         l1519 58C6                           l1383 5918                           l4104 2CEA  
                         l4040 2B24                           l4032 2AC2                           l4024 2AA4  
                         l4016 2A6C                           l4008 2A26                           l4120 5596  
                         l4112 556C                           l5000 215E                           l1289 332E  
                         l1537 5E7A                           l1529 4D66                           l1449 2326  
                         l1298 3374                           l4106 2CF8                           l4042 2B34  
                         l4026 2AA8                           l4018 2A7C                           l4034 2AC8  
                         l4130 55CA                           l4122 55A4                           l4114 5574  
                         l4210 4932                           l4202 48FC                           l1546 41B6  
                         l1554 5634                           l5010 2192                           l5002 2164  
                         l1482 2108                           l1563 5B02                           l4300 3296  
                         l4108 2CFA                           l4060 2BB6                           l4052 2B8E  
                         l4036 2AEE                           l4044 2B44                           l4028 2AB6  
                         l4132 55D0                           l4124 55AA                           l4116 5586  
                         l5100 57EA                           l4220 499A                           l4212 4940  
                         l4204 4900                           l4140 5DD8                           l5012 2198  
                         l5004 216A                           l5020 2230                           l1557 5644  
                         l4310 32E2                           l4302 32A6                           l4062 2BBE  
                         l4054 2B98                           l4046 2B6A                           l4038 2B22  
                         l4070 2BE2                           l4126 55C0                           l4118 558E  
                         l4150 4818                           l4142 4790                           l5102 570A  
                         l4222 49A8                           l4230 4A0E                           l4214 4960  
                         l4206 490E                           l4134 5DB6                           l5030 22B2  
                         l5022 224E                           l5014 21F0                           l5006 217C  
                         l5110 3826                           l1575 4E30                           l1583 5DF8  
                         l4320 332C                           l4312 32F0                           l4304 32B6  
                         l4240 3142                           l4400 2D8A                           l4080 2C34  
                         l4072 2BE6                           l4064 2BC2                           l4056 2BA6  
                         l4048 2B7A                           l4128 55C8                           l4152 485A  
                         l4144 47AC                           l5200 5FE4                           l5104 571E  
                         l4160 460C                           l4232 4A1E                           l4224 49D6  
                         l4216 497E                           l4208 492E                           l4136 5DC2  
                         l1592 5DB4                           l5040 2306                           l5032 22C0  
                         l5024 226A                           l5016 2224                           l5008 218E  
                         l5120 3876                           l5112 3834                           l6000 276C  
                         l1497 3B02                           l4330 3372                           l4322 333E  
                         l4314 32FC                           l4306 32BE                           l4250 3182  
                         l4242 3150                           l4410 2DE0                           l4402 2D9A  
                         l4090 2C9A                           l4082 2C40                           l4074 2BF4  
                         l4066 2BD2                           l4058 2BA8                           l4154 4876  
                         l4146 4800                           l5050 60E8                           l5202 606E  
                         l5106 5736                           l5210 5B54                           l4170 466C  
                         l4162 461A                           l4234 4A3E                           l4226 49F6  
                         l4218 4986                           l1586 6114                           l4138 5DD4  
                         l5034 22D8                           l5026 2272                           l5018 222C  
                         l5130 392C                           l5122 3896                           l5114 3842  
                         l6002 2780                           l6010 27B2                           l4340 33D2  
                         l4324 3354                           l4332 3384                           l4316 331A  
                         l4308 32CE                           l4260 31A8                           l4252 3184  
                         l4244 3152                           l4500 3120                           l4420 2E1A  
                         l4412 2DF0                           l4404 2DAA                           l4092 2CAA  
                         l4084 2C4E                           l4076 2C0A                           l4068 2BD4  
                         l5300 45AE                           l4156 48BA                           l4148 4814  
                         l5044 6102                           l5052 60F8                           l5060 5DFC  
                         l5212 5B9A                           l5204 5B04                           l4180 46B6  
                         l4172 4670                           l4164 463A                           l4228 4A08  
                         l5036 22E8                           l5028 2282                           l5132 3942  
                         l5140 395A                           l5124 38EC                           l5116 3846  
                         l5108 37FE                           l6020 281C                           l6012 27C6  
                         l6004 2794                           l4350 3440                           l4334 3392  
                         l4326 335A                           l4318 331C                           l4270 31E8  
                         l4262 31B6                           l4246 3162                           l4254 318C  
                         l4238 3136                           l4502 3124                           l4430 2E6C  
                         l4422 2E30                           l4406 2DBA                           l4094 2CCA  
                         l4086 2C88                           l5310 45F6                           l5302 45B2  
                         l5046 6106                           l5054 60FC                           l5070 5E38  
                         l5062 5E00                           l5222 5BF4                           l5206 5B4A  
                         l5230 60DC                           l4190 4726                           l4182 46C4  
                         l4174 467C                           l4166 463E                           l4158 4608  
                         l5038 22FE                           l5150 3A18                           l5134 394A  
                         l5142 398C                           l5118 3856                           l6014 27CA  
                         l6006 2798                           l4360 34AA                           l4344 33FC  
                         l4352 3444                           l4336 3396                           l4328 3364  
                         l4280 3228                           l4272 31EA                           l4264 31B8  
                         l4256 319C                           l4248 3172                           l4520 50C4  
                         l4512 5048                           l4440 2EB2                           l4432 2E7A  
                         l4424 2E3C                           l4416 2E04                           l4408 2DC0  
                         l4096 2CCE                           l4088 2C8A                           l5304 45D6  
                         l5400 1042                           l5080 5C44                           l5048 60E4  
                         l5240 596C                           l5232 5E7C                           l5064 5E08  
                         l5056 60EE                           l5224 5C3A                           l5216 5BA4  
                         l4192 4738                           l4184 46D6                           l4176 469A  
                         l4168 464C                           l5160 3A94                           l5152 3A42  
                         l5144 39B0                           l5136 3952                           l5128 391C  
                         l5320 58BC                           l6016 27DE                           l6008 279C  
                         l4362 34AE                           l4354 345E                           l4346 3408  
                         l4338 33A4                           l4290 3258                           l4282 3230  
                         l4266 31C8                           l4274 31F2                           l4258 31A2  
                         l4522 50E8                           l4514 5076                           l4530 4B94  
                         l4450 2F20                           l4442 2ECC                           l4434 2E86  
                         l4426 2E54                           l4418 2E10                           l4098 2CDC  
                         l4506 5D2C                           l5306 45E6                           l5410 10D4  
                         l5402 105E                           l5090 5CA6                           l5082 5C58  
                         l5330 59DC                           l5234 591A                           l5074 5F30  
                         l5250 4FF2                           l5242 4F9E                           l5066 5E10  
                         l5058 60F2                           l5218 5BEA                           l4186 4704  
                         l4178 46A2                           l4194 473E                           l4610 5534  
                         l4602 54F2                           l5154 3A62                           l5146 39E4  
                         l5162 3AC4                           l5314 5872                           l6018 280A  
                         l4364 34BC                           l4356 3474                           l4348 3416  
                         l4292 3258                           l4284 3234                           l4276 3202  
                         l4268 31D8                           l4524 50EE                           l4516 5086  
                         l4540 4C02                           l4532 4BA4                           l4460 2FB6  
                         l4452 2F4A                           l4444 2EDC                           l4436 2E96  
                         l4428 2E60                           l4380 2D26                           l4508 5D3C  
                         l5308 45F4                           l5500 16EC                           l5420 124A  
                         l5412 1174                           l5404 10B4                           l4700 5314  
                         l5260 5778                           l5092 5CB2                           l5084 5C64  
                         l5340 59FE                           l5332 59E6                           l5324 59BE  
                         l5236 5646                           l5076 5F3C                           l5244 4FC2  
                         l5252 500A                           l5068 5E36                           l5228 60CC  
                         l4196 474E                           l4188 4724                           l3900 4DEA  
                         l4612 5538                           l4604 5500                           l4620 4C6A  
                         l5316 587E                           l6036 2834                           l4366 34C2  
                         l4358 348E                           l4278 3218                           l4518 50B4  
                         l4542 4C10                           l4534 4BD2                           l4470 2FF6  
                         l4462 2FC4                           l4454 2F80                           l4446 2EF8  
                         l4438 2EA2                           l4390 2D5E                           l4382 2D28  
                         l3910 284C                           l5270 4466                           l5430 13DE  
                         l5422 12A6                           l5414 1184                           l4702 5320  
                         l4710 5478                           l5262 5790                           l5094 5CC6  
                         l5086 5C78                           l5190 5FCE                           l5350 5A08  
                         l5342 5A00                           l5334 59F0                           l5326 59C2  
                         l5238 5EBA                           l5078 5F4C                           l5254 5022  
                         l5246 4FDA                           l4198 476E                           l4614 5556  
                         l4606 550C                           l4550 5EF8                           l4622 4C8A  
                         l5166 3AD6                           l5318 589C                           ?_pad 0011  
                         l4368 34C4                           l4296 326C                           l4288 3248  
                         l4544 4C60                           l4536 4BE2                           l4528 4B66  
                         l4480 3068                           l4472 3024                           l4464 2FD6  
                         l4456 2F8E                           l4448 2F04                           l4392 2D6E  
                         l4384 2D38                           l4376 2D0C                           l3920 2888  
                         l3912 2858                           l5280 44E4                           l5272 4474  
                         l5512 172E                           l5440 144E                           l5424 1322  
                         l5416 11BC                           l5408 10C0                           l3904 6046  
                         l4704 5338                           l4720 54D8                           l4712 5490  
                         l5096 57BE                           l5088 5C92                           l5192 5FD8  
                         l5352 5A0A                           l5344 5A02                           l5336 59FA  
                         l5328 59CC                           l5360 359C                           l5264 4E32  
                         l5256 503A                           l5248 4FE6                           l5600 539C  
                         l4616 5E3C                           l4608 5520                           l4800 3F58  
                         l4552 5F0E                           l4560 4A76                           l4624 4CC8  
                         l4632 4D08                           l4298 3286                           l4546 4C66  
                         l4538 4BF0                           l4490 30DE                           l4482 3092  
                         l4466 2FE4                           l4458 2FAC                           l4394 2D74  
                         l4386 2D48                           l4378 2D18                           l3930 28B8  
                         l3922 2898                           l3914 2866                           l5290 4538  
                         l5282 44EC                           l5274 44BA                           l5530 185E  
                         l5514 1760                           l5450 14BE                           l5418 11CE  
                         l5426 137A                           l3906 6062                           l4706 5350  
                         l4714 549C                           l5098 57D2                           l5258 5764  
                         l4730 51E4                           l4722 5190                           l5194 5FDE  
                         l5354 5A0C                           l5346 5A04                           l5338 59FC  
                         l5370 3764                           l5362 35D0                           l5266 4EE8  
                         l5610 53D8                           l5602 53C0                           l4618 5E56  
                         l4810 4000                           l4802 3F5E                           l4554 5F1E  
                         l4570 4AC6                           l4634 4D1A                           l4626 4CF0  
                         l4650 4062                           l4642 5D72                           l4492 30FA  
                         l4476 304E                           l4484 3096                           l4468 2FE8  
                         l4396 2D7A                           l4388 2D58                           l3940 28E2  
                         l3932 28CA                           l3924 289A                           l3916 2868  
                         l5292 4574                           l5284 44F8                           l5276 44D0  
                         l5268 4456                           l5532 1898                           l5540 18D6  
                         l5516 1792                           l5452 14F8                           l5460 1536  
                         l5428 13AC                           l5436 13EA                           l5380 0EEC  
                         l5372 0E52                           l4716 54A8                           l4708 5474  
                         l4724 51B4                           l4732 51FC                           l5620 6094  
                         l4740 512E                           l5700 5A10                           l5196 5FE0  
                         l5348 5A06                           l5364 3664                           l5612 53E2  
                         l5604 53CA                           l5356 56AC                           l4812 401A  
                         l4804 3F64                           l4580 4AF0                           l4572 4ACA  
                         l4564 4A8A                           l4628 4CFC                           l4652 4082  
                         l4644 5D82                           l4900 1C12                           l6180 3A2C  
                         l4494 310A                           l4486 30B0                           l4478 305A  
                         l4398 2D88                           l3942 28F2                           l3950 291C  
                         l3934 28CC                           l3918 2878                           l3926 28A2  
                         l5294 4580                           l5286 452A                           l5518 17C4  
                         l5526 17FA                           l5462 1574                           l5438 141C  
                         l5446 145A                           l5390 0F7C                           l5382 0F20  
                         l5374 0E7C                           l4718 54C0                           l4750 522E  
                         l4734 5214                           l4726 51CC                           l5702 5A62  
                         l5622 609E                           l4742 513A                           l5198 5FE2  
                         l5366 3698                           l5358 34D0                           l5710 3B22  
                         l5614 53E4                           l5606 53CC                           l4814 402A  
                         l4806 3FC8                           l4590 4B18                           l4582 4AFA  
                         l4574 4AD8                           l4566 4AB4                           l4558 4A60  
                         l4638 4D5E                           l4670 422A                           l4662 416A  
                         l4654 40D8                           l4646 55E0                           l4910 1CC8  
                         l4902 1C46                           l4830 1956                           l4822 192E  
                         l6182 3AB6                           l5630 4294                           l4496 3118  
                         l4488 30C4                           l3960 2954                           l3952 292C  
                         l3944 2902                           l3936 28D2                           l3928 28B2  
                         l5296 458E                           l5288 452C                           l5528 182C  
                         l5552 1924                           l5448 148C                           l5472 158C  
                         l5392 0FAE                           l5376 0E88                           l4752 5252  
                         l4760 529A                           l4728 51D8                           l5624 60A8  
                         l4744 5146                           l4736 50F2                           l5368 3730  
                         l5720 3BB6                           l5704 3B04                           l5616 53EE  
                         l5608 53D6                           l5560 60B8                           l4816 4030  
                         l4808 3FE2                           l4592 4B24                           l4584 4B04  
                         l4568 4AB6                           l4672 4252                           l4664 41A6  
                         l4656 40EC                           l4648 55FE                           l4680 5AC8  
                         l4920 1CF8                           l4912 1CD8                           l4904 1C4E  
                         l4840 19AC                           l4832 197A                           l4824 1934  
                         l5640 4356                           l5632 42EA                           l5800 2330  
                         l4498 311A                           l3970 2968                           l3962 2958  
                         l3954 293E                           l3946 2912                           l3938 28E0  
                         l5298 45AC                           l5474 15BE                           l5394 0FB6  
                         l5378 0EB8                           l4762 52B2                           l4754 526A  
                         l5618 608C                           l4738 5116                           l4746 515E  
                         l4690 5FF8                           l5730 3C8C                           l5722 3BE0  
                         l5714 3B34                           l5706 3B18                           l5562 60C2  
                         l5570 5FA2                           l3890 4D68                           l4818 4040  
                         l4770 3DE4                           l4594 4B34                           l4674 4262  
                         l4658 40FA                           l4666 41DA                           l4682 5AD4  
                         l4922 1D0A                           l4930 1D4A                           l4914 1CE4  
                         l4850 19FC                           l4842 19B8                           l4834 1984  
                         l4826 1944                           l6178 396E                           l5650 43A2  
                         l5642 436A                           l5634 4338                           l5626 4274  
                         l5810 234A                           l5802 2334                           l3980 297C  
                         l3972 296C                           l3964 295C                           l3956 294C  
                         l3948 2914                           l5548 1918                           l5492 167C  
                         l5484 1632                           l5476 15F0                           l5468 1580  
                         l5396 100A                           l5388 0F2A                           l4756 5276  
                         l4764 5F68                           l4748 5176                           l4692 6008  
                         l5740 3D64                           l5732 3CB8                           l5724 3C0C  
                         l5716 3B62                           l5708 3B1A                           l5564 60C4  
                         l5556 60AC                           l5572 5FB0                           l3892 4D7A  
                         l4780 3E64                           l4772 3E04                           l4596 4B44  
                         l4668 4216                           l4684 5AD8                           l4940 1E32  
                         l4932 1D52                           l4924 1D18                           l4916 1CEC  
                         l4908 1C8E                           l4860 1A30                           l4852 1A00  
                         l4844 19C0                           l4836 198C                           l4828 1952  
                         l5660 43DA                           l5652 43AC                           l5644 4374  
                         l5636 433C                           l5628 4276                           l5900 2456  
                         l5820 2356                           l5812 234C                           l5804 2338  
                         l3990 2990                           l3982 2980                           l3974 2970  
                         l3966 2960                           l3958 2950                           l5486 1670  
                         l5398 103C                           l4694 52CC                           l4758 5282  
                         l4766 5F6C                           l5670 6028                           l5750 3DD8  
                         l5742 3D8E                           l5734 3CE2                           l5726 3C36  
                         l5718 3B8A                           l5590 537C                           l5566 60C6  
                         l5558 60B6                           l5574 5FB4                           l3894 4D8C  
                         l4790 3EB2                           l4782 3E80                           l4774 3E18  
                         l4598 4B54                           l4686 5AE4                           l4678 5AB4  
                         l4950 1EF0                           l4942 1E66                           l4934 1D62  
                         l4926 1D30                           l4918 1CF4                           l4870 1A8C  
                         l4854 1A06                           l4838 199C                           l4846 19C4  
                         l5662 43EA                           l5654 43AE                           l5646 4376  
                         l5638 4354                           l5910 249C                           l5902 2462  
                         l5830 2360                           l5822 2358                           l5814 234E  
                         l5806 2344                           l3992 29BA                           l3984 2984  
                         l3976 2974                           l3968 2964                           l5496 1688  
                         l4696 52F0                           l5672 5818                           l4768 5F7C  
                         l5680 5406                           l5736 3D0E                           l5728 3C62  
                         l5744 3DBA                           l5592 537E                           l5568 5F9E  
                         l3896 4D96                           l4792 3EBA                           l4784 3E90  
                         l4776 3E28                           l4688 5AE8                           l4960 1F8C  
                         l4952 1F06                           l4936 1D76                           l4944 1E6C  
                         l4928 1D42                           l4872 1A92                           l4856 1A0E  
                         l4848 19EA                           l4864 1A50                           l5664 443A  
                         l5656 43C6                           l5648 438E                           l5920 2516  
                         l5912 24B0                           l5904 2476                           l5840 236A  
                         l5832 2362                           l5824 235A                           l5816 2350  
                         l5808 2348                           l3994 29D6                           l3986 2988  
                         l3978 2978                           l5498 16BA                           l4698 5308  
                         l5674 582C                           l5682 541E                           l5666 6020  
                         l5738 3D38                           l5594 5380                           l3898 4DB4  
                         l4794 3EC6                           l4786 3E96                           l4778 3E48  
                         l4962 1FE2                           l4970 2034                           l4954 1F38  
                         l4946 1E8A                           l4938 1DDA                           l4890 1B1C  
                         l4874 1A9A                           l4866 1A76                           l4882 1AB6  
                         l4858 1A26                           l5690 58DA                           l5658 43CC  
                         l5922 2530                           l5930 255C                           l5914 24C4  
                         l5906 2494                           l5850 2374                           l5842 236C  
                         l5834 2364                           l5826 235C                           l5818 2354  
                         l3996 29E6                           l3988 298C                           l5676 5844  
                         l5684 5432                           l5668 6022                           l5748 3DC4  
                         l5596 5382                           l5588 536A                           l4796 3ED0  
                         l4788 3EA6                           l4980 2066                           l4972 2044  
                         l4964 1FE8                           l4956 1F48                           l4948 1EBE  
                         l4892 1B50                           l4884 1AD0                           l4868 1A88  
                         l5692 58E2                           l5940 25C8                           l5932 257A  
                         l5924 2538                           l5916 24E0                           l5908 2498  
                         l5860 238C                           l5852 2376                           l5844 236E  
                         l5836 2366                           l5828 235E                           l3998 29FC  
                         l5686 5446                           l5678 53F2                           l5598 5398  
                         l4798 3ED6                           l4990 2138                           l4982 20DE  
                         l4974 204C                           l4966 201C                           l4958 1F58  
                         l4894 1B8E                           l5694 58EA                           l5942 25DC  
                         l5950 260E                           l5934 2582                           l5926 2540  
                         l5918 24FA                           l5870 23A8                           l5862 2394  
                         l5854 237C                           l5846 2370                           l5838 2368  
                         l4992 213C                           l4984 20FE                           l4976 2052  
                         l4968 2030                           l4896 1BC0                           l4888 1B16  
                         l5696 5906                           l5688 58C8                           l5952 2622  
                         l5960 2654                           l5944 25F0                           l5936 2588  
                         l5928 2548                           l5880 23D0                           l5872 23B0  
                         l5864 239C                           l5856 2380                           l5848 2372  
                         l4994 2142                           l4986 211A                           l4978 205A  
                         l4898 1BFE                           l5962 2668                           l5970 269A  
                         l5954 2636                           l5946 25F4                           l5938 25BC  
                         l5890 23F2                           l5882 23D8                           l5874 23B8  
                         l5866 23A0                           l5858 2384                           l4996 214A  
                         l4988 2128                           l5972 26AE                           l5980 26E0  
                         l5964 267C                           l5956 263A                           l5948 25F8  
                         l5892 241A                           l5884 23DC                           l5876 23C0  
                         l5868 23A4                           l5796 2328                           l4998 215A  
                         l5982 26F4                           l5990 2726                           l5974 26C2  
                         l5966 2680                           l5958 263E                           l5894 2434  
                         l5886 23DC                           l5878 23C8                           l5798 232C  
                         l5992 273A                           l5984 2708                           l5976 26C6  
                         l5968 2684                           l5896 243A                           l5888 23F0  
                         l5994 274E                           l5986 270C                           l5978 26CA  
                         l5898 2442                           l5996 2752                           l5988 2710  
                         l5998 2756                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E26                           STR_3 0E49  
                         STR_6 0E4D                           u3100 28E0                           u3020 4D7A  
                         u3101 28DC                           u3021 4D76                           u3110 28F2  
                         u3030 4D8C                           u3111 28EE                           u3031 4D88  
                         u4000 303A                           u3200 2A3A                           u3120 2902  
                         u3040 4DB4                   _BAUD4CONbits 000EE9                           u4001 3036  
                         u3201 2A36                           u3121 28FE                           u3041 4DB0  
                         u4010 304E                           u3210 2A48                           u3130 293E  
                         u3050 4DEA                           u4011 304A                           u3211 2A44  
                         u3131 293A                           u3051 4DE6                           u4100 4BD2  
                         u4020 3068                           u3300 2BA6                           u3220 2A58  
                         u3140 294C                           u3060 2866                           u4101 4BCE  
                         u4021 3064                           u3301 2BA2                           u3221 2A54  
                         u3141 2948                           u3061 2862                           u4110 4BF0  
                         u4030 30B0                           u3310 2BB6                           u3230 2A8A  
                         u3150 29BA                           u3070 2878                           u4111 4BEC  
                         u4031 30AC                           u3311 2BB2                           u3231 2A86  
                         u3151 29B6                           u3071 2874                           u4120 4C10  
                         u4040 30DE                           u3400 2C9A                           u3320 2BD2  
                         u3240 2A98                           u3160 29D2                           u3080 2888  
                         u5000 5E24                           u4200 4B34                           u4121 4C0C  
                         u4041 30DA                           u3401 2C96                           u3321 2BCE  
                         u3241 2A94                           u3161 29CC                           u3081 2884  
                         u5001 5E1C                           u4201 4B30                           u4130 4C60  
                         u4050 3118                           u3410 2CAA                           u3330 2BE2  
                         u3250 2AB6                           u3170 29D4                           u3090 28CA  
                         u4210 4B44                           _T2PR 000FBC                           u4131 4C5C  
                         u4051 3114                           u3411 2CA6                           u3331 2BDE  
                         u3251 2AB2                           u3091 28C6                           u4211 4B40  
                         u4060 5076                           u3420 2CCA                           u3340 2BF4  
                         u3260 2AEE                           u3180 29FC                           u5100 4466  
                         u3500 4876                           u5020 5F66                           u4220 5500  
                         u4140 5F0E                           u4300 4D54                           u4061 5072  
                         u3421 2CC6                           u3341 2BF0                           u3261 2AEA  
                         u3181 29F8                           u5101 4462                           u3501 4872  
                         u5021 5F62                           u4221 54FC                           u4141 5F0A  
                         u4301 4D4E                           u4070 50B4                           u3430 2CDC  
                         u3350 2C0A                           u3270 2B34                           u3190 2A1A  
                         u5110 4474                           u3510 461A                           u4230 5556  
                         u4150 4A76                           u4310 4D56                           u5030 3826  
                         u4071 50B0                           u3431 2CD8                           u3351 2C06  
                         u3271 2B30                           u3191 2A16                           u5111 4470  
                         u3511 4616                           u4231 5552                           u4151 4A72  
                         u5031 3822                           u4080 50E8                           u3440 2CF8  
                         u3360 2C20                           u3280 2B6A                           u5120 44D0  
                         u3520 464C                           u3600 497E                           u4240 5E56  
                         u4160 4AAA                           u4400 41A6                           u4320 5DB4  
                         u5040 3876                           u5200 58BC                           u4081 50E4  
                         u3441 2CF4                           u3361 2C1C                           u3281 2B66  
                         u5121 44CC                           u3521 4648                           u3601 497A  
                         u4241 5E52                           u4401 41A2                           u4321 5DB0  
                         u5041 3872                           u5201 58B8                           u4090 4B94  
                         u3370 2C34                           u3290 2B7A                           u5130 4526  
                         u3450 5586                           u5018 5E26                           u3610 49A8  
                         u4170 4AD8                           u4250 4CAA                           u4410 41FA  
                         u4330 55FE                           u5050 3896                           u4091 4B90  
                         u3371 2C30                           u3291 2B76                           u5131 4522  
                         u5211 0E82                           u3451 5582                           u3531 4676  
                         u3611 49A4                           u4171 4AD4                           u4331 55FA  
                         u5051 3892                           u3700 3218                           u3380 2C4E  
                         u5140 4570                           u5300 13DE                           u5220 0F7C  
                         u3460 55A4                           u4500 54F0                           u3540 469A  
                         u3620 49D6                           u4180 4AEC                           u4260 4CC8  
                         u4420 4216                           u4340 40AA                           u5060 39AC  
                         u3701 3214                           u3381 2C4A                           u5141 456C  
                         u5301 13DA                           u5221 0F78                           u3461 55A0  
                         u4501 54EC                           u3541 4696                           u3621 49D2  
                         u4181 4AE8                           u4165 4AA0                           u4261 4CC4  
                         u4421 4212                           u5061 39A8                           u3710 3258  
                         u3390 2C88                           u5150 458E                           u5310 141C  
                         u5230 100A                           u3470 55C0                           u4510 5214  
                         u5070 60DC                           u3550 46C4                           u3630 4A1E  
                         u4190 4B14                           u4270 4CF0                           u4430 4252  
                         u4350 40D8                           u3711 3254                           u3391 2C84  
                         u5151 458A                           u5311 1418                           u5231 1006  
                         u3471 55BC                           u4511 5210                           u5071 60D8  
                         u3551 46C0                           u3631 4A1A                           u4191 4B10  
                         u4271 4CEC                           u4255 4CA0                           u4431 424E  
                         u4415 41F0                           u4351 40D4                           u3800 33D2  
                         u3720 32CE                           u3640 3150                           u5160 459E  
                         u5400 162E                           u5320 144E                           u5240 105E  
                         u4520 522C                           u5080 5022                           u3560 4704  
                         u3480 5DF8                           u4600 3E28                           u4280 4D1A  
                         u4360 40FA                           u4440 5B02                           u3801 33CE  
                         u3721 32CA                           u3641 314C                           u5161 459A  
                         u5401 162A                           u5321 144A                           u5241 105A  
                         u4521 5228                           u5081 501E                           u3561 4700  
                         u3481 5DF4                           u4601 3E24                           u4281 4D16  
                         u4361 40F6                           u4345 40A0                           u4441 5AFE  
                         u3810 33E8                           u3730 32F0                           u3650 3162  
                         u5170 45AC                           u5410 1670                           u5330 148C  
                         u5250 10B4                           u3490 47AC                           u4530 5176  
                         u4450 6008                           u5090 503A                           u3570 474E  
                         u4610 3E64                           u3811 33E4                           u3731 32EC  
                         u3651 315E                           u5171 45A8                           u5411 166C  
                         u5331 1488                           u5251 10B0                           u3491 47A8  
                         u4531 5172                           u4451 6004                           u5091 5036  
                         u3571 474A                           u4611 3E60                           u6107 43B8  
                         u6027 23FE                           u3820 33FC                           u3740 331A  
                         u3660 3172                           u3900 2D88                           u5180 45E6  
                         u5500 185E                           u5420 16BA                           u5340 14BE  
                         u5260 10D4                           u4540 518E                           u4460 601E  
                         u3580 490E                           u4620 3E90                           u4380 4166  
                         u4700 19AC                           u3821 33F8                           u3741 3316  
                         u3661 316E                           u3901 2D84                           u5181 45E2  
                         u5501 185A                           u5421 16B6                           u5341 14BA  
                         u5261 10D0                           u4541 518A                           u4461 601A  
                         u3581 490A                           u4621 3E8C                           u4381 4162  
                         u4701 19A8                           u6117 43F4                           u6037 2426  
                         u3830 3416                           u3750 333E                           u3670 31B6  
                         u3910 2D9A                           u5190 45F4                           u5510 1898  
                         u5430 16EC                           u5350 14F8                           u5270 1184  
                         u4470 5350                           u4550 52B2                           u3590 4940  
                         u4630 3EA6                           u4390 418A                           u4710 19EA  
                         u3831 3412                           u3751 333A                           u3671 31B2  
                         u3911 2D96                           u5191 45F0                           u5511 1894  
                         u5431 16E8                           u5351 14F4                           u5271 1180  
                         u4471 534C                           u4551 52AE                           u6207 5410  
                         u3591 493C                           u4631 3EA2                           u4295 4D2C  
                         u4375 410E                           u4711 19E6                           u6127 4444  
                         u6047 24D0                           u3840 345E                           u3760 3354  
                         u3680 31C8                           u3920 2DAA                           u5520 18D2  
                         u5440 172A                           u5360 1532                           u5280 11CE  
                         u4480 5368                           u4560 52CA                           u4640 3FE2  
                         u4376 4118                           u4800 1CC0                           u4720 19FC  
                         u5600 4338                           u3841 345A                           u3761 3350  
                         u3681 31C4                           u3921 2DA6                           u5521 18CE  
                         u5441 1726                           u5361 152E                           u5281 11CA  
                         u4481 5364                           u4561 52C6                           u6217 5450  
                         u6137 4FFC                           u4641 3FDE                           u4377 4128  
                         u4801 1CBC                           u4721 19F8                           u5601 4334  
                         u6057 24EC                           u3850 348E                           u3770 3372  
                         u3690 31D8                           u3930 2DE0                           u5530 1914  
                         u5450 1760                           u5370 1574                           u5290 13AC  
                         u4490 54D8                           u4570 5F9C                           u4650 4000  
                         u4810 1CD8                           u4730 1A76                           u5610 436A  
                         u3851 348A                           u3771 336E                           u3691 31D4  
                         u3931 2DDC                           u5531 1910                           u5451 175C  
                         u5371 1570                           u5291 13A8                           u4491 54D4  
                         u6307 5836                           u4571 5F98                           u6227 5CD0  
                         u6147 5F42                           u4651 3FFC                           u4395 4180  
                         u4811 1CD4                           u4731 1A72                           u5611 4366  
                         u6067 4280                           u3860 34BC                           u3780 3392  
                         u3940 2DF0                           u5460 1792                           u5380 15BE  
                         u5700 3BE0                           u5540 5FCC                           u4660 401A  
                         u4580 3E14                           u4900 2030                           u4820 1D0A  
                         u4740 1A88                           u5620 43A2                           u3861 34B8  
                         u3781 338E                           u3941 2DEC                           u5461 178E  
                         u5381 15BA                           u6317 5862                           u6237 51EE  
                         u6157 5728                           u5701 3BDC                           u5541 5FC8  
                         u4661 4016                           u4581 3E0E                           u4901 202C  
                         u4821 1D06                           u4741 1A84                           u5621 439E  
                         u6077 42F4                           u3790 33A4                           u3950 2F6A  
                         u3870 2D26                           u5470 17C4                           u5390 15F0  
                         u5710 3C36                           u4670 402A                           u4590 3E16  
                         u4910 20DE                           u4830 1D18                           u4750 1B02  
                         u5630 43DA                           u3791 33A0                           u3871 2D22  
                         u5471 17C0                           u5391 15EC                           u6327 54B2  
                         u6247 5F72                           u6167 5754                           u5711 3C32  
                         u4671 4026                           u4911 20DA                           u4831 1D14  
                         u4751 1AFE                           u5631 43D6                           u6087 4346  
                         u3960 2FC4                           u3880 2D38                           u5480 17F6  
                         u5720 3C8C                           u4920 211A                           u4840 1D42  
                         u4760 1B8E                           u4680 1952                           u5640 43E8  
                         u3961 2FC0                           u3881 2D34                           u5481 17F2  
                         u6337 532A                           u6257 5782                           u6177 59D2  
                         u5721 3C88                           u4921 2116                           u4841 1D3E  
                         u4761 1B8A                           u4681 194E                           u5641 43E4  
                         u6097 4380                           u3970 2FE4                           u3890 2D48  
                         u5490 182C                           u5730 3CE2                           u4930 2128  
                         u4850 1E8A                           u4770 1BC0                           u4690 199C  
                         u5650 4412                           u5810 241A                           u3971 2FE0  
                         u3955 2F60                           u3891 2D44                           u5491 1828  
                         u6267 57AE                           u6187 5C82                           u5731 3CDE  
                         u4931 2124                           u4851 1E86                           u4771 1BBC  
                         u4691 1998                           u5651 440C                           u5811 2416  
                         u3980 2FF6                           u5740 3D38                           u4940 217C  
                         u4860 1EF0                           u4780 1BFE                           u5660 4426  
                         u5652 4414                           u5580 4312                           u5900 273A  
                         u5820 2494                           u3981 2FF2                           u6277 57DC  
                         u6197 5150                           u5741 3D34                           u4941 2178  
                         u4861 1EEC                           u4781 1BFA                           u5661 4420  
                         u5581 430C                           u5901 2736                           u5821 2490  
                         u3990 3024                           u5750 3D8E                           u4950 224E  
                         u4870 1F38                           u4790 1C8A                           u5670 4438  
                         u5662 4428                           u5590 4326                           u5582 4314  
                         u5910 2780                           u5830 2530                           u3991 3020  
                         u6287 5808                           u5751 3D8A                           u4951 224A  
                         u4871 1F34                           u4791 1C86                           u5671 4434  
                         u5591 4320                           u5911 277C                           u5831 252C  
                         u5680 3B30                           u4960 226A                           u4880 1F48  
                         u5592 4328                           u5920 27C6                           u5840 257A  
                         u6297 528C                           u5681 3B2C                           u4961 2266  
                         u4881 1F44                           u5921 27C2                           u5841 2576  
                         u5690 3B8A                           u4970 22D2                           u4890 1FE2  
                         u5930 27DE                           u5850 25DC                           u5691 3B86  
                         u4971 22CC                           u4891 1FDE                           u5931 27DA  
                         u5851 25D8                           u4980 22D4                           u5940 281C  
                         u5860 2622                           u5941 2818                           u5861 261E  
                         u4990 22E8                           u5950 2848                           u5870 2668  
                         u4991 22E4                           u5951 2844                           u5871 2664  
                         u5880 26AE                           u5881 26AA                           u5890 26F4  
                         u5891 26F0                  _LightBlueMove 596C                           abs@a 0013  
                         _dbuf 02A0                           _labs 55E0                           _main 2328  
                         _dtoa 3DE4                           _prec 00EF                           _vals 01D0  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 5474  
                ___fpclassifyf 4C6A                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 5BA4  
       __end_of_color_read_lum 5B54                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5EBA                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5C44  
              _RunOneBlockTime 00F5                  ___fltol@sign1 0009                __end_of___aodiv 4790  
                        ?_labs 0001                __end_of___fladd 2D0C                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4A60                __end_of___fldiv 34D0  
              __end_of___flneg 5F30                __end_of___flmul 3136                __end_of___flsub 5D72  
              __end_of___fltol 4B66                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 55E0                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3DE4        __end_of_sendCharSerial4 60E2  
   __end_of_I2C_2_Master_Start 610C     __end_of_I2C_2_Master_Write 60EE                   YellowMove@mL 0020  
                        _flags 00F1                   YellowMove@mR 0022                          _fputc 4D68  
                        _fputs 5DB6                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00F9                          _width 00ED  
                        _putch 6114                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          status 000FD8                __end_of_sprintf 591A  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5C44          _I2C_2_Master_RepStart 60EE  
             __end_of_BlueMove 56AC                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5CE0  
      __end_of_turnCalibration 4454                _reverseOneBlock 5764                   __end_of_labs 5646  
                 __end_of_main 284C                   __end_of_dtoa 4062                   __end_of_stop 54F2  
              _colour_rel$3160 0064                _colour_rel$3161 0068                         ??_labs 0005  
                       ??_main 00CF                         ??_dtoa 0026          __end_of_ReverseYellow 4EE8  
             __end_of_PinkMove 5AB4                         ??_stop 0018                  __activetblptr 000003  
>>>>>>> Stashed changes
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
<<<<<<< Updated upstream
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l4650 000A  
                       _RG6PPS 000E88                         i2l4652 001A                         i2l4654 0024  
                       i2l4656 0028                      ??_HighISR 0001       __end_of_color_click_init 4864  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 476E  
             __end_of___xxtofl 34D4                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3A7C                         ___fleq 3E60                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 4D28  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 0021  
                    ??___flmul 003A                      ??___flsub 0019                      ??___lwdiv 000B  
                       clear_0 43AE                         clear_1 43BA                         clear_2 43C6  
                       _motorL 00F5                         _motorR 01BC                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 4A96                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 0059  
             __end_of_turnLeft 40E4                     ___flge@ff1 0001                     _YellowMove 4864  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0019                     ___fleq@ff2 001D  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 43D4        __end_of_reverseOneBlock 4612       __end_of_color_read_Green 49F8  
       ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4DC4                 __pcstackCOMRAM 0001  
                _fullSpeedBack 40E4                   __pidataBANK0 4E04                   __pidataBANK1 4DFC  
                __end_of_fputc 3C4A                  __end_of_fputs 4B20                  __end_of_putch 4E04  
            __end_of_GreenMove 4C1E            __end_of_Timer0_init 4D8E            __end_of_ReversePink 3DB6  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14352 0150          __end_of_reverseDetect 466C                        ??_putch 0001  
                   __pbssBANK0 00EE                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 4504                     _getTMR0val 4D02              __end_of_RetryMove 4CDA  
                    ?_PinkMove 0020              _color_writetoaddr 4D4E                     _delayed_ms 4C1E  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 0001  
                      ?___fleq 0019             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                   ?_turnRight45 001A          __end_of_timed_forward 3E60  
          ??_color_writetoaddr 0004                  colour_rel@rel 0034                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2AC8  
      __end_of_Interrupts_init 4DD2         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 00E8                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4D6E                        _RedMove 4BA2  
           _I2C_2_Master_Start 4DF2                     ??_PinkMove 0024                     _initUSART4 4D8E  
           _I2C_2_Master_Write 4DD2                        __Hparam 0000                        _WayBack 015E  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 4D6E  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 3D00  
                      ___aodiv 34D4                        ___fladd 1E44                        ___aomod 37C8  
                      ___fldiv 272E                        ___flmul 2304                        ___flsub 4A96  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 4302            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0051                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 4376                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 2DF6                        __ptext0 1902  
                      __ptext1 471C                        __ptext2 4A48                        __ptext3 392C  
                      __ptext4 30A2                        __ptext5 4288                        __ptext6 4ADC  
                      __ptext7 3B80                        __ptext8 4E02                        __ptext9 4B62  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 005E              color_read_lum@tmp 000A                        main@buf 0080  
                      _sprintf 471C           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 43D4                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 00F0                    ?_delayed_ms 0001              __end_of_vfpfcnvrt 3A7C  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 01CF  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 4182  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3FA8                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00EA                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 46C4                 __end_of___flge 3B80  
               __end_of___fleq 3F0A                 _fullSpeedAhead 3FA8                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4D4E  
     __end_of_Forwardhalfblock 455E                      _GreenMove 4BE0            start_initialization 4376  
                  __end_of_abs 4BA2                    __end_of_pad 4302                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 4812                   ??_OrangeMove 0024            color_read_Green@tmp 000A  
        __end_of_Backhalfblock 45B8        __end_of_initDCmotorsPWM 420A                    vfprintf@fmt 0053  
       __end_of_fullSpeedAhead 4046                       ??___flge 0009                       ??___fleq 0021  
                    _RetryMove 4CB0                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                    __pdataBANK0 00FE                    __pdataBANK1 01CD  
              _ForwardOneBlock 44AA                Backhalfblock@mL 001A                Backhalfblock@mR 001C  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 3C4A  
                    ___fldiv@a 001D                      ___fldiv@b 0019                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 47C0  
                    ___flmul@a 0036                      ___flmul@b 0032                    __pbssCOMRAM 005B  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2629 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 0020                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$2952 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 48B6           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 44AA              _I2C_2_Master_Idle 4CDA  
            _I2C_2_Master_Init 4C86              _I2C_2_Master_Read 4B20              _I2C_2_Master_Stop 4DE8  
                 _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060  
             getTMR0val@moving 0001                 colour_rel@vals 0032              _sendStringSerial4 4C56  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _PIE2bits 000E2B  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D        __end_of_ForwardOneBlock 4504  
                 ??_delayed_ms 0003                    turnRight@mL 0014                    turnRight@mR 0016  
                    _lost_flag 00F2                       _PIR0bits 000E33                       i2u445_40 001A  
                     i2u445_41 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 392C  
    __end_of_I2C_2_Master_Idle 4D02      __end_of_I2C_2_Master_Init 4CB0      __end_of_I2C_2_Master_Read 4B62  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4DF2                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4D28                   _TxBufReadCnt 005B  
                     _BlueMove 43E6                      _turnRight 3F0A             __end_of_delayed_ms 4C56  
                    copy_data0 438A      __end_of_sendStringSerial4 4C86                   ??_colour_rel 0036  
                _reverseDetect 4612  __end_of_I2C_2_Master_RepStart 4DE8             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 37C8                   ??_initUSART4 0001                       _PinkMove 48B6  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 4182  
                 __Lsmallconst 0E00                    ??_RetryMove 0024                    _readColours 444C  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2DF6                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                  _timed_forward 3DB6                     sprintf@fmt 0062  
            ?_Forwardhalfblock 001A                       ___xxtofl 3320                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4DAC                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 37C8                       __ptext11 34D4  
                     __ptext20 4B20                       __ptext12 4C56                       __ptext21 4D8E  
                     __ptext13 4DAC                       __ptext30 476E                       __ptext22 4182  
                     __ptext14 444C                       __ptext31 47C0                       __ptext23 2DF6  
                     __ptext15 4908                       __ptext40 4DF2                       __ptext32 4BE0  
                     __ptext24 3DB6                       __ptext16 4958                       __ptext41 4CDA  
                     __ptext33 43E6                       __ptext25 4C1E                       __ptext17 49A8  
                     __ptext50 455E                       __ptext42 4C86                       __ptext34 4D02  
                     __ptext26 3C4A                       __ptext18 49F8                       __ptext51 48B6  
                     __ptext43 4864                       __ptext35 2AC8                       __ptext27 3D00  
                     __ptext19 4DDE                       __ptext60 4302                       __ptext52 46C4  
                     __ptext44 466C                       __ptext36 4812                       __ptext28 44AA  
                     __ptext61 4DC4                       __ptext53 4046                       __ptext45 3F0A  
                     __ptext37 4D4E                       __ptext29 4BA2                       __ptext62 0E26  
                     __ptext54 45B8                       __ptext46 4D6E                       __ptext38 4DD2  
                     __ptext63 3320                       __ptext55 4612                       __ptext47 4CB0  
                     __ptext39 4DE8                       __ptext64 4A96                       __ptext56 420A  
                     __ptext48 4504                       __ptext65 1E44                       __ptext57 40E4  
                     __ptext49 3FA8                       __ptext66 2304                       __ptext58 365C  
                     __ptext67 3A7C                       __ptext59 4D28                       __ptext68 3E60  
                     __ptext69 272E                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 4A48                  ??_turnRight45 001E                       main@temp 00E4  
                     _turnLeft 4046               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
              main@prev_colour 00EC                    _setMotorPWM 365C                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 006C  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 4812                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 46C4                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 471C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4DAC                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
=======
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
     __end_of_color_click_init 5A10                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 591A               __end_of___xxtofl 4608                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4B66                         ___fleq 5048  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 6046              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 192E  
                    ??___lwdiv 000B                         _floorf 4062                         _memcpy 5AB4  
                       clear_0 5D06                         clear_1 5D12                         clear_2 5D1E  
                       _motorL 01C7                         _motorR 01BE                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5D72                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 58C8  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 522E                     ___flge@ff1 002A  
                   _YellowMove 5A10                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5D26  
      __end_of_reverseOneBlock 57BE                     ___flneg@f1 0001       __end_of_color_read_Green 5BF4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 6116                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 522E                   __pidataBANK0 610C  
                __end_of_fputc 4E32                  __end_of_fputs 5DFA                  __end_of_putch 6116  
            __end_of_GreenMove 5EF8            __end_of_Timer0_init 60AC            __end_of_ReversePink 4F9E  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14357 016E          __end_of_reverseDetect 5818                        ??_putch 0001  
                   __pbssBANK0 00D1                     __pbssBANK1 016E                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 5818                     _getTMR0val 6020              __end_of_RetryMove 5474  
                    ?_PinkMove 0020              _color_writetoaddr 606C                     _delayed_ms 5F30  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001              __end_of_TurnDelay 5F9E  
        __end_of_timed_forward 5048            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 34D0        __end_of_Interrupts_init 6118  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 0168  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 608C  
                      _RedMove 5E7C             _I2C_2_Master_Start 6102                     ??_PinkMove 0024  
                   _initUSART4 60AC             _I2C_2_Master_Write 60E2                        __Hparam 0000  
                      _WayBack 0180                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 608C                    RetryMove@mL 001A                    RetryMove@mR 001C  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4EE8                        ___aodiv 4608                        ___fladd 284C  
                      ___aomod 48FC                        ___fldiv 3136                        ___flneg 5EF8  
                      ___flmul 2D0C                        ___flsub 5D2C                        ___fltol 4A60  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 556C            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 5CE0                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3B04                        __ptext0 2328  
                      __ptext1 4274                        __ptext2 58C8                        __ptext3 5872  
                      __ptext4 37FE                        __ptext5 192E                        __ptext6 5D72  
                      __ptext7 5AB4                        __ptext8 55E0                        __ptext9 4062  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                 main@lost_count 0166  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F4              color_read_lum@tmp 000A                        main@buf 0100  
                      _sprintf 58C8           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 5D26                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 017A                    ?_delayed_ms 0001  
            turnCalibration@mL 0020              turnCalibration@mR 0022              __end_of_vfpfcnvrt 3B04  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F7                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 536A                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 5190                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                    _CCP1CONbits 000FAB  
                   main@colour 016A                   _EUSART4RXbuf 00D1                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5C92                 __end_of___flge 4C6A                 __end_of___fleq 50F2  
               _fullSpeedAhead 52CC                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 606C                 __end_of_efgtoa 2328  
               __end_of_floorf 4274                 __end_of_memcpy 5B04                     floorf@F526 00E5  
     __end_of_Forwardhalfblock 5872                      _GreenMove 5EBA                 __end_of_strcpy 5DB6  
          start_initialization 5CE0                    __end_of_abs 5E7C                    __end_of_pad 556C  
                _TxBufWriteCnt 005F          __end_of_LightBlueMove 59BE                   ??_OrangeMove 0024  
        __end_of___fpclassifyf 4D68            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 53F2  
                  vfprintf@fmt 00AA         __end_of_fullSpeedAhead 536A                       ??___flge 0032  
                     ??___fleq 003A                      _RetryMove 53F2                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F5                _ForwardOneBlock 570A                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4E32                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 596C                      ___flmul@a 0015  
                    ___flmul@b 0011                    __pbssCOMRAM 005F                      ___flsub@a 002E  
                    ___flsub@b 002A                      _TurnDelay 5F68                  __pcstackBANK0 0060  
                __pcstackBANK1 0100               ___aodiv@dividend 0001                   ??_YellowMove 0024  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020                    _efgtoa$2790 006F  
             ___lwdiv@dividend 0007                      _dtoa$2759 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$3162 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5A62  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 570A              _I2C_2_Master_Idle 5FF8              _I2C_2_Master_Init 5FCE  
            _I2C_2_Master_Read 5DFA              _I2C_2_Master_Stop 60F8                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F3             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 5F9E  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 5764                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 017E  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E52            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37FE      __end_of_I2C_2_Master_Idle 6020  
    __end_of_I2C_2_Master_Init 5FF8      __end_of_I2C_2_Master_Read 5E3C              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 6102                   setMotorPWM@m 000E                       _DataFlag 00FB  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
           __end_of_getTMR0val 6046                   _TxBufReadCnt 00F2                       _BlueMove 5646  
                    _turnRight 50F2             __end_of_delayed_ms 5F68                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 5CF4      __end_of_sendStringSerial4 5FCE  
                 ??_colour_rel 004F                  _reverseDetect 57BE  __end_of_I2C_2_Master_RepStart 60F8  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 48FC                   ??_initUSART4 0001  
                     _PinkMove 5A62                       __Hrparam 0000         __end_of_Colour_decider 192E  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 52CC                    ??_RetryMove 001E  
         TurnDelay@Turn45Delay 0001                    _readColours 56AC                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 37FE                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9  
                   _ANSELFbits 000EB4                  _timed_forward 4F9E                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 4454                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 60CA                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4C6A  
                     __ptext11 4A60                       __ptext20 4608                       __ptext12 5EF8  
                     __ptext21 5F9E                       __ptext13 3DE4                       __ptext30 60AC  
                     __ptext22 60CA                       __ptext14 54F2                       __ptext31 536A  
                     __ptext23 56AC                       __ptext15 5DB6                       __ptext40 596C  
                     __ptext32 3B04                       __ptext24 5B04                       __ptext16 4D68  
                     __ptext41 5EBA                       __ptext33 4F9E                       __ptext25 5B54  
                     __ptext17 6114                       __ptext50 5FF8                       __ptext42 5646  
                     __ptext34 5F30                       __ptext26 5BA4                       __ptext18 5E3C  
                     __ptext51 5FCE                       __ptext43 6020                       __ptext35 4E32  
                     __ptext27 5BF4                       __ptext19 48FC                       __ptext60 5F68  
                     __ptext52 5A10                       __ptext44 34D0                       __ptext36 4EE8  
                     __ptext28 60EE                       __ptext61 5764                       __ptext53 5C44  
                     __ptext45 59BE                       __ptext37 570A                       __ptext29 5DFA  
                     __ptext70 556C                       __ptext62 57BE                       __ptext54 50F2  
                     __ptext46 606C                       __ptext38 5E7C                       __ptext71 0E52  
                     __ptext63 522E                       __ptext55 608C                       __ptext47 60E2  
                     __ptext39 591A                       __ptext72 4454                       __ptext64 6116  
                     __ptext56 53F2                       __ptext48 60F8                       __ptext73 5D2C  
                     __ptext65 5818                       __ptext57 5A62                       __ptext49 6102  
                     __ptext74 284C                       __ptext66 5474                       __ptext58 5C92  
                     __ptext75 2D0C                       __ptext67 52CC                       __ptext59 5190  
                     __ptext76 4B66                       __ptext68 4790                       __ptext77 5048  
                     __ptext69 6046                       __ptext78 3136                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       _vfprintf 5872  
                     _run_flag 017C                  ??_turnRight45 001E                       main@temp 0164  
                     _turnLeft 5190               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                main@prev_colour 016C  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 4790  
                turnRight45@mL 001A                  turnRight45@mR 001C                      sprintf@ap 00C2  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 59BE                       sprintf@f 00C4                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5C92  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5CE0                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 60CA                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
>>>>>>> Stashed changes
