

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 19:13:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128   000000                     
   129                           ; Generated 06/04/2022 GMT
   130                           ; 
   131                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution. Publication is not required when
   145                           ;        this file is used in an embedded application.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F67K40 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163   000000                     
   164                           	psect	idataCOMRAM
   165   007276                     __pidataCOMRAM:
   166                           	callstack 0
   167                           
   168                           ;initializer for _RunOneBlockTime
   169   007276  07D0               	dw	2000
   170                           
   171                           ;initializer for _Turn45Delay
   172   007278  00DC               	dw	220
   173                           
   174                           ;initializer for _power
   175   00727A  001E               	dw	30
   176                           
   177                           ;initializer for _DataFlag
   178   00727C  01                 	db	1
   179                           
   180                           	psect	idataBANK1
   181   00727D                     __pidataBANK1:
   182                           	callstack 0
   183                           
   184                           ;initializer for _run_flag
   185   00727D  0001               	dw	1
   186   000000                     _TRISEbits	set	3973
   187   000000                     _LATHbits	set	3968
   188   000000                     _TX4REG	set	3812
   189   000000                     _RC4STAbits	set	3815
   190   000000                     _SP4BRGH	set	3814
   191   000000                     _SSP2CON2bits	set	3802
   192   000000                     _RX4PPS	set	3605
   193   000000                     _SSP2CLKPPS	set	3612
   194   000000                     _SSP2DATPPS	set	3613
   195   000000                     _ANSELDbits	set	3751
   196   000000                     _SSP2ADD	set	3798
   197   000000                     _SSP2CON1bits	set	3801
   198   000000                     _LATAbits	set	3961
   199   000000                     _LATFbits	set	3966
   200   000000                     _LATGbits	set	3967
   201   000000                     _TRISAbits	set	3969
   202   000000                     _TRISGbits	set	3975
   203   000000                     _PORTFbits	set	3982
   204   000000                     _TRISHbits	set	3976
   205   000000                     _INTCONbits	set	4082
   206   000000                     _CCPR2H	set	4006
   207   000000                     _CCPR1H	set	4010
   208   000000                     _TRISCbits	set	3971
   209   000000                     _TRISDbits	set	3972
   210   000000                     _TRISFbits	set	3974
   211   000000                     _LATDbits	set	3964
   212   000000                     _RC4REG	set	3811
   213   000000                     _SP4BRGL	set	3813
   214   000000                     _TX4STAbits	set	3816
   215   000000                     _BAUD4CONbits	set	3817
   216   000000                     _SSP2CON2	set	3802
   217   000000                     _SSP2STAT	set	3800
   218   000000                     _ANSELFbits	set	3764
   219   000000                     _SSP2BUF	set	3797
   220   000000                     _PIE0bits	set	3625
   221   000000                     _PIE2bits	set	3627
   222   000000                     _PIE4bits	set	3629
   223   000000                     _PIR4bits	set	3639
   224   000000                     _RC0PPS	set	3682
   225   000000                     _RD5PPS	set	3695
   226   000000                     _RE2PPS	set	3700
   227   000000                     _RD6PPS	set	3696
   228   000000                     _RC7PPS	set	3689
   229   000000                     _CCPR4H	set	3873
   230   000000                     _CCPR3H	set	3877
   231   000000                     _PIR0bits	set	3635
   232   000000                     _CCP1CONbits	set	4011
   233   000000                     _CCPTMRS0bits	set	4013
   234   000000                     _T2PR	set	4028
   235   000000                     _T2CONbits	set	4029
   236   000000                     _TMR0L	set	4051
   237   000000                     _TMR0H	set	4052
   238   000000                     _CCP2CONbits	set	4007
   239   000000                     _CCP3CONbits	set	3878
   240   000000                     _CCP4CONbits	set	3874
   241   000000                     _T0CON1bits	set	4054
   242   000000                     _T0CON0bits	set	4053
   243   000000                     _RE4PPS	set	3702
   244   000000                     _RG6PPS	set	3720
   245   000000                     _T2CLKCONbits	set	4031
   246   000000                     _T2HLTbits	set	4030
   247                           
   248                           	psect	smallconst
   249   000E00                     __psmallconst:
   250                           	callstack 0
   251   000E00  00                 	db	0
   252   000E01                     STR_1:
   253   000E01  72                 	db	114	;'r'
   254   000E02  65                 	db	101	;'e'
   255   000E03  64                 	db	100	;'d'
   256   000E04  3D                 	db	61	;'='
   257   000E05  25                 	db	37
   258   000E06  66                 	db	102	;'f'
   259   000E07  20                 	db	32
   260   000E08  67                 	db	103	;'g'
   261   000E09  72                 	db	114	;'r'
   262   000E0A  65                 	db	101	;'e'
   263   000E0B  65                 	db	101	;'e'
   264   000E0C  6E                 	db	110	;'n'
   265   000E0D  3D                 	db	61	;'='
   266   000E0E  25                 	db	37
   267   000E0F  66                 	db	102	;'f'
   268   000E10  20                 	db	32
   269   000E11  62                 	db	98	;'b'
   270   000E12  6C                 	db	108	;'l'
   271   000E13  75                 	db	117	;'u'
   272   000E14  65                 	db	101	;'e'
   273   000E15  3D                 	db	61	;'='
   274   000E16  25                 	db	37
   275   000E17  66                 	db	102	;'f'
   276   000E18  20                 	db	32
   277   000E19  6C                 	db	108	;'l'
   278   000E1A  75                 	db	117	;'u'
   279   000E1B  6D                 	db	109	;'m'
   280   000E1C  3D                 	db	61	;'='
   281   000E1D  25                 	db	37
   282   000E1E  64                 	db	100	;'d'
   283   000E1F  20                 	db	32
   284   000E20  63                 	db	99	;'c'
   285   000E21  6F                 	db	111	;'o'
   286   000E22  6C                 	db	108	;'l'
   287   000E23  6F                 	db	111	;'o'
   288   000E24  75                 	db	117	;'u'
   289   000E25  72                 	db	114	;'r'
   290   000E26  31                 	db	49	;'1'
   291   000E27  3D                 	db	61	;'='
   292   000E28  25                 	db	37
   293   000E29  64                 	db	100	;'d'
   294   000E2A  20                 	db	32
   295   000E2B  0D                 	db	13
   296   000E2C  0A                 	db	10
   297   000E2D  00                 	db	0
   298   000E2E                     STR_2:
   299   000E2E  69                 	db	105	;'i'
   300   000E2F  6E                 	db	110	;'n'
   301   000E30  66                 	db	102	;'f'
   302   000E31  00                 	db	0
   303   000E32                     STR_5:
   304   000E32  6E                 	db	110	;'n'
   305   000E33  61                 	db	97	;'a'
   306   000E34  6E                 	db	110	;'n'
   307   000E35  00                 	db	0
   308   000E36  00                 	db	0	; dummy byte at the end
   309   000000                     
   310                           ; #config settings
   311                           
   312                           	psect	cinit
   313   00623E                     __pcinit:
   314                           	callstack 0
   315   00623E                     start_initialization:
   316                           	callstack 0
   317   00623E                     __initialization:
   318                           	callstack 0
   319                           
   320                           ; Initialize objects allocated to BANK1 (2 bytes)
   321                           ; load TBLPTR registers with __pidataBANK1
   322   00623E  0E7D               	movlw	low __pidataBANK1
   323   006240  6EF6               	movwf	tblptrl,c
   324   006242  0E72               	movlw	high __pidataBANK1
   325   006244  6EF7               	movwf	tblptrh,c
   326   006246  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   327   006248  6EF8               	movwf	tblptru,c
   328   00624A  0009               	tblrd		*+	;fetch initializer
   329   00624C  CFF5 F1D4          	movff	tablat,__pdataBANK1
   330   006250  0009               	tblrd		*+	;fetch initializer
   331   006252  CFF5 F1D5          	movff	tablat,__pdataBANK1+1
   332                           
   333                           ; Initialize objects allocated to COMRAM (7 bytes)
   334                           ; load TBLPTR registers with __pidataCOMRAM
   335   006256  0E76               	movlw	low __pidataCOMRAM
   336   006258  6EF6               	movwf	tblptrl,c
   337   00625A  0E72               	movlw	high __pidataCOMRAM
   338   00625C  6EF7               	movwf	tblptrh,c
   339   00625E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   340   006260  6EF8               	movwf	tblptru,c
   341   006262  EE00  F054         	lfsr	0,__pdataCOMRAM
   342   006266  EE10 F007          	lfsr	1,7
   343   00626A                     copy_data0:
   344   00626A  0009               	tblrd		*+
   345   00626C  CFF5 FFEE          	movff	tablat,postinc0
   346   006270  50E5               	movf	postdec1,w,c
   347   006272  50E1               	movf	fsr1l,w,c
   348   006274  E1FA               	bnz	copy_data0
   349                           
   350                           ; Clear objects allocated to BANK3 (100 bytes)
   351   006276  EE03  F000         	lfsr	0,__pbssBANK3
   352   00627A  0E64               	movlw	100
   353   00627C                     clear_0:
   354   00627C  6AEE               	clrf	postinc0,c
   355   00627E  06E8               	decf	wreg,f,c
   356   006280  E1FD               	bnz	clear_0
   357                           
   358                           ; Clear objects allocated to BANK2 (190 bytes)
   359   006282  EE02  F000         	lfsr	0,__pbssBANK2
   360   006286  0EBE               	movlw	190
   361   006288                     clear_1:
   362   006288  6AEE               	clrf	postinc0,c
   363   00628A  06E8               	decf	wreg,f,c
   364   00628C  E1FD               	bnz	clear_1
   365                           
   366                           ; Clear objects allocated to BANK1 (54 bytes)
   367   00628E  EE01  F09E         	lfsr	0,__pbssBANK1
   368   006292  0E36               	movlw	54
   369   006294                     clear_2:
   370   006294  6AEE               	clrf	postinc0,c
   371   006296  06E8               	decf	wreg,f,c
   372   006298  E1FD               	bnz	clear_2
   373                           
   374                           ; Clear objects allocated to BANK0 (1 bytes)
   375   00629A  0100               	movlb	0
   376   00629C  6BFF               	clrf	__pbssBANK0& (0+255),b
   377                           
   378                           ; Clear objects allocated to COMRAM (34 bytes)
   379   00629E  EE00  F032         	lfsr	0,__pbssCOMRAM
   380   0062A2  0E22               	movlw	34
   381   0062A4                     clear_3:
   382   0062A4  6AEE               	clrf	postinc0,c
   383   0062A6  06E8               	decf	wreg,f,c
   384   0062A8  E1FD               	bnz	clear_3
   385   0062AA                     end_of_initialization:
   386                           	callstack 0
   387   0062AA                     __end_of__initialization:
   388                           	callstack 0
   389   0062AA  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   390   0062AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   391   0062AE  0100               	movlb	0
   392   0062B0  EFAE  F011         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssCOMRAM
   395   000032                     __pbssCOMRAM:
   396                           	callstack 0
   397   000032                     _EUSART4RXbuf:
   398                           	callstack 0
   399   000032                     	ds	20
   400   000046                     floorf@F526:
   401                           	callstack 0
   402   000046                     	ds	4
   403   00004A                     ___fpclassifyf@F465:
   404                           	callstack 0
   405   00004A                     	ds	4
   406   00004E                     _move_count:
   407                           	callstack 0
   408   00004E                     	ds	2
   409   000050                     _TxBufReadCnt:
   410                           	callstack 0
   411   000050                     	ds	1
   412   000051                     _TxBufWriteCnt:
   413                           	callstack 0
   414   000051                     	ds	1
   415   000052                     _RxBufReadCnt:
   416                           	callstack 0
   417   000052                     	ds	1
   418   000053                     _RxBufWriteCnt:
   419                           	callstack 0
   420   000053                     	ds	1
   421                           
   422                           	psect	dataCOMRAM
   423   000054                     __pdataCOMRAM:
   424                           	callstack 0
   425   000054                     _RunOneBlockTime:
   426                           	callstack 0
   427   000054                     	ds	2
   428   000056                     _Turn45Delay:
   429                           	callstack 0
   430   000056                     	ds	2
   431   000058                     _power:
   432                           	callstack 0
   433   000058                     	ds	2
   434   00005A                     _DataFlag:
   435                           	callstack 0
   436   00005A                     	ds	1
   437                           
   438                           	psect	bssBANK0
   439   0000FF                     __pbssBANK0:
   440                           	callstack 0
   441   0000FF                     _flags:
   442                           	callstack 0
   443   0000FF                     	ds	1
   444                           
   445                           	psect	bssBANK1
   446   00019E                     __pbssBANK1:
   447                           	callstack 0
   448   00019E                     	ds	12
   449   0001AA                     _width:
   450                           	callstack 0
   451   0001AA                     	ds	2
   452   0001AC                     _prec:
   453                           	callstack 0
   454   0001AC                     	ds	2
   455   0001AE                     _rel:
   456                           	callstack 0
   457   0001AE                     	ds	12
   458   0001BA                     _motorR:
   459                           	callstack 0
   460   0001BA                     	ds	9
   461   0001C3                     _motorL:
   462                           	callstack 0
   463   0001C3                     	ds	9
   464   0001CC                     _vals:
   465                           	callstack 0
   466   0001CC                     	ds	8
   467                           
   468                           	psect	dataBANK1
   469   0001D4                     __pdataBANK1:
   470                           	callstack 0
   471   0001D4                     _run_flag:
   472                           	callstack 0
   473   0001D4                     	ds	2
   474                           
   475                           	psect	bssBANK2
   476   000200                     __pbssBANK2:
   477                           	callstack 0
   478   000200                     _EUSART4TXbuf:
   479                           	callstack 0
   480   000200                     	ds	60
   481   00023C                     _dbuf:
   482                           	callstack 0
   483   00023C                     	ds	80
   484   00028C                     _WayBack:
   485                           	callstack 0
   486   00028C                     	ds	50
   487                           
   488                           	psect	bssBANK3
   489   000300                     __pbssBANK3:
   490                           	callstack 0
   491   000300                     _Time_forward:
   492                           	callstack 0
   493   000300                     	ds	100
   494                           
   495                           	psect	cstackBANK1
   496   000100                     __pcstackBANK1:
   497                           	callstack 0
   498   000100                     vfpfcnvrt@convarg:
   499                           	callstack 0
   500                           
   501                           ; 8 bytes @ 0x0
   502   000100                     	ds	8
   503   000108                     vfpfcnvrt@c:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x8
   507   000108                     	ds	1
   508   000109                     vfpfcnvrt@cp:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x9
   512   000109                     	ds	2
   513   00010B                     ?_vfprintf:
   514                           	callstack 0
   515   00010B                     vfprintf@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xB
   519   00010B                     	ds	2
   520   00010D                     vfprintf@fmt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0xD
   524   00010D                     	ds	2
   525   00010F                     vfprintf@ap:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0xF
   529   00010F                     	ds	2
   530   000111                     ?_sprintf:
   531                           	callstack 0
   532   000111                     sprintf@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x11
   536   000111                     	ds	2
   537   000113                     sprintf@fmt:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x13
   541   000113                     	ds	18
   542   000125                     sprintf@ap:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x25
   546   000125                     	ds	2
   547   000127                     sprintf@f:
   548                           	callstack 0
   549                           
   550                           ; 11 bytes @ 0x27
   551   000127                     	ds	11
   552   000132                     main@buf:
   553                           	callstack 0
   554                           
   555                           ; 100 bytes @ 0x32
   556   000132                     	ds	100
   557   000196                     main@lost_count:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x96
   561   000196                     	ds	2
   562   000198                     main@consecuitive:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x98
   566   000198                     	ds	2
   567   00019A                     main@colour:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x9A
   571   00019A                     	ds	2
   572   00019C                     main@prev_colour:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x9C
   576   00019C                     	ds	2
   577                           
   578                           	psect	cstackBANK0
   579   000060                     __pcstackBANK0:
   580                           	callstack 0
   581   000060                     ??_I2C_2_Master_Idle:
   582   000060                     ?___fpclassifyf:
   583                           	callstack 0
   584   000060                     ?___wmul:
   585                           	callstack 0
   586   000060                     ?___awdiv:
   587                           	callstack 0
   588   000060                     ?___fladd:
   589                           	callstack 0
   590   000060                     ?_labs:
   591                           	callstack 0
   592   000060                     ?___flneg:
   593                           	callstack 0
   594   000060                     ?___fltol:
   595                           	callstack 0
   596   000060                     ?___xxtofl:
   597                           	callstack 0
   598   000060                     ?___aodiv:
   599                           	callstack 0
   600   000060                     ?___aomod:
   601                           	callstack 0
   602   000060                     sendCharSerial4@charToSend:
   603                           	callstack 0
   604   000060                     initDCmotorsPWM@PWMperiod:
   605                           	callstack 0
   606   000060                     TurnDelay@Turn45Delay:
   607                           	callstack 0
   608   000060                     getTMR0val@moving:
   609                           	callstack 0
   610   000060                     ___wmul@multiplier:
   611                           	callstack 0
   612   000060                     ___awdiv@dividend:
   613                           	callstack 0
   614   000060                     memcpy@d1:
   615                           	callstack 0
   616   000060                     fputc@c:
   617                           	callstack 0
   618   000060                     strcpy@dest:
   619                           	callstack 0
   620   000060                     ___flneg@f1:
   621                           	callstack 0
   622   000060                     ___fltol@f1:
   623                           	callstack 0
   624   000060                     ___fladd@b:
   625                           	callstack 0
   626   000060                     ___xxtofl@val:
   627                           	callstack 0
   628   000060                     ___fpclassifyf@x:
   629                           	callstack 0
   630   000060                     labs@a:
   631                           	callstack 0
   632   000060                     ___aodiv@dividend:
   633                           	callstack 0
   634   000060                     ___aomod@dividend:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x0
   638   000060                     	ds	1
   639   000061                     ??_I2C_2_Master_Read:
   640   000061                     I2C_2_Master_Write@data_byte:
   641                           	callstack 0
   642   000061                     sendStringSerial4@string:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x1
   646   000061                     	ds	1
   647   000062                     ??_TurnDelay:
   648   000062                     color_writetoaddr@value:
   649                           	callstack 0
   650   000062                     I2C_2_Master_Read@ack:
   651                           	callstack 0
   652   000062                     ___wmul@multiplicand:
   653                           	callstack 0
   654   000062                     ___awdiv@divisor:
   655                           	callstack 0
   656   000062                     memcpy@s1:
   657                           	callstack 0
   658   000062                     fputc@fp:
   659                           	callstack 0
   660   000062                     strcpy@src:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x2
   664   000062                     	ds	1
   665   000063                     color_writetoaddr@address:
   666                           	callstack 0
   667   000063                     I2C_2_Master_Read@tmp:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x3
   671   000063                     	ds	1
   672   000064                     ??_fputc:
   673   000064                     ??___fpclassifyf:
   674   000064                     ??_labs:
   675   000064                     ??_color_click_init:
   676   000064                     ??___fltol:
   677   000064                     ??___xxtofl:
   678   000064                     ?_color_read_lum:
   679                           	callstack 0
   680   000064                     ?_color_read_Red:
   681                           	callstack 0
   682   000064                     ?_color_read_Green:
   683                           	callstack 0
   684   000064                     ?_color_read_Blue:
   685                           	callstack 0
   686   000064                     ___awdiv@counter:
   687                           	callstack 0
   688   000064                     ___wmul@product:
   689                           	callstack 0
   690   000064                     memcpy@n:
   691                           	callstack 0
   692   000064                     strcpy@s:
   693                           	callstack 0
   694   000064                     ___fladd@a:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x4
   698   000064                     	ds	1
   699   000065                     ___awdiv@sign:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x5
   703   000065                     	ds	1
   704   000066                     ??_color_read_lum:
   705   000066                     ??_color_read_Red:
   706   000066                     ??_color_read_Green:
   707   000066                     ??_color_read_Blue:
   708   000066                     ?___lwdiv:
   709                           	callstack 0
   710   000066                     ___awdiv@quotient:
   711                           	callstack 0
   712   000066                     ___lwdiv@dividend:
   713                           	callstack 0
   714   000066                     memcpy@d:
   715                           	callstack 0
   716   000066                     strcpy@d:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x6
   720   000066                     	ds	2
   721   000068                     ??___fladd:
   722   000068                     ___fltol@sign1:
   723                           	callstack 0
   724   000068                     ___xxtofl@sign:
   725                           	callstack 0
   726   000068                     delayed_ms@time:
   727                           	callstack 0
   728   000068                     ___lwdiv@divisor:
   729                           	callstack 0
   730   000068                     ___fpclassifyf@e:
   731                           	callstack 0
   732   000068                     memcpy@s:
   733                           	callstack 0
   734   000068                     ___aodiv@divisor:
   735                           	callstack 0
   736   000068                     ___aomod@divisor:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x8
   740   000068                     	ds	1
   741   000069                     ___fltol@exp1:
   742                           	callstack 0
   743   000069                     ___xxtofl@exp:
   744                           	callstack 0
   745   000069                     color_read_lum@tmp:
   746                           	callstack 0
   747   000069                     color_read_Red@tmp:
   748                           	callstack 0
   749   000069                     color_read_Green@tmp:
   750                           	callstack 0
   751   000069                     color_read_Blue@tmp:
   752                           	callstack 0
   753   000069                     fputs@s:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x9
   757   000069                     	ds	1
   758   00006A                     ??_delayed_ms:
   759   00006A                     memcpy@tmp:
   760                           	callstack 0
   761   00006A                     ___lwdiv@quotient:
   762                           	callstack 0
   763   00006A                     ___xxtofl@arg:
   764                           	callstack 0
   765   00006A                     ___fpclassifyf@u:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0xA
   769   00006A                     	ds	1
   770   00006B                     readColours@vals:
   771                           	callstack 0
   772   00006B                     delayed_ms@i:
   773                           	callstack 0
   774   00006B                     fputs@fp:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0xB
   778   00006B                     	ds	1
   779   00006C                     ___lwdiv@counter:
   780                           	callstack 0
   781   00006C                     ___fladd@signs:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0xC
   785   00006C                     	ds	1
   786   00006D                     ___fladd@aexp:
   787                           	callstack 0
   788   00006D                     fputs@c:
   789                           	callstack 0
   790   00006D                     setMotorPWM@m:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xD
   794   00006D                     	ds	1
   795   00006E                     ___fladd@bexp:
   796                           	callstack 0
   797   00006E                     fputs@i:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0xE
   801   00006E                     	ds	1
   802   00006F                     ??_setMotorPWM:
   803   00006F                     ___fladd@grs:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0xF
   807   00006F                     	ds	1
   808   000070                     ?___flmul:
   809                           	callstack 0
   810   000070                     ___aodiv@counter:
   811                           	callstack 0
   812   000070                     ___aomod@counter:
   813                           	callstack 0
   814   000070                     pad@fp:
   815                           	callstack 0
   816   000070                     ___flmul@b:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x10
   820   000070                     	ds	1
   821   000071                     setMotorPWM@posDuty:
   822                           	callstack 0
   823   000071                     ___aodiv@sign:
   824                           	callstack 0
   825   000071                     ___aomod@sign:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x11
   829   000071                     	ds	1
   830   000072                     ?_abs:
   831                           	callstack 0
   832   000072                     setMotorPWM@negDuty:
   833                           	callstack 0
   834   000072                     pad@buf:
   835                           	callstack 0
   836   000072                     abs@a:
   837                           	callstack 0
   838   000072                     ___aodiv@quotient:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x12
   842   000072                     	ds	1
   843   000073                     stop@mL:
   844                           	callstack 0
   845   000073                     turnLeft@mL:
   846                           	callstack 0
   847   000073                     turnRight@mL:
   848                           	callstack 0
   849   000073                     fullSpeedAhead@mL:
   850                           	callstack 0
   851   000073                     timed_forward@mL:
   852                           	callstack 0
   853   000073                     fullSpeedBack@mL:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x13
   857   000073                     	ds	1
   858   000074                     ??_abs:
   859   000074                     pad@p:
   860                           	callstack 0
   861   000074                     ___flmul@a:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x14
   865   000074                     	ds	1
   866   000075                     stop@mR:
   867                           	callstack 0
   868   000075                     turnLeft@mR:
   869                           	callstack 0
   870   000075                     turnRight@mR:
   871                           	callstack 0
   872   000075                     fullSpeedAhead@mR:
   873                           	callstack 0
   874   000075                     timed_forward@mR:
   875                           	callstack 0
   876   000075                     fullSpeedBack@mR:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x15
   880   000075                     	ds	1
   881   000076                     ??_pad:
   882                           
   883                           ; 1 bytes @ 0x16
   884   000076                     	ds	1
   885   000077                     ??_fullSpeedAhead:
   886   000077                     ??_stop:
   887   000077                     ??_turnLeft:
   888   000077                     ??_turnRight:
   889   000077                     ??_fullSpeedBack:
   890   000077                     timed_forward@time:
   891                           	callstack 0
   892   000077                     pad@i:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0x17
   896   000077                     	ds	1
   897   000078                     ??___flmul:
   898                           
   899                           ; 1 bytes @ 0x18
   900   000078                     	ds	1
   901   000079                     ??_timed_forward:
   902   000079                     pad@w:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x19
   906   000079                     	ds	1
   907   00007A                     turnRight45@mL:
   908                           	callstack 0
   909   00007A                     turnLeft45@mL:
   910                           	callstack 0
   911   00007A                     reverseDetect@mL:
   912                           	callstack 0
   913   00007A                     reverseOneBlock@mL:
   914                           	callstack 0
   915   00007A                     ForwardOneBlock@mL:
   916                           	callstack 0
   917   00007A                     Forwardhalfblock@mL:
   918                           	callstack 0
   919   00007A                     RetryMove@mL:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x1A
   923   00007A                     	ds	1
   924   00007B                     dtoa@fp:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x1B
   928   00007B                     	ds	1
   929   00007C                     ___flmul@sign:
   930                           	callstack 0
   931   00007C                     turnRight45@mR:
   932                           	callstack 0
   933   00007C                     turnLeft45@mR:
   934                           	callstack 0
   935   00007C                     reverseDetect@mR:
   936                           	callstack 0
   937   00007C                     reverseOneBlock@mR:
   938                           	callstack 0
   939   00007C                     ForwardOneBlock@mR:
   940                           	callstack 0
   941   00007C                     Forwardhalfblock@mR:
   942                           	callstack 0
   943   00007C                     RetryMove@mR:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x1C
   947   00007C                     	ds	1
   948   00007D                     ___flmul@grs:
   949                           	callstack 0
   950   00007D                     dtoa@d:
   951                           	callstack 0
   952                           
   953                           ; 8 bytes @ 0x1D
   954   00007D                     	ds	1
   955   00007E                     ??_Forwardhalfblock:
   956   00007E                     ??_RetryMove:
   957   00007E                     ??_turnRight45:
   958   00007E                     ??_turnLeft45:
   959   00007E                     ??_reverseDetect:
   960   00007E                     ??_reverseOneBlock:
   961   00007E                     ??_ForwardOneBlock:
   962                           
   963                           ; 1 bytes @ 0x1E
   964   00007E                     	ds	2
   965   000080                     RedMove@mL:
   966                           	callstack 0
   967   000080                     GreenMove@mL:
   968                           	callstack 0
   969   000080                     BlueMove@mL:
   970                           	callstack 0
   971   000080                     YellowMove@mL:
   972                           	callstack 0
   973   000080                     PinkMove@mL:
   974                           	callstack 0
   975   000080                     OrangeMove@mL:
   976                           	callstack 0
   977   000080                     LightBlueMove@mL:
   978                           	callstack 0
   979   000080                     ReverseYellow@mL:
   980                           	callstack 0
   981   000080                     ReversePink@mL:
   982                           	callstack 0
   983   000080                     turnCalibration@mL:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x20
   987   000080                     	ds	1
   988   000081                     ___flmul@aexp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x21
   992   000081                     	ds	1
   993   000082                     ___flmul@bexp:
   994                           	callstack 0
   995   000082                     RedMove@mR:
   996                           	callstack 0
   997   000082                     GreenMove@mR:
   998                           	callstack 0
   999   000082                     BlueMove@mR:
  1000                           	callstack 0
  1001   000082                     YellowMove@mR:
  1002                           	callstack 0
  1003   000082                     PinkMove@mR:
  1004                           	callstack 0
  1005   000082                     OrangeMove@mR:
  1006                           	callstack 0
  1007   000082                     LightBlueMove@mR:
  1008                           	callstack 0
  1009   000082                     ReverseYellow@mR:
  1010                           	callstack 0
  1011   000082                     ReversePink@mR:
  1012                           	callstack 0
  1013   000082                     turnCalibration@mR:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x22
  1017   000082                     	ds	1
  1018   000083                     ___flmul@prod:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x23
  1022   000083                     	ds	1
  1023   000084                     ??_turnCalibration:
  1024   000084                     go_Home@WayBack:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x24
  1028   000084                     	ds	1
  1029   000085                     ??_dtoa:
  1030                           
  1031                           ; 1 bytes @ 0x25
  1032   000085                     	ds	1
  1033   000086                     go_Home@Time_forward:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x26
  1037   000086                     	ds	1
  1038   000087                     ___flmul@temp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x27
  1042   000087                     	ds	1
  1043   000088                     ??_go_Home:
  1044                           
  1045                           ; 1 bytes @ 0x28
  1046   000088                     	ds	1
  1047   000089                     ?___flsub:
  1048                           	callstack 0
  1049   000089                     ___flge@ff1:
  1050                           	callstack 0
  1051   000089                     ___flsub@b:
  1052                           	callstack 0
  1053                           
  1054                           ; 4 bytes @ 0x29
  1055   000089                     	ds	2
  1056   00008B                     go_Home@i:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x2B
  1060   00008B                     	ds	2
  1061   00008D                     _dtoa$2903:
  1062                           	callstack 0
  1063   00008D                     ___flge@ff2:
  1064                           	callstack 0
  1065   00008D                     ___flsub@a:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x2D
  1069   00008D                     	ds	2
  1070   00008F                     dtoa@p:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x2F
  1074   00008F                     	ds	2
  1075   000091                     ??___flge:
  1076   000091                     ?___fldiv:
  1077                           	callstack 0
  1078   000091                     dtoa@w:
  1079                           	callstack 0
  1080   000091                     ___fleq@ff1:
  1081                           	callstack 0
  1082   000091                     ___fldiv@b:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x31
  1086   000091                     	ds	2
  1087   000093                     dtoa@n:
  1088                           	callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x33
  1091   000093                     	ds	2
  1092   000095                     ___fleq@ff2:
  1093                           	callstack 0
  1094   000095                     ___fldiv@a:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x35
  1098   000095                     	ds	4
  1099   000099                     ??___fldiv:
  1100   000099                     ??___fleq:
  1101                           
  1102                           ; 1 bytes @ 0x39
  1103   000099                     	ds	2
  1104   00009B                     dtoa@i:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x3B
  1108   00009B                     	ds	2
  1109   00009D                     dtoa@s:
  1110                           	callstack 0
  1111   00009D                     ___fldiv@rem:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x3D
  1115   00009D                     	ds	4
  1116   0000A1                     ___fldiv@sign:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x41
  1120   0000A1                     	ds	1
  1121   0000A2                     ___fldiv@new_exp:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x42
  1125   0000A2                     	ds	2
  1126   0000A4                     ___fldiv@grs:
  1127                           	callstack 0
  1128                           
  1129                           ; 4 bytes @ 0x44
  1130   0000A4                     	ds	4
  1131   0000A8                     ___fldiv@bexp:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x48
  1135   0000A8                     	ds	1
  1136   0000A9                     ___fldiv@aexp:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x49
  1140   0000A9                     	ds	1
  1141   0000AA                     ?_Colour_decider:
  1142                           	callstack 0
  1143   0000AA                     ?_floorf:
  1144                           	callstack 0
  1145   0000AA                     colour_rel@vals:
  1146                           	callstack 0
  1147   0000AA                     Colour_decider@vals:
  1148                           	callstack 0
  1149   0000AA                     floorf@x:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x4A
  1153   0000AA                     	ds	2
  1154   0000AC                     colour_rel@rel:
  1155                           	callstack 0
  1156   0000AC                     Colour_decider@rel:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4C
  1160   0000AC                     	ds	2
  1161   0000AE                     ??_floorf:
  1162   0000AE                     ??_Colour_decider:
  1163   0000AE                     colour_rel@L:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x4E
  1167   0000AE                     	ds	2
  1168   0000B0                     _Colour_decider$3309:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x50
  1172   0000B0                     	ds	2
  1173   0000B2                     _colour_rel$3307:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x52
  1177   0000B2                     	ds	2
  1178   0000B4                     Colour_decider@Cmax_i:
  1179                           	callstack 0
  1180   0000B4                     floorf@m:
  1181                           	callstack 0
  1182                           
  1183                           ; 4 bytes @ 0x54
  1184   0000B4                     	ds	2
  1185   0000B6                     _colour_rel$3308:
  1186                           	callstack 0
  1187   0000B6                     Colour_decider@RGB_col:
  1188                           	callstack 0
  1189                           
  1190                           ; 12 bytes @ 0x56
  1191   0000B6                     	ds	2
  1192   0000B8                     floorf@e:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x58
  1196   0000B8                     	ds	2
  1197   0000BA                     colour_rel@R:
  1198                           	callstack 0
  1199   0000BA                     floorf@u:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x5A
  1203   0000BA                     	ds	4
  1204   0000BE                     efgtoa@fp:
  1205                           	callstack 0
  1206   0000BE                     colour_rel@G:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x5E
  1210   0000BE                     	ds	2
  1211   0000C0                     efgtoa@f:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x60
  1215   0000C0                     	ds	2
  1216   0000C2                     colour_rel@B:
  1217                           	callstack 0
  1218   0000C2                     Colour_decider@Cmax:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x62
  1222   0000C2                     	ds	2
  1223   0000C4                     efgtoa@c:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x64
  1227   0000C4                     	ds	1
  1228   0000C5                     ??_efgtoa:
  1229                           
  1230                           ; 1 bytes @ 0x65
  1231   0000C5                     	ds	1
  1232   0000C6                     Colour_decider@Cmin:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x66
  1236   0000C6                     	ds	1
  1237   0000C7                     efgtoa@ne:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x67
  1241   0000C7                     	ds	2
  1242   0000C9                     efgtoa@p:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x69
  1246   0000C9                     	ds	1
  1247   0000CA                     Colour_decider@i:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x6A
  1251   0000CA                     	ds	1
  1252   0000CB                     efgtoa@t:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x6B
  1256   0000CB                     	ds	1
  1257   0000CC                     Colour_decider@Hue:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x6C
  1261   0000CC                     	ds	1
  1262   0000CD                     _efgtoa$2934:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x6D
  1266   0000CD                     	ds	2
  1267   0000CF                     efgtoa@pp:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x6F
  1271   0000CF                     	ds	1
  1272   0000D0                     efgtoa@mode:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x70
  1276   0000D0                     	ds	1
  1277   0000D1                     efgtoa@nmode:
  1278                           	callstack 0
  1279                           
  1280                           ; 1 bytes @ 0x71
  1281   0000D1                     	ds	1
  1282   0000D2                     efgtoa@d:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x72
  1286   0000D2                     	ds	2
  1287   0000D4                     efgtoa@m:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x74
  1291   0000D4                     	ds	2
  1292   0000D6                     efgtoa@e:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x76
  1296   0000D6                     	ds	2
  1297   0000D8                     efgtoa@w:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x78
  1301   0000D8                     	ds	2
  1302   0000DA                     efgtoa@ou:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x7A
  1306   0000DA                     	ds	4
  1307   0000DE                     efgtoa@i:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x7E
  1311   0000DE                     	ds	2
  1312   0000E0                     efgtoa@h:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x80
  1316   0000E0                     	ds	4
  1317   0000E4                     efgtoa@l:
  1318                           	callstack 0
  1319                           
  1320                           ; 4 bytes @ 0x84
  1321   0000E4                     	ds	4
  1322   0000E8                     efgtoa@sign:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x88
  1326   0000E8                     	ds	1
  1327   0000E9                     efgtoa@n:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x89
  1331   0000E9                     	ds	2
  1332   0000EB                     efgtoa@g:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x8B
  1336   0000EB                     	ds	4
  1337   0000EF                     efgtoa@u:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0x8F
  1341   0000EF                     	ds	4
  1342   0000F3                     vfpfcnvrt@fp:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x93
  1346   0000F3                     	ds	2
  1347   0000F5                     vfpfcnvrt@fmt:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x95
  1351   0000F5                     	ds	2
  1352   0000F7                     vfpfcnvrt@ap:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x97
  1356   0000F7                     	ds	2
  1357   0000F9                     ??_vfpfcnvrt:
  1358                           
  1359                           ; 1 bytes @ 0x99
  1360   0000F9                     	ds	2
  1361   0000FB                     vfprintf@cfmt:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x9B
  1365   0000FB                     	ds	2
  1366   0000FD                     ??_main:
  1367                           
  1368                           ; 1 bytes @ 0x9D
  1369   0000FD                     	ds	2
  1370                           
  1371                           	psect	cstackCOMRAM
  1372   000001                     __pcstackCOMRAM:
  1373                           	callstack 0
  1374   000001                     ?i2___wmul:
  1375                           	callstack 0
  1376   000001                     i2TurnDelay@Turn45Delay:
  1377                           	callstack 0
  1378   000001                     i2delayed_ms@time:
  1379                           	callstack 0
  1380   000001                     i2___wmul@multiplier:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x0
  1384   000001                     	ds	2
  1385   000003                     ??i2_TurnDelay:
  1386   000003                     ??i2_delayed_ms:
  1387   000003                     i2___wmul@multiplicand:
  1388                           	callstack 0
  1389                           
  1390                           ; 2 bytes @ 0x2
  1391   000003                     	ds	1
  1392   000004                     i2delayed_ms@i:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x3
  1396   000004                     	ds	1
  1397   000005                     i2___wmul@product:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x4
  1401   000005                     	ds	2
  1402   000007                     ?i2___lwdiv:
  1403                           	callstack 0
  1404   000007                     i2___lwdiv@dividend:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x6
  1408   000007                     	ds	2
  1409   000009                     i2___lwdiv@divisor:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x8
  1413   000009                     	ds	2
  1414   00000B                     i2___lwdiv@quotient:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0xA
  1418   00000B                     	ds	2
  1419   00000D                     i2___lwdiv@counter:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0xC
  1423   00000D                     	ds	1
  1424   00000E                     i2setMotorPWM@m:
  1425                           	callstack 0
  1426                           
  1427                           ; 2 bytes @ 0xD
  1428   00000E                     	ds	2
  1429   000010                     ??i2_setMotorPWM:
  1430                           
  1431                           ; 1 bytes @ 0xF
  1432   000010                     	ds	2
  1433   000012                     i2setMotorPWM@posDuty:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x11
  1437   000012                     	ds	1
  1438   000013                     i2setMotorPWM@negDuty:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x12
  1442   000013                     	ds	1
  1443   000014                     i2stop@mL:
  1444                           	callstack 0
  1445   000014                     i2turnLeft@mL:
  1446                           	callstack 0
  1447   000014                     i2turnRight@mL:
  1448                           	callstack 0
  1449   000014                     i2fullSpeedAhead@mL:
  1450                           	callstack 0
  1451   000014                     i2timed_forward@mL:
  1452                           	callstack 0
  1453   000014                     i2fullSpeedBack@mL:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x13
  1457   000014                     	ds	2
  1458   000016                     i2stop@mR:
  1459                           	callstack 0
  1460   000016                     i2turnLeft@mR:
  1461                           	callstack 0
  1462   000016                     i2turnRight@mR:
  1463                           	callstack 0
  1464   000016                     i2fullSpeedAhead@mR:
  1465                           	callstack 0
  1466   000016                     i2timed_forward@mR:
  1467                           	callstack 0
  1468   000016                     i2fullSpeedBack@mR:
  1469                           	callstack 0
  1470                           
  1471                           ; 2 bytes @ 0x15
  1472   000016                     	ds	2
  1473   000018                     ??i2_stop:
  1474   000018                     ??i2_turnLeft:
  1475   000018                     ??i2_turnRight:
  1476   000018                     ??i2_fullSpeedAhead:
  1477   000018                     ??i2_fullSpeedBack:
  1478   000018                     i2timed_forward@time:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x17
  1482   000018                     	ds	2
  1483   00001A                     ??i2_timed_forward:
  1484                           
  1485                           ; 1 bytes @ 0x19
  1486   00001A                     	ds	1
  1487   00001B                     i2turnRight45@mL:
  1488                           	callstack 0
  1489   00001B                     i2turnLeft45@mL:
  1490                           	callstack 0
  1491   00001B                     i2reverseDetect@mL:
  1492                           	callstack 0
  1493   00001B                     i2ForwardOneBlock@mL:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x1A
  1497   00001B                     	ds	2
  1498   00001D                     i2turnRight45@mR:
  1499                           	callstack 0
  1500   00001D                     i2turnLeft45@mR:
  1501                           	callstack 0
  1502   00001D                     i2reverseDetect@mR:
  1503                           	callstack 0
  1504   00001D                     i2ForwardOneBlock@mR:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x1C
  1508   00001D                     	ds	2
  1509   00001F                     ??i2_turnRight45:
  1510   00001F                     ??i2_turnLeft45:
  1511   00001F                     ??i2_reverseDetect:
  1512   00001F                     ??i2_ForwardOneBlock:
  1513                           
  1514                           ; 1 bytes @ 0x1E
  1515   00001F                     	ds	2
  1516   000021                     i2RedMove@mL:
  1517                           	callstack 0
  1518   000021                     i2GreenMove@mL:
  1519                           	callstack 0
  1520   000021                     i2BlueMove@mL:
  1521                           	callstack 0
  1522   000021                     i2OrangeMove@mL:
  1523                           	callstack 0
  1524   000021                     i2LightBlueMove@mL:
  1525                           	callstack 0
  1526   000021                     i2ReverseYellow@mL:
  1527                           	callstack 0
  1528   000021                     i2ReversePink@mL:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x20
  1532   000021                     	ds	2
  1533   000023                     i2RedMove@mR:
  1534                           	callstack 0
  1535   000023                     i2GreenMove@mR:
  1536                           	callstack 0
  1537   000023                     i2BlueMove@mR:
  1538                           	callstack 0
  1539   000023                     i2OrangeMove@mR:
  1540                           	callstack 0
  1541   000023                     i2LightBlueMove@mR:
  1542                           	callstack 0
  1543   000023                     i2ReverseYellow@mR:
  1544                           	callstack 0
  1545   000023                     i2ReversePink@mR:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x22
  1549   000023                     	ds	2
  1550   000025                     i2go_Home@WayBack:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x24
  1554   000025                     	ds	2
  1555   000027                     i2go_Home@Time_forward:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x26
  1559   000027                     	ds	2
  1560   000029                     ??i2_go_Home:
  1561                           
  1562                           ; 1 bytes @ 0x28
  1563   000029                     	ds	3
  1564   00002C                     i2go_Home@i:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x2B
  1568   00002C                     	ds	2
  1569   00002E                     ??_HighISR:
  1570                           
  1571                           ; 1 bytes @ 0x2D
  1572   00002E                     	ds	4
  1573                           
  1574 ;;
  1575 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1576 ;;
  1577 ;; *************** function _main *****************
  1578 ;; Defined at:
  1579 ;;		line 30 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  colour          2  154[BANK1 ] int 
  1584 ;;  buf           100   50[BANK1 ] unsigned char [100]
  1585 ;;  prev_colour     2  156[BANK1 ] int 
  1586 ;;  consecuitive    2  152[BANK1 ] int 
  1587 ;;  lost_count      2  150[BANK1 ] int 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1601 ;;Total ram usage:      110 bytes
  1602 ;; Hardware stack levels required when called: 15
  1603 ;; This function calls:
  1604 ;;		_BlueMove
  1605 ;;		_Colour_decider
  1606 ;;		_Forwardhalfblock
  1607 ;;		_GreenMove
  1608 ;;		_I2C_2_Master_Init
  1609 ;;		_Interrupts_init
  1610 ;;		_LightBlueMove
  1611 ;;		_OrangeMove
  1612 ;;		_PinkMove
  1613 ;;		_RedMove
  1614 ;;		_RetryMove
  1615 ;;		_Timer0_init
  1616 ;;		_YellowMove
  1617 ;;		_color_click_init
  1618 ;;		_colour_rel
  1619 ;;		_fullSpeedAhead
  1620 ;;		_getTMR0val
  1621 ;;		_go_Home
  1622 ;;		_initDCmotorsPWM
  1623 ;;		_initUSART4
  1624 ;;		_readColours
  1625 ;;		_sendStringSerial4
  1626 ;;		_sprintf
  1627 ;;		_stop
  1628 ;;		_turnCalibration
  1629 ;; This function is called by:
  1630 ;;		Startup code after reset
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text0
  1635   00235C                     __ptext0:
  1636                           	callstack 0
  1637   00235C                     _main:
  1638                           	callstack 16
  1639   00235C                     
  1640                           ;main.c: 31:     initUSART4();
  1641   00235C  EC02  F039         	call	_initUSART4	;wreg free
  1642   002360                     
  1643                           ;main.c: 32:     Interrupts_init();
  1644   002360  EC25  F039         	call	_Interrupts_init	;wreg free
  1645   002364                     
  1646                           ;main.c: 33:     color_click_init();
  1647   002364  EC5C  F033         	call	_color_click_init	;wreg free
  1648   002368                     
  1649                           ;main.c: 34:     I2C_2_Master_Init();
  1650   002368  EC90  F038         	call	_I2C_2_Master_Init	;wreg free
  1651   00236C                     
  1652                           ;main.c: 35:     initDCmotorsPWM(200);
  1653   00236C  0E00               	movlw	0
  1654   00236E  0100               	movlb	0	; () banked
  1655   002370  6F61               	movwf	(initDCmotorsPWM@PWMperiod+1)& (0+255),b
  1656   002372  0EC8               	movlw	200
  1657   002374  6F60               	movwf	initDCmotorsPWM@PWMperiod& (0+255),b
  1658   002376  ECDA  F02F         	call	_initDCmotorsPWM	;wreg free
  1659   00237A                     
  1660                           ;main.c: 36:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1661   00237A  9287               	bcf	135,1,c	;volatile
  1662   00237C                     
  1663                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1664   00237C  9881               	bcf	129,4,c	;volatile
  1665   00237E                     
  1666                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1667   00237E  9E86               	bcf	134,7,c	;volatile
  1668   002380                     
  1669                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1670   002380  8486               	bsf	134,2,c	;volatile
  1671   002382                     
  1672                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1673   002382  010E               	movlb	14	; () banked
  1674   002384  95B4               	bcf	180,2,b	;volatile
  1675   002386                     
  1676                           ; BSR set to: 14
  1677                           ;main.c: 43:     TRISFbits.TRISF3 = 1;
  1678   002386  8686               	bsf	134,3,c	;volatile
  1679   002388                     
  1680                           ; BSR set to: 14
  1681                           ;main.c: 44:     ANSELFbits.ANSELF3=0;
  1682   002388  97B4               	bcf	180,3,b	;volatile
  1683   00238A                     
  1684                           ; BSR set to: 14
  1685                           ;main.c: 45:     LATGbits.LATG1=1;
  1686   00238A  827F               	bsf	127,1,c	;volatile
  1687   00238C                     
  1688                           ; BSR set to: 14
  1689                           ;main.c: 46:     LATAbits.LATA4=1;
  1690   00238C  8879               	bsf	121,4,c	;volatile
  1691   00238E                     
  1692                           ; BSR set to: 14
  1693                           ;main.c: 47:     LATFbits.LATF7=1;
  1694   00238E  8E7E               	bsf	126,7,c	;volatile
  1695   002390                     
  1696                           ; BSR set to: 14
  1697                           ;main.c: 50:     LATDbits.LATD7=0;
  1698   002390  9E7C               	bcf	124,7,c	;volatile
  1699   002392                     
  1700                           ; BSR set to: 14
  1701                           ;main.c: 51:     TRISDbits.TRISD7=0;
  1702   002392  9E84               	bcf	132,7,c	;volatile
  1703   002394                     
  1704                           ; BSR set to: 14
  1705                           ;main.c: 52:     LATHbits.LATH3=0;
  1706   002394  9680               	bcf	128,3,c	;volatile
  1707   002396                     
  1708                           ; BSR set to: 14
  1709                           ;main.c: 53:     TRISHbits.TRISH3=0;
  1710   002396  9688               	bcf	136,3,c	;volatile
  1711   002398                     
  1712                           ; BSR set to: 14
  1713                           ;main.c: 56:     LATHbits.LATH0=0;
  1714   002398  9080               	bcf	128,0,c	;volatile
  1715   00239A                     
  1716                           ; BSR set to: 14
  1717                           ;main.c: 57:     TRISHbits.TRISH0=0;
  1718   00239A  9088               	bcf	136,0,c	;volatile
  1719   00239C                     
  1720                           ; BSR set to: 14
  1721                           ;main.c: 60:     LATFbits.LATF0=0;
  1722   00239C  907E               	bcf	126,0,c	;volatile
  1723   00239E                     
  1724                           ; BSR set to: 14
  1725                           ;main.c: 61:     TRISFbits.TRISF0=0;
  1726   00239E  9086               	bcf	134,0,c	;volatile
  1727   0023A0                     
  1728                           ; BSR set to: 14
  1729                           ;main.c: 64:     LATDbits.LATD4=0;
  1730   0023A0  987C               	bcf	124,4,c	;volatile
  1731   0023A2                     
  1732                           ; BSR set to: 14
  1733                           ;main.c: 65:     TRISDbits.TRISD4=0;
  1734   0023A2  9884               	bcf	132,4,c	;volatile
  1735   0023A4                     
  1736                           ; BSR set to: 14
  1737                           ;main.c: 68:     LATDbits.LATD3=0;
  1738   0023A4  967C               	bcf	124,3,c	;volatile
  1739   0023A6                     
  1740                           ; BSR set to: 14
  1741                           ;main.c: 69:     TRISDbits.TRISD3=0;
  1742   0023A6  9684               	bcf	132,3,c	;volatile
  1743   0023A8                     
  1744                           ; BSR set to: 14
  1745                           ;main.c: 74:     motorL.power=0;
  1746   0023A8  0E00               	movlw	0
  1747   0023AA  0101               	movlb	1	; () banked
  1748   0023AC  6FC3               	movwf	_motorL& (0+255),b
  1749   0023AE                     
  1750                           ; BSR set to: 1
  1751                           ;main.c: 75:     motorL.direction=1;
  1752   0023AE  0E01               	movlw	1
  1753   0023B0  6FC4               	movwf	(_motorL+1)& (0+255),b
  1754   0023B2                     
  1755                           ; BSR set to: 1
  1756                           ;main.c: 76:     motorL.brakemode=1;
  1757   0023B2  0E01               	movlw	1
  1758   0023B4  6FC5               	movwf	(_motorL+2)& (0+255),b
  1759   0023B6                     
  1760                           ; BSR set to: 1
  1761                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1762   0023B6  0EAA               	movlw	170
  1763   0023B8  6FC8               	movwf	(_motorL+5)& (0+255),b
  1764   0023BA  0E0F               	movlw	15
  1765   0023BC  6FC9               	movwf	(_motorL+6)& (0+255),b
  1766   0023BE                     
  1767                           ; BSR set to: 1
  1768                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1769   0023BE  0EA6               	movlw	166
  1770   0023C0  6FCA               	movwf	(_motorL+7)& (0+255),b
  1771   0023C2  0E0F               	movlw	15
  1772   0023C4  6FCB               	movwf	(_motorL+8)& (0+255),b
  1773   0023C6                     
  1774                           ; BSR set to: 1
  1775                           ;main.c: 79:     motorL.PWMperiod=200;
  1776   0023C6  0E00               	movlw	0
  1777   0023C8  6FC7               	movwf	(_motorL+4)& (0+255),b
  1778   0023CA  0EC8               	movlw	200
  1779   0023CC  6FC6               	movwf	(_motorL+3)& (0+255),b
  1780   0023CE                     
  1781                           ; BSR set to: 1
  1782                           ;main.c: 80:     motorR.power=0;
  1783   0023CE  0E00               	movlw	0
  1784   0023D0  6FBA               	movwf	_motorR& (0+255),b
  1785   0023D2                     
  1786                           ; BSR set to: 1
  1787                           ;main.c: 81:     motorR.direction=1;
  1788   0023D2  0E01               	movlw	1
  1789   0023D4  6FBB               	movwf	(_motorR+1)& (0+255),b
  1790   0023D6                     
  1791                           ; BSR set to: 1
  1792                           ;main.c: 82:     motorR.brakemode=1;
  1793   0023D6  0E01               	movlw	1
  1794   0023D8  6FBC               	movwf	(_motorR+2)& (0+255),b
  1795   0023DA                     
  1796                           ; BSR set to: 1
  1797                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1798   0023DA  0E25               	movlw	37
  1799   0023DC  6FBF               	movwf	(_motorR+5)& (0+255),b
  1800   0023DE  0E0F               	movlw	15
  1801   0023E0  6FC0               	movwf	(_motorR+6)& (0+255),b
  1802   0023E2                     
  1803                           ; BSR set to: 1
  1804                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1805   0023E2  0E21               	movlw	33
  1806   0023E4  6FC1               	movwf	(_motorR+7)& (0+255),b
  1807   0023E6  0E0F               	movlw	15
  1808   0023E8  6FC2               	movwf	(_motorR+8)& (0+255),b
  1809   0023EA                     
  1810                           ; BSR set to: 1
  1811                           ;main.c: 85:     motorR.PWMperiod=200;
  1812   0023EA  0E00               	movlw	0
  1813   0023EC  6FBE               	movwf	(_motorR+4)& (0+255),b
  1814   0023EE  0EC8               	movlw	200
  1815   0023F0  6FBD               	movwf	(_motorR+3)& (0+255),b
  1816   0023F2                     
  1817                           ; BSR set to: 1
  1818                           ;main.c: 87:     int consecuitive=0;
  1819   0023F2  0E00               	movlw	0
  1820   0023F4  6F99               	movwf	(main@consecuitive+1)& (0+255),b
  1821   0023F6  0E00               	movlw	0
  1822   0023F8  6F98               	movwf	main@consecuitive& (0+255),b
  1823   0023FA                     
  1824                           ; BSR set to: 1
  1825                           ;main.c: 88:     int prev_colour =0;
  1826   0023FA  0E00               	movlw	0
  1827   0023FC  6F9D               	movwf	(main@prev_colour+1)& (0+255),b
  1828   0023FE  0E00               	movlw	0
  1829   002400  6F9C               	movwf	main@prev_colour& (0+255),b
  1830   002402                     
  1831                           ; BSR set to: 1
  1832                           ;main.c: 89:     move_count=-1;
  1833   002402  684E               	setf	_move_count^0,c	;volatile
  1834   002404  684F               	setf	(_move_count+1)^0,c	;volatile
  1835   002406                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 91:     turnCalibration(&motorL,&motorR);
  1838   002406  0EC3               	movlw	low _motorL
  1839   002408  0100               	movlb	0	; () banked
  1840   00240A  6F80               	movwf	turnCalibration@mL& (0+255),b
  1841   00240C  0E01               	movlw	high _motorL
  1842   00240E  6F81               	movwf	(turnCalibration@mL+1)& (0+255),b
  1843   002410  0EBA               	movlw	low _motorR
  1844   002412  6F82               	movwf	turnCalibration@mR& (0+255),b
  1845   002414  0E01               	movlw	high _motorR
  1846   002416  6F83               	movwf	(turnCalibration@mR+1)& (0+255),b
  1847   002418  ECFE  F022         	call	_turnCalibration	;wreg free
  1848   00241C                     
  1849                           ;main.c: 93:     LATFbits.LATF0=0;
  1850   00241C  907E               	bcf	126,0,c	;volatile
  1851   00241E                     
  1852                           ;main.c: 94:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1853   00241E  0E52               	movlw	82
  1854   002420  0100               	movlb	0	; () banked
  1855   002422  6FFE               	movwf	(??_main+1)& (0+255),b
  1856   002424  0E2B               	movlw	43
  1857   002426  6FFD               	movwf	??_main& (0+255),b
  1858   002428  0E00               	movlw	0
  1859   00242A                     u6537:
  1860   00242A  2EE8               	decfsz	wreg,f,c
  1861   00242C  D7FE               	bra	u6537
  1862   00242E  2FFD               	decfsz	??_main& (0+255),f,b
  1863   002430  D7FC               	bra	u6537
  1864   002432  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1865   002434  D7FA               	bra	u6537
  1866   002436  F000               	nop	
  1867   002438                     l433:
  1868   002438  B48E               	btfsc	142,2,c	;volatile
  1869   00243A  EF21  F012         	goto	u6381
  1870   00243E  EF23  F012         	goto	u6380
  1871   002442                     u6381:
  1872   002442  EF1C  F012         	goto	l433
  1873   002446                     u6380:
  1874   002446                     
  1875                           ;main.c: 97:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1876   002446  0E52               	movlw	82
  1877   002448  0100               	movlb	0	; () banked
  1878   00244A  6FFE               	movwf	(??_main+1)& (0+255),b
  1879   00244C  0E2B               	movlw	43
  1880   00244E  6FFD               	movwf	??_main& (0+255),b
  1881   002450  0E00               	movlw	0
  1882   002452                     u6547:
  1883   002452  2EE8               	decfsz	wreg,f,c
  1884   002454  D7FE               	bra	u6547
  1885   002456  2FFD               	decfsz	??_main& (0+255),f,b
  1886   002458  D7FC               	bra	u6547
  1887   00245A  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  1888   00245C  D7FA               	bra	u6547
  1889   00245E  F000               	nop	
  1890   002460                     
  1891                           ;main.c: 98:     Timer0_init();
  1892   002460  ECF2  F038         	call	_Timer0_init	;wreg free
  1893                           
  1894                           ;main.c: 99:     while (run_flag)
  1895   002464  EF45  F014         	goto	l6563
  1896   002468                     l6437:
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;main.c: 100:     {;main.c: 101:         TMR0H=0;
  1900   002468  0E00               	movlw	0
  1901   00246A  6ED4               	movwf	212,c	;volatile
  1902                           
  1903                           ;main.c: 102:         TMR0L=0;
  1904   00246C  0E00               	movlw	0
  1905   00246E  6ED3               	movwf	211,c	;volatile
  1906                           
  1907                           ;main.c: 103:         lost_count=0;
  1908   002470  0E00               	movlw	0
  1909   002472  6F97               	movwf	(main@lost_count+1)& (0+255),b
  1910   002474  0E00               	movlw	0
  1911   002476  6F96               	movwf	main@lost_count& (0+255),b
  1912   002478                     
  1913                           ; BSR set to: 1
  1914                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1915   002478  0EC3               	movlw	low _motorL
  1916   00247A  0100               	movlb	0	; () banked
  1917   00247C  6F73               	movwf	fullSpeedAhead@mL& (0+255),b
  1918   00247E  0E01               	movlw	high _motorL
  1919   002480  6F74               	movwf	(fullSpeedAhead@mL+1)& (0+255),b
  1920   002482  0EBA               	movlw	low _motorR
  1921   002484  6F75               	movwf	fullSpeedAhead@mR& (0+255),b
  1922   002486  0E01               	movlw	high _motorR
  1923   002488  6F76               	movwf	(fullSpeedAhead@mR+1)& (0+255),b
  1924   00248A  ECB1  F02B         	call	_fullSpeedAhead	;wreg free
  1925   00248E                     
  1926                           ;main.c: 106:         readColours(&vals);
  1927   00248E  0ECC               	movlw	low _vals
  1928   002490  0100               	movlb	0	; () banked
  1929   002492  6F6B               	movwf	readColours@vals& (0+255),b
  1930   002494  0E01               	movlw	high _vals
  1931   002496  6F6C               	movwf	(readColours@vals+1)& (0+255),b
  1932   002498  EC3B  F032         	call	_readColours	;wreg free
  1933   00249C                     
  1934                           ;main.c: 109:         colour_rel(&vals, &rel);
  1935   00249C  0ECC               	movlw	low _vals
  1936   00249E  0100               	movlb	0	; () banked
  1937   0024A0  6FAA               	movwf	colour_rel@vals& (0+255),b
  1938   0024A2  0E01               	movlw	high _vals
  1939   0024A4  6FAB               	movwf	(colour_rel@vals+1)& (0+255),b
  1940   0024A6  0EAE               	movlw	low _rel
  1941   0024A8  6FAC               	movwf	colour_rel@rel& (0+255),b
  1942   0024AA  0E01               	movlw	high _rel
  1943   0024AC  6FAD               	movwf	(colour_rel@rel+1)& (0+255),b
  1944   0024AE  EC96  F01A         	call	_colour_rel	;wreg free
  1945   0024B2                     
  1946                           ;main.c: 112:         if (vals.L>=500){
  1947   0024B2  0101               	movlb	1	; () banked
  1948   0024B4  BFD3               	btfsc	(_vals+7)& (0+255),7,b
  1949   0024B6  EF66  F012         	goto	u6391
  1950   0024BA  0EF4               	movlw	244
  1951   0024BC  5DD2               	subwf	(_vals+6)& (0+255),w,b
  1952   0024BE  0E01               	movlw	1
  1953   0024C0  59D3               	subwfb	(_vals+7)& (0+255),w,b
  1954   0024C2  A0D8               	btfss	status,0,c
  1955   0024C4  EF66  F012         	goto	u6391
  1956   0024C8  EF68  F012         	goto	u6390
  1957   0024CC                     u6391:
  1958   0024CC  EF45  F014         	goto	l6563
  1959   0024D0                     u6390:
  1960   0024D0                     
  1961                           ; BSR set to: 1
  1962                           ;main.c: 113:             move_count++;
  1963   0024D0  4A4E               	infsnz	_move_count^0,f,c	;volatile
  1964   0024D2  2A4F               	incf	(_move_count+1)^0,f,c	;volatile
  1965   0024D4                     
  1966                           ; BSR set to: 1
  1967                           ;main.c: 114:             getTMR0val();
  1968   0024D4  ECB9  F038         	call	_getTMR0val	;wreg free
  1969   0024D8                     
  1970                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1971   0024D8  0EC3               	movlw	low _motorL
  1972   0024DA  0100               	movlb	0	; () banked
  1973   0024DC  6F7A               	movwf	Forwardhalfblock@mL& (0+255),b
  1974   0024DE  0E01               	movlw	high _motorL
  1975   0024E0  6F7B               	movwf	(Forwardhalfblock@mL+1)& (0+255),b
  1976   0024E2  0EBA               	movlw	low _motorR
  1977   0024E4  6F7C               	movwf	Forwardhalfblock@mR& (0+255),b
  1978   0024E6  0E01               	movlw	high _motorR
  1979   0024E8  6F7D               	movwf	(Forwardhalfblock@mR+1)& (0+255),b
  1980   0024EA  EC6E  F032         	call	_Forwardhalfblock	;wreg free
  1981   0024EE                     
  1982                           ;main.c: 118:             stop(&motorL, &motorR);
  1983   0024EE  0EC3               	movlw	low _motorL
  1984   0024F0  0100               	movlb	0	; () banked
  1985   0024F2  6F73               	movwf	stop@mL& (0+255),b
  1986   0024F4  0E01               	movlw	high _motorL
  1987   0024F6  6F74               	movwf	(stop@mL+1)& (0+255),b
  1988   0024F8  0EBA               	movlw	low _motorR
  1989   0024FA  6F75               	movwf	stop@mR& (0+255),b
  1990   0024FC  0E01               	movlw	high _motorR
  1991   0024FE  6F76               	movwf	(stop@mR+1)& (0+255),b
  1992   002500  EC61  F030         	call	_stop	;wreg free
  1993   002504                     
  1994                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1995   002504  0E11               	movlw	17
  1996   002506  0100               	movlb	0	; () banked
  1997   002508  6FFE               	movwf	(??_main+1)& (0+255),b
  1998   00250A  0E3C               	movlw	60
  1999   00250C  6FFD               	movwf	??_main& (0+255),b
  2000   00250E  0ECB               	movlw	203
  2001   002510                     u6557:
  2002   002510  2EE8               	decfsz	wreg,f,c
  2003   002512  D7FE               	bra	u6557
  2004   002514  2FFD               	decfsz	??_main& (0+255),f,b
  2005   002516  D7FC               	bra	u6557
  2006   002518  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  2007   00251A  D7FA               	bra	u6557
  2008                           
  2009                           ;main.c: 126:             while (consecuitive<20){
  2010   00251C  EFC4  F012         	goto	l6469
  2011   002520                     l6457:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;main.c: 127:                 int colour = Colour_decider(&vals, &rel);
  2015   002520  0ECC               	movlw	low _vals
  2016   002522  0100               	movlb	0	; () banked
  2017   002524  6FAA               	movwf	Colour_decider@vals& (0+255),b
  2018   002526  0E01               	movlw	high _vals
  2019   002528  6FAB               	movwf	(Colour_decider@vals+1)& (0+255),b
  2020   00252A  0EAE               	movlw	low _rel
  2021   00252C  6FAC               	movwf	Colour_decider@rel& (0+255),b
  2022   00252E  0E01               	movlw	high _rel
  2023   002530  6FAD               	movwf	(Colour_decider@rel+1)& (0+255),b
  2024   002532  EC1C  F007         	call	_Colour_decider	;wreg free
  2025   002536  C0AA  F19A         	movff	?_Colour_decider,main@colour
  2026   00253A  C0AB  F19B         	movff	?_Colour_decider+1,main@colour+1
  2027   00253E                     
  2028                           ;main.c: 128:                 if (colour==prev_colour){
  2029   00253E  0101               	movlb	1	; () banked
  2030   002540  519C               	movf	main@prev_colour& (0+255),w,b
  2031   002542  199A               	xorwf	main@colour& (0+255),w,b
  2032   002544  E107               	bnz	u6401
  2033   002546  519D               	movf	(main@prev_colour+1)& (0+255),w,b
  2034   002548  199B               	xorwf	(main@colour+1)& (0+255),w,b
  2035   00254A  A4D8               	btfss	status,2,c
  2036   00254C  EFAA  F012         	goto	u6401
  2037   002550  EFAC  F012         	goto	u6400
  2038   002554                     u6401:
  2039   002554  EFB0  F012         	goto	l6463
  2040   002558                     u6400:
  2041   002558                     
  2042                           ; BSR set to: 1
  2043                           ;main.c: 129:                     consecuitive++;
  2044   002558  4B98               	infsnz	main@consecuitive& (0+255),f,b
  2045   00255A  2B99               	incf	(main@consecuitive+1)& (0+255),f,b
  2046                           
  2047                           ;main.c: 130:                 }
  2048   00255C  EFB4  F012         	goto	l6465
  2049   002560                     l6463:
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;main.c: 132:                     consecuitive=0;
  2053   002560  0E00               	movlw	0
  2054   002562  6F99               	movwf	(main@consecuitive+1)& (0+255),b
  2055   002564  0E00               	movlw	0
  2056   002566  6F98               	movwf	main@consecuitive& (0+255),b
  2057   002568                     l6465:
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;main.c: 134:                 prev_colour=colour;
  2061   002568  C19A  F19C         	movff	main@colour,main@prev_colour
  2062   00256C  C19B  F19D         	movff	main@colour+1,main@prev_colour+1
  2063   002570                     
  2064                           ; BSR set to: 1
  2065                           ;main.c: 135:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  2066   002570  0E05               	movlw	5
  2067   002572  0100               	movlb	0	; () banked
  2068   002574  6FFE               	movwf	(??_main+1)& (0+255),b
  2069   002576  0E0F               	movlw	15
  2070   002578  6FFD               	movwf	??_main& (0+255),b
  2071   00257A  0EF1               	movlw	241
  2072   00257C                     u6567:
  2073   00257C  2EE8               	decfsz	wreg,f,c
  2074   00257E  D7FE               	bra	u6567
  2075   002580  2FFD               	decfsz	??_main& (0+255),f,b
  2076   002582  D7FC               	bra	u6567
  2077   002584  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  2078   002586  D7FA               	bra	u6567
  2079   002588                     l6469:
  2080                           
  2081                           ;main.c: 126:             while (consecuitive<20){
  2082   002588  0101               	movlb	1	; () banked
  2083   00258A  BF99               	btfsc	(main@consecuitive+1)& (0+255),7,b
  2084   00258C  EFD1  F012         	goto	u6411
  2085   002590  5199               	movf	(main@consecuitive+1)& (0+255),w,b
  2086   002592  E109               	bnz	u6410
  2087   002594  0E14               	movlw	20
  2088   002596  5D98               	subwf	main@consecuitive& (0+255),w,b
  2089   002598  A0D8               	btfss	status,0,c
  2090   00259A  EFD1  F012         	goto	u6411
  2091   00259E  EFD3  F012         	goto	u6410
  2092   0025A2                     u6411:
  2093   0025A2  EF90  F012         	goto	l6457
  2094   0025A6                     u6410:
  2095   0025A6                     
  2096                           ; BSR set to: 1
  2097                           ;main.c: 137:             consecuitive=0;
  2098   0025A6  0E00               	movlw	0
  2099   0025A8  6F99               	movwf	(main@consecuitive+1)& (0+255),b
  2100   0025AA  0E00               	movlw	0
  2101   0025AC  6F98               	movwf	main@consecuitive& (0+255),b
  2102   0025AE                     
  2103                           ; BSR set to: 1
  2104                           ;main.c: 141:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  2105   0025AE  0E32               	movlw	low main@buf
  2106   0025B0  6F11               	movwf	sprintf@s& (0+255),b
  2107   0025B2  0E01               	movlw	high main@buf
  2108   0025B4  6F12               	movwf	(sprintf@s+1)& (0+255),b
  2109   0025B6  0E01               	movlw	low STR_1
  2110   0025B8  6F13               	movwf	sprintf@fmt& (0+255),b
  2111   0025BA  0E0E               	movlw	high STR_1
  2112   0025BC  6F14               	movwf	(sprintf@fmt+1)& (0+255),b
  2113   0025BE  C1AE  F115         	movff	_rel,?_sprintf+4
  2114   0025C2  C1AF  F116         	movff	_rel+1,?_sprintf+5
  2115   0025C6  C1B0  F117         	movff	_rel+2,?_sprintf+6
  2116   0025CA  C1B1  F118         	movff	_rel+3,?_sprintf+7
  2117   0025CE  C1B2  F119         	movff	_rel+4,?_sprintf+8
  2118   0025D2  C1B3  F11A         	movff	_rel+5,?_sprintf+9
  2119   0025D6  C1B4  F11B         	movff	_rel+6,?_sprintf+10
  2120   0025DA  C1B5  F11C         	movff	_rel+7,?_sprintf+11
  2121   0025DE  C1B6  F11D         	movff	_rel+8,?_sprintf+12
  2122   0025E2  C1B7  F11E         	movff	_rel+9,?_sprintf+13
  2123   0025E6  C1B8  F11F         	movff	_rel+10,?_sprintf+14
  2124   0025EA  C1B9  F120         	movff	_rel+11,?_sprintf+15
  2125   0025EE  C1D2  F121         	movff	_vals+6,?_sprintf+16
  2126   0025F2  C1D3  F122         	movff	_vals+7,?_sprintf+17
  2127   0025F6  C19C  F123         	movff	main@prev_colour,?_sprintf+18
  2128   0025FA  C19D  F124         	movff	main@prev_colour+1,?_sprintf+19
  2129   0025FE  ECE3  F034         	call	_sprintf	;wreg free
  2130   002602                     
  2131                           ;main.c: 142:             sendStringSerial4(buf);
  2132   002602  0E32               	movlw	low main@buf
  2133   002604  0100               	movlb	0	; () banked
  2134   002606  6F61               	movwf	sendStringSerial4@string& (0+255),b
  2135   002608  0E01               	movlw	high main@buf
  2136   00260A  6F62               	movwf	(sendStringSerial4@string+1)& (0+255),b
  2137   00260C  EC62  F038         	call	_sendStringSerial4	;wreg free
  2138   002610                     
  2139                           ;main.c: 144:             if (prev_colour==1){
  2140   002610  0101               	movlb	1	; () banked
  2141   002612  059C               	decf	main@prev_colour& (0+255),w,b
  2142   002614  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2143   002616  A4D8               	btfss	status,2,c
  2144   002618  EF10  F013         	goto	u6421
  2145   00261C  EF12  F013         	goto	u6420
  2146   002620                     u6421:
  2147   002620  EF2B  F013         	goto	l6487
  2148   002624                     u6420:
  2149   002624                     
  2150                           ; BSR set to: 1
  2151                           ;main.c: 145:                 RedMove(&motorL, &motorR);
  2152   002624  0EC3               	movlw	low _motorL
  2153   002626  0100               	movlb	0	; () banked
  2154   002628  6F80               	movwf	RedMove@mL& (0+255),b
  2155   00262A  0E01               	movlw	high _motorL
  2156   00262C  6F81               	movwf	(RedMove@mL+1)& (0+255),b
  2157   00262E  0EBA               	movlw	low _motorR
  2158   002630  6F82               	movwf	RedMove@mR& (0+255),b
  2159   002632  0E01               	movlw	high _motorR
  2160   002634  6F83               	movwf	(RedMove@mR+1)& (0+255),b
  2161   002636  EC2E  F037         	call	_RedMove	;wreg free
  2162   00263A                     
  2163                           ;main.c: 146:                 TMR0H=0;
  2164   00263A  0E00               	movlw	0
  2165   00263C  6ED4               	movwf	212,c	;volatile
  2166   00263E                     
  2167                           ;main.c: 147:                 TMR0L=0;
  2168   00263E  0E00               	movlw	0
  2169   002640  6ED3               	movwf	211,c	;volatile
  2170   002642                     
  2171                           ;main.c: 148:                 WayBack[move_count]=1;
  2172   002642  0E8C               	movlw	low _WayBack
  2173   002644  244E               	addwf	_move_count^0,w,c	;volatile
  2174   002646  6ED9               	movwf	fsr2l,c
  2175   002648  0E02               	movlw	high _WayBack
  2176   00264A  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2177   00264C  6EDA               	movwf	fsr2h,c
  2178   00264E  0E01               	movlw	1
  2179   002650  6EDF               	movwf	indf2,c
  2180                           
  2181                           ;main.c: 149:             }
  2182   002652  EF45  F014         	goto	l6563
  2183   002656                     l6487:
  2184                           
  2185                           ; BSR set to: 1
  2186   002656  0E02               	movlw	2
  2187   002658  199C               	xorwf	main@prev_colour& (0+255),w,b
  2188   00265A  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2189   00265C  A4D8               	btfss	status,2,c
  2190   00265E  EF33  F013         	goto	u6431
  2191   002662  EF35  F013         	goto	u6430
  2192   002666                     u6431:
  2193   002666  EF4E  F013         	goto	l6497
  2194   00266A                     u6430:
  2195   00266A                     
  2196                           ; BSR set to: 1
  2197                           ;main.c: 151:                 OrangeMove(&motorL, &motorR);
  2198   00266A  0EC3               	movlw	low _motorL
  2199   00266C  0100               	movlb	0	; () banked
  2200   00266E  6F80               	movwf	OrangeMove@mL& (0+255),b
  2201   002670  0E01               	movlw	high _motorL
  2202   002672  6F81               	movwf	(OrangeMove@mL+1)& (0+255),b
  2203   002674  0EBA               	movlw	low _motorR
  2204   002676  6F82               	movwf	OrangeMove@mR& (0+255),b
  2205   002678  0E01               	movlw	high _motorR
  2206   00267A  6F83               	movwf	(OrangeMove@mR+1)& (0+255),b
  2207   00267C  EC02  F033         	call	_OrangeMove	;wreg free
  2208   002680                     
  2209                           ;main.c: 152:                 TMR0H=0;
  2210   002680  0E00               	movlw	0
  2211   002682  6ED4               	movwf	212,c	;volatile
  2212   002684                     
  2213                           ;main.c: 153:                 TMR0L=0;
  2214   002684  0E00               	movlw	0
  2215   002686  6ED3               	movwf	211,c	;volatile
  2216   002688                     
  2217                           ;main.c: 154:                 WayBack[move_count]=2;
  2218   002688  0E8C               	movlw	low _WayBack
  2219   00268A  244E               	addwf	_move_count^0,w,c	;volatile
  2220   00268C  6ED9               	movwf	fsr2l,c
  2221   00268E  0E02               	movlw	high _WayBack
  2222   002690  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2223   002692  6EDA               	movwf	fsr2h,c
  2224   002694  0E02               	movlw	2
  2225   002696  6EDF               	movwf	indf2,c
  2226                           
  2227                           ;main.c: 155:             }
  2228   002698  EF45  F014         	goto	l6563
  2229   00269C                     l6497:
  2230                           
  2231                           ; BSR set to: 1
  2232   00269C  0E03               	movlw	3
  2233   00269E  199C               	xorwf	main@prev_colour& (0+255),w,b
  2234   0026A0  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2235   0026A2  A4D8               	btfss	status,2,c
  2236   0026A4  EF56  F013         	goto	u6441
  2237   0026A8  EF58  F013         	goto	u6440
  2238   0026AC                     u6441:
  2239   0026AC  EF71  F013         	goto	l6507
  2240   0026B0                     u6440:
  2241   0026B0                     
  2242                           ; BSR set to: 1
  2243                           ;main.c: 157:                 YellowMove(&motorL, &motorR);
  2244   0026B0  0EC3               	movlw	low _motorL
  2245   0026B2  0100               	movlb	0	; () banked
  2246   0026B4  6F80               	movwf	YellowMove@mL& (0+255),b
  2247   0026B6  0E01               	movlw	high _motorL
  2248   0026B8  6F81               	movwf	(YellowMove@mL+1)& (0+255),b
  2249   0026BA  0EBA               	movlw	low _motorR
  2250   0026BC  6F82               	movwf	YellowMove@mR& (0+255),b
  2251   0026BE  0E01               	movlw	high _motorR
  2252   0026C0  6F83               	movwf	(YellowMove@mR+1)& (0+255),b
  2253   0026C2  EC89  F033         	call	_YellowMove	;wreg free
  2254   0026C6                     
  2255                           ;main.c: 158:                 TMR0H=0;
  2256   0026C6  0E00               	movlw	0
  2257   0026C8  6ED4               	movwf	212,c	;volatile
  2258   0026CA                     
  2259                           ;main.c: 159:                 TMR0L=0;
  2260   0026CA  0E00               	movlw	0
  2261   0026CC  6ED3               	movwf	211,c	;volatile
  2262   0026CE                     
  2263                           ;main.c: 160:                 WayBack[move_count]=3;
  2264   0026CE  0E8C               	movlw	low _WayBack
  2265   0026D0  244E               	addwf	_move_count^0,w,c	;volatile
  2266   0026D2  6ED9               	movwf	fsr2l,c
  2267   0026D4  0E02               	movlw	high _WayBack
  2268   0026D6  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2269   0026D8  6EDA               	movwf	fsr2h,c
  2270   0026DA  0E03               	movlw	3
  2271   0026DC  6EDF               	movwf	indf2,c
  2272                           
  2273                           ;main.c: 161:             }
  2274   0026DE  EF45  F014         	goto	l6563
  2275   0026E2                     l6507:
  2276                           
  2277                           ; BSR set to: 1
  2278   0026E2  0E04               	movlw	4
  2279   0026E4  199C               	xorwf	main@prev_colour& (0+255),w,b
  2280   0026E6  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2281   0026E8  A4D8               	btfss	status,2,c
  2282   0026EA  EF79  F013         	goto	u6451
  2283   0026EE  EF7B  F013         	goto	u6450
  2284   0026F2                     u6451:
  2285   0026F2  EF94  F013         	goto	l6517
  2286   0026F6                     u6450:
  2287   0026F6                     
  2288                           ; BSR set to: 1
  2289                           ;main.c: 163:                 BlueMove(&motorL, &motorR);
  2290   0026F6  0EC3               	movlw	low _motorL
  2291   0026F8  0100               	movlb	0	; () banked
  2292   0026FA  6F80               	movwf	BlueMove@mL& (0+255),b
  2293   0026FC  0E01               	movlw	high _motorL
  2294   0026FE  6F81               	movwf	(BlueMove@mL+1)& (0+255),b
  2295   002700  0EBA               	movlw	low _motorR
  2296   002702  6F82               	movwf	BlueMove@mR& (0+255),b
  2297   002704  0E01               	movlw	high _motorR
  2298   002706  6F83               	movwf	(BlueMove@mR+1)& (0+255),b
  2299   002708  ECCF  F031         	call	_BlueMove	;wreg free
  2300   00270C                     
  2301                           ;main.c: 164:                 TMR0H=0;
  2302   00270C  0E00               	movlw	0
  2303   00270E  6ED4               	movwf	212,c	;volatile
  2304   002710                     
  2305                           ;main.c: 165:                 TMR0L=0;
  2306   002710  0E00               	movlw	0
  2307   002712  6ED3               	movwf	211,c	;volatile
  2308   002714                     
  2309                           ;main.c: 166:                 WayBack[move_count]=4;
  2310   002714  0E8C               	movlw	low _WayBack
  2311   002716  244E               	addwf	_move_count^0,w,c	;volatile
  2312   002718  6ED9               	movwf	fsr2l,c
  2313   00271A  0E02               	movlw	high _WayBack
  2314   00271C  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2315   00271E  6EDA               	movwf	fsr2h,c
  2316   002720  0E04               	movlw	4
  2317   002722  6EDF               	movwf	indf2,c
  2318                           
  2319                           ;main.c: 167:             }
  2320   002724  EF45  F014         	goto	l6563
  2321   002728                     l6517:
  2322                           
  2323                           ; BSR set to: 1
  2324   002728  0E05               	movlw	5
  2325   00272A  199C               	xorwf	main@prev_colour& (0+255),w,b
  2326   00272C  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2327   00272E  A4D8               	btfss	status,2,c
  2328   002730  EF9C  F013         	goto	u6461
  2329   002734  EF9E  F013         	goto	u6460
  2330   002738                     u6461:
  2331   002738  EFB7  F013         	goto	l6527
  2332   00273C                     u6460:
  2333   00273C                     
  2334                           ; BSR set to: 1
  2335                           ;main.c: 169:                 GreenMove(&motorL, &motorR);
  2336   00273C  0EC3               	movlw	low _motorL
  2337   00273E  0100               	movlb	0	; () banked
  2338   002740  6F80               	movwf	GreenMove@mL& (0+255),b
  2339   002742  0E01               	movlw	high _motorL
  2340   002744  6F81               	movwf	(GreenMove@mL+1)& (0+255),b
  2341   002746  0EBA               	movlw	low _motorR
  2342   002748  6F82               	movwf	GreenMove@mR& (0+255),b
  2343   00274A  0E01               	movlw	high _motorR
  2344   00274C  6F83               	movwf	(GreenMove@mR+1)& (0+255),b
  2345   00274E  EC50  F037         	call	_GreenMove	;wreg free
  2346   002752                     
  2347                           ;main.c: 170:                 TMR0H=0;
  2348   002752  0E00               	movlw	0
  2349   002754  6ED4               	movwf	212,c	;volatile
  2350   002756                     
  2351                           ;main.c: 171:                 TMR0L=0;
  2352   002756  0E00               	movlw	0
  2353   002758  6ED3               	movwf	211,c	;volatile
  2354   00275A                     
  2355                           ;main.c: 172:                 WayBack[move_count]=5;
  2356   00275A  0E8C               	movlw	low _WayBack
  2357   00275C  244E               	addwf	_move_count^0,w,c	;volatile
  2358   00275E  6ED9               	movwf	fsr2l,c
  2359   002760  0E02               	movlw	high _WayBack
  2360   002762  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2361   002764  6EDA               	movwf	fsr2h,c
  2362   002766  0E05               	movlw	5
  2363   002768  6EDF               	movwf	indf2,c
  2364                           
  2365                           ;main.c: 173:             }
  2366   00276A  EF45  F014         	goto	l6563
  2367   00276E                     l6527:
  2368                           
  2369                           ; BSR set to: 1
  2370   00276E  0E06               	movlw	6
  2371   002770  199C               	xorwf	main@prev_colour& (0+255),w,b
  2372   002772  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2373   002774  A4D8               	btfss	status,2,c
  2374   002776  EFBF  F013         	goto	u6471
  2375   00277A  EFC1  F013         	goto	u6470
  2376   00277E                     u6471:
  2377   00277E  EFDA  F013         	goto	l6537
  2378   002782                     u6470:
  2379   002782                     
  2380                           ; BSR set to: 1
  2381                           ;main.c: 175:                 LightBlueMove(&motorL, &motorR);
  2382   002782  0EC3               	movlw	low _motorL
  2383   002784  0100               	movlb	0	; () banked
  2384   002786  6F80               	movwf	LightBlueMove@mL& (0+255),b
  2385   002788  0E01               	movlw	high _motorL
  2386   00278A  6F81               	movwf	(LightBlueMove@mL+1)& (0+255),b
  2387   00278C  0EBA               	movlw	low _motorR
  2388   00278E  6F82               	movwf	LightBlueMove@mR& (0+255),b
  2389   002790  0E01               	movlw	high _motorR
  2390   002792  6F83               	movwf	(LightBlueMove@mR+1)& (0+255),b
  2391   002794  EC2F  F033         	call	_LightBlueMove	;wreg free
  2392   002798                     
  2393                           ;main.c: 176:                 TMR0H=0;
  2394   002798  0E00               	movlw	0
  2395   00279A  6ED4               	movwf	212,c	;volatile
  2396   00279C                     
  2397                           ;main.c: 177:                 TMR0L=0;
  2398   00279C  0E00               	movlw	0
  2399   00279E  6ED3               	movwf	211,c	;volatile
  2400   0027A0                     
  2401                           ;main.c: 178:                 WayBack[move_count]=6;
  2402   0027A0  0E8C               	movlw	low _WayBack
  2403   0027A2  244E               	addwf	_move_count^0,w,c	;volatile
  2404   0027A4  6ED9               	movwf	fsr2l,c
  2405   0027A6  0E02               	movlw	high _WayBack
  2406   0027A8  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2407   0027AA  6EDA               	movwf	fsr2h,c
  2408   0027AC  0E06               	movlw	6
  2409   0027AE  6EDF               	movwf	indf2,c
  2410                           
  2411                           ;main.c: 179:             }
  2412   0027B0  EF45  F014         	goto	l6563
  2413   0027B4                     l6537:
  2414                           
  2415                           ; BSR set to: 1
  2416   0027B4  0E07               	movlw	7
  2417   0027B6  199C               	xorwf	main@prev_colour& (0+255),w,b
  2418   0027B8  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2419   0027BA  A4D8               	btfss	status,2,c
  2420   0027BC  EFE2  F013         	goto	u6481
  2421   0027C0  EFE4  F013         	goto	u6480
  2422   0027C4                     u6481:
  2423   0027C4  EFFD  F013         	goto	l6547
  2424   0027C8                     u6480:
  2425   0027C8                     
  2426                           ; BSR set to: 1
  2427                           ;main.c: 181:                 PinkMove(&motorL, &motorR);
  2428   0027C8  0EC3               	movlw	low _motorL
  2429   0027CA  0100               	movlb	0	; () banked
  2430   0027CC  6F80               	movwf	PinkMove@mL& (0+255),b
  2431   0027CE  0E01               	movlw	high _motorL
  2432   0027D0  6F81               	movwf	(PinkMove@mL+1)& (0+255),b
  2433   0027D2  0EBA               	movlw	low _motorR
  2434   0027D4  6F82               	movwf	PinkMove@mR& (0+255),b
  2435   0027D6  0E01               	movlw	high _motorR
  2436   0027D8  6F83               	movwf	(PinkMove@mR+1)& (0+255),b
  2437   0027DA  ECB6  F033         	call	_PinkMove	;wreg free
  2438   0027DE                     
  2439                           ;main.c: 182:                 TMR0H=0;
  2440   0027DE  0E00               	movlw	0
  2441   0027E0  6ED4               	movwf	212,c	;volatile
  2442   0027E2                     
  2443                           ;main.c: 183:                 TMR0L=0;
  2444   0027E2  0E00               	movlw	0
  2445   0027E4  6ED3               	movwf	211,c	;volatile
  2446   0027E6                     
  2447                           ;main.c: 184:                 WayBack[move_count]=7;
  2448   0027E6  0E8C               	movlw	low _WayBack
  2449   0027E8  244E               	addwf	_move_count^0,w,c	;volatile
  2450   0027EA  6ED9               	movwf	fsr2l,c
  2451   0027EC  0E02               	movlw	high _WayBack
  2452   0027EE  204F               	addwfc	(_move_count+1)^0,w,c	;volatile
  2453   0027F0  6EDA               	movwf	fsr2h,c
  2454   0027F2  0E07               	movlw	7
  2455   0027F4  6EDF               	movwf	indf2,c
  2456                           
  2457                           ;main.c: 185:             }
  2458   0027F6  EF45  F014         	goto	l6563
  2459   0027FA                     l6547:
  2460                           
  2461                           ; BSR set to: 1
  2462   0027FA  0E0A               	movlw	10
  2463   0027FC  199C               	xorwf	main@prev_colour& (0+255),w,b
  2464   0027FE  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2465   002800  A4D8               	btfss	status,2,c
  2466   002802  EF05  F014         	goto	u6491
  2467   002806  EF07  F014         	goto	u6490
  2468   00280A                     u6491:
  2469   00280A  EF2D  F014         	goto	l6557
  2470   00280E                     u6490:
  2471   00280E                     
  2472                           ; BSR set to: 1
  2473                           ;main.c: 187:                 lost_count++;
  2474   00280E  4B96               	infsnz	main@lost_count& (0+255),f,b
  2475   002810  2B97               	incf	(main@lost_count+1)& (0+255),f,b
  2476   002812                     
  2477                           ; BSR set to: 1
  2478                           ;main.c: 188:                 if (lost_count==4){
  2479   002812  0E04               	movlw	4
  2480   002814  1996               	xorwf	main@lost_count& (0+255),w,b
  2481   002816  1197               	iorwf	(main@lost_count+1)& (0+255),w,b
  2482   002818  A4D8               	btfss	status,2,c
  2483   00281A  EF11  F014         	goto	u6501
  2484   00281E  EF13  F014         	goto	u6500
  2485   002822                     u6501:
  2486   002822  EF20  F014         	goto	l459
  2487   002826                     u6500:
  2488   002826                     
  2489                           ; BSR set to: 1
  2490                           ;main.c: 189:                     PIE0bits.TMR0IE = 0;
  2491   002826  010E               	movlb	14	; () banked
  2492   002828  9B29               	bcf	41,5,b	;volatile
  2493   00282A                     
  2494                           ; BSR set to: 14
  2495                           ;main.c: 190:                     go_Home(WayBack, Time_forward);
  2496   00282A  0E8C               	movlw	low _WayBack
  2497   00282C  0100               	movlb	0	; () banked
  2498   00282E  6F84               	movwf	go_Home@WayBack& (0+255),b
  2499   002830  0E02               	movlw	high _WayBack
  2500   002832  6F85               	movwf	(go_Home@WayBack+1)& (0+255),b
  2501   002834  0E00               	movlw	low _Time_forward
  2502   002836  6F86               	movwf	go_Home@Time_forward& (0+255),b
  2503   002838  0E03               	movlw	high _Time_forward
  2504   00283A  6F87               	movwf	(go_Home@Time_forward+1)& (0+255),b
  2505   00283C  ECC4  F01D         	call	_go_Home	;wreg free
  2506   002840                     l459:
  2507                           
  2508                           ;main.c: 192:                 RetryMove(&motorL, &motorR);
  2509   002840  0EC3               	movlw	low _motorL
  2510   002842  0100               	movlb	0	; () banked
  2511   002844  6F7A               	movwf	RetryMove@mL& (0+255),b
  2512   002846  0E01               	movlw	high _motorL
  2513   002848  6F7B               	movwf	(RetryMove@mL+1)& (0+255),b
  2514   00284A  0EBA               	movlw	low _motorR
  2515   00284C  6F7C               	movwf	RetryMove@mR& (0+255),b
  2516   00284E  0E01               	movlw	high _motorR
  2517   002850  6F7D               	movwf	(RetryMove@mR+1)& (0+255),b
  2518   002852  EC1E  F030         	call	_RetryMove	;wreg free
  2519                           
  2520                           ;main.c: 193:             }
  2521   002856  EF45  F014         	goto	l6563
  2522   00285A                     l6557:
  2523                           
  2524                           ; BSR set to: 1
  2525   00285A  519C               	movf	main@prev_colour& (0+255),w,b
  2526   00285C  119D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2527   00285E  A4D8               	btfss	status,2,c
  2528   002860  EF34  F014         	goto	u6511
  2529   002864  EF36  F014         	goto	u6510
  2530   002868                     u6511:
  2531   002868  EF45  F014         	goto	l455
  2532   00286C                     u6510:
  2533   00286C                     
  2534                           ; BSR set to: 1
  2535                           ;main.c: 195:                 PIE0bits.TMR0IE = 0;
  2536   00286C  010E               	movlb	14	; () banked
  2537   00286E  9B29               	bcf	41,5,b	;volatile
  2538   002870                     
  2539                           ; BSR set to: 14
  2540                           ;main.c: 196:                 go_Home(WayBack, Time_forward);
  2541   002870  0E8C               	movlw	low _WayBack
  2542   002872  0100               	movlb	0	; () banked
  2543   002874  6F84               	movwf	go_Home@WayBack& (0+255),b
  2544   002876  0E02               	movlw	high _WayBack
  2545   002878  6F85               	movwf	(go_Home@WayBack+1)& (0+255),b
  2546   00287A  0E00               	movlw	low _Time_forward
  2547   00287C  6F86               	movwf	go_Home@Time_forward& (0+255),b
  2548   00287E  0E03               	movlw	high _Time_forward
  2549   002880  6F87               	movwf	(go_Home@Time_forward+1)& (0+255),b
  2550   002882  ECC4  F01D         	call	_go_Home	;wreg free
  2551   002886  EF45  F014         	goto	l6563
  2552   00288A                     l455:
  2553   00288A                     l6563:
  2554                           
  2555                           ;main.c: 99:     while (run_flag)
  2556   00288A  0101               	movlb	1	; () banked
  2557   00288C  51D4               	movf	_run_flag& (0+255),w,b
  2558   00288E  11D5               	iorwf	(_run_flag+1)& (0+255),w,b
  2559   002890  A4D8               	btfss	status,2,c
  2560   002892  EF4D  F014         	goto	u6521
  2561   002896  EF4F  F014         	goto	u6520
  2562   00289A                     u6521:
  2563   00289A  EF34  F012         	goto	l6437
  2564   00289E                     u6520:
  2565   00289E                     
  2566                           ; BSR set to: 1
  2567   00289E  EF3A  F000         	goto	start
  2568   0028A2                     __end_of_main:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _turnCalibration *****************
  2572 ;; Defined at:
  2573 ;;		line 357 in file "dc_motor.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  2576 ;;		 -> motorL(9), 
  2577 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  2578 ;;		 -> motorR(9), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;Total ram usage:        6 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 11
  2597 ;; This function calls:
  2598 ;;		_turnLeft45
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text1
  2605   0045FC                     __ptext1:
  2606                           	callstack 0
  2607   0045FC                     _turnCalibration:
  2608                           	callstack 19
  2609   0045FC                     
  2610                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2611   0045FC  807E               	bsf	126,0,c	;volatile
  2612   0045FE                     
  2613                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2614   0045FE  0E52               	movlw	82
  2615   004600  0100               	movlb	0	; () banked
  2616   004602  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2617   004604  0E2B               	movlw	43
  2618   004606  6F84               	movwf	??_turnCalibration& (0+255),b
  2619   004608  0E00               	movlw	0
  2620   00460A                     u6577:
  2621   00460A  2EE8               	decfsz	wreg,f,c
  2622   00460C  D7FE               	bra	u6577
  2623   00460E  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2624   004610  D7FC               	bra	u6577
  2625   004612  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2626   004614  D7FA               	bra	u6577
  2627   004616  F000               	nop	
  2628                           
  2629                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2630   004618  EFCD  F023         	goto	l642
  2631   00461C                     l643:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2635   00461C  867C               	bsf	124,3,c	;volatile
  2636   00461E                     
  2637                           ; BSR set to: 0
  2638                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2639   00461E  0EC3               	movlw	low _motorL
  2640   004620  6F7A               	movwf	turnLeft45@mL& (0+255),b
  2641   004622  0E01               	movlw	high _motorL
  2642   004624  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  2643   004626  0EBA               	movlw	low _motorR
  2644   004628  6F7C               	movwf	turnLeft45@mR& (0+255),b
  2645   00462A  0E01               	movlw	high _motorR
  2646   00462C  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  2647   00462E  ECD7  F035         	call	_turnLeft45	;wreg free
  2648                           
  2649                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2650   004632  0EC3               	movlw	low _motorL
  2651   004634  0100               	movlb	0	; () banked
  2652   004636  6F7A               	movwf	turnLeft45@mL& (0+255),b
  2653   004638  0E01               	movlw	high _motorL
  2654   00463A  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  2655   00463C  0EBA               	movlw	low _motorR
  2656   00463E  6F7C               	movwf	turnLeft45@mR& (0+255),b
  2657   004640  0E01               	movlw	high _motorR
  2658   004642  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  2659   004644  ECD7  F035         	call	_turnLeft45	;wreg free
  2660                           
  2661                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2662   004648  0EC3               	movlw	low _motorL
  2663   00464A  0100               	movlb	0	; () banked
  2664   00464C  6F7A               	movwf	turnLeft45@mL& (0+255),b
  2665   00464E  0E01               	movlw	high _motorL
  2666   004650  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  2667   004652  0EBA               	movlw	low _motorR
  2668   004654  6F7C               	movwf	turnLeft45@mR& (0+255),b
  2669   004656  0E01               	movlw	high _motorR
  2670   004658  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  2671   00465A  ECD7  F035         	call	_turnLeft45	;wreg free
  2672                           
  2673                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2674   00465E  0EC3               	movlw	low _motorL
  2675   004660  0100               	movlb	0	; () banked
  2676   004662  6F7A               	movwf	turnLeft45@mL& (0+255),b
  2677   004664  0E01               	movlw	high _motorL
  2678   004666  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  2679   004668  0EBA               	movlw	low _motorR
  2680   00466A  6F7C               	movwf	turnLeft45@mR& (0+255),b
  2681   00466C  0E01               	movlw	high _motorR
  2682   00466E  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  2683   004670  ECD7  F035         	call	_turnLeft45	;wreg free
  2684                           
  2685                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2686   004674  EFB1  F023         	goto	l6207
  2687   004678                     l645:
  2688                           
  2689                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2690   004678  887C               	bsf	124,4,c	;volatile
  2691   00467A                     
  2692                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2693   00467A  0EA3               	movlw	163
  2694   00467C  0100               	movlb	0	; () banked
  2695   00467E  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2696   004680  0E57               	movlw	87
  2697   004682  6F84               	movwf	??_turnCalibration& (0+255),b
  2698   004684  0E02               	movlw	2
  2699   004686                     u6587:
  2700   004686  2EE8               	decfsz	wreg,f,c
  2701   004688  D7FE               	bra	u6587
  2702   00468A  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2703   00468C  D7FC               	bra	u6587
  2704   00468E  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2705   004690  D7FA               	bra	u6587
  2706   004692  F000               	nop	
  2707                           
  2708                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2709   004694  A48E               	btfss	142,2,c	;volatile
  2710   004696  EF4F  F023         	goto	u6171
  2711   00469A  EF52  F023         	goto	u6170
  2712   00469E                     u6171:
  2713   00469E  0E01               	movlw	1
  2714   0046A0  EF53  F023         	goto	u6172
  2715   0046A4                     u6170:
  2716   0046A4  0E00               	movlw	0
  2717   0046A6                     u6172:
  2718   0046A6  0100               	movlb	0	; () banked
  2719   0046A8  6F84               	movwf	??_turnCalibration& (0+255),b
  2720   0046AA  A68E               	btfss	142,3,c	;volatile
  2721   0046AC  EF5A  F023         	goto	u6181
  2722   0046B0  EF5D  F023         	goto	u6180
  2723   0046B4                     u6181:
  2724   0046B4  0E01               	movlw	1
  2725   0046B6  EF5E  F023         	goto	u6182
  2726   0046BA                     u6180:
  2727   0046BA  0E00               	movlw	0
  2728   0046BC                     u6182:
  2729   0046BC  1584               	andwf	??_turnCalibration& (0+255),w,b
  2730   0046BE  A0E8               	btfss	wreg,0,c
  2731   0046C0  EF64  F023         	goto	u6191
  2732   0046C4  EF66  F023         	goto	u6190
  2733   0046C8                     u6191:
  2734   0046C8  EF79  F023         	goto	l646
  2735   0046CC                     u6190:
  2736   0046CC                     
  2737                           ; BSR set to: 0
  2738                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2739   0046CC  8680               	bsf	128,3,c	;volatile
  2740                           
  2741                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2742   0046CE  8E7C               	bsf	124,7,c	;volatile
  2743   0046D0                     
  2744                           ; BSR set to: 0
  2745                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2746   0046D0  0E52               	movlw	82
  2747   0046D2  0100               	movlb	0	; () banked
  2748   0046D4  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2749   0046D6  0E2B               	movlw	43
  2750   0046D8  6F84               	movwf	??_turnCalibration& (0+255),b
  2751   0046DA  0E00               	movlw	0
  2752   0046DC                     u6597:
  2753   0046DC  2EE8               	decfsz	wreg,f,c
  2754   0046DE  D7FE               	bra	u6597
  2755   0046E0  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2756   0046E2  D7FC               	bra	u6597
  2757   0046E4  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2758   0046E6  D7FA               	bra	u6597
  2759   0046E8  F000               	nop	
  2760   0046EA                     
  2761                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2762   0046EA  9680               	bcf	128,3,c	;volatile
  2763   0046EC                     
  2764                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2765   0046EC  9E7C               	bcf	124,7,c	;volatile
  2766                           
  2767                           ;dc_motor.c: 380:             }
  2768   0046EE  EFB1  F023         	goto	l6207
  2769   0046F2                     l646:
  2770                           
  2771                           ; BSR set to: 0
  2772   0046F2  B68E               	btfsc	142,3,c	;volatile
  2773   0046F4  EF7E  F023         	goto	u6201
  2774   0046F8  EF80  F023         	goto	u6200
  2775   0046FC                     u6201:
  2776   0046FC  EF95  F023         	goto	l648
  2777   004700                     u6200:
  2778   004700                     
  2779                           ; BSR set to: 0
  2780                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2781   004700  0E0A               	movlw	10
  2782   004702  2656               	addwf	_Turn45Delay^0,f,c
  2783   004704  0E00               	movlw	0
  2784   004706  2257               	addwfc	(_Turn45Delay+1)^0,f,c
  2785   004708                     
  2786                           ; BSR set to: 0
  2787                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2788   004708  8680               	bsf	128,3,c	;volatile
  2789   00470A                     
  2790                           ; BSR set to: 0
  2791                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2792   00470A  0E52               	movlw	82
  2793   00470C  0100               	movlb	0	; () banked
  2794   00470E  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2795   004710  0E2B               	movlw	43
  2796   004712  6F84               	movwf	??_turnCalibration& (0+255),b
  2797   004714  0E00               	movlw	0
  2798   004716                     u6607:
  2799   004716  2EE8               	decfsz	wreg,f,c
  2800   004718  D7FE               	bra	u6607
  2801   00471A  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2802   00471C  D7FC               	bra	u6607
  2803   00471E  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2804   004720  D7FA               	bra	u6607
  2805   004722  F000               	nop	
  2806   004724                     
  2807                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2808   004724  9680               	bcf	128,3,c	;volatile
  2809                           
  2810                           ;dc_motor.c: 387:             }
  2811   004726  EFB1  F023         	goto	l6207
  2812   00472A                     l648:
  2813                           
  2814                           ; BSR set to: 0
  2815   00472A  B48E               	btfsc	142,2,c	;volatile
  2816   00472C  EF9A  F023         	goto	u6211
  2817   004730  EF9C  F023         	goto	u6210
  2818   004734                     u6211:
  2819   004734  EFB1  F023         	goto	l647
  2820   004738                     u6210:
  2821   004738                     
  2822                           ; BSR set to: 0
  2823                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2824   004738  0EF6               	movlw	246
  2825   00473A  2656               	addwf	_Turn45Delay^0,f,c
  2826   00473C  0EFF               	movlw	255
  2827   00473E  2257               	addwfc	(_Turn45Delay+1)^0,f,c
  2828   004740                     
  2829                           ; BSR set to: 0
  2830                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2831   004740  8E7C               	bsf	124,7,c	;volatile
  2832   004742                     
  2833                           ; BSR set to: 0
  2834                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2835   004742  0E52               	movlw	82
  2836   004744  0100               	movlb	0	; () banked
  2837   004746  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2838   004748  0E2B               	movlw	43
  2839   00474A  6F84               	movwf	??_turnCalibration& (0+255),b
  2840   00474C  0E00               	movlw	0
  2841   00474E                     u6617:
  2842   00474E  2EE8               	decfsz	wreg,f,c
  2843   004750  D7FE               	bra	u6617
  2844   004752  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2845   004754  D7FC               	bra	u6617
  2846   004756  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2847   004758  D7FA               	bra	u6617
  2848   00475A  F000               	nop	
  2849   00475C                     
  2850                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2851   00475C  9E7C               	bcf	124,7,c	;volatile
  2852   00475E  EFB1  F023         	goto	l6207
  2853   004762                     l647:
  2854   004762                     l6207:
  2855                           
  2856                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2857   004762  A48E               	btfss	142,2,c	;volatile
  2858   004764  EFB6  F023         	goto	u6221
  2859   004768  EFB8  F023         	goto	u6220
  2860   00476C                     u6221:
  2861   00476C  EFBF  F023         	goto	l653
  2862   004770                     u6220:
  2863   004770  B68E               	btfsc	142,3,c	;volatile
  2864   004772  EFBD  F023         	goto	u6231
  2865   004776  EFBF  F023         	goto	u6230
  2866   00477A                     u6231:
  2867   00477A  EF3C  F023         	goto	l645
  2868   00477E                     u6230:
  2869   00477E                     l653:
  2870                           
  2871                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2872   00477E  987C               	bcf	124,4,c	;volatile
  2873   004780                     
  2874                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2875   004780  0EA3               	movlw	163
  2876   004782  0100               	movlb	0	; () banked
  2877   004784  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2878   004786  0E57               	movlw	87
  2879   004788  6F84               	movwf	??_turnCalibration& (0+255),b
  2880   00478A  0E02               	movlw	2
  2881   00478C                     u6627:
  2882   00478C  2EE8               	decfsz	wreg,f,c
  2883   00478E  D7FE               	bra	u6627
  2884   004790  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2885   004792  D7FC               	bra	u6627
  2886   004794  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2887   004796  D7FA               	bra	u6627
  2888   004798  F000               	nop	
  2889   00479A                     l642:
  2890                           
  2891                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2892   00479A  A68E               	btfss	142,3,c	;volatile
  2893   00479C  EFD2  F023         	goto	u6241
  2894   0047A0  EFD5  F023         	goto	u6240
  2895   0047A4                     u6241:
  2896   0047A4  0E01               	movlw	1
  2897   0047A6  EFD6  F023         	goto	u6242
  2898   0047AA                     u6240:
  2899   0047AA  0E00               	movlw	0
  2900   0047AC                     u6242:
  2901   0047AC  0100               	movlb	0	; () banked
  2902   0047AE  6F84               	movwf	??_turnCalibration& (0+255),b
  2903   0047B0  A48E               	btfss	142,2,c	;volatile
  2904   0047B2  EFDD  F023         	goto	u6251
  2905   0047B6  EFE0  F023         	goto	u6250
  2906   0047BA                     u6251:
  2907   0047BA  0E01               	movlw	1
  2908   0047BC  EFE1  F023         	goto	u6252
  2909   0047C0                     u6250:
  2910   0047C0  0E00               	movlw	0
  2911   0047C2                     u6252:
  2912   0047C2  1584               	andwf	??_turnCalibration& (0+255),w,b
  2913   0047C4  A0E8               	btfss	wreg,0,c
  2914   0047C6  EFE7  F023         	goto	u6261
  2915   0047CA  EFE9  F023         	goto	u6260
  2916   0047CE                     u6261:
  2917   0047CE  EF0E  F023         	goto	l643
  2918   0047D2                     u6260:
  2919   0047D2                     
  2920                           ; BSR set to: 0
  2921                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2922   0047D2  967C               	bcf	124,3,c	;volatile
  2923   0047D4                     
  2924                           ; BSR set to: 0
  2925                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2926   0047D4  0EA3               	movlw	163
  2927   0047D6  0100               	movlb	0	; () banked
  2928   0047D8  6F85               	movwf	(??_turnCalibration+1)& (0+255),b
  2929   0047DA  0E57               	movlw	87
  2930   0047DC  6F84               	movwf	??_turnCalibration& (0+255),b
  2931   0047DE  0E02               	movlw	2
  2932   0047E0                     u6637:
  2933   0047E0  2EE8               	decfsz	wreg,f,c
  2934   0047E2  D7FE               	bra	u6637
  2935   0047E4  2F84               	decfsz	??_turnCalibration& (0+255),f,b
  2936   0047E6  D7FC               	bra	u6637
  2937   0047E8  2F85               	decfsz	(??_turnCalibration+1)& (0+255),f,b
  2938   0047EA  D7FA               	bra	u6637
  2939   0047EC  F000               	nop	
  2940   0047EE  0012               	return		;funcret
  2941   0047F0                     __end_of_turnCalibration:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _sprintf *****************
  2945 ;; Defined at:
  2946 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  s               2   17[BANK1 ] PTR unsigned char 
  2949 ;;		 -> main@buf(100), 
  2950 ;;  fmt             2   19[BANK1 ] PTR const unsigned char 
  2951 ;;		 -> STR_1(45), 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  f              11   39[BANK1 ] struct _IO_FILE
  2954 ;;  ap              2   37[BANK1 ] PTR void [1]
  2955 ;;		 -> ?_sprintf(2), 
  2956 ;;  ret             2    0        int 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2   17[BANK1 ] int 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:       33 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 14
  2973 ;; This function calls:
  2974 ;;		_vfprintf
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text2
  2981   0069C6                     __ptext2:
  2982                           	callstack 0
  2983   0069C6                     _sprintf:
  2984                           	callstack 16
  2985   0069C6  0E15               	movlw	low (?_sprintf+4)
  2986   0069C8  0101               	movlb	1	; () banked
  2987   0069CA  6F25               	movwf	sprintf@ap& (0+255),b
  2988   0069CC  0E01               	movlw	high (?_sprintf+4)
  2989   0069CE  6F26               	movwf	(sprintf@ap+1)& (0+255),b
  2990   0069D0  C111  F127         	movff	sprintf@s,sprintf@f
  2991   0069D4  C112  F128         	movff	sprintf@s+1,sprintf@f+1
  2992   0069D8                     
  2993                           ; BSR set to: 1
  2994   0069D8  0E00               	movlw	0
  2995   0069DA  6F2B               	movwf	(sprintf@f+4)& (0+255),b
  2996   0069DC  0E00               	movlw	0
  2997   0069DE  6F2A               	movwf	(sprintf@f+3)& (0+255),b
  2998   0069E0                     
  2999                           ; BSR set to: 1
  3000   0069E0  0E00               	movlw	0
  3001   0069E2  6F31               	movwf	(sprintf@f+10)& (0+255),b
  3002   0069E4  0E00               	movlw	0
  3003   0069E6  6F30               	movwf	(sprintf@f+9)& (0+255),b
  3004   0069E8                     
  3005                           ; BSR set to: 1
  3006   0069E8  0E27               	movlw	low sprintf@f
  3007   0069EA  6F0B               	movwf	vfprintf@fp& (0+255),b
  3008   0069EC  0E01               	movlw	high sprintf@f
  3009   0069EE  6F0C               	movwf	(vfprintf@fp+1)& (0+255),b
  3010   0069F0  C113  F10D         	movff	sprintf@fmt,vfprintf@fmt
  3011   0069F4  C114  F10E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3012   0069F8  0E25               	movlw	low sprintf@ap
  3013   0069FA  6F0F               	movwf	vfprintf@ap& (0+255),b
  3014   0069FC  0E01               	movlw	high sprintf@ap
  3015   0069FE  6F10               	movwf	(vfprintf@ap+1)& (0+255),b
  3016   006A00  EC10  F034         	call	_vfprintf	;wreg free
  3017   006A04  0101               	movlb	1	; () banked
  3018   006A06  512A               	movf	(sprintf@f+3)& (0+255),w,b
  3019   006A08  2511               	addwf	sprintf@s& (0+255),w,b
  3020   006A0A  6ED9               	movwf	fsr2l,c
  3021   006A0C  512B               	movf	(sprintf@f+4)& (0+255),w,b
  3022   006A0E  2112               	addwfc	(sprintf@s+1)& (0+255),w,b
  3023   006A10  6EDA               	movwf	fsr2h,c
  3024   006A12  0E00               	movlw	0
  3025   006A14  6EDF               	movwf	indf2,c
  3026   006A16                     
  3027                           ; BSR set to: 1
  3028   006A16  0012               	return		;funcret
  3029   006A18                     __end_of_sprintf:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _vfprintf *****************
  3033 ;; Defined at:
  3034 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  fp              2   11[BANK1 ] PTR struct _IO_FILE
  3037 ;;		 -> sprintf@f(11), 
  3038 ;;  fmt             2   13[BANK1 ] PTR const unsigned char 
  3039 ;;		 -> STR_1(45), 
  3040 ;;  ap              2   15[BANK1 ] PTR PTR void 
  3041 ;;		 -> sprintf@ap(2), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  cfmt            2  155[BANK0 ] PTR unsigned char 
  3044 ;;		 -> STR_1(45), 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2   11[BANK1 ] int 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3054 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;Total ram usage:        8 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 13
  3061 ;; This function calls:
  3062 ;;		_vfpfcnvrt
  3063 ;; This function is called by:
  3064 ;;		_sprintf
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text3
  3069   006820                     __ptext3:
  3070                           	callstack 0
  3071   006820                     _vfprintf:
  3072                           	callstack 16
  3073   006820                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3075   006820  C10D  F0FB         	movff	vfprintf@fmt,vfprintf@cfmt
  3076   006824  C10E  F0FC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3079   006828  EF25  F034         	goto	l5799
  3080   00682C                     l5797:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3083   00682C  C10B  F0F3         	movff	vfprintf@fp,vfpfcnvrt@fp
  3084   006830  C10C  F0F4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3085   006834  0EFB               	movlw	low vfprintf@cfmt
  3086   006836  0100               	movlb	0	; () banked
  3087   006838  6FF5               	movwf	vfpfcnvrt@fmt& (0+255),b
  3088   00683A  0E00               	movlw	high vfprintf@cfmt
  3089   00683C  6FF6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3090   00683E  C10F  F0F7         	movff	vfprintf@ap,vfpfcnvrt@ap
  3091   006842  C110  F0F8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3092   006846  EC34  F01C         	call	_vfpfcnvrt	;wreg free
  3093   00684A                     l5799:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3096   00684A  C0FB  FFF6         	movff	vfprintf@cfmt,tblptrl
  3097   00684E  C0FC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3098   006852                     	if	0	;tblptru may be non-zero
  3099   006852                     	endif
  3100   006852                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3101   006852  0E00               	movlw	low (__mediumconst shr (0+16))
  3102   006854  6EF8               	movwf	tblptru,c
  3103   006856                     	endif
  3104   006856  0008               	tblrd		*
  3105   006858  50F5               	movf	tablat,w,c
  3106   00685A  0900               	iorlw	0
  3107   00685C  A4D8               	btfss	status,2,c
  3108   00685E  EF33  F034         	goto	u5711
  3109   006862  EF35  F034         	goto	u5710
  3110   006866                     u5711:
  3111   006866  EF16  F034         	goto	l5797
  3112   00686A                     u5710:
  3113   00686A                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3115   00686A  0E00               	movlw	0
  3116   00686C  0101               	movlb	1	; () banked
  3117   00686E  6F0C               	movwf	(?_vfprintf+1)& (0+255),b
  3118   006870  0E00               	movlw	0
  3119   006872  6F0B               	movwf	?_vfprintf& (0+255),b
  3120   006874                     
  3121                           ; BSR set to: 1
  3122   006874  0012               	return		;funcret
  3123   006876                     __end_of_vfprintf:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function _vfpfcnvrt *****************
  3127 ;; Defined at:
  3128 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  fp              2  147[BANK0 ] PTR struct _IO_FILE
  3131 ;;		 -> sprintf@f(11), 
  3132 ;;  fmt             2  149[BANK0 ] PTR PTR unsigned char 
  3133 ;;		 -> vfprintf@cfmt(2), 
  3134 ;;  ap              2  151[BANK0 ] PTR PTR void 
  3135 ;;		 -> sprintf@ap(2), 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  convarg         8    0[BANK1 ] struct .
  3138 ;;  cp              2    9[BANK1 ] PTR unsigned char 
  3139 ;;		 -> STR_1(45), 
  3140 ;;  i               2    0        int 
  3141 ;;  done            2    0        int 
  3142 ;;  c               1    8[BANK1 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3152 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Totals:         0       8      11       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;Total ram usage:       19 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 12
  3159 ;; This function calls:
  3160 ;;		_dtoa
  3161 ;;		_efgtoa
  3162 ;;		_fputc
  3163 ;; This function is called by:
  3164 ;;		_vfprintf
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text4
  3169   003868                     __ptext4:
  3170                           	callstack 0
  3171   003868                     _vfpfcnvrt:
  3172                           	callstack 16
  3173   003868                     
  3174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3175   003868  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3176   00386C  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3177   003870  CFDE FFF6          	movff	postinc2,tblptrl
  3178   003874  CFDD FFF7          	movff	postdec2,tblptrh
  3179   003878                     	if	0	;tblptru may be non-zero
  3180   003878                     	endif
  3181   003878                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3182   003878  0E00               	movlw	low (__mediumconst shr (0+16))
  3183   00387A  6EF8               	movwf	tblptru,c
  3184   00387C                     	endif
  3185   00387C  0008               	tblrd		*
  3186   00387E  50F5               	movf	tablat,w,c
  3187   003880  0A25               	xorlw	37
  3188   003882  A4D8               	btfss	status,2,c
  3189   003884  EF46  F01C         	goto	u5481
  3190   003888  EF48  F01C         	goto	u5480
  3191   00388C                     u5481:
  3192   00388C  EFAC  F01D         	goto	l5571
  3193   003890                     u5480:
  3194   003890                     
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3196   003890  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3197   003894  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3198   003898  2ADE               	incf	postinc2,f,c
  3199   00389A  0E00               	movlw	0
  3200   00389C  22DD               	addwfc	postdec2,f,c
  3201   00389E                     
  3202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3203   00389E  0E00               	movlw	0
  3204   0038A0  0101               	movlb	1	; () banked
  3205   0038A2  6FAB               	movwf	(_width+1)& (0+255),b
  3206   0038A4  0E00               	movlw	0
  3207   0038A6  6FAA               	movwf	_width& (0+255),b
  3208   0038A8  C1AA  F0FF         	movff	_width,_flags
  3209   0038AC                     
  3210                           ; BSR set to: 1
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3212   0038AC  69AC               	setf	_prec& (0+255),b
  3213   0038AE  69AD               	setf	(_prec+1)& (0+255),b
  3214   0038B0                     
  3215                           ; BSR set to: 1
  3216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3217   0038B0  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3218   0038B4  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3219   0038B8  CFDE F109          	movff	postinc2,vfpfcnvrt@cp
  3220   0038BC  CFDD F10A          	movff	postdec2,vfpfcnvrt@cp+1
  3221   0038C0                     
  3222                           ; BSR set to: 1
  3223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3224   0038C0  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3225   0038C4  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3226   0038C8                     	if	0	;tblptru may be non-zero
  3227   0038C8                     	endif
  3228   0038C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3229   0038C8  0E00               	movlw	low (__mediumconst shr (0+16))
  3230   0038CA  6EF8               	movwf	tblptru,c
  3231   0038CC                     	endif
  3232   0038CC  0008               	tblrd		*
  3233   0038CE  50F5               	movf	tablat,w,c
  3234   0038D0  0A64               	xorlw	100
  3235   0038D2  B4D8               	btfsc	status,2,c
  3236   0038D4  EF6E  F01C         	goto	u5491
  3237   0038D8  EF70  F01C         	goto	u5490
  3238   0038DC                     u5491:
  3239   0038DC  EF80  F01C         	goto	l5527
  3240   0038E0                     u5490:
  3241   0038E0                     
  3242                           ; BSR set to: 1
  3243   0038E0  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3244   0038E4  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3245   0038E8                     	if	0	;tblptru may be non-zero
  3246   0038E8                     	endif
  3247   0038E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3248   0038E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3249   0038EA  6EF8               	movwf	tblptru,c
  3250   0038EC                     	endif
  3251   0038EC  0008               	tblrd		*
  3252   0038EE  50F5               	movf	tablat,w,c
  3253   0038F0  0A69               	xorlw	105
  3254   0038F2  A4D8               	btfss	status,2,c
  3255   0038F4  EF7E  F01C         	goto	u5501
  3256   0038F8  EF80  F01C         	goto	u5500
  3257   0038FC                     u5501:
  3258   0038FC  EFC6  F01C         	goto	l5533
  3259   003900                     u5500:
  3260   003900                     l5527:
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3264   003900  C0F7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3265   003904  C0F8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3266   003908  CFDF F0F9          	movff	indf2,??_vfpfcnvrt
  3267   00390C  0E02               	movlw	2
  3268   00390E  26DE               	addwf	postinc2,f,c
  3269   003910  CFDF F0FA          	movff	indf2,??_vfpfcnvrt+1
  3270   003914  0E00               	movlw	0
  3271   003916  22DD               	addwfc	postdec2,f,c
  3272   003918  C0F9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3273   00391C  C0FA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3274   003920  CFDE F100          	movff	postinc2,vfpfcnvrt@convarg
  3275   003924  CFDD F101          	movff	postdec2,vfpfcnvrt@convarg+1
  3276   003928  0E00               	movlw	0
  3277   00392A  BF01               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3278   00392C  0EFF               	movlw	-1
  3279   00392E  6F02               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3280   003930  6F03               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3281   003932  6F04               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3282   003934  6F05               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3283   003936  6F06               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3284   003938  6F07               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3287   00393A  0E01               	movlw	1
  3288   00393C  2509               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3289   00393E  0100               	movlb	0	; () banked
  3290   003940  6FF9               	movwf	??_vfpfcnvrt& (0+255),b
  3291   003942  0E00               	movlw	0
  3292   003944  0101               	movlb	1	; () banked
  3293   003946  210A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3294   003948  0100               	movlb	0	; () banked
  3295   00394A  6FFA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3296   00394C  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3297   003950  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3298   003954  C0F9  FFDE         	movff	??_vfpfcnvrt,postinc2
  3299   003958  C0FA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3300   00395C                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3303   00395C  C0F3  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  3304   003960  C0F4  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3305   003964  C100  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  3306   003968  C101  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3307   00396C  C102  F07F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3308   003970  C103  F080         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3309   003974  C104  F081         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3310   003978  C105  F082         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3311   00397C  C106  F083         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3312   003980  C107  F084         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3313   003984  ECAF  F020         	call	_dtoa	;wreg free
  3314   003988  EFC3  F01D         	goto	l1538
  3315   00398C                     l5533:
  3316                           
  3317                           ; BSR set to: 1
  3318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3319   00398C  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3320   003990  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3321   003994  CFDE F109          	movff	postinc2,vfpfcnvrt@cp
  3322   003998  CFDD F10A          	movff	postdec2,vfpfcnvrt@cp+1
  3323   00399C                     
  3324                           ; BSR set to: 1
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3326   00399C  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3327   0039A0  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3328   0039A4                     	if	0	;tblptru may be non-zero
  3329   0039A4                     	endif
  3330   0039A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3331   0039A4  0E00               	movlw	low (__mediumconst shr (0+16))
  3332   0039A6  6EF8               	movwf	tblptru,c
  3333   0039A8                     	endif
  3334   0039A8  0008               	tblrd		*
  3335   0039AA  CFF5 F108          	movff	tablat,vfpfcnvrt@c
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3338   0039AE  EFE8  F01C         	goto	l5545
  3339   0039B2                     l5537:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3343   0039B2  0101               	movlb	1	; () banked
  3344   0039B4  4B09               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3345   0039B6  2B0A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3348   0039B8  EF02  F01D         	goto	l5547
  3349   0039BC                     l5539:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3353   0039BC  0E6C               	movlw	108
  3354   0039BE  0101               	movlb	1	; () banked
  3355   0039C0  6F08               	movwf	vfpfcnvrt@c& (0+255),b
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3358   0039C2  EF02  F01D         	goto	l5547
  3359   0039C6                     l5541:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3363   0039C6  0E00               	movlw	0
  3364   0039C8  0101               	movlb	1	; () banked
  3365   0039CA  6F08               	movwf	vfpfcnvrt@c& (0+255),b
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3368   0039CC  EF02  F01D         	goto	l5547
  3369   0039D0                     l5545:
  3370                           
  3371                           ; BSR set to: 1
  3372   0039D0  5108               	movf	vfpfcnvrt@c& (0+255),w,b
  3373   0039D2  0100               	movlb	0	; () banked
  3374   0039D4  6FF9               	movwf	??_vfpfcnvrt& (0+255),b
  3375   0039D6  6BFA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3376                           
  3377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 1, Range of values is 0 to 0
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            4     3 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384   0039D8  51FA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3385   0039DA  0A00               	xorlw	0	; case 0
  3386   0039DC  B4D8               	btfsc	status,2,c
  3387   0039DE  EFF3  F01C         	goto	l6663
  3388   0039E2  EFE3  F01C         	goto	l5541
  3389   0039E6                     l6663:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 3, Range of values is 76 to 108
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte           10     6 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398   0039E6  51F9               	movf	??_vfpfcnvrt& (0+255),w,b
  3399   0039E8  0A4C               	xorlw	76	; case 76
  3400   0039EA  B4D8               	btfsc	status,2,c
  3401   0039EC  EFD9  F01C         	goto	l5537
  3402   0039F0  0A2A               	xorlw	42	; case 102
  3403   0039F2  B4D8               	btfsc	status,2,c
  3404   0039F4  EFDE  F01C         	goto	l5539
  3405   0039F8  0A0A               	xorlw	10	; case 108
  3406   0039FA  B4D8               	btfsc	status,2,c
  3407   0039FC  EFD9  F01C         	goto	l5537
  3408   003A00  EFE3  F01C         	goto	l5541
  3409   003A04                     l5547:
  3410                           
  3411                           ; BSR set to: 1
  3412   003A04  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3413   003A08  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3414   003A0C                     	if	0	;tblptru may be non-zero
  3415   003A0C                     	endif
  3416   003A0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3417   003A0C  0E00               	movlw	low (__mediumconst shr (0+16))
  3418   003A0E  6EF8               	movwf	tblptru,c
  3419   003A10                     	endif
  3420   003A10  0008               	tblrd		*
  3421   003A12  50F5               	movf	tablat,w,c
  3422   003A14  0A66               	xorlw	102
  3423   003A16  A4D8               	btfss	status,2,c
  3424   003A18  EF10  F01D         	goto	u5511
  3425   003A1C  EF12  F01D         	goto	u5510
  3426   003A20                     u5511:
  3427   003A20  EFA3  F01D         	goto	l5567
  3428   003A24                     u5510:
  3429   003A24  EF48  F01D         	goto	l5555
  3430   003A28                     l5549:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3434   003A28  C0F7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3435   003A2C  C0F8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3436   003A30  CFDF F0F9          	movff	indf2,??_vfpfcnvrt
  3437   003A34  0E04               	movlw	4
  3438   003A36  26DE               	addwf	postinc2,f,c
  3439   003A38  CFDF F0FA          	movff	indf2,??_vfpfcnvrt+1
  3440   003A3C  0E00               	movlw	0
  3441   003A3E  22DD               	addwfc	postdec2,f,c
  3442   003A40  C0F9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3443   003A44  C0FA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3444   003A48  CFDE F100          	movff	postinc2,vfpfcnvrt@convarg
  3445   003A4C  CFDE F101          	movff	postinc2,vfpfcnvrt@convarg+1
  3446   003A50  CFDE F102          	movff	postinc2,vfpfcnvrt@convarg+2
  3447   003A54  CFDE F103          	movff	postinc2,vfpfcnvrt@convarg+3
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3450   003A58  EF5E  F01D         	goto	l5557
  3451   003A5C                     l5551:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3455   003A5C  C0F7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3456   003A60  C0F8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3457   003A64  CFDF F0F9          	movff	indf2,??_vfpfcnvrt
  3458   003A68  0E04               	movlw	4
  3459   003A6A  26DE               	addwf	postinc2,f,c
  3460   003A6C  CFDF F0FA          	movff	indf2,??_vfpfcnvrt+1
  3461   003A70  0E00               	movlw	0
  3462   003A72  22DD               	addwfc	postdec2,f,c
  3463   003A74  C0F9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3464   003A78  C0FA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3465   003A7C  CFDE F100          	movff	postinc2,vfpfcnvrt@convarg
  3466   003A80  CFDE F101          	movff	postinc2,vfpfcnvrt@convarg+1
  3467   003A84  CFDE F102          	movff	postinc2,vfpfcnvrt@convarg+2
  3468   003A88  CFDE F103          	movff	postinc2,vfpfcnvrt@convarg+3
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3471   003A8C  EF5E  F01D         	goto	l5557
  3472   003A90                     l5555:
  3473                           
  3474                           ; BSR set to: 1
  3475   003A90  5108               	movf	vfpfcnvrt@c& (0+255),w,b
  3476   003A92  0100               	movlb	0	; () banked
  3477   003A94  6FF9               	movwf	??_vfpfcnvrt& (0+255),b
  3478   003A96  6BFA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3479                           
  3480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3481                           ; Switch size 1, requested type "simple"
  3482                           ; Number of cases is 1, Range of values is 0 to 0
  3483                           ; switch strategies available:
  3484                           ; Name         Instructions Cycles
  3485                           ; simple_byte            4     3 (average)
  3486                           ;	Chosen strategy is simple_byte
  3487   003A98  51FA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3488   003A9A  0A00               	xorlw	0	; case 0
  3489   003A9C  B4D8               	btfsc	status,2,c
  3490   003A9E  EF53  F01D         	goto	l6665
  3491   003AA2  EF5E  F01D         	goto	l5557
  3492   003AA6                     l6665:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 2, Range of values is 76 to 108
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte            7     4 (average)
  3500                           ;	Chosen strategy is simple_byte
  3501   003AA6  51F9               	movf	??_vfpfcnvrt& (0+255),w,b
  3502   003AA8  0A4C               	xorlw	76	; case 76
  3503   003AAA  B4D8               	btfsc	status,2,c
  3504   003AAC  EF2E  F01D         	goto	l5551
  3505   003AB0  0A20               	xorlw	32	; case 108
  3506   003AB2  B4D8               	btfsc	status,2,c
  3507   003AB4  EF14  F01D         	goto	l5549
  3508   003AB8  EF5E  F01D         	goto	l5557
  3509   003ABC                     l5557:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3513   003ABC  0E01               	movlw	1
  3514   003ABE  0101               	movlb	1	; () banked
  3515   003AC0  2509               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3516   003AC2  0100               	movlb	0	; () banked
  3517   003AC4  6FF9               	movwf	??_vfpfcnvrt& (0+255),b
  3518   003AC6  0E00               	movlw	0
  3519   003AC8  0101               	movlb	1	; () banked
  3520   003ACA  210A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3521   003ACC  0100               	movlb	0	; () banked
  3522   003ACE  6FFA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3523   003AD0  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3524   003AD4  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3525   003AD8  C0F9  FFDE         	movff	??_vfpfcnvrt,postinc2
  3526   003ADC  C0FA  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3529   003AE0  EF8B  F01D         	goto	l5565
  3530   003AE4                     l5559:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3534   003AE4  C0F3  F0BE         	movff	vfpfcnvrt@fp,efgtoa@fp
  3535   003AE8  C0F4  F0BF         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3536   003AEC  C100  F0C0         	movff	vfpfcnvrt@convarg,efgtoa@f
  3537   003AF0  C101  F0C1         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3538   003AF4  C102  F0C2         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3539   003AF8  C103  F0C3         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3540   003AFC  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3541   003B00  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3542   003B04                     	if	0	;tblptru may be non-zero
  3543   003B04                     	endif
  3544   003B04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3545   003B04  0E00               	movlw	low (__mediumconst shr (0+16))
  3546   003B06  6EF8               	movwf	tblptru,c
  3547   003B08                     	endif
  3548   003B08  0008               	tblrd		*
  3549   003B0A  CFF5 F0C4          	movff	tablat,efgtoa@c
  3550   003B0E  ECAA  F00C         	call	_efgtoa	;wreg free
  3551   003B12  EFC3  F01D         	goto	l1538
  3552   003B16                     l5565:
  3553                           
  3554                           ; BSR set to: 0
  3555   003B16  C109  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3556   003B1A  C10A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3557   003B1E                     	if	0	;tblptru may be non-zero
  3558   003B1E                     	endif
  3559   003B1E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3560   003B1E  0E00               	movlw	low (__mediumconst shr (0+16))
  3561   003B20  6EF8               	movwf	tblptru,c
  3562   003B22                     	endif
  3563   003B22  0008               	tblrd		*
  3564   003B24  50F5               	movf	tablat,w,c
  3565   003B26  6FF9               	movwf	??_vfpfcnvrt& (0+255),b
  3566   003B28  6BFA               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3567                           
  3568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 1, Range of values is 0 to 0
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte            4     3 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575   003B2A  51FA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3576   003B2C  0A00               	xorlw	0	; case 0
  3577   003B2E  B4D8               	btfsc	status,2,c
  3578   003B30  EF9C  F01D         	goto	l6667
  3579   003B34  EFA3  F01D         	goto	l5567
  3580   003B38                     l6667:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ; Switch size 1, requested type "simple"
  3584                           ; Number of cases is 1, Range of values is 102 to 102
  3585                           ; switch strategies available:
  3586                           ; Name         Instructions Cycles
  3587                           ; simple_byte            4     3 (average)
  3588                           ;	Chosen strategy is simple_byte
  3589   003B38  51F9               	movf	??_vfpfcnvrt& (0+255),w,b
  3590   003B3A  0A66               	xorlw	102	; case 102
  3591   003B3C  B4D8               	btfsc	status,2,c
  3592   003B3E  EF72  F01D         	goto	l5559
  3593   003B42  EFA3  F01D         	goto	l5567
  3594   003B46                     l5567:
  3595                           
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3597   003B46  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3598   003B4A  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3599   003B4E  2ADE               	incf	postinc2,f,c
  3600   003B50  0E00               	movlw	0
  3601   003B52  22DD               	addwfc	postdec2,f,c
  3602   003B54  EFC3  F01D         	goto	l1538
  3603   003B58                     l5571:
  3604                           
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3606   003B58  C0F5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3607   003B5C  C0F6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3608   003B60  CFDE FFF6          	movff	postinc2,tblptrl
  3609   003B64  CFDD FFF7          	movff	postdec2,tblptrh
  3610   003B68                     	if	0	;tblptru may be non-zero
  3611   003B68                     	endif
  3612   003B68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3613   003B68  0E00               	movlw	low (__mediumconst shr (0+16))
  3614   003B6A  6EF8               	movwf	tblptru,c
  3615   003B6C                     	endif
  3616   003B6C  0008               	tblrd		*
  3617   003B6E  50F5               	movf	tablat,w,c
  3618   003B70  0100               	movlb	0	; () banked
  3619   003B72  6F60               	movwf	fputc@c& (0+255),b
  3620   003B74  6B61               	clrf	(fputc@c+1)& (0+255),b
  3621   003B76  C0F3  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3622   003B7A  C0F4  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3623   003B7E  EC19  F02A         	call	_fputc	;wreg free
  3624   003B82  EFA3  F01D         	goto	l5567
  3625   003B86                     l1538:
  3626   003B86  0012               	return		;funcret
  3627   003B88                     __end_of_vfpfcnvrt:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _efgtoa *****************
  3631 ;; Defined at:
  3632 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  fp              2   94[BANK0 ] PTR struct _IO_FILE
  3635 ;;		 -> sprintf@f(11), 
  3636 ;;  f               4   96[BANK0 ] PTR struct _IO_FILE
  3637 ;;  c               1  100[BANK0 ] unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  u               4  143[BANK0 ] struct flui
  3640 ;;  g               4  139[BANK0 ] struct flui
  3641 ;;  l               4  132[BANK0 ] struct flui
  3642 ;;  h               4  128[BANK0 ] struct flui
  3643 ;;  ou              4  122[BANK0 ] struct flui
  3644 ;;  n               2  137[BANK0 ] int 
  3645 ;;  i               2  126[BANK0 ] int 
  3646 ;;  w               2  120[BANK0 ] int 
  3647 ;;  e               2  118[BANK0 ] int 
  3648 ;;  m               2  116[BANK0 ] int 
  3649 ;;  d               2  114[BANK0 ] int 
  3650 ;;  t               2  107[BANK0 ] int 
  3651 ;;  p               2  105[BANK0 ] int 
  3652 ;;  ne              2  103[BANK0 ] int 
  3653 ;;  sign            1  136[BANK0 ] unsigned char 
  3654 ;;  nmode           1  113[BANK0 ] unsigned char 
  3655 ;;  mode            1  112[BANK0 ] unsigned char 
  3656 ;;  pp              1  111[BANK0 ] unsigned char 
  3657 ;;  esign           1    0        unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3667 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3670 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;Total ram usage:       53 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 11
  3674 ;; This function calls:
  3675 ;;		___fladd
  3676 ;;		___fldiv
  3677 ;;		___fleq
  3678 ;;		___flge
  3679 ;;		___flmul
  3680 ;;		___flneg
  3681 ;;		___flsub
  3682 ;;		___fltol
  3683 ;;		___fpclassifyf
  3684 ;;		_floorf
  3685 ;;		_labs
  3686 ;;		_memcpy
  3687 ;;		_pad
  3688 ;;		_strcpy
  3689 ;; This function is called by:
  3690 ;;		_vfpfcnvrt
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text5
  3695   001954                     __ptext5:
  3696                           	callstack 0
  3697   001954                     _efgtoa:
  3698                           	callstack 16
  3699   001954                     
  3700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3701   001954  0E00               	movlw	0
  3702   001956  0100               	movlb	0	; () banked
  3703   001958  6FE8               	movwf	efgtoa@sign& (0+255),b
  3704   00195A                     
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3707   00195A  C0C0  F0EB         	movff	efgtoa@f,efgtoa@g
  3708   00195E  C0C1  F0EC         	movff	efgtoa@f+1,efgtoa@g+1
  3709   001962  C0C2  F0ED         	movff	efgtoa@f+2,efgtoa@g+2
  3710   001966  C0C3  F0EE         	movff	efgtoa@f+3,efgtoa@g+3
  3711   00196A                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3714   00196A  BFEE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3715   00196C  EFBC  F00C         	goto	u5020
  3716   001970  EFBA  F00C         	goto	u5021
  3717   001974                     u5021:
  3718   001974  EFD0  F00C         	goto	l5159
  3719   001978                     u5020:
  3720   001978                     
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3723   001978  0E01               	movlw	1
  3724   00197A  6FE8               	movwf	efgtoa@sign& (0+255),b
  3725   00197C                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3728   00197C  C0EB  F060         	movff	efgtoa@g,___flneg@f1
  3729   001980  C0EC  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3730   001984  C0ED  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3731   001988  C0EE  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3732   00198C  EC0E  F038         	call	___flneg	;wreg free
  3733   001990  C060  F0EB         	movff	?___flneg,efgtoa@g
  3734   001994  C061  F0EC         	movff	?___flneg+1,efgtoa@g+1
  3735   001998  C062  F0ED         	movff	?___flneg+2,efgtoa@g+2
  3736   00199C  C063  F0EE         	movff	?___flneg+3,efgtoa@g+3
  3737   0019A0                     l5159:
  3738                           
  3739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3740   0019A0  0E00               	movlw	0
  3741   0019A2  0100               	movlb	0	; () banked
  3742   0019A4  6FEA               	movwf	(efgtoa@n+1)& (0+255),b
  3743   0019A6  0E00               	movlw	0
  3744   0019A8  6FE9               	movwf	efgtoa@n& (0+255),b
  3745   0019AA                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3748   0019AA  C1AA  F0D8         	movff	_width,efgtoa@w
  3749   0019AE  C1AB  F0D9         	movff	_width+1,efgtoa@w+1
  3750   0019B2                     
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3753   0019B2  51E8               	movf	efgtoa@sign& (0+255),w,b
  3754   0019B4  B4D8               	btfsc	status,2,c
  3755   0019B6  EFDF  F00C         	goto	u5031
  3756   0019BA  EFE1  F00C         	goto	u5030
  3757   0019BE                     u5031:
  3758   0019BE  EFF5  F00C         	goto	l5173
  3759   0019C2                     u5030:
  3760   0019C2                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3763   0019C2  51E8               	movf	efgtoa@sign& (0+255),w,b
  3764   0019C4  A4D8               	btfss	status,2,c
  3765   0019C6  EFE7  F00C         	goto	u5041
  3766   0019CA  EFE9  F00C         	goto	u5040
  3767   0019CE                     u5041:
  3768   0019CE  EFEF  F00C         	goto	l5169
  3769   0019D2                     u5040:
  3770   0019D2                     
  3771                           ; BSR set to: 0
  3772   0019D2  0E00               	movlw	0
  3773   0019D4  6FCE               	movwf	(_efgtoa$2934+1)& (0+255),b
  3774   0019D6  0E2B               	movlw	43
  3775   0019D8  6FCD               	movwf	_efgtoa$2934& (0+255),b
  3776   0019DA  EFF3  F00C         	goto	l5171
  3777   0019DE                     l5169:
  3778                           
  3779                           ; BSR set to: 0
  3780   0019DE  0E00               	movlw	0
  3781   0019E0  6FCE               	movwf	(_efgtoa$2934+1)& (0+255),b
  3782   0019E2  0E2D               	movlw	45
  3783   0019E4  6FCD               	movwf	_efgtoa$2934& (0+255),b
  3784   0019E6                     l5171:
  3785                           
  3786                           ; BSR set to: 0
  3787   0019E6  C0CD  F0E8         	movff	_efgtoa$2934,efgtoa@sign
  3788   0019EA                     l5173:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3792   0019EA  C0EB  F060         	movff	efgtoa@g,___fpclassifyf@x
  3793   0019EE  C0EC  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3794   0019F2  C0ED  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3795   0019F6  C0EE  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3796   0019FA  ECC4  F028         	call	___fpclassifyf	;wreg free
  3797   0019FE  0100               	movlb	0	; () banked
  3798   001A00  0560               	decf	?___fpclassifyf& (0+255),w,b
  3799   001A02  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3800   001A04  A4D8               	btfss	status,2,c
  3801   001A06  EF07  F00D         	goto	u5051
  3802   001A0A  EF09  F00D         	goto	u5050
  3803   001A0E                     u5051:
  3804   001A0E  EF3B  F00D         	goto	l5191
  3805   001A12                     u5050:
  3806   001A12                     
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3809   001A12  51E8               	movf	efgtoa@sign& (0+255),w,b
  3810   001A14  B4D8               	btfsc	status,2,c
  3811   001A16  EF0F  F00D         	goto	u5061
  3812   001A1A  EF11  F00D         	goto	u5060
  3813   001A1E                     u5061:
  3814   001A1E  EF1A  F00D         	goto	l5183
  3815   001A22                     u5060:
  3816   001A22                     
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3819   001A22  C0E8  F23C         	movff	efgtoa@sign,_dbuf
  3820   001A26                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3823   001A26  07D8               	decf	efgtoa@w& (0+255),f,b
  3824   001A28  A0D8               	btfss	status,0,c
  3825   001A2A  07D9               	decf	(efgtoa@w+1)& (0+255),f,b
  3826   001A2C                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3829   001A2C  0E00               	movlw	0
  3830   001A2E  6FEA               	movwf	(efgtoa@n+1)& (0+255),b
  3831   001A30  0E01               	movlw	1
  3832   001A32  6FE9               	movwf	efgtoa@n& (0+255),b
  3833   001A34                     l5183:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3837   001A34  0E3C               	movlw	low _dbuf
  3838   001A36  25E9               	addwf	efgtoa@n& (0+255),w,b
  3839   001A38  6F60               	movwf	strcpy@dest& (0+255),b
  3840   001A3A  0E02               	movlw	high _dbuf
  3841   001A3C  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3842   001A3E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3843   001A40  0E2E               	movlw	low STR_2
  3844   001A42  6F62               	movwf	strcpy@src& (0+255),b
  3845   001A44  0E0E               	movlw	high STR_2
  3846   001A46  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3847   001A48  EC0B  F037         	call	_strcpy	;wreg free
  3848   001A4C                     l5185:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3851   001A4C  0100               	movlb	0	; () banked
  3852   001A4E  0EFD               	movlw	253
  3853   001A50  27D8               	addwf	efgtoa@w& (0+255),f,b
  3854   001A52  0EFF               	movlw	255
  3855   001A54  23D9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3856   001A56                     
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3859   001A56  C0BE  F070         	movff	efgtoa@fp,pad@fp
  3860   001A5A  C0BF  F071         	movff	efgtoa@fp+1,pad@fp+1
  3861   001A5E  0E3C               	movlw	low _dbuf
  3862   001A60  6F72               	movwf	pad@buf& (0+255),b
  3863   001A62  0E02               	movlw	high _dbuf
  3864   001A64  6F73               	movwf	(pad@buf+1)& (0+255),b
  3865   001A66  C0D8  F074         	movff	efgtoa@w,pad@p
  3866   001A6A  C0D9  F075         	movff	efgtoa@w+1,pad@p+1
  3867   001A6E  ECA1  F030         	call	_pad	;wreg free
  3868   001A72  EFAD  F011         	goto	l1490
  3869   001A76                     l5191:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3873   001A76  C0EB  F060         	movff	efgtoa@g,___fpclassifyf@x
  3874   001A7A  C0EC  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3875   001A7E  C0ED  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3876   001A82  C0EE  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3877   001A86  ECC4  F028         	call	___fpclassifyf	;wreg free
  3878   001A8A  0100               	movlb	0	; () banked
  3879   001A8C  5160               	movf	?___fpclassifyf& (0+255),w,b
  3880   001A8E  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3881   001A90  A4D8               	btfss	status,2,c
  3882   001A92  EF4D  F00D         	goto	u5071
  3883   001A96  EF4F  F00D         	goto	u5070
  3884   001A9A                     u5071:
  3885   001A9A  EF6E  F00D         	goto	l5209
  3886   001A9E                     u5070:
  3887   001A9E                     
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3890   001A9E  51E8               	movf	efgtoa@sign& (0+255),w,b
  3891   001AA0  B4D8               	btfsc	status,2,c
  3892   001AA2  EF55  F00D         	goto	u5081
  3893   001AA6  EF57  F00D         	goto	u5080
  3894   001AAA                     u5081:
  3895   001AAA  EF60  F00D         	goto	l5201
  3896   001AAE                     u5080:
  3897   001AAE                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3900   001AAE  C0E8  F23C         	movff	efgtoa@sign,_dbuf
  3901   001AB2                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3904   001AB2  07D8               	decf	efgtoa@w& (0+255),f,b
  3905   001AB4  A0D8               	btfss	status,0,c
  3906   001AB6  07D9               	decf	(efgtoa@w+1)& (0+255),f,b
  3907   001AB8                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3910   001AB8  0E00               	movlw	0
  3911   001ABA  6FEA               	movwf	(efgtoa@n+1)& (0+255),b
  3912   001ABC  0E01               	movlw	1
  3913   001ABE  6FE9               	movwf	efgtoa@n& (0+255),b
  3914   001AC0                     l5201:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3918   001AC0  0E3C               	movlw	low _dbuf
  3919   001AC2  25E9               	addwf	efgtoa@n& (0+255),w,b
  3920   001AC4  6F60               	movwf	strcpy@dest& (0+255),b
  3921   001AC6  0E02               	movlw	high _dbuf
  3922   001AC8  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3923   001ACA  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3924   001ACC  0E32               	movlw	low STR_5
  3925   001ACE  6F62               	movwf	strcpy@src& (0+255),b
  3926   001AD0  0E0E               	movlw	high STR_5
  3927   001AD2  6F63               	movwf	(strcpy@src+1)& (0+255),b
  3928   001AD4  EC0B  F037         	call	_strcpy	;wreg free
  3929   001AD8  EF26  F00D         	goto	l5185
  3930   001ADC                     l5209:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3934   001ADC  0E00               	movlw	0
  3935   001ADE  6FEF               	movwf	efgtoa@u& (0+255),b
  3936   001AE0  0E00               	movlw	0
  3937   001AE2  6FF0               	movwf	(efgtoa@u+1)& (0+255),b
  3938   001AE4  0E80               	movlw	128
  3939   001AE6  6FF1               	movwf	(efgtoa@u+2)& (0+255),b
  3940   001AE8  0E3F               	movlw	63
  3941   001AEA  6FF2               	movwf	(efgtoa@u+3)& (0+255),b
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3944   001AEC  0E00               	movlw	0
  3945   001AEE  6FD7               	movwf	(efgtoa@e+1)& (0+255),b
  3946   001AF0  0E00               	movlw	0
  3947   001AF2  6FD6               	movwf	efgtoa@e& (0+255),b
  3948   001AF4                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3951   001AF4  C0EB  F091         	movff	efgtoa@g,___fleq@ff1
  3952   001AF8  C0EC  F092         	movff	efgtoa@g+1,___fleq@ff1+1
  3953   001AFC  C0ED  F093         	movff	efgtoa@g+2,___fleq@ff1+2
  3954   001B00  C0EE  F094         	movff	efgtoa@g+3,___fleq@ff1+3
  3955   001B04  0E00               	movlw	0
  3956   001B06  6F95               	movwf	___fleq@ff2& (0+255),b
  3957   001B08  0E00               	movlw	0
  3958   001B0A  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
  3959   001B0C  0E00               	movlw	0
  3960   001B0E  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
  3961   001B10  0E00               	movlw	0
  3962   001B12  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
  3963   001B14  EC84  F02F         	call	___fleq	;wreg free
  3964   001B18  0100               	movlb	0	; () banked
  3965   001B1A  B0D8               	btfsc	status,0,c
  3966   001B1C  EF92  F00D         	goto	u5091
  3967   001B20  EF94  F00D         	goto	u5090
  3968   001B24                     u5091:
  3969   001B24  EF76  F00E         	goto	l1493
  3970   001B28                     u5090:
  3971   001B28  EFA0  F00D         	goto	l5217
  3972   001B2C                     l1495:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3976   001B2C  C0DA  F0EF         	movff	efgtoa@ou,efgtoa@u
  3977   001B30  C0DB  F0F0         	movff	efgtoa@ou+1,efgtoa@u+1
  3978   001B34  C0DC  F0F1         	movff	efgtoa@ou+2,efgtoa@u+2
  3979   001B38  C0DD  F0F2         	movff	efgtoa@ou+3,efgtoa@u+3
  3980   001B3C                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3983   001B3C  4BD6               	infsnz	efgtoa@e& (0+255),f,b
  3984   001B3E  2BD7               	incf	(efgtoa@e+1)& (0+255),f,b
  3985   001B40                     l5217:
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3989   001B40  C0EF  F070         	movff	efgtoa@u,___flmul@b
  3990   001B44  C0F0  F071         	movff	efgtoa@u+1,___flmul@b+1
  3991   001B48  C0F1  F072         	movff	efgtoa@u+2,___flmul@b+2
  3992   001B4C  C0F2  F073         	movff	efgtoa@u+3,___flmul@b+3
  3993   001B50  0E00               	movlw	0
  3994   001B52  6F74               	movwf	___flmul@a& (0+255),b
  3995   001B54  0E00               	movlw	0
  3996   001B56  6F75               	movwf	(___flmul@a+1)& (0+255),b
  3997   001B58  0E20               	movlw	32
  3998   001B5A  6F76               	movwf	(___flmul@a+2)& (0+255),b
  3999   001B5C  0E41               	movlw	65
  4000   001B5E  6F77               	movwf	(___flmul@a+3)& (0+255),b
  4001   001B60  ECB2  F016         	call	___flmul	;wreg free
  4002   001B64  C070  F0DA         	movff	?___flmul,efgtoa@ou
  4003   001B68  C071  F0DB         	movff	?___flmul+1,efgtoa@ou+1
  4004   001B6C  C072  F0DC         	movff	?___flmul+2,efgtoa@ou+2
  4005   001B70  C073  F0DD         	movff	?___flmul+3,efgtoa@ou+3
  4006   001B74  0100               	movlb	0	; () banked
  4007   001B76  51DA               	movf	efgtoa@ou& (0+255),w,b
  4008   001B78  5DEB               	subwf	efgtoa@g& (0+255),w,b
  4009   001B7A  6F60               	movwf	labs@a& (0+255),b
  4010   001B7C  51DB               	movf	(efgtoa@ou+1)& (0+255),w,b
  4011   001B7E  59EC               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4012   001B80  6F61               	movwf	(labs@a+1)& (0+255),b
  4013   001B82  51DC               	movf	(efgtoa@ou+2)& (0+255),w,b
  4014   001B84  59ED               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4015   001B86  6F62               	movwf	(labs@a+2)& (0+255),b
  4016   001B88  51DD               	movf	(efgtoa@ou+3)& (0+255),w,b
  4017   001B8A  59EE               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4018   001B8C  6F63               	movwf	(labs@a+3)& (0+255),b
  4019   001B8E  EC07  F032         	call	_labs	;wreg free
  4020   001B92  0100               	movlb	0	; () banked
  4021   001B94  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  4022   001B96  EFD8  F00D         	goto	u5101
  4023   001B9A  5163               	movf	(?_labs+3)& (0+255),w,b
  4024   001B9C  1162               	iorwf	(?_labs+2)& (0+255),w,b
  4025   001B9E  1161               	iorwf	(?_labs+1)& (0+255),w,b
  4026   001BA0  E109               	bnz	u5100
  4027   001BA2  0E02               	movlw	2
  4028   001BA4  5D60               	subwf	?_labs& (0+255),w,b
  4029   001BA6  A0D8               	btfss	status,0,c
  4030   001BA8  EFD8  F00D         	goto	u5101
  4031   001BAC  EFDA  F00D         	goto	u5100
  4032   001BB0                     u5101:
  4033   001BB0  EF96  F00D         	goto	l1495
  4034   001BB4                     u5100:
  4035   001BB4                     
  4036                           ; BSR set to: 0
  4037   001BB4  C0DA  F089         	movff	efgtoa@ou,___flge@ff1
  4038   001BB8  C0DB  F08A         	movff	efgtoa@ou+1,___flge@ff1+1
  4039   001BBC  C0DC  F08B         	movff	efgtoa@ou+2,___flge@ff1+2
  4040   001BC0  C0DD  F08C         	movff	efgtoa@ou+3,___flge@ff1+3
  4041   001BC4  C0EB  F08D         	movff	efgtoa@g,___flge@ff2
  4042   001BC8  C0EC  F08E         	movff	efgtoa@g+1,___flge@ff2+1
  4043   001BCC  C0ED  F08F         	movff	efgtoa@g+2,___flge@ff2+2
  4044   001BD0  C0EE  F090         	movff	efgtoa@g+3,___flge@ff2+3
  4045   001BD4  EC41  F028         	call	___flge	;wreg free
  4046   001BD8  0100               	movlb	0	; () banked
  4047   001BDA  A0D8               	btfss	status,0,c
  4048   001BDC  EFF2  F00D         	goto	u5111
  4049   001BE0  EFF4  F00D         	goto	u5110
  4050   001BE4                     u5111:
  4051   001BE4  EF96  F00D         	goto	l1495
  4052   001BE8                     u5110:
  4053   001BE8                     
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4056   001BE8  51EF               	movf	efgtoa@u& (0+255),w,b
  4057   001BEA  5DEB               	subwf	efgtoa@g& (0+255),w,b
  4058   001BEC  6F60               	movwf	labs@a& (0+255),b
  4059   001BEE  51F0               	movf	(efgtoa@u+1)& (0+255),w,b
  4060   001BF0  59EC               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4061   001BF2  6F61               	movwf	(labs@a+1)& (0+255),b
  4062   001BF4  51F1               	movf	(efgtoa@u+2)& (0+255),w,b
  4063   001BF6  59ED               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4064   001BF8  6F62               	movwf	(labs@a+2)& (0+255),b
  4065   001BFA  51F2               	movf	(efgtoa@u+3)& (0+255),w,b
  4066   001BFC  59EE               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4067   001BFE  6F63               	movwf	(labs@a+3)& (0+255),b
  4068   001C00  EC07  F032         	call	_labs	;wreg free
  4069   001C04  0100               	movlb	0	; () banked
  4070   001C06  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  4071   001C08  EF13  F00E         	goto	u5120
  4072   001C0C  5163               	movf	(?_labs+3)& (0+255),w,b
  4073   001C0E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  4074   001C10  1161               	iorwf	(?_labs+1)& (0+255),w,b
  4075   001C12  E107               	bnz	u5121
  4076   001C14  0E02               	movlw	2
  4077   001C16  5D60               	subwf	?_labs& (0+255),w,b
  4078   001C18  B0D8               	btfsc	status,0,c
  4079   001C1A  EF11  F00E         	goto	u5121
  4080   001C1E  EF13  F00E         	goto	u5120
  4081   001C22                     u5121:
  4082   001C22  EF5C  F00E         	goto	l5235
  4083   001C26                     u5120:
  4084   001C26                     l5225:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  4088   001C26  C0EF  F0EB         	movff	efgtoa@u,efgtoa@g
  4089   001C2A  C0F0  F0EC         	movff	efgtoa@u+1,efgtoa@g+1
  4090   001C2E  C0F1  F0ED         	movff	efgtoa@u+2,efgtoa@g+2
  4091   001C32  C0F2  F0EE         	movff	efgtoa@u+3,efgtoa@g+3
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  4094   001C36  EF76  F00E         	goto	l1493
  4095   001C3A                     l5227:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  4099   001C3A  C0EF  F091         	movff	efgtoa@u,___fldiv@b
  4100   001C3E  C0F0  F092         	movff	efgtoa@u+1,___fldiv@b+1
  4101   001C42  C0F1  F093         	movff	efgtoa@u+2,___fldiv@b+2
  4102   001C46  C0F2  F094         	movff	efgtoa@u+3,___fldiv@b+3
  4103   001C4A  0E00               	movlw	0
  4104   001C4C  6F95               	movwf	___fldiv@a& (0+255),b
  4105   001C4E  0E00               	movlw	0
  4106   001C50  6F96               	movwf	(___fldiv@a+1)& (0+255),b
  4107   001C52  0E20               	movlw	32
  4108   001C54  6F97               	movwf	(___fldiv@a+2)& (0+255),b
  4109   001C56  0E41               	movlw	65
  4110   001C58  6F98               	movwf	(___fldiv@a+3)& (0+255),b
  4111   001C5A  ECC8  F018         	call	___fldiv	;wreg free
  4112   001C5E  C091  F0EF         	movff	?___fldiv,efgtoa@u
  4113   001C62  C092  F0F0         	movff	?___fldiv+1,efgtoa@u+1
  4114   001C66  C093  F0F1         	movff	?___fldiv+2,efgtoa@u+2
  4115   001C6A  C094  F0F2         	movff	?___fldiv+3,efgtoa@u+3
  4116   001C6E                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  4118   001C6E  0100               	movlb	0	; () banked
  4119   001C70  07D6               	decf	efgtoa@e& (0+255),f,b
  4120   001C72  A0D8               	btfss	status,0,c
  4121   001C74  07D7               	decf	(efgtoa@e+1)& (0+255),f,b
  4122   001C76                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4125   001C76  51EF               	movf	efgtoa@u& (0+255),w,b
  4126   001C78  5DEB               	subwf	efgtoa@g& (0+255),w,b
  4127   001C7A  6F60               	movwf	labs@a& (0+255),b
  4128   001C7C  51F0               	movf	(efgtoa@u+1)& (0+255),w,b
  4129   001C7E  59EC               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4130   001C80  6F61               	movwf	(labs@a+1)& (0+255),b
  4131   001C82  51F1               	movf	(efgtoa@u+2)& (0+255),w,b
  4132   001C84  59ED               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4133   001C86  6F62               	movwf	(labs@a+2)& (0+255),b
  4134   001C88  51F2               	movf	(efgtoa@u+3)& (0+255),w,b
  4135   001C8A  59EE               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4136   001C8C  6F63               	movwf	(labs@a+3)& (0+255),b
  4137   001C8E  EC07  F032         	call	_labs	;wreg free
  4138   001C92  0100               	movlb	0	; () banked
  4139   001C94  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  4140   001C96  EF5A  F00E         	goto	u5130
  4141   001C9A  5163               	movf	(?_labs+3)& (0+255),w,b
  4142   001C9C  1162               	iorwf	(?_labs+2)& (0+255),w,b
  4143   001C9E  1161               	iorwf	(?_labs+1)& (0+255),w,b
  4144   001CA0  E107               	bnz	u5131
  4145   001CA2  0E02               	movlw	2
  4146   001CA4  5D60               	subwf	?_labs& (0+255),w,b
  4147   001CA6  B0D8               	btfsc	status,0,c
  4148   001CA8  EF58  F00E         	goto	u5131
  4149   001CAC  EF5A  F00E         	goto	u5130
  4150   001CB0                     u5131:
  4151   001CB0  EF5C  F00E         	goto	l5235
  4152   001CB4                     u5130:
  4153   001CB4  EF13  F00E         	goto	l5225
  4154   001CB8                     l5235:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4158   001CB8  C0EB  F089         	movff	efgtoa@g,___flge@ff1
  4159   001CBC  C0EC  F08A         	movff	efgtoa@g+1,___flge@ff1+1
  4160   001CC0  C0ED  F08B         	movff	efgtoa@g+2,___flge@ff1+2
  4161   001CC4  C0EE  F08C         	movff	efgtoa@g+3,___flge@ff1+3
  4162   001CC8  C0EF  F08D         	movff	efgtoa@u,___flge@ff2
  4163   001CCC  C0F0  F08E         	movff	efgtoa@u+1,___flge@ff2+1
  4164   001CD0  C0F1  F08F         	movff	efgtoa@u+2,___flge@ff2+2
  4165   001CD4  C0F2  F090         	movff	efgtoa@u+3,___flge@ff2+3
  4166   001CD8  EC41  F028         	call	___flge	;wreg free
  4167   001CDC  0100               	movlb	0	; () banked
  4168   001CDE  A0D8               	btfss	status,0,c
  4169   001CE0  EF74  F00E         	goto	u5141
  4170   001CE4  EF76  F00E         	goto	u5140
  4171   001CE8                     u5141:
  4172   001CE8  EF1D  F00E         	goto	l5227
  4173   001CEC                     u5140:
  4174   001CEC                     l1493:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4178   001CEC  C0C4  F0D0         	movff	efgtoa@c,efgtoa@mode
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4181   001CF0  C0D0  F0D1         	movff	efgtoa@mode,efgtoa@nmode
  4182   001CF4                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4185   001CF4  0101               	movlb	1	; () banked
  4186   001CF6  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  4187   001CF8  EF80  F00E         	goto	u5151
  4188   001CFC  EF82  F00E         	goto	u5150
  4189   001D00                     u5151:
  4190   001D00  EF88  F00E         	goto	l5241
  4191   001D04                     u5150:
  4192   001D04                     
  4193                           ; BSR set to: 1
  4194   001D04  C1AC  F0C9         	movff	_prec,efgtoa@p
  4195   001D08  C1AD  F0CA         	movff	_prec+1,efgtoa@p+1
  4196   001D0C  EF8D  F00E         	goto	l5243
  4197   001D10                     l5241:
  4198                           
  4199                           ; BSR set to: 1
  4200   001D10  0E00               	movlw	0
  4201   001D12  0100               	movlb	0	; () banked
  4202   001D14  6FCA               	movwf	(efgtoa@p+1)& (0+255),b
  4203   001D16  0E06               	movlw	6
  4204   001D18  6FC9               	movwf	efgtoa@p& (0+255),b
  4205   001D1A                     l5243:
  4206                           
  4207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4208   001D1A  C0C9  F0D4         	movff	efgtoa@p,efgtoa@m
  4209   001D1E  C0CA  F0D5         	movff	efgtoa@p+1,efgtoa@m+1
  4210   001D22                     
  4211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4212   001D22  0100               	movlb	0	; () banked
  4213   001D24  4BD4               	infsnz	efgtoa@m& (0+255),f,b
  4214   001D26  2BD5               	incf	(efgtoa@m+1)& (0+255),f,b
  4215   001D28                     
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4218   001D28  0E66               	movlw	102
  4219   001D2A  19D1               	xorwf	efgtoa@nmode& (0+255),w,b
  4220   001D2C  A4D8               	btfss	status,2,c
  4221   001D2E  EF9B  F00E         	goto	u5161
  4222   001D32  EF9D  F00E         	goto	u5160
  4223   001D36                     u5161:
  4224   001D36  EFBD  F00E         	goto	l5257
  4225   001D3A                     u5160:
  4226   001D3A                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4229   001D3A  BFD7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4230   001D3C  EFA4  F00E         	goto	u5170
  4231   001D40  EFA2  F00E         	goto	u5171
  4232   001D44                     u5171:
  4233   001D44  EFB0  F00E         	goto	l5253
  4234   001D48                     u5170:
  4235   001D48                     
  4236                           ; BSR set to: 0
  4237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4238   001D48  0E00               	movlw	0
  4239   001D4A  6FEF               	movwf	efgtoa@u& (0+255),b
  4240   001D4C  0E00               	movlw	0
  4241   001D4E  6FF0               	movwf	(efgtoa@u+1)& (0+255),b
  4242   001D50  0E80               	movlw	128
  4243   001D52  6FF1               	movwf	(efgtoa@u+2)& (0+255),b
  4244   001D54  0E3F               	movlw	63
  4245   001D56  6FF2               	movwf	(efgtoa@u+3)& (0+255),b
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4248   001D58  0E00               	movlw	0
  4249   001D5A  6FD7               	movwf	(efgtoa@e+1)& (0+255),b
  4250   001D5C  0E00               	movlw	0
  4251   001D5E  6FD6               	movwf	efgtoa@e& (0+255),b
  4252   001D60                     l5253:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4256   001D60  0E67               	movlw	103
  4257   001D62  19D0               	xorwf	efgtoa@mode& (0+255),w,b
  4258   001D64  B4D8               	btfsc	status,2,c
  4259   001D66  EFB7  F00E         	goto	u5181
  4260   001D6A  EFB9  F00E         	goto	u5180
  4261   001D6E                     u5181:
  4262   001D6E  EFBD  F00E         	goto	l5257
  4263   001D72                     u5180:
  4264   001D72                     
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4267   001D72  51D6               	movf	efgtoa@e& (0+255),w,b
  4268   001D74  27D4               	addwf	efgtoa@m& (0+255),f,b
  4269   001D76  51D7               	movf	(efgtoa@e+1)& (0+255),w,b
  4270   001D78  23D5               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4271   001D7A                     l5257:
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4275   001D7A  0E00               	movlw	0
  4276   001D7C  6FDF               	movwf	(efgtoa@i+1)& (0+255),b
  4277   001D7E  0E00               	movlw	0
  4278   001D80  6FDE               	movwf	efgtoa@i& (0+255),b
  4279   001D82                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4282   001D82  C0EB  F0E0         	movff	efgtoa@g,efgtoa@h
  4283   001D86  C0EC  F0E1         	movff	efgtoa@g+1,efgtoa@h+1
  4284   001D8A  C0ED  F0E2         	movff	efgtoa@g+2,efgtoa@h+2
  4285   001D8E  C0EE  F0E3         	movff	efgtoa@g+3,efgtoa@h+3
  4286   001D92                     
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4289   001D92  C0EF  F0DA         	movff	efgtoa@u,efgtoa@ou
  4290   001D96  C0F0  F0DB         	movff	efgtoa@u+1,efgtoa@ou+1
  4291   001D9A  C0F1  F0DC         	movff	efgtoa@u+2,efgtoa@ou+2
  4292   001D9E  C0F2  F0DD         	movff	efgtoa@u+3,efgtoa@ou+3
  4293                           
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4295   001DA2  EF4F  F00F         	goto	l5271
  4296   001DA6                     l5263:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4300   001DA6  C0E0  F091         	movff	efgtoa@h,___fldiv@b
  4301   001DAA  C0E1  F092         	movff	efgtoa@h+1,___fldiv@b+1
  4302   001DAE  C0E2  F093         	movff	efgtoa@h+2,___fldiv@b+2
  4303   001DB2  C0E3  F094         	movff	efgtoa@h+3,___fldiv@b+3
  4304   001DB6  C0EF  F095         	movff	efgtoa@u,___fldiv@a
  4305   001DBA  C0F0  F096         	movff	efgtoa@u+1,___fldiv@a+1
  4306   001DBE  C0F1  F097         	movff	efgtoa@u+2,___fldiv@a+2
  4307   001DC2  C0F2  F098         	movff	efgtoa@u+3,___fldiv@a+3
  4308   001DC6  ECC8  F018         	call	___fldiv	;wreg free
  4309   001DCA  C091  F0AA         	movff	?___fldiv,floorf@x
  4310   001DCE  C092  F0AB         	movff	?___fldiv+1,floorf@x+1
  4311   001DD2  C093  F0AC         	movff	?___fldiv+2,floorf@x+2
  4312   001DD6  C094  F0AD         	movff	?___fldiv+3,floorf@x+3
  4313   001DDA  ECF3  F021         	call	_floorf	;wreg free
  4314   001DDE  C0AA  F0E4         	movff	?_floorf,efgtoa@l
  4315   001DE2  C0AB  F0E5         	movff	?_floorf+1,efgtoa@l+1
  4316   001DE6  C0AC  F0E6         	movff	?_floorf+2,efgtoa@l+2
  4317   001DEA  C0AD  F0E7         	movff	?_floorf+3,efgtoa@l+3
  4318                           
  4319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4320   001DEE  C0E4  F060         	movff	efgtoa@l,___fltol@f1
  4321   001DF2  C0E5  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4322   001DF6  C0E6  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4323   001DFA  C0E7  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4324   001DFE  ECBD  F027         	call	___fltol	;wreg free
  4325   001E02  C060  F0D2         	movff	?___fltol,efgtoa@d
  4326   001E06  C061  F0D3         	movff	?___fltol+1,efgtoa@d+1
  4327   001E0A                     
  4328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4329   001E0A  C0E0  F089         	movff	efgtoa@h,___flsub@b
  4330   001E0E  C0E1  F08A         	movff	efgtoa@h+1,___flsub@b+1
  4331   001E12  C0E2  F08B         	movff	efgtoa@h+2,___flsub@b+2
  4332   001E16  C0E3  F08C         	movff	efgtoa@h+3,___flsub@b+3
  4333   001E1A  C0E4  F074         	movff	efgtoa@l,___flmul@a
  4334   001E1E  C0E5  F075         	movff	efgtoa@l+1,___flmul@a+1
  4335   001E22  C0E6  F076         	movff	efgtoa@l+2,___flmul@a+2
  4336   001E26  C0E7  F077         	movff	efgtoa@l+3,___flmul@a+3
  4337   001E2A  C0EF  F070         	movff	efgtoa@u,___flmul@b
  4338   001E2E  C0F0  F071         	movff	efgtoa@u+1,___flmul@b+1
  4339   001E32  C0F1  F072         	movff	efgtoa@u+2,___flmul@b+2
  4340   001E36  C0F2  F073         	movff	efgtoa@u+3,___flmul@b+3
  4341   001E3A  ECB2  F016         	call	___flmul	;wreg free
  4342   001E3E  C070  F08D         	movff	?___flmul,___flsub@a
  4343   001E42  C071  F08E         	movff	?___flmul+1,___flsub@a+1
  4344   001E46  C072  F08F         	movff	?___flmul+2,___flsub@a+2
  4345   001E4A  C073  F090         	movff	?___flmul+3,___flsub@a+3
  4346   001E4E  ECE7  F036         	call	___flsub	;wreg free
  4347   001E52  C089  F0E0         	movff	?___flsub,efgtoa@h
  4348   001E56  C08A  F0E1         	movff	?___flsub+1,efgtoa@h+1
  4349   001E5A  C08B  F0E2         	movff	?___flsub+2,efgtoa@h+2
  4350   001E5E  C08C  F0E3         	movff	?___flsub+3,efgtoa@h+3
  4351   001E62                     
  4352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4353   001E62  C0EF  F091         	movff	efgtoa@u,___fldiv@b
  4354   001E66  C0F0  F092         	movff	efgtoa@u+1,___fldiv@b+1
  4355   001E6A  C0F1  F093         	movff	efgtoa@u+2,___fldiv@b+2
  4356   001E6E  C0F2  F094         	movff	efgtoa@u+3,___fldiv@b+3
  4357   001E72  0E00               	movlw	0
  4358   001E74  0100               	movlb	0	; () banked
  4359   001E76  6F95               	movwf	___fldiv@a& (0+255),b
  4360   001E78  0E00               	movlw	0
  4361   001E7A  6F96               	movwf	(___fldiv@a+1)& (0+255),b
  4362   001E7C  0E20               	movlw	32
  4363   001E7E  6F97               	movwf	(___fldiv@a+2)& (0+255),b
  4364   001E80  0E41               	movlw	65
  4365   001E82  6F98               	movwf	(___fldiv@a+3)& (0+255),b
  4366   001E84  ECC8  F018         	call	___fldiv	;wreg free
  4367   001E88  C091  F0EF         	movff	?___fldiv,efgtoa@u
  4368   001E8C  C092  F0F0         	movff	?___fldiv+1,efgtoa@u+1
  4369   001E90  C093  F0F1         	movff	?___fldiv+2,efgtoa@u+2
  4370   001E94  C094  F0F2         	movff	?___fldiv+3,efgtoa@u+3
  4371   001E98                     
  4372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4373   001E98  0100               	movlb	0	; () banked
  4374   001E9A  4BDE               	infsnz	efgtoa@i& (0+255),f,b
  4375   001E9C  2BDF               	incf	(efgtoa@i+1)& (0+255),f,b
  4376   001E9E                     l5271:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4380   001E9E  51D4               	movf	efgtoa@m& (0+255),w,b
  4381   001EA0  5DDE               	subwf	efgtoa@i& (0+255),w,b
  4382   001EA2  51DF               	movf	(efgtoa@i+1)& (0+255),w,b
  4383   001EA4  0A80               	xorlw	128
  4384   001EA6  6FC5               	movwf	??_efgtoa& (0+255),b
  4385   001EA8  51D5               	movf	(efgtoa@m+1)& (0+255),w,b
  4386   001EAA  0A80               	xorlw	128
  4387   001EAC  59C5               	subwfb	??_efgtoa& (0+255),w,b
  4388   001EAE  A0D8               	btfss	status,0,c
  4389   001EB0  EF5C  F00F         	goto	u5191
  4390   001EB4  EF5E  F00F         	goto	u5190
  4391   001EB8                     u5191:
  4392   001EB8  EFD3  F00E         	goto	l5263
  4393   001EBC                     u5190:
  4394   001EBC                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4397   001EBC  C0EF  F070         	movff	efgtoa@u,___flmul@b
  4398   001EC0  C0F0  F071         	movff	efgtoa@u+1,___flmul@b+1
  4399   001EC4  C0F1  F072         	movff	efgtoa@u+2,___flmul@b+2
  4400   001EC8  C0F2  F073         	movff	efgtoa@u+3,___flmul@b+3
  4401   001ECC  0E00               	movlw	0
  4402   001ECE  6F74               	movwf	___flmul@a& (0+255),b
  4403   001ED0  0E00               	movlw	0
  4404   001ED2  6F75               	movwf	(___flmul@a+1)& (0+255),b
  4405   001ED4  0EA0               	movlw	160
  4406   001ED6  6F76               	movwf	(___flmul@a+2)& (0+255),b
  4407   001ED8  0E40               	movlw	64
  4408   001EDA  6F77               	movwf	(___flmul@a+3)& (0+255),b
  4409   001EDC  ECB2  F016         	call	___flmul	;wreg free
  4410   001EE0  C070  F0E4         	movff	?___flmul,efgtoa@l
  4411   001EE4  C071  F0E5         	movff	?___flmul+1,efgtoa@l+1
  4412   001EE8  C072  F0E6         	movff	?___flmul+2,efgtoa@l+2
  4413   001EEC  C073  F0E7         	movff	?___flmul+3,efgtoa@l+3
  4414   001EF0                     
  4415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4416   001EF0  C0E0  F089         	movff	efgtoa@h,___flge@ff1
  4417   001EF4  C0E1  F08A         	movff	efgtoa@h+1,___flge@ff1+1
  4418   001EF8  C0E2  F08B         	movff	efgtoa@h+2,___flge@ff1+2
  4419   001EFC  C0E3  F08C         	movff	efgtoa@h+3,___flge@ff1+3
  4420   001F00  C0E4  F08D         	movff	efgtoa@l,___flge@ff2
  4421   001F04  C0E5  F08E         	movff	efgtoa@l+1,___flge@ff2+1
  4422   001F08  C0E6  F08F         	movff	efgtoa@l+2,___flge@ff2+2
  4423   001F0C  C0E7  F090         	movff	efgtoa@l+3,___flge@ff2+3
  4424   001F10  EC41  F028         	call	___flge	;wreg free
  4425   001F14  0100               	movlb	0	; () banked
  4426   001F16  B0D8               	btfsc	status,0,c
  4427   001F18  EF90  F00F         	goto	u5201
  4428   001F1C  EF92  F00F         	goto	u5200
  4429   001F20                     u5201:
  4430   001F20  EF9C  F00F         	goto	l5279
  4431   001F24                     u5200:
  4432   001F24                     
  4433                           ; BSR set to: 0
  4434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4435   001F24  0E00               	movlw	0
  4436   001F26  6FE4               	movwf	efgtoa@l& (0+255),b
  4437   001F28  0E00               	movlw	0
  4438   001F2A  6FE5               	movwf	(efgtoa@l+1)& (0+255),b
  4439   001F2C  0E00               	movlw	0
  4440   001F2E  6FE6               	movwf	(efgtoa@l+2)& (0+255),b
  4441   001F30  0E00               	movlw	0
  4442   001F32  6FE7               	movwf	(efgtoa@l+3)& (0+255),b
  4443                           
  4444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4445   001F34  EFC5  F00F         	goto	l5285
  4446   001F38                     l5279:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4450   001F38  C0E0  F091         	movff	efgtoa@h,___fleq@ff1
  4451   001F3C  C0E1  F092         	movff	efgtoa@h+1,___fleq@ff1+1
  4452   001F40  C0E2  F093         	movff	efgtoa@h+2,___fleq@ff1+2
  4453   001F44  C0E3  F094         	movff	efgtoa@h+3,___fleq@ff1+3
  4454   001F48  C0E4  F095         	movff	efgtoa@l,___fleq@ff2
  4455   001F4C  C0E5  F096         	movff	efgtoa@l+1,___fleq@ff2+1
  4456   001F50  C0E6  F097         	movff	efgtoa@l+2,___fleq@ff2+2
  4457   001F54  C0E7  F098         	movff	efgtoa@l+3,___fleq@ff2+3
  4458   001F58  EC84  F02F         	call	___fleq	;wreg free
  4459   001F5C  0100               	movlb	0	; () banked
  4460   001F5E  A0D8               	btfss	status,0,c
  4461   001F60  EFB4  F00F         	goto	u5211
  4462   001F64  EFB6  F00F         	goto	u5210
  4463   001F68                     u5211:
  4464   001F68  EFC5  F00F         	goto	l5285
  4465   001F6C                     u5210:
  4466   001F6C                     
  4467                           ; BSR set to: 0
  4468   001F6C  B1D2               	btfsc	efgtoa@d& (0+255),0,b
  4469   001F6E  EFBB  F00F         	goto	u5221
  4470   001F72  EFBD  F00F         	goto	u5220
  4471   001F76                     u5221:
  4472   001F76  EFC5  F00F         	goto	l5285
  4473   001F7A                     u5220:
  4474   001F7A                     
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4477   001F7A  0E00               	movlw	0
  4478   001F7C  6FE4               	movwf	efgtoa@l& (0+255),b
  4479   001F7E  0E00               	movlw	0
  4480   001F80  6FE5               	movwf	(efgtoa@l+1)& (0+255),b
  4481   001F82  0E00               	movlw	0
  4482   001F84  6FE6               	movwf	(efgtoa@l+2)& (0+255),b
  4483   001F86  0E00               	movlw	0
  4484   001F88  6FE7               	movwf	(efgtoa@l+3)& (0+255),b
  4485   001F8A                     l5285:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4489   001F8A  C0EB  F060         	movff	efgtoa@g,___fladd@b
  4490   001F8E  C0EC  F061         	movff	efgtoa@g+1,___fladd@b+1
  4491   001F92  C0ED  F062         	movff	efgtoa@g+2,___fladd@b+2
  4492   001F96  C0EE  F063         	movff	efgtoa@g+3,___fladd@b+3
  4493   001F9A  C0E4  F064         	movff	efgtoa@l,___fladd@a
  4494   001F9E  C0E5  F065         	movff	efgtoa@l+1,___fladd@a+1
  4495   001FA2  C0E6  F066         	movff	efgtoa@l+2,___fladd@a+2
  4496   001FA6  C0E7  F067         	movff	efgtoa@l+3,___fladd@a+3
  4497   001FAA  EC51  F014         	call	___fladd	;wreg free
  4498   001FAE  C060  F0E0         	movff	?___fladd,efgtoa@h
  4499   001FB2  C061  F0E1         	movff	?___fladd+1,efgtoa@h+1
  4500   001FB6  C062  F0E2         	movff	?___fladd+2,efgtoa@h+2
  4501   001FBA  C063  F0E3         	movff	?___fladd+3,efgtoa@h+3
  4502   001FBE                     
  4503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4504   001FBE  C0E0  F089         	movff	efgtoa@h,___flge@ff1
  4505   001FC2  C0E1  F08A         	movff	efgtoa@h+1,___flge@ff1+1
  4506   001FC6  C0E2  F08B         	movff	efgtoa@h+2,___flge@ff1+2
  4507   001FCA  C0E3  F08C         	movff	efgtoa@h+3,___flge@ff1+3
  4508   001FCE  0E00               	movlw	0
  4509   001FD0  0100               	movlb	0	; () banked
  4510   001FD2  6F74               	movwf	___flmul@a& (0+255),b
  4511   001FD4  0E00               	movlw	0
  4512   001FD6  6F75               	movwf	(___flmul@a+1)& (0+255),b
  4513   001FD8  0E20               	movlw	32
  4514   001FDA  6F76               	movwf	(___flmul@a+2)& (0+255),b
  4515   001FDC  0E41               	movlw	65
  4516   001FDE  6F77               	movwf	(___flmul@a+3)& (0+255),b
  4517   001FE0  C0DA  F070         	movff	efgtoa@ou,___flmul@b
  4518   001FE4  C0DB  F071         	movff	efgtoa@ou+1,___flmul@b+1
  4519   001FE8  C0DC  F072         	movff	efgtoa@ou+2,___flmul@b+2
  4520   001FEC  C0DD  F073         	movff	efgtoa@ou+3,___flmul@b+3
  4521   001FF0  ECB2  F016         	call	___flmul	;wreg free
  4522   001FF4  C070  F08D         	movff	?___flmul,___flge@ff2
  4523   001FF8  C071  F08E         	movff	?___flmul+1,___flge@ff2+1
  4524   001FFC  C072  F08F         	movff	?___flmul+2,___flge@ff2+2
  4525   002000  C073  F090         	movff	?___flmul+3,___flge@ff2+3
  4526   002004  EC41  F028         	call	___flge	;wreg free
  4527   002008  0100               	movlb	0	; () banked
  4528   00200A  A0D8               	btfss	status,0,c
  4529   00200C  EF0A  F010         	goto	u5231
  4530   002010  EF0C  F010         	goto	u5230
  4531   002014                     u5231:
  4532   002014  EF34  F010         	goto	l5297
  4533   002018                     u5230:
  4534   002018                     
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4537   002018  4BD6               	infsnz	efgtoa@e& (0+255),f,b
  4538   00201A  2BD7               	incf	(efgtoa@e+1)& (0+255),f,b
  4539   00201C                     
  4540                           ; BSR set to: 0
  4541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4542   00201C  C0DA  F070         	movff	efgtoa@ou,___flmul@b
  4543   002020  C0DB  F071         	movff	efgtoa@ou+1,___flmul@b+1
  4544   002024  C0DC  F072         	movff	efgtoa@ou+2,___flmul@b+2
  4545   002028  C0DD  F073         	movff	efgtoa@ou+3,___flmul@b+3
  4546   00202C  0E00               	movlw	0
  4547   00202E  6F74               	movwf	___flmul@a& (0+255),b
  4548   002030  0E00               	movlw	0
  4549   002032  6F75               	movwf	(___flmul@a+1)& (0+255),b
  4550   002034  0E20               	movlw	32
  4551   002036  6F76               	movwf	(___flmul@a+2)& (0+255),b
  4552   002038  0E41               	movlw	65
  4553   00203A  6F77               	movwf	(___flmul@a+3)& (0+255),b
  4554   00203C  ECB2  F016         	call	___flmul	;wreg free
  4555   002040  C070  F0DA         	movff	?___flmul,efgtoa@ou
  4556   002044  C071  F0DB         	movff	?___flmul+1,efgtoa@ou+1
  4557   002048  C072  F0DC         	movff	?___flmul+2,efgtoa@ou+2
  4558   00204C  C073  F0DD         	movff	?___flmul+3,efgtoa@ou+3
  4559   002050                     
  4560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4561   002050  0E66               	movlw	102
  4562   002052  0100               	movlb	0	; () banked
  4563   002054  19D1               	xorwf	efgtoa@nmode& (0+255),w,b
  4564   002056  A4D8               	btfss	status,2,c
  4565   002058  EF30  F010         	goto	u5241
  4566   00205C  EF32  F010         	goto	u5240
  4567   002060                     u5241:
  4568   002060  EF34  F010         	goto	l5297
  4569   002064                     u5240:
  4570   002064                     
  4571                           ; BSR set to: 0
  4572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4573   002064  4BD4               	infsnz	efgtoa@m& (0+255),f,b
  4574   002066  2BD5               	incf	(efgtoa@m+1)& (0+255),f,b
  4575   002068                     l5297:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4579   002068  C0DA  F0EF         	movff	efgtoa@ou,efgtoa@u
  4580   00206C  C0DB  F0F0         	movff	efgtoa@ou+1,efgtoa@u+1
  4581   002070  C0DC  F0F1         	movff	efgtoa@ou+2,efgtoa@u+2
  4582   002074  C0DD  F0F2         	movff	efgtoa@ou+3,efgtoa@u+3
  4583   002078                     
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4586   002078  C0D6  F0C7         	movff	efgtoa@e,efgtoa@ne
  4587   00207C  C0D7  F0C8         	movff	efgtoa@e+1,efgtoa@ne+1
  4588   002080                     
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4591   002080  0E00               	movlw	0
  4592   002082  6FCF               	movwf	efgtoa@pp& (0+255),b
  4593   002084                     
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4596   002084  0E00               	movlw	0
  4597   002086  6FCC               	movwf	(efgtoa@t+1)& (0+255),b
  4598   002088  0E00               	movlw	0
  4599   00208A  6FCB               	movwf	efgtoa@t& (0+255),b
  4600   00208C                     
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4603   00208C  0E00               	movlw	0
  4604   00208E  6FDF               	movwf	(efgtoa@i+1)& (0+255),b
  4605   002090  0E00               	movlw	0
  4606   002092  6FDE               	movwf	efgtoa@i& (0+255),b
  4607                           
  4608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4609   002094  EF32  F011         	goto	l5347
  4610   002098                     l5307:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4614   002098  C0E0  F091         	movff	efgtoa@h,___fldiv@b
  4615   00209C  C0E1  F092         	movff	efgtoa@h+1,___fldiv@b+1
  4616   0020A0  C0E2  F093         	movff	efgtoa@h+2,___fldiv@b+2
  4617   0020A4  C0E3  F094         	movff	efgtoa@h+3,___fldiv@b+3
  4618   0020A8  C0EF  F095         	movff	efgtoa@u,___fldiv@a
  4619   0020AC  C0F0  F096         	movff	efgtoa@u+1,___fldiv@a+1
  4620   0020B0  C0F1  F097         	movff	efgtoa@u+2,___fldiv@a+2
  4621   0020B4  C0F2  F098         	movff	efgtoa@u+3,___fldiv@a+3
  4622   0020B8  ECC8  F018         	call	___fldiv	;wreg free
  4623   0020BC  C091  F0AA         	movff	?___fldiv,floorf@x
  4624   0020C0  C092  F0AB         	movff	?___fldiv+1,floorf@x+1
  4625   0020C4  C093  F0AC         	movff	?___fldiv+2,floorf@x+2
  4626   0020C8  C094  F0AD         	movff	?___fldiv+3,floorf@x+3
  4627   0020CC  ECF3  F021         	call	_floorf	;wreg free
  4628   0020D0  C0AA  F0E4         	movff	?_floorf,efgtoa@l
  4629   0020D4  C0AB  F0E5         	movff	?_floorf+1,efgtoa@l+1
  4630   0020D8  C0AC  F0E6         	movff	?_floorf+2,efgtoa@l+2
  4631   0020DC  C0AD  F0E7         	movff	?_floorf+3,efgtoa@l+3
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4634   0020E0  C0E4  F060         	movff	efgtoa@l,___fltol@f1
  4635   0020E4  C0E5  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4636   0020E8  C0E6  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4637   0020EC  C0E7  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4638   0020F0  ECBD  F027         	call	___fltol	;wreg free
  4639   0020F4  0100               	movlb	0	; () banked
  4640   0020F6  BF61               	btfsc	(?___fltol+1)& (0+255),7,b
  4641   0020F8  EF89  F010         	goto	u5250
  4642   0020FC  5161               	movf	(?___fltol+1)& (0+255),w,b
  4643   0020FE  E107               	bnz	u5251
  4644   002100  0E0A               	movlw	10
  4645   002102  5D60               	subwf	?___fltol& (0+255),w,b
  4646   002104  B0D8               	btfsc	status,0,c
  4647   002106  EF87  F010         	goto	u5251
  4648   00210A  EF89  F010         	goto	u5250
  4649   00210E                     u5251:
  4650   00210E  EF99  F010         	goto	l5311
  4651   002112                     u5250:
  4652   002112                     
  4653                           ; BSR set to: 0
  4654   002112  C0E4  F060         	movff	efgtoa@l,___fltol@f1
  4655   002116  C0E5  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4656   00211A  C0E6  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4657   00211E  C0E7  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4658   002122  ECBD  F027         	call	___fltol	;wreg free
  4659   002126  C060  F0D2         	movff	?___fltol,efgtoa@d
  4660   00212A  C061  F0D3         	movff	?___fltol+1,efgtoa@d+1
  4661   00212E  EF9D  F010         	goto	l1523
  4662   002132                     l5311:
  4663                           
  4664                           ; BSR set to: 0
  4665   002132  0E00               	movlw	0
  4666   002134  6FD3               	movwf	(efgtoa@d+1)& (0+255),b
  4667   002136  0E09               	movlw	9
  4668   002138  6FD2               	movwf	efgtoa@d& (0+255),b
  4669   00213A                     l1523:
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4672   00213A  0100               	movlb	0	; () banked
  4673   00213C  51CF               	movf	efgtoa@pp& (0+255),w,b
  4674   00213E  A4D8               	btfss	status,2,c
  4675   002140  EFA4  F010         	goto	u5261
  4676   002144  EFA6  F010         	goto	u5260
  4677   002148                     u5261:
  4678   002148  EFCE  F010         	goto	l5331
  4679   00214C                     u5260:
  4680   00214C                     
  4681                           ; BSR set to: 0
  4682   00214C  BFC8               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4683   00214E  EFAD  F010         	goto	u5270
  4684   002152  EFAB  F010         	goto	u5271
  4685   002156                     u5271:
  4686   002156  EFCE  F010         	goto	l5331
  4687   00215A                     u5270:
  4688   00215A                     
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4691   00215A  0E3C               	movlw	low _dbuf
  4692   00215C  25E9               	addwf	efgtoa@n& (0+255),w,b
  4693   00215E  6ED9               	movwf	fsr2l,c
  4694   002160  0E02               	movlw	high _dbuf
  4695   002162  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4696   002164  6EDA               	movwf	fsr2h,c
  4697   002166  0E2E               	movlw	46
  4698   002168  6EDF               	movwf	indf2,c
  4699   00216A                     
  4700                           ; BSR set to: 0
  4701   00216A  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4702   00216C  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4703   00216E                     
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4706   00216E  07D8               	decf	efgtoa@w& (0+255),f,b
  4707   002170  A0D8               	btfss	status,0,c
  4708   002172  07D9               	decf	(efgtoa@w+1)& (0+255),f,b
  4709   002174                     
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4712   002174  0E01               	movlw	1
  4713   002176  6FCF               	movwf	efgtoa@pp& (0+255),b
  4714   002178  EFCE  F010         	goto	l5331
  4715   00217C                     l5323:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4719   00217C  0E3C               	movlw	low _dbuf
  4720   00217E  25E9               	addwf	efgtoa@n& (0+255),w,b
  4721   002180  6ED9               	movwf	fsr2l,c
  4722   002182  0E02               	movlw	high _dbuf
  4723   002184  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4724   002186  6EDA               	movwf	fsr2h,c
  4725   002188  0E30               	movlw	48
  4726   00218A  6EDF               	movwf	indf2,c
  4727   00218C                     
  4728                           ; BSR set to: 0
  4729   00218C  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4730   00218E  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4731   002190                     
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4734   002190  07D8               	decf	efgtoa@w& (0+255),f,b
  4735   002192  A0D8               	btfss	status,0,c
  4736   002194  07D9               	decf	(efgtoa@w+1)& (0+255),f,b
  4737   002196                     
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4740   002196  07CB               	decf	efgtoa@t& (0+255),f,b
  4741   002198  A0D8               	btfss	status,0,c
  4742   00219A  07CC               	decf	(efgtoa@t+1)& (0+255),f,b
  4743   00219C                     l5331:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4747   00219C  51CB               	movf	efgtoa@t& (0+255),w,b
  4748   00219E  11CC               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4749   0021A0  A4D8               	btfss	status,2,c
  4750   0021A2  EFD5  F010         	goto	u5281
  4751   0021A6  EFD7  F010         	goto	u5280
  4752   0021AA                     u5281:
  4753   0021AA  EFBE  F010         	goto	l5323
  4754   0021AE                     u5280:
  4755   0021AE                     
  4756                           ; BSR set to: 0
  4757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4758   0021AE  0E3C               	movlw	low _dbuf
  4759   0021B0  25E9               	addwf	efgtoa@n& (0+255),w,b
  4760   0021B2  6ED9               	movwf	fsr2l,c
  4761   0021B4  0E02               	movlw	high _dbuf
  4762   0021B6  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4763   0021B8  6EDA               	movwf	fsr2h,c
  4764   0021BA  51D2               	movf	efgtoa@d& (0+255),w,b
  4765   0021BC  0F30               	addlw	48
  4766   0021BE  6EDF               	movwf	indf2,c
  4767   0021C0                     
  4768                           ; BSR set to: 0
  4769   0021C0  4BE9               	infsnz	efgtoa@n& (0+255),f,b
  4770   0021C2  2BEA               	incf	(efgtoa@n+1)& (0+255),f,b
  4771   0021C4                     
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4774   0021C4  07D8               	decf	efgtoa@w& (0+255),f,b
  4775   0021C6  A0D8               	btfss	status,0,c
  4776   0021C8  07D9               	decf	(efgtoa@w+1)& (0+255),f,b
  4777   0021CA                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4780   0021CA  C0E0  F089         	movff	efgtoa@h,___flsub@b
  4781   0021CE  C0E1  F08A         	movff	efgtoa@h+1,___flsub@b+1
  4782   0021D2  C0E2  F08B         	movff	efgtoa@h+2,___flsub@b+2
  4783   0021D6  C0E3  F08C         	movff	efgtoa@h+3,___flsub@b+3
  4784   0021DA  C0E4  F074         	movff	efgtoa@l,___flmul@a
  4785   0021DE  C0E5  F075         	movff	efgtoa@l+1,___flmul@a+1
  4786   0021E2  C0E6  F076         	movff	efgtoa@l+2,___flmul@a+2
  4787   0021E6  C0E7  F077         	movff	efgtoa@l+3,___flmul@a+3
  4788   0021EA  C0EF  F070         	movff	efgtoa@u,___flmul@b
  4789   0021EE  C0F0  F071         	movff	efgtoa@u+1,___flmul@b+1
  4790   0021F2  C0F1  F072         	movff	efgtoa@u+2,___flmul@b+2
  4791   0021F6  C0F2  F073         	movff	efgtoa@u+3,___flmul@b+3
  4792   0021FA  ECB2  F016         	call	___flmul	;wreg free
  4793   0021FE  C070  F08D         	movff	?___flmul,___flsub@a
  4794   002202  C071  F08E         	movff	?___flmul+1,___flsub@a+1
  4795   002206  C072  F08F         	movff	?___flmul+2,___flsub@a+2
  4796   00220A  C073  F090         	movff	?___flmul+3,___flsub@a+3
  4797   00220E  ECE7  F036         	call	___flsub	;wreg free
  4798   002212  C089  F0E0         	movff	?___flsub,efgtoa@h
  4799   002216  C08A  F0E1         	movff	?___flsub+1,efgtoa@h+1
  4800   00221A  C08B  F0E2         	movff	?___flsub+2,efgtoa@h+2
  4801   00221E  C08C  F0E3         	movff	?___flsub+3,efgtoa@h+3
  4802   002222                     
  4803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4804   002222  C0EF  F091         	movff	efgtoa@u,___fldiv@b
  4805   002226  C0F0  F092         	movff	efgtoa@u+1,___fldiv@b+1
  4806   00222A  C0F1  F093         	movff	efgtoa@u+2,___fldiv@b+2
  4807   00222E  C0F2  F094         	movff	efgtoa@u+3,___fldiv@b+3
  4808   002232  0E00               	movlw	0
  4809   002234  0100               	movlb	0	; () banked
  4810   002236  6F95               	movwf	___fldiv@a& (0+255),b
  4811   002238  0E00               	movlw	0
  4812   00223A  6F96               	movwf	(___fldiv@a+1)& (0+255),b
  4813   00223C  0E20               	movlw	32
  4814   00223E  6F97               	movwf	(___fldiv@a+2)& (0+255),b
  4815   002240  0E41               	movlw	65
  4816   002242  6F98               	movwf	(___fldiv@a+3)& (0+255),b
  4817   002244  ECC8  F018         	call	___fldiv	;wreg free
  4818   002248  C091  F0EF         	movff	?___fldiv,efgtoa@u
  4819   00224C  C092  F0F0         	movff	?___fldiv+1,efgtoa@u+1
  4820   002250  C093  F0F1         	movff	?___fldiv+2,efgtoa@u+2
  4821   002254  C094  F0F2         	movff	?___fldiv+3,efgtoa@u+3
  4822   002258                     
  4823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4824   002258  0100               	movlb	0	; () banked
  4825   00225A  07C7               	decf	efgtoa@ne& (0+255),f,b
  4826   00225C  A0D8               	btfss	status,0,c
  4827   00225E  07C8               	decf	(efgtoa@ne+1)& (0+255),f,b
  4828   002260                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4831   002260  4BDE               	infsnz	efgtoa@i& (0+255),f,b
  4832   002262  2BDF               	incf	(efgtoa@i+1)& (0+255),f,b
  4833   002264                     l5347:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4837   002264  51D4               	movf	efgtoa@m& (0+255),w,b
  4838   002266  5DDE               	subwf	efgtoa@i& (0+255),w,b
  4839   002268  51DF               	movf	(efgtoa@i+1)& (0+255),w,b
  4840   00226A  0A80               	xorlw	128
  4841   00226C  6FC5               	movwf	??_efgtoa& (0+255),b
  4842   00226E  51D5               	movf	(efgtoa@m+1)& (0+255),w,b
  4843   002270  0A80               	xorlw	128
  4844   002272  59C5               	subwfb	??_efgtoa& (0+255),w,b
  4845   002274  B0D8               	btfsc	status,0,c
  4846   002276  EF3F  F011         	goto	u5291
  4847   00227A  EF41  F011         	goto	u5290
  4848   00227E                     u5291:
  4849   00227E  EF4F  F011         	goto	l5351
  4850   002282                     u5290:
  4851   002282                     
  4852                           ; BSR set to: 0
  4853   002282  BFEA               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4854   002284  EF4D  F011         	goto	u5301
  4855   002288  51EA               	movf	(efgtoa@n+1)& (0+255),w,b
  4856   00228A  E109               	bnz	u5300
  4857   00228C  0E4B               	movlw	75
  4858   00228E  5DE9               	subwf	efgtoa@n& (0+255),w,b
  4859   002290  A0D8               	btfss	status,0,c
  4860   002292  EF4D  F011         	goto	u5301
  4861   002296  EF4F  F011         	goto	u5300
  4862   00229A                     u5301:
  4863   00229A  EF4C  F010         	goto	l5307
  4864   00229E                     u5300:
  4865   00229E                     l5351:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4869   00229E  0E00               	movlw	0
  4870   0022A0  6FDF               	movwf	(efgtoa@i+1)& (0+255),b
  4871   0022A2  0E4F               	movlw	79
  4872   0022A4  6FDE               	movwf	efgtoa@i& (0+255),b
  4873   0022A6                     
  4874                           ; BSR set to: 0
  4875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4876   0022A6  0E3C               	movlw	low _dbuf
  4877   0022A8  25DE               	addwf	efgtoa@i& (0+255),w,b
  4878   0022AA  6ED9               	movwf	fsr2l,c
  4879   0022AC  0E02               	movlw	high _dbuf
  4880   0022AE  21DF               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4881   0022B0  6EDA               	movwf	fsr2h,c
  4882   0022B2  0E00               	movlw	0
  4883   0022B4  6EDF               	movwf	indf2,c
  4884   0022B6                     
  4885                           ; BSR set to: 0
  4886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4887   0022B6  0E3C               	movlw	low _dbuf
  4888   0022B8  6FC5               	movwf	??_efgtoa& (0+255),b
  4889   0022BA  0E02               	movlw	high _dbuf
  4890   0022BC  6FC6               	movwf	(??_efgtoa+1)& (0+255),b
  4891   0022BE  51E9               	movf	efgtoa@n& (0+255),w,b
  4892   0022C0  5FC5               	subwf	??_efgtoa& (0+255),f,b
  4893   0022C2  51EA               	movf	(efgtoa@n+1)& (0+255),w,b
  4894   0022C4  5BC6               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4895   0022C6  51DE               	movf	efgtoa@i& (0+255),w,b
  4896   0022C8  25C5               	addwf	??_efgtoa& (0+255),w,b
  4897   0022CA  6F60               	movwf	memcpy@d1& (0+255),b
  4898   0022CC  51DF               	movf	(efgtoa@i+1)& (0+255),w,b
  4899   0022CE  21C6               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4900   0022D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4901   0022D2  0E3C               	movlw	low _dbuf
  4902   0022D4  6F62               	movwf	memcpy@s1& (0+255),b
  4903   0022D6  0E02               	movlw	high _dbuf
  4904   0022D8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  4905   0022DA  C0E9  F064         	movff	efgtoa@n,memcpy@n
  4906   0022DE  C0EA  F065         	movff	efgtoa@n+1,memcpy@n+1
  4907   0022E2  EC0C  F035         	call	_memcpy	;wreg free
  4908   0022E6                     
  4909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4910   0022E6  0100               	movlb	0	; () banked
  4911   0022E8  51E9               	movf	efgtoa@n& (0+255),w,b
  4912   0022EA  5DDE               	subwf	efgtoa@i& (0+255),w,b
  4913   0022EC  6FE9               	movwf	efgtoa@n& (0+255),b
  4914   0022EE  51EA               	movf	(efgtoa@n+1)& (0+255),w,b
  4915   0022F0  59DF               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4916   0022F2  6FEA               	movwf	(efgtoa@n+1)& (0+255),b
  4917   0022F4                     
  4918                           ; BSR set to: 0
  4919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4920   0022F4  51E8               	movf	efgtoa@sign& (0+255),w,b
  4921   0022F6  A4D8               	btfss	status,2,c
  4922   0022F8  EF80  F011         	goto	u5311
  4923   0022FC  EF83  F011         	goto	u5310
  4924   002300                     u5311:
  4925   002300  0E01               	movlw	1
  4926   002302  EF84  F011         	goto	u5320
  4927   002306                     u5310:
  4928   002306  0E00               	movlw	0
  4929   002308                     u5320:
  4930   002308  6FDE               	movwf	efgtoa@i& (0+255),b
  4931   00230A  6BDF               	clrf	(efgtoa@i+1)& (0+255),b
  4932   00230C                     
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4935   00230C  51E8               	movf	efgtoa@sign& (0+255),w,b
  4936   00230E  B4D8               	btfsc	status,2,c
  4937   002310  EF8C  F011         	goto	u5331
  4938   002314  EF8E  F011         	goto	u5330
  4939   002318                     u5331:
  4940   002318  EF99  F011         	goto	l5365
  4941   00231C                     u5330:
  4942   00231C                     
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4945   00231C  07E9               	decf	efgtoa@n& (0+255),f,b
  4946   00231E  A0D8               	btfss	status,0,c
  4947   002320  07EA               	decf	(efgtoa@n+1)& (0+255),f,b
  4948   002322  0E3C               	movlw	low _dbuf
  4949   002324  25E9               	addwf	efgtoa@n& (0+255),w,b
  4950   002326  6ED9               	movwf	fsr2l,c
  4951   002328  0E02               	movlw	high _dbuf
  4952   00232A  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4953   00232C  6EDA               	movwf	fsr2h,c
  4954   00232E  C0E8  FFDF         	movff	efgtoa@sign,indf2
  4955   002332                     l5365:
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4959   002332  51DE               	movf	efgtoa@i& (0+255),w,b
  4960   002334  5FD8               	subwf	efgtoa@w& (0+255),f,b
  4961   002336  51DF               	movf	(efgtoa@i+1)& (0+255),w,b
  4962   002338  5BD9               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4963   00233A                     
  4964                           ; BSR set to: 0
  4965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4966   00233A  C0BE  F070         	movff	efgtoa@fp,pad@fp
  4967   00233E  C0BF  F071         	movff	efgtoa@fp+1,pad@fp+1
  4968   002342  0E3C               	movlw	low _dbuf
  4969   002344  25E9               	addwf	efgtoa@n& (0+255),w,b
  4970   002346  6F72               	movwf	pad@buf& (0+255),b
  4971   002348  0E02               	movlw	high _dbuf
  4972   00234A  21EA               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4973   00234C  6F73               	movwf	(pad@buf+1)& (0+255),b
  4974   00234E  C0D8  F074         	movff	efgtoa@w,pad@p
  4975   002352  C0D9  F075         	movff	efgtoa@w+1,pad@p+1
  4976   002356  ECA1  F030         	call	_pad	;wreg free
  4977   00235A                     l1490:
  4978   00235A  0012               	return		;funcret
  4979   00235C                     __end_of_efgtoa:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _strcpy *****************
  4983 ;; Defined at:
  4984 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4987 ;;		 -> dbuf(80), 
  4988 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  4989 ;;		 -> STR_5(4), STR_2(4), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  d               2    6[BANK0 ] PTR unsigned char 
  4992 ;;		 -> dbuf(80), 
  4993 ;;  s               2    4[BANK0 ] PTR const unsigned char 
  4994 ;;		 -> STR_5(4), STR_2(4), 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  2    0[BANK0 ] PTR unsigned char 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;Total ram usage:        8 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 7
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_efgtoa
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text6
  5019   006E16                     __ptext6:
  5020                           	callstack 0
  5021   006E16                     _strcpy:
  5022                           	callstack 19
  5023   006E16  C062  F064         	movff	strcpy@src,strcpy@s
  5024   006E1A  C063  F065         	movff	strcpy@src+1,strcpy@s+1
  5025   006E1E  C060  F066         	movff	strcpy@dest,strcpy@d
  5026   006E22  C061  F067         	movff	strcpy@dest+1,strcpy@d+1
  5027   006E26                     l4949:
  5028   006E26  C064  FFF6         	movff	strcpy@s,tblptrl
  5029   006E2A  C065  FFF7         	movff	strcpy@s+1,tblptrh
  5030   006E2E  0100               	movlb	0	; () banked
  5031   006E30  4B64               	infsnz	strcpy@s& (0+255),f,b
  5032   006E32  2B65               	incf	(strcpy@s+1)& (0+255),f,b
  5033   006E34                     	if	0	;tblptru may be non-zero
  5034   006E34                     	endif
  5035   006E34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5036   006E34  0E00               	movlw	low (__mediumconst shr (0+16))
  5037   006E36  6EF8               	movwf	tblptru,c
  5038   006E38                     	endif
  5039   006E38  C066  FFD9         	movff	strcpy@d,fsr2l
  5040   006E3C  C067  FFDA         	movff	strcpy@d+1,fsr2h
  5041   006E40  4B66               	infsnz	strcpy@d& (0+255),f,b
  5042   006E42  2B67               	incf	(strcpy@d+1)& (0+255),f,b
  5043   006E44  0008               	tblrd		*
  5044   006E46  CFF5 FFDF          	movff	tablat,indf2
  5045   006E4A  50DF               	movf	indf2,w,c
  5046   006E4C  A4D8               	btfss	status,2,c
  5047   006E4E  EF2B  F037         	goto	u4631
  5048   006E52  EF2D  F037         	goto	u4630
  5049   006E56                     u4631:
  5050   006E56  EF13  F037         	goto	l4949
  5051   006E5A                     u4630:
  5052   006E5A                     
  5053                           ; BSR set to: 0
  5054   006E5A  0012               	return		;funcret
  5055   006E5C                     __end_of_strcpy:
  5056                           	callstack 0
  5057                           
  5058 ;; *************** function _memcpy *****************
  5059 ;; Defined at:
  5060 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  d1              2    0[BANK0 ] PTR void 
  5063 ;;		 -> dbuf(80), 
  5064 ;;  s1              2    2[BANK0 ] PTR const void 
  5065 ;;		 -> dbuf(80), 
  5066 ;;  n               2    4[BANK0 ] unsigned int 
  5067 ;; Auto vars:     Size  Location     Type
  5068 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  5069 ;;		 -> dbuf(80), 
  5070 ;;  d               2    6[BANK0 ] PTR unsigned char 
  5071 ;;		 -> dbuf(80), 
  5072 ;;  tmp             1   10[BANK0 ] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  2    0[BANK0 ] PTR void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5082 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;Total ram usage:       11 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; Hardware stack levels required when called: 7
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_efgtoa
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text7
  5097   006A18                     __ptext7:
  5098                           	callstack 0
  5099   006A18                     _memcpy:
  5100                           	callstack 19
  5101   006A18  C062  F068         	movff	memcpy@s1,memcpy@s
  5102   006A1C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
  5103   006A20  C060  F066         	movff	memcpy@d1,memcpy@d
  5104   006A24  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
  5105   006A28  EF26  F035         	goto	l4993
  5106   006A2C                     l4985:
  5107                           
  5108                           ; BSR set to: 0
  5109   006A2C  C068  FFD9         	movff	memcpy@s,fsr2l
  5110   006A30  C069  FFDA         	movff	memcpy@s+1,fsr2h
  5111   006A34  50DF               	movf	indf2,w,c
  5112   006A36  6F6A               	movwf	memcpy@tmp& (0+255),b
  5113   006A38                     
  5114                           ; BSR set to: 0
  5115   006A38  4B68               	infsnz	memcpy@s& (0+255),f,b
  5116   006A3A  2B69               	incf	(memcpy@s+1)& (0+255),f,b
  5117   006A3C                     
  5118                           ; BSR set to: 0
  5119   006A3C  C066  FFD9         	movff	memcpy@d,fsr2l
  5120   006A40  C067  FFDA         	movff	memcpy@d+1,fsr2h
  5121   006A44  C06A  FFDF         	movff	memcpy@tmp,indf2
  5122   006A48                     
  5123                           ; BSR set to: 0
  5124   006A48  4B66               	infsnz	memcpy@d& (0+255),f,b
  5125   006A4A  2B67               	incf	(memcpy@d+1)& (0+255),f,b
  5126   006A4C                     l4993:
  5127   006A4C  0100               	movlb	0	; () banked
  5128   006A4E  0764               	decf	memcpy@n& (0+255),f,b
  5129   006A50  A0D8               	btfss	status,0,c
  5130   006A52  0765               	decf	(memcpy@n+1)& (0+255),f,b
  5131   006A54  2964               	incf	memcpy@n& (0+255),w,b
  5132   006A56  E106               	bnz	u4751
  5133   006A58  2965               	incf	(memcpy@n+1)& (0+255),w,b
  5134   006A5A  A4D8               	btfss	status,2,c
  5135   006A5C  EF32  F035         	goto	u4751
  5136   006A60  EF34  F035         	goto	u4750
  5137   006A64                     u4751:
  5138   006A64  EF16  F035         	goto	l4985
  5139   006A68                     u4750:
  5140   006A68                     
  5141                           ; BSR set to: 0
  5142   006A68  0012               	return		;funcret
  5143   006A6A                     __end_of_memcpy:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _labs *****************
  5147 ;; Defined at:
  5148 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  a               4    0[BANK0 ] long 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  4    0[BANK0 ] long 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5162 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;Total ram usage:        8 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 7
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_efgtoa
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text8
  5177   00640E                     __ptext8:
  5178                           	callstack 0
  5179   00640E                     _labs:
  5180                           	callstack 19
  5181   00640E  0100               	movlb	0	; () banked
  5182   006410  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  5183   006412  EF17  F032         	goto	u4640
  5184   006416  5163               	movf	(labs@a+3)& (0+255),w,b
  5185   006418  1162               	iorwf	(labs@a+2)& (0+255),w,b
  5186   00641A  1161               	iorwf	(labs@a+1)& (0+255),w,b
  5187   00641C  E106               	bnz	u4641
  5188   00641E  0560               	decf	labs@a& (0+255),w,b
  5189   006420  B0D8               	btfsc	status,0,c
  5190   006422  EF15  F032         	goto	u4641
  5191   006426  EF17  F032         	goto	u4640
  5192   00642A                     u4641:
  5193   00642A  EF32  F032         	goto	l1595
  5194   00642E                     u4640:
  5195   00642E                     
  5196                           ; BSR set to: 0
  5197   00642E  C060  F064         	movff	labs@a,??_labs
  5198   006432  C061  F065         	movff	labs@a+1,??_labs+1
  5199   006436  C062  F066         	movff	labs@a+2,??_labs+2
  5200   00643A  C063  F067         	movff	labs@a+3,??_labs+3
  5201   00643E  1F64               	comf	??_labs& (0+255),f,b
  5202   006440  1F65               	comf	(??_labs+1)& (0+255),f,b
  5203   006442  1F66               	comf	(??_labs+2)& (0+255),f,b
  5204   006444  1F67               	comf	(??_labs+3)& (0+255),f,b
  5205   006446  2B64               	incf	??_labs& (0+255),f,b
  5206   006448  0E00               	movlw	0
  5207   00644A  2365               	addwfc	(??_labs+1)& (0+255),f,b
  5208   00644C  2366               	addwfc	(??_labs+2)& (0+255),f,b
  5209   00644E  2367               	addwfc	(??_labs+3)& (0+255),f,b
  5210   006450  C064  F060         	movff	??_labs,?_labs
  5211   006454  C065  F061         	movff	??_labs+1,?_labs+1
  5212   006458  C066  F062         	movff	??_labs+2,?_labs+2
  5213   00645C  C067  F063         	movff	??_labs+3,?_labs+3
  5214   006460  EF3A  F032         	goto	l1598
  5215   006464                     l1595:
  5216                           
  5217                           ; BSR set to: 0
  5218   006464  C060  F060         	movff	labs@a,?_labs
  5219   006468  C061  F061         	movff	labs@a+1,?_labs+1
  5220   00646C  C062  F062         	movff	labs@a+2,?_labs+2
  5221   006470  C063  F063         	movff	labs@a+3,?_labs+3
  5222   006474                     l1598:
  5223                           
  5224                           ; BSR set to: 0
  5225   006474  0012               	return		;funcret
  5226   006476                     __end_of_labs:
  5227                           	callstack 0
  5228                           
  5229 ;; *************** function _floorf *****************
  5230 ;; Defined at:
  5231 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  x               4   74[BANK0 ] float 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  u               4   90[BANK0 ] struct .
  5236 ;;  m               4   84[BANK0 ] unsigned long 
  5237 ;;  e               2   88[BANK0 ] int 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  4   74[BANK0 ] float 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:       20 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 7
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_efgtoa
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           	psect	text9
  5262   0043E6                     __ptext9:
  5263                           	callstack 0
  5264   0043E6                     _floorf:
  5265                           	callstack 19
  5266   0043E6  C046  F0BA         	movff	floorf@F526,floorf@u
  5267   0043EA  C047  F0BB         	movff	floorf@F526+1,floorf@u+1
  5268   0043EE  C048  F0BC         	movff	floorf@F526+2,floorf@u+2
  5269   0043F2  C049  F0BD         	movff	floorf@F526+3,floorf@u+3
  5270   0043F6  C0AA  F0BA         	movff	floorf@x,floorf@u
  5271   0043FA  C0AB  F0BB         	movff	floorf@x+1,floorf@u+1
  5272   0043FE  C0AC  F0BC         	movff	floorf@x+2,floorf@u+2
  5273   004402  C0AD  F0BD         	movff	floorf@x+3,floorf@u+3
  5274   004406  0E81               	movlw	129
  5275   004408  0100               	movlb	0	; () banked
  5276   00440A  6FAE               	movwf	??_floorf& (0+255),b
  5277   00440C  0EFF               	movlw	255
  5278   00440E  6FAF               	movwf	(??_floorf+1)& (0+255),b
  5279   004410  C0BA  F0B0         	movff	floorf@u,??_floorf+2
  5280   004414  C0BB  F0B1         	movff	floorf@u+1,??_floorf+3
  5281   004418  C0BC  F0B2         	movff	floorf@u+2,??_floorf+4
  5282   00441C  C0BD  F0B3         	movff	floorf@u+3,??_floorf+5
  5283   004420  0E18               	movlw	24
  5284   004422  EF18  F022         	goto	u4650
  5285   004426                     u4655:
  5286   004426  90D8               	bcf	status,0,c
  5287   004428  33B3               	rrcf	(??_floorf+5)& (0+255),f,b
  5288   00442A  33B2               	rrcf	(??_floorf+4)& (0+255),f,b
  5289   00442C  33B1               	rrcf	(??_floorf+3)& (0+255),f,b
  5290   00442E  33B0               	rrcf	(??_floorf+2)& (0+255),f,b
  5291   004430                     u4650:
  5292   004430  2EE8               	decfsz	wreg,f,c
  5293   004432  EF13  F022         	goto	u4655
  5294   004436  51B0               	movf	(??_floorf+2)& (0+255),w,b
  5295   004438  25AE               	addwf	??_floorf& (0+255),w,b
  5296   00443A  6FB8               	movwf	floorf@e& (0+255),b
  5297   00443C  0E00               	movlw	0
  5298   00443E  21AF               	addwfc	(??_floorf+1)& (0+255),w,b
  5299   004440  6FB9               	movwf	(floorf@e+1)& (0+255),b
  5300   004442  BFB9               	btfsc	(floorf@e+1)& (0+255),7,b
  5301   004444  EF2D  F022         	goto	u4661
  5302   004448  51B9               	movf	(floorf@e+1)& (0+255),w,b
  5303   00444A  E109               	bnz	u4660
  5304   00444C  0E17               	movlw	23
  5305   00444E  5DB8               	subwf	floorf@e& (0+255),w,b
  5306   004450  A0D8               	btfss	status,0,c
  5307   004452  EF2D  F022         	goto	u4661
  5308   004456  EF2F  F022         	goto	u4660
  5309   00445A                     u4661:
  5310   00445A  EF39  F022         	goto	l4961
  5311   00445E                     u4660:
  5312   00445E                     l4959:
  5313                           
  5314                           ; BSR set to: 0
  5315   00445E  C0AA  F0AA         	movff	floorf@x,?_floorf
  5316   004462  C0AB  F0AB         	movff	floorf@x+1,?_floorf+1
  5317   004466  C0AC  F0AC         	movff	floorf@x+2,?_floorf+2
  5318   00446A  C0AD  F0AD         	movff	floorf@x+3,?_floorf+3
  5319   00446E  EFFD  F022         	goto	l1584
  5320   004472                     l4961:
  5321                           
  5322                           ; BSR set to: 0
  5323   004472  BFB9               	btfsc	(floorf@e+1)& (0+255),7,b
  5324   004474  EF3E  F022         	goto	u4671
  5325   004478  EF40  F022         	goto	u4670
  5326   00447C                     u4671:
  5327   00447C  EFB1  F022         	goto	l4971
  5328   004480                     u4670:
  5329   004480                     
  5330                           ; BSR set to: 0
  5331   004480  C0B8  F0AE         	movff	floorf@e,??_floorf
  5332   004484  0EFF               	movlw	255
  5333   004486  6FAF               	movwf	(??_floorf+1)& (0+255),b
  5334   004488  0EFF               	movlw	255
  5335   00448A  6FB0               	movwf	(??_floorf+2)& (0+255),b
  5336   00448C  0E7F               	movlw	127
  5337   00448E  6FB1               	movwf	(??_floorf+3)& (0+255),b
  5338   004490  0E00               	movlw	0
  5339   004492  6FB2               	movwf	(??_floorf+4)& (0+255),b
  5340   004494                     u4685:
  5341   004494  67AE               	tstfsz	??_floorf& (0+255),b
  5342   004496  EF4F  F022         	goto	u4686
  5343   00449A  EF57  F022         	goto	u4687
  5344   00449E                     u4686:
  5345   00449E  35B2               	rlcf	(??_floorf+4)& (0+255),w,b
  5346   0044A0  33B2               	rrcf	(??_floorf+4)& (0+255),f,b
  5347   0044A2  33B1               	rrcf	(??_floorf+3)& (0+255),f,b
  5348   0044A4  33B0               	rrcf	(??_floorf+2)& (0+255),f,b
  5349   0044A6  33AF               	rrcf	(??_floorf+1)& (0+255),f,b
  5350   0044A8  2FAE               	decfsz	??_floorf& (0+255),f,b
  5351   0044AA  EF4A  F022         	goto	u4685
  5352   0044AE                     u4687:
  5353   0044AE  C0AF  F0B4         	movff	??_floorf+1,floorf@m
  5354   0044B2  C0B0  F0B5         	movff	??_floorf+2,floorf@m+1
  5355   0044B6  C0B1  F0B6         	movff	??_floorf+3,floorf@m+2
  5356   0044BA  C0B2  F0B7         	movff	??_floorf+4,floorf@m+3
  5357   0044BE  0100               	movlb	0	; () banked
  5358   0044C0  51B4               	movf	floorf@m& (0+255),w,b
  5359   0044C2  15BA               	andwf	floorf@u& (0+255),w,b
  5360   0044C4  6FAE               	movwf	??_floorf& (0+255),b
  5361   0044C6  51B5               	movf	(floorf@m+1)& (0+255),w,b
  5362   0044C8  15BB               	andwf	(floorf@u+1)& (0+255),w,b
  5363   0044CA  6FAF               	movwf	(??_floorf+1)& (0+255),b
  5364   0044CC  51B6               	movf	(floorf@m+2)& (0+255),w,b
  5365   0044CE  15BC               	andwf	(floorf@u+2)& (0+255),w,b
  5366   0044D0  6FB0               	movwf	(??_floorf+2)& (0+255),b
  5367   0044D2  51B7               	movf	(floorf@m+3)& (0+255),w,b
  5368   0044D4  15BD               	andwf	(floorf@u+3)& (0+255),w,b
  5369   0044D6  6FB1               	movwf	(??_floorf+3)& (0+255),b
  5370   0044D8  51AE               	movf	??_floorf& (0+255),w,b
  5371   0044DA  11AF               	iorwf	(??_floorf+1)& (0+255),w,b
  5372   0044DC  11B0               	iorwf	(??_floorf+2)& (0+255),w,b
  5373   0044DE  11B1               	iorwf	(??_floorf+3)& (0+255),w,b
  5374   0044E0  A4D8               	btfss	status,2,c
  5375   0044E2  EF75  F022         	goto	u4691
  5376   0044E6  EF77  F022         	goto	u4690
  5377   0044EA                     u4691:
  5378   0044EA  EF79  F022         	goto	l4967
  5379   0044EE                     u4690:
  5380   0044EE  EF2F  F022         	goto	l4959
  5381   0044F2                     l4967:
  5382                           
  5383                           ; BSR set to: 0
  5384   0044F2  C0BA  F0AE         	movff	floorf@u,??_floorf
  5385   0044F6  C0BB  F0AF         	movff	floorf@u+1,??_floorf+1
  5386   0044FA  C0BC  F0B0         	movff	floorf@u+2,??_floorf+2
  5387   0044FE  C0BD  F0B1         	movff	floorf@u+3,??_floorf+3
  5388   004502  0E20               	movlw	32
  5389   004504  EF89  F022         	goto	u4700
  5390   004508                     u4705:
  5391   004508  90D8               	bcf	status,0,c
  5392   00450A  33B1               	rrcf	(??_floorf+3)& (0+255),f,b
  5393   00450C  33B0               	rrcf	(??_floorf+2)& (0+255),f,b
  5394   00450E  33AF               	rrcf	(??_floorf+1)& (0+255),f,b
  5395   004510  33AE               	rrcf	??_floorf& (0+255),f,b
  5396   004512                     u4700:
  5397   004512  2EE8               	decfsz	wreg,f,c
  5398   004514  EF84  F022         	goto	u4705
  5399   004518  51AE               	movf	??_floorf& (0+255),w,b
  5400   00451A  11AF               	iorwf	(??_floorf+1)& (0+255),w,b
  5401   00451C  11B0               	iorwf	(??_floorf+2)& (0+255),w,b
  5402   00451E  11B1               	iorwf	(??_floorf+3)& (0+255),w,b
  5403   004520  B4D8               	btfsc	status,2,c
  5404   004522  EF95  F022         	goto	u4711
  5405   004526  EF97  F022         	goto	u4710
  5406   00452A                     u4711:
  5407   00452A  EF9F  F022         	goto	l1587
  5408   00452E                     u4710:
  5409   00452E                     
  5410                           ; BSR set to: 0
  5411   00452E  51B4               	movf	floorf@m& (0+255),w,b
  5412   004530  27BA               	addwf	floorf@u& (0+255),f,b
  5413   004532  51B5               	movf	(floorf@m+1)& (0+255),w,b
  5414   004534  23BB               	addwfc	(floorf@u+1)& (0+255),f,b
  5415   004536  51B6               	movf	(floorf@m+2)& (0+255),w,b
  5416   004538  23BC               	addwfc	(floorf@u+2)& (0+255),f,b
  5417   00453A  51B7               	movf	(floorf@m+3)& (0+255),w,b
  5418   00453C  23BD               	addwfc	(floorf@u+3)& (0+255),f,b
  5419   00453E                     l1587:
  5420                           
  5421                           ; BSR set to: 0
  5422   00453E  1DB4               	comf	floorf@m& (0+255),w,b
  5423   004540  6FAE               	movwf	??_floorf& (0+255),b
  5424   004542  1DB5               	comf	(floorf@m+1)& (0+255),w,b
  5425   004544  6FAF               	movwf	(??_floorf+1)& (0+255),b
  5426   004546  1DB6               	comf	(floorf@m+2)& (0+255),w,b
  5427   004548  6FB0               	movwf	(??_floorf+2)& (0+255),b
  5428   00454A  1DB7               	comf	(floorf@m+3)& (0+255),w,b
  5429   00454C  6FB1               	movwf	(??_floorf+3)& (0+255),b
  5430   00454E  51AE               	movf	??_floorf& (0+255),w,b
  5431   004550  17BA               	andwf	floorf@u& (0+255),f,b
  5432   004552  51AF               	movf	(??_floorf+1)& (0+255),w,b
  5433   004554  17BB               	andwf	(floorf@u+1)& (0+255),f,b
  5434   004556  51B0               	movf	(??_floorf+2)& (0+255),w,b
  5435   004558  17BC               	andwf	(floorf@u+2)& (0+255),f,b
  5436   00455A  51B1               	movf	(??_floorf+3)& (0+255),w,b
  5437   00455C  17BD               	andwf	(floorf@u+3)& (0+255),f,b
  5438   00455E  EFF5  F022         	goto	l4979
  5439   004562                     l4971:
  5440                           
  5441                           ; BSR set to: 0
  5442   004562  C0BA  F0AE         	movff	floorf@u,??_floorf
  5443   004566  C0BB  F0AF         	movff	floorf@u+1,??_floorf+1
  5444   00456A  C0BC  F0B0         	movff	floorf@u+2,??_floorf+2
  5445   00456E  C0BD  F0B1         	movff	floorf@u+3,??_floorf+3
  5446   004572  0E20               	movlw	32
  5447   004574  EFC1  F022         	goto	u4720
  5448   004578                     u4725:
  5449   004578  90D8               	bcf	status,0,c
  5450   00457A  33B1               	rrcf	(??_floorf+3)& (0+255),f,b
  5451   00457C  33B0               	rrcf	(??_floorf+2)& (0+255),f,b
  5452   00457E  33AF               	rrcf	(??_floorf+1)& (0+255),f,b
  5453   004580  33AE               	rrcf	??_floorf& (0+255),f,b
  5454   004582                     u4720:
  5455   004582  2EE8               	decfsz	wreg,f,c
  5456   004584  EFBC  F022         	goto	u4725
  5457   004588  51AE               	movf	??_floorf& (0+255),w,b
  5458   00458A  11AF               	iorwf	(??_floorf+1)& (0+255),w,b
  5459   00458C  11B0               	iorwf	(??_floorf+2)& (0+255),w,b
  5460   00458E  11B1               	iorwf	(??_floorf+3)& (0+255),w,b
  5461   004590  A4D8               	btfss	status,2,c
  5462   004592  EFCD  F022         	goto	u4731
  5463   004596  EFCF  F022         	goto	u4730
  5464   00459A                     u4731:
  5465   00459A  EFD9  F022         	goto	l4975
  5466   00459E                     u4730:
  5467   00459E                     
  5468                           ; BSR set to: 0
  5469   00459E  0E00               	movlw	0
  5470   0045A0  6FBA               	movwf	floorf@u& (0+255),b
  5471   0045A2  0E00               	movlw	0
  5472   0045A4  6FBB               	movwf	(floorf@u+1)& (0+255),b
  5473   0045A6  0E00               	movlw	0
  5474   0045A8  6FBC               	movwf	(floorf@u+2)& (0+255),b
  5475   0045AA  0E00               	movlw	0
  5476   0045AC  6FBD               	movwf	(floorf@u+3)& (0+255),b
  5477   0045AE  EFF5  F022         	goto	l4979
  5478   0045B2                     l4975:
  5479                           
  5480                           ; BSR set to: 0
  5481   0045B2  90D8               	bcf	status,0,c
  5482   0045B4  35BA               	rlcf	floorf@u& (0+255),w,b
  5483   0045B6  6FAE               	movwf	??_floorf& (0+255),b
  5484   0045B8  35BB               	rlcf	(floorf@u+1)& (0+255),w,b
  5485   0045BA  6FAF               	movwf	(??_floorf+1)& (0+255),b
  5486   0045BC  35BC               	rlcf	(floorf@u+2)& (0+255),w,b
  5487   0045BE  6FB0               	movwf	(??_floorf+2)& (0+255),b
  5488   0045C0  35BD               	rlcf	(floorf@u+3)& (0+255),w,b
  5489   0045C2  6FB1               	movwf	(??_floorf+3)& (0+255),b
  5490   0045C4  51AE               	movf	??_floorf& (0+255),w,b
  5491   0045C6  11AF               	iorwf	(??_floorf+1)& (0+255),w,b
  5492   0045C8  11B0               	iorwf	(??_floorf+2)& (0+255),w,b
  5493   0045CA  11B1               	iorwf	(??_floorf+3)& (0+255),w,b
  5494   0045CC  B4D8               	btfsc	status,2,c
  5495   0045CE  EFEB  F022         	goto	u4741
  5496   0045D2  EFED  F022         	goto	u4740
  5497   0045D6                     u4741:
  5498   0045D6  EFF5  F022         	goto	l4979
  5499   0045DA                     u4740:
  5500   0045DA                     
  5501                           ; BSR set to: 0
  5502   0045DA  0E00               	movlw	0
  5503   0045DC  6FBA               	movwf	floorf@u& (0+255),b
  5504   0045DE  0E00               	movlw	0
  5505   0045E0  6FBB               	movwf	(floorf@u+1)& (0+255),b
  5506   0045E2  0E80               	movlw	128
  5507   0045E4  6FBC               	movwf	(floorf@u+2)& (0+255),b
  5508   0045E6  0EBF               	movlw	191
  5509   0045E8  6FBD               	movwf	(floorf@u+3)& (0+255),b
  5510   0045EA                     l4979:
  5511                           
  5512                           ; BSR set to: 0
  5513   0045EA  C0BA  F0AA         	movff	floorf@u,?_floorf
  5514   0045EE  C0BB  F0AB         	movff	floorf@u+1,?_floorf+1
  5515   0045F2  C0BC  F0AC         	movff	floorf@u+2,?_floorf+2
  5516   0045F6  C0BD  F0AD         	movff	floorf@u+3,?_floorf+3
  5517   0045FA                     l1584:
  5518                           
  5519                           ; BSR set to: 0
  5520   0045FA  0012               	return		;funcret
  5521   0045FC                     __end_of_floorf:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function ___fpclassifyf *****************
  5525 ;; Defined at:
  5526 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  x               4    0[BANK0 ] float 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  u               4   10[BANK0 ] struct .
  5531 ;;  e               2    8[BANK0 ] int 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  2    0[BANK0 ] int 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5541 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;Total ram usage:       14 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 7
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_efgtoa
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text10
  5556   005188                     __ptext10:
  5557                           	callstack 0
  5558   005188                     ___fpclassifyf:
  5559                           	callstack 19
  5560   005188  C04A  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5561   00518C  C04B  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5562   005190  C04C  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5563   005194  C04D  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5564   005198  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5565   00519C  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5566   0051A0  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5567   0051A4  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5568   0051A8  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5569   0051AC  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5570   0051B0  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5571   0051B4  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5572   0051B8  0E18               	movlw	24
  5573   0051BA  EFE5  F028         	goto	u4560
  5574   0051BE                     u4565:
  5575   0051BE  0100               	movlb	0	; () banked
  5576   0051C0  90D8               	bcf	status,0,c
  5577   0051C2  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5578   0051C4  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5579   0051C6  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5580   0051C8  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5581   0051CA                     u4560:
  5582   0051CA  2EE8               	decfsz	wreg,f,c
  5583   0051CC  EFDF  F028         	goto	u4565
  5584   0051D0  5164               	movf	??___fpclassifyf& (0+255),w,b
  5585   0051D2  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5586   0051D4  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5587   0051D6  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5588   0051D8  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5589   0051DA  A4D8               	btfss	status,2,c
  5590   0051DC  EFF2  F028         	goto	u4571
  5591   0051E0  EFF4  F028         	goto	u4570
  5592   0051E4                     u4571:
  5593   0051E4  EF14  F029         	goto	l4937
  5594   0051E8                     u4570:
  5595   0051E8                     
  5596                           ; BSR set to: 0
  5597   0051E8  90D8               	bcf	status,0,c
  5598   0051EA  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5599   0051EC  6F64               	movwf	??___fpclassifyf& (0+255),b
  5600   0051EE  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5601   0051F0  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5602   0051F2  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5603   0051F4  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5604   0051F6  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5605   0051F8  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5606   0051FA  5164               	movf	??___fpclassifyf& (0+255),w,b
  5607   0051FC  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5608   0051FE  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5609   005200  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5610   005202  A4D8               	btfss	status,2,c
  5611   005204  EF06  F029         	goto	u4581
  5612   005208  EF08  F029         	goto	u4580
  5613   00520C                     u4581:
  5614   00520C  EF0E  F029         	goto	l4933
  5615   005210                     u4580:
  5616   005210                     
  5617                           ; BSR set to: 0
  5618   005210  0E00               	movlw	0
  5619   005212  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5620   005214  0E02               	movlw	2
  5621   005216  6F60               	movwf	?___fpclassifyf& (0+255),b
  5622   005218  EF43  F029         	goto	l1570
  5623   00521C                     l4933:
  5624                           
  5625                           ; BSR set to: 0
  5626   00521C  0E00               	movlw	0
  5627   00521E  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5628   005220  0E03               	movlw	3
  5629   005222  6F60               	movwf	?___fpclassifyf& (0+255),b
  5630   005224  EF43  F029         	goto	l1570
  5631   005228                     l4937:
  5632                           
  5633                           ; BSR set to: 0
  5634   005228  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5635   00522A  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5636   00522C  A4D8               	btfss	status,2,c
  5637   00522E  EF1B  F029         	goto	u4591
  5638   005232  EF1D  F029         	goto	u4590
  5639   005236                     u4591:
  5640   005236  EF3F  F029         	goto	l4943
  5641   00523A                     u4590:
  5642   00523A                     
  5643                           ; BSR set to: 0
  5644   00523A  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5645   00523E  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5646   005242  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5647   005246  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5648   00524A  0E09               	movlw	9
  5649   00524C                     u4605:
  5650   00524C  90D8               	bcf	status,0,c
  5651   00524E  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5652   005250  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5653   005252  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5654   005254  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5655   005256  2EE8               	decfsz	wreg,f,c
  5656   005258  EF26  F029         	goto	u4605
  5657   00525C  5164               	movf	??___fpclassifyf& (0+255),w,b
  5658   00525E  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5659   005260  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5660   005262  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5661   005264  B4D8               	btfsc	status,2,c
  5662   005266  EF37  F029         	goto	u4611
  5663   00526A  EF3A  F029         	goto	u4610
  5664   00526E                     u4611:
  5665   00526E  0E01               	movlw	1
  5666   005270  EF3B  F029         	goto	u4620
  5667   005274                     u4610:
  5668   005274  0E00               	movlw	0
  5669   005276                     u4620:
  5670   005276  6F60               	movwf	?___fpclassifyf& (0+255),b
  5671   005278  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5672   00527A  EF43  F029         	goto	l1570
  5673   00527E                     l4943:
  5674                           
  5675                           ; BSR set to: 0
  5676   00527E  0E00               	movlw	0
  5677   005280  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5678   005282  0E04               	movlw	4
  5679   005284  6F60               	movwf	?___fpclassifyf& (0+255),b
  5680   005286                     l1570:
  5681                           
  5682                           ; BSR set to: 0
  5683   005286  0012               	return		;funcret
  5684   005288                     __end_of___fpclassifyf:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function ___fltol *****************
  5688 ;; Defined at:
  5689 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  f1              4    0[BANK0 ] int 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  exp1            1    9[BANK0 ] unsigned char 
  5694 ;;  sign1           1    8[BANK0 ] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4    0[BANK0 ] long 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5704 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;Total ram usage:       10 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 7
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_efgtoa
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text11
  5719   004F7A                     __ptext11:
  5720                           	callstack 0
  5721   004F7A                     ___fltol:
  5722                           	callstack 19
  5723   004F7A  0100               	movlb	0	; () banked
  5724   004F7C  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5725   004F7E  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5726   004F80  6F69               	movwf	___fltol@exp1& (0+255),b
  5727   004F82  5169               	movf	___fltol@exp1& (0+255),w,b
  5728   004F84  A4D8               	btfss	status,2,c
  5729   004F86  EFC7  F027         	goto	u4461
  5730   004F8A  EFC9  F027         	goto	u4460
  5731   004F8E                     u4461:
  5732   004F8E  EFD3  F027         	goto	l4869
  5733   004F92                     u4460:
  5734   004F92                     l4865:
  5735                           
  5736                           ; BSR set to: 0
  5737   004F92  0E00               	movlw	0
  5738   004F94  6F60               	movwf	?___fltol& (0+255),b
  5739   004F96  0E00               	movlw	0
  5740   004F98  6F61               	movwf	(?___fltol+1)& (0+255),b
  5741   004F9A  0E00               	movlw	0
  5742   004F9C  6F62               	movwf	(?___fltol+2)& (0+255),b
  5743   004F9E  0E00               	movlw	0
  5744   004FA0  6F63               	movwf	(?___fltol+3)& (0+255),b
  5745   004FA2  EF40  F028         	goto	l1043
  5746   004FA6                     l4869:
  5747                           
  5748                           ; BSR set to: 0
  5749   004FA6  C060  F064         	movff	___fltol@f1,??___fltol
  5750   004FAA  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5751   004FAE  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5752   004FB2  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5753   004FB6  0E20               	movlw	32
  5754   004FB8  EFE3  F027         	goto	u4470
  5755   004FBC                     u4475:
  5756   004FBC  90D8               	bcf	status,0,c
  5757   004FBE  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5758   004FC0  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5759   004FC2  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5760   004FC4  3364               	rrcf	??___fltol& (0+255),f,b
  5761   004FC6                     u4470:
  5762   004FC6  2EE8               	decfsz	wreg,f,c
  5763   004FC8  EFDE  F027         	goto	u4475
  5764   004FCC  5164               	movf	??___fltol& (0+255),w,b
  5765   004FCE  6F68               	movwf	___fltol@sign1& (0+255),b
  5766   004FD0                     
  5767                           ; BSR set to: 0
  5768   004FD0  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5769   004FD2                     
  5770                           ; BSR set to: 0
  5771   004FD2  0EFF               	movlw	255
  5772   004FD4  1760               	andwf	___fltol@f1& (0+255),f,b
  5773   004FD6  0EFF               	movlw	255
  5774   004FD8  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5775   004FDA  0EFF               	movlw	255
  5776   004FDC  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5777   004FDE  0E00               	movlw	0
  5778   004FE0  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5779   004FE2                     
  5780                           ; BSR set to: 0
  5781   004FE2  0E96               	movlw	150
  5782   004FE4  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5783   004FE6                     
  5784                           ; BSR set to: 0
  5785   004FE6  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  5786   004FE8  EFFA  F027         	goto	u4480
  5787   004FEC  EFF8  F027         	goto	u4481
  5788   004FF0                     u4481:
  5789   004FF0  EF10  F028         	goto	l4889
  5790   004FF4                     u4480:
  5791   004FF4                     
  5792                           ; BSR set to: 0
  5793   004FF4  5169               	movf	___fltol@exp1& (0+255),w,b
  5794   004FF6  0A80               	xorlw	128
  5795   004FF8  0F97               	addlw	151
  5796   004FFA  B0D8               	btfsc	status,0,c
  5797   004FFC  EF02  F028         	goto	u4491
  5798   005000  EF04  F028         	goto	u4490
  5799   005004                     u4491:
  5800   005004  EF06  F028         	goto	l4885
  5801   005008                     u4490:
  5802   005008  EFC9  F027         	goto	l4865
  5803   00500C                     l4885:
  5804                           
  5805                           ; BSR set to: 0
  5806   00500C  90D8               	bcf	status,0,c
  5807   00500E  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5808   005010  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5809   005012  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5810   005014  3360               	rrcf	___fltol@f1& (0+255),f,b
  5811   005016                     
  5812                           ; BSR set to: 0
  5813   005016  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5814   005018  EF06  F028         	goto	l4885
  5815   00501C  EF28  F028         	goto	l4899
  5816   005020                     l4889:
  5817                           
  5818                           ; BSR set to: 0
  5819   005020  0E1F               	movlw	31
  5820   005022  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5821   005024  EF16  F028         	goto	u4501
  5822   005028  EF18  F028         	goto	u4500
  5823   00502C                     u4501:
  5824   00502C  EF20  F028         	goto	l4897
  5825   005030                     u4500:
  5826   005030  EFC9  F027         	goto	l4865
  5827   005034                     l4895:
  5828                           
  5829                           ; BSR set to: 0
  5830   005034  90D8               	bcf	status,0,c
  5831   005036  3760               	rlcf	___fltol@f1& (0+255),f,b
  5832   005038  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5833   00503A  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5834   00503C  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5835   00503E  0769               	decf	___fltol@exp1& (0+255),f,b
  5836   005040                     l4897:
  5837                           
  5838                           ; BSR set to: 0
  5839   005040  5169               	movf	___fltol@exp1& (0+255),w,b
  5840   005042  A4D8               	btfss	status,2,c
  5841   005044  EF26  F028         	goto	u4511
  5842   005048  EF28  F028         	goto	u4510
  5843   00504C                     u4511:
  5844   00504C  EF1A  F028         	goto	l4895
  5845   005050                     u4510:
  5846   005050                     l4899:
  5847                           
  5848                           ; BSR set to: 0
  5849   005050  5168               	movf	___fltol@sign1& (0+255),w,b
  5850   005052  B4D8               	btfsc	status,2,c
  5851   005054  EF2E  F028         	goto	u4521
  5852   005058  EF30  F028         	goto	u4520
  5853   00505C                     u4521:
  5854   00505C  EF38  F028         	goto	l4903
  5855   005060                     u4520:
  5856   005060                     
  5857                           ; BSR set to: 0
  5858   005060  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5859   005062  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5860   005064  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5861   005066  6D60               	negf	___fltol@f1& (0+255),b
  5862   005068  0E00               	movlw	0
  5863   00506A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5864   00506C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5865   00506E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5866   005070                     l4903:
  5867                           
  5868                           ; BSR set to: 0
  5869   005070  C060  F060         	movff	___fltol@f1,?___fltol
  5870   005074  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5871   005078  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5872   00507C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5873   005080                     l1043:
  5874                           
  5875                           ; BSR set to: 0
  5876   005080  0012               	return		;funcret
  5877   005082                     __end_of___fltol:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function ___flneg *****************
  5881 ;; Defined at:
  5882 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  f1              4    0[BANK0 ] long 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  4    0[BANK0 ] long 
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;Total ram usage:        4 bytes
  5901 ;; Hardware stack levels used: 1
  5902 ;; Hardware stack levels required when called: 7
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_efgtoa
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text12
  5911   00701C                     __ptext12:
  5912                           	callstack 0
  5913   00701C                     ___flneg:
  5914                           	callstack 19
  5915   00701C  0100               	movlb	0	; () banked
  5916   00701E  5160               	movf	___flneg@f1& (0+255),w,b
  5917   007020  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5918   007022  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5919   007024  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5920   007026  B4D8               	btfsc	status,2,c
  5921   007028  EF18  F038         	goto	u4451
  5922   00702C  EF1A  F038         	goto	u4450
  5923   007030                     u4451:
  5924   007030  EF22  F038         	goto	l4859
  5925   007034                     u4450:
  5926   007034                     
  5927                           ; BSR set to: 0
  5928   007034  0E00               	movlw	0
  5929   007036  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5930   007038  0E00               	movlw	0
  5931   00703A  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5932   00703C  0E00               	movlw	0
  5933   00703E  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5934   007040  0E80               	movlw	128
  5935   007042  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5936   007044                     l4859:
  5937                           
  5938                           ; BSR set to: 0
  5939   007044  C060  F060         	movff	___flneg@f1,?___flneg
  5940   007048  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5941   00704C  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5942   007050  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5943   007054                     
  5944                           ; BSR set to: 0
  5945   007054  0012               	return		;funcret
  5946   007056                     __end_of___flneg:
  5947                           	callstack 0
  5948                           
  5949 ;; *************** function _dtoa *****************
  5950 ;; Defined at:
  5951 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  5954 ;;		 -> sprintf@f(11), 
  5955 ;;  d               8   29[BANK0 ] long long 
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  n               8   51[BANK0 ] long long 
  5958 ;;  i               2   59[BANK0 ] int 
  5959 ;;  w               2   49[BANK0 ] int 
  5960 ;;  p               2   47[BANK0 ] int 
  5961 ;;  s               1   61[BANK0 ] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      void 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5971 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;Total ram usage:       35 bytes
  5976 ;; Hardware stack levels used: 1
  5977 ;; Hardware stack levels required when called: 11
  5978 ;; This function calls:
  5979 ;;		___aodiv
  5980 ;;		___aomod
  5981 ;;		_abs
  5982 ;;		_pad
  5983 ;; This function is called by:
  5984 ;;		_vfpfcnvrt
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text13
  5989   00415E                     __ptext13:
  5990                           	callstack 0
  5991   00415E                     _dtoa:
  5992                           	callstack 16
  5993   00415E                     
  5994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5995   00415E  C07D  F093         	movff	dtoa@d,dtoa@n
  5996   004162  C07E  F094         	movff	dtoa@d+1,dtoa@n+1
  5997   004166  C07F  F095         	movff	dtoa@d+2,dtoa@n+2
  5998   00416A  C080  F096         	movff	dtoa@d+3,dtoa@n+3
  5999   00416E  C081  F097         	movff	dtoa@d+4,dtoa@n+4
  6000   004172  C082  F098         	movff	dtoa@d+5,dtoa@n+5
  6001   004176  C083  F099         	movff	dtoa@d+6,dtoa@n+6
  6002   00417A  C084  F09A         	movff	dtoa@d+7,dtoa@n+7
  6003   00417E                     
  6004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  6005   00417E  0100               	movlb	0	; () banked
  6006   004180  BF9A               	btfsc	(dtoa@n+7)& (0+255),7,b
  6007   004182  EFC5  F020         	goto	u4921
  6008   004186  EFC8  F020         	goto	u4920
  6009   00418A                     u4921:
  6010   00418A  0E01               	movlw	1
  6011   00418C  EFC9  F020         	goto	u4930
  6012   004190                     u4920:
  6013   004190  0E00               	movlw	0
  6014   004192                     u4930:
  6015   004192  6F9D               	movwf	dtoa@s& (0+255),b
  6016   004194                     
  6017                           ; BSR set to: 0
  6018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  6019   004194  519D               	movf	dtoa@s& (0+255),w,b
  6020   004196  B4D8               	btfsc	status,2,c
  6021   004198  EFD0  F020         	goto	u4941
  6022   00419C  EFD2  F020         	goto	u4940
  6023   0041A0                     u4941:
  6024   0041A0  EFE2  F020         	goto	l5105
  6025   0041A4                     u4940:
  6026   0041A4                     
  6027                           ; BSR set to: 0
  6028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  6029   0041A4  1F9A               	comf	(dtoa@n+7)& (0+255),f,b
  6030   0041A6  1F99               	comf	(dtoa@n+6)& (0+255),f,b
  6031   0041A8  1F98               	comf	(dtoa@n+5)& (0+255),f,b
  6032   0041AA  1F97               	comf	(dtoa@n+4)& (0+255),f,b
  6033   0041AC  1F96               	comf	(dtoa@n+3)& (0+255),f,b
  6034   0041AE  1F95               	comf	(dtoa@n+2)& (0+255),f,b
  6035   0041B0  1F94               	comf	(dtoa@n+1)& (0+255),f,b
  6036   0041B2  6D93               	negf	dtoa@n& (0+255),b
  6037   0041B4  0E00               	movlw	0
  6038   0041B6  2394               	addwfc	(dtoa@n+1)& (0+255),f,b
  6039   0041B8  2395               	addwfc	(dtoa@n+2)& (0+255),f,b
  6040   0041BA  2396               	addwfc	(dtoa@n+3)& (0+255),f,b
  6041   0041BC  2397               	addwfc	(dtoa@n+4)& (0+255),f,b
  6042   0041BE  2398               	addwfc	(dtoa@n+5)& (0+255),f,b
  6043   0041C0  2399               	addwfc	(dtoa@n+6)& (0+255),f,b
  6044   0041C2  239A               	addwfc	(dtoa@n+7)& (0+255),f,b
  6045   0041C4                     l5105:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  6049   0041C4  0101               	movlb	1	; () banked
  6050   0041C6  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  6051   0041C8  EFF0  F020         	goto	u4950
  6052   0041CC  51AD               	movf	(_prec+1)& (0+255),w,b
  6053   0041CE  E106               	bnz	u4951
  6054   0041D0  05AC               	decf	_prec& (0+255),w,b
  6055   0041D2  B0D8               	btfsc	status,0,c
  6056   0041D4  EFEE  F020         	goto	u4951
  6057   0041D8  EFF0  F020         	goto	u4950
  6058   0041DC                     u4951:
  6059   0041DC  EFF7  F020         	goto	l1465
  6060   0041E0                     u4950:
  6061   0041E0                     
  6062                           ; BSR set to: 1
  6063   0041E0  0E00               	movlw	0
  6064   0041E2  0100               	movlb	0	; () banked
  6065   0041E4  6F90               	movwf	(dtoa@p+1)& (0+255),b
  6066   0041E6  0E01               	movlw	1
  6067   0041E8  6F8F               	movwf	dtoa@p& (0+255),b
  6068   0041EA  EFFB  F020         	goto	l1467
  6069   0041EE                     l1465:
  6070                           
  6071                           ; BSR set to: 1
  6072   0041EE  C1AC  F08F         	movff	_prec,dtoa@p
  6073   0041F2  C1AD  F090         	movff	_prec+1,dtoa@p+1
  6074   0041F6                     l1467:
  6075                           
  6076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  6077   0041F6  C1AA  F091         	movff	_width,dtoa@w
  6078   0041FA  C1AB  F092         	movff	_width+1,dtoa@w+1
  6079   0041FE                     
  6080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  6081   0041FE  0100               	movlb	0	; () banked
  6082   004200  519D               	movf	dtoa@s& (0+255),w,b
  6083   004202  B4D8               	btfsc	status,2,c
  6084   004204  EF06  F021         	goto	u4961
  6085   004208  EF08  F021         	goto	u4960
  6086   00420C                     u4961:
  6087   00420C  EF1F  F021         	goto	l1468
  6088   004210                     u4960:
  6089   004210                     
  6090                           ; BSR set to: 0
  6091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  6092   004210  0791               	decf	dtoa@w& (0+255),f,b
  6093   004212  A0D8               	btfss	status,0,c
  6094   004214  0792               	decf	(dtoa@w+1)& (0+255),f,b
  6095   004216                     
  6096                           ; BSR set to: 0
  6097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  6098   004216  519D               	movf	dtoa@s& (0+255),w,b
  6099   004218  A4D8               	btfss	status,2,c
  6100   00421A  EF11  F021         	goto	u4971
  6101   00421E  EF13  F021         	goto	u4970
  6102   004222                     u4971:
  6103   004222  EF19  F021         	goto	l5117
  6104   004226                     u4970:
  6105   004226                     
  6106                           ; BSR set to: 0
  6107   004226  0E00               	movlw	0
  6108   004228  6F8E               	movwf	(_dtoa$2903+1)& (0+255),b
  6109   00422A  0E2B               	movlw	43
  6110   00422C  6F8D               	movwf	_dtoa$2903& (0+255),b
  6111   00422E  EF1D  F021         	goto	l5119
  6112   004232                     l5117:
  6113                           
  6114                           ; BSR set to: 0
  6115   004232  0E00               	movlw	0
  6116   004234  6F8E               	movwf	(_dtoa$2903+1)& (0+255),b
  6117   004236  0E2D               	movlw	45
  6118   004238  6F8D               	movwf	_dtoa$2903& (0+255),b
  6119   00423A                     l5119:
  6120                           
  6121                           ; BSR set to: 0
  6122   00423A  C08D  F09D         	movff	_dtoa$2903,dtoa@s
  6123   00423E                     l1468:
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  6127   00423E  0E00               	movlw	0
  6128   004240  6F9C               	movwf	(dtoa@i+1)& (0+255),b
  6129   004242  0E4F               	movlw	79
  6130   004244  6F9B               	movwf	dtoa@i& (0+255),b
  6131   004246                     
  6132                           ; BSR set to: 0
  6133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  6134   004246  0E00               	movlw	0
  6135   004248  0102               	movlb	2	; () banked
  6136   00424A  6F8B               	movwf	(_dbuf+79)& (0+255),b
  6137                           
  6138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6139   00424C  EFA5  F021         	goto	l5133
  6140   004250                     l5123:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  6144   004250  079B               	decf	dtoa@i& (0+255),f,b
  6145   004252  A0D8               	btfss	status,0,c
  6146   004254  079C               	decf	(dtoa@i+1)& (0+255),f,b
  6147   004256                     
  6148                           ; BSR set to: 0
  6149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6150   004256  0E3C               	movlw	low _dbuf
  6151   004258  259B               	addwf	dtoa@i& (0+255),w,b
  6152   00425A  6ED9               	movwf	fsr2l,c
  6153   00425C  0E02               	movlw	high _dbuf
  6154   00425E  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  6155   004260  6EDA               	movwf	fsr2h,c
  6156   004262  C093  F060         	movff	dtoa@n,___aomod@dividend
  6157   004266  C094  F061         	movff	dtoa@n+1,___aomod@dividend+1
  6158   00426A  C095  F062         	movff	dtoa@n+2,___aomod@dividend+2
  6159   00426E  C096  F063         	movff	dtoa@n+3,___aomod@dividend+3
  6160   004272  C097  F064         	movff	dtoa@n+4,___aomod@dividend+4
  6161   004276  C098  F065         	movff	dtoa@n+5,___aomod@dividend+5
  6162   00427A  C099  F066         	movff	dtoa@n+6,___aomod@dividend+6
  6163   00427E  C09A  F067         	movff	dtoa@n+7,___aomod@dividend+7
  6164   004282  0E0A               	movlw	10
  6165   004284  6F68               	movwf	___aomod@divisor& (0+255),b
  6166   004286  0E00               	movlw	0
  6167   004288  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  6168   00428A  0E00               	movlw	0
  6169   00428C  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  6170   00428E  0E00               	movlw	0
  6171   004290  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  6172   004292  0E00               	movlw	0
  6173   004294  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  6174   004296  0E00               	movlw	0
  6175   004298  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  6176   00429A  0E00               	movlw	0
  6177   00429C  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  6178   00429E  0E00               	movlw	0
  6179   0042A0  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  6180   0042A2  EC0A  F027         	call	___aomod	;wreg free
  6181   0042A6  C060  F085         	movff	?___aomod,??_dtoa
  6182   0042AA  C061  F086         	movff	?___aomod+1,??_dtoa+1
  6183   0042AE  C062  F087         	movff	?___aomod+2,??_dtoa+2
  6184   0042B2  C063  F088         	movff	?___aomod+3,??_dtoa+3
  6185   0042B6  C064  F089         	movff	?___aomod+4,??_dtoa+4
  6186   0042BA  C065  F08A         	movff	?___aomod+5,??_dtoa+5
  6187   0042BE  C066  F08B         	movff	?___aomod+6,??_dtoa+6
  6188   0042C2  C067  F08C         	movff	?___aomod+7,??_dtoa+7
  6189   0042C6  C085  F072         	movff	??_dtoa,abs@a
  6190   0042CA  C086  F073         	movff	??_dtoa+1,abs@a+1
  6191   0042CE  EC72  F037         	call	_abs	;wreg free
  6192   0042D2  0100               	movlb	0	; () banked
  6193   0042D4  5172               	movf	?_abs& (0+255),w,b
  6194   0042D6  0F30               	addlw	48
  6195   0042D8  6EDF               	movwf	indf2,c
  6196   0042DA                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6199   0042DA  078F               	decf	dtoa@p& (0+255),f,b
  6200   0042DC  A0D8               	btfss	status,0,c
  6201   0042DE  0790               	decf	(dtoa@p+1)& (0+255),f,b
  6202   0042E0                     
  6203                           ; BSR set to: 0
  6204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6205   0042E0  0791               	decf	dtoa@w& (0+255),f,b
  6206   0042E2  A0D8               	btfss	status,0,c
  6207   0042E4  0792               	decf	(dtoa@w+1)& (0+255),f,b
  6208   0042E6                     
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6211   0042E6  C093  F060         	movff	dtoa@n,___aodiv@dividend
  6212   0042EA  C094  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  6213   0042EE  C095  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  6214   0042F2  C096  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  6215   0042F6  C097  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  6216   0042FA  C098  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  6217   0042FE  C099  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  6218   004302  C09A  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  6219   004306  0E0A               	movlw	10
  6220   004308  6F68               	movwf	___aodiv@divisor& (0+255),b
  6221   00430A  0E00               	movlw	0
  6222   00430C  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  6223   00430E  0E00               	movlw	0
  6224   004310  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  6225   004312  0E00               	movlw	0
  6226   004314  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  6227   004316  0E00               	movlw	0
  6228   004318  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  6229   00431A  0E00               	movlw	0
  6230   00431C  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  6231   00431E  0E00               	movlw	0
  6232   004320  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  6233   004322  0E00               	movlw	0
  6234   004324  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  6235   004326  ECD4  F024         	call	___aodiv	;wreg free
  6236   00432A  C060  F093         	movff	?___aodiv,dtoa@n
  6237   00432E  C061  F094         	movff	?___aodiv+1,dtoa@n+1
  6238   004332  C062  F095         	movff	?___aodiv+2,dtoa@n+2
  6239   004336  C063  F096         	movff	?___aodiv+3,dtoa@n+3
  6240   00433A  C064  F097         	movff	?___aodiv+4,dtoa@n+4
  6241   00433E  C065  F098         	movff	?___aodiv+5,dtoa@n+5
  6242   004342  C066  F099         	movff	?___aodiv+6,dtoa@n+6
  6243   004346  C067  F09A         	movff	?___aodiv+7,dtoa@n+7
  6244   00434A                     l5133:
  6245                           
  6246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6247   00434A  0100               	movlb	0	; () banked
  6248   00434C  BF9C               	btfsc	(dtoa@i+1)& (0+255),7,b
  6249   00434E  EFB1  F021         	goto	u4981
  6250   004352  519C               	movf	(dtoa@i+1)& (0+255),w,b
  6251   004354  E108               	bnz	u4980
  6252   004356  059B               	decf	dtoa@i& (0+255),w,b
  6253   004358  A0D8               	btfss	status,0,c
  6254   00435A  EFB1  F021         	goto	u4981
  6255   00435E  EFB3  F021         	goto	u4980
  6256   004362                     u4981:
  6257   004362  EFCF  F021         	goto	l5139
  6258   004366                     u4980:
  6259   004366                     
  6260                           ; BSR set to: 0
  6261   004366  5193               	movf	dtoa@n& (0+255),w,b
  6262   004368  1194               	iorwf	(dtoa@n+1)& (0+255),w,b
  6263   00436A  1195               	iorwf	(dtoa@n+2)& (0+255),w,b
  6264   00436C  1196               	iorwf	(dtoa@n+3)& (0+255),w,b
  6265   00436E  1197               	iorwf	(dtoa@n+4)& (0+255),w,b
  6266   004370  1198               	iorwf	(dtoa@n+5)& (0+255),w,b
  6267   004372  1199               	iorwf	(dtoa@n+6)& (0+255),w,b
  6268   004374  119A               	iorwf	(dtoa@n+7)& (0+255),w,b
  6269   004376  A4D8               	btfss	status,2,c
  6270   004378  EFC0  F021         	goto	u4991
  6271   00437C  EFC2  F021         	goto	u4990
  6272   004380                     u4991:
  6273   004380  EF28  F021         	goto	l5123
  6274   004384                     u4990:
  6275   004384                     
  6276                           ; BSR set to: 0
  6277   004384  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  6278   004386  EFCF  F021         	goto	u5000
  6279   00438A  5190               	movf	(dtoa@p+1)& (0+255),w,b
  6280   00438C  E106               	bnz	u5001
  6281   00438E  058F               	decf	dtoa@p& (0+255),w,b
  6282   004390  B0D8               	btfsc	status,0,c
  6283   004392  EFCD  F021         	goto	u5001
  6284   004396  EFCF  F021         	goto	u5000
  6285   00439A                     u5001:
  6286   00439A  EF28  F021         	goto	l5123
  6287   00439E                     u5000:
  6288   00439E                     l5139:
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  6292   00439E  519D               	movf	dtoa@s& (0+255),w,b
  6293   0043A0  B4D8               	btfsc	status,2,c
  6294   0043A2  EFD5  F021         	goto	u5011
  6295   0043A6  EFD7  F021         	goto	u5010
  6296   0043AA                     u5011:
  6297   0043AA  EFE2  F021         	goto	l5145
  6298   0043AE                     u5010:
  6299   0043AE                     
  6300                           ; BSR set to: 0
  6301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6302   0043AE  079B               	decf	dtoa@i& (0+255),f,b
  6303   0043B0  A0D8               	btfss	status,0,c
  6304   0043B2  079C               	decf	(dtoa@i+1)& (0+255),f,b
  6305   0043B4                     
  6306                           ; BSR set to: 0
  6307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  6308   0043B4  0E3C               	movlw	low _dbuf
  6309   0043B6  259B               	addwf	dtoa@i& (0+255),w,b
  6310   0043B8  6ED9               	movwf	fsr2l,c
  6311   0043BA  0E02               	movlw	high _dbuf
  6312   0043BC  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  6313   0043BE  6EDA               	movwf	fsr2h,c
  6314   0043C0  C09D  FFDF         	movff	dtoa@s,indf2
  6315   0043C4                     l5145:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6319   0043C4  C07B  F070         	movff	dtoa@fp,pad@fp
  6320   0043C8  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  6321   0043CC  0E3C               	movlw	low _dbuf
  6322   0043CE  259B               	addwf	dtoa@i& (0+255),w,b
  6323   0043D0  6F72               	movwf	pad@buf& (0+255),b
  6324   0043D2  0E02               	movlw	high _dbuf
  6325   0043D4  219C               	addwfc	(dtoa@i+1)& (0+255),w,b
  6326   0043D6  6F73               	movwf	(pad@buf+1)& (0+255),b
  6327   0043D8  C091  F074         	movff	dtoa@w,pad@p
  6328   0043DC  C092  F075         	movff	dtoa@w+1,pad@p+1
  6329   0043E0  ECA1  F030         	call	_pad	;wreg free
  6330   0043E4  0012               	return		;funcret
  6331   0043E6                     __end_of_dtoa:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _pad *****************
  6335 ;; Defined at:
  6336 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6339 ;;		 -> sprintf@f(11), 
  6340 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  6341 ;;		 -> dbuf(80), 
  6342 ;;  p               2   20[BANK0 ] int 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  w               2   25[BANK0 ] int 
  6345 ;;  i               2   23[BANK0 ] int 
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6355 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;Total ram usage:       11 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 10
  6362 ;; This function calls:
  6363 ;;		_fputc
  6364 ;;		_fputs
  6365 ;; This function is called by:
  6366 ;;		_dtoa
  6367 ;;		_efgtoa
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text14
  6372   006142                     __ptext14:
  6373                           	callstack 0
  6374   006142                     _pad:
  6375                           	callstack 16
  6376   006142                     
  6377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6378   006142  0100               	movlb	0	; () banked
  6379   006144  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  6380   006146  EFA7  F030         	goto	u4531
  6381   00614A  EFA9  F030         	goto	u4530
  6382   00614E                     u4531:
  6383   00614E  EFAF  F030         	goto	l4911
  6384   006152                     u4530:
  6385   006152                     
  6386                           ; BSR set to: 0
  6387   006152  C074  F079         	movff	pad@p,pad@w
  6388   006156  C075  F07A         	movff	pad@p+1,pad@w+1
  6389   00615A  EFB3  F030         	goto	l1456
  6390   00615E                     l4911:
  6391                           
  6392                           ; BSR set to: 0
  6393   00615E  0E00               	movlw	0
  6394   006160  6F7A               	movwf	(pad@w+1)& (0+255),b
  6395   006162  0E00               	movlw	0
  6396   006164  6F79               	movwf	pad@w& (0+255),b
  6397   006166                     l1456:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6401   006166  0E00               	movlw	0
  6402   006168  6F78               	movwf	(pad@i+1)& (0+255),b
  6403   00616A  0E00               	movlw	0
  6404   00616C  6F77               	movwf	pad@i& (0+255),b
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6407   00616E  EFC6  F030         	goto	l4917
  6408   006172                     l4913:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6412   006172  0E00               	movlw	0
  6413   006174  6F61               	movwf	(fputc@c+1)& (0+255),b
  6414   006176  0E20               	movlw	32
  6415   006178  6F60               	movwf	fputc@c& (0+255),b
  6416   00617A  C070  F062         	movff	pad@fp,fputc@fp
  6417   00617E  C071  F063         	movff	pad@fp+1,fputc@fp+1
  6418   006182  EC19  F02A         	call	_fputc	;wreg free
  6419   006186                     
  6420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6421   006186  0100               	movlb	0	; () banked
  6422   006188  4B77               	infsnz	pad@i& (0+255),f,b
  6423   00618A  2B78               	incf	(pad@i+1)& (0+255),f,b
  6424   00618C                     l4917:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6428   00618C  5179               	movf	pad@w& (0+255),w,b
  6429   00618E  5D77               	subwf	pad@i& (0+255),w,b
  6430   006190  5178               	movf	(pad@i+1)& (0+255),w,b
  6431   006192  0A80               	xorlw	128
  6432   006194  6F76               	movwf	??_pad& (0+255),b
  6433   006196  517A               	movf	(pad@w+1)& (0+255),w,b
  6434   006198  0A80               	xorlw	128
  6435   00619A  5976               	subwfb	??_pad& (0+255),w,b
  6436   00619C  A0D8               	btfss	status,0,c
  6437   00619E  EFD3  F030         	goto	u4541
  6438   0061A2  EFD5  F030         	goto	u4540
  6439   0061A6                     u4541:
  6440   0061A6  EFB9  F030         	goto	l4913
  6441   0061AA                     u4540:
  6442   0061AA                     
  6443                           ; BSR set to: 0
  6444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6445   0061AA  C072  F069         	movff	pad@buf,fputs@s
  6446   0061AE  C073  F06A         	movff	pad@buf+1,fputs@s+1
  6447   0061B2  C070  F06B         	movff	pad@fp,fputs@fp
  6448   0061B6  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  6449   0061BA  ECC3  F036         	call	_fputs	;wreg free
  6450   0061BE  0012               	return		;funcret
  6451   0061C0                     __end_of_pad:
  6452                           	callstack 0
  6453                           
  6454 ;; *************** function _fputs *****************
  6455 ;; Defined at:
  6456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  6459 ;;		 -> dbuf(80), 
  6460 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  6461 ;;		 -> sprintf@f(11), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  i               2   14[BANK0 ] int 
  6464 ;;  c               1   13[BANK0 ] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    9[BANK0 ] int 
  6467 ;; Registers used:
  6468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6474 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;Total ram usage:        7 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 9
  6481 ;; This function calls:
  6482 ;;		_fputc
  6483 ;; This function is called by:
  6484 ;;		_pad
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text15
  6489   006D86                     __ptext15:
  6490                           	callstack 0
  6491   006D86                     _fputs:
  6492                           	callstack 16
  6493   006D86  0E00               	movlw	0
  6494   006D88  0100               	movlb	0	; () banked
  6495   006D8A  6F6F               	movwf	(fputs@i+1)& (0+255),b
  6496   006D8C  0E00               	movlw	0
  6497   006D8E  6F6E               	movwf	fputs@i& (0+255),b
  6498   006D90  EFD6  F036         	goto	l4417
  6499   006D94                     l4413:
  6500                           
  6501                           ; BSR set to: 0
  6502   006D94  C06D  F060         	movff	fputs@c,fputc@c
  6503   006D98  6B61               	clrf	(fputc@c+1)& (0+255),b
  6504   006D9A  C06B  F062         	movff	fputs@fp,fputc@fp
  6505   006D9E  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  6506   006DA2  EC19  F02A         	call	_fputc	;wreg free
  6507   006DA6  0100               	movlb	0	; () banked
  6508   006DA8  4B6E               	infsnz	fputs@i& (0+255),f,b
  6509   006DAA  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  6510   006DAC                     l4417:
  6511                           
  6512                           ; BSR set to: 0
  6513   006DAC  516E               	movf	fputs@i& (0+255),w,b
  6514   006DAE  2569               	addwf	fputs@s& (0+255),w,b
  6515   006DB0  6ED9               	movwf	fsr2l,c
  6516   006DB2  516F               	movf	(fputs@i+1)& (0+255),w,b
  6517   006DB4  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  6518   006DB6  6EDA               	movwf	fsr2h,c
  6519   006DB8  50DF               	movf	indf2,w,c
  6520   006DBA  6F6D               	movwf	fputs@c& (0+255),b
  6521   006DBC  516D               	movf	fputs@c& (0+255),w,b
  6522   006DBE  A4D8               	btfss	status,2,c
  6523   006DC0  EFE4  F036         	goto	u3761
  6524   006DC4  EFE6  F036         	goto	u3760
  6525   006DC8                     u3761:
  6526   006DC8  EFCA  F036         	goto	l4413
  6527   006DCC                     u3760:
  6528   006DCC                     
  6529                           ; BSR set to: 0
  6530   006DCC  0012               	return		;funcret
  6531   006DCE                     __end_of_fputs:
  6532                           	callstack 0
  6533                           
  6534 ;; *************** function _fputc *****************
  6535 ;; Defined at:
  6536 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  c               2    0[BANK0 ] int 
  6539 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6540 ;;		 -> sprintf@f(11), 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2    0[BANK0 ] int 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6552 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;Total ram usage:        9 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 8
  6559 ;; This function calls:
  6560 ;;		_putch
  6561 ;; This function is called by:
  6562 ;;		_pad
  6563 ;;		_vfpfcnvrt
  6564 ;;		_fputs
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text16
  6569   005432                     __ptext16:
  6570                           	callstack 0
  6571   005432                     _fputc:
  6572                           	callstack 19
  6573   005432  0100               	movlb	0	; () banked
  6574   005434  5162               	movf	fputc@fp& (0+255),w,b
  6575   005436  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  6576   005438  B4D8               	btfsc	status,2,c
  6577   00543A  EF21  F02A         	goto	u3301
  6578   00543E  EF23  F02A         	goto	u3300
  6579   005442                     u3301:
  6580   005442  EF2C  F02A         	goto	l4171
  6581   005446                     u3300:
  6582   005446                     
  6583                           ; BSR set to: 0
  6584   005446  5162               	movf	fputc@fp& (0+255),w,b
  6585   005448  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  6586   00544A  A4D8               	btfss	status,2,c
  6587   00544C  EF2A  F02A         	goto	u3311
  6588   005450  EF2C  F02A         	goto	u3310
  6589   005454                     u3311:
  6590   005454  EF31  F02A         	goto	l4173
  6591   005458                     u3310:
  6592   005458                     l4171:
  6593                           
  6594                           ; BSR set to: 0
  6595   005458  5160               	movf	fputc@c& (0+255),w,b
  6596   00545A  EC40  F039         	call	_putch
  6597   00545E  EF7E  F02A         	goto	l1616
  6598   005462                     l4173:
  6599                           
  6600                           ; BSR set to: 0
  6601   005462  EE20 F009          	lfsr	2,9
  6602   005466  5162               	movf	fputc@fp& (0+255),w,b
  6603   005468  26D9               	addwf	fsr2l,f,c
  6604   00546A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  6605   00546C  22DA               	addwfc	fsr2h,f,c
  6606   00546E  50DE               	movf	postinc2,w,c
  6607   005470  10DE               	iorwf	postinc2,w,c
  6608   005472  B4D8               	btfsc	status,2,c
  6609   005474  EF3E  F02A         	goto	u3321
  6610   005478  EF40  F02A         	goto	u3320
  6611   00547C                     u3321:
  6612   00547C  EF5B  F02A         	goto	l4177
  6613   005480                     u3320:
  6614   005480                     
  6615                           ; BSR set to: 0
  6616   005480  EE20 F009          	lfsr	2,9
  6617   005484  5162               	movf	fputc@fp& (0+255),w,b
  6618   005486  26D9               	addwf	fsr2l,f,c
  6619   005488  5163               	movf	(fputc@fp+1)& (0+255),w,b
  6620   00548A  22DA               	addwfc	fsr2h,f,c
  6621   00548C  EE10 F003          	lfsr	1,3
  6622   005490  5162               	movf	fputc@fp& (0+255),w,b
  6623   005492  26E1               	addwf	fsr1l,f,c
  6624   005494  5163               	movf	(fputc@fp+1)& (0+255),w,b
  6625   005496  22E2               	addwfc	fsr1h,f,c
  6626   005498  50DE               	movf	postinc2,w,c
  6627   00549A  5CE6               	subwf	postinc1,w,c
  6628   00549C  50E6               	movf	postinc1,w,c
  6629   00549E  0A80               	xorlw	128
  6630   0054A0  6F68               	movwf	(??_fputc+4)& (0+255),b
  6631   0054A2  50DE               	movf	postinc2,w,c
  6632   0054A4  0A80               	xorlw	128
  6633   0054A6  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  6634   0054A8  B0D8               	btfsc	status,0,c
  6635   0054AA  EF59  F02A         	goto	u3331
  6636   0054AE  EF5B  F02A         	goto	u3330
  6637   0054B2                     u3331:
  6638   0054B2  EF7E  F02A         	goto	l1616
  6639   0054B6                     u3330:
  6640   0054B6                     l4177:
  6641                           
  6642                           ; BSR set to: 0
  6643   0054B6  EE20 F003          	lfsr	2,3
  6644   0054BA  5162               	movf	fputc@fp& (0+255),w,b
  6645   0054BC  26D9               	addwf	fsr2l,f,c
  6646   0054BE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  6647   0054C0  22DA               	addwfc	fsr2h,f,c
  6648   0054C2  CFDE F064          	movff	postinc2,??_fputc
  6649   0054C6  CFDD F065          	movff	postdec2,??_fputc+1
  6650   0054CA  C062  FFD9         	movff	fputc@fp,fsr2l
  6651   0054CE  C063  FFDA         	movff	fputc@fp+1,fsr2h
  6652   0054D2  CFDE F066          	movff	postinc2,??_fputc+2
  6653   0054D6  CFDD F067          	movff	postdec2,??_fputc+3
  6654   0054DA  5164               	movf	??_fputc& (0+255),w,b
  6655   0054DC  2566               	addwf	(??_fputc+2)& (0+255),w,b
  6656   0054DE  6ED9               	movwf	fsr2l,c
  6657   0054E0  5165               	movf	(??_fputc+1)& (0+255),w,b
  6658   0054E2  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  6659   0054E4  6EDA               	movwf	fsr2h,c
  6660   0054E6  C060  FFDF         	movff	fputc@c,indf2
  6661   0054EA  EE20 F003          	lfsr	2,3
  6662   0054EE  5162               	movf	fputc@fp& (0+255),w,b
  6663   0054F0  26D9               	addwf	fsr2l,f,c
  6664   0054F2  5163               	movf	(fputc@fp+1)& (0+255),w,b
  6665   0054F4  22DA               	addwfc	fsr2h,f,c
  6666   0054F6  2ADE               	incf	postinc2,f,c
  6667   0054F8  0E00               	movlw	0
  6668   0054FA  22DD               	addwfc	postdec2,f,c
  6669   0054FC                     l1616:
  6670   0054FC  0012               	return		;funcret
  6671   0054FE                     __end_of_fputc:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function _putch *****************
  6675 ;; Defined at:
  6676 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  c               1    wreg     unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  c               1    0[COMRAM] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used: 1
  6696 ;; Hardware stack levels required when called: 7
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_fputc
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text17
  6705   007280                     __ptext17:
  6706                           	callstack 0
  6707   007280                     _putch:
  6708                           	callstack 19
  6709   007280  0012               	return		;funcret
  6710   007282                     __end_of_putch:
  6711                           	callstack 0
  6712                           
  6713 ;; *************** function _abs *****************
  6714 ;; Defined at:
  6715 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6716 ;; Parameters:    Size  Location     Type
  6717 ;;  a               2   18[BANK0 ] int 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;		None
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  2   18[BANK0 ] int 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, status,0
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6729 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;Total ram usage:        4 bytes
  6734 ;; Hardware stack levels used: 1
  6735 ;; Hardware stack levels required when called: 7
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_dtoa
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text18
  6744   006EE4                     __ptext18:
  6745                           	callstack 0
  6746   006EE4                     _abs:
  6747                           	callstack 19
  6748   006EE4  0100               	movlb	0	; () banked
  6749   006EE6  BF73               	btfsc	(abs@a+1)& (0+255),7,b
  6750   006EE8  EF80  F037         	goto	u4550
  6751   006EEC  5173               	movf	(abs@a+1)& (0+255),w,b
  6752   006EEE  E106               	bnz	u4551
  6753   006EF0  0572               	decf	abs@a& (0+255),w,b
  6754   006EF2  B0D8               	btfsc	status,0,c
  6755   006EF4  EF7E  F037         	goto	u4551
  6756   006EF8  EF80  F037         	goto	u4550
  6757   006EFC                     u4551:
  6758   006EFC  EF8E  F037         	goto	l1575
  6759   006F00                     u4550:
  6760   006F00                     
  6761                           ; BSR set to: 0
  6762   006F00  C072  F074         	movff	abs@a,??_abs
  6763   006F04  C073  F075         	movff	abs@a+1,??_abs+1
  6764   006F08  1F74               	comf	??_abs& (0+255),f,b
  6765   006F0A  1F75               	comf	(??_abs+1)& (0+255),f,b
  6766   006F0C  4B74               	infsnz	??_abs& (0+255),f,b
  6767   006F0E  2B75               	incf	(??_abs+1)& (0+255),f,b
  6768   006F10  C074  F072         	movff	??_abs,?_abs
  6769   006F14  C075  F073         	movff	??_abs+1,?_abs+1
  6770   006F18  EF92  F037         	goto	l1578
  6771   006F1C                     l1575:
  6772                           
  6773                           ; BSR set to: 0
  6774   006F1C  C072  F072         	movff	abs@a,?_abs
  6775   006F20  C073  F073         	movff	abs@a+1,?_abs+1
  6776   006F24                     l1578:
  6777                           
  6778                           ; BSR set to: 0
  6779   006F24  0012               	return		;funcret
  6780   006F26                     __end_of_abs:
  6781                           	callstack 0
  6782                           
  6783 ;; *************** function ___aomod *****************
  6784 ;; Defined at:
  6785 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  dividend        8    0[BANK0 ] long long 
  6788 ;;  divisor         8    8[BANK0 ] long long 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  sign            1   17[BANK0 ] unsigned char 
  6791 ;;  counter         1   16[BANK0 ] unsigned char 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  8    0[BANK0 ] long long 
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6801 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;Total ram usage:       18 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; Hardware stack levels required when called: 7
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_dtoa
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text19
  6816   004E14                     __ptext19:
  6817                           	callstack 0
  6818   004E14                     ___aomod:
  6819                           	callstack 19
  6820   004E14  0E00               	movlw	0
  6821   004E16  0100               	movlb	0	; () banked
  6822   004E18  6F71               	movwf	___aomod@sign& (0+255),b
  6823   004E1A                     
  6824                           ; BSR set to: 0
  6825   004E1A  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  6826   004E1C  EF14  F027         	goto	u3890
  6827   004E20  EF12  F027         	goto	u3891
  6828   004E24                     u3891:
  6829   004E24  EF26  F027         	goto	l4515
  6830   004E28                     u3890:
  6831   004E28                     
  6832                           ; BSR set to: 0
  6833   004E28  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  6834   004E2A  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  6835   004E2C  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  6836   004E2E  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  6837   004E30  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  6838   004E32  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  6839   004E34  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  6840   004E36  6D60               	negf	___aomod@dividend& (0+255),b
  6841   004E38  0E00               	movlw	0
  6842   004E3A  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  6843   004E3C  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  6844   004E3E  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  6845   004E40  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  6846   004E42  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  6847   004E44  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  6848   004E46  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  6849   004E48                     
  6850                           ; BSR set to: 0
  6851   004E48  0E01               	movlw	1
  6852   004E4A  6F71               	movwf	___aomod@sign& (0+255),b
  6853   004E4C                     l4515:
  6854                           
  6855                           ; BSR set to: 0
  6856   004E4C  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  6857   004E4E  EF2D  F027         	goto	u3900
  6858   004E52  EF2B  F027         	goto	u3901
  6859   004E56                     u3901:
  6860   004E56  EF3D  F027         	goto	l4519
  6861   004E5A                     u3900:
  6862   004E5A                     
  6863                           ; BSR set to: 0
  6864   004E5A  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  6865   004E5C  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  6866   004E5E  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  6867   004E60  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  6868   004E62  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  6869   004E64  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  6870   004E66  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  6871   004E68  6D68               	negf	___aomod@divisor& (0+255),b
  6872   004E6A  0E00               	movlw	0
  6873   004E6C  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  6874   004E6E  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  6875   004E70  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  6876   004E72  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  6877   004E74  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  6878   004E76  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  6879   004E78  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  6880   004E7A                     l4519:
  6881                           
  6882                           ; BSR set to: 0
  6883   004E7A  5168               	movf	___aomod@divisor& (0+255),w,b
  6884   004E7C  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  6885   004E7E  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  6886   004E80  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  6887   004E82  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  6888   004E84  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  6889   004E86  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  6890   004E88  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  6891   004E8A  B4D8               	btfsc	status,2,c
  6892   004E8C  EF4A  F027         	goto	u3911
  6893   004E90  EF4C  F027         	goto	u3910
  6894   004E94                     u3911:
  6895   004E94  EF94  F027         	goto	l4535
  6896   004E98                     u3910:
  6897   004E98                     
  6898                           ; BSR set to: 0
  6899   004E98  0E01               	movlw	1
  6900   004E9A  6F70               	movwf	___aomod@counter& (0+255),b
  6901   004E9C  EF5A  F027         	goto	l4525
  6902   004EA0                     l4523:
  6903                           
  6904                           ; BSR set to: 0
  6905   004EA0  90D8               	bcf	status,0,c
  6906   004EA2  3768               	rlcf	___aomod@divisor& (0+255),f,b
  6907   004EA4  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  6908   004EA6  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  6909   004EA8  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  6910   004EAA  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  6911   004EAC  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  6912   004EAE  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  6913   004EB0  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  6914   004EB2  2B70               	incf	___aomod@counter& (0+255),f,b
  6915   004EB4                     l4525:
  6916                           
  6917                           ; BSR set to: 0
  6918   004EB4  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  6919   004EB6  EF5F  F027         	goto	u3921
  6920   004EBA  EF61  F027         	goto	u3920
  6921   004EBE                     u3921:
  6922   004EBE  EF50  F027         	goto	l4523
  6923   004EC2                     u3920:
  6924   004EC2                     l4527:
  6925                           
  6926                           ; BSR set to: 0
  6927   004EC2  5168               	movf	___aomod@divisor& (0+255),w,b
  6928   004EC4  5D60               	subwf	___aomod@dividend& (0+255),w,b
  6929   004EC6  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  6930   004EC8  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  6931   004ECA  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  6932   004ECC  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  6933   004ECE  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  6934   004ED0  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  6935   004ED2  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  6936   004ED4  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  6937   004ED6  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  6938   004ED8  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  6939   004EDA  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  6940   004EDC  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  6941   004EDE  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  6942   004EE0  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  6943   004EE2  A0D8               	btfss	status,0,c
  6944   004EE4  EF76  F027         	goto	u3931
  6945   004EE8  EF78  F027         	goto	u3930
  6946   004EEC                     u3931:
  6947   004EEC  EF88  F027         	goto	l4531
  6948   004EF0                     u3930:
  6949   004EF0                     
  6950                           ; BSR set to: 0
  6951   004EF0  5168               	movf	___aomod@divisor& (0+255),w,b
  6952   004EF2  5F60               	subwf	___aomod@dividend& (0+255),f,b
  6953   004EF4  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  6954   004EF6  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  6955   004EF8  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  6956   004EFA  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  6957   004EFC  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  6958   004EFE  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  6959   004F00  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  6960   004F02  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  6961   004F04  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  6962   004F06  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  6963   004F08  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  6964   004F0A  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  6965   004F0C  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  6966   004F0E  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  6967   004F10                     l4531:
  6968                           
  6969                           ; BSR set to: 0
  6970   004F10  90D8               	bcf	status,0,c
  6971   004F12  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  6972   004F14  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  6973   004F16  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  6974   004F18  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  6975   004F1A  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  6976   004F1C  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  6977   004F1E  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  6978   004F20  3368               	rrcf	___aomod@divisor& (0+255),f,b
  6979   004F22                     
  6980                           ; BSR set to: 0
  6981   004F22  2F70               	decfsz	___aomod@counter& (0+255),f,b
  6982   004F24  EF61  F027         	goto	l4527
  6983   004F28                     l4535:
  6984                           
  6985                           ; BSR set to: 0
  6986   004F28  5171               	movf	___aomod@sign& (0+255),w,b
  6987   004F2A  B4D8               	btfsc	status,2,c
  6988   004F2C  EF9A  F027         	goto	u3941
  6989   004F30  EF9C  F027         	goto	u3940
  6990   004F34                     u3941:
  6991   004F34  EFAC  F027         	goto	l4539
  6992   004F38                     u3940:
  6993   004F38                     
  6994                           ; BSR set to: 0
  6995   004F38  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  6996   004F3A  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  6997   004F3C  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  6998   004F3E  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  6999   004F40  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  7000   004F42  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  7001   004F44  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  7002   004F46  6D60               	negf	___aomod@dividend& (0+255),b
  7003   004F48  0E00               	movlw	0
  7004   004F4A  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  7005   004F4C  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  7006   004F4E  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  7007   004F50  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  7008   004F52  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  7009   004F54  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  7010   004F56  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  7011   004F58                     l4539:
  7012                           
  7013                           ; BSR set to: 0
  7014   004F58  C060  F060         	movff	___aomod@dividend,?___aomod
  7015   004F5C  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  7016   004F60  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  7017   004F64  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  7018   004F68  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  7019   004F6C  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  7020   004F70  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  7021   004F74  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  7022   004F78                     
  7023                           ; BSR set to: 0
  7024   004F78  0012               	return		;funcret
  7025   004F7A                     __end_of___aomod:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function ___aodiv *****************
  7029 ;; Defined at:
  7030 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  dividend        8    0[BANK0 ] long long 
  7033 ;;  divisor         8    8[BANK0 ] long long 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  quotient        8   18[BANK0 ] long long 
  7036 ;;  sign            1   17[BANK0 ] unsigned char 
  7037 ;;  counter         1   16[BANK0 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  8    0[BANK0 ] long long 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7047 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;Total ram usage:       26 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 7
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_dtoa
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text20
  7062   0049A8                     __ptext20:
  7063                           	callstack 0
  7064   0049A8                     ___aodiv:
  7065                           	callstack 19
  7066   0049A8  0E00               	movlw	0
  7067   0049AA  0100               	movlb	0	; () banked
  7068   0049AC  6F71               	movwf	___aodiv@sign& (0+255),b
  7069   0049AE                     
  7070                           ; BSR set to: 0
  7071   0049AE  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  7072   0049B0  EFDE  F024         	goto	u3820
  7073   0049B4  EFDC  F024         	goto	u3821
  7074   0049B8                     u3821:
  7075   0049B8  EFF0  F024         	goto	l4471
  7076   0049BC                     u3820:
  7077   0049BC                     
  7078                           ; BSR set to: 0
  7079   0049BC  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  7080   0049BE  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  7081   0049C0  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  7082   0049C2  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  7083   0049C4  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  7084   0049C6  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  7085   0049C8  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  7086   0049CA  6D68               	negf	___aodiv@divisor& (0+255),b
  7087   0049CC  0E00               	movlw	0
  7088   0049CE  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  7089   0049D0  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  7090   0049D2  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  7091   0049D4  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  7092   0049D6  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  7093   0049D8  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  7094   0049DA  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  7095   0049DC                     
  7096                           ; BSR set to: 0
  7097   0049DC  0E01               	movlw	1
  7098   0049DE  6F71               	movwf	___aodiv@sign& (0+255),b
  7099   0049E0                     l4471:
  7100                           
  7101                           ; BSR set to: 0
  7102   0049E0  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  7103   0049E2  EFF7  F024         	goto	u3830
  7104   0049E6  EFF5  F024         	goto	u3831
  7105   0049EA                     u3831:
  7106   0049EA  EF09  F025         	goto	l4477
  7107   0049EE                     u3830:
  7108   0049EE                     
  7109                           ; BSR set to: 0
  7110   0049EE  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  7111   0049F0  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  7112   0049F2  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  7113   0049F4  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  7114   0049F6  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  7115   0049F8  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  7116   0049FA  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  7117   0049FC  6D60               	negf	___aodiv@dividend& (0+255),b
  7118   0049FE  0E00               	movlw	0
  7119   004A00  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  7120   004A02  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  7121   004A04  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  7122   004A06  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  7123   004A08  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  7124   004A0A  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  7125   004A0C  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  7126   004A0E                     
  7127                           ; BSR set to: 0
  7128   004A0E  0E01               	movlw	1
  7129   004A10  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  7130   004A12                     l4477:
  7131                           
  7132                           ; BSR set to: 0
  7133   004A12  EE20  F072         	lfsr	2,___aodiv@quotient
  7134   004A16  0E07               	movlw	7
  7135   004A18                     u3841:
  7136   004A18  6ADE               	clrf	postinc2,c
  7137   004A1A  06E8               	decf	wreg,f,c
  7138   004A1C  E2FD               	bc	u3841
  7139   004A1E                     
  7140                           ; BSR set to: 0
  7141   004A1E  5168               	movf	___aodiv@divisor& (0+255),w,b
  7142   004A20  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  7143   004A22  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  7144   004A24  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  7145   004A26  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  7146   004A28  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  7147   004A2A  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  7148   004A2C  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  7149   004A2E  B4D8               	btfsc	status,2,c
  7150   004A30  EF1C  F025         	goto	u3851
  7151   004A34  EF1E  F025         	goto	u3850
  7152   004A38                     u3851:
  7153   004A38  EF70  F025         	goto	l4499
  7154   004A3C                     u3850:
  7155   004A3C                     
  7156                           ; BSR set to: 0
  7157   004A3C  0E01               	movlw	1
  7158   004A3E  6F70               	movwf	___aodiv@counter& (0+255),b
  7159   004A40  EF2C  F025         	goto	l4485
  7160   004A44                     l4483:
  7161                           
  7162                           ; BSR set to: 0
  7163   004A44  90D8               	bcf	status,0,c
  7164   004A46  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  7165   004A48  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  7166   004A4A  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  7167   004A4C  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  7168   004A4E  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  7169   004A50  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  7170   004A52  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  7171   004A54  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  7172   004A56  2B70               	incf	___aodiv@counter& (0+255),f,b
  7173   004A58                     l4485:
  7174                           
  7175                           ; BSR set to: 0
  7176   004A58  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  7177   004A5A  EF31  F025         	goto	u3861
  7178   004A5E  EF33  F025         	goto	u3860
  7179   004A62                     u3861:
  7180   004A62  EF22  F025         	goto	l4483
  7181   004A66                     u3860:
  7182   004A66                     l4487:
  7183                           
  7184                           ; BSR set to: 0
  7185   004A66  90D8               	bcf	status,0,c
  7186   004A68  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  7187   004A6A  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  7188   004A6C  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  7189   004A6E  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  7190   004A70  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  7191   004A72  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  7192   004A74  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  7193   004A76  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  7194   004A78                     
  7195                           ; BSR set to: 0
  7196   004A78  5168               	movf	___aodiv@divisor& (0+255),w,b
  7197   004A7A  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  7198   004A7C  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  7199   004A7E  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  7200   004A80  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  7201   004A82  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  7202   004A84  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  7203   004A86  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  7204   004A88  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  7205   004A8A  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  7206   004A8C  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  7207   004A8E  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  7208   004A90  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  7209   004A92  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  7210   004A94  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  7211   004A96  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  7212   004A98  A0D8               	btfss	status,0,c
  7213   004A9A  EF51  F025         	goto	u3871
  7214   004A9E  EF53  F025         	goto	u3870
  7215   004AA2                     u3871:
  7216   004AA2  EF64  F025         	goto	l4495
  7217   004AA6                     u3870:
  7218   004AA6                     
  7219                           ; BSR set to: 0
  7220   004AA6  5168               	movf	___aodiv@divisor& (0+255),w,b
  7221   004AA8  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  7222   004AAA  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  7223   004AAC  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  7224   004AAE  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  7225   004AB0  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  7226   004AB2  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  7227   004AB4  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  7228   004AB6  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  7229   004AB8  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  7230   004ABA  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  7231   004ABC  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  7232   004ABE  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  7233   004AC0  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  7234   004AC2  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  7235   004AC4  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  7236   004AC6                     
  7237                           ; BSR set to: 0
  7238   004AC6  8172               	bsf	___aodiv@quotient& (0+255),0,b
  7239   004AC8                     l4495:
  7240                           
  7241                           ; BSR set to: 0
  7242   004AC8  90D8               	bcf	status,0,c
  7243   004ACA  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  7244   004ACC  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  7245   004ACE  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  7246   004AD0  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  7247   004AD2  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  7248   004AD4  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  7249   004AD6  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  7250   004AD8  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  7251   004ADA                     
  7252                           ; BSR set to: 0
  7253   004ADA  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  7254   004ADC  EF33  F025         	goto	l4487
  7255   004AE0                     l4499:
  7256                           
  7257                           ; BSR set to: 0
  7258   004AE0  5171               	movf	___aodiv@sign& (0+255),w,b
  7259   004AE2  B4D8               	btfsc	status,2,c
  7260   004AE4  EF76  F025         	goto	u3881
  7261   004AE8  EF78  F025         	goto	u3880
  7262   004AEC                     u3881:
  7263   004AEC  EF88  F025         	goto	l4503
  7264   004AF0                     u3880:
  7265   004AF0                     
  7266                           ; BSR set to: 0
  7267   004AF0  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  7268   004AF2  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  7269   004AF4  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  7270   004AF6  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  7271   004AF8  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  7272   004AFA  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  7273   004AFC  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  7274   004AFE  6D72               	negf	___aodiv@quotient& (0+255),b
  7275   004B00  0E00               	movlw	0
  7276   004B02  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  7277   004B04  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  7278   004B06  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  7279   004B08  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  7280   004B0A  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  7281   004B0C  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  7282   004B0E  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  7283   004B10                     l4503:
  7284                           
  7285                           ; BSR set to: 0
  7286   004B10  C072  F060         	movff	___aodiv@quotient,?___aodiv
  7287   004B14  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  7288   004B18  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  7289   004B1C  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  7290   004B20  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  7291   004B24  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  7292   004B28  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  7293   004B2C  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  7294   004B30                     
  7295                           ; BSR set to: 0
  7296   004B30  0012               	return		;funcret
  7297   004B32                     __end_of___aodiv:
  7298                           	callstack 0
  7299                           
  7300 ;; *************** function _sendStringSerial4 *****************
  7301 ;; Defined at:
  7302 ;;		line 33 in file "serial.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  string          2    1[BANK0 ] PTR unsigned char 
  7305 ;;		 -> main@buf(100), 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      void 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;Total ram usage:        2 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 8
  7324 ;; This function calls:
  7325 ;;		_sendCharSerial4
  7326 ;; This function is called by:
  7327 ;;		_main
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text21
  7332   0070C4                     __ptext21:
  7333                           	callstack 0
  7334   0070C4                     _sendStringSerial4:
  7335                           	callstack 22
  7336   0070C4                     
  7337                           ;serial.c: 34:     while (*string!=0){
  7338   0070C4  EF6E  F038         	goto	l6085
  7339   0070C8                     l6081:
  7340                           
  7341                           ;serial.c: 35:         sendCharSerial4(*string++);
  7342   0070C8  C061  FFD9         	movff	sendStringSerial4@string,fsr2l
  7343   0070CC  C062  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7344   0070D0  50DF               	movf	indf2,w,c
  7345   0070D2  EC11  F039         	call	_sendCharSerial4
  7346   0070D6  0100               	movlb	0	; () banked
  7347   0070D8  4B61               	infsnz	sendStringSerial4@string& (0+255),f,b
  7348   0070DA  2B62               	incf	(sendStringSerial4@string+1)& (0+255),f,b
  7349   0070DC                     l6085:
  7350                           
  7351                           ;serial.c: 34:     while (*string!=0){
  7352   0070DC  C061  FFD9         	movff	sendStringSerial4@string,fsr2l
  7353   0070E0  C062  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7354   0070E4  50DF               	movf	indf2,w,c
  7355   0070E6  A4D8               	btfss	status,2,c
  7356   0070E8  EF78  F038         	goto	u6071
  7357   0070EC  EF7A  F038         	goto	u6070
  7358   0070F0                     u6071:
  7359   0070F0  EF64  F038         	goto	l6081
  7360   0070F4                     u6070:
  7361   0070F4  0012               	return		;funcret
  7362   0070F6                     __end_of_sendStringSerial4:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function _sendCharSerial4 *****************
  7366 ;; Defined at:
  7367 ;;		line 26 in file "serial.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  charToSend      1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  charToSend      1    0[BANK0 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used: 1
  7387 ;; Hardware stack levels required when called: 7
  7388 ;; This function calls:
  7389 ;;		Nothing
  7390 ;; This function is called by:
  7391 ;;		_sendStringSerial4
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text22
  7396   007222                     __ptext22:
  7397                           	callstack 0
  7398   007222                     _sendCharSerial4:
  7399                           	callstack 22
  7400                           
  7401                           ;incstack = 0
  7402                           ;sendCharSerial4@charToSend stored from wreg
  7403   007222  0100               	movlb	0	; () banked
  7404   007224  6F60               	movwf	sendCharSerial4@charToSend& (0+255),b
  7405   007226                     l209:
  7406   007226  010E               	movlb	14	; () banked
  7407   007228  A537               	btfss	55,2,b	;volatile
  7408   00722A  EF19  F039         	goto	u5521
  7409   00722E  EF1B  F039         	goto	u5520
  7410   007232                     u5521:
  7411   007232  EF13  F039         	goto	l209
  7412   007236                     u5520:
  7413   007236                     
  7414                           ; BSR set to: 14
  7415                           ;serial.c: 28:     TX4REG = charToSend;
  7416   007236  C060  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7417   00723A                     
  7418                           ; BSR set to: 14
  7419   00723A  0012               	return		;funcret
  7420   00723C                     __end_of_sendCharSerial4:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _readColours *****************
  7424 ;; Defined at:
  7425 ;;		line 105 in file "color.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  vals            2   11[BANK0 ] PTR struct RGB
  7428 ;;		 -> vals(8), 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;		None
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  1    wreg      void 
  7433 ;; Registers used:
  7434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7443 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7444 ;;Total ram usage:        2 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; Hardware stack levels required when called: 10
  7447 ;; This function calls:
  7448 ;;		_color_read_Blue
  7449 ;;		_color_read_Green
  7450 ;;		_color_read_Red
  7451 ;;		_color_read_lum
  7452 ;; This function is called by:
  7453 ;;		_main
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text23
  7458   006476                     __ptext23:
  7459                           	callstack 0
  7460   006476                     _readColours:
  7461                           	callstack 20
  7462   006476                     
  7463                           ;color.c: 107:     vals ->R = color_read_Red();
  7464   006476  EC65  F034         	call	_color_read_Red	;wreg free
  7465   00647A  C06B  FFD9         	movff	readColours@vals,fsr2l
  7466   00647E  C06C  FFDA         	movff	readColours@vals+1,fsr2h
  7467   006482  0100               	movlb	0	; () banked
  7468   006484  C064  FFDE         	movff	?_color_read_Red,postinc2
  7469   006488  C065  FFDD         	movff	?_color_read_Red+1,postdec2
  7470                           
  7471                           ;color.c: 108:     vals ->B = color_read_Blue();
  7472   00648C  ECB9  F034         	call	_color_read_Blue	;wreg free
  7473   006490  0100               	movlb	0	; () banked
  7474   006492  EE20 F004          	lfsr	2,4
  7475   006496  516B               	movf	readColours@vals& (0+255),w,b
  7476   006498  26D9               	addwf	fsr2l,f,c
  7477   00649A  516C               	movf	(readColours@vals+1)& (0+255),w,b
  7478   00649C  22DA               	addwfc	fsr2h,f,c
  7479   00649E  C064  FFDE         	movff	?_color_read_Blue,postinc2
  7480   0064A2  C065  FFDD         	movff	?_color_read_Blue+1,postdec2
  7481                           
  7482                           ;color.c: 109:     vals ->G = color_read_Green();
  7483   0064A6  EC8F  F034         	call	_color_read_Green	;wreg free
  7484   0064AA  0100               	movlb	0	; () banked
  7485   0064AC  EE20 F002          	lfsr	2,2
  7486   0064B0  516B               	movf	readColours@vals& (0+255),w,b
  7487   0064B2  26D9               	addwf	fsr2l,f,c
  7488   0064B4  516C               	movf	(readColours@vals+1)& (0+255),w,b
  7489   0064B6  22DA               	addwfc	fsr2h,f,c
  7490   0064B8  C064  FFDE         	movff	?_color_read_Green,postinc2
  7491   0064BC  C065  FFDD         	movff	?_color_read_Green+1,postdec2
  7492                           
  7493                           ;color.c: 110:     vals ->L = color_read_lum();
  7494   0064C0  EC3B  F034         	call	_color_read_lum	;wreg free
  7495   0064C4  0100               	movlb	0	; () banked
  7496   0064C6  EE20 F006          	lfsr	2,6
  7497   0064CA  516B               	movf	readColours@vals& (0+255),w,b
  7498   0064CC  26D9               	addwf	fsr2l,f,c
  7499   0064CE  516C               	movf	(readColours@vals+1)& (0+255),w,b
  7500   0064D0  22DA               	addwfc	fsr2h,f,c
  7501   0064D2  C064  FFDE         	movff	?_color_read_lum,postinc2
  7502   0064D6  C065  FFDD         	movff	?_color_read_lum+1,postdec2
  7503   0064DA                     
  7504                           ; BSR set to: 0
  7505   0064DA  0012               	return		;funcret
  7506   0064DC                     __end_of_readColours:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _color_read_lum *****************
  7510 ;; Defined at:
  7511 ;;		line 49 in file "color.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  tmp             2    9[BANK0 ] unsigned int 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2    4[BANK0 ] unsigned int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;Total ram usage:        7 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; Hardware stack levels required when called: 9
  7532 ;; This function calls:
  7533 ;;		_I2C_2_Master_Read
  7534 ;;		_I2C_2_Master_RepStart
  7535 ;;		_I2C_2_Master_Start
  7536 ;;		_I2C_2_Master_Stop
  7537 ;;		_I2C_2_Master_Write
  7538 ;; This function is called by:
  7539 ;;		_readColours
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text24
  7544   006876                     __ptext24:
  7545                           	callstack 0
  7546   006876                     _color_read_lum:
  7547                           	callstack 20
  7548   006876                     
  7549                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  7550   006876  EC36  F039         	call	_I2C_2_Master_Start	;wreg free
  7551                           
  7552                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  7553   00687A  0E52               	movlw	82
  7554   00687C  EC1E  F039         	call	_I2C_2_Master_Write
  7555                           
  7556                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  7557   006880  0EB4               	movlw	180
  7558   006882  EC1E  F039         	call	_I2C_2_Master_Write
  7559                           
  7560                           ;color.c: 55:  I2C_2_Master_RepStart();
  7561   006886  EC2C  F039         	call	_I2C_2_Master_RepStart	;wreg free
  7562                           
  7563                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  7564   00688A  0E53               	movlw	83
  7565   00688C  EC1E  F039         	call	_I2C_2_Master_Write
  7566                           
  7567                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  7568   006890  0E01               	movlw	1
  7569   006892  EC27  F036         	call	_I2C_2_Master_Read
  7570   006896  0100               	movlb	0	; () banked
  7571   006898  6F66               	movwf	??_color_read_lum& (0+255),b
  7572   00689A  5166               	movf	??_color_read_lum& (0+255),w,b
  7573   00689C  6F69               	movwf	color_read_lum@tmp& (0+255),b
  7574   00689E  6B6A               	clrf	(color_read_lum@tmp+1)& (0+255),b
  7575                           
  7576                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7577   0068A0  0E00               	movlw	0
  7578   0068A2  EC27  F036         	call	_I2C_2_Master_Read
  7579   0068A6  0100               	movlb	0	; () banked
  7580   0068A8  6F66               	movwf	??_color_read_lum& (0+255),b
  7581   0068AA  5166               	movf	??_color_read_lum& (0+255),w,b
  7582   0068AC  6F68               	movwf	(??_color_read_lum+2)& (0+255),b
  7583   0068AE  6B67               	clrf	(??_color_read_lum+1)& (0+255),b
  7584   0068B0  5169               	movf	color_read_lum@tmp& (0+255),w,b
  7585   0068B2  1167               	iorwf	(??_color_read_lum+1)& (0+255),w,b
  7586   0068B4  6F69               	movwf	color_read_lum@tmp& (0+255),b
  7587   0068B6  516A               	movf	(color_read_lum@tmp+1)& (0+255),w,b
  7588   0068B8  1168               	iorwf	(??_color_read_lum+2)& (0+255),w,b
  7589   0068BA  6F6A               	movwf	(color_read_lum@tmp+1)& (0+255),b
  7590                           
  7591                           ;color.c: 59:  I2C_2_Master_Stop();
  7592   0068BC  EC31  F039         	call	_I2C_2_Master_Stop	;wreg free
  7593   0068C0                     
  7594                           ;color.c: 60:  return tmp;
  7595   0068C0  C069  F064         	movff	color_read_lum@tmp,?_color_read_lum
  7596   0068C4  C06A  F065         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7597   0068C8  0012               	return		;funcret
  7598   0068CA                     __end_of_color_read_lum:
  7599                           	callstack 0
  7600                           
  7601 ;; *************** function _color_read_Red *****************
  7602 ;; Defined at:
  7603 ;;		line 63 in file "color.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  tmp             2    9[BANK0 ] unsigned int 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  2    4[BANK0 ] unsigned int 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7618 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;Total ram usage:        7 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; Hardware stack levels required when called: 9
  7624 ;; This function calls:
  7625 ;;		_I2C_2_Master_Read
  7626 ;;		_I2C_2_Master_RepStart
  7627 ;;		_I2C_2_Master_Start
  7628 ;;		_I2C_2_Master_Stop
  7629 ;;		_I2C_2_Master_Write
  7630 ;; This function is called by:
  7631 ;;		_readColours
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	text25
  7636   0068CA                     __ptext25:
  7637                           	callstack 0
  7638   0068CA                     _color_read_Red:
  7639                           	callstack 20
  7640   0068CA                     
  7641                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7642   0068CA  EC36  F039         	call	_I2C_2_Master_Start	;wreg free
  7643                           
  7644                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7645   0068CE  0E52               	movlw	82
  7646   0068D0  EC1E  F039         	call	_I2C_2_Master_Write
  7647                           
  7648                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7649   0068D4  0EB6               	movlw	182
  7650   0068D6  EC1E  F039         	call	_I2C_2_Master_Write
  7651                           
  7652                           ;color.c: 69:  I2C_2_Master_RepStart();
  7653   0068DA  EC2C  F039         	call	_I2C_2_Master_RepStart	;wreg free
  7654                           
  7655                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7656   0068DE  0E53               	movlw	83
  7657   0068E0  EC1E  F039         	call	_I2C_2_Master_Write
  7658                           
  7659                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7660   0068E4  0E01               	movlw	1
  7661   0068E6  EC27  F036         	call	_I2C_2_Master_Read
  7662   0068EA  0100               	movlb	0	; () banked
  7663   0068EC  6F66               	movwf	??_color_read_Red& (0+255),b
  7664   0068EE  5166               	movf	??_color_read_Red& (0+255),w,b
  7665   0068F0  6F69               	movwf	color_read_Red@tmp& (0+255),b
  7666   0068F2  6B6A               	clrf	(color_read_Red@tmp+1)& (0+255),b
  7667                           
  7668                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7669   0068F4  0E00               	movlw	0
  7670   0068F6  EC27  F036         	call	_I2C_2_Master_Read
  7671   0068FA  0100               	movlb	0	; () banked
  7672   0068FC  6F66               	movwf	??_color_read_Red& (0+255),b
  7673   0068FE  5166               	movf	??_color_read_Red& (0+255),w,b
  7674   006900  6F68               	movwf	(??_color_read_Red+2)& (0+255),b
  7675   006902  6B67               	clrf	(??_color_read_Red+1)& (0+255),b
  7676   006904  5169               	movf	color_read_Red@tmp& (0+255),w,b
  7677   006906  1167               	iorwf	(??_color_read_Red+1)& (0+255),w,b
  7678   006908  6F69               	movwf	color_read_Red@tmp& (0+255),b
  7679   00690A  516A               	movf	(color_read_Red@tmp+1)& (0+255),w,b
  7680   00690C  1168               	iorwf	(??_color_read_Red+2)& (0+255),w,b
  7681   00690E  6F6A               	movwf	(color_read_Red@tmp+1)& (0+255),b
  7682                           
  7683                           ;color.c: 73:  I2C_2_Master_Stop();
  7684   006910  EC31  F039         	call	_I2C_2_Master_Stop	;wreg free
  7685   006914                     
  7686                           ;color.c: 74:  return tmp;
  7687   006914  C069  F064         	movff	color_read_Red@tmp,?_color_read_Red
  7688   006918  C06A  F065         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7689   00691C  0012               	return		;funcret
  7690   00691E                     __end_of_color_read_Red:
  7691                           	callstack 0
  7692                           
  7693 ;; *************** function _color_read_Green *****************
  7694 ;; Defined at:
  7695 ;;		line 76 in file "color.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  tmp             2    9[BANK0 ] unsigned int 
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  2    4[BANK0 ] unsigned int 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 0/0
  7706 ;;		On exit  : 0/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;Total ram usage:        7 bytes
  7714 ;; Hardware stack levels used: 1
  7715 ;; Hardware stack levels required when called: 9
  7716 ;; This function calls:
  7717 ;;		_I2C_2_Master_Read
  7718 ;;		_I2C_2_Master_RepStart
  7719 ;;		_I2C_2_Master_Start
  7720 ;;		_I2C_2_Master_Stop
  7721 ;;		_I2C_2_Master_Write
  7722 ;; This function is called by:
  7723 ;;		_readColours
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text26
  7728   00691E                     __ptext26:
  7729                           	callstack 0
  7730   00691E                     _color_read_Green:
  7731                           	callstack 20
  7732   00691E                     
  7733                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7734   00691E  EC36  F039         	call	_I2C_2_Master_Start	;wreg free
  7735                           
  7736                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7737   006922  0E52               	movlw	82
  7738   006924  EC1E  F039         	call	_I2C_2_Master_Write
  7739                           
  7740                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7741   006928  0EB8               	movlw	184
  7742   00692A  EC1E  F039         	call	_I2C_2_Master_Write
  7743                           
  7744                           ;color.c: 82:  I2C_2_Master_RepStart();
  7745   00692E  EC2C  F039         	call	_I2C_2_Master_RepStart	;wreg free
  7746                           
  7747                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7748   006932  0E53               	movlw	83
  7749   006934  EC1E  F039         	call	_I2C_2_Master_Write
  7750                           
  7751                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7752   006938  0E01               	movlw	1
  7753   00693A  EC27  F036         	call	_I2C_2_Master_Read
  7754   00693E  0100               	movlb	0	; () banked
  7755   006940  6F66               	movwf	??_color_read_Green& (0+255),b
  7756   006942  5166               	movf	??_color_read_Green& (0+255),w,b
  7757   006944  6F69               	movwf	color_read_Green@tmp& (0+255),b
  7758   006946  6B6A               	clrf	(color_read_Green@tmp+1)& (0+255),b
  7759                           
  7760                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7761   006948  0E00               	movlw	0
  7762   00694A  EC27  F036         	call	_I2C_2_Master_Read
  7763   00694E  0100               	movlb	0	; () banked
  7764   006950  6F66               	movwf	??_color_read_Green& (0+255),b
  7765   006952  5166               	movf	??_color_read_Green& (0+255),w,b
  7766   006954  6F68               	movwf	(??_color_read_Green+2)& (0+255),b
  7767   006956  6B67               	clrf	(??_color_read_Green+1)& (0+255),b
  7768   006958  5169               	movf	color_read_Green@tmp& (0+255),w,b
  7769   00695A  1167               	iorwf	(??_color_read_Green+1)& (0+255),w,b
  7770   00695C  6F69               	movwf	color_read_Green@tmp& (0+255),b
  7771   00695E  516A               	movf	(color_read_Green@tmp+1)& (0+255),w,b
  7772   006960  1168               	iorwf	(??_color_read_Green+2)& (0+255),w,b
  7773   006962  6F6A               	movwf	(color_read_Green@tmp+1)& (0+255),b
  7774                           
  7775                           ;color.c: 86:  I2C_2_Master_Stop();
  7776   006964  EC31  F039         	call	_I2C_2_Master_Stop	;wreg free
  7777   006968                     
  7778                           ;color.c: 87:  return tmp;
  7779   006968  C069  F064         	movff	color_read_Green@tmp,?_color_read_Green
  7780   00696C  C06A  F065         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7781   006970  0012               	return		;funcret
  7782   006972                     __end_of_color_read_Green:
  7783                           	callstack 0
  7784                           
  7785 ;; *************** function _color_read_Blue *****************
  7786 ;; Defined at:
  7787 ;;		line 90 in file "color.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;		None
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  tmp             2    9[BANK0 ] unsigned int 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  2    4[BANK0 ] unsigned int 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;Total ram usage:        7 bytes
  7806 ;; Hardware stack levels used: 1
  7807 ;; Hardware stack levels required when called: 9
  7808 ;; This function calls:
  7809 ;;		_I2C_2_Master_Read
  7810 ;;		_I2C_2_Master_RepStart
  7811 ;;		_I2C_2_Master_Start
  7812 ;;		_I2C_2_Master_Stop
  7813 ;;		_I2C_2_Master_Write
  7814 ;; This function is called by:
  7815 ;;		_readColours
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text27
  7820   006972                     __ptext27:
  7821                           	callstack 0
  7822   006972                     _color_read_Blue:
  7823                           	callstack 20
  7824   006972                     
  7825                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7826   006972  EC36  F039         	call	_I2C_2_Master_Start	;wreg free
  7827                           
  7828                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7829   006976  0E52               	movlw	82
  7830   006978  EC1E  F039         	call	_I2C_2_Master_Write
  7831                           
  7832                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7833   00697C  0EBA               	movlw	186
  7834   00697E  EC1E  F039         	call	_I2C_2_Master_Write
  7835                           
  7836                           ;color.c: 96:  I2C_2_Master_RepStart();
  7837   006982  EC2C  F039         	call	_I2C_2_Master_RepStart	;wreg free
  7838                           
  7839                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7840   006986  0E53               	movlw	83
  7841   006988  EC1E  F039         	call	_I2C_2_Master_Write
  7842                           
  7843                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7844   00698C  0E01               	movlw	1
  7845   00698E  EC27  F036         	call	_I2C_2_Master_Read
  7846   006992  0100               	movlb	0	; () banked
  7847   006994  6F66               	movwf	??_color_read_Blue& (0+255),b
  7848   006996  5166               	movf	??_color_read_Blue& (0+255),w,b
  7849   006998  6F69               	movwf	color_read_Blue@tmp& (0+255),b
  7850   00699A  6B6A               	clrf	(color_read_Blue@tmp+1)& (0+255),b
  7851                           
  7852                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7853   00699C  0E00               	movlw	0
  7854   00699E  EC27  F036         	call	_I2C_2_Master_Read
  7855   0069A2  0100               	movlb	0	; () banked
  7856   0069A4  6F66               	movwf	??_color_read_Blue& (0+255),b
  7857   0069A6  5166               	movf	??_color_read_Blue& (0+255),w,b
  7858   0069A8  6F68               	movwf	(??_color_read_Blue+2)& (0+255),b
  7859   0069AA  6B67               	clrf	(??_color_read_Blue+1)& (0+255),b
  7860   0069AC  5169               	movf	color_read_Blue@tmp& (0+255),w,b
  7861   0069AE  1167               	iorwf	(??_color_read_Blue+1)& (0+255),w,b
  7862   0069B0  6F69               	movwf	color_read_Blue@tmp& (0+255),b
  7863   0069B2  516A               	movf	(color_read_Blue@tmp+1)& (0+255),w,b
  7864   0069B4  1168               	iorwf	(??_color_read_Blue+2)& (0+255),w,b
  7865   0069B6  6F6A               	movwf	(color_read_Blue@tmp+1)& (0+255),b
  7866                           
  7867                           ;color.c: 100:  I2C_2_Master_Stop();
  7868   0069B8  EC31  F039         	call	_I2C_2_Master_Stop	;wreg free
  7869   0069BC                     
  7870                           ;color.c: 101:  return tmp;
  7871   0069BC  C069  F064         	movff	color_read_Blue@tmp,?_color_read_Blue
  7872   0069C0  C06A  F065         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7873   0069C4  0012               	return		;funcret
  7874   0069C6                     __end_of_color_read_Blue:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function _I2C_2_Master_RepStart *****************
  7878 ;; Defined at:
  7879 ;;		line 33 in file "i2c.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 8
  7900 ;; This function calls:
  7901 ;;		_I2C_2_Master_Idle
  7902 ;; This function is called by:
  7903 ;;		_color_read_lum
  7904 ;;		_color_read_Red
  7905 ;;		_color_read_Green
  7906 ;;		_color_read_Blue
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text28
  7911   007258                     __ptext28:
  7912                           	callstack 0
  7913   007258                     _I2C_2_Master_RepStart:
  7914                           	callstack 20
  7915   007258                     
  7916                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7917   007258  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
  7918   00725C                     
  7919                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7920   00725C  010E               	movlb	14	; () banked
  7921   00725E  83DA               	bsf	218,1,b	;volatile
  7922   007260                     
  7923                           ; BSR set to: 14
  7924   007260  0012               	return		;funcret
  7925   007262                     __end_of_I2C_2_Master_RepStart:
  7926                           	callstack 0
  7927                           
  7928 ;; *************** function _I2C_2_Master_Read *****************
  7929 ;; Defined at:
  7930 ;;		line 51 in file "i2c.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  ack             1    wreg     unsigned char 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  ack             1    2[BANK0 ] unsigned char 
  7935 ;;  tmp             1    3[BANK0 ] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      unsigned char 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;Total ram usage:        3 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 8
  7952 ;; This function calls:
  7953 ;;		_I2C_2_Master_Idle
  7954 ;; This function is called by:
  7955 ;;		_color_read_lum
  7956 ;;		_color_read_Red
  7957 ;;		_color_read_Green
  7958 ;;		_color_read_Blue
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text29
  7963   006C4E                     __ptext29:
  7964                           	callstack 0
  7965   006C4E                     _I2C_2_Master_Read:
  7966                           	callstack 20
  7967                           
  7968                           ; BSR set to: 14
  7969                           ;incstack = 0
  7970                           ;I2C_2_Master_Read@ack stored from wreg
  7971   006C4E  0100               	movlb	0	; () banked
  7972   006C50  6F62               	movwf	I2C_2_Master_Read@ack& (0+255),b
  7973   006C52                     
  7974                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7975   006C52  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
  7976   006C56                     
  7977                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7978   006C56  010E               	movlb	14	; () banked
  7979   006C58  87DA               	bsf	218,3,b	;volatile
  7980                           
  7981                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7982   006C5A  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
  7983   006C5E                     
  7984                           ;i2c.c: 57:   tmp = SSP2BUF;
  7985   006C5E  CED5 F063          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7986                           
  7987                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7988   006C62  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
  7989   006C66                     
  7990                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7991   006C66  0100               	movlb	0	; () banked
  7992   006C68  5162               	movf	I2C_2_Master_Read@ack& (0+255),w,b
  7993   006C6A  B4D8               	btfsc	status,2,c
  7994   006C6C  EF3A  F036         	goto	u5461
  7995   006C70  EF3E  F036         	goto	u5460
  7996   006C74                     u5461:
  7997   006C74  6B61               	clrf	??_I2C_2_Master_Read& (0+255),b
  7998   006C76  2B61               	incf	??_I2C_2_Master_Read& (0+255),f,b
  7999   006C78  EF40  F036         	goto	u5478
  8000   006C7C                     u5460:
  8001   006C7C  0100               	movlb	0	; () banked
  8002   006C7E  6B61               	clrf	??_I2C_2_Master_Read& (0+255),b
  8003   006C80                     u5478:
  8004   006C80  3B61               	swapf	??_I2C_2_Master_Read& (0+255),f,b
  8005   006C82  4761               	rlncf	??_I2C_2_Master_Read& (0+255),f,b
  8006   006C84  010E               	movlb	14	; () banked
  8007   006C86  51DA               	movf	218,w,b	;volatile
  8008   006C88  0100               	movlb	0	; () banked
  8009   006C8A  1961               	xorwf	??_I2C_2_Master_Read& (0+255),w,b
  8010   006C8C  0BDF               	andlw	-33
  8011   006C8E  1961               	xorwf	??_I2C_2_Master_Read& (0+255),w,b
  8012   006C90  010E               	movlb	14	; () banked
  8013   006C92  6FDA               	movwf	218,b	;volatile
  8014   006C94                     
  8015                           ; BSR set to: 14
  8016                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8017   006C94  89DA               	bsf	218,4,b	;volatile
  8018   006C96                     
  8019                           ; BSR set to: 14
  8020                           ;i2c.c: 61:   return tmp;
  8021   006C96  0100               	movlb	0	; () banked
  8022   006C98  5163               	movf	I2C_2_Master_Read@tmp& (0+255),w,b
  8023   006C9A                     
  8024                           ; BSR set to: 0
  8025   006C9A  0012               	return		;funcret
  8026   006C9C                     __end_of_I2C_2_Master_Read:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _initUSART4 *****************
  8030 ;; Defined at:
  8031 ;;		line 4 in file "serial.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;Total ram usage:        0 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 7
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text30
  8060   007204                     __ptext30:
  8061                           	callstack 0
  8062   007204                     _initUSART4:
  8063                           	callstack 23
  8064   007204                     
  8065                           ;serial.c: 5:     RC0PPS = 0x12;
  8066   007204  0E12               	movlw	18
  8067   007206  010E               	movlb	14	; () banked
  8068   007208  6F62               	movwf	98,b	;volatile
  8069                           
  8070                           ;serial.c: 6:     RX4PPS = 0x11;
  8071   00720A  0E11               	movlw	17
  8072   00720C  6F15               	movwf	21,b	;volatile
  8073   00720E                     
  8074                           ; BSR set to: 14
  8075                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  8076   00720E  97E9               	bcf	233,3,b	;volatile
  8077   007210                     
  8078                           ; BSR set to: 14
  8079                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  8080   007210  95E8               	bcf	232,2,b	;volatile
  8081                           
  8082                           ;serial.c: 9:     SP4BRGL = 51;
  8083   007212  0E33               	movlw	51
  8084   007214  6FE5               	movwf	229,b	;volatile
  8085                           
  8086                           ;serial.c: 10:     SP4BRGH = 0;
  8087   007216  0E00               	movlw	0
  8088   007218  6FE6               	movwf	230,b	;volatile
  8089   00721A                     
  8090                           ; BSR set to: 14
  8091                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  8092   00721A  89E7               	bsf	231,4,b	;volatile
  8093   00721C                     
  8094                           ; BSR set to: 14
  8095                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  8096   00721C  8BE8               	bsf	232,5,b	;volatile
  8097   00721E                     
  8098                           ; BSR set to: 14
  8099                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  8100   00721E  8FE7               	bsf	231,7,b	;volatile
  8101   007220                     
  8102                           ; BSR set to: 14
  8103   007220  0012               	return		;funcret
  8104   007222                     __end_of_initUSART4:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function _initDCmotorsPWM *****************
  8108 ;; Defined at:
  8109 ;;		line 6 in file "dc_motor.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  PWMperiod       2    0[BANK0 ] unsigned int 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;Total ram usage:        2 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; Hardware stack levels required when called: 7
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_main
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text31
  8138   005FB4                     __ptext31:
  8139                           	callstack 0
  8140   005FB4                     _initDCmotorsPWM:
  8141                           	callstack 23
  8142   005FB4                     
  8143                           ;dc_motor.c: 10:     RE2PPS=0x05;
  8144   005FB4  0E05               	movlw	5
  8145   005FB6  010E               	movlb	14	; () banked
  8146   005FB8  6F74               	movwf	116,b	;volatile
  8147                           
  8148                           ;dc_motor.c: 11:     RE4PPS=0x06;
  8149   005FBA  0E06               	movlw	6
  8150   005FBC  6F76               	movwf	118,b	;volatile
  8151                           
  8152                           ;dc_motor.c: 12:     RC7PPS=0x07;
  8153   005FBE  0E07               	movlw	7
  8154   005FC0  6F69               	movwf	105,b	;volatile
  8155                           
  8156                           ;dc_motor.c: 13:     RG6PPS=0x08;
  8157   005FC2  0E08               	movlw	8
  8158   005FC4  6F88               	movwf	136,b	;volatile
  8159   005FC6                     
  8160                           ; BSR set to: 14
  8161                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  8162   005FC6  9485               	bcf	133,2,c	;volatile
  8163   005FC8                     
  8164                           ; BSR set to: 14
  8165                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  8166   005FC8  9885               	bcf	133,4,c	;volatile
  8167   005FCA                     
  8168                           ; BSR set to: 14
  8169                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  8170   005FCA  9E83               	bcf	131,7,c	;volatile
  8171   005FCC                     
  8172                           ; BSR set to: 14
  8173                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  8174   005FCC  9C87               	bcf	135,6,c	;volatile
  8175                           
  8176                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8177   005FCE  50BD               	movf	189,w,c	;volatile
  8178   005FD0  0B8F               	andlw	-113
  8179   005FD2  0930               	iorlw	48
  8180   005FD4  6EBD               	movwf	189,c	;volatile
  8181                           
  8182                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8183   005FD6  0EE0               	movlw	-32
  8184   005FD8  16BE               	andwf	190,f,c	;volatile
  8185                           
  8186                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8187   005FDA  50BF               	movf	191,w,c	;volatile
  8188   005FDC  0BF0               	andlw	-16
  8189   005FDE  0901               	iorlw	1
  8190   005FE0  6EBF               	movwf	191,c	;volatile
  8191   005FE2                     
  8192                           ; BSR set to: 14
  8193                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  8194   005FE2  C060  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  8195   005FE6                     
  8196                           ; BSR set to: 14
  8197                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  8198   005FE6  8EBD               	bsf	189,7,c	;volatile
  8199                           
  8200                           ;dc_motor.c: 34:     CCPR1H=0;
  8201   005FE8  0E00               	movlw	0
  8202   005FEA  6EAA               	movwf	170,c	;volatile
  8203                           
  8204                           ;dc_motor.c: 35:     CCPR2H=0;
  8205   005FEC  0E00               	movlw	0
  8206   005FEE  6EA6               	movwf	166,c	;volatile
  8207                           
  8208                           ;dc_motor.c: 36:     CCPR3H=0;
  8209   005FF0  0E00               	movlw	0
  8210   005FF2  010F               	movlb	15	; () banked
  8211   005FF4  6F25               	movwf	37,b	;volatile
  8212                           
  8213                           ;dc_motor.c: 37:     CCPR4H=0;
  8214   005FF6  0E00               	movlw	0
  8215   005FF8  6F21               	movwf	33,b	;volatile
  8216                           
  8217                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  8218   005FFA  0EFC               	movlw	-4
  8219   005FFC  16AD               	andwf	173,f,c	;volatile
  8220                           
  8221                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  8222   005FFE  0EF3               	movlw	-13
  8223   006000  16AD               	andwf	173,f,c	;volatile
  8224                           
  8225                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  8226   006002  0ECF               	movlw	-49
  8227   006004  16AD               	andwf	173,f,c	;volatile
  8228                           
  8229                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  8230   006006  0E3F               	movlw	-193
  8231   006008  16AD               	andwf	173,f,c	;volatile
  8232   00600A                     
  8233                           ; BSR set to: 15
  8234                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  8235   00600A  88AB               	bsf	171,4,c	;volatile
  8236                           
  8237                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  8238   00600C  50AB               	movf	171,w,c	;volatile
  8239   00600E  0BF0               	andlw	-16
  8240   006010  090C               	iorlw	12
  8241   006012  6EAB               	movwf	171,c	;volatile
  8242   006014                     
  8243                           ; BSR set to: 15
  8244                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  8245   006014  8EAB               	bsf	171,7,c	;volatile
  8246   006016                     
  8247                           ; BSR set to: 15
  8248                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  8249   006016  88A7               	bsf	167,4,c	;volatile
  8250                           
  8251                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  8252   006018  50A7               	movf	167,w,c	;volatile
  8253   00601A  0BF0               	andlw	-16
  8254   00601C  090C               	iorlw	12
  8255   00601E  6EA7               	movwf	167,c	;volatile
  8256   006020                     
  8257                           ; BSR set to: 15
  8258                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  8259   006020  8EA7               	bsf	167,7,c	;volatile
  8260   006022                     
  8261                           ; BSR set to: 15
  8262                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  8263   006022  8926               	bsf	38,4,b	;volatile
  8264                           
  8265                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  8266   006024  5126               	movf	38,w,b	;volatile
  8267   006026  0BF0               	andlw	-16
  8268   006028  090C               	iorlw	12
  8269   00602A  6F26               	movwf	38,b	;volatile
  8270   00602C                     
  8271                           ; BSR set to: 15
  8272                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  8273   00602C  8F26               	bsf	38,7,b	;volatile
  8274   00602E                     
  8275                           ; BSR set to: 15
  8276                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  8277   00602E  8922               	bsf	34,4,b	;volatile
  8278                           
  8279                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  8280   006030  5122               	movf	34,w,b	;volatile
  8281   006032  0BF0               	andlw	-16
  8282   006034  090C               	iorlw	12
  8283   006036  6F22               	movwf	34,b	;volatile
  8284   006038                     
  8285                           ; BSR set to: 15
  8286                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  8287   006038  8F22               	bsf	34,7,b	;volatile
  8288   00603A                     
  8289                           ; BSR set to: 15
  8290   00603A  0012               	return		;funcret
  8291   00603C                     __end_of_initDCmotorsPWM:
  8292                           	callstack 0
  8293                           
  8294 ;; *************** function _go_Home *****************
  8295 ;; Defined at:
  8296 ;;		line 5 in file "Memory.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  WayBack         2   36[BANK0 ] PTR unsigned char 
  8299 ;;		 -> WayBack(50), 
  8300 ;;  Time_forward    2   38[BANK0 ] PTR int 
  8301 ;;		 -> Time_forward(100), 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  i               2   43[BANK0 ] int 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;Total ram usage:        9 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 12
  8320 ;; This function calls:
  8321 ;;		_BlueMove
  8322 ;;		_GreenMove
  8323 ;;		_LightBlueMove
  8324 ;;		_OrangeMove
  8325 ;;		_RedMove
  8326 ;;		_ReversePink
  8327 ;;		_ReverseYellow
  8328 ;;		_reverseDetect
  8329 ;;		_stop
  8330 ;;		_timed_forward
  8331 ;; This function is called by:
  8332 ;;		_main
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text32
  8337   003B88                     __ptext32:
  8338                           	callstack 0
  8339   003B88                     _go_Home:
  8340                           	callstack 18
  8341   003B88                     
  8342                           ;Memory.c: 6:     int i;;Memory.c: 7:     BlueMove(&motorL, &motorR);
  8343   003B88  0EC3               	movlw	low _motorL
  8344   003B8A  0100               	movlb	0	; () banked
  8345   003B8C  6F80               	movwf	BlueMove@mL& (0+255),b
  8346   003B8E  0E01               	movlw	high _motorL
  8347   003B90  6F81               	movwf	(BlueMove@mL+1)& (0+255),b
  8348   003B92  0EBA               	movlw	low _motorR
  8349   003B94  6F82               	movwf	BlueMove@mR& (0+255),b
  8350   003B96  0E01               	movlw	high _motorR
  8351   003B98  6F83               	movwf	(BlueMove@mR+1)& (0+255),b
  8352   003B9A  ECCF  F031         	call	_BlueMove	;wreg free
  8353   003B9E                     
  8354                           ;Memory.c: 8:     T0CON0bits.T0EN=0;
  8355   003B9E  9ED5               	bcf	213,7,c	;volatile
  8356   003BA0                     
  8357                           ;Memory.c: 11:         for (i = move_count; i >= 0; i--){
  8358   003BA0  C04E  F08B         	movff	_move_count,go_Home@i	;volatile
  8359   003BA4  C04F  F08C         	movff	_move_count+1,go_Home@i+1	;volatile
  8360   003BA8                     l6103:
  8361   003BA8  0100               	movlb	0	; () banked
  8362   003BAA  BF8C               	btfsc	(go_Home@i+1)& (0+255),7,b
  8363   003BAC  EFDC  F01D         	goto	u6090
  8364   003BB0  EFDA  F01D         	goto	u6091
  8365   003BB4                     u6091:
  8366   003BB4  EFDE  F01D         	goto	l6107
  8367   003BB8                     u6090:
  8368   003BB8  EF2F  F01F         	goto	l6141
  8369   003BBC                     l6107:
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;Memory.c: 14:             timed_forward(&motorL, &motorR,Time_forward[i]);
  8373   003BBC  0EC3               	movlw	low _motorL
  8374   003BBE  6F73               	movwf	timed_forward@mL& (0+255),b
  8375   003BC0  0E01               	movlw	high _motorL
  8376   003BC2  6F74               	movwf	(timed_forward@mL+1)& (0+255),b
  8377   003BC4  0EBA               	movlw	low _motorR
  8378   003BC6  6F75               	movwf	timed_forward@mR& (0+255),b
  8379   003BC8  0E01               	movlw	high _motorR
  8380   003BCA  6F76               	movwf	(timed_forward@mR+1)& (0+255),b
  8381   003BCC  90D8               	bcf	status,0,c
  8382   003BCE  358B               	rlcf	go_Home@i& (0+255),w,b
  8383   003BD0  6ED9               	movwf	fsr2l,c
  8384   003BD2  358C               	rlcf	(go_Home@i+1)& (0+255),w,b
  8385   003BD4  6EDA               	movwf	fsr2h,c
  8386   003BD6  5186               	movf	go_Home@Time_forward& (0+255),w,b
  8387   003BD8  26D9               	addwf	fsr2l,f,c
  8388   003BDA  5187               	movf	(go_Home@Time_forward+1)& (0+255),w,b
  8389   003BDC  22DA               	addwfc	fsr2h,f,c
  8390   003BDE  CFDE F077          	movff	postinc2,timed_forward@time
  8391   003BE2  CFDD F078          	movff	postdec2,timed_forward@time+1
  8392   003BE6  EC44  F029         	call	_timed_forward	;wreg free
  8393   003BEA                     
  8394                           ;Memory.c: 17:             if (WayBack[i-1]==1){
  8395   003BEA  0100               	movlb	0	; () banked
  8396   003BEC  518B               	movf	go_Home@i& (0+255),w,b
  8397   003BEE  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8398   003BF0  6F88               	movwf	??_go_Home& (0+255),b
  8399   003BF2  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8400   003BF4  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8401   003BF6  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8402   003BF8  0EFF               	movlw	255
  8403   003BFA  2588               	addwf	??_go_Home& (0+255),w,b
  8404   003BFC  6ED9               	movwf	fsr2l,c
  8405   003BFE  0EFF               	movlw	255
  8406   003C00  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8407   003C02  6EDA               	movwf	fsr2h,c
  8408   003C04  04DE               	decf	postinc2,w,c
  8409   003C06  A4D8               	btfss	status,2,c
  8410   003C08  EF08  F01E         	goto	u6101
  8411   003C0C  EF0A  F01E         	goto	u6100
  8412   003C10                     u6101:
  8413   003C10  EF21  F01E         	goto	l6113
  8414   003C14                     u6100:
  8415   003C14                     
  8416                           ; BSR set to: 0
  8417                           ;Memory.c: 18:                 reverseDetect(&motorL, &motorR);
  8418   003C14  0EC3               	movlw	low _motorL
  8419   003C16  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8420   003C18  0E01               	movlw	high _motorL
  8421   003C1A  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8422   003C1C  0EBA               	movlw	low _motorR
  8423   003C1E  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8424   003C20  0E01               	movlw	high _motorR
  8425   003C22  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8426   003C24  ECD4  F032         	call	_reverseDetect	;wreg free
  8427                           
  8428                           ;Memory.c: 19:                 GreenMove(&motorL, &motorR);
  8429   003C28  0EC3               	movlw	low _motorL
  8430   003C2A  0100               	movlb	0	; () banked
  8431   003C2C  6F80               	movwf	GreenMove@mL& (0+255),b
  8432   003C2E  0E01               	movlw	high _motorL
  8433   003C30  6F81               	movwf	(GreenMove@mL+1)& (0+255),b
  8434   003C32  0EBA               	movlw	low _motorR
  8435   003C34  6F82               	movwf	GreenMove@mR& (0+255),b
  8436   003C36  0E01               	movlw	high _motorR
  8437   003C38  6F83               	movwf	(GreenMove@mR+1)& (0+255),b
  8438   003C3A  EC50  F037         	call	_GreenMove	;wreg free
  8439                           
  8440                           ;Memory.c: 20:             }
  8441   003C3E  EF29  F01F         	goto	l6137
  8442   003C42                     l6113:
  8443                           
  8444                           ; BSR set to: 0
  8445   003C42  518B               	movf	go_Home@i& (0+255),w,b
  8446   003C44  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8447   003C46  6F88               	movwf	??_go_Home& (0+255),b
  8448   003C48  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8449   003C4A  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8450   003C4C  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8451   003C4E  0EFF               	movlw	255
  8452   003C50  2588               	addwf	??_go_Home& (0+255),w,b
  8453   003C52  6ED9               	movwf	fsr2l,c
  8454   003C54  0EFF               	movlw	255
  8455   003C56  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8456   003C58  6EDA               	movwf	fsr2h,c
  8457   003C5A  0E02               	movlw	2
  8458   003C5C  18DE               	xorwf	postinc2,w,c
  8459   003C5E  A4D8               	btfss	status,2,c
  8460   003C60  EF34  F01E         	goto	u6111
  8461   003C64  EF36  F01E         	goto	u6110
  8462   003C68                     u6111:
  8463   003C68  EF4D  F01E         	goto	l6117
  8464   003C6C                     u6110:
  8465   003C6C                     
  8466                           ; BSR set to: 0
  8467                           ;Memory.c: 22:                 reverseDetect(&motorL, &motorR);
  8468   003C6C  0EC3               	movlw	low _motorL
  8469   003C6E  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8470   003C70  0E01               	movlw	high _motorL
  8471   003C72  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8472   003C74  0EBA               	movlw	low _motorR
  8473   003C76  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8474   003C78  0E01               	movlw	high _motorR
  8475   003C7A  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8476   003C7C  ECD4  F032         	call	_reverseDetect	;wreg free
  8477                           
  8478                           ;Memory.c: 23:                 LightBlueMove(&motorL, &motorR);
  8479   003C80  0EC3               	movlw	low _motorL
  8480   003C82  0100               	movlb	0	; () banked
  8481   003C84  6F80               	movwf	LightBlueMove@mL& (0+255),b
  8482   003C86  0E01               	movlw	high _motorL
  8483   003C88  6F81               	movwf	(LightBlueMove@mL+1)& (0+255),b
  8484   003C8A  0EBA               	movlw	low _motorR
  8485   003C8C  6F82               	movwf	LightBlueMove@mR& (0+255),b
  8486   003C8E  0E01               	movlw	high _motorR
  8487   003C90  6F83               	movwf	(LightBlueMove@mR+1)& (0+255),b
  8488   003C92  EC2F  F033         	call	_LightBlueMove	;wreg free
  8489                           
  8490                           ;Memory.c: 24:             }
  8491   003C96  EF29  F01F         	goto	l6137
  8492   003C9A                     l6117:
  8493                           
  8494                           ; BSR set to: 0
  8495   003C9A  518B               	movf	go_Home@i& (0+255),w,b
  8496   003C9C  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8497   003C9E  6F88               	movwf	??_go_Home& (0+255),b
  8498   003CA0  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8499   003CA2  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8500   003CA4  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8501   003CA6  0EFF               	movlw	255
  8502   003CA8  2588               	addwf	??_go_Home& (0+255),w,b
  8503   003CAA  6ED9               	movwf	fsr2l,c
  8504   003CAC  0EFF               	movlw	255
  8505   003CAE  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8506   003CB0  6EDA               	movwf	fsr2h,c
  8507   003CB2  0E03               	movlw	3
  8508   003CB4  18DE               	xorwf	postinc2,w,c
  8509   003CB6  A4D8               	btfss	status,2,c
  8510   003CB8  EF60  F01E         	goto	u6121
  8511   003CBC  EF62  F01E         	goto	u6120
  8512   003CC0                     u6121:
  8513   003CC0  EF79  F01E         	goto	l6121
  8514   003CC4                     u6120:
  8515   003CC4                     
  8516                           ; BSR set to: 0
  8517                           ;Memory.c: 26:                 reverseDetect(&motorL, &motorR);
  8518   003CC4  0EC3               	movlw	low _motorL
  8519   003CC6  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8520   003CC8  0E01               	movlw	high _motorL
  8521   003CCA  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8522   003CCC  0EBA               	movlw	low _motorR
  8523   003CCE  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8524   003CD0  0E01               	movlw	high _motorR
  8525   003CD2  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8526   003CD4  ECD4  F032         	call	_reverseDetect	;wreg free
  8527                           
  8528                           ;Memory.c: 27:                 ReverseYellow(&motorL, &motorR);
  8529   003CD8  0EC3               	movlw	low _motorL
  8530   003CDA  0100               	movlb	0	; () banked
  8531   003CDC  6F80               	movwf	ReverseYellow@mL& (0+255),b
  8532   003CDE  0E01               	movlw	high _motorL
  8533   003CE0  6F81               	movwf	(ReverseYellow@mL+1)& (0+255),b
  8534   003CE2  0EBA               	movlw	low _motorR
  8535   003CE4  6F82               	movwf	ReverseYellow@mR& (0+255),b
  8536   003CE6  0E01               	movlw	high _motorR
  8537   003CE8  6F83               	movwf	(ReverseYellow@mR+1)& (0+255),b
  8538   003CEA  EC17  F02C         	call	_ReverseYellow	;wreg free
  8539                           
  8540                           ;Memory.c: 28:             }
  8541   003CEE  EF29  F01F         	goto	l6137
  8542   003CF2                     l6121:
  8543                           
  8544                           ; BSR set to: 0
  8545   003CF2  518B               	movf	go_Home@i& (0+255),w,b
  8546   003CF4  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8547   003CF6  6F88               	movwf	??_go_Home& (0+255),b
  8548   003CF8  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8549   003CFA  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8550   003CFC  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8551   003CFE  0EFF               	movlw	255
  8552   003D00  2588               	addwf	??_go_Home& (0+255),w,b
  8553   003D02  6ED9               	movwf	fsr2l,c
  8554   003D04  0EFF               	movlw	255
  8555   003D06  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8556   003D08  6EDA               	movwf	fsr2h,c
  8557   003D0A  0E04               	movlw	4
  8558   003D0C  18DE               	xorwf	postinc2,w,c
  8559   003D0E  A4D8               	btfss	status,2,c
  8560   003D10  EF8C  F01E         	goto	u6131
  8561   003D14  EF8E  F01E         	goto	u6130
  8562   003D18                     u6131:
  8563   003D18  EFA5  F01E         	goto	l6125
  8564   003D1C                     u6130:
  8565   003D1C                     
  8566                           ; BSR set to: 0
  8567                           ;Memory.c: 30:                 reverseDetect(&motorL, &motorR);
  8568   003D1C  0EC3               	movlw	low _motorL
  8569   003D1E  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8570   003D20  0E01               	movlw	high _motorL
  8571   003D22  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8572   003D24  0EBA               	movlw	low _motorR
  8573   003D26  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8574   003D28  0E01               	movlw	high _motorR
  8575   003D2A  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8576   003D2C  ECD4  F032         	call	_reverseDetect	;wreg free
  8577                           
  8578                           ;Memory.c: 31:                 BlueMove(&motorL, &motorR);
  8579   003D30  0EC3               	movlw	low _motorL
  8580   003D32  0100               	movlb	0	; () banked
  8581   003D34  6F80               	movwf	BlueMove@mL& (0+255),b
  8582   003D36  0E01               	movlw	high _motorL
  8583   003D38  6F81               	movwf	(BlueMove@mL+1)& (0+255),b
  8584   003D3A  0EBA               	movlw	low _motorR
  8585   003D3C  6F82               	movwf	BlueMove@mR& (0+255),b
  8586   003D3E  0E01               	movlw	high _motorR
  8587   003D40  6F83               	movwf	(BlueMove@mR+1)& (0+255),b
  8588   003D42  ECCF  F031         	call	_BlueMove	;wreg free
  8589                           
  8590                           ;Memory.c: 32:             }
  8591   003D46  EF29  F01F         	goto	l6137
  8592   003D4A                     l6125:
  8593                           
  8594                           ; BSR set to: 0
  8595   003D4A  518B               	movf	go_Home@i& (0+255),w,b
  8596   003D4C  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8597   003D4E  6F88               	movwf	??_go_Home& (0+255),b
  8598   003D50  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8599   003D52  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8600   003D54  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8601   003D56  0EFF               	movlw	255
  8602   003D58  2588               	addwf	??_go_Home& (0+255),w,b
  8603   003D5A  6ED9               	movwf	fsr2l,c
  8604   003D5C  0EFF               	movlw	255
  8605   003D5E  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8606   003D60  6EDA               	movwf	fsr2h,c
  8607   003D62  0E05               	movlw	5
  8608   003D64  18DE               	xorwf	postinc2,w,c
  8609   003D66  A4D8               	btfss	status,2,c
  8610   003D68  EFB8  F01E         	goto	u6141
  8611   003D6C  EFBA  F01E         	goto	u6140
  8612   003D70                     u6141:
  8613   003D70  EFD1  F01E         	goto	l6129
  8614   003D74                     u6140:
  8615   003D74                     
  8616                           ; BSR set to: 0
  8617                           ;Memory.c: 34:                 reverseDetect(&motorL, &motorR);
  8618   003D74  0EC3               	movlw	low _motorL
  8619   003D76  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8620   003D78  0E01               	movlw	high _motorL
  8621   003D7A  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8622   003D7C  0EBA               	movlw	low _motorR
  8623   003D7E  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8624   003D80  0E01               	movlw	high _motorR
  8625   003D82  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8626   003D84  ECD4  F032         	call	_reverseDetect	;wreg free
  8627                           
  8628                           ;Memory.c: 35:                 RedMove(&motorL, &motorR);
  8629   003D88  0EC3               	movlw	low _motorL
  8630   003D8A  0100               	movlb	0	; () banked
  8631   003D8C  6F80               	movwf	RedMove@mL& (0+255),b
  8632   003D8E  0E01               	movlw	high _motorL
  8633   003D90  6F81               	movwf	(RedMove@mL+1)& (0+255),b
  8634   003D92  0EBA               	movlw	low _motorR
  8635   003D94  6F82               	movwf	RedMove@mR& (0+255),b
  8636   003D96  0E01               	movlw	high _motorR
  8637   003D98  6F83               	movwf	(RedMove@mR+1)& (0+255),b
  8638   003D9A  EC2E  F037         	call	_RedMove	;wreg free
  8639                           
  8640                           ;Memory.c: 36:             }
  8641   003D9E  EF29  F01F         	goto	l6137
  8642   003DA2                     l6129:
  8643                           
  8644                           ; BSR set to: 0
  8645   003DA2  518B               	movf	go_Home@i& (0+255),w,b
  8646   003DA4  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8647   003DA6  6F88               	movwf	??_go_Home& (0+255),b
  8648   003DA8  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8649   003DAA  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8650   003DAC  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8651   003DAE  0EFF               	movlw	255
  8652   003DB0  2588               	addwf	??_go_Home& (0+255),w,b
  8653   003DB2  6ED9               	movwf	fsr2l,c
  8654   003DB4  0EFF               	movlw	255
  8655   003DB6  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8656   003DB8  6EDA               	movwf	fsr2h,c
  8657   003DBA  0E06               	movlw	6
  8658   003DBC  18DE               	xorwf	postinc2,w,c
  8659   003DBE  A4D8               	btfss	status,2,c
  8660   003DC0  EFE4  F01E         	goto	u6151
  8661   003DC4  EFE6  F01E         	goto	u6150
  8662   003DC8                     u6151:
  8663   003DC8  EFFD  F01E         	goto	l6133
  8664   003DCC                     u6150:
  8665   003DCC                     
  8666                           ; BSR set to: 0
  8667                           ;Memory.c: 38:                 reverseDetect(&motorL, &motorR);
  8668   003DCC  0EC3               	movlw	low _motorL
  8669   003DCE  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8670   003DD0  0E01               	movlw	high _motorL
  8671   003DD2  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8672   003DD4  0EBA               	movlw	low _motorR
  8673   003DD6  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8674   003DD8  0E01               	movlw	high _motorR
  8675   003DDA  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8676   003DDC  ECD4  F032         	call	_reverseDetect	;wreg free
  8677                           
  8678                           ;Memory.c: 39:                 OrangeMove(&motorL, &motorR);
  8679   003DE0  0EC3               	movlw	low _motorL
  8680   003DE2  0100               	movlb	0	; () banked
  8681   003DE4  6F80               	movwf	OrangeMove@mL& (0+255),b
  8682   003DE6  0E01               	movlw	high _motorL
  8683   003DE8  6F81               	movwf	(OrangeMove@mL+1)& (0+255),b
  8684   003DEA  0EBA               	movlw	low _motorR
  8685   003DEC  6F82               	movwf	OrangeMove@mR& (0+255),b
  8686   003DEE  0E01               	movlw	high _motorR
  8687   003DF0  6F83               	movwf	(OrangeMove@mR+1)& (0+255),b
  8688   003DF2  EC02  F033         	call	_OrangeMove	;wreg free
  8689                           
  8690                           ;Memory.c: 40:             }
  8691   003DF6  EF29  F01F         	goto	l6137
  8692   003DFA                     l6133:
  8693                           
  8694                           ; BSR set to: 0
  8695   003DFA  518B               	movf	go_Home@i& (0+255),w,b
  8696   003DFC  2584               	addwf	go_Home@WayBack& (0+255),w,b
  8697   003DFE  6F88               	movwf	??_go_Home& (0+255),b
  8698   003E00  518C               	movf	(go_Home@i+1)& (0+255),w,b
  8699   003E02  2185               	addwfc	(go_Home@WayBack+1)& (0+255),w,b
  8700   003E04  6F89               	movwf	(??_go_Home+1)& (0+255),b
  8701   003E06  0EFF               	movlw	255
  8702   003E08  2588               	addwf	??_go_Home& (0+255),w,b
  8703   003E0A  6ED9               	movwf	fsr2l,c
  8704   003E0C  0EFF               	movlw	255
  8705   003E0E  2189               	addwfc	(??_go_Home+1)& (0+255),w,b
  8706   003E10  6EDA               	movwf	fsr2h,c
  8707   003E12  0E07               	movlw	7
  8708   003E14  18DE               	xorwf	postinc2,w,c
  8709   003E16  A4D8               	btfss	status,2,c
  8710   003E18  EF10  F01F         	goto	u6161
  8711   003E1C  EF12  F01F         	goto	u6160
  8712   003E20                     u6161:
  8713   003E20  EF29  F01F         	goto	l707
  8714   003E24                     u6160:
  8715   003E24                     
  8716                           ; BSR set to: 0
  8717                           ;Memory.c: 42:                 reverseDetect(&motorL, &motorR);
  8718   003E24  0EC3               	movlw	low _motorL
  8719   003E26  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8720   003E28  0E01               	movlw	high _motorL
  8721   003E2A  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8722   003E2C  0EBA               	movlw	low _motorR
  8723   003E2E  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8724   003E30  0E01               	movlw	high _motorR
  8725   003E32  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8726   003E34  ECD4  F032         	call	_reverseDetect	;wreg free
  8727                           
  8728                           ;Memory.c: 43:                 ReversePink(&motorL, &motorR);
  8729   003E38  0EC3               	movlw	low _motorL
  8730   003E3A  0100               	movlb	0	; () banked
  8731   003E3C  6F80               	movwf	ReversePink@mL& (0+255),b
  8732   003E3E  0E01               	movlw	high _motorL
  8733   003E40  6F81               	movwf	(ReversePink@mL+1)& (0+255),b
  8734   003E42  0EBA               	movlw	low _motorR
  8735   003E44  6F82               	movwf	ReversePink@mR& (0+255),b
  8736   003E46  0E01               	movlw	high _motorR
  8737   003E48  6F83               	movwf	(ReversePink@mR+1)& (0+255),b
  8738   003E4A  EC7B  F02C         	call	_ReversePink	;wreg free
  8739   003E4E  EF29  F01F         	goto	l6137
  8740   003E52                     l707:
  8741   003E52                     l6137:
  8742                           
  8743                           ;Memory.c: 47:       }
  8744   003E52  0100               	movlb	0	; () banked
  8745   003E54  078B               	decf	go_Home@i& (0+255),f,b
  8746   003E56  A0D8               	btfss	status,0,c
  8747   003E58  078C               	decf	(go_Home@i+1)& (0+255),f,b
  8748   003E5A  EFD4  F01D         	goto	l6103
  8749   003E5E                     l6141:
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;Memory.c: 48:         stop(&motorL, &motorR);
  8753   003E5E  0EC3               	movlw	low _motorL
  8754   003E60  6F73               	movwf	stop@mL& (0+255),b
  8755   003E62  0E01               	movlw	high _motorL
  8756   003E64  6F74               	movwf	(stop@mL+1)& (0+255),b
  8757   003E66  0EBA               	movlw	low _motorR
  8758   003E68  6F75               	movwf	stop@mR& (0+255),b
  8759   003E6A  0E01               	movlw	high _motorR
  8760   003E6C  6F76               	movwf	(stop@mR+1)& (0+255),b
  8761   003E6E  EC61  F030         	call	_stop	;wreg free
  8762   003E72                     
  8763                           ;Memory.c: 49:         run_flag=0;
  8764   003E72  0E00               	movlw	0
  8765   003E74  0101               	movlb	1	; () banked
  8766   003E76  6FD5               	movwf	(_run_flag+1)& (0+255),b
  8767   003E78  0E00               	movlw	0
  8768   003E7A  6FD4               	movwf	_run_flag& (0+255),b
  8769   003E7C                     
  8770                           ; BSR set to: 1
  8771   003E7C  0012               	return		;funcret
  8772   003E7E                     __end_of_go_Home:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function _timed_forward *****************
  8776 ;; Defined at:
  8777 ;;		line 165 in file "dc_motor.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
  8780 ;;		 -> motorL(9), 
  8781 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
  8782 ;;		 -> motorR(9), 
  8783 ;;  time            2   23[BANK0 ] int 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;		None
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      void 
  8788 ;; Registers used:
  8789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8795 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;Total ram usage:        9 bytes
  8800 ;; Hardware stack levels used: 1
  8801 ;; Hardware stack levels required when called: 9
  8802 ;; This function calls:
  8803 ;;		_delayed_ms
  8804 ;;		_setMotorPWM
  8805 ;; This function is called by:
  8806 ;;		_go_Home
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text33
  8811   005288                     __ptext33:
  8812                           	callstack 0
  8813   005288                     _timed_forward:
  8814                           	callstack 20
  8815   005288                     
  8816                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8817   005288  0100               	movlb	0	; () banked
  8818   00528A  EE20 F001          	lfsr	2,1
  8819   00528E  5173               	movf	timed_forward@mL& (0+255),w,b
  8820   005290  26D9               	addwf	fsr2l,f,c
  8821   005292  5174               	movf	(timed_forward@mL+1)& (0+255),w,b
  8822   005294  22DA               	addwfc	fsr2h,f,c
  8823   005296  0E01               	movlw	1
  8824   005298  6EDF               	movwf	indf2,c
  8825                           
  8826                           ;dc_motor.c: 169:     mR->direction =1;
  8827   00529A  EE20 F001          	lfsr	2,1
  8828   00529E  5175               	movf	timed_forward@mR& (0+255),w,b
  8829   0052A0  26D9               	addwf	fsr2l,f,c
  8830   0052A2  5176               	movf	(timed_forward@mR+1)& (0+255),w,b
  8831   0052A4  22DA               	addwfc	fsr2h,f,c
  8832   0052A6  0E01               	movlw	1
  8833   0052A8  6EDF               	movwf	indf2,c
  8834                           
  8835                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8836   0052AA  EF7C  F029         	goto	l5687
  8837   0052AE                     l5679:
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;dc_motor.c: 172:         mL->power+=10;
  8841   0052AE  C073  FFD9         	movff	timed_forward@mL,fsr2l
  8842   0052B2  C074  FFDA         	movff	timed_forward@mL+1,fsr2h
  8843   0052B6  0E0A               	movlw	10
  8844   0052B8  26DF               	addwf	indf2,f,c
  8845                           
  8846                           ;dc_motor.c: 173:         mR->power+=10;
  8847   0052BA  C075  FFD9         	movff	timed_forward@mR,fsr2l
  8848   0052BE  C076  FFDA         	movff	timed_forward@mR+1,fsr2h
  8849   0052C2  0E0A               	movlw	10
  8850   0052C4  26DF               	addwf	indf2,f,c
  8851   0052C6                     
  8852                           ; BSR set to: 0
  8853                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8854   0052C6  C073  F06D         	movff	timed_forward@mL,setMotorPWM@m
  8855   0052CA  C074  F06E         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8856   0052CE  EC99  F025         	call	_setMotorPWM	;wreg free
  8857   0052D2                     
  8858                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8859   0052D2  C075  F06D         	movff	timed_forward@mR,setMotorPWM@m
  8860   0052D6  C076  F06E         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8861   0052DA  EC99  F025         	call	_setMotorPWM	;wreg free
  8862   0052DE                     
  8863                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8864   0052DE  0E02               	movlw	2
  8865   0052E0  0100               	movlb	0	; () banked
  8866   0052E2  6F7A               	movwf	(??_timed_forward+1)& (0+255),b
  8867   0052E4  0EA0               	movlw	160
  8868   0052E6  6F79               	movwf	??_timed_forward& (0+255),b
  8869   0052E8  0E92               	movlw	146
  8870   0052EA                     u6647:
  8871   0052EA  2EE8               	decfsz	wreg,f,c
  8872   0052EC  D7FE               	bra	u6647
  8873   0052EE  2F79               	decfsz	??_timed_forward& (0+255),f,b
  8874   0052F0  D7FC               	bra	u6647
  8875   0052F2  2F7A               	decfsz	(??_timed_forward+1)& (0+255),f,b
  8876   0052F4  D7FA               	bra	u6647
  8877   0052F6  F000               	nop	
  8878   0052F8                     l5687:
  8879                           
  8880                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8881   0052F8  C073  FFD9         	movff	timed_forward@mL,fsr2l
  8882   0052FC  C074  FFDA         	movff	timed_forward@mL+1,fsr2h
  8883   005300  50DF               	movf	indf2,w,c
  8884   005302  0100               	movlb	0	; () banked
  8885   005304  6F79               	movwf	??_timed_forward& (0+255),b
  8886   005306  6B7A               	clrf	(??_timed_forward+1)& (0+255),b
  8887   005308  5058               	movf	_power^0,w,c
  8888   00530A  5D79               	subwf	??_timed_forward& (0+255),w,b
  8889   00530C  517A               	movf	(??_timed_forward+1)& (0+255),w,b
  8890   00530E  0A80               	xorlw	128
  8891   005310  6F7B               	movwf	(??_timed_forward+2)& (0+255),b
  8892   005312  5059               	movf	(_power+1)^0,w,c
  8893   005314  0A80               	xorlw	128
  8894   005316  597B               	subwfb	(??_timed_forward+2)& (0+255),w,b
  8895   005318  B0D8               	btfsc	status,0,c
  8896   00531A  EF91  F029         	goto	u5531
  8897   00531E  EF93  F029         	goto	u5530
  8898   005322                     u5531:
  8899   005322  EFA9  F029         	goto	l5691
  8900   005326                     u5530:
  8901   005326                     
  8902                           ; BSR set to: 0
  8903   005326  C075  FFD9         	movff	timed_forward@mR,fsr2l
  8904   00532A  C076  FFDA         	movff	timed_forward@mR+1,fsr2h
  8905   00532E  50DF               	movf	indf2,w,c
  8906   005330  6F79               	movwf	??_timed_forward& (0+255),b
  8907   005332  6B7A               	clrf	(??_timed_forward+1)& (0+255),b
  8908   005334  5058               	movf	_power^0,w,c
  8909   005336  5D79               	subwf	??_timed_forward& (0+255),w,b
  8910   005338  517A               	movf	(??_timed_forward+1)& (0+255),w,b
  8911   00533A  0A80               	xorlw	128
  8912   00533C  6F7B               	movwf	(??_timed_forward+2)& (0+255),b
  8913   00533E  5059               	movf	(_power+1)^0,w,c
  8914   005340  0A80               	xorlw	128
  8915   005342  597B               	subwfb	(??_timed_forward+2)& (0+255),w,b
  8916   005344  A0D8               	btfss	status,0,c
  8917   005346  EFA7  F029         	goto	u5541
  8918   00534A  EFA9  F029         	goto	u5540
  8919   00534E                     u5541:
  8920   00534E  EF57  F029         	goto	l5679
  8921   005352                     u5540:
  8922   005352                     l5691:
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;dc_motor.c: 181:     delayed_ms(time);
  8926   005352  C077  F068         	movff	timed_forward@time,delayed_ms@time
  8927   005356  C078  F069         	movff	timed_forward@time+1,delayed_ms@time+1
  8928   00535A  EC93  F037         	call	_delayed_ms	;wreg free
  8929   00535E  0012               	return		;funcret
  8930   005360                     __end_of_timed_forward:
  8931                           	callstack 0
  8932                           
  8933 ;; *************** function _ReverseYellow *****************
  8934 ;; Defined at:
  8935 ;;		line 334 in file "dc_motor.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  8938 ;;		 -> motorL(9), 
  8939 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  8940 ;;		 -> motorR(9), 
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8956 ;;Total ram usage:        4 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; Hardware stack levels required when called: 11
  8959 ;; This function calls:
  8960 ;;		_ForwardOneBlock
  8961 ;;		_reverseDetect
  8962 ;;		_turnRight45
  8963 ;; This function is called by:
  8964 ;;		_go_Home
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text34
  8969   00582E                     __ptext34:
  8970                           	callstack 0
  8971   00582E                     _ReverseYellow:
  8972                           	callstack 18
  8973   00582E                     
  8974                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8975   00582E  0EC3               	movlw	low _motorL
  8976   005830  0100               	movlb	0	; () banked
  8977   005832  6F7A               	movwf	reverseDetect@mL& (0+255),b
  8978   005834  0E01               	movlw	high _motorL
  8979   005836  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  8980   005838  0EBA               	movlw	low _motorR
  8981   00583A  6F7C               	movwf	reverseDetect@mR& (0+255),b
  8982   00583C  0E01               	movlw	high _motorR
  8983   00583E  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  8984   005840  ECD4  F032         	call	_reverseDetect	;wreg free
  8985                           
  8986                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8987   005844  0EC3               	movlw	low _motorL
  8988   005846  0100               	movlb	0	; () banked
  8989   005848  6F7A               	movwf	turnRight45@mL& (0+255),b
  8990   00584A  0E01               	movlw	high _motorL
  8991   00584C  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  8992   00584E  0EBA               	movlw	low _motorR
  8993   005850  6F7C               	movwf	turnRight45@mR& (0+255),b
  8994   005852  0E01               	movlw	high _motorR
  8995   005854  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  8996   005856  ECAF  F035         	call	_turnRight45	;wreg free
  8997                           
  8998                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8999   00585A  0EC3               	movlw	low _motorL
  9000   00585C  0100               	movlb	0	; () banked
  9001   00585E  6F7A               	movwf	turnRight45@mL& (0+255),b
  9002   005860  0E01               	movlw	high _motorL
  9003   005862  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9004   005864  0EBA               	movlw	low _motorR
  9005   005866  6F7C               	movwf	turnRight45@mR& (0+255),b
  9006   005868  0E01               	movlw	high _motorR
  9007   00586A  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9008   00586C  ECAF  F035         	call	_turnRight45	;wreg free
  9009                           
  9010                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  9011   005870  0EC3               	movlw	low _motorL
  9012   005872  0100               	movlb	0	; () banked
  9013   005874  6F7A               	movwf	ForwardOneBlock@mL& (0+255),b
  9014   005876  0E01               	movlw	high _motorL
  9015   005878  6F7B               	movwf	(ForwardOneBlock@mL+1)& (0+255),b
  9016   00587A  0EBA               	movlw	low _motorR
  9017   00587C  6F7C               	movwf	ForwardOneBlock@mR& (0+255),b
  9018   00587E  0E01               	movlw	high _motorR
  9019   005880  6F7D               	movwf	(ForwardOneBlock@mR+1)& (0+255),b
  9020   005882  EC87  F035         	call	_ForwardOneBlock	;wreg free
  9021                           
  9022                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  9023   005886  0EC3               	movlw	low _motorL
  9024   005888  0100               	movlb	0	; () banked
  9025   00588A  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9026   00588C  0E01               	movlw	high _motorL
  9027   00588E  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9028   005890  0EBA               	movlw	low _motorR
  9029   005892  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9030   005894  0E01               	movlw	high _motorR
  9031   005896  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9032   005898  ECD4  F032         	call	_reverseDetect	;wreg free
  9033                           
  9034                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  9035   00589C  0EC3               	movlw	low _motorL
  9036   00589E  0100               	movlb	0	; () banked
  9037   0058A0  6F7A               	movwf	turnRight45@mL& (0+255),b
  9038   0058A2  0E01               	movlw	high _motorL
  9039   0058A4  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9040   0058A6  0EBA               	movlw	low _motorR
  9041   0058A8  6F7C               	movwf	turnRight45@mR& (0+255),b
  9042   0058AA  0E01               	movlw	high _motorR
  9043   0058AC  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9044   0058AE  ECAF  F035         	call	_turnRight45	;wreg free
  9045                           
  9046                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  9047   0058B2  0EC3               	movlw	low _motorL
  9048   0058B4  0100               	movlb	0	; () banked
  9049   0058B6  6F7A               	movwf	turnRight45@mL& (0+255),b
  9050   0058B8  0E01               	movlw	high _motorL
  9051   0058BA  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9052   0058BC  0EBA               	movlw	low _motorR
  9053   0058BE  6F7C               	movwf	turnRight45@mR& (0+255),b
  9054   0058C0  0E01               	movlw	high _motorR
  9055   0058C2  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9056   0058C4  ECAF  F035         	call	_turnRight45	;wreg free
  9057                           
  9058                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  9059   0058C8  0EC3               	movlw	low _motorL
  9060   0058CA  0100               	movlb	0	; () banked
  9061   0058CC  6F7A               	movwf	turnRight45@mL& (0+255),b
  9062   0058CE  0E01               	movlw	high _motorL
  9063   0058D0  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9064   0058D2  0EBA               	movlw	low _motorR
  9065   0058D4  6F7C               	movwf	turnRight45@mR& (0+255),b
  9066   0058D6  0E01               	movlw	high _motorR
  9067   0058D8  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9068   0058DA  ECAF  F035         	call	_turnRight45	;wreg free
  9069                           
  9070                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  9071   0058DE  0EC3               	movlw	low _motorL
  9072   0058E0  0100               	movlb	0	; () banked
  9073   0058E2  6F7A               	movwf	turnRight45@mL& (0+255),b
  9074   0058E4  0E01               	movlw	high _motorL
  9075   0058E6  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9076   0058E8  0EBA               	movlw	low _motorR
  9077   0058EA  6F7C               	movwf	turnRight45@mR& (0+255),b
  9078   0058EC  0E01               	movlw	high _motorR
  9079   0058EE  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9080   0058F0  ECAF  F035         	call	_turnRight45	;wreg free
  9081   0058F4  0012               	return		;funcret
  9082   0058F6                     __end_of_ReverseYellow:
  9083                           	callstack 0
  9084                           
  9085 ;; *************** function _ReversePink *****************
  9086 ;; Defined at:
  9087 ;;		line 345 in file "dc_motor.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9090 ;;		 -> motorL(9), 
  9091 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9092 ;;		 -> motorR(9), 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9104 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;Total ram usage:        4 bytes
  9109 ;; Hardware stack levels used: 1
  9110 ;; Hardware stack levels required when called: 11
  9111 ;; This function calls:
  9112 ;;		_ForwardOneBlock
  9113 ;;		_reverseDetect
  9114 ;;		_turnLeft45
  9115 ;; This function is called by:
  9116 ;;		_go_Home
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text35
  9121   0058F6                     __ptext35:
  9122                           	callstack 0
  9123   0058F6                     _ReversePink:
  9124                           	callstack 18
  9125   0058F6                     
  9126                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  9127   0058F6  0EC3               	movlw	low _motorL
  9128   0058F8  0100               	movlb	0	; () banked
  9129   0058FA  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9130   0058FC  0E01               	movlw	high _motorL
  9131   0058FE  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9132   005900  0EBA               	movlw	low _motorR
  9133   005902  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9134   005904  0E01               	movlw	high _motorR
  9135   005906  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9136   005908  ECD4  F032         	call	_reverseDetect	;wreg free
  9137                           
  9138                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  9139   00590C  0EC3               	movlw	low _motorL
  9140   00590E  0100               	movlb	0	; () banked
  9141   005910  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9142   005912  0E01               	movlw	high _motorL
  9143   005914  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9144   005916  0EBA               	movlw	low _motorR
  9145   005918  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9146   00591A  0E01               	movlw	high _motorR
  9147   00591C  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9148   00591E  ECD7  F035         	call	_turnLeft45	;wreg free
  9149                           
  9150                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  9151   005922  0EC3               	movlw	low _motorL
  9152   005924  0100               	movlb	0	; () banked
  9153   005926  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9154   005928  0E01               	movlw	high _motorL
  9155   00592A  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9156   00592C  0EBA               	movlw	low _motorR
  9157   00592E  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9158   005930  0E01               	movlw	high _motorR
  9159   005932  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9160   005934  ECD7  F035         	call	_turnLeft45	;wreg free
  9161                           
  9162                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  9163   005938  0EC3               	movlw	low _motorL
  9164   00593A  0100               	movlb	0	; () banked
  9165   00593C  6F7A               	movwf	ForwardOneBlock@mL& (0+255),b
  9166   00593E  0E01               	movlw	high _motorL
  9167   005940  6F7B               	movwf	(ForwardOneBlock@mL+1)& (0+255),b
  9168   005942  0EBA               	movlw	low _motorR
  9169   005944  6F7C               	movwf	ForwardOneBlock@mR& (0+255),b
  9170   005946  0E01               	movlw	high _motorR
  9171   005948  6F7D               	movwf	(ForwardOneBlock@mR+1)& (0+255),b
  9172   00594A  EC87  F035         	call	_ForwardOneBlock	;wreg free
  9173                           
  9174                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  9175   00594E  0EC3               	movlw	low _motorL
  9176   005950  0100               	movlb	0	; () banked
  9177   005952  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9178   005954  0E01               	movlw	high _motorL
  9179   005956  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9180   005958  0EBA               	movlw	low _motorR
  9181   00595A  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9182   00595C  0E01               	movlw	high _motorR
  9183   00595E  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9184   005960  ECD4  F032         	call	_reverseDetect	;wreg free
  9185                           
  9186                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  9187   005964  0EC3               	movlw	low _motorL
  9188   005966  0100               	movlb	0	; () banked
  9189   005968  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9190   00596A  0E01               	movlw	high _motorL
  9191   00596C  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9192   00596E  0EBA               	movlw	low _motorR
  9193   005970  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9194   005972  0E01               	movlw	high _motorR
  9195   005974  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9196   005976  ECD7  F035         	call	_turnLeft45	;wreg free
  9197                           
  9198                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  9199   00597A  0EC3               	movlw	low _motorL
  9200   00597C  0100               	movlb	0	; () banked
  9201   00597E  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9202   005980  0E01               	movlw	high _motorL
  9203   005982  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9204   005984  0EBA               	movlw	low _motorR
  9205   005986  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9206   005988  0E01               	movlw	high _motorR
  9207   00598A  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9208   00598C  ECD7  F035         	call	_turnLeft45	;wreg free
  9209                           
  9210                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  9211   005990  0EC3               	movlw	low _motorL
  9212   005992  0100               	movlb	0	; () banked
  9213   005994  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9214   005996  0E01               	movlw	high _motorL
  9215   005998  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9216   00599A  0EBA               	movlw	low _motorR
  9217   00599C  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9218   00599E  0E01               	movlw	high _motorR
  9219   0059A0  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9220   0059A2  ECD7  F035         	call	_turnLeft45	;wreg free
  9221                           
  9222                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  9223   0059A6  0EC3               	movlw	low _motorL
  9224   0059A8  0100               	movlb	0	; () banked
  9225   0059AA  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9226   0059AC  0E01               	movlw	high _motorL
  9227   0059AE  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9228   0059B0  0EBA               	movlw	low _motorR
  9229   0059B2  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9230   0059B4  0E01               	movlw	high _motorR
  9231   0059B6  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9232   0059B8  ECD7  F035         	call	_turnLeft45	;wreg free
  9233   0059BC  0012               	return		;funcret
  9234   0059BE                     __end_of_ReversePink:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _ForwardOneBlock *****************
  9238 ;; Defined at:
  9239 ;;		line 238 in file "dc_motor.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  9242 ;;		 -> motorL(9), 
  9243 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  9244 ;;		 -> motorR(9), 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;Total ram usage:        6 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 10
  9263 ;; This function calls:
  9264 ;;		_delayed_ms
  9265 ;;		_fullSpeedAhead
  9266 ;;		_stop
  9267 ;; This function is called by:
  9268 ;;		_ReverseYellow
  9269 ;;		_ReversePink
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text36
  9274   006B0E                     __ptext36:
  9275                           	callstack 0
  9276   006B0E                     _ForwardOneBlock:
  9277                           	callstack 18
  9278   006B0E                     
  9279                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  9280   006B0E  C07A  F073         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  9281   006B12  C07B  F074         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  9282   006B16  C07C  F075         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  9283   006B1A  C07D  F076         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  9284   006B1E  ECB1  F02B         	call	_fullSpeedAhead	;wreg free
  9285   006B22                     
  9286                           ;dc_motor.c: 240:     delayed_ms(RunOneBlockTime);
  9287   006B22  C054  F068         	movff	_RunOneBlockTime,delayed_ms@time
  9288   006B26  C055  F069         	movff	_RunOneBlockTime+1,delayed_ms@time+1
  9289   006B2A  EC93  F037         	call	_delayed_ms	;wreg free
  9290   006B2E                     
  9291                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  9292   006B2E  0EC3               	movlw	low _motorL
  9293   006B30  0100               	movlb	0	; () banked
  9294   006B32  6F73               	movwf	stop@mL& (0+255),b
  9295   006B34  0E01               	movlw	high _motorL
  9296   006B36  6F74               	movwf	(stop@mL+1)& (0+255),b
  9297   006B38  0EBA               	movlw	low _motorR
  9298   006B3A  6F75               	movwf	stop@mR& (0+255),b
  9299   006B3C  0E01               	movlw	high _motorR
  9300   006B3E  6F76               	movwf	(stop@mR+1)& (0+255),b
  9301   006B40  EC61  F030         	call	_stop	;wreg free
  9302   006B44                     
  9303                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9304   006B44  0E05               	movlw	5
  9305   006B46  0100               	movlb	0	; () banked
  9306   006B48  6F7F               	movwf	(??_ForwardOneBlock+1)& (0+255),b
  9307   006B4A  0E0F               	movlw	15
  9308   006B4C  6F7E               	movwf	??_ForwardOneBlock& (0+255),b
  9309   006B4E  0EF1               	movlw	241
  9310   006B50                     u6657:
  9311   006B50  2EE8               	decfsz	wreg,f,c
  9312   006B52  D7FE               	bra	u6657
  9313   006B54  2F7E               	decfsz	??_ForwardOneBlock& (0+255),f,b
  9314   006B56  D7FC               	bra	u6657
  9315   006B58  2F7F               	decfsz	(??_ForwardOneBlock+1)& (0+255),f,b
  9316   006B5A  D7FA               	bra	u6657
  9317   006B5C  0012               	return		;funcret
  9318   006B5E                     __end_of_ForwardOneBlock:
  9319                           	callstack 0
  9320                           
  9321 ;; *************** function _RedMove *****************
  9322 ;; Defined at:
  9323 ;;		line 262 in file "dc_motor.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9326 ;;		 -> motorL(9), 
  9327 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9328 ;;		 -> motorR(9), 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;		None
  9331 ;; Return value:  Size  Location     Type
  9332 ;;                  1    wreg      void 
  9333 ;; Registers used:
  9334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9335 ;; Tracked objects:
  9336 ;;		On entry : 0/0
  9337 ;;		On exit  : 0/0
  9338 ;;		Unchanged: 0/0
  9339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9340 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9343 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9344 ;;Total ram usage:        4 bytes
  9345 ;; Hardware stack levels used: 1
  9346 ;; Hardware stack levels required when called: 11
  9347 ;; This function calls:
  9348 ;;		_reverseDetect
  9349 ;;		_turnRight45
  9350 ;; This function is called by:
  9351 ;;		_main
  9352 ;;		_go_Home
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text37
  9357   006E5C                     __ptext37:
  9358                           	callstack 0
  9359   006E5C                     _RedMove:
  9360                           	callstack 18
  9361   006E5C                     
  9362                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  9363   006E5C  0EC3               	movlw	low _motorL
  9364   006E5E  0100               	movlb	0	; () banked
  9365   006E60  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9366   006E62  0E01               	movlw	high _motorL
  9367   006E64  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9368   006E66  0EBA               	movlw	low _motorR
  9369   006E68  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9370   006E6A  0E01               	movlw	high _motorR
  9371   006E6C  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9372   006E6E  ECD4  F032         	call	_reverseDetect	;wreg free
  9373                           
  9374                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  9375   006E72  0EC3               	movlw	low _motorL
  9376   006E74  0100               	movlb	0	; () banked
  9377   006E76  6F7A               	movwf	turnRight45@mL& (0+255),b
  9378   006E78  0E01               	movlw	high _motorL
  9379   006E7A  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9380   006E7C  0EBA               	movlw	low _motorR
  9381   006E7E  6F7C               	movwf	turnRight45@mR& (0+255),b
  9382   006E80  0E01               	movlw	high _motorR
  9383   006E82  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9384   006E84  ECAF  F035         	call	_turnRight45	;wreg free
  9385                           
  9386                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  9387   006E88  0EC3               	movlw	low _motorL
  9388   006E8A  0100               	movlb	0	; () banked
  9389   006E8C  6F7A               	movwf	turnRight45@mL& (0+255),b
  9390   006E8E  0E01               	movlw	high _motorL
  9391   006E90  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9392   006E92  0EBA               	movlw	low _motorR
  9393   006E94  6F7C               	movwf	turnRight45@mR& (0+255),b
  9394   006E96  0E01               	movlw	high _motorR
  9395   006E98  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9396   006E9A  ECAF  F035         	call	_turnRight45	;wreg free
  9397   006E9E  0012               	return		;funcret
  9398   006EA0                     __end_of_RedMove:
  9399                           	callstack 0
  9400                           
  9401 ;; *************** function _OrangeMove *****************
  9402 ;; Defined at:
  9403 ;;		line 308 in file "dc_motor.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9406 ;;		 -> motorL(9), 
  9407 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9408 ;;		 -> motorR(9), 
  9409 ;; Auto vars:     Size  Location     Type
  9410 ;;		None
  9411 ;; Return value:  Size  Location     Type
  9412 ;;                  1    wreg      void 
  9413 ;; Registers used:
  9414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9415 ;; Tracked objects:
  9416 ;;		On entry : 0/0
  9417 ;;		On exit  : 0/0
  9418 ;;		Unchanged: 0/0
  9419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;Total ram usage:        4 bytes
  9425 ;; Hardware stack levels used: 1
  9426 ;; Hardware stack levels required when called: 11
  9427 ;; This function calls:
  9428 ;;		_reverseDetect
  9429 ;;		_turnRight45
  9430 ;; This function is called by:
  9431 ;;		_main
  9432 ;;		_go_Home
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text38
  9437   006604                     __ptext38:
  9438                           	callstack 0
  9439   006604                     _OrangeMove:
  9440                           	callstack 18
  9441   006604                     
  9442                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  9443   006604  0EC3               	movlw	low _motorL
  9444   006606  0100               	movlb	0	; () banked
  9445   006608  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9446   00660A  0E01               	movlw	high _motorL
  9447   00660C  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9448   00660E  0EBA               	movlw	low _motorR
  9449   006610  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9450   006612  0E01               	movlw	high _motorR
  9451   006614  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9452   006616  ECD4  F032         	call	_reverseDetect	;wreg free
  9453                           
  9454                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  9455   00661A  0EC3               	movlw	low _motorL
  9456   00661C  0100               	movlb	0	; () banked
  9457   00661E  6F7A               	movwf	turnRight45@mL& (0+255),b
  9458   006620  0E01               	movlw	high _motorL
  9459   006622  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9460   006624  0EBA               	movlw	low _motorR
  9461   006626  6F7C               	movwf	turnRight45@mR& (0+255),b
  9462   006628  0E01               	movlw	high _motorR
  9463   00662A  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9464   00662C  ECAF  F035         	call	_turnRight45	;wreg free
  9465                           
  9466                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  9467   006630  0EC3               	movlw	low _motorL
  9468   006632  0100               	movlb	0	; () banked
  9469   006634  6F7A               	movwf	turnRight45@mL& (0+255),b
  9470   006636  0E01               	movlw	high _motorL
  9471   006638  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9472   00663A  0EBA               	movlw	low _motorR
  9473   00663C  6F7C               	movwf	turnRight45@mR& (0+255),b
  9474   00663E  0E01               	movlw	high _motorR
  9475   006640  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9476   006642  ECAF  F035         	call	_turnRight45	;wreg free
  9477                           
  9478                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  9479   006646  0EC3               	movlw	low _motorL
  9480   006648  0100               	movlb	0	; () banked
  9481   00664A  6F7A               	movwf	turnRight45@mL& (0+255),b
  9482   00664C  0E01               	movlw	high _motorL
  9483   00664E  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9484   006650  0EBA               	movlw	low _motorR
  9485   006652  6F7C               	movwf	turnRight45@mR& (0+255),b
  9486   006654  0E01               	movlw	high _motorR
  9487   006656  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9488   006658  ECAF  F035         	call	_turnRight45	;wreg free
  9489   00665C  0012               	return		;funcret
  9490   00665E                     __end_of_OrangeMove:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function _LightBlueMove *****************
  9494 ;; Defined at:
  9495 ;;		line 317 in file "dc_motor.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9498 ;;		 -> motorL(9), 
  9499 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9500 ;;		 -> motorR(9), 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;		None
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9515 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;Total ram usage:        4 bytes
  9517 ;; Hardware stack levels used: 1
  9518 ;; Hardware stack levels required when called: 11
  9519 ;; This function calls:
  9520 ;;		_reverseDetect
  9521 ;;		_turnLeft45
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;;		_go_Home
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           	psect	text39
  9529   00665E                     __ptext39:
  9530                           	callstack 0
  9531   00665E                     _LightBlueMove:
  9532                           	callstack 18
  9533   00665E                     
  9534                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9535   00665E  0EC3               	movlw	low _motorL
  9536   006660  0100               	movlb	0	; () banked
  9537   006662  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9538   006664  0E01               	movlw	high _motorL
  9539   006666  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9540   006668  0EBA               	movlw	low _motorR
  9541   00666A  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9542   00666C  0E01               	movlw	high _motorR
  9543   00666E  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9544   006670  ECD4  F032         	call	_reverseDetect	;wreg free
  9545                           
  9546                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9547   006674  0EC3               	movlw	low _motorL
  9548   006676  0100               	movlb	0	; () banked
  9549   006678  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9550   00667A  0E01               	movlw	high _motorL
  9551   00667C  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9552   00667E  0EBA               	movlw	low _motorR
  9553   006680  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9554   006682  0E01               	movlw	high _motorR
  9555   006684  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9556   006686  ECD7  F035         	call	_turnLeft45	;wreg free
  9557                           
  9558                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9559   00668A  0EC3               	movlw	low _motorL
  9560   00668C  0100               	movlb	0	; () banked
  9561   00668E  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9562   006690  0E01               	movlw	high _motorL
  9563   006692  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9564   006694  0EBA               	movlw	low _motorR
  9565   006696  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9566   006698  0E01               	movlw	high _motorR
  9567   00669A  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9568   00669C  ECD7  F035         	call	_turnLeft45	;wreg free
  9569                           
  9570                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9571   0066A0  0EC3               	movlw	low _motorL
  9572   0066A2  0100               	movlb	0	; () banked
  9573   0066A4  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9574   0066A6  0E01               	movlw	high _motorL
  9575   0066A8  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9576   0066AA  0EBA               	movlw	low _motorR
  9577   0066AC  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9578   0066AE  0E01               	movlw	high _motorR
  9579   0066B0  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9580   0066B2  ECD7  F035         	call	_turnLeft45	;wreg free
  9581   0066B6  0012               	return		;funcret
  9582   0066B8                     __end_of_LightBlueMove:
  9583                           	callstack 0
  9584                           
  9585 ;; *************** function _GreenMove *****************
  9586 ;; Defined at:
  9587 ;;		line 270 in file "dc_motor.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9590 ;;		 -> motorL(9), 
  9591 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9592 ;;		 -> motorR(9), 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;Total ram usage:        4 bytes
  9609 ;; Hardware stack levels used: 1
  9610 ;; Hardware stack levels required when called: 11
  9611 ;; This function calls:
  9612 ;;		_reverseDetect
  9613 ;;		_turnLeft45
  9614 ;; This function is called by:
  9615 ;;		_main
  9616 ;;		_go_Home
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text40
  9621   006EA0                     __ptext40:
  9622                           	callstack 0
  9623   006EA0                     _GreenMove:
  9624                           	callstack 18
  9625   006EA0                     
  9626                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9627   006EA0  0EC3               	movlw	low _motorL
  9628   006EA2  0100               	movlb	0	; () banked
  9629   006EA4  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9630   006EA6  0E01               	movlw	high _motorL
  9631   006EA8  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9632   006EAA  0EBA               	movlw	low _motorR
  9633   006EAC  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9634   006EAE  0E01               	movlw	high _motorR
  9635   006EB0  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9636   006EB2  ECD4  F032         	call	_reverseDetect	;wreg free
  9637                           
  9638                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9639   006EB6  0EC3               	movlw	low _motorL
  9640   006EB8  0100               	movlb	0	; () banked
  9641   006EBA  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9642   006EBC  0E01               	movlw	high _motorL
  9643   006EBE  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9644   006EC0  0EBA               	movlw	low _motorR
  9645   006EC2  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9646   006EC4  0E01               	movlw	high _motorR
  9647   006EC6  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9648   006EC8  ECD7  F035         	call	_turnLeft45	;wreg free
  9649                           
  9650                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9651   006ECC  0EC3               	movlw	low _motorL
  9652   006ECE  0100               	movlb	0	; () banked
  9653   006ED0  6F7A               	movwf	turnLeft45@mL& (0+255),b
  9654   006ED2  0E01               	movlw	high _motorL
  9655   006ED4  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
  9656   006ED6  0EBA               	movlw	low _motorR
  9657   006ED8  6F7C               	movwf	turnLeft45@mR& (0+255),b
  9658   006EDA  0E01               	movlw	high _motorR
  9659   006EDC  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
  9660   006EDE  ECD7  F035         	call	_turnLeft45	;wreg free
  9661   006EE2  0012               	return		;funcret
  9662   006EE4                     __end_of_GreenMove:
  9663                           	callstack 0
  9664                           
  9665 ;; *************** function _BlueMove *****************
  9666 ;; Defined at:
  9667 ;;		line 278 in file "dc_motor.c"
  9668 ;; Parameters:    Size  Location     Type
  9669 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
  9670 ;;		 -> motorL(9), 
  9671 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
  9672 ;;		 -> motorR(9), 
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;Total ram usage:        4 bytes
  9689 ;; Hardware stack levels used: 1
  9690 ;; Hardware stack levels required when called: 11
  9691 ;; This function calls:
  9692 ;;		_reverseDetect
  9693 ;;		_turnRight45
  9694 ;; This function is called by:
  9695 ;;		_main
  9696 ;;		_go_Home
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text41
  9701   00639E                     __ptext41:
  9702                           	callstack 0
  9703   00639E                     _BlueMove:
  9704                           	callstack 18
  9705   00639E                     
  9706                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9707   00639E  0EC3               	movlw	low _motorL
  9708   0063A0  0100               	movlb	0	; () banked
  9709   0063A2  6F7A               	movwf	reverseDetect@mL& (0+255),b
  9710   0063A4  0E01               	movlw	high _motorL
  9711   0063A6  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
  9712   0063A8  0EBA               	movlw	low _motorR
  9713   0063AA  6F7C               	movwf	reverseDetect@mR& (0+255),b
  9714   0063AC  0E01               	movlw	high _motorR
  9715   0063AE  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
  9716   0063B0  ECD4  F032         	call	_reverseDetect	;wreg free
  9717                           
  9718                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9719   0063B4  0EC3               	movlw	low _motorL
  9720   0063B6  0100               	movlb	0	; () banked
  9721   0063B8  6F7A               	movwf	turnRight45@mL& (0+255),b
  9722   0063BA  0E01               	movlw	high _motorL
  9723   0063BC  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9724   0063BE  0EBA               	movlw	low _motorR
  9725   0063C0  6F7C               	movwf	turnRight45@mR& (0+255),b
  9726   0063C2  0E01               	movlw	high _motorR
  9727   0063C4  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9728   0063C6  ECAF  F035         	call	_turnRight45	;wreg free
  9729                           
  9730                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9731   0063CA  0EC3               	movlw	low _motorL
  9732   0063CC  0100               	movlb	0	; () banked
  9733   0063CE  6F7A               	movwf	turnRight45@mL& (0+255),b
  9734   0063D0  0E01               	movlw	high _motorL
  9735   0063D2  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9736   0063D4  0EBA               	movlw	low _motorR
  9737   0063D6  6F7C               	movwf	turnRight45@mR& (0+255),b
  9738   0063D8  0E01               	movlw	high _motorR
  9739   0063DA  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9740   0063DC  ECAF  F035         	call	_turnRight45	;wreg free
  9741                           
  9742                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9743   0063E0  0EC3               	movlw	low _motorL
  9744   0063E2  0100               	movlb	0	; () banked
  9745   0063E4  6F7A               	movwf	turnRight45@mL& (0+255),b
  9746   0063E6  0E01               	movlw	high _motorL
  9747   0063E8  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9748   0063EA  0EBA               	movlw	low _motorR
  9749   0063EC  6F7C               	movwf	turnRight45@mR& (0+255),b
  9750   0063EE  0E01               	movlw	high _motorR
  9751   0063F0  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9752   0063F2  ECAF  F035         	call	_turnRight45	;wreg free
  9753                           
  9754                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9755   0063F6  0EC3               	movlw	low _motorL
  9756   0063F8  0100               	movlb	0	; () banked
  9757   0063FA  6F7A               	movwf	turnRight45@mL& (0+255),b
  9758   0063FC  0E01               	movlw	high _motorL
  9759   0063FE  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
  9760   006400  0EBA               	movlw	low _motorR
  9761   006402  6F7C               	movwf	turnRight45@mR& (0+255),b
  9762   006404  0E01               	movlw	high _motorR
  9763   006406  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
  9764   006408  ECAF  F035         	call	_turnRight45	;wreg free
  9765   00640C  0012               	return		;funcret
  9766   00640E                     __end_of_BlueMove:
  9767                           	callstack 0
  9768                           
  9769 ;; *************** function _getTMR0val *****************
  9770 ;; Defined at:
  9771 ;;		line 28 in file "timers.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;		None
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;  moving          2    0[BANK0 ] int 
  9776 ;;  temp            2    0        unsigned int 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9789 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9790 ;;Total ram usage:        2 bytes
  9791 ;; Hardware stack levels used: 1
  9792 ;; Hardware stack levels required when called: 7
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_main
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text42
  9801   007172                     __ptext42:
  9802                           	callstack 0
  9803   007172                     _getTMR0val:
  9804                           	callstack 23
  9805   007172  50D3               	movf	211,w,c	;volatile
  9806   007174                     
  9807                           ;timers.c: 32:     int moving=TMR0H<<8;
  9808   007174  50D4               	movf	212,w,c	;volatile
  9809   007176  0100               	movlb	0	; () banked
  9810   007178  6F61               	movwf	(getTMR0val@moving+1)& (0+255),b
  9811   00717A  6B60               	clrf	getTMR0val@moving& (0+255),b
  9812   00717C                     
  9813                           ; BSR set to: 0
  9814                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9815   00717C  90D8               	bcf	status,0,c
  9816   00717E  344E               	rlcf	_move_count^0,w,c	;volatile
  9817   007180  6ED9               	movwf	fsr2l,c
  9818   007182  344F               	rlcf	(_move_count+1)^0,w,c	;volatile
  9819   007184  6EDA               	movwf	fsr2h,c
  9820   007186  0E00               	movlw	low _Time_forward
  9821   007188  26D9               	addwf	fsr2l,f,c
  9822   00718A  0E03               	movlw	high _Time_forward
  9823   00718C  22DA               	addwfc	fsr2h,f,c
  9824   00718E  C060  FFDE         	movff	getTMR0val@moving,postinc2
  9825   007192  C061  FFDD         	movff	getTMR0val@moving+1,postdec2
  9826   007196                     
  9827                           ; BSR set to: 0
  9828   007196  0012               	return		;funcret
  9829   007198                     __end_of_getTMR0val:
  9830                           	callstack 0
  9831                           
  9832 ;; *************** function _colour_rel *****************
  9833 ;; Defined at:
  9834 ;;		line 114 in file "color.c"
  9835 ;; Parameters:    Size  Location     Type
  9836 ;;  vals            2   74[BANK0 ] PTR struct RGB
  9837 ;;		 -> vals(8), 
  9838 ;;  rel             2   76[BANK0 ] PTR struct RGB_rel
  9839 ;;		 -> rel(12), 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;  B               4   98[BANK0 ] float 
  9842 ;;  G               4   94[BANK0 ] float 
  9843 ;;  R               4   90[BANK0 ] float 
  9844 ;;  L               4   78[BANK0 ] float 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  1    wreg      void 
  9847 ;; Registers used:
  9848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9855 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;Total ram usage:       28 bytes
  9859 ;; Hardware stack levels used: 1
  9860 ;; Hardware stack levels required when called: 8
  9861 ;; This function calls:
  9862 ;;		___fladd
  9863 ;;		___fldiv
  9864 ;;		___xxtofl
  9865 ;; This function is called by:
  9866 ;;		_main
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text43
  9871   00352C                     __ptext43:
  9872                           	callstack 0
  9873   00352C                     _colour_rel:
  9874                           	callstack 22
  9875   00352C                     
  9876                           ;color.c: 115:     float R = vals->R;
  9877   00352C  C0AA  FFD9         	movff	colour_rel@vals,fsr2l
  9878   003530  C0AB  FFDA         	movff	colour_rel@vals+1,fsr2h
  9879   003534  CFDE F060          	movff	postinc2,___xxtofl@val
  9880   003538  CFDD F061          	movff	postdec2,___xxtofl@val+1
  9881   00353C  0100               	movlb	0	; () banked
  9882   00353E  0E00               	movlw	0
  9883   003540  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9884   003542  0EFF               	movlw	-1
  9885   003544  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  9886   003546  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  9887   003548  0E01               	movlw	1
  9888   00354A  ECF8  F023         	call	___xxtofl
  9889   00354E  C060  F0BA         	movff	?___xxtofl,colour_rel@R
  9890   003552  C061  F0BB         	movff	?___xxtofl+1,colour_rel@R+1
  9891   003556  C062  F0BC         	movff	?___xxtofl+2,colour_rel@R+2
  9892   00355A  C063  F0BD         	movff	?___xxtofl+3,colour_rel@R+3
  9893                           
  9894                           ;color.c: 116:     float G = vals->G;
  9895   00355E  0100               	movlb	0	; () banked
  9896   003560  EE20 F002          	lfsr	2,2
  9897   003564  51AA               	movf	colour_rel@vals& (0+255),w,b
  9898   003566  26D9               	addwf	fsr2l,f,c
  9899   003568  51AB               	movf	(colour_rel@vals+1)& (0+255),w,b
  9900   00356A  22DA               	addwfc	fsr2h,f,c
  9901   00356C  CFDE F060          	movff	postinc2,___xxtofl@val
  9902   003570  CFDD F061          	movff	postdec2,___xxtofl@val+1
  9903   003574  0E00               	movlw	0
  9904   003576  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9905   003578  0EFF               	movlw	-1
  9906   00357A  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  9907   00357C  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  9908   00357E  0E01               	movlw	1
  9909   003580  ECF8  F023         	call	___xxtofl
  9910   003584  C060  F0BE         	movff	?___xxtofl,colour_rel@G
  9911   003588  C061  F0BF         	movff	?___xxtofl+1,colour_rel@G+1
  9912   00358C  C062  F0C0         	movff	?___xxtofl+2,colour_rel@G+2
  9913   003590  C063  F0C1         	movff	?___xxtofl+3,colour_rel@G+3
  9914                           
  9915                           ;color.c: 117:     float B = vals->B;
  9916   003594  0100               	movlb	0	; () banked
  9917   003596  EE20 F004          	lfsr	2,4
  9918   00359A  51AA               	movf	colour_rel@vals& (0+255),w,b
  9919   00359C  26D9               	addwf	fsr2l,f,c
  9920   00359E  51AB               	movf	(colour_rel@vals+1)& (0+255),w,b
  9921   0035A0  22DA               	addwfc	fsr2h,f,c
  9922   0035A2  CFDE F060          	movff	postinc2,___xxtofl@val
  9923   0035A6  CFDD F061          	movff	postdec2,___xxtofl@val+1
  9924   0035AA  0E00               	movlw	0
  9925   0035AC  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9926   0035AE  0EFF               	movlw	-1
  9927   0035B0  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  9928   0035B2  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  9929   0035B4  0E01               	movlw	1
  9930   0035B6  ECF8  F023         	call	___xxtofl
  9931   0035BA  C060  F0C2         	movff	?___xxtofl,colour_rel@B
  9932   0035BE  C061  F0C3         	movff	?___xxtofl+1,colour_rel@B+1
  9933   0035C2  C062  F0C4         	movff	?___xxtofl+2,colour_rel@B+2
  9934   0035C6  C063  F0C5         	movff	?___xxtofl+3,colour_rel@B+3
  9935                           
  9936                           ;color.c: 118:     float L = vals->L;
  9937   0035CA  0100               	movlb	0	; () banked
  9938   0035CC  EE20 F006          	lfsr	2,6
  9939   0035D0  51AA               	movf	colour_rel@vals& (0+255),w,b
  9940   0035D2  26D9               	addwf	fsr2l,f,c
  9941   0035D4  51AB               	movf	(colour_rel@vals+1)& (0+255),w,b
  9942   0035D6  22DA               	addwfc	fsr2h,f,c
  9943   0035D8  CFDE F060          	movff	postinc2,___xxtofl@val
  9944   0035DC  CFDD F061          	movff	postdec2,___xxtofl@val+1
  9945   0035E0  0E00               	movlw	0
  9946   0035E2  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  9947   0035E4  0EFF               	movlw	-1
  9948   0035E6  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  9949   0035E8  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  9950   0035EA  0E01               	movlw	1
  9951   0035EC  ECF8  F023         	call	___xxtofl
  9952   0035F0  C060  F0AE         	movff	?___xxtofl,colour_rel@L
  9953   0035F4  C061  F0AF         	movff	?___xxtofl+1,colour_rel@L+1
  9954   0035F8  C062  F0B0         	movff	?___xxtofl+2,colour_rel@L+2
  9955   0035FC  C063  F0B1         	movff	?___xxtofl+3,colour_rel@L+3
  9956   003600                     
  9957                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9958   003600  C0BE  F064         	movff	colour_rel@G,___fladd@a
  9959   003604  C0BF  F065         	movff	colour_rel@G+1,___fladd@a+1
  9960   003608  C0C0  F066         	movff	colour_rel@G+2,___fladd@a+2
  9961   00360C  C0C1  F067         	movff	colour_rel@G+3,___fladd@a+3
  9962   003610  C0BA  F060         	movff	colour_rel@R,___fladd@b
  9963   003614  C0BB  F061         	movff	colour_rel@R+1,___fladd@b+1
  9964   003618  C0BC  F062         	movff	colour_rel@R+2,___fladd@b+2
  9965   00361C  C0BD  F063         	movff	colour_rel@R+3,___fladd@b+3
  9966   003620  EC51  F014         	call	___fladd	;wreg free
  9967   003624  C060  F0B2         	movff	?___fladd,_colour_rel$3307
  9968   003628  C061  F0B3         	movff	?___fladd+1,_colour_rel$3307+1
  9969   00362C  C062  F0B4         	movff	?___fladd+2,_colour_rel$3307+2
  9970   003630  C063  F0B5         	movff	?___fladd+3,_colour_rel$3307+3
  9971   003634                     
  9972                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9973   003634  C0C2  F064         	movff	colour_rel@B,___fladd@a
  9974   003638  C0C3  F065         	movff	colour_rel@B+1,___fladd@a+1
  9975   00363C  C0C4  F066         	movff	colour_rel@B+2,___fladd@a+2
  9976   003640  C0C5  F067         	movff	colour_rel@B+3,___fladd@a+3
  9977   003644  C0B2  F060         	movff	_colour_rel$3307,___fladd@b
  9978   003648  C0B3  F061         	movff	_colour_rel$3307+1,___fladd@b+1
  9979   00364C  C0B4  F062         	movff	_colour_rel$3307+2,___fladd@b+2
  9980   003650  C0B5  F063         	movff	_colour_rel$3307+3,___fladd@b+3
  9981   003654  EC51  F014         	call	___fladd	;wreg free
  9982   003658  C060  F0B6         	movff	?___fladd,_colour_rel$3308
  9983   00365C  C061  F0B7         	movff	?___fladd+1,_colour_rel$3308+1
  9984   003660  C062  F0B8         	movff	?___fladd+2,_colour_rel$3308+2
  9985   003664  C063  F0B9         	movff	?___fladd+3,_colour_rel$3308+3
  9986                           
  9987                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9988   003668  C0BA  F091         	movff	colour_rel@R,___fldiv@b
  9989   00366C  C0BB  F092         	movff	colour_rel@R+1,___fldiv@b+1
  9990   003670  C0BC  F093         	movff	colour_rel@R+2,___fldiv@b+2
  9991   003674  C0BD  F094         	movff	colour_rel@R+3,___fldiv@b+3
  9992   003678  C0AE  F064         	movff	colour_rel@L,___fladd@a
  9993   00367C  C0AF  F065         	movff	colour_rel@L+1,___fladd@a+1
  9994   003680  C0B0  F066         	movff	colour_rel@L+2,___fladd@a+2
  9995   003684  C0B1  F067         	movff	colour_rel@L+3,___fladd@a+3
  9996   003688  C0B6  F060         	movff	_colour_rel$3308,___fladd@b
  9997   00368C  C0B7  F061         	movff	_colour_rel$3308+1,___fladd@b+1
  9998   003690  C0B8  F062         	movff	_colour_rel$3308+2,___fladd@b+2
  9999   003694  C0B9  F063         	movff	_colour_rel$3308+3,___fladd@b+3
 10000   003698  EC51  F014         	call	___fladd	;wreg free
 10001   00369C  C060  F095         	movff	?___fladd,___fldiv@a
 10002   0036A0  C061  F096         	movff	?___fladd+1,___fldiv@a+1
 10003   0036A4  C062  F097         	movff	?___fladd+2,___fldiv@a+2
 10004   0036A8  C063  F098         	movff	?___fladd+3,___fldiv@a+3
 10005   0036AC  ECC8  F018         	call	___fldiv	;wreg free
 10006   0036B0  C0AC  FFD9         	movff	colour_rel@rel,fsr2l
 10007   0036B4  C0AD  FFDA         	movff	colour_rel@rel+1,fsr2h
 10008   0036B8  0100               	movlb	0	; () banked
 10009   0036BA  C091  FFDE         	movff	?___fldiv,postinc2
 10010   0036BE  C092  FFDE         	movff	?___fldiv+1,postinc2
 10011   0036C2  C093  FFDE         	movff	?___fldiv+2,postinc2
 10012   0036C6  C094  FFDE         	movff	?___fldiv+3,postinc2
 10013   0036CA                     
 10014                           ; BSR set to: 0
 10015                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
 10016   0036CA  C0BE  F064         	movff	colour_rel@G,___fladd@a
 10017   0036CE  C0BF  F065         	movff	colour_rel@G+1,___fladd@a+1
 10018   0036D2  C0C0  F066         	movff	colour_rel@G+2,___fladd@a+2
 10019   0036D6  C0C1  F067         	movff	colour_rel@G+3,___fladd@a+3
 10020   0036DA  C0BA  F060         	movff	colour_rel@R,___fladd@b
 10021   0036DE  C0BB  F061         	movff	colour_rel@R+1,___fladd@b+1
 10022   0036E2  C0BC  F062         	movff	colour_rel@R+2,___fladd@b+2
 10023   0036E6  C0BD  F063         	movff	colour_rel@R+3,___fladd@b+3
 10024   0036EA  EC51  F014         	call	___fladd	;wreg free
 10025   0036EE  C060  F0B2         	movff	?___fladd,_colour_rel$3307
 10026   0036F2  C061  F0B3         	movff	?___fladd+1,_colour_rel$3307+1
 10027   0036F6  C062  F0B4         	movff	?___fladd+2,_colour_rel$3307+2
 10028   0036FA  C063  F0B5         	movff	?___fladd+3,_colour_rel$3307+3
 10029   0036FE                     
 10030                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
 10031   0036FE  C0C2  F064         	movff	colour_rel@B,___fladd@a
 10032   003702  C0C3  F065         	movff	colour_rel@B+1,___fladd@a+1
 10033   003706  C0C4  F066         	movff	colour_rel@B+2,___fladd@a+2
 10034   00370A  C0C5  F067         	movff	colour_rel@B+3,___fladd@a+3
 10035   00370E  C0B2  F060         	movff	_colour_rel$3307,___fladd@b
 10036   003712  C0B3  F061         	movff	_colour_rel$3307+1,___fladd@b+1
 10037   003716  C0B4  F062         	movff	_colour_rel$3307+2,___fladd@b+2
 10038   00371A  C0B5  F063         	movff	_colour_rel$3307+3,___fladd@b+3
 10039   00371E  EC51  F014         	call	___fladd	;wreg free
 10040   003722  C060  F0B6         	movff	?___fladd,_colour_rel$3308
 10041   003726  C061  F0B7         	movff	?___fladd+1,_colour_rel$3308+1
 10042   00372A  C062  F0B8         	movff	?___fladd+2,_colour_rel$3308+2
 10043   00372E  C063  F0B9         	movff	?___fladd+3,_colour_rel$3308+3
 10044                           
 10045                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
 10046   003732  C0C2  F091         	movff	colour_rel@B,___fldiv@b
 10047   003736  C0C3  F092         	movff	colour_rel@B+1,___fldiv@b+1
 10048   00373A  C0C4  F093         	movff	colour_rel@B+2,___fldiv@b+2
 10049   00373E  C0C5  F094         	movff	colour_rel@B+3,___fldiv@b+3
 10050   003742  C0AE  F064         	movff	colour_rel@L,___fladd@a
 10051   003746  C0AF  F065         	movff	colour_rel@L+1,___fladd@a+1
 10052   00374A  C0B0  F066         	movff	colour_rel@L+2,___fladd@a+2
 10053   00374E  C0B1  F067         	movff	colour_rel@L+3,___fladd@a+3
 10054   003752  C0B6  F060         	movff	_colour_rel$3308,___fladd@b
 10055   003756  C0B7  F061         	movff	_colour_rel$3308+1,___fladd@b+1
 10056   00375A  C0B8  F062         	movff	_colour_rel$3308+2,___fladd@b+2
 10057   00375E  C0B9  F063         	movff	_colour_rel$3308+3,___fladd@b+3
 10058   003762  EC51  F014         	call	___fladd	;wreg free
 10059   003766  C060  F095         	movff	?___fladd,___fldiv@a
 10060   00376A  C061  F096         	movff	?___fladd+1,___fldiv@a+1
 10061   00376E  C062  F097         	movff	?___fladd+2,___fldiv@a+2
 10062   003772  C063  F098         	movff	?___fladd+3,___fldiv@a+3
 10063   003776  ECC8  F018         	call	___fldiv	;wreg free
 10064   00377A  0100               	movlb	0	; () banked
 10065   00377C  EE20 F008          	lfsr	2,8
 10066   003780  51AC               	movf	colour_rel@rel& (0+255),w,b
 10067   003782  26D9               	addwf	fsr2l,f,c
 10068   003784  51AD               	movf	(colour_rel@rel+1)& (0+255),w,b
 10069   003786  22DA               	addwfc	fsr2h,f,c
 10070   003788  C091  FFDE         	movff	?___fldiv,postinc2
 10071   00378C  C092  FFDE         	movff	?___fldiv+1,postinc2
 10072   003790  C093  FFDE         	movff	?___fldiv+2,postinc2
 10073   003794  C094  FFDE         	movff	?___fldiv+3,postinc2
 10074   003798                     
 10075                           ; BSR set to: 0
 10076                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
 10077   003798  C0BE  F064         	movff	colour_rel@G,___fladd@a
 10078   00379C  C0BF  F065         	movff	colour_rel@G+1,___fladd@a+1
 10079   0037A0  C0C0  F066         	movff	colour_rel@G+2,___fladd@a+2
 10080   0037A4  C0C1  F067         	movff	colour_rel@G+3,___fladd@a+3
 10081   0037A8  C0BA  F060         	movff	colour_rel@R,___fladd@b
 10082   0037AC  C0BB  F061         	movff	colour_rel@R+1,___fladd@b+1
 10083   0037B0  C0BC  F062         	movff	colour_rel@R+2,___fladd@b+2
 10084   0037B4  C0BD  F063         	movff	colour_rel@R+3,___fladd@b+3
 10085   0037B8  EC51  F014         	call	___fladd	;wreg free
 10086   0037BC  C060  F0B2         	movff	?___fladd,_colour_rel$3307
 10087   0037C0  C061  F0B3         	movff	?___fladd+1,_colour_rel$3307+1
 10088   0037C4  C062  F0B4         	movff	?___fladd+2,_colour_rel$3307+2
 10089   0037C8  C063  F0B5         	movff	?___fladd+3,_colour_rel$3307+3
 10090   0037CC                     
 10091                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
 10092   0037CC  C0C2  F064         	movff	colour_rel@B,___fladd@a
 10093   0037D0  C0C3  F065         	movff	colour_rel@B+1,___fladd@a+1
 10094   0037D4  C0C4  F066         	movff	colour_rel@B+2,___fladd@a+2
 10095   0037D8  C0C5  F067         	movff	colour_rel@B+3,___fladd@a+3
 10096   0037DC  C0B2  F060         	movff	_colour_rel$3307,___fladd@b
 10097   0037E0  C0B3  F061         	movff	_colour_rel$3307+1,___fladd@b+1
 10098   0037E4  C0B4  F062         	movff	_colour_rel$3307+2,___fladd@b+2
 10099   0037E8  C0B5  F063         	movff	_colour_rel$3307+3,___fladd@b+3
 10100   0037EC  EC51  F014         	call	___fladd	;wreg free
 10101   0037F0  C060  F0B6         	movff	?___fladd,_colour_rel$3308
 10102   0037F4  C061  F0B7         	movff	?___fladd+1,_colour_rel$3308+1
 10103   0037F8  C062  F0B8         	movff	?___fladd+2,_colour_rel$3308+2
 10104   0037FC  C063  F0B9         	movff	?___fladd+3,_colour_rel$3308+3
 10105                           
 10106                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
 10107   003800  C0BE  F091         	movff	colour_rel@G,___fldiv@b
 10108   003804  C0BF  F092         	movff	colour_rel@G+1,___fldiv@b+1
 10109   003808  C0C0  F093         	movff	colour_rel@G+2,___fldiv@b+2
 10110   00380C  C0C1  F094         	movff	colour_rel@G+3,___fldiv@b+3
 10111   003810  C0AE  F064         	movff	colour_rel@L,___fladd@a
 10112   003814  C0AF  F065         	movff	colour_rel@L+1,___fladd@a+1
 10113   003818  C0B0  F066         	movff	colour_rel@L+2,___fladd@a+2
 10114   00381C  C0B1  F067         	movff	colour_rel@L+3,___fladd@a+3
 10115   003820  C0B6  F060         	movff	_colour_rel$3308,___fladd@b
 10116   003824  C0B7  F061         	movff	_colour_rel$3308+1,___fladd@b+1
 10117   003828  C0B8  F062         	movff	_colour_rel$3308+2,___fladd@b+2
 10118   00382C  C0B9  F063         	movff	_colour_rel$3308+3,___fladd@b+3
 10119   003830  EC51  F014         	call	___fladd	;wreg free
 10120   003834  C060  F095         	movff	?___fladd,___fldiv@a
 10121   003838  C061  F096         	movff	?___fladd+1,___fldiv@a+1
 10122   00383C  C062  F097         	movff	?___fladd+2,___fldiv@a+2
 10123   003840  C063  F098         	movff	?___fladd+3,___fldiv@a+3
 10124   003844  ECC8  F018         	call	___fldiv	;wreg free
 10125   003848  0100               	movlb	0	; () banked
 10126   00384A  EE20 F004          	lfsr	2,4
 10127   00384E  51AC               	movf	colour_rel@rel& (0+255),w,b
 10128   003850  26D9               	addwf	fsr2l,f,c
 10129   003852  51AD               	movf	(colour_rel@rel+1)& (0+255),w,b
 10130   003854  22DA               	addwfc	fsr2h,f,c
 10131   003856  C091  FFDE         	movff	?___fldiv,postinc2
 10132   00385A  C092  FFDE         	movff	?___fldiv+1,postinc2
 10133   00385E  C093  FFDE         	movff	?___fldiv+2,postinc2
 10134   003862  C094  FFDE         	movff	?___fldiv+3,postinc2
 10135   003866                     
 10136                           ; BSR set to: 0
 10137   003866  0012               	return		;funcret
 10138   003868                     __end_of_colour_rel:
 10139                           	callstack 0
 10140                           
 10141 ;; *************** function _color_click_init *****************
 10142 ;; Defined at:
 10143 ;;		line 7 in file "color.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;		None
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;		None
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  1    wreg      void 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0, cstack
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10161 ;;Total ram usage:        1 bytes
 10162 ;; Hardware stack levels used: 1
 10163 ;; Hardware stack levels required when called: 10
 10164 ;; This function calls:
 10165 ;;		_I2C_2_Master_Init
 10166 ;;		_color_writetoaddr
 10167 ;; This function is called by:
 10168 ;;		_main
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text44
 10173   0066B8                     __ptext44:
 10174                           	callstack 0
 10175   0066B8                     _color_click_init:
 10176                           	callstack 20
 10177   0066B8                     
 10178                           ;color.c: 10:     I2C_2_Master_Init();
 10179   0066B8  EC90  F038         	call	_I2C_2_Master_Init	;wreg free
 10180   0066BC                     
 10181                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
 10182   0066BC  0E01               	movlw	1
 10183   0066BE  0100               	movlb	0	; () banked
 10184   0066C0  6F62               	movwf	color_writetoaddr@value& (0+255),b
 10185   0066C2  0E00               	movlw	0
 10186   0066C4  ECCC  F038         	call	_color_writetoaddr
 10187   0066C8                     
 10188                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10189   0066C8  0E3F               	movlw	63
 10190   0066CA  0100               	movlb	0	; () banked
 10191   0066CC  6F64               	movwf	??_color_click_init& (0+255),b
 10192   0066CE  0E55               	movlw	85
 10193   0066D0                     u6667:
 10194   0066D0  2EE8               	decfsz	wreg,f,c
 10195   0066D2  D7FE               	bra	u6667
 10196   0066D4  2F64               	decfsz	??_color_click_init& (0+255),f,b
 10197   0066D6  D7FC               	bra	u6667
 10198   0066D8                     
 10199                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
 10200   0066D8  0E03               	movlw	3
 10201   0066DA  0100               	movlb	0	; () banked
 10202   0066DC  6F62               	movwf	color_writetoaddr@value& (0+255),b
 10203   0066DE  0E00               	movlw	0
 10204   0066E0  ECCC  F038         	call	_color_writetoaddr
 10205   0066E4                     
 10206                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
 10207   0066E4  0ED5               	movlw	213
 10208   0066E6  0100               	movlb	0	; () banked
 10209   0066E8  6F62               	movwf	color_writetoaddr@value& (0+255),b
 10210   0066EA  0E01               	movlw	1
 10211   0066EC  ECCC  F038         	call	_color_writetoaddr
 10212   0066F0                     
 10213                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
 10214   0066F0  0E00               	movlw	0
 10215   0066F2  0100               	movlb	0	; () banked
 10216   0066F4  6F62               	movwf	color_writetoaddr@value& (0+255),b
 10217   0066F6  0E0F               	movlw	15
 10218   0066F8  ECCC  F038         	call	_color_writetoaddr
 10219   0066FC                     
 10220                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
 10221   0066FC  9287               	bcf	135,1,c	;volatile
 10222   0066FE                     
 10223                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
 10224   0066FE  9881               	bcf	129,4,c	;volatile
 10225   006700                     
 10226                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
 10227   006700  9E86               	bcf	134,7,c	;volatile
 10228   006702                     
 10229                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
 10230   006702  9684               	bcf	132,3,c	;volatile
 10231   006704                     
 10232                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
 10233   006704  9884               	bcf	132,4,c	;volatile
 10234   006706                     
 10235                           ;color.c: 28:     LATGbits.LATG1=0;
 10236   006706  927F               	bcf	127,1,c	;volatile
 10237   006708                     
 10238                           ;color.c: 29:     LATFbits.LATF7=0;
 10239   006708  9E7E               	bcf	126,7,c	;volatile
 10240   00670A                     
 10241                           ;color.c: 30:     LATAbits.LATA4=0;
 10242   00670A  9879               	bcf	121,4,c	;volatile
 10243   00670C                     
 10244                           ;color.c: 32:     LATDbits.LATD3=0;
 10245   00670C  967C               	bcf	124,3,c	;volatile
 10246   00670E                     
 10247                           ;color.c: 33:     LATDbits.LATD4=0;
 10248   00670E  987C               	bcf	124,4,c	;volatile
 10249   006710  0012               	return		;funcret
 10250   006712                     __end_of_color_click_init:
 10251                           	callstack 0
 10252                           
 10253 ;; *************** function _color_writetoaddr *****************
 10254 ;; Defined at:
 10255 ;;		line 41 in file "color.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  address         1    wreg     unsigned char 
 10258 ;;  value           1    2[BANK0 ] unsigned char 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;  address         1    3[BANK0 ] unsigned char 
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		wreg, status,2, status,0, cstack
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10274 ;;Total ram usage:        2 bytes
 10275 ;; Hardware stack levels used: 1
 10276 ;; Hardware stack levels required when called: 9
 10277 ;; This function calls:
 10278 ;;		_I2C_2_Master_Start
 10279 ;;		_I2C_2_Master_Stop
 10280 ;;		_I2C_2_Master_Write
 10281 ;; This function is called by:
 10282 ;;		_color_click_init
 10283 ;; This function uses a non-reentrant model
 10284 ;;
 10285                           
 10286                           	psect	text45
 10287   007198                     __ptext45:
 10288                           	callstack 0
 10289   007198                     _color_writetoaddr:
 10290                           	callstack 20
 10291                           
 10292                           ;incstack = 0
 10293                           ;color_writetoaddr@address stored from wreg
 10294   007198  0100               	movlb	0	; () banked
 10295   00719A  6F63               	movwf	color_writetoaddr@address& (0+255),b
 10296   00719C                     
 10297                           ;color.c: 42:     I2C_2_Master_Start();
 10298   00719C  EC36  F039         	call	_I2C_2_Master_Start	;wreg free
 10299                           
 10300                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
 10301   0071A0  0E52               	movlw	82
 10302   0071A2  EC1E  F039         	call	_I2C_2_Master_Write
 10303                           
 10304                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
 10305   0071A6  0100               	movlb	0	; () banked
 10306   0071A8  5163               	movf	color_writetoaddr@address& (0+255),w,b
 10307   0071AA  0980               	iorlw	128
 10308   0071AC  EC1E  F039         	call	_I2C_2_Master_Write
 10309                           
 10310                           ;color.c: 45:     I2C_2_Master_Write(value);
 10311   0071B0  0100               	movlb	0	; () banked
 10312   0071B2  5162               	movf	color_writetoaddr@value& (0+255),w,b
 10313   0071B4  EC1E  F039         	call	_I2C_2_Master_Write
 10314                           
 10315                           ;color.c: 46:     I2C_2_Master_Stop();
 10316   0071B8  EC31  F039         	call	_I2C_2_Master_Stop	;wreg free
 10317   0071BC  0012               	return		;funcret
 10318   0071BE                     __end_of_color_writetoaddr:
 10319                           	callstack 0
 10320                           
 10321 ;; *************** function _I2C_2_Master_Write *****************
 10322 ;; Defined at:
 10323 ;;		line 45 in file "i2c.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  data_byte       1    wreg     unsigned char 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;  data_byte       1    1[BANK0 ] unsigned char 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;Total ram usage:        1 bytes
 10342 ;; Hardware stack levels used: 1
 10343 ;; Hardware stack levels required when called: 8
 10344 ;; This function calls:
 10345 ;;		_I2C_2_Master_Idle
 10346 ;; This function is called by:
 10347 ;;		_color_writetoaddr
 10348 ;;		_color_read_lum
 10349 ;;		_color_read_Red
 10350 ;;		_color_read_Green
 10351 ;;		_color_read_Blue
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           	psect	text46
 10356   00723C                     __ptext46:
 10357                           	callstack 0
 10358   00723C                     _I2C_2_Master_Write:
 10359                           	callstack 20
 10360                           
 10361                           ;incstack = 0
 10362                           ;I2C_2_Master_Write@data_byte stored from wreg
 10363   00723C  0100               	movlb	0	; () banked
 10364   00723E  6F61               	movwf	I2C_2_Master_Write@data_byte& (0+255),b
 10365   007240                     
 10366                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10367   007240  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
 10368   007244                     
 10369                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10370   007244  C061  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10371   007248  0012               	return		;funcret
 10372   00724A                     __end_of_I2C_2_Master_Write:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function _I2C_2_Master_Stop *****************
 10376 ;; Defined at:
 10377 ;;		line 39 in file "i2c.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;		None
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      void 
 10384 ;; Registers used:
 10385 ;;		wreg, status,2, status,0, cstack
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;Total ram usage:        0 bytes
 10396 ;; Hardware stack levels used: 1
 10397 ;; Hardware stack levels required when called: 8
 10398 ;; This function calls:
 10399 ;;		_I2C_2_Master_Idle
 10400 ;; This function is called by:
 10401 ;;		_color_writetoaddr
 10402 ;;		_color_read_lum
 10403 ;;		_color_read_Red
 10404 ;;		_color_read_Green
 10405 ;;		_color_read_Blue
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text47
 10410   007262                     __ptext47:
 10411                           	callstack 0
 10412   007262                     _I2C_2_Master_Stop:
 10413                           	callstack 20
 10414   007262                     
 10415                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10416   007262  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
 10417   007266                     
 10418                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10419   007266  010E               	movlb	14	; () banked
 10420   007268  85DA               	bsf	218,2,b	;volatile
 10421   00726A                     
 10422                           ; BSR set to: 14
 10423   00726A  0012               	return		;funcret
 10424   00726C                     __end_of_I2C_2_Master_Stop:
 10425                           	callstack 0
 10426                           
 10427 ;; *************** function _I2C_2_Master_Start *****************
 10428 ;; Defined at:
 10429 ;;		line 27 in file "i2c.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;		None
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  1    wreg      void 
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0, cstack
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10447 ;;Total ram usage:        0 bytes
 10448 ;; Hardware stack levels used: 1
 10449 ;; Hardware stack levels required when called: 8
 10450 ;; This function calls:
 10451 ;;		_I2C_2_Master_Idle
 10452 ;; This function is called by:
 10453 ;;		_color_writetoaddr
 10454 ;;		_color_read_lum
 10455 ;;		_color_read_Red
 10456 ;;		_color_read_Green
 10457 ;;		_color_read_Blue
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text48
 10462   00726C                     __ptext48:
 10463                           	callstack 0
 10464   00726C                     _I2C_2_Master_Start:
 10465                           	callstack 20
 10466   00726C                     
 10467                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10468   00726C  EC7B  F038         	call	_I2C_2_Master_Idle	;wreg free
 10469   007270                     
 10470                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10471   007270  010E               	movlb	14	; () banked
 10472   007272  81DA               	bsf	218,0,b	;volatile
 10473   007274                     
 10474                           ; BSR set to: 14
 10475   007274  0012               	return		;funcret
 10476   007276                     __end_of_I2C_2_Master_Start:
 10477                           	callstack 0
 10478                           
 10479 ;; *************** function _I2C_2_Master_Idle *****************
 10480 ;; Defined at:
 10481 ;;		line 22 in file "i2c.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, status,2, status,0
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;Total ram usage:        1 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; Hardware stack levels required when called: 7
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		_I2C_2_Master_Start
 10506 ;;		_I2C_2_Master_RepStart
 10507 ;;		_I2C_2_Master_Stop
 10508 ;;		_I2C_2_Master_Write
 10509 ;;		_I2C_2_Master_Read
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text49
 10514   0070F6                     __ptext49:
 10515                           	callstack 0
 10516   0070F6                     _I2C_2_Master_Idle:
 10517                           	callstack 20
 10518   0070F6                     l143:
 10519   0070F6  010E               	movlb	14	; () banked
 10520   0070F8  B5D8               	btfsc	216,2,b	;volatile
 10521   0070FA  EF81  F038         	goto	u4781
 10522   0070FE  EF83  F038         	goto	u4780
 10523   007102                     u4781:
 10524   007102  EF7B  F038         	goto	l143
 10525   007106                     u4780:
 10526   007106                     
 10527                           ; BSR set to: 14
 10528   007106  CEDA F060          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10529   00710A  0E1F               	movlw	31
 10530   00710C  0100               	movlb	0	; () banked
 10531   00710E  1760               	andwf	??_I2C_2_Master_Idle& (0+255),f,b
 10532   007110  A4D8               	btfss	status,2,c
 10533   007112  EF8D  F038         	goto	u4791
 10534   007116  EF8F  F038         	goto	u4790
 10535   00711A                     u4791:
 10536   00711A  EF7B  F038         	goto	l143
 10537   00711E                     u4790:
 10538   00711E                     
 10539                           ; BSR set to: 0
 10540   00711E  0012               	return		;funcret
 10541   007120                     __end_of_I2C_2_Master_Idle:
 10542                           	callstack 0
 10543                           
 10544 ;; *************** function _I2C_2_Master_Init *****************
 10545 ;; Defined at:
 10546 ;;		line 4 in file "i2c.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;		None
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;		None
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;Total ram usage:        0 bytes
 10565 ;; Hardware stack levels used: 1
 10566 ;; Hardware stack levels required when called: 7
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_color_click_init
 10571 ;;		_main
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575                           	psect	text50
 10576   007120                     __ptext50:
 10577                           	callstack 0
 10578   007120                     _I2C_2_Master_Init:
 10579                           	callstack 22
 10580   007120                     
 10581                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10582   007120  010E               	movlb	14	; () banked
 10583   007122  51D9               	movf	217,w,b	;volatile
 10584   007124  0BF0               	andlw	-16
 10585   007126  0908               	iorlw	8
 10586   007128  6FD9               	movwf	217,b	;volatile
 10587   00712A                     
 10588                           ; BSR set to: 14
 10589                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10590   00712A  8BD9               	bsf	217,5,b	;volatile
 10591                           
 10592                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10593   00712C  0E9F               	movlw	159
 10594   00712E  6FD6               	movwf	214,b	;volatile
 10595   007130                     
 10596                           ; BSR set to: 14
 10597                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10598   007130  8A84               	bsf	132,5,c	;volatile
 10599   007132                     
 10600                           ; BSR set to: 14
 10601                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10602   007132  8C84               	bsf	132,6,c	;volatile
 10603   007134                     
 10604                           ; BSR set to: 14
 10605                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10606   007134  9BA7               	bcf	167,5,b	;volatile
 10607   007136                     
 10608                           ; BSR set to: 14
 10609                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10610   007136  9DA7               	bcf	167,6,b	;volatile
 10611                           
 10612                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10613   007138  0E1D               	movlw	29
 10614   00713A  6F1D               	movwf	29,b	;volatile
 10615                           
 10616                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10617   00713C  0E1E               	movlw	30
 10618   00713E  6F1C               	movwf	28,b	;volatile
 10619                           
 10620                           ;i2c.c: 18:   RD5PPS=0x1C;
 10621   007140  0E1C               	movlw	28
 10622   007142  6F6F               	movwf	111,b	;volatile
 10623                           
 10624                           ;i2c.c: 19:   RD6PPS=0x1B;
 10625   007144  0E1B               	movlw	27
 10626   007146  6F70               	movwf	112,b	;volatile
 10627   007148                     
 10628                           ; BSR set to: 14
 10629   007148  0012               	return		;funcret
 10630   00714A                     __end_of_I2C_2_Master_Init:
 10631                           	callstack 0
 10632                           
 10633 ;; *************** function _YellowMove *****************
 10634 ;; Defined at:
 10635 ;;		line 288 in file "dc_motor.c"
 10636 ;; Parameters:    Size  Location     Type
 10637 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
 10638 ;;		 -> motorL(9), 
 10639 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
 10640 ;;		 -> motorR(9), 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;Total ram usage:        4 bytes
 10657 ;; Hardware stack levels used: 1
 10658 ;; Hardware stack levels required when called: 11
 10659 ;; This function calls:
 10660 ;;		_reverseDetect
 10661 ;;		_reverseOneBlock
 10662 ;;		_turnRight45
 10663 ;; This function is called by:
 10664 ;;		_main
 10665 ;; This function uses a non-reentrant model
 10666 ;;
 10667                           
 10668                           	psect	text51
 10669   006712                     __ptext51:
 10670                           	callstack 0
 10671   006712                     _YellowMove:
 10672                           	callstack 19
 10673   006712                     
 10674                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10675   006712  0EC3               	movlw	low _motorL
 10676   006714  0100               	movlb	0	; () banked
 10677   006716  6F7A               	movwf	reverseDetect@mL& (0+255),b
 10678   006718  0E01               	movlw	high _motorL
 10679   00671A  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
 10680   00671C  0EBA               	movlw	low _motorR
 10681   00671E  6F7C               	movwf	reverseDetect@mR& (0+255),b
 10682   006720  0E01               	movlw	high _motorR
 10683   006722  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
 10684   006724  ECD4  F032         	call	_reverseDetect	;wreg free
 10685                           
 10686                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10687   006728  0EC3               	movlw	low _motorL
 10688   00672A  0100               	movlb	0	; () banked
 10689   00672C  6F7A               	movwf	reverseOneBlock@mL& (0+255),b
 10690   00672E  0E01               	movlw	high _motorL
 10691   006730  6F7B               	movwf	(reverseOneBlock@mL+1)& (0+255),b
 10692   006732  0EBA               	movlw	low _motorR
 10693   006734  6F7C               	movwf	reverseOneBlock@mR& (0+255),b
 10694   006736  0E01               	movlw	high _motorR
 10695   006738  6F7D               	movwf	(reverseOneBlock@mR+1)& (0+255),b
 10696   00673A  ECFF  F035         	call	_reverseOneBlock	;wreg free
 10697                           
 10698                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10699   00673E  0EC3               	movlw	low _motorL
 10700   006740  0100               	movlb	0	; () banked
 10701   006742  6F7A               	movwf	turnRight45@mL& (0+255),b
 10702   006744  0E01               	movlw	high _motorL
 10703   006746  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
 10704   006748  0EBA               	movlw	low _motorR
 10705   00674A  6F7C               	movwf	turnRight45@mR& (0+255),b
 10706   00674C  0E01               	movlw	high _motorR
 10707   00674E  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
 10708   006750  ECAF  F035         	call	_turnRight45	;wreg free
 10709                           
 10710                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10711   006754  0EC3               	movlw	low _motorL
 10712   006756  0100               	movlb	0	; () banked
 10713   006758  6F7A               	movwf	turnRight45@mL& (0+255),b
 10714   00675A  0E01               	movlw	high _motorL
 10715   00675C  6F7B               	movwf	(turnRight45@mL+1)& (0+255),b
 10716   00675E  0EBA               	movlw	low _motorR
 10717   006760  6F7C               	movwf	turnRight45@mR& (0+255),b
 10718   006762  0E01               	movlw	high _motorR
 10719   006764  6F7D               	movwf	(turnRight45@mR+1)& (0+255),b
 10720   006766  ECAF  F035         	call	_turnRight45	;wreg free
 10721   00676A  0012               	return		;funcret
 10722   00676C                     __end_of_YellowMove:
 10723                           	callstack 0
 10724                           
 10725 ;; *************** function _turnRight45 *****************
 10726 ;; Defined at:
 10727 ;;		line 211 in file "dc_motor.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 10730 ;;		 -> motorL(9), 
 10731 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 10732 ;;		 -> motorR(9), 
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      void 
 10737 ;; Registers used:
 10738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10747 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10748 ;;Total ram usage:        6 bytes
 10749 ;; Hardware stack levels used: 1
 10750 ;; Hardware stack levels required when called: 10
 10751 ;; This function calls:
 10752 ;;		_TurnDelay
 10753 ;;		_stop
 10754 ;;		_turnRight
 10755 ;; This function is called by:
 10756 ;;		_RedMove
 10757 ;;		_BlueMove
 10758 ;;		_YellowMove
 10759 ;;		_OrangeMove
 10760 ;;		_ReverseYellow
 10761 ;; This function uses a non-reentrant model
 10762 ;;
 10763                           
 10764                           	psect	text52
 10765   006B5E                     __ptext52:
 10766                           	callstack 0
 10767   006B5E                     _turnRight45:
 10768                           	callstack 18
 10769   006B5E                     
 10770                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10771   006B5E  C07A  F073         	movff	turnRight45@mL,turnRight@mL
 10772   006B62  C07B  F074         	movff	turnRight45@mL+1,turnRight@mL+1
 10773   006B66  C07C  F075         	movff	turnRight45@mR,turnRight@mR
 10774   006B6A  C07D  F076         	movff	turnRight45@mR+1,turnRight@mR+1
 10775   006B6E  EC7F  F02A         	call	_turnRight	;wreg free
 10776   006B72                     
 10777                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10778   006B72  C056  F060         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10779   006B76  C057  F061         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10780   006B7A  ECF0  F037         	call	_TurnDelay	;wreg free
 10781   006B7E                     
 10782                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10783   006B7E  0EC3               	movlw	low _motorL
 10784   006B80  0100               	movlb	0	; () banked
 10785   006B82  6F73               	movwf	stop@mL& (0+255),b
 10786   006B84  0E01               	movlw	high _motorL
 10787   006B86  6F74               	movwf	(stop@mL+1)& (0+255),b
 10788   006B88  0EBA               	movlw	low _motorR
 10789   006B8A  6F75               	movwf	stop@mR& (0+255),b
 10790   006B8C  0E01               	movlw	high _motorR
 10791   006B8E  6F76               	movwf	(stop@mR+1)& (0+255),b
 10792   006B90  EC61  F030         	call	_stop	;wreg free
 10793   006B94                     
 10794                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10795   006B94  0E05               	movlw	5
 10796   006B96  0100               	movlb	0	; () banked
 10797   006B98  6F7F               	movwf	(??_turnRight45+1)& (0+255),b
 10798   006B9A  0E0F               	movlw	15
 10799   006B9C  6F7E               	movwf	??_turnRight45& (0+255),b
 10800   006B9E  0EF1               	movlw	241
 10801   006BA0                     u6677:
 10802   006BA0  2EE8               	decfsz	wreg,f,c
 10803   006BA2  D7FE               	bra	u6677
 10804   006BA4  2F7E               	decfsz	??_turnRight45& (0+255),f,b
 10805   006BA6  D7FC               	bra	u6677
 10806   006BA8  2F7F               	decfsz	(??_turnRight45+1)& (0+255),f,b
 10807   006BAA  D7FA               	bra	u6677
 10808   006BAC  0012               	return		;funcret
 10809   006BAE                     __end_of_turnRight45:
 10810                           	callstack 0
 10811                           
 10812 ;; *************** function _turnRight *****************
 10813 ;; Defined at:
 10814 ;;		line 129 in file "dc_motor.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
 10817 ;;		 -> motorL(9), 
 10818 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
 10819 ;;		 -> motorR(9), 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;		None
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  1    wreg      void 
 10824 ;; Registers used:
 10825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;Total ram usage:        7 bytes
 10836 ;; Hardware stack levels used: 1
 10837 ;; Hardware stack levels required when called: 9
 10838 ;; This function calls:
 10839 ;;		_setMotorPWM
 10840 ;; This function is called by:
 10841 ;;		_turnRight45
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text53
 10846   0054FE                     __ptext53:
 10847                           	callstack 0
 10848   0054FE                     _turnRight:
 10849                           	callstack 18
 10850   0054FE                     
 10851                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10852   0054FE  0100               	movlb	0	; () banked
 10853   005500  EE20 F001          	lfsr	2,1
 10854   005504  5173               	movf	turnRight@mL& (0+255),w,b
 10855   005506  26D9               	addwf	fsr2l,f,c
 10856   005508  5174               	movf	(turnRight@mL+1)& (0+255),w,b
 10857   00550A  22DA               	addwfc	fsr2h,f,c
 10858   00550C  0E01               	movlw	1
 10859   00550E  6EDF               	movwf	indf2,c
 10860                           
 10861                           ;dc_motor.c: 132:     mR->direction =0;
 10862   005510  EE20 F001          	lfsr	2,1
 10863   005514  5175               	movf	turnRight@mR& (0+255),w,b
 10864   005516  26D9               	addwf	fsr2l,f,c
 10865   005518  5176               	movf	(turnRight@mR+1)& (0+255),w,b
 10866   00551A  22DA               	addwfc	fsr2h,f,c
 10867   00551C  0E00               	movlw	0
 10868   00551E  6EDF               	movwf	indf2,c
 10869                           
 10870                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10871   005520  EFB7  F02A         	goto	l5067
 10872   005524                     l5059:
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;dc_motor.c: 136:         mL->power+=10;
 10876   005524  C073  FFD9         	movff	turnRight@mL,fsr2l
 10877   005528  C074  FFDA         	movff	turnRight@mL+1,fsr2h
 10878   00552C  0E0A               	movlw	10
 10879   00552E  26DF               	addwf	indf2,f,c
 10880                           
 10881                           ;dc_motor.c: 137:         mR->power+=10;
 10882   005530  C075  FFD9         	movff	turnRight@mR,fsr2l
 10883   005534  C076  FFDA         	movff	turnRight@mR+1,fsr2h
 10884   005538  0E0A               	movlw	10
 10885   00553A  26DF               	addwf	indf2,f,c
 10886   00553C                     
 10887                           ; BSR set to: 0
 10888                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10889   00553C  C073  F06D         	movff	turnRight@mL,setMotorPWM@m
 10890   005540  C074  F06E         	movff	turnRight@mL+1,setMotorPWM@m+1
 10891   005544  EC99  F025         	call	_setMotorPWM	;wreg free
 10892   005548                     
 10893                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10894   005548  C075  F06D         	movff	turnRight@mR,setMotorPWM@m
 10895   00554C  C076  F06E         	movff	turnRight@mR+1,setMotorPWM@m+1
 10896   005550  EC99  F025         	call	_setMotorPWM	;wreg free
 10897   005554                     
 10898                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10899   005554  0E02               	movlw	2
 10900   005556  0100               	movlb	0	; () banked
 10901   005558  6F78               	movwf	(??_turnRight+1)& (0+255),b
 10902   00555A  0EA0               	movlw	160
 10903   00555C  6F77               	movwf	??_turnRight& (0+255),b
 10904   00555E  0E92               	movlw	146
 10905   005560                     u6687:
 10906   005560  2EE8               	decfsz	wreg,f,c
 10907   005562  D7FE               	bra	u6687
 10908   005564  2F77               	decfsz	??_turnRight& (0+255),f,b
 10909   005566  D7FC               	bra	u6687
 10910   005568  2F78               	decfsz	(??_turnRight+1)& (0+255),f,b
 10911   00556A  D7FA               	bra	u6687
 10912   00556C  F000               	nop	
 10913   00556E                     l5067:
 10914                           
 10915                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10916   00556E  C073  FFD9         	movff	turnRight@mL,fsr2l
 10917   005572  C074  FFDA         	movff	turnRight@mL+1,fsr2h
 10918   005576  50DF               	movf	indf2,w,c
 10919   005578  0100               	movlb	0	; () banked
 10920   00557A  6F77               	movwf	??_turnRight& (0+255),b
 10921   00557C  6B78               	clrf	(??_turnRight+1)& (0+255),b
 10922   00557E  5058               	movf	_power^0,w,c
 10923   005580  5D77               	subwf	??_turnRight& (0+255),w,b
 10924   005582  5178               	movf	(??_turnRight+1)& (0+255),w,b
 10925   005584  0A80               	xorlw	128
 10926   005586  6F79               	movwf	(??_turnRight+2)& (0+255),b
 10927   005588  5059               	movf	(_power+1)^0,w,c
 10928   00558A  0A80               	xorlw	128
 10929   00558C  5979               	subwfb	(??_turnRight+2)& (0+255),w,b
 10930   00558E  B0D8               	btfsc	status,0,c
 10931   005590  EFCC  F02A         	goto	u4861
 10932   005594  EFCE  F02A         	goto	u4860
 10933   005598                     u4861:
 10934   005598  EFE4  F02A         	goto	l558
 10935   00559C                     u4860:
 10936   00559C                     
 10937                           ; BSR set to: 0
 10938   00559C  C075  FFD9         	movff	turnRight@mR,fsr2l
 10939   0055A0  C076  FFDA         	movff	turnRight@mR+1,fsr2h
 10940   0055A4  50DF               	movf	indf2,w,c
 10941   0055A6  6F77               	movwf	??_turnRight& (0+255),b
 10942   0055A8  6B78               	clrf	(??_turnRight+1)& (0+255),b
 10943   0055AA  5058               	movf	_power^0,w,c
 10944   0055AC  5D77               	subwf	??_turnRight& (0+255),w,b
 10945   0055AE  5178               	movf	(??_turnRight+1)& (0+255),w,b
 10946   0055B0  0A80               	xorlw	128
 10947   0055B2  6F79               	movwf	(??_turnRight+2)& (0+255),b
 10948   0055B4  5059               	movf	(_power+1)^0,w,c
 10949   0055B6  0A80               	xorlw	128
 10950   0055B8  5979               	subwfb	(??_turnRight+2)& (0+255),w,b
 10951   0055BA  A0D8               	btfss	status,0,c
 10952   0055BC  EFE2  F02A         	goto	u4871
 10953   0055C0  EFE4  F02A         	goto	u4870
 10954   0055C4                     u4871:
 10955   0055C4  EF92  F02A         	goto	l5059
 10956   0055C8                     u4870:
 10957   0055C8                     l558:
 10958                           
 10959                           ; BSR set to: 0
 10960   0055C8  0012               	return		;funcret
 10961   0055CA                     __end_of_turnRight:
 10962                           	callstack 0
 10963                           
 10964 ;; *************** function _Timer0_init *****************
 10965 ;; Defined at:
 10966 ;;		line 8 in file "timers.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  1    wreg      void 
 10973 ;; Registers used:
 10974 ;;		wreg, status,2
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10984 ;;Total ram usage:        0 bytes
 10985 ;; Hardware stack levels used: 1
 10986 ;; Hardware stack levels required when called: 7
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_main
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text54
 10995   0071E4                     __ptext54:
 10996                           	callstack 0
 10997   0071E4                     _Timer0_init:
 10998                           	callstack 23
 10999   0071E4                     
 11000                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11001   0071E4  50D6               	movf	214,w,c	;volatile
 11002   0071E6  0B1F               	andlw	-225
 11003   0071E8  0940               	iorlw	64
 11004   0071EA  6ED6               	movwf	214,c	;volatile
 11005   0071EC                     
 11006                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11007   0071EC  88D6               	bsf	214,4,c	;volatile
 11008                           
 11009                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 11010   0071EE  50D6               	movf	214,w,c	;volatile
 11011   0071F0  0BF0               	andlw	-16
 11012   0071F2  090E               	iorlw	14
 11013   0071F4  6ED6               	movwf	214,c	;volatile
 11014   0071F6                     
 11015                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11016   0071F6  88D5               	bsf	213,4,c	;volatile
 11017                           
 11018                           ;timers.c: 16:     TMR0H=0;
 11019   0071F8  0E00               	movlw	0
 11020   0071FA  6ED4               	movwf	212,c	;volatile
 11021                           
 11022                           ;timers.c: 17:     TMR0L=0;
 11023   0071FC  0E00               	movlw	0
 11024   0071FE  6ED3               	movwf	211,c	;volatile
 11025   007200                     
 11026                           ;timers.c: 18:     T0CON0bits.T0EN=1;
 11027   007200  8ED5               	bsf	213,7,c	;volatile
 11028   007202  0012               	return		;funcret
 11029   007204                     __end_of_Timer0_init:
 11030                           	callstack 0
 11031                           
 11032 ;; *************** function _RetryMove *****************
 11033 ;; Defined at:
 11034 ;;		line 325 in file "dc_motor.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 11037 ;;		 -> motorL(9), 
 11038 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 11039 ;;		 -> motorR(9), 
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11051 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11055 ;;Total ram usage:        6 bytes
 11056 ;; Hardware stack levels used: 1
 11057 ;; Hardware stack levels required when called: 10
 11058 ;; This function calls:
 11059 ;;		_fullSpeedAhead
 11060 ;;		_fullSpeedBack
 11061 ;;		_stop
 11062 ;; This function is called by:
 11063 ;;		_main
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text55
 11068   00603C                     __ptext55:
 11069                           	callstack 0
 11070   00603C                     _RetryMove:
 11071                           	callstack 20
 11072   00603C                     
 11073                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 11074   00603C  C07A  F073         	movff	RetryMove@mL,fullSpeedBack@mL
 11075   006040  C07B  F074         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 11076   006044  C07C  F075         	movff	RetryMove@mR,fullSpeedBack@mR
 11077   006048  C07D  F076         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 11078   00604C  EC4B  F02B         	call	_fullSpeedBack	;wreg free
 11079   006050                     
 11080                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11081   006050  0E29               	movlw	41
 11082   006052  0100               	movlb	0	; () banked
 11083   006054  6F7F               	movwf	(??_RetryMove+1)& (0+255),b
 11084   006056  0E96               	movlw	150
 11085   006058  6F7E               	movwf	??_RetryMove& (0+255),b
 11086   00605A  0E7F               	movlw	127
 11087   00605C                     u6697:
 11088   00605C  2EE8               	decfsz	wreg,f,c
 11089   00605E  D7FE               	bra	u6697
 11090   006060  2F7E               	decfsz	??_RetryMove& (0+255),f,b
 11091   006062  D7FC               	bra	u6697
 11092   006064  2F7F               	decfsz	(??_RetryMove+1)& (0+255),f,b
 11093   006066  D7FA               	bra	u6697
 11094   006068                     
 11095                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 11096   006068  0EC3               	movlw	low _motorL
 11097   00606A  0100               	movlb	0	; () banked
 11098   00606C  6F73               	movwf	stop@mL& (0+255),b
 11099   00606E  0E01               	movlw	high _motorL
 11100   006070  6F74               	movwf	(stop@mL+1)& (0+255),b
 11101   006072  0EBA               	movlw	low _motorR
 11102   006074  6F75               	movwf	stop@mR& (0+255),b
 11103   006076  0E01               	movlw	high _motorR
 11104   006078  6F76               	movwf	(stop@mR+1)& (0+255),b
 11105   00607A  EC61  F030         	call	_stop	;wreg free
 11106   00607E                     
 11107                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 11108   00607E  C07A  F073         	movff	RetryMove@mL,fullSpeedAhead@mL
 11109   006082  C07B  F074         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 11110   006086  C07C  F075         	movff	RetryMove@mR,fullSpeedAhead@mR
 11111   00608A  C07D  F076         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 11112   00608E  ECB1  F02B         	call	_fullSpeedAhead	;wreg free
 11113   006092                     
 11114                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11115   006092  0E29               	movlw	41
 11116   006094  0100               	movlb	0	; () banked
 11117   006096  6F7F               	movwf	(??_RetryMove+1)& (0+255),b
 11118   006098  0E96               	movlw	150
 11119   00609A  6F7E               	movwf	??_RetryMove& (0+255),b
 11120   00609C  0E7F               	movlw	127
 11121   00609E                     u6707:
 11122   00609E  2EE8               	decfsz	wreg,f,c
 11123   0060A0  D7FE               	bra	u6707
 11124   0060A2  2F7E               	decfsz	??_RetryMove& (0+255),f,b
 11125   0060A4  D7FC               	bra	u6707
 11126   0060A6  2F7F               	decfsz	(??_RetryMove+1)& (0+255),f,b
 11127   0060A8  D7FA               	bra	u6707
 11128                           
 11129                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 11130   0060AA  0EC3               	movlw	low _motorL
 11131   0060AC  0100               	movlb	0	; () banked
 11132   0060AE  6F73               	movwf	stop@mL& (0+255),b
 11133   0060B0  0E01               	movlw	high _motorL
 11134   0060B2  6F74               	movwf	(stop@mL+1)& (0+255),b
 11135   0060B4  0EBA               	movlw	low _motorR
 11136   0060B6  6F75               	movwf	stop@mR& (0+255),b
 11137   0060B8  0E01               	movlw	high _motorR
 11138   0060BA  6F76               	movwf	(stop@mR+1)& (0+255),b
 11139   0060BC  EC61  F030         	call	_stop	;wreg free
 11140   0060C0  0012               	return		;funcret
 11141   0060C2                     __end_of_RetryMove:
 11142                           	callstack 0
 11143                           
 11144 ;; *************** function _PinkMove *****************
 11145 ;; Defined at:
 11146 ;;		line 298 in file "dc_motor.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  mL              2   32[BANK0 ] PTR struct DC_motor
 11149 ;;		 -> motorL(9), 
 11150 ;;  mR              2   34[BANK0 ] PTR struct DC_motor
 11151 ;;		 -> motorR(9), 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;		None
 11154 ;; Return value:  Size  Location     Type
 11155 ;;                  1    wreg      void 
 11156 ;; Registers used:
 11157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11167 ;;Total ram usage:        4 bytes
 11168 ;; Hardware stack levels used: 1
 11169 ;; Hardware stack levels required when called: 11
 11170 ;; This function calls:
 11171 ;;		_reverseDetect
 11172 ;;		_reverseOneBlock
 11173 ;;		_turnLeft45
 11174 ;; This function is called by:
 11175 ;;		_main
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text56
 11180   00676C                     __ptext56:
 11181                           	callstack 0
 11182   00676C                     _PinkMove:
 11183                           	callstack 19
 11184   00676C                     
 11185                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 11186   00676C  0EC3               	movlw	low _motorL
 11187   00676E  0100               	movlb	0	; () banked
 11188   006770  6F7A               	movwf	reverseDetect@mL& (0+255),b
 11189   006772  0E01               	movlw	high _motorL
 11190   006774  6F7B               	movwf	(reverseDetect@mL+1)& (0+255),b
 11191   006776  0EBA               	movlw	low _motorR
 11192   006778  6F7C               	movwf	reverseDetect@mR& (0+255),b
 11193   00677A  0E01               	movlw	high _motorR
 11194   00677C  6F7D               	movwf	(reverseDetect@mR+1)& (0+255),b
 11195   00677E  ECD4  F032         	call	_reverseDetect	;wreg free
 11196                           
 11197                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 11198   006782  0EC3               	movlw	low _motorL
 11199   006784  0100               	movlb	0	; () banked
 11200   006786  6F7A               	movwf	reverseOneBlock@mL& (0+255),b
 11201   006788  0E01               	movlw	high _motorL
 11202   00678A  6F7B               	movwf	(reverseOneBlock@mL+1)& (0+255),b
 11203   00678C  0EBA               	movlw	low _motorR
 11204   00678E  6F7C               	movwf	reverseOneBlock@mR& (0+255),b
 11205   006790  0E01               	movlw	high _motorR
 11206   006792  6F7D               	movwf	(reverseOneBlock@mR+1)& (0+255),b
 11207   006794  ECFF  F035         	call	_reverseOneBlock	;wreg free
 11208                           
 11209                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 11210   006798  0EC3               	movlw	low _motorL
 11211   00679A  0100               	movlb	0	; () banked
 11212   00679C  6F7A               	movwf	turnLeft45@mL& (0+255),b
 11213   00679E  0E01               	movlw	high _motorL
 11214   0067A0  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
 11215   0067A2  0EBA               	movlw	low _motorR
 11216   0067A4  6F7C               	movwf	turnLeft45@mR& (0+255),b
 11217   0067A6  0E01               	movlw	high _motorR
 11218   0067A8  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
 11219   0067AA  ECD7  F035         	call	_turnLeft45	;wreg free
 11220                           
 11221                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 11222   0067AE  0EC3               	movlw	low _motorL
 11223   0067B0  0100               	movlb	0	; () banked
 11224   0067B2  6F7A               	movwf	turnLeft45@mL& (0+255),b
 11225   0067B4  0E01               	movlw	high _motorL
 11226   0067B6  6F7B               	movwf	(turnLeft45@mL+1)& (0+255),b
 11227   0067B8  0EBA               	movlw	low _motorR
 11228   0067BA  6F7C               	movwf	turnLeft45@mR& (0+255),b
 11229   0067BC  0E01               	movlw	high _motorR
 11230   0067BE  6F7D               	movwf	(turnLeft45@mR+1)& (0+255),b
 11231   0067C0  ECD7  F035         	call	_turnLeft45	;wreg free
 11232   0067C4  0012               	return		;funcret
 11233   0067C6                     __end_of_PinkMove:
 11234                           	callstack 0
 11235                           
 11236 ;; *************** function _turnLeft45 *****************
 11237 ;; Defined at:
 11238 ;;		line 218 in file "dc_motor.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 11241 ;;		 -> motorL(9), 
 11242 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 11243 ;;		 -> motorR(9), 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  1    wreg      void 
 11248 ;; Registers used:
 11249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11259 ;;Total ram usage:        6 bytes
 11260 ;; Hardware stack levels used: 1
 11261 ;; Hardware stack levels required when called: 10
 11262 ;; This function calls:
 11263 ;;		_TurnDelay
 11264 ;;		_stop
 11265 ;;		_turnLeft
 11266 ;; This function is called by:
 11267 ;;		_GreenMove
 11268 ;;		_PinkMove
 11269 ;;		_LightBlueMove
 11270 ;;		_ReversePink
 11271 ;;		_turnCalibration
 11272 ;; This function uses a non-reentrant model
 11273 ;;
 11274                           
 11275                           	psect	text57
 11276   006BAE                     __ptext57:
 11277                           	callstack 0
 11278   006BAE                     _turnLeft45:
 11279                           	callstack 19
 11280   006BAE                     
 11281                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 11282   006BAE  C07A  F073         	movff	turnLeft45@mL,turnLeft@mL
 11283   006BB2  C07B  F074         	movff	turnLeft45@mL+1,turnLeft@mL+1
 11284   006BB6  C07C  F075         	movff	turnLeft45@mR,turnLeft@mR
 11285   006BBA  C07D  F076         	movff	turnLeft45@mR+1,turnLeft@mR+1
 11286   006BBE  ECE5  F02A         	call	_turnLeft	;wreg free
 11287   006BC2                     
 11288                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 11289   006BC2  C056  F060         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 11290   006BC6  C057  F061         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 11291   006BCA  ECF0  F037         	call	_TurnDelay	;wreg free
 11292   006BCE                     
 11293                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 11294   006BCE  0EC3               	movlw	low _motorL
 11295   006BD0  0100               	movlb	0	; () banked
 11296   006BD2  6F73               	movwf	stop@mL& (0+255),b
 11297   006BD4  0E01               	movlw	high _motorL
 11298   006BD6  6F74               	movwf	(stop@mL+1)& (0+255),b
 11299   006BD8  0EBA               	movlw	low _motorR
 11300   006BDA  6F75               	movwf	stop@mR& (0+255),b
 11301   006BDC  0E01               	movlw	high _motorR
 11302   006BDE  6F76               	movwf	(stop@mR+1)& (0+255),b
 11303   006BE0  EC61  F030         	call	_stop	;wreg free
 11304   006BE4                     
 11305                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11306   006BE4  0E05               	movlw	5
 11307   006BE6  0100               	movlb	0	; () banked
 11308   006BE8  6F7F               	movwf	(??_turnLeft45+1)& (0+255),b
 11309   006BEA  0E0F               	movlw	15
 11310   006BEC  6F7E               	movwf	??_turnLeft45& (0+255),b
 11311   006BEE  0EF1               	movlw	241
 11312   006BF0                     u6717:
 11313   006BF0  2EE8               	decfsz	wreg,f,c
 11314   006BF2  D7FE               	bra	u6717
 11315   006BF4  2F7E               	decfsz	??_turnLeft45& (0+255),f,b
 11316   006BF6  D7FC               	bra	u6717
 11317   006BF8  2F7F               	decfsz	(??_turnLeft45+1)& (0+255),f,b
 11318   006BFA  D7FA               	bra	u6717
 11319   006BFC  0012               	return		;funcret
 11320   006BFE                     __end_of_turnLeft45:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function _turnLeft *****************
 11324 ;; Defined at:
 11325 ;;		line 111 in file "dc_motor.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
 11328 ;;		 -> motorL(9), 
 11329 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
 11330 ;;		 -> motorR(9), 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;		None
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11342 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11345 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11346 ;;Total ram usage:        7 bytes
 11347 ;; Hardware stack levels used: 1
 11348 ;; Hardware stack levels required when called: 9
 11349 ;; This function calls:
 11350 ;;		_setMotorPWM
 11351 ;; This function is called by:
 11352 ;;		_turnLeft45
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text58
 11357   0055CA                     __ptext58:
 11358                           	callstack 0
 11359   0055CA                     _turnLeft:
 11360                           	callstack 19
 11361   0055CA                     
 11362                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 11363   0055CA  0100               	movlb	0	; () banked
 11364   0055CC  EE20 F001          	lfsr	2,1
 11365   0055D0  5173               	movf	turnLeft@mL& (0+255),w,b
 11366   0055D2  26D9               	addwf	fsr2l,f,c
 11367   0055D4  5174               	movf	(turnLeft@mL+1)& (0+255),w,b
 11368   0055D6  22DA               	addwfc	fsr2h,f,c
 11369   0055D8  0E00               	movlw	0
 11370   0055DA  6EDF               	movwf	indf2,c
 11371                           
 11372                           ;dc_motor.c: 114:     mR->direction =1;
 11373   0055DC  EE20 F001          	lfsr	2,1
 11374   0055E0  5175               	movf	turnLeft@mR& (0+255),w,b
 11375   0055E2  26D9               	addwf	fsr2l,f,c
 11376   0055E4  5176               	movf	(turnLeft@mR+1)& (0+255),w,b
 11377   0055E6  22DA               	addwfc	fsr2h,f,c
 11378   0055E8  0E01               	movlw	1
 11379   0055EA  6EDF               	movwf	indf2,c
 11380                           
 11381                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 11382   0055EC  EF1D  F02B         	goto	l5053
 11383   0055F0                     l5045:
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;dc_motor.c: 118:         mL->power+=10;
 11387   0055F0  C073  FFD9         	movff	turnLeft@mL,fsr2l
 11388   0055F4  C074  FFDA         	movff	turnLeft@mL+1,fsr2h
 11389   0055F8  0E0A               	movlw	10
 11390   0055FA  26DF               	addwf	indf2,f,c
 11391                           
 11392                           ;dc_motor.c: 119:         mR->power+=10;
 11393   0055FC  C075  FFD9         	movff	turnLeft@mR,fsr2l
 11394   005600  C076  FFDA         	movff	turnLeft@mR+1,fsr2h
 11395   005604  0E0A               	movlw	10
 11396   005606  26DF               	addwf	indf2,f,c
 11397   005608                     
 11398                           ; BSR set to: 0
 11399                           ;dc_motor.c: 121:         setMotorPWM(mL);
 11400   005608  C073  F06D         	movff	turnLeft@mL,setMotorPWM@m
 11401   00560C  C074  F06E         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11402   005610  EC99  F025         	call	_setMotorPWM	;wreg free
 11403   005614                     
 11404                           ;dc_motor.c: 122:         setMotorPWM(mR);
 11405   005614  C075  F06D         	movff	turnLeft@mR,setMotorPWM@m
 11406   005618  C076  F06E         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11407   00561C  EC99  F025         	call	_setMotorPWM	;wreg free
 11408   005620                     
 11409                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11410   005620  0E02               	movlw	2
 11411   005622  0100               	movlb	0	; () banked
 11412   005624  6F78               	movwf	(??_turnLeft+1)& (0+255),b
 11413   005626  0EA0               	movlw	160
 11414   005628  6F77               	movwf	??_turnLeft& (0+255),b
 11415   00562A  0E92               	movlw	146
 11416   00562C                     u6727:
 11417   00562C  2EE8               	decfsz	wreg,f,c
 11418   00562E  D7FE               	bra	u6727
 11419   005630  2F77               	decfsz	??_turnLeft& (0+255),f,b
 11420   005632  D7FC               	bra	u6727
 11421   005634  2F78               	decfsz	(??_turnLeft+1)& (0+255),f,b
 11422   005636  D7FA               	bra	u6727
 11423   005638  F000               	nop	
 11424   00563A                     l5053:
 11425                           
 11426                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 11427   00563A  C073  FFD9         	movff	turnLeft@mL,fsr2l
 11428   00563E  C074  FFDA         	movff	turnLeft@mL+1,fsr2h
 11429   005642  50DF               	movf	indf2,w,c
 11430   005644  0100               	movlb	0	; () banked
 11431   005646  6F77               	movwf	??_turnLeft& (0+255),b
 11432   005648  6B78               	clrf	(??_turnLeft+1)& (0+255),b
 11433   00564A  5058               	movf	_power^0,w,c
 11434   00564C  5D77               	subwf	??_turnLeft& (0+255),w,b
 11435   00564E  5178               	movf	(??_turnLeft+1)& (0+255),w,b
 11436   005650  0A80               	xorlw	128
 11437   005652  6F79               	movwf	(??_turnLeft+2)& (0+255),b
 11438   005654  5059               	movf	(_power+1)^0,w,c
 11439   005656  0A80               	xorlw	128
 11440   005658  5979               	subwfb	(??_turnLeft+2)& (0+255),w,b
 11441   00565A  B0D8               	btfsc	status,0,c
 11442   00565C  EF32  F02B         	goto	u4841
 11443   005660  EF34  F02B         	goto	u4840
 11444   005664                     u4841:
 11445   005664  EF4A  F02B         	goto	l550
 11446   005668                     u4840:
 11447   005668                     
 11448                           ; BSR set to: 0
 11449   005668  C075  FFD9         	movff	turnLeft@mR,fsr2l
 11450   00566C  C076  FFDA         	movff	turnLeft@mR+1,fsr2h
 11451   005670  50DF               	movf	indf2,w,c
 11452   005672  6F77               	movwf	??_turnLeft& (0+255),b
 11453   005674  6B78               	clrf	(??_turnLeft+1)& (0+255),b
 11454   005676  5058               	movf	_power^0,w,c
 11455   005678  5D77               	subwf	??_turnLeft& (0+255),w,b
 11456   00567A  5178               	movf	(??_turnLeft+1)& (0+255),w,b
 11457   00567C  0A80               	xorlw	128
 11458   00567E  6F79               	movwf	(??_turnLeft+2)& (0+255),b
 11459   005680  5059               	movf	(_power+1)^0,w,c
 11460   005682  0A80               	xorlw	128
 11461   005684  5979               	subwfb	(??_turnLeft+2)& (0+255),w,b
 11462   005686  A0D8               	btfss	status,0,c
 11463   005688  EF48  F02B         	goto	u4851
 11464   00568C  EF4A  F02B         	goto	u4850
 11465   005690                     u4851:
 11466   005690  EFF8  F02A         	goto	l5045
 11467   005694                     u4850:
 11468   005694                     l550:
 11469                           
 11470                           ; BSR set to: 0
 11471   005694  0012               	return		;funcret
 11472   005696                     __end_of_turnLeft:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function _TurnDelay *****************
 11476 ;; Defined at:
 11477 ;;		line 204 in file "dc_motor.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  Turn45Delay     2    0[BANK0 ] int 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;		None
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  1    wreg      void 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11491 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11493 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11494 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;Total ram usage:        3 bytes
 11496 ;; Hardware stack levels used: 1
 11497 ;; Hardware stack levels required when called: 7
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_turnRight45
 11502 ;;		_turnLeft45
 11503 ;; This function uses a non-reentrant model
 11504 ;;
 11505                           
 11506                           	psect	text59
 11507   006FE0                     __ptext59:
 11508                           	callstack 0
 11509   006FE0                     _TurnDelay:
 11510                           	callstack 21
 11511   006FE0                     
 11512                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 11513   006FE0  EFFF  F037         	goto	l585
 11514   006FE4                     l5093:
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 11518   006FE4  0E15               	movlw	21
 11519   006FE6  0100               	movlb	0	; () banked
 11520   006FE8  6F62               	movwf	??_TurnDelay& (0+255),b
 11521   006FEA  0EC6               	movlw	198
 11522   006FEC                     u6737:
 11523   006FEC  2EE8               	decfsz	wreg,f,c
 11524   006FEE  D7FE               	bra	u6737
 11525   006FF0  2F62               	decfsz	??_TurnDelay& (0+255),f,b
 11526   006FF2  D7FC               	bra	u6737
 11527   006FF4  F000               	nop	
 11528   006FF6                     
 11529                           ;dc_motor.c: 207:         Turn45Delay--;
 11530   006FF6  0100               	movlb	0	; () banked
 11531   006FF8  0760               	decf	TurnDelay@Turn45Delay& (0+255),f,b
 11532   006FFA  A0D8               	btfss	status,0,c
 11533   006FFC  0761               	decf	(TurnDelay@Turn45Delay+1)& (0+255),f,b
 11534   006FFE                     l585:
 11535                           
 11536                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 11537   006FFE  0100               	movlb	0	; () banked
 11538   007000  BF61               	btfsc	(TurnDelay@Turn45Delay+1)& (0+255),7,b
 11539   007002  EF0D  F038         	goto	u4910
 11540   007006  5161               	movf	(TurnDelay@Turn45Delay+1)& (0+255),w,b
 11541   007008  E106               	bnz	u4911
 11542   00700A  0560               	decf	TurnDelay@Turn45Delay& (0+255),w,b
 11543   00700C  B0D8               	btfsc	status,0,c
 11544   00700E  EF0B  F038         	goto	u4911
 11545   007012  EF0D  F038         	goto	u4910
 11546   007016                     u4911:
 11547   007016  EFF2  F037         	goto	l5093
 11548   00701A                     u4910:
 11549   00701A                     
 11550                           ; BSR set to: 0
 11551   00701A  0012               	return		;funcret
 11552   00701C                     __end_of_TurnDelay:
 11553                           	callstack 0
 11554                           
 11555 ;; *************** function _reverseOneBlock *****************
 11556 ;; Defined at:
 11557 ;;		line 232 in file "dc_motor.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 11560 ;;		 -> motorL(9), 
 11561 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 11562 ;;		 -> motorR(9), 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;		None
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      void 
 11567 ;; Registers used:
 11568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11577 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;Total ram usage:        6 bytes
 11579 ;; Hardware stack levels used: 1
 11580 ;; Hardware stack levels required when called: 10
 11581 ;; This function calls:
 11582 ;;		_delayed_ms
 11583 ;;		_fullSpeedBack
 11584 ;;		_stop
 11585 ;; This function is called by:
 11586 ;;		_YellowMove
 11587 ;;		_PinkMove
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text60
 11592   006BFE                     __ptext60:
 11593                           	callstack 0
 11594   006BFE                     _reverseOneBlock:
 11595                           	callstack 19
 11596   006BFE                     
 11597                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 11598   006BFE  C07A  F073         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 11599   006C02  C07B  F074         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 11600   006C06  C07C  F075         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 11601   006C0A  C07D  F076         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 11602   006C0E  EC4B  F02B         	call	_fullSpeedBack	;wreg free
 11603   006C12                     
 11604                           ;dc_motor.c: 234:     delayed_ms(RunOneBlockTime);
 11605   006C12  C054  F068         	movff	_RunOneBlockTime,delayed_ms@time
 11606   006C16  C055  F069         	movff	_RunOneBlockTime+1,delayed_ms@time+1
 11607   006C1A  EC93  F037         	call	_delayed_ms	;wreg free
 11608   006C1E                     
 11609                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 11610   006C1E  0EC3               	movlw	low _motorL
 11611   006C20  0100               	movlb	0	; () banked
 11612   006C22  6F73               	movwf	stop@mL& (0+255),b
 11613   006C24  0E01               	movlw	high _motorL
 11614   006C26  6F74               	movwf	(stop@mL+1)& (0+255),b
 11615   006C28  0EBA               	movlw	low _motorR
 11616   006C2A  6F75               	movwf	stop@mR& (0+255),b
 11617   006C2C  0E01               	movlw	high _motorR
 11618   006C2E  6F76               	movwf	(stop@mR+1)& (0+255),b
 11619   006C30  EC61  F030         	call	_stop	;wreg free
 11620   006C34                     
 11621                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11622   006C34  0E05               	movlw	5
 11623   006C36  0100               	movlb	0	; () banked
 11624   006C38  6F7F               	movwf	(??_reverseOneBlock+1)& (0+255),b
 11625   006C3A  0E0F               	movlw	15
 11626   006C3C  6F7E               	movwf	??_reverseOneBlock& (0+255),b
 11627   006C3E  0EF1               	movlw	241
 11628   006C40                     u6747:
 11629   006C40  2EE8               	decfsz	wreg,f,c
 11630   006C42  D7FE               	bra	u6747
 11631   006C44  2F7E               	decfsz	??_reverseOneBlock& (0+255),f,b
 11632   006C46  D7FC               	bra	u6747
 11633   006C48  2F7F               	decfsz	(??_reverseOneBlock+1)& (0+255),f,b
 11634   006C4A  D7FA               	bra	u6747
 11635   006C4C  0012               	return		;funcret
 11636   006C4E                     __end_of_reverseOneBlock:
 11637                           	callstack 0
 11638                           
 11639 ;; *************** function _reverseDetect *****************
 11640 ;; Defined at:
 11641 ;;		line 225 in file "dc_motor.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 11644 ;;		 -> motorL(9), 
 11645 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 11646 ;;		 -> motorR(9), 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;		None
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11661 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11662 ;;Total ram usage:        6 bytes
 11663 ;; Hardware stack levels used: 1
 11664 ;; Hardware stack levels required when called: 10
 11665 ;; This function calls:
 11666 ;;		_fullSpeedBack
 11667 ;;		_stop
 11668 ;; This function is called by:
 11669 ;;		_RedMove
 11670 ;;		_GreenMove
 11671 ;;		_BlueMove
 11672 ;;		_YellowMove
 11673 ;;		_PinkMove
 11674 ;;		_OrangeMove
 11675 ;;		_LightBlueMove
 11676 ;;		_ReverseYellow
 11677 ;;		_ReversePink
 11678 ;;		_go_Home
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text61
 11683   0065A8                     __ptext61:
 11684                           	callstack 0
 11685   0065A8                     _reverseDetect:
 11686                           	callstack 19
 11687   0065A8                     
 11688                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 11689   0065A8  C07A  F073         	movff	reverseDetect@mL,fullSpeedBack@mL
 11690   0065AC  C07B  F074         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 11691   0065B0  C07C  F075         	movff	reverseDetect@mR,fullSpeedBack@mR
 11692   0065B4  C07D  F076         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 11693   0065B8  EC4B  F02B         	call	_fullSpeedBack	;wreg free
 11694   0065BC                     
 11695                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11696   0065BC  0E11               	movlw	17
 11697   0065BE  0100               	movlb	0	; () banked
 11698   0065C0  6F7F               	movwf	(??_reverseDetect+1)& (0+255),b
 11699   0065C2  0E3C               	movlw	60
 11700   0065C4  6F7E               	movwf	??_reverseDetect& (0+255),b
 11701   0065C6  0ECB               	movlw	203
 11702   0065C8                     u6757:
 11703   0065C8  2EE8               	decfsz	wreg,f,c
 11704   0065CA  D7FE               	bra	u6757
 11705   0065CC  2F7E               	decfsz	??_reverseDetect& (0+255),f,b
 11706   0065CE  D7FC               	bra	u6757
 11707   0065D0  2F7F               	decfsz	(??_reverseDetect+1)& (0+255),f,b
 11708   0065D2  D7FA               	bra	u6757
 11709   0065D4                     
 11710                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11711   0065D4  0EC3               	movlw	low _motorL
 11712   0065D6  0100               	movlb	0	; () banked
 11713   0065D8  6F73               	movwf	stop@mL& (0+255),b
 11714   0065DA  0E01               	movlw	high _motorL
 11715   0065DC  6F74               	movwf	(stop@mL+1)& (0+255),b
 11716   0065DE  0EBA               	movlw	low _motorR
 11717   0065E0  6F75               	movwf	stop@mR& (0+255),b
 11718   0065E2  0E01               	movlw	high _motorR
 11719   0065E4  6F76               	movwf	(stop@mR+1)& (0+255),b
 11720   0065E6  EC61  F030         	call	_stop	;wreg free
 11721                           
 11722                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11723   0065EA  0E05               	movlw	5
 11724   0065EC  0100               	movlb	0	; () banked
 11725   0065EE  6F7F               	movwf	(??_reverseDetect+1)& (0+255),b
 11726   0065F0  0E0F               	movlw	15
 11727   0065F2  6F7E               	movwf	??_reverseDetect& (0+255),b
 11728   0065F4  0EF1               	movlw	241
 11729   0065F6                     u6767:
 11730   0065F6  2EE8               	decfsz	wreg,f,c
 11731   0065F8  D7FE               	bra	u6767
 11732   0065FA  2F7E               	decfsz	??_reverseDetect& (0+255),f,b
 11733   0065FC  D7FC               	bra	u6767
 11734   0065FE  2F7F               	decfsz	(??_reverseDetect+1)& (0+255),f,b
 11735   006600  D7FA               	bra	u6767
 11736   006602  0012               	return		;funcret
 11737   006604                     __end_of_reverseDetect:
 11738                           	callstack 0
 11739                           
 11740 ;; *************** function _fullSpeedBack *****************
 11741 ;; Defined at:
 11742 ;;		line 185 in file "dc_motor.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
 11745 ;;		 -> motorL(9), 
 11746 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
 11747 ;;		 -> motorR(9), 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;		None
 11750 ;; Return value:  Size  Location     Type
 11751 ;;                  1    wreg      void 
 11752 ;; Registers used:
 11753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11754 ;; Tracked objects:
 11755 ;;		On entry : 0/0
 11756 ;;		On exit  : 0/0
 11757 ;;		Unchanged: 0/0
 11758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11759 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11763 ;;Total ram usage:        7 bytes
 11764 ;; Hardware stack levels used: 1
 11765 ;; Hardware stack levels required when called: 9
 11766 ;; This function calls:
 11767 ;;		_setMotorPWM
 11768 ;; This function is called by:
 11769 ;;		_reverseDetect
 11770 ;;		_reverseOneBlock
 11771 ;;		_RetryMove
 11772 ;;		_Backhalfblock
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           	psect	text62
 11777   005696                     __ptext62:
 11778                           	callstack 0
 11779   005696                     _fullSpeedBack:
 11780                           	callstack 19
 11781   005696                     
 11782                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11783   005696  0100               	movlb	0	; () banked
 11784   005698  EE20 F001          	lfsr	2,1
 11785   00569C  5173               	movf	fullSpeedBack@mL& (0+255),w,b
 11786   00569E  26D9               	addwf	fsr2l,f,c
 11787   0056A0  5174               	movf	(fullSpeedBack@mL+1)& (0+255),w,b
 11788   0056A2  22DA               	addwfc	fsr2h,f,c
 11789   0056A4  0E00               	movlw	0
 11790   0056A6  6EDF               	movwf	indf2,c
 11791                           
 11792                           ;dc_motor.c: 189:     mR->direction =0;
 11793   0056A8  EE20 F001          	lfsr	2,1
 11794   0056AC  5175               	movf	fullSpeedBack@mR& (0+255),w,b
 11795   0056AE  26D9               	addwf	fsr2l,f,c
 11796   0056B0  5176               	movf	(fullSpeedBack@mR+1)& (0+255),w,b
 11797   0056B2  22DA               	addwfc	fsr2h,f,c
 11798   0056B4  0E00               	movlw	0
 11799   0056B6  6EDF               	movwf	indf2,c
 11800                           
 11801                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11802   0056B8  EF83  F02B         	goto	l5087
 11803   0056BC                     l5079:
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;dc_motor.c: 192:         mL->power+=10;
 11807   0056BC  C073  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11808   0056C0  C074  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11809   0056C4  0E0A               	movlw	10
 11810   0056C6  26DF               	addwf	indf2,f,c
 11811                           
 11812                           ;dc_motor.c: 193:         mR->power+=10;
 11813   0056C8  C075  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11814   0056CC  C076  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11815   0056D0  0E0A               	movlw	10
 11816   0056D2  26DF               	addwf	indf2,f,c
 11817   0056D4                     
 11818                           ; BSR set to: 0
 11819                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11820   0056D4  C073  F06D         	movff	fullSpeedBack@mL,setMotorPWM@m
 11821   0056D8  C074  F06E         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11822   0056DC  EC99  F025         	call	_setMotorPWM	;wreg free
 11823   0056E0                     
 11824                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11825   0056E0  C075  F06D         	movff	fullSpeedBack@mR,setMotorPWM@m
 11826   0056E4  C076  F06E         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11827   0056E8  EC99  F025         	call	_setMotorPWM	;wreg free
 11828   0056EC                     
 11829                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11830   0056EC  0E02               	movlw	2
 11831   0056EE  0100               	movlb	0	; () banked
 11832   0056F0  6F78               	movwf	(??_fullSpeedBack+1)& (0+255),b
 11833   0056F2  0EA0               	movlw	160
 11834   0056F4  6F77               	movwf	??_fullSpeedBack& (0+255),b
 11835   0056F6  0E92               	movlw	146
 11836   0056F8                     u6777:
 11837   0056F8  2EE8               	decfsz	wreg,f,c
 11838   0056FA  D7FE               	bra	u6777
 11839   0056FC  2F77               	decfsz	??_fullSpeedBack& (0+255),f,b
 11840   0056FE  D7FC               	bra	u6777
 11841   005700  2F78               	decfsz	(??_fullSpeedBack+1)& (0+255),f,b
 11842   005702  D7FA               	bra	u6777
 11843   005704  F000               	nop	
 11844   005706                     l5087:
 11845                           
 11846                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11847   005706  C073  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11848   00570A  C074  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11849   00570E  50DF               	movf	indf2,w,c
 11850   005710  0100               	movlb	0	; () banked
 11851   005712  6F77               	movwf	??_fullSpeedBack& (0+255),b
 11852   005714  6B78               	clrf	(??_fullSpeedBack+1)& (0+255),b
 11853   005716  5058               	movf	_power^0,w,c
 11854   005718  5D77               	subwf	??_fullSpeedBack& (0+255),w,b
 11855   00571A  5178               	movf	(??_fullSpeedBack+1)& (0+255),w,b
 11856   00571C  0A80               	xorlw	128
 11857   00571E  6F79               	movwf	(??_fullSpeedBack+2)& (0+255),b
 11858   005720  5059               	movf	(_power+1)^0,w,c
 11859   005722  0A80               	xorlw	128
 11860   005724  5979               	subwfb	(??_fullSpeedBack+2)& (0+255),w,b
 11861   005726  B0D8               	btfsc	status,0,c
 11862   005728  EF98  F02B         	goto	u4891
 11863   00572C  EF9A  F02B         	goto	u4890
 11864   005730                     u4891:
 11865   005730  EFB0  F02B         	goto	l582
 11866   005734                     u4890:
 11867   005734                     
 11868                           ; BSR set to: 0
 11869   005734  C075  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11870   005738  C076  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11871   00573C  50DF               	movf	indf2,w,c
 11872   00573E  6F77               	movwf	??_fullSpeedBack& (0+255),b
 11873   005740  6B78               	clrf	(??_fullSpeedBack+1)& (0+255),b
 11874   005742  5058               	movf	_power^0,w,c
 11875   005744  5D77               	subwf	??_fullSpeedBack& (0+255),w,b
 11876   005746  5178               	movf	(??_fullSpeedBack+1)& (0+255),w,b
 11877   005748  0A80               	xorlw	128
 11878   00574A  6F79               	movwf	(??_fullSpeedBack+2)& (0+255),b
 11879   00574C  5059               	movf	(_power+1)^0,w,c
 11880   00574E  0A80               	xorlw	128
 11881   005750  5979               	subwfb	(??_fullSpeedBack+2)& (0+255),w,b
 11882   005752  A0D8               	btfss	status,0,c
 11883   005754  EFAE  F02B         	goto	u4901
 11884   005758  EFB0  F02B         	goto	u4900
 11885   00575C                     u4901:
 11886   00575C  EF5E  F02B         	goto	l5079
 11887   005760                     u4900:
 11888   005760                     l582:
 11889                           
 11890                           ; BSR set to: 0
 11891   005760  0012               	return		;funcret
 11892   005762                     __end_of_fullSpeedBack:
 11893                           	callstack 0
 11894                           
 11895 ;; *************** function _Interrupts_init *****************
 11896 ;; Defined at:
 11897 ;;		line 13 in file "interrupts.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;		None
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  1    wreg      void 
 11904 ;; Registers used:
 11905 ;;		None
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11915 ;;Total ram usage:        0 bytes
 11916 ;; Hardware stack levels used: 1
 11917 ;; Hardware stack levels required when called: 7
 11918 ;; This function calls:
 11919 ;;		Nothing
 11920 ;; This function is called by:
 11921 ;;		_main
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           	psect	text63
 11926   00724A                     __ptext63:
 11927                           	callstack 0
 11928   00724A                     _Interrupts_init:
 11929                           	callstack 23
 11930   00724A                     
 11931                           ;interrupts.c: 15:     INTCONbits.IPEN=0;
 11932   00724A  9AF2               	bcf	242,5,c	;volatile
 11933                           
 11934                           ;interrupts.c: 16:     PIE2bits.C1IE=1;
 11935   00724C  010E               	movlb	14	; () banked
 11936   00724E  812B               	bsf	43,0,b	;volatile
 11937                           
 11938                           ;interrupts.c: 17:     INTCONbits.PEIE=1;
 11939   007250  8CF2               	bsf	242,6,c	;volatile
 11940                           
 11941                           ;interrupts.c: 18:     INTCONbits.GIE=1;
 11942   007252  8EF2               	bsf	242,7,c	;volatile
 11943                           
 11944                           ;interrupts.c: 19:     PIE0bits.TMR0IE=1;
 11945   007254  8B29               	bsf	41,5,b	;volatile
 11946   007256                     
 11947                           ; BSR set to: 14
 11948   007256  0012               	return		;funcret
 11949   007258                     __end_of_Interrupts_init:
 11950                           	callstack 0
 11951                           
 11952 ;; *************** function _Forwardhalfblock *****************
 11953 ;; Defined at:
 11954 ;;		line 245 in file "dc_motor.c"
 11955 ;; Parameters:    Size  Location     Type
 11956 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
 11957 ;;		 -> motorL(9), 
 11958 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
 11959 ;;		 -> motorR(9), 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11971 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;Total ram usage:        6 bytes
 11976 ;; Hardware stack levels used: 1
 11977 ;; Hardware stack levels required when called: 10
 11978 ;; This function calls:
 11979 ;;		___awdiv
 11980 ;;		_delayed_ms
 11981 ;;		_fullSpeedAhead
 11982 ;;		_stop
 11983 ;; This function is called by:
 11984 ;;		_main
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           	psect	text64
 11989   0064DC                     __ptext64:
 11990                           	callstack 0
 11991   0064DC                     _Forwardhalfblock:
 11992                           	callstack 20
 11993   0064DC                     
 11994                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11995   0064DC  C07A  F073         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11996   0064E0  C07B  F074         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11997   0064E4  C07C  F075         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11998   0064E8  C07D  F076         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11999   0064EC  ECB1  F02B         	call	_fullSpeedAhead	;wreg free
 12000   0064F0                     
 12001                           ;dc_motor.c: 247:     delayed_ms(RunOneBlockTime/2);
 12002   0064F0  C054  F060         	movff	_RunOneBlockTime,___awdiv@dividend
 12003   0064F4  C055  F061         	movff	_RunOneBlockTime+1,___awdiv@dividend+1
 12004   0064F8  0E00               	movlw	0
 12005   0064FA  0100               	movlb	0	; () banked
 12006   0064FC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 12007   0064FE  0E02               	movlw	2
 12008   006500  6F62               	movwf	___awdiv@divisor& (0+255),b
 12009   006502  ECDF  F02C         	call	___awdiv	;wreg free
 12010   006506  C060  F068         	movff	?___awdiv,delayed_ms@time
 12011   00650A  C061  F069         	movff	?___awdiv+1,delayed_ms@time+1
 12012   00650E  EC93  F037         	call	_delayed_ms	;wreg free
 12013   006512                     
 12014                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 12015   006512  0EC3               	movlw	low _motorL
 12016   006514  0100               	movlb	0	; () banked
 12017   006516  6F73               	movwf	stop@mL& (0+255),b
 12018   006518  0E01               	movlw	high _motorL
 12019   00651A  6F74               	movwf	(stop@mL+1)& (0+255),b
 12020   00651C  0EBA               	movlw	low _motorR
 12021   00651E  6F75               	movwf	stop@mR& (0+255),b
 12022   006520  0E01               	movlw	high _motorR
 12023   006522  6F76               	movwf	(stop@mR+1)& (0+255),b
 12024   006524  EC61  F030         	call	_stop	;wreg free
 12025   006528                     
 12026                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 12027   006528  0E05               	movlw	5
 12028   00652A  0100               	movlb	0	; () banked
 12029   00652C  6F7F               	movwf	(??_Forwardhalfblock+1)& (0+255),b
 12030   00652E  0E0F               	movlw	15
 12031   006530  6F7E               	movwf	??_Forwardhalfblock& (0+255),b
 12032   006532  0EF1               	movlw	241
 12033   006534                     u6787:
 12034   006534  2EE8               	decfsz	wreg,f,c
 12035   006536  D7FE               	bra	u6787
 12036   006538  2F7E               	decfsz	??_Forwardhalfblock& (0+255),f,b
 12037   00653A  D7FC               	bra	u6787
 12038   00653C  2F7F               	decfsz	(??_Forwardhalfblock+1)& (0+255),f,b
 12039   00653E  D7FA               	bra	u6787
 12040   006540  0012               	return		;funcret
 12041   006542                     __end_of_Forwardhalfblock:
 12042                           	callstack 0
 12043                           
 12044 ;; *************** function _stop *****************
 12045 ;; Defined at:
 12046 ;;		line 93 in file "dc_motor.c"
 12047 ;; Parameters:    Size  Location     Type
 12048 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
 12049 ;;		 -> motorL(9), 
 12050 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
 12051 ;;		 -> motorR(9), 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;		None
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12066 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12067 ;;Total ram usage:        6 bytes
 12068 ;; Hardware stack levels used: 1
 12069 ;; Hardware stack levels required when called: 9
 12070 ;; This function calls:
 12071 ;;		_setMotorPWM
 12072 ;; This function is called by:
 12073 ;;		_main
 12074 ;;		_turnRight45
 12075 ;;		_turnLeft45
 12076 ;;		_reverseDetect
 12077 ;;		_reverseOneBlock
 12078 ;;		_ForwardOneBlock
 12079 ;;		_Forwardhalfblock
 12080 ;;		_RetryMove
 12081 ;;		_go_Home
 12082 ;;		_Backhalfblock
 12083 ;; This function uses a non-reentrant model
 12084 ;;
 12085                           
 12086                           	psect	text65
 12087   0060C2                     __ptext65:
 12088                           	callstack 0
 12089   0060C2                     _stop:
 12090                           	callstack 19
 12091   0060C2                     
 12092                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 12093   0060C2  EF88  F030         	goto	l5039
 12094   0060C6                     l5031:
 12095                           
 12096                           ;dc_motor.c: 97:         mL->power-=10;
 12097   0060C6  C073  FFD9         	movff	stop@mL,fsr2l
 12098   0060CA  C074  FFDA         	movff	stop@mL+1,fsr2h
 12099   0060CE  0E0A               	movlw	10
 12100   0060D0  5EDF               	subwf	indf2,f,c
 12101                           
 12102                           ;dc_motor.c: 98:         mR->power-=10;
 12103   0060D2  C075  FFD9         	movff	stop@mR,fsr2l
 12104   0060D6  C076  FFDA         	movff	stop@mR+1,fsr2h
 12105   0060DA  0E0A               	movlw	10
 12106   0060DC  5EDF               	subwf	indf2,f,c
 12107   0060DE                     
 12108                           ;dc_motor.c: 103:         setMotorPWM(mL);
 12109   0060DE  C073  F06D         	movff	stop@mL,setMotorPWM@m
 12110   0060E2  C074  F06E         	movff	stop@mL+1,setMotorPWM@m+1
 12111   0060E6  EC99  F025         	call	_setMotorPWM	;wreg free
 12112   0060EA                     
 12113                           ;dc_motor.c: 104:         setMotorPWM(mR);
 12114   0060EA  C075  F06D         	movff	stop@mR,setMotorPWM@m
 12115   0060EE  C076  F06E         	movff	stop@mR+1,setMotorPWM@m+1
 12116   0060F2  EC99  F025         	call	_setMotorPWM	;wreg free
 12117   0060F6                     
 12118                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 12119   0060F6  0E02               	movlw	2
 12120   0060F8  0100               	movlb	0	; () banked
 12121   0060FA  6F78               	movwf	(??_stop+1)& (0+255),b
 12122   0060FC  0EA0               	movlw	160
 12123   0060FE  6F77               	movwf	??_stop& (0+255),b
 12124   006100  0E92               	movlw	146
 12125   006102                     u6797:
 12126   006102  2EE8               	decfsz	wreg,f,c
 12127   006104  D7FE               	bra	u6797
 12128   006106  2F77               	decfsz	??_stop& (0+255),f,b
 12129   006108  D7FC               	bra	u6797
 12130   00610A  2F78               	decfsz	(??_stop+1)& (0+255),f,b
 12131   00610C  D7FA               	bra	u6797
 12132   00610E  F000               	nop	
 12133   006110                     l5039:
 12134                           
 12135                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 12136   006110  C073  FFD9         	movff	stop@mL,fsr2l
 12137   006114  C074  FFDA         	movff	stop@mL+1,fsr2h
 12138   006118  50DF               	movf	indf2,w,c
 12139   00611A  A4D8               	btfss	status,2,c
 12140   00611C  EF92  F030         	goto	u4821
 12141   006120  EF94  F030         	goto	u4820
 12142   006124                     u4821:
 12143   006124  EF63  F030         	goto	l5031
 12144   006128                     u4820:
 12145   006128  C075  FFD9         	movff	stop@mR,fsr2l
 12146   00612C  C076  FFDA         	movff	stop@mR+1,fsr2h
 12147   006130  50DF               	movf	indf2,w,c
 12148   006132  A4D8               	btfss	status,2,c
 12149   006134  EF9E  F030         	goto	u4831
 12150   006138  EFA0  F030         	goto	u4830
 12151   00613C                     u4831:
 12152   00613C  EF63  F030         	goto	l5031
 12153   006140                     u4830:
 12154   006140  0012               	return		;funcret
 12155   006142                     __end_of_stop:
 12156                           	callstack 0
 12157                           
 12158 ;; *************** function _fullSpeedAhead *****************
 12159 ;; Defined at:
 12160 ;;		line 147 in file "dc_motor.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;  mL              2   19[BANK0 ] PTR struct DC_motor
 12163 ;;		 -> motorL(9), 
 12164 ;;  mR              2   21[BANK0 ] PTR struct DC_motor
 12165 ;;		 -> motorR(9), 
 12166 ;; Auto vars:     Size  Location     Type
 12167 ;;		None
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  1    wreg      void 
 12170 ;; Registers used:
 12171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12179 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;Total ram usage:        7 bytes
 12182 ;; Hardware stack levels used: 1
 12183 ;; Hardware stack levels required when called: 9
 12184 ;; This function calls:
 12185 ;;		_setMotorPWM
 12186 ;; This function is called by:
 12187 ;;		_main
 12188 ;;		_ForwardOneBlock
 12189 ;;		_Forwardhalfblock
 12190 ;;		_RetryMove
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text66
 12195   005762                     __ptext66:
 12196                           	callstack 0
 12197   005762                     _fullSpeedAhead:
 12198                           	callstack 18
 12199   005762                     
 12200                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 12201   005762  0100               	movlb	0	; () banked
 12202   005764  EE20 F001          	lfsr	2,1
 12203   005768  5173               	movf	fullSpeedAhead@mL& (0+255),w,b
 12204   00576A  26D9               	addwf	fsr2l,f,c
 12205   00576C  5174               	movf	(fullSpeedAhead@mL+1)& (0+255),w,b
 12206   00576E  22DA               	addwfc	fsr2h,f,c
 12207   005770  0E01               	movlw	1
 12208   005772  6EDF               	movwf	indf2,c
 12209                           
 12210                           ;dc_motor.c: 151:     mR->direction =1;
 12211   005774  EE20 F001          	lfsr	2,1
 12212   005778  5175               	movf	fullSpeedAhead@mR& (0+255),w,b
 12213   00577A  26D9               	addwf	fsr2l,f,c
 12214   00577C  5176               	movf	(fullSpeedAhead@mR+1)& (0+255),w,b
 12215   00577E  22DA               	addwfc	fsr2h,f,c
 12216   005780  0E01               	movlw	1
 12217   005782  6EDF               	movwf	indf2,c
 12218                           
 12219                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 12220   005784  EFE9  F02B         	goto	l5025
 12221   005788                     l5017:
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;dc_motor.c: 154:         mL->power+=10;
 12225   005788  C073  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12226   00578C  C074  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12227   005790  0E0A               	movlw	10
 12228   005792  26DF               	addwf	indf2,f,c
 12229                           
 12230                           ;dc_motor.c: 155:         mR->power+=10;
 12231   005794  C075  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12232   005798  C076  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12233   00579C  0E0A               	movlw	10
 12234   00579E  26DF               	addwf	indf2,f,c
 12235   0057A0                     
 12236                           ; BSR set to: 0
 12237                           ;dc_motor.c: 157:         setMotorPWM(mL);
 12238   0057A0  C073  F06D         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12239   0057A4  C074  F06E         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12240   0057A8  EC99  F025         	call	_setMotorPWM	;wreg free
 12241   0057AC                     
 12242                           ;dc_motor.c: 158:         setMotorPWM(mR);
 12243   0057AC  C075  F06D         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12244   0057B0  C076  F06E         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12245   0057B4  EC99  F025         	call	_setMotorPWM	;wreg free
 12246   0057B8                     
 12247                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 12248   0057B8  0E02               	movlw	2
 12249   0057BA  0100               	movlb	0	; () banked
 12250   0057BC  6F78               	movwf	(??_fullSpeedAhead+1)& (0+255),b
 12251   0057BE  0EA0               	movlw	160
 12252   0057C0  6F77               	movwf	??_fullSpeedAhead& (0+255),b
 12253   0057C2  0E92               	movlw	146
 12254   0057C4                     u6807:
 12255   0057C4  2EE8               	decfsz	wreg,f,c
 12256   0057C6  D7FE               	bra	u6807
 12257   0057C8  2F77               	decfsz	??_fullSpeedAhead& (0+255),f,b
 12258   0057CA  D7FC               	bra	u6807
 12259   0057CC  2F78               	decfsz	(??_fullSpeedAhead+1)& (0+255),f,b
 12260   0057CE  D7FA               	bra	u6807
 12261   0057D0  F000               	nop	
 12262   0057D2                     l5025:
 12263                           
 12264                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 12265   0057D2  C073  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12266   0057D6  C074  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12267   0057DA  50DF               	movf	indf2,w,c
 12268   0057DC  0100               	movlb	0	; () banked
 12269   0057DE  6F77               	movwf	??_fullSpeedAhead& (0+255),b
 12270   0057E0  6B78               	clrf	(??_fullSpeedAhead+1)& (0+255),b
 12271   0057E2  5058               	movf	_power^0,w,c
 12272   0057E4  5D77               	subwf	??_fullSpeedAhead& (0+255),w,b
 12273   0057E6  5178               	movf	(??_fullSpeedAhead+1)& (0+255),w,b
 12274   0057E8  0A80               	xorlw	128
 12275   0057EA  6F79               	movwf	(??_fullSpeedAhead+2)& (0+255),b
 12276   0057EC  5059               	movf	(_power+1)^0,w,c
 12277   0057EE  0A80               	xorlw	128
 12278   0057F0  5979               	subwfb	(??_fullSpeedAhead+2)& (0+255),w,b
 12279   0057F2  B0D8               	btfsc	status,0,c
 12280   0057F4  EFFE  F02B         	goto	u4801
 12281   0057F8  EF00  F02C         	goto	u4800
 12282   0057FC                     u4801:
 12283   0057FC  EF16  F02C         	goto	l566
 12284   005800                     u4800:
 12285   005800                     
 12286                           ; BSR set to: 0
 12287   005800  C075  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12288   005804  C076  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12289   005808  50DF               	movf	indf2,w,c
 12290   00580A  6F77               	movwf	??_fullSpeedAhead& (0+255),b
 12291   00580C  6B78               	clrf	(??_fullSpeedAhead+1)& (0+255),b
 12292   00580E  5058               	movf	_power^0,w,c
 12293   005810  5D77               	subwf	??_fullSpeedAhead& (0+255),w,b
 12294   005812  5178               	movf	(??_fullSpeedAhead+1)& (0+255),w,b
 12295   005814  0A80               	xorlw	128
 12296   005816  6F79               	movwf	(??_fullSpeedAhead+2)& (0+255),b
 12297   005818  5059               	movf	(_power+1)^0,w,c
 12298   00581A  0A80               	xorlw	128
 12299   00581C  5979               	subwfb	(??_fullSpeedAhead+2)& (0+255),w,b
 12300   00581E  A0D8               	btfss	status,0,c
 12301   005820  EF14  F02C         	goto	u4811
 12302   005824  EF16  F02C         	goto	u4810
 12303   005828                     u4811:
 12304   005828  EFC4  F02B         	goto	l5017
 12305   00582C                     u4810:
 12306   00582C                     l566:
 12307                           
 12308                           ; BSR set to: 0
 12309   00582C  0012               	return		;funcret
 12310   00582E                     __end_of_fullSpeedAhead:
 12311                           	callstack 0
 12312                           
 12313 ;; *************** function _setMotorPWM *****************
 12314 ;; Defined at:
 12315 ;;		line 68 in file "dc_motor.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;  m               2   13[BANK0 ] PTR struct DC_motor
 12318 ;;		 -> motorR(9), motorL(9), 
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  negDuty         1   18[BANK0 ] unsigned char 
 12321 ;;  posDuty         1   17[BANK0 ] unsigned char 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12334 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;Total ram usage:        6 bytes
 12336 ;; Hardware stack levels used: 1
 12337 ;; Hardware stack levels required when called: 8
 12338 ;; This function calls:
 12339 ;;		___lwdiv
 12340 ;;		___wmul
 12341 ;; This function is called by:
 12342 ;;		_stop
 12343 ;;		_turnLeft
 12344 ;;		_turnRight
 12345 ;;		_fullSpeedAhead
 12346 ;;		_timed_forward
 12347 ;;		_fullSpeedBack
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text67
 12352   004B32                     __ptext67:
 12353                           	callstack 0
 12354   004B32                     _setMotorPWM:
 12355                           	callstack 19
 12356   004B32                     
 12357                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 12358   004B32  0100               	movlb	0	; () banked
 12359   004B34  EE20 F002          	lfsr	2,2
 12360   004B38  516D               	movf	setMotorPWM@m& (0+255),w,b
 12361   004B3A  26D9               	addwf	fsr2l,f,c
 12362   004B3C  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12363   004B3E  22DA               	addwfc	fsr2h,f,c
 12364   004B40  50DF               	movf	indf2,w,c
 12365   004B42  B4D8               	btfsc	status,2,c
 12366   004B44  EFA6  F025         	goto	u3801
 12367   004B48  EFA8  F025         	goto	u3800
 12368   004B4C                     u3801:
 12369   004B4C  EFDE  F025         	goto	l4453
 12370   004B50                     u3800:
 12371   004B50                     
 12372                           ; BSR set to: 0
 12373                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 12374   004B50  C06D  FFD9         	movff	setMotorPWM@m,fsr2l
 12375   004B54  C06E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12376   004B58  50DF               	movf	indf2,w,c
 12377   004B5A  6F6F               	movwf	??_setMotorPWM& (0+255),b
 12378   004B5C  516F               	movf	??_setMotorPWM& (0+255),w,b
 12379   004B5E  6F60               	movwf	___wmul@multiplier& (0+255),b
 12380   004B60  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12381   004B62  EE20 F003          	lfsr	2,3
 12382   004B66  516D               	movf	setMotorPWM@m& (0+255),w,b
 12383   004B68  26D9               	addwf	fsr2l,f,c
 12384   004B6A  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12385   004B6C  22DA               	addwfc	fsr2h,f,c
 12386   004B6E  CFDE F062          	movff	postinc2,___wmul@multiplicand
 12387   004B72  CFDD F063          	movff	postdec2,___wmul@multiplicand+1
 12388   004B76  ECA5  F038         	call	___wmul	;wreg free
 12389   004B7A  C060  F066         	movff	?___wmul,___lwdiv@dividend
 12390   004B7E  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 12391   004B82  0E00               	movlw	0
 12392   004B84  0100               	movlb	0	; () banked
 12393   004B86  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12394   004B88  0E64               	movlw	100
 12395   004B8A  6F68               	movwf	___lwdiv@divisor& (0+255),b
 12396   004B8C  EC5A  F031         	call	___lwdiv	;wreg free
 12397   004B90  0100               	movlb	0	; () banked
 12398   004B92  EE20 F003          	lfsr	2,3
 12399   004B96  516D               	movf	setMotorPWM@m& (0+255),w,b
 12400   004B98  26D9               	addwf	fsr2l,f,c
 12401   004B9A  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12402   004B9C  22DA               	addwfc	fsr2h,f,c
 12403   004B9E  50DF               	movf	indf2,w,c
 12404   004BA0  6F70               	movwf	(??_setMotorPWM+1)& (0+255),b
 12405   004BA2  5166               	movf	?___lwdiv& (0+255),w,b
 12406   004BA4  5D70               	subwf	(??_setMotorPWM+1)& (0+255),w,b
 12407   004BA6  6F71               	movwf	setMotorPWM@posDuty& (0+255),b
 12408   004BA8                     
 12409                           ; BSR set to: 0
 12410                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 12411   004BA8  EE20 F003          	lfsr	2,3
 12412   004BAC  516D               	movf	setMotorPWM@m& (0+255),w,b
 12413   004BAE  26D9               	addwf	fsr2l,f,c
 12414   004BB0  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12415   004BB2  22DA               	addwfc	fsr2h,f,c
 12416   004BB4  50DF               	movf	indf2,w,c
 12417   004BB6  6F72               	movwf	setMotorPWM@negDuty& (0+255),b
 12418                           
 12419                           ;dc_motor.c: 75:     }
 12420   004BB8  EF03  F026         	goto	l4457
 12421   004BBC                     l4453:
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;dc_motor.c: 77:         posDuty=0;
 12425   004BBC  0E00               	movlw	0
 12426   004BBE  6F71               	movwf	setMotorPWM@posDuty& (0+255),b
 12427   004BC0                     
 12428                           ; BSR set to: 0
 12429                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12430   004BC0  C06D  FFD9         	movff	setMotorPWM@m,fsr2l
 12431   004BC4  C06E  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12432   004BC8  50DF               	movf	indf2,w,c
 12433   004BCA  6F6F               	movwf	??_setMotorPWM& (0+255),b
 12434   004BCC  516F               	movf	??_setMotorPWM& (0+255),w,b
 12435   004BCE  6F60               	movwf	___wmul@multiplier& (0+255),b
 12436   004BD0  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 12437   004BD2  EE20 F003          	lfsr	2,3
 12438   004BD6  516D               	movf	setMotorPWM@m& (0+255),w,b
 12439   004BD8  26D9               	addwf	fsr2l,f,c
 12440   004BDA  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12441   004BDC  22DA               	addwfc	fsr2h,f,c
 12442   004BDE  CFDE F062          	movff	postinc2,___wmul@multiplicand
 12443   004BE2  CFDD F063          	movff	postdec2,___wmul@multiplicand+1
 12444   004BE6  ECA5  F038         	call	___wmul	;wreg free
 12445   004BEA  C060  F066         	movff	?___wmul,___lwdiv@dividend
 12446   004BEE  C061  F067         	movff	?___wmul+1,___lwdiv@dividend+1
 12447   004BF2  0E00               	movlw	0
 12448   004BF4  0100               	movlb	0	; () banked
 12449   004BF6  6F69               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12450   004BF8  0E64               	movlw	100
 12451   004BFA  6F68               	movwf	___lwdiv@divisor& (0+255),b
 12452   004BFC  EC5A  F031         	call	___lwdiv	;wreg free
 12453   004C00  0100               	movlb	0	; () banked
 12454   004C02  5166               	movf	?___lwdiv& (0+255),w,b
 12455   004C04  6F72               	movwf	setMotorPWM@negDuty& (0+255),b
 12456   004C06                     l4457:
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;dc_motor.c: 81:     if (m->direction) {
 12460   004C06  EE20 F001          	lfsr	2,1
 12461   004C0A  516D               	movf	setMotorPWM@m& (0+255),w,b
 12462   004C0C  26D9               	addwf	fsr2l,f,c
 12463   004C0E  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12464   004C10  22DA               	addwfc	fsr2h,f,c
 12465   004C12  50DF               	movf	indf2,w,c
 12466   004C14  B4D8               	btfsc	status,2,c
 12467   004C16  EF0F  F026         	goto	u3811
 12468   004C1A  EF11  F026         	goto	u3810
 12469   004C1E                     u3811:
 12470   004C1E  EF33  F026         	goto	l4461
 12471   004C22                     u3810:
 12472   004C22                     
 12473                           ; BSR set to: 0
 12474                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 12475   004C22  EE20 F005          	lfsr	2,5
 12476   004C26  516D               	movf	setMotorPWM@m& (0+255),w,b
 12477   004C28  26D9               	addwf	fsr2l,f,c
 12478   004C2A  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12479   004C2C  22DA               	addwfc	fsr2h,f,c
 12480   004C2E  CFDE F06F          	movff	postinc2,??_setMotorPWM
 12481   004C32  CFDD F070          	movff	postdec2,??_setMotorPWM+1
 12482   004C36  C06F  FFD9         	movff	??_setMotorPWM,fsr2l
 12483   004C3A  C070  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12484   004C3E  C071  FFDF         	movff	setMotorPWM@posDuty,indf2
 12485                           
 12486                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 12487   004C42  EE20 F007          	lfsr	2,7
 12488   004C46  516D               	movf	setMotorPWM@m& (0+255),w,b
 12489   004C48  26D9               	addwf	fsr2l,f,c
 12490   004C4A  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12491   004C4C  22DA               	addwfc	fsr2h,f,c
 12492   004C4E  CFDE F06F          	movff	postinc2,??_setMotorPWM
 12493   004C52  CFDD F070          	movff	postdec2,??_setMotorPWM+1
 12494   004C56  C06F  FFD9         	movff	??_setMotorPWM,fsr2l
 12495   004C5A  C070  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12496   004C5E  C072  FFDF         	movff	setMotorPWM@negDuty,indf2
 12497                           
 12498                           ;dc_motor.c: 86:     } else {
 12499   004C62  EF53  F026         	goto	l536
 12500   004C66                     l4461:
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 12504   004C66  EE20 F005          	lfsr	2,5
 12505   004C6A  516D               	movf	setMotorPWM@m& (0+255),w,b
 12506   004C6C  26D9               	addwf	fsr2l,f,c
 12507   004C6E  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12508   004C70  22DA               	addwfc	fsr2h,f,c
 12509   004C72  CFDE F06F          	movff	postinc2,??_setMotorPWM
 12510   004C76  CFDD F070          	movff	postdec2,??_setMotorPWM+1
 12511   004C7A  C06F  FFD9         	movff	??_setMotorPWM,fsr2l
 12512   004C7E  C070  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12513   004C82  C072  FFDF         	movff	setMotorPWM@negDuty,indf2
 12514                           
 12515                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 12516   004C86  EE20 F007          	lfsr	2,7
 12517   004C8A  516D               	movf	setMotorPWM@m& (0+255),w,b
 12518   004C8C  26D9               	addwf	fsr2l,f,c
 12519   004C8E  516E               	movf	(setMotorPWM@m+1)& (0+255),w,b
 12520   004C90  22DA               	addwfc	fsr2h,f,c
 12521   004C92  CFDE F06F          	movff	postinc2,??_setMotorPWM
 12522   004C96  CFDD F070          	movff	postdec2,??_setMotorPWM+1
 12523   004C9A  C06F  FFD9         	movff	??_setMotorPWM,fsr2l
 12524   004C9E  C070  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12525   004CA2  C071  FFDF         	movff	setMotorPWM@posDuty,indf2
 12526   004CA6                     l536:
 12527                           
 12528                           ; BSR set to: 0
 12529   004CA6  0012               	return		;funcret
 12530   004CA8                     __end_of_setMotorPWM:
 12531                           	callstack 0
 12532                           
 12533 ;; *************** function ___wmul *****************
 12534 ;; Defined at:
 12535 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12536 ;; Parameters:    Size  Location     Type
 12537 ;;  multiplier      2    0[BANK0 ] unsigned int 
 12538 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 12539 ;; Auto vars:     Size  Location     Type
 12540 ;;  product         2    4[BANK0 ] unsigned int 
 12541 ;; Return value:  Size  Location     Type
 12542 ;;                  2    0[BANK0 ] unsigned int 
 12543 ;; Registers used:
 12544 ;;		wreg, status,2, status,0, prodl, prodh
 12545 ;; Tracked objects:
 12546 ;;		On entry : 0/0
 12547 ;;		On exit  : 0/0
 12548 ;;		Unchanged: 0/0
 12549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12553 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12554 ;;Total ram usage:        6 bytes
 12555 ;; Hardware stack levels used: 1
 12556 ;; Hardware stack levels required when called: 7
 12557 ;; This function calls:
 12558 ;;		Nothing
 12559 ;; This function is called by:
 12560 ;;		_setMotorPWM
 12561 ;;		i2_setMotorPWM
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           	psect	text68
 12566   00714A                     __ptext68:
 12567                           	callstack 0
 12568   00714A                     ___wmul:
 12569                           	callstack 19
 12570   00714A  0100               	movlb	0	; () banked
 12571   00714C  5160               	movf	___wmul@multiplier& (0+255),w,b
 12572   00714E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12573   007150  CFF3 F064          	movff	prodl,___wmul@product
 12574   007154  CFF4 F065          	movff	prodh,___wmul@product+1
 12575   007158  5160               	movf	___wmul@multiplier& (0+255),w,b
 12576   00715A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12577   00715C  50F3               	movf	243,w,c
 12578   00715E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12579   007160  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12580   007162  0362               	mulwf	___wmul@multiplicand& (0+255),b
 12581   007164  50F3               	movf	243,w,c
 12582   007166  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 12583   007168                     
 12584                           ; BSR set to: 0
 12585   007168  C064  F060         	movff	___wmul@product,?___wmul
 12586   00716C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 12587   007170                     
 12588                           ; BSR set to: 0
 12589   007170  0012               	return		;funcret
 12590   007172                     __end_of___wmul:
 12591                           	callstack 0
 12592                           
 12593 ;; *************** function ___lwdiv *****************
 12594 ;; Defined at:
 12595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;  dividend        2    6[BANK0 ] unsigned int 
 12598 ;;  divisor         2    8[BANK0 ] unsigned int 
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;  quotient        2   10[BANK0 ] unsigned int 
 12601 ;;  counter         1   12[BANK0 ] unsigned char 
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  2    6[BANK0 ] unsigned int 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12612 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12614 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12615 ;;Total ram usage:        7 bytes
 12616 ;; Hardware stack levels used: 1
 12617 ;; Hardware stack levels required when called: 7
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_setMotorPWM
 12622 ;;		i2_setMotorPWM
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           	psect	text69
 12627   0062B4                     __ptext69:
 12628                           	callstack 0
 12629   0062B4                     ___lwdiv:
 12630                           	callstack 19
 12631   0062B4  0E00               	movlw	0
 12632   0062B6  0100               	movlb	0	; () banked
 12633   0062B8  6F6B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12634   0062BA  0E00               	movlw	0
 12635   0062BC  6F6A               	movwf	___lwdiv@quotient& (0+255),b
 12636   0062BE                     
 12637                           ; BSR set to: 0
 12638   0062BE  5168               	movf	___lwdiv@divisor& (0+255),w,b
 12639   0062C0  1169               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12640   0062C2  B4D8               	btfsc	status,2,c
 12641   0062C4  EF66  F031         	goto	u3731
 12642   0062C8  EF68  F031         	goto	u3730
 12643   0062CC                     u3731:
 12644   0062CC  EF90  F031         	goto	l1237
 12645   0062D0                     u3730:
 12646   0062D0                     
 12647                           ; BSR set to: 0
 12648   0062D0  0E01               	movlw	1
 12649   0062D2  6F6C               	movwf	___lwdiv@counter& (0+255),b
 12650   0062D4  EF70  F031         	goto	l4397
 12651   0062D8                     l4395:
 12652                           
 12653                           ; BSR set to: 0
 12654   0062D8  90D8               	bcf	status,0,c
 12655   0062DA  3768               	rlcf	___lwdiv@divisor& (0+255),f,b
 12656   0062DC  3769               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12657   0062DE  2B6C               	incf	___lwdiv@counter& (0+255),f,b
 12658   0062E0                     l4397:
 12659                           
 12660                           ; BSR set to: 0
 12661   0062E0  AF69               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12662   0062E2  EF75  F031         	goto	u3741
 12663   0062E6  EF77  F031         	goto	u3740
 12664   0062EA                     u3741:
 12665   0062EA  EF6C  F031         	goto	l4395
 12666   0062EE                     u3740:
 12667   0062EE                     l4399:
 12668                           
 12669                           ; BSR set to: 0
 12670   0062EE  90D8               	bcf	status,0,c
 12671   0062F0  376A               	rlcf	___lwdiv@quotient& (0+255),f,b
 12672   0062F2  376B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12673   0062F4                     
 12674                           ; BSR set to: 0
 12675   0062F4  5168               	movf	___lwdiv@divisor& (0+255),w,b
 12676   0062F6  5D66               	subwf	___lwdiv@dividend& (0+255),w,b
 12677   0062F8  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12678   0062FA  5967               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12679   0062FC  A0D8               	btfss	status,0,c
 12680   0062FE  EF83  F031         	goto	u3751
 12681   006302  EF85  F031         	goto	u3750
 12682   006306                     u3751:
 12683   006306  EF8A  F031         	goto	l4407
 12684   00630A                     u3750:
 12685   00630A                     
 12686                           ; BSR set to: 0
 12687   00630A  5168               	movf	___lwdiv@divisor& (0+255),w,b
 12688   00630C  5F66               	subwf	___lwdiv@dividend& (0+255),f,b
 12689   00630E  5169               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12690   006310  5B67               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12691   006312                     
 12692                           ; BSR set to: 0
 12693   006312  816A               	bsf	___lwdiv@quotient& (0+255),0,b
 12694   006314                     l4407:
 12695                           
 12696                           ; BSR set to: 0
 12697   006314  90D8               	bcf	status,0,c
 12698   006316  3369               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12699   006318  3368               	rrcf	___lwdiv@divisor& (0+255),f,b
 12700   00631A                     
 12701                           ; BSR set to: 0
 12702   00631A  2F6C               	decfsz	___lwdiv@counter& (0+255),f,b
 12703   00631C  EF77  F031         	goto	l4399
 12704   006320                     l1237:
 12705                           
 12706                           ; BSR set to: 0
 12707   006320  C06A  F066         	movff	___lwdiv@quotient,?___lwdiv
 12708   006324  C06B  F067         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12709   006328                     
 12710                           ; BSR set to: 0
 12711   006328  0012               	return		;funcret
 12712   00632A                     __end_of___lwdiv:
 12713                           	callstack 0
 12714                           
 12715 ;; *************** function _delayed_ms *****************
 12716 ;; Defined at:
 12717 ;;		line 39 in file "timers.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  time            2    8[BANK0 ] int 
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;  i               2   11[BANK0 ] unsigned int 
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg, status,2, status,0
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12734 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12735 ;;Total ram usage:        5 bytes
 12736 ;; Hardware stack levels used: 1
 12737 ;; Hardware stack levels required when called: 7
 12738 ;; This function calls:
 12739 ;;		Nothing
 12740 ;; This function is called by:
 12741 ;;		_timed_forward
 12742 ;;		_reverseOneBlock
 12743 ;;		_ForwardOneBlock
 12744 ;;		_Forwardhalfblock
 12745 ;;		_Backhalfblock
 12746 ;; This function uses a non-reentrant model
 12747 ;;
 12748                           
 12749                           	psect	text70
 12750   006F26                     __ptext70:
 12751                           	callstack 0
 12752   006F26                     _delayed_ms:
 12753                           	callstack 21
 12754   006F26                     
 12755                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
 12756   006F26  0E00               	movlw	0
 12757   006F28  0100               	movlb	0	; () banked
 12758   006F2A  6F6C               	movwf	(delayed_ms@i+1)& (0+255),b
 12759   006F2C  0E00               	movlw	0
 12760   006F2E  6F6B               	movwf	delayed_ms@i& (0+255),b
 12761   006F30  EFA6  F037         	goto	l740
 12762   006F34                     l5073:
 12763                           
 12764                           ; BSR set to: 0
 12765                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12766   006F34  0E15               	movlw	21
 12767   006F36  0100               	movlb	0	; () banked
 12768   006F38  6F6A               	movwf	??_delayed_ms& (0+255),b
 12769   006F3A  0EC6               	movlw	198
 12770   006F3C                     u6817:
 12771   006F3C  2EE8               	decfsz	wreg,f,c
 12772   006F3E  D7FE               	bra	u6817
 12773   006F40  2F6A               	decfsz	??_delayed_ms& (0+255),f,b
 12774   006F42  D7FC               	bra	u6817
 12775   006F44  F000               	nop	
 12776   006F46                     
 12777                           ;timers.c: 42:     }
 12778   006F46  0100               	movlb	0	; () banked
 12779   006F48  4B6B               	infsnz	delayed_ms@i& (0+255),f,b
 12780   006F4A  2B6C               	incf	(delayed_ms@i+1)& (0+255),f,b
 12781   006F4C                     l740:
 12782                           
 12783                           ; BSR set to: 0
 12784   006F4C  5168               	movf	delayed_ms@time& (0+255),w,b
 12785   006F4E  5D6B               	subwf	delayed_ms@i& (0+255),w,b
 12786   006F50  5169               	movf	(delayed_ms@time+1)& (0+255),w,b
 12787   006F52  596C               	subwfb	(delayed_ms@i+1)& (0+255),w,b
 12788   006F54  A0D8               	btfss	status,0,c
 12789   006F56  EFAF  F037         	goto	u4881
 12790   006F5A  EFB1  F037         	goto	u4880
 12791   006F5E                     u4881:
 12792   006F5E  EF9A  F037         	goto	l5073
 12793   006F62                     u4880:
 12794   006F62                     
 12795                           ; BSR set to: 0
 12796   006F62  0012               	return		;funcret
 12797   006F64                     __end_of_delayed_ms:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function ___awdiv *****************
 12801 ;; Defined at:
 12802 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  dividend        2    0[BANK0 ] int 
 12805 ;;  divisor         2    2[BANK0 ] int 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  quotient        2    6[BANK0 ] int 
 12808 ;;  sign            1    5[BANK0 ] unsigned char 
 12809 ;;  counter         1    4[BANK0 ] unsigned char 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  2    0[BANK0 ] int 
 12812 ;; Registers used:
 12813 ;;		wreg, status,2, status,0
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12820 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12822 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12823 ;;Total ram usage:        8 bytes
 12824 ;; Hardware stack levels used: 1
 12825 ;; Hardware stack levels required when called: 7
 12826 ;; This function calls:
 12827 ;;		Nothing
 12828 ;; This function is called by:
 12829 ;;		_Forwardhalfblock
 12830 ;;		_Backhalfblock
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text71
 12835   0059BE                     __ptext71:
 12836                           	callstack 0
 12837   0059BE                     ___awdiv:
 12838                           	callstack 22
 12839   0059BE  0E00               	movlw	0
 12840   0059C0  0100               	movlb	0	; () banked
 12841   0059C2  6F65               	movwf	___awdiv@sign& (0+255),b
 12842   0059C4                     
 12843                           ; BSR set to: 0
 12844   0059C4  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 12845   0059C6  EFE9  F02C         	goto	u5550
 12846   0059CA  EFE7  F02C         	goto	u5551
 12847   0059CE                     u5551:
 12848   0059CE  EFEF  F02C         	goto	l5713
 12849   0059D2                     u5550:
 12850   0059D2                     
 12851                           ; BSR set to: 0
 12852   0059D2  6D62               	negf	___awdiv@divisor& (0+255),b
 12853   0059D4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12854   0059D6  B0D8               	btfsc	status,0,c
 12855   0059D8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12856   0059DA                     
 12857                           ; BSR set to: 0
 12858   0059DA  0E01               	movlw	1
 12859   0059DC  6F65               	movwf	___awdiv@sign& (0+255),b
 12860   0059DE                     l5713:
 12861                           
 12862                           ; BSR set to: 0
 12863   0059DE  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
 12864   0059E0  EFF6  F02C         	goto	u5560
 12865   0059E4  EFF4  F02C         	goto	u5561
 12866   0059E8                     u5561:
 12867   0059E8  EFFC  F02C         	goto	l5719
 12868   0059EC                     u5560:
 12869   0059EC                     
 12870                           ; BSR set to: 0
 12871   0059EC  6D60               	negf	___awdiv@dividend& (0+255),b
 12872   0059EE  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12873   0059F0  B0D8               	btfsc	status,0,c
 12874   0059F2  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12875   0059F4                     
 12876                           ; BSR set to: 0
 12877   0059F4  0E01               	movlw	1
 12878   0059F6  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 12879   0059F8                     l5719:
 12880                           
 12881                           ; BSR set to: 0
 12882   0059F8  0E00               	movlw	0
 12883   0059FA  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 12884   0059FC  0E00               	movlw	0
 12885   0059FE  6F66               	movwf	___awdiv@quotient& (0+255),b
 12886   005A00                     
 12887                           ; BSR set to: 0
 12888   005A00  5162               	movf	___awdiv@divisor& (0+255),w,b
 12889   005A02  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12890   005A04  B4D8               	btfsc	status,2,c
 12891   005A06  EF07  F02D         	goto	u5571
 12892   005A0A  EF09  F02D         	goto	u5570
 12893   005A0E                     u5571:
 12894   005A0E  EF31  F02D         	goto	l5741
 12895   005A12                     u5570:
 12896   005A12                     
 12897                           ; BSR set to: 0
 12898   005A12  0E01               	movlw	1
 12899   005A14  6F64               	movwf	___awdiv@counter& (0+255),b
 12900   005A16  EF11  F02D         	goto	l5727
 12901   005A1A                     l5725:
 12902                           
 12903                           ; BSR set to: 0
 12904   005A1A  90D8               	bcf	status,0,c
 12905   005A1C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 12906   005A1E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12907   005A20  2B64               	incf	___awdiv@counter& (0+255),f,b
 12908   005A22                     l5727:
 12909                           
 12910                           ; BSR set to: 0
 12911   005A22  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12912   005A24  EF16  F02D         	goto	u5581
 12913   005A28  EF18  F02D         	goto	u5580
 12914   005A2C                     u5581:
 12915   005A2C  EF0D  F02D         	goto	l5725
 12916   005A30                     u5580:
 12917   005A30                     l5729:
 12918                           
 12919                           ; BSR set to: 0
 12920   005A30  90D8               	bcf	status,0,c
 12921   005A32  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 12922   005A34  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12923   005A36                     
 12924                           ; BSR set to: 0
 12925   005A36  5162               	movf	___awdiv@divisor& (0+255),w,b
 12926   005A38  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 12927   005A3A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12928   005A3C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12929   005A3E  A0D8               	btfss	status,0,c
 12930   005A40  EF24  F02D         	goto	u5591
 12931   005A44  EF26  F02D         	goto	u5590
 12932   005A48                     u5591:
 12933   005A48  EF2B  F02D         	goto	l5737
 12934   005A4C                     u5590:
 12935   005A4C                     
 12936                           ; BSR set to: 0
 12937   005A4C  5162               	movf	___awdiv@divisor& (0+255),w,b
 12938   005A4E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 12939   005A50  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12940   005A52  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12941   005A54                     
 12942                           ; BSR set to: 0
 12943   005A54  8166               	bsf	___awdiv@quotient& (0+255),0,b
 12944   005A56                     l5737:
 12945                           
 12946                           ; BSR set to: 0
 12947   005A56  90D8               	bcf	status,0,c
 12948   005A58  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12949   005A5A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 12950   005A5C                     
 12951                           ; BSR set to: 0
 12952   005A5C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 12953   005A5E  EF18  F02D         	goto	l5729
 12954   005A62                     l5741:
 12955                           
 12956                           ; BSR set to: 0
 12957   005A62  5165               	movf	___awdiv@sign& (0+255),w,b
 12958   005A64  B4D8               	btfsc	status,2,c
 12959   005A66  EF37  F02D         	goto	u5601
 12960   005A6A  EF39  F02D         	goto	u5600
 12961   005A6E                     u5601:
 12962   005A6E  EF3D  F02D         	goto	l5745
 12963   005A72                     u5600:
 12964   005A72                     
 12965                           ; BSR set to: 0
 12966   005A72  6D66               	negf	___awdiv@quotient& (0+255),b
 12967   005A74  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12968   005A76  B0D8               	btfsc	status,0,c
 12969   005A78  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12970   005A7A                     l5745:
 12971                           
 12972                           ; BSR set to: 0
 12973   005A7A  C066  F060         	movff	___awdiv@quotient,?___awdiv
 12974   005A7E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 12975   005A82                     
 12976                           ; BSR set to: 0
 12977   005A82  0012               	return		;funcret
 12978   005A84                     __end_of___awdiv:
 12979                           	callstack 0
 12980                           
 12981 ;; *************** function _Colour_decider *****************
 12982 ;; Defined at:
 12983 ;;		line 125 in file "color.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  vals            2   74[BANK0 ] PTR struct RGB
 12986 ;;		 -> vals(8), 
 12987 ;;  rel             2   76[BANK0 ] PTR struct RGB_rel
 12988 ;;		 -> rel(12), 
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;  RGB_col        12   86[BANK0 ] float [3]
 12991 ;;  Hue             4  108[BANK0 ] float 
 12992 ;;  Cmin            4  102[BANK0 ] float 
 12993 ;;  Cmax            4   98[BANK0 ] float 
 12994 ;;  i               2  106[BANK0 ] int 
 12995 ;;  Cmax_i          2   84[BANK0 ] int 
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  2   74[BANK0 ] int 
 12998 ;; Registers used:
 12999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13006 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13007 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13008 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13009 ;;Total ram usage:       38 bytes
 13010 ;; Hardware stack levels used: 1
 13011 ;; Hardware stack levels required when called: 9
 13012 ;; This function calls:
 13013 ;;		___fladd
 13014 ;;		___fldiv
 13015 ;;		___fleq
 13016 ;;		___flge
 13017 ;;		___flmul
 13018 ;;		___flsub
 13019 ;;		___xxtofl
 13020 ;; This function is called by:
 13021 ;;		_main
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text72
 13026   000E38                     __ptext72:
 13027                           	callstack 0
 13028   000E38                     _Colour_decider:
 13029                           	callstack 21
 13030   000E38                     
 13031                           ;color.c: 126:     float Cmax = 0;
 13032   000E38  0E00               	movlw	0
 13033   000E3A  0100               	movlb	0	; () banked
 13034   000E3C  6FC2               	movwf	Colour_decider@Cmax& (0+255),b
 13035   000E3E  0E00               	movlw	0
 13036   000E40  6FC3               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 13037   000E42  0E00               	movlw	0
 13038   000E44  6FC4               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 13039   000E46  0E00               	movlw	0
 13040   000E48  6FC5               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 13041                           
 13042                           ;color.c: 127:     float Cmin= 100000;
 13043   000E4A  0E00               	movlw	0
 13044   000E4C  6FC6               	movwf	Colour_decider@Cmin& (0+255),b
 13045   000E4E  0E50               	movlw	80
 13046   000E50  6FC7               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 13047   000E52  0EC3               	movlw	195
 13048   000E54  6FC8               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 13049   000E56  0E47               	movlw	71
 13050   000E58  6FC9               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 13051                           
 13052                           ;color.c: 128:     int Cmax_i =4;
 13053   000E5A  0E00               	movlw	0
 13054   000E5C  6FB5               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 13055   000E5E  0E04               	movlw	4
 13056   000E60  6FB4               	movwf	Colour_decider@Cmax_i& (0+255),b
 13057   000E62                     
 13058                           ; BSR set to: 0
 13059                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 13060   000E62  EE20  F0B6         	lfsr	2,Colour_decider@RGB_col
 13061   000E66  0E0B               	movlw	11
 13062   000E68                     u5741:
 13063   000E68  6ADE               	clrf	postinc2,c
 13064   000E6A  06E8               	decf	wreg,f,c
 13065   000E6C  E2FD               	bc	u5741
 13066   000E6E                     
 13067                           ; BSR set to: 0
 13068   000E6E  C0AA  FFD9         	movff	Colour_decider@vals,fsr2l
 13069   000E72  C0AB  FFDA         	movff	Colour_decider@vals+1,fsr2h
 13070   000E76  CFDE F060          	movff	postinc2,___xxtofl@val
 13071   000E7A  CFDD F061          	movff	postdec2,___xxtofl@val+1
 13072   000E7E  0E00               	movlw	0
 13073   000E80  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 13074   000E82  0EFF               	movlw	-1
 13075   000E84  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 13076   000E86  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 13077   000E88  0E01               	movlw	1
 13078   000E8A  ECF8  F023         	call	___xxtofl
 13079   000E8E  C060  F0B6         	movff	?___xxtofl,Colour_decider@RGB_col
 13080   000E92  C061  F0B7         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 13081   000E96  C062  F0B8         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 13082   000E9A  C063  F0B9         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 13083   000E9E  0100               	movlb	0	; () banked
 13084   000EA0  EE20 F002          	lfsr	2,2
 13085   000EA4  51AA               	movf	Colour_decider@vals& (0+255),w,b
 13086   000EA6  26D9               	addwf	fsr2l,f,c
 13087   000EA8  51AB               	movf	(Colour_decider@vals+1)& (0+255),w,b
 13088   000EAA  22DA               	addwfc	fsr2h,f,c
 13089   000EAC  CFDE F060          	movff	postinc2,___xxtofl@val
 13090   000EB0  CFDD F061          	movff	postdec2,___xxtofl@val+1
 13091   000EB4  0E00               	movlw	0
 13092   000EB6  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 13093   000EB8  0EFF               	movlw	-1
 13094   000EBA  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 13095   000EBC  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 13096   000EBE  0E01               	movlw	1
 13097   000EC0  ECF8  F023         	call	___xxtofl
 13098   000EC4  C060  F0BA         	movff	?___xxtofl,Colour_decider@RGB_col+4
 13099   000EC8  C061  F0BB         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 13100   000ECC  C062  F0BC         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 13101   000ED0  C063  F0BD         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 13102   000ED4  0100               	movlb	0	; () banked
 13103   000ED6  EE20 F004          	lfsr	2,4
 13104   000EDA  51AA               	movf	Colour_decider@vals& (0+255),w,b
 13105   000EDC  26D9               	addwf	fsr2l,f,c
 13106   000EDE  51AB               	movf	(Colour_decider@vals+1)& (0+255),w,b
 13107   000EE0  22DA               	addwfc	fsr2h,f,c
 13108   000EE2  CFDE F060          	movff	postinc2,___xxtofl@val
 13109   000EE6  CFDD F061          	movff	postdec2,___xxtofl@val+1
 13110   000EEA  0E00               	movlw	0
 13111   000EEC  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 13112   000EEE  0EFF               	movlw	-1
 13113   000EF0  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 13114   000EF2  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 13115   000EF4  0E01               	movlw	1
 13116   000EF6  ECF8  F023         	call	___xxtofl
 13117   000EFA  C060  F0BE         	movff	?___xxtofl,Colour_decider@RGB_col+8
 13118   000EFE  C061  F0BF         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 13119   000F02  C062  F0C0         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 13120   000F06  C063  F0C1         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 13121   000F0A                     
 13122                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 13123   000F0A  0E00               	movlw	0
 13124   000F0C  0100               	movlb	0	; () banked
 13125   000F0E  6FCB               	movwf	(Colour_decider@i+1)& (0+255),b
 13126   000F10  0E00               	movlw	0
 13127   000F12  6FCA               	movwf	Colour_decider@i& (0+255),b
 13128   000F14                     l5899:
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 13132   000F14  C0C2  F089         	movff	Colour_decider@Cmax,___flge@ff1
 13133   000F18  C0C3  F08A         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 13134   000F1C  C0C4  F08B         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 13135   000F20  C0C5  F08C         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 13136   000F24  0EB6               	movlw	low Colour_decider@RGB_col
 13137   000F26  6FAE               	movwf	??_Colour_decider& (0+255),b
 13138   000F28  0E00               	movlw	high Colour_decider@RGB_col
 13139   000F2A  6FAF               	movwf	(??_Colour_decider+1)& (0+255),b
 13140   000F2C  90D8               	bcf	status,0,c
 13141   000F2E  35CA               	rlcf	Colour_decider@i& (0+255),w,b
 13142   000F30  6ED9               	movwf	fsr2l,c
 13143   000F32  35CB               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 13144   000F34  6EDA               	movwf	fsr2h,c
 13145   000F36  90D8               	bcf	status,0,c
 13146   000F38  36D9               	rlcf	fsr2l,f,c
 13147   000F3A  36DA               	rlcf	fsr2h,f,c
 13148   000F3C  51AE               	movf	??_Colour_decider& (0+255),w,b
 13149   000F3E  26D9               	addwf	fsr2l,f,c
 13150   000F40  51AF               	movf	(??_Colour_decider+1)& (0+255),w,b
 13151   000F42  22DA               	addwfc	fsr2h,f,c
 13152   000F44  CFDE F08D          	movff	postinc2,___flge@ff2
 13153   000F48  CFDE F08E          	movff	postinc2,___flge@ff2+1
 13154   000F4C  CFDE F08F          	movff	postinc2,___flge@ff2+2
 13155   000F50  CFDE F090          	movff	postinc2,___flge@ff2+3
 13156   000F54  EC41  F028         	call	___flge	;wreg free
 13157   000F58  0100               	movlb	0	; () banked
 13158   000F5A  B0D8               	btfsc	status,0,c
 13159   000F5C  EFB2  F007         	goto	u5751
 13160   000F60  EFB4  F007         	goto	u5750
 13161   000F64                     u5751:
 13162   000F64  EFD0  F007         	goto	l5905
 13163   000F68                     u5750:
 13164   000F68                     
 13165                           ; BSR set to: 0
 13166                           ;color.c: 137:             Cmax=RGB_col[i];
 13167   000F68  0EB6               	movlw	low Colour_decider@RGB_col
 13168   000F6A  6FAE               	movwf	??_Colour_decider& (0+255),b
 13169   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 13170   000F6E  6FAF               	movwf	(??_Colour_decider+1)& (0+255),b
 13171   000F70  90D8               	bcf	status,0,c
 13172   000F72  35CA               	rlcf	Colour_decider@i& (0+255),w,b
 13173   000F74  6ED9               	movwf	fsr2l,c
 13174   000F76  35CB               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 13175   000F78  6EDA               	movwf	fsr2h,c
 13176   000F7A  90D8               	bcf	status,0,c
 13177   000F7C  36D9               	rlcf	fsr2l,f,c
 13178   000F7E  36DA               	rlcf	fsr2h,f,c
 13179   000F80  51AE               	movf	??_Colour_decider& (0+255),w,b
 13180   000F82  26D9               	addwf	fsr2l,f,c
 13181   000F84  51AF               	movf	(??_Colour_decider+1)& (0+255),w,b
 13182   000F86  22DA               	addwfc	fsr2h,f,c
 13183   000F88  CFDE F0C2          	movff	postinc2,Colour_decider@Cmax
 13184   000F8C  CFDE F0C3          	movff	postinc2,Colour_decider@Cmax+1
 13185   000F90  CFDE F0C4          	movff	postinc2,Colour_decider@Cmax+2
 13186   000F94  CFDE F0C5          	movff	postinc2,Colour_decider@Cmax+3
 13187   000F98                     
 13188                           ; BSR set to: 0
 13189                           ;color.c: 138:             Cmax_i=i;
 13190   000F98  C0CA  F0B4         	movff	Colour_decider@i,Colour_decider@Cmax_i
 13191   000F9C  C0CB  F0B5         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 13192   000FA0                     l5905:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 13196   000FA0  0EB6               	movlw	low Colour_decider@RGB_col
 13197   000FA2  6FAE               	movwf	??_Colour_decider& (0+255),b
 13198   000FA4  0E00               	movlw	high Colour_decider@RGB_col
 13199   000FA6  6FAF               	movwf	(??_Colour_decider+1)& (0+255),b
 13200   000FA8  90D8               	bcf	status,0,c
 13201   000FAA  35CA               	rlcf	Colour_decider@i& (0+255),w,b
 13202   000FAC  6ED9               	movwf	fsr2l,c
 13203   000FAE  35CB               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 13204   000FB0  6EDA               	movwf	fsr2h,c
 13205   000FB2  90D8               	bcf	status,0,c
 13206   000FB4  36D9               	rlcf	fsr2l,f,c
 13207   000FB6  36DA               	rlcf	fsr2h,f,c
 13208   000FB8  51AE               	movf	??_Colour_decider& (0+255),w,b
 13209   000FBA  26D9               	addwf	fsr2l,f,c
 13210   000FBC  51AF               	movf	(??_Colour_decider+1)& (0+255),w,b
 13211   000FBE  22DA               	addwfc	fsr2h,f,c
 13212   000FC0  CFDE F089          	movff	postinc2,___flge@ff1
 13213   000FC4  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13214   000FC8  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13215   000FCC  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13216   000FD0  C0C6  F08D         	movff	Colour_decider@Cmin,___flge@ff2
 13217   000FD4  C0C7  F08E         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 13218   000FD8  C0C8  F08F         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 13219   000FDC  C0C9  F090         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 13220   000FE0  EC41  F028         	call	___flge	;wreg free
 13221   000FE4  0100               	movlb	0	; () banked
 13222   000FE6  B0D8               	btfsc	status,0,c
 13223   000FE8  EFF8  F007         	goto	u5761
 13224   000FEC  EFFA  F007         	goto	u5760
 13225   000FF0                     u5761:
 13226   000FF0  EF12  F008         	goto	l5909
 13227   000FF4                     u5760:
 13228   000FF4                     
 13229                           ; BSR set to: 0
 13230   000FF4  0EB6               	movlw	low Colour_decider@RGB_col
 13231   000FF6  6FAE               	movwf	??_Colour_decider& (0+255),b
 13232   000FF8  0E00               	movlw	high Colour_decider@RGB_col
 13233   000FFA  6FAF               	movwf	(??_Colour_decider+1)& (0+255),b
 13234   000FFC  90D8               	bcf	status,0,c
 13235   000FFE  35CA               	rlcf	Colour_decider@i& (0+255),w,b
 13236   001000  6ED9               	movwf	fsr2l,c
 13237   001002  35CB               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 13238   001004  6EDA               	movwf	fsr2h,c
 13239   001006  90D8               	bcf	status,0,c
 13240   001008  36D9               	rlcf	fsr2l,f,c
 13241   00100A  36DA               	rlcf	fsr2h,f,c
 13242   00100C  51AE               	movf	??_Colour_decider& (0+255),w,b
 13243   00100E  26D9               	addwf	fsr2l,f,c
 13244   001010  51AF               	movf	(??_Colour_decider+1)& (0+255),w,b
 13245   001012  22DA               	addwfc	fsr2h,f,c
 13246   001014  CFDE F0C6          	movff	postinc2,Colour_decider@Cmin
 13247   001018  CFDE F0C7          	movff	postinc2,Colour_decider@Cmin+1
 13248   00101C  CFDE F0C8          	movff	postinc2,Colour_decider@Cmin+2
 13249   001020  CFDE F0C9          	movff	postinc2,Colour_decider@Cmin+3
 13250   001024                     l5909:
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;color.c: 141:     }
 13254   001024  4BCA               	infsnz	Colour_decider@i& (0+255),f,b
 13255   001026  2BCB               	incf	(Colour_decider@i+1)& (0+255),f,b
 13256   001028                     
 13257                           ; BSR set to: 0
 13258   001028  BFCB               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 13259   00102A  EF20  F008         	goto	u5771
 13260   00102E  51CB               	movf	(Colour_decider@i+1)& (0+255),w,b
 13261   001030  E109               	bnz	u5770
 13262   001032  0E03               	movlw	3
 13263   001034  5DCA               	subwf	Colour_decider@i& (0+255),w,b
 13264   001036  A0D8               	btfss	status,0,c
 13265   001038  EF20  F008         	goto	u5771
 13266   00103C  EF22  F008         	goto	u5770
 13267   001040                     u5771:
 13268   001040  EF8A  F007         	goto	l5899
 13269   001044                     u5770:
 13270   001044                     
 13271                           ; BSR set to: 0
 13272                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 13273   001044  C0C6  F08D         	movff	Colour_decider@Cmin,___flsub@a
 13274   001048  C0C7  F08E         	movff	Colour_decider@Cmin+1,___flsub@a+1
 13275   00104C  C0C8  F08F         	movff	Colour_decider@Cmin+2,___flsub@a+2
 13276   001050  C0C9  F090         	movff	Colour_decider@Cmin+3,___flsub@a+3
 13277   001054  C0C2  F089         	movff	Colour_decider@Cmax,___flsub@b
 13278   001058  C0C3  F08A         	movff	Colour_decider@Cmax+1,___flsub@b+1
 13279   00105C  C0C4  F08B         	movff	Colour_decider@Cmax+2,___flsub@b+2
 13280   001060  C0C5  F08C         	movff	Colour_decider@Cmax+3,___flsub@b+3
 13281   001064  ECE7  F036         	call	___flsub	;wreg free
 13282   001068  C089  F091         	movff	?___flsub,___fleq@ff1
 13283   00106C  C08A  F092         	movff	?___flsub+1,___fleq@ff1+1
 13284   001070  C08B  F093         	movff	?___flsub+2,___fleq@ff1+2
 13285   001074  C08C  F094         	movff	?___flsub+3,___fleq@ff1+3
 13286   001078  0E00               	movlw	0
 13287   00107A  0100               	movlb	0	; () banked
 13288   00107C  6F95               	movwf	___fleq@ff2& (0+255),b
 13289   00107E  0E00               	movlw	0
 13290   001080  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 13291   001082  0E00               	movlw	0
 13292   001084  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 13293   001086  0E00               	movlw	0
 13294   001088  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 13295   00108A  EC84  F02F         	call	___fleq	;wreg free
 13296   00108E  0100               	movlb	0	; () banked
 13297   001090  A0D8               	btfss	status,0,c
 13298   001092  EF4D  F008         	goto	u5781
 13299   001096  EF4F  F008         	goto	u5780
 13300   00109A                     u5781:
 13301   00109A  EF55  F008         	goto	l5919
 13302   00109E                     u5780:
 13303   00109E                     l5915:
 13304                           
 13305                           ; BSR set to: 0
 13306   00109E  0E00               	movlw	0
 13307   0010A0  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13308   0010A2  0E00               	movlw	0
 13309   0010A4  6FAA               	movwf	?_Colour_decider& (0+255),b
 13310   0010A6  EFA9  F00C         	goto	l76
 13311   0010AA                     l5919:
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;color.c: 146:     if (Cmax_i==0){
 13315   0010AA  51B4               	movf	Colour_decider@Cmax_i& (0+255),w,b
 13316   0010AC  11B5               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 13317   0010AE  A4D8               	btfss	status,2,c
 13318   0010B0  EF5C  F008         	goto	u5791
 13319   0010B4  EF5E  F008         	goto	u5790
 13320   0010B8                     u5791:
 13321   0010B8  EFD3  F008         	goto	l5927
 13322   0010BC                     u5790:
 13323   0010BC                     
 13324                           ; BSR set to: 0
 13325                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 13326   0010BC  C0C6  F08D         	movff	Colour_decider@Cmin,___flsub@a
 13327   0010C0  C0C7  F08E         	movff	Colour_decider@Cmin+1,___flsub@a+1
 13328   0010C4  C0C8  F08F         	movff	Colour_decider@Cmin+2,___flsub@a+2
 13329   0010C8  C0C9  F090         	movff	Colour_decider@Cmin+3,___flsub@a+3
 13330   0010CC  C0C2  F089         	movff	Colour_decider@Cmax,___flsub@b
 13331   0010D0  C0C3  F08A         	movff	Colour_decider@Cmax+1,___flsub@b+1
 13332   0010D4  C0C4  F08B         	movff	Colour_decider@Cmax+2,___flsub@b+2
 13333   0010D8  C0C5  F08C         	movff	Colour_decider@Cmax+3,___flsub@b+3
 13334   0010DC  ECE7  F036         	call	___flsub	;wreg free
 13335   0010E0  C089  F095         	movff	?___flsub,___fldiv@a
 13336   0010E4  C08A  F096         	movff	?___flsub+1,___fldiv@a+1
 13337   0010E8  C08B  F097         	movff	?___flsub+2,___fldiv@a+2
 13338   0010EC  C08C  F098         	movff	?___flsub+3,___fldiv@a+3
 13339   0010F0  C0BE  F08D         	movff	Colour_decider@RGB_col+8,___flsub@a
 13340   0010F4  C0BF  F08E         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 13341   0010F8  C0C0  F08F         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 13342   0010FC  C0C1  F090         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 13343   001100  C0BA  F089         	movff	Colour_decider@RGB_col+4,___flsub@b
 13344   001104  C0BB  F08A         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 13345   001108  C0BC  F08B         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 13346   00110C  C0BD  F08C         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 13347   001110  ECE7  F036         	call	___flsub	;wreg free
 13348   001114  C089  F091         	movff	?___flsub,___fldiv@b
 13349   001118  C08A  F092         	movff	?___flsub+1,___fldiv@b+1
 13350   00111C  C08B  F093         	movff	?___flsub+2,___fldiv@b+2
 13351   001120  C08C  F094         	movff	?___flsub+3,___fldiv@b+3
 13352   001124  ECC8  F018         	call	___fldiv	;wreg free
 13353   001128  C091  F070         	movff	?___fldiv,___flmul@b
 13354   00112C  C092  F071         	movff	?___fldiv+1,___flmul@b+1
 13355   001130  C093  F072         	movff	?___fldiv+2,___flmul@b+2
 13356   001134  C094  F073         	movff	?___fldiv+3,___flmul@b+3
 13357   001138  0E00               	movlw	0
 13358   00113A  0100               	movlb	0	; () banked
 13359   00113C  6F74               	movwf	___flmul@a& (0+255),b
 13360   00113E  0E00               	movlw	0
 13361   001140  6F75               	movwf	(___flmul@a+1)& (0+255),b
 13362   001142  0E70               	movlw	112
 13363   001144  6F76               	movwf	(___flmul@a+2)& (0+255),b
 13364   001146  0E42               	movlw	66
 13365   001148  6F77               	movwf	(___flmul@a+3)& (0+255),b
 13366   00114A  ECB2  F016         	call	___flmul	;wreg free
 13367   00114E  C070  F0CC         	movff	?___flmul,Colour_decider@Hue
 13368   001152  C071  F0CD         	movff	?___flmul+1,Colour_decider@Hue+1
 13369   001156  C072  F0CE         	movff	?___flmul+2,Colour_decider@Hue+2
 13370   00115A  C073  F0CF         	movff	?___flmul+3,Colour_decider@Hue+3
 13371   00115E                     
 13372                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 13373   00115E  0100               	movlb	0	; () banked
 13374   001160  BFCF               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 13375   001162  EFB7  F008         	goto	u5800
 13376   001166  EFB5  F008         	goto	u5801
 13377   00116A                     u5801:
 13378   00116A  EFB6  F009         	goto	l5937
 13379   00116E                     u5800:
 13380   00116E                     
 13381                           ; BSR set to: 0
 13382   00116E  C0CC  F060         	movff	Colour_decider@Hue,___fladd@b
 13383   001172  C0CD  F061         	movff	Colour_decider@Hue+1,___fladd@b+1
 13384   001176  C0CE  F062         	movff	Colour_decider@Hue+2,___fladd@b+2
 13385   00117A  C0CF  F063         	movff	Colour_decider@Hue+3,___fladd@b+3
 13386   00117E  0E00               	movlw	0
 13387   001180  6F64               	movwf	___fladd@a& (0+255),b
 13388   001182  0E00               	movlw	0
 13389   001184  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13390   001186  0EB4               	movlw	180
 13391   001188  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13392   00118A  0E43               	movlw	67
 13393   00118C  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13394   00118E  EC51  F014         	call	___fladd	;wreg free
 13395   001192  C060  F0CC         	movff	?___fladd,Colour_decider@Hue
 13396   001196  C061  F0CD         	movff	?___fladd+1,Colour_decider@Hue+1
 13397   00119A  C062  F0CE         	movff	?___fladd+2,Colour_decider@Hue+2
 13398   00119E  C063  F0CF         	movff	?___fladd+3,Colour_decider@Hue+3
 13399   0011A2  EFB6  F009         	goto	l5937
 13400   0011A6                     l5927:
 13401                           
 13402                           ; BSR set to: 0
 13403   0011A6  05B4               	decf	Colour_decider@Cmax_i& (0+255),w,b
 13404   0011A8  11B5               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 13405   0011AA  A4D8               	btfss	status,2,c
 13406   0011AC  EFDA  F008         	goto	u5811
 13407   0011B0  EFDC  F008         	goto	u5810
 13408   0011B4                     u5811:
 13409   0011B4  EF4A  F009         	goto	l5933
 13410   0011B8                     u5810:
 13411   0011B8                     
 13412                           ; BSR set to: 0
 13413                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 13414   0011B8  C0C6  F08D         	movff	Colour_decider@Cmin,___flsub@a
 13415   0011BC  C0C7  F08E         	movff	Colour_decider@Cmin+1,___flsub@a+1
 13416   0011C0  C0C8  F08F         	movff	Colour_decider@Cmin+2,___flsub@a+2
 13417   0011C4  C0C9  F090         	movff	Colour_decider@Cmin+3,___flsub@a+3
 13418   0011C8  C0C2  F089         	movff	Colour_decider@Cmax,___flsub@b
 13419   0011CC  C0C3  F08A         	movff	Colour_decider@Cmax+1,___flsub@b+1
 13420   0011D0  C0C4  F08B         	movff	Colour_decider@Cmax+2,___flsub@b+2
 13421   0011D4  C0C5  F08C         	movff	Colour_decider@Cmax+3,___flsub@b+3
 13422   0011D8  ECE7  F036         	call	___flsub	;wreg free
 13423   0011DC  C089  F095         	movff	?___flsub,___fldiv@a
 13424   0011E0  C08A  F096         	movff	?___flsub+1,___fldiv@a+1
 13425   0011E4  C08B  F097         	movff	?___flsub+2,___fldiv@a+2
 13426   0011E8  C08C  F098         	movff	?___flsub+3,___fldiv@a+3
 13427   0011EC  C0B6  F08D         	movff	Colour_decider@RGB_col,___flsub@a
 13428   0011F0  C0B7  F08E         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 13429   0011F4  C0B8  F08F         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 13430   0011F8  C0B9  F090         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 13431   0011FC  C0BE  F089         	movff	Colour_decider@RGB_col+8,___flsub@b
 13432   001200  C0BF  F08A         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 13433   001204  C0C0  F08B         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 13434   001208  C0C1  F08C         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 13435   00120C  ECE7  F036         	call	___flsub	;wreg free
 13436   001210  C089  F091         	movff	?___flsub,___fldiv@b
 13437   001214  C08A  F092         	movff	?___flsub+1,___fldiv@b+1
 13438   001218  C08B  F093         	movff	?___flsub+2,___fldiv@b+2
 13439   00121C  C08C  F094         	movff	?___flsub+3,___fldiv@b+3
 13440   001220  ECC8  F018         	call	___fldiv	;wreg free
 13441   001224  C091  F0B0         	movff	?___fldiv,_Colour_decider$3309
 13442   001228  C092  F0B1         	movff	?___fldiv+1,_Colour_decider$3309+1
 13443   00122C  C093  F0B2         	movff	?___fldiv+2,_Colour_decider$3309+2
 13444   001230  C094  F0B3         	movff	?___fldiv+3,_Colour_decider$3309+3
 13445   001234                     
 13446                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 13447   001234  0E00               	movlw	0
 13448   001236  0100               	movlb	0	; () banked
 13449   001238  6F64               	movwf	___fladd@a& (0+255),b
 13450   00123A  0E00               	movlw	0
 13451   00123C  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13452   00123E  0E00               	movlw	0
 13453   001240  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13454   001242  0E40               	movlw	64
 13455   001244  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13456   001246  C0B0  F060         	movff	_Colour_decider$3309,___fladd@b
 13457   00124A  C0B1  F061         	movff	_Colour_decider$3309+1,___fladd@b+1
 13458   00124E  C0B2  F062         	movff	_Colour_decider$3309+2,___fladd@b+2
 13459   001252  C0B3  F063         	movff	_Colour_decider$3309+3,___fladd@b+3
 13460   001256  EC51  F014         	call	___fladd	;wreg free
 13461   00125A  C060  F070         	movff	?___fladd,___flmul@b
 13462   00125E  C061  F071         	movff	?___fladd+1,___flmul@b+1
 13463   001262  C062  F072         	movff	?___fladd+2,___flmul@b+2
 13464   001266  C063  F073         	movff	?___fladd+3,___flmul@b+3
 13465   00126A  0E00               	movlw	0
 13466   00126C  0100               	movlb	0	; () banked
 13467   00126E  6F74               	movwf	___flmul@a& (0+255),b
 13468   001270  0E00               	movlw	0
 13469   001272  6F75               	movwf	(___flmul@a+1)& (0+255),b
 13470   001274  0E70               	movlw	112
 13471   001276  6F76               	movwf	(___flmul@a+2)& (0+255),b
 13472   001278  0E42               	movlw	66
 13473   00127A  6F77               	movwf	(___flmul@a+3)& (0+255),b
 13474   00127C  ECB2  F016         	call	___flmul	;wreg free
 13475   001280  C070  F0CC         	movff	?___flmul,Colour_decider@Hue
 13476   001284  C071  F0CD         	movff	?___flmul+1,Colour_decider@Hue+1
 13477   001288  C072  F0CE         	movff	?___flmul+2,Colour_decider@Hue+2
 13478   00128C  C073  F0CF         	movff	?___flmul+3,Colour_decider@Hue+3
 13479                           
 13480                           ;color.c: 155:     }
 13481   001290  EFB6  F009         	goto	l5937
 13482   001294                     l5933:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 13486   001294  C0C6  F08D         	movff	Colour_decider@Cmin,___flsub@a
 13487   001298  C0C7  F08E         	movff	Colour_decider@Cmin+1,___flsub@a+1
 13488   00129C  C0C8  F08F         	movff	Colour_decider@Cmin+2,___flsub@a+2
 13489   0012A0  C0C9  F090         	movff	Colour_decider@Cmin+3,___flsub@a+3
 13490   0012A4  C0C2  F089         	movff	Colour_decider@Cmax,___flsub@b
 13491   0012A8  C0C3  F08A         	movff	Colour_decider@Cmax+1,___flsub@b+1
 13492   0012AC  C0C4  F08B         	movff	Colour_decider@Cmax+2,___flsub@b+2
 13493   0012B0  C0C5  F08C         	movff	Colour_decider@Cmax+3,___flsub@b+3
 13494   0012B4  ECE7  F036         	call	___flsub	;wreg free
 13495   0012B8  C089  F095         	movff	?___flsub,___fldiv@a
 13496   0012BC  C08A  F096         	movff	?___flsub+1,___fldiv@a+1
 13497   0012C0  C08B  F097         	movff	?___flsub+2,___fldiv@a+2
 13498   0012C4  C08C  F098         	movff	?___flsub+3,___fldiv@a+3
 13499   0012C8  C0BA  F08D         	movff	Colour_decider@RGB_col+4,___flsub@a
 13500   0012CC  C0BB  F08E         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 13501   0012D0  C0BC  F08F         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 13502   0012D4  C0BD  F090         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 13503   0012D8  C0B6  F089         	movff	Colour_decider@RGB_col,___flsub@b
 13504   0012DC  C0B7  F08A         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 13505   0012E0  C0B8  F08B         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 13506   0012E4  C0B9  F08C         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 13507   0012E8  ECE7  F036         	call	___flsub	;wreg free
 13508   0012EC  C089  F091         	movff	?___flsub,___fldiv@b
 13509   0012F0  C08A  F092         	movff	?___flsub+1,___fldiv@b+1
 13510   0012F4  C08B  F093         	movff	?___flsub+2,___fldiv@b+2
 13511   0012F8  C08C  F094         	movff	?___flsub+3,___fldiv@b+3
 13512   0012FC  ECC8  F018         	call	___fldiv	;wreg free
 13513   001300  C091  F0B0         	movff	?___fldiv,_Colour_decider$3309
 13514   001304  C092  F0B1         	movff	?___fldiv+1,_Colour_decider$3309+1
 13515   001308  C093  F0B2         	movff	?___fldiv+2,_Colour_decider$3309+2
 13516   00130C  C094  F0B3         	movff	?___fldiv+3,_Colour_decider$3309+3
 13517   001310                     
 13518                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 13519   001310  0E00               	movlw	0
 13520   001312  0100               	movlb	0	; () banked
 13521   001314  6F64               	movwf	___fladd@a& (0+255),b
 13522   001316  0E00               	movlw	0
 13523   001318  6F65               	movwf	(___fladd@a+1)& (0+255),b
 13524   00131A  0E80               	movlw	128
 13525   00131C  6F66               	movwf	(___fladd@a+2)& (0+255),b
 13526   00131E  0E40               	movlw	64
 13527   001320  6F67               	movwf	(___fladd@a+3)& (0+255),b
 13528   001322  C0B0  F060         	movff	_Colour_decider$3309,___fladd@b
 13529   001326  C0B1  F061         	movff	_Colour_decider$3309+1,___fladd@b+1
 13530   00132A  C0B2  F062         	movff	_Colour_decider$3309+2,___fladd@b+2
 13531   00132E  C0B3  F063         	movff	_Colour_decider$3309+3,___fladd@b+3
 13532   001332  EC51  F014         	call	___fladd	;wreg free
 13533   001336  C060  F070         	movff	?___fladd,___flmul@b
 13534   00133A  C061  F071         	movff	?___fladd+1,___flmul@b+1
 13535   00133E  C062  F072         	movff	?___fladd+2,___flmul@b+2
 13536   001342  C063  F073         	movff	?___fladd+3,___flmul@b+3
 13537   001346  0E00               	movlw	0
 13538   001348  0100               	movlb	0	; () banked
 13539   00134A  6F74               	movwf	___flmul@a& (0+255),b
 13540   00134C  0E00               	movlw	0
 13541   00134E  6F75               	movwf	(___flmul@a+1)& (0+255),b
 13542   001350  0E70               	movlw	112
 13543   001352  6F76               	movwf	(___flmul@a+2)& (0+255),b
 13544   001354  0E42               	movlw	66
 13545   001356  6F77               	movwf	(___flmul@a+3)& (0+255),b
 13546   001358  ECB2  F016         	call	___flmul	;wreg free
 13547   00135C  C070  F0CC         	movff	?___flmul,Colour_decider@Hue
 13548   001360  C071  F0CD         	movff	?___flmul+1,Colour_decider@Hue+1
 13549   001364  C072  F0CE         	movff	?___flmul+2,Colour_decider@Hue+2
 13550   001368  C073  F0CF         	movff	?___flmul+3,Colour_decider@Hue+3
 13551   00136C                     l5937:
 13552                           
 13553                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 13554   00136C  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13555   001370  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13556   001374  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13557   001378  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13558   00137C  0E00               	movlw	0
 13559   00137E  0100               	movlb	0	; () banked
 13560   001380  6F8D               	movwf	___flge@ff2& (0+255),b
 13561   001382  0E00               	movlw	0
 13562   001384  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13563   001386  0EA5               	movlw	165
 13564   001388  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13565   00138A  0E43               	movlw	67
 13566   00138C  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13567   00138E  EC41  F028         	call	___flge	;wreg free
 13568   001392  0100               	movlb	0	; () banked
 13569   001394  A0D8               	btfss	status,0,c
 13570   001396  EFCF  F009         	goto	u5821
 13571   00139A  EFD1  F009         	goto	u5820
 13572   00139E                     u5821:
 13573   00139E  EFF1  F009         	goto	l5947
 13574   0013A2                     u5820:
 13575   0013A2                     
 13576                           ; BSR set to: 0
 13577   0013A2  0E00               	movlw	0
 13578   0013A4  6F89               	movwf	___flge@ff1& (0+255),b
 13579   0013A6  0E00               	movlw	0
 13580   0013A8  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13581   0013AA  0EB4               	movlw	180
 13582   0013AC  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13583   0013AE  0E43               	movlw	67
 13584   0013B0  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13585   0013B2  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 13586   0013B6  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13587   0013BA  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13588   0013BE  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13589   0013C2  EC41  F028         	call	___flge	;wreg free
 13590   0013C6  0100               	movlb	0	; () banked
 13591   0013C8  A0D8               	btfss	status,0,c
 13592   0013CA  EFE9  F009         	goto	u5831
 13593   0013CE  EFEB  F009         	goto	u5830
 13594   0013D2                     u5831:
 13595   0013D2  EFF1  F009         	goto	l5947
 13596   0013D6                     u5830:
 13597   0013D6                     
 13598                           ; BSR set to: 0
 13599                           ;color.c: 164:         return 1;
 13600   0013D6  0E00               	movlw	0
 13601   0013D8  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13602   0013DA  0E01               	movlw	1
 13603   0013DC  6FAA               	movwf	?_Colour_decider& (0+255),b
 13604   0013DE  EFA9  F00C         	goto	l76
 13605   0013E2                     l5947:
 13606                           
 13607                           ; BSR set to: 0
 13608   0013E2  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13609   0013E6  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13610   0013EA  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13611   0013EE  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13612   0013F2  0E00               	movlw	0
 13613   0013F4  6F8D               	movwf	___flge@ff2& (0+255),b
 13614   0013F6  0E00               	movlw	0
 13615   0013F8  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13616   0013FA  0EA0               	movlw	160
 13617   0013FC  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13618   0013FE  0E40               	movlw	64
 13619   001400  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13620   001402  EC41  F028         	call	___flge	;wreg free
 13621   001406  0100               	movlb	0	; () banked
 13622   001408  A0D8               	btfss	status,0,c
 13623   00140A  EF09  F00A         	goto	u5841
 13624   00140E  EF0B  F00A         	goto	u5840
 13625   001412                     u5841:
 13626   001412  EF2B  F00A         	goto	l5957
 13627   001416                     u5840:
 13628   001416                     
 13629                           ; BSR set to: 0
 13630   001416  0E00               	movlw	0
 13631   001418  6F89               	movwf	___flge@ff1& (0+255),b
 13632   00141A  0E00               	movlw	0
 13633   00141C  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13634   00141E  0E40               	movlw	64
 13635   001420  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13636   001422  0E41               	movlw	65
 13637   001424  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13638   001426  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 13639   00142A  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13640   00142E  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13641   001432  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13642   001436  EC41  F028         	call	___flge	;wreg free
 13643   00143A  0100               	movlb	0	; () banked
 13644   00143C  A0D8               	btfss	status,0,c
 13645   00143E  EF23  F00A         	goto	u5851
 13646   001442  EF25  F00A         	goto	u5850
 13647   001446                     u5851:
 13648   001446  EF2B  F00A         	goto	l5957
 13649   00144A                     u5850:
 13650   00144A                     
 13651                           ; BSR set to: 0
 13652                           ;color.c: 168:         return 2;
 13653   00144A  0E00               	movlw	0
 13654   00144C  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13655   00144E  0E02               	movlw	2
 13656   001450  6FAA               	movwf	?_Colour_decider& (0+255),b
 13657   001452  EFA9  F00C         	goto	l76
 13658   001456                     l5957:
 13659                           
 13660                           ; BSR set to: 0
 13661   001456  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13662   00145A  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13663   00145E  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13664   001462  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13665   001466  0E00               	movlw	0
 13666   001468  6F8D               	movwf	___flge@ff2& (0+255),b
 13667   00146A  0E00               	movlw	0
 13668   00146C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13669   00146E  0EA0               	movlw	160
 13670   001470  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13671   001472  0E41               	movlw	65
 13672   001474  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13673   001476  EC41  F028         	call	___flge	;wreg free
 13674   00147A  0100               	movlb	0	; () banked
 13675   00147C  A0D8               	btfss	status,0,c
 13676   00147E  EF43  F00A         	goto	u5861
 13677   001482  EF45  F00A         	goto	u5860
 13678   001486                     u5861:
 13679   001486  EFC9  F00A         	goto	l5983
 13680   00148A                     u5860:
 13681   00148A                     
 13682                           ; BSR set to: 0
 13683   00148A  0E00               	movlw	0
 13684   00148C  6F89               	movwf	___flge@ff1& (0+255),b
 13685   00148E  0E00               	movlw	0
 13686   001490  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13687   001492  0EE8               	movlw	232
 13688   001494  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13689   001496  0E41               	movlw	65
 13690   001498  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13691   00149A  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 13692   00149E  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13693   0014A2  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13694   0014A6  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13695   0014AA  EC41  F028         	call	___flge	;wreg free
 13696   0014AE  0100               	movlb	0	; () banked
 13697   0014B0  A0D8               	btfss	status,0,c
 13698   0014B2  EF5D  F00A         	goto	u5871
 13699   0014B6  EF5F  F00A         	goto	u5870
 13700   0014BA                     u5871:
 13701   0014BA  EFC9  F00A         	goto	l5983
 13702   0014BE                     u5870:
 13703   0014BE                     
 13704                           ; BSR set to: 0
 13705                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 13706   0014BE  C0AC  FFD9         	movff	Colour_decider@rel,fsr2l
 13707   0014C2  C0AD  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13708   0014C6  CFDE F089          	movff	postinc2,___flge@ff1
 13709   0014CA  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13710   0014CE  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13711   0014D2  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13712   0014D6  0ECD               	movlw	205
 13713   0014D8  6F8D               	movwf	___flge@ff2& (0+255),b
 13714   0014DA  0ECC               	movlw	204
 13715   0014DC  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13716   0014DE  0E4C               	movlw	76
 13717   0014E0  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13718   0014E2  0E3E               	movlw	62
 13719   0014E4  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13720   0014E6  EC41  F028         	call	___flge	;wreg free
 13721   0014EA  0100               	movlb	0	; () banked
 13722   0014EC  A0D8               	btfss	status,0,c
 13723   0014EE  EF7B  F00A         	goto	u5881
 13724   0014F2  EF7D  F00A         	goto	u5880
 13725   0014F6                     u5881:
 13726   0014F6  EF9D  F00A         	goto	l5971
 13727   0014FA                     u5880:
 13728   0014FA                     
 13729                           ; BSR set to: 0
 13730   0014FA  0E00               	movlw	0
 13731   0014FC  6F89               	movwf	___flge@ff1& (0+255),b
 13732   0014FE  0E00               	movlw	0
 13733   001500  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13734   001502  0E80               	movlw	128
 13735   001504  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13736   001506  0E3E               	movlw	62
 13737   001508  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13738   00150A  C0AC  FFD9         	movff	Colour_decider@rel,fsr2l
 13739   00150E  C0AD  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13740   001512  CFDE F08D          	movff	postinc2,___flge@ff2
 13741   001516  CFDE F08E          	movff	postinc2,___flge@ff2+1
 13742   00151A  CFDE F08F          	movff	postinc2,___flge@ff2+2
 13743   00151E  CFDE F090          	movff	postinc2,___flge@ff2+3
 13744   001522  EC41  F028         	call	___flge	;wreg free
 13745   001526  0100               	movlb	0	; () banked
 13746   001528  A0D8               	btfss	status,0,c
 13747   00152A  EF99  F00A         	goto	u5891
 13748   00152E  EF9B  F00A         	goto	u5890
 13749   001532                     u5891:
 13750   001532  EF9D  F00A         	goto	l5971
 13751   001536                     u5890:
 13752   001536  EF4F  F008         	goto	l5915
 13753   00153A                     l5971:
 13754                           
 13755                           ; BSR set to: 0
 13756   00153A  EE20 F008          	lfsr	2,8
 13757   00153E  51AC               	movf	Colour_decider@rel& (0+255),w,b
 13758   001540  26D9               	addwf	fsr2l,f,c
 13759   001542  51AD               	movf	(Colour_decider@rel+1)& (0+255),w,b
 13760   001544  22DA               	addwfc	fsr2h,f,c
 13761   001546  CFDE F089          	movff	postinc2,___flge@ff1
 13762   00154A  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13763   00154E  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13764   001552  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13765   001556  0E29               	movlw	41
 13766   001558  6F8D               	movwf	___flge@ff2& (0+255),b
 13767   00155A  0E5C               	movlw	92
 13768   00155C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13769   00155E  0E0F               	movlw	15
 13770   001560  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13771   001562  0E3E               	movlw	62
 13772   001564  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13773   001566  EC41  F028         	call	___flge	;wreg free
 13774   00156A  0100               	movlb	0	; () banked
 13775   00156C  A0D8               	btfss	status,0,c
 13776   00156E  EFBB  F00A         	goto	u5901
 13777   001572  EFBD  F00A         	goto	u5900
 13778   001576                     u5901:
 13779   001576  EFC3  F00A         	goto	l5979
 13780   00157A                     u5900:
 13781   00157A                     l5973:
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;color.c: 179:             return 4;
 13785   00157A  0E00               	movlw	0
 13786   00157C  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13787   00157E  0E04               	movlw	4
 13788   001580  6FAA               	movwf	?_Colour_decider& (0+255),b
 13789   001582  EFA9  F00C         	goto	l76
 13790   001586                     l5979:
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;color.c: 182:             return 3;
 13794   001586  0E00               	movlw	0
 13795   001588  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13796   00158A  0E03               	movlw	3
 13797   00158C  6FAA               	movwf	?_Colour_decider& (0+255),b
 13798   00158E  EFA9  F00C         	goto	l76
 13799   001592                     l5983:
 13800                           
 13801                           ; BSR set to: 0
 13802   001592  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13803   001596  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13804   00159A  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13805   00159E  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13806   0015A2  0E00               	movlw	0
 13807   0015A4  6F8D               	movwf	___flge@ff2& (0+255),b
 13808   0015A6  0E00               	movlw	0
 13809   0015A8  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13810   0015AA  0E34               	movlw	52
 13811   0015AC  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13812   0015AE  0E42               	movlw	66
 13813   0015B0  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13814   0015B2  EC41  F028         	call	___flge	;wreg free
 13815   0015B6  0100               	movlb	0	; () banked
 13816   0015B8  A0D8               	btfss	status,0,c
 13817   0015BA  EFE1  F00A         	goto	u5911
 13818   0015BE  EFE3  F00A         	goto	u5910
 13819   0015C2                     u5911:
 13820   0015C2  EF4B  F00B         	goto	l6007
 13821   0015C6                     u5910:
 13822   0015C6                     
 13823                           ; BSR set to: 0
 13824   0015C6  0E00               	movlw	0
 13825   0015C8  6F89               	movwf	___flge@ff1& (0+255),b
 13826   0015CA  0E00               	movlw	0
 13827   0015CC  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13828   0015CE  0EA0               	movlw	160
 13829   0015D0  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13830   0015D2  0E42               	movlw	66
 13831   0015D4  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13832   0015D6  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 13833   0015DA  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13834   0015DE  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13835   0015E2  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13836   0015E6  EC41  F028         	call	___flge	;wreg free
 13837   0015EA  0100               	movlb	0	; () banked
 13838   0015EC  A0D8               	btfss	status,0,c
 13839   0015EE  EFFB  F00A         	goto	u5921
 13840   0015F2  EFFD  F00A         	goto	u5920
 13841   0015F6                     u5921:
 13842   0015F6  EF4B  F00B         	goto	l6007
 13843   0015FA                     u5920:
 13844   0015FA                     
 13845                           ; BSR set to: 0
 13846                           ;color.c: 188:         if(0.15<=rel->B){
 13847   0015FA  EE20 F008          	lfsr	2,8
 13848   0015FE  51AC               	movf	Colour_decider@rel& (0+255),w,b
 13849   001600  26D9               	addwf	fsr2l,f,c
 13850   001602  51AD               	movf	(Colour_decider@rel+1)& (0+255),w,b
 13851   001604  22DA               	addwfc	fsr2h,f,c
 13852   001606  CFDE F089          	movff	postinc2,___flge@ff1
 13853   00160A  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13854   00160E  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13855   001612  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13856   001616  0E9A               	movlw	154
 13857   001618  6F8D               	movwf	___flge@ff2& (0+255),b
 13858   00161A  0E99               	movlw	153
 13859   00161C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13860   00161E  0E19               	movlw	25
 13861   001620  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13862   001622  0E3E               	movlw	62
 13863   001624  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13864   001626  EC41  F028         	call	___flge	;wreg free
 13865   00162A  0100               	movlb	0	; () banked
 13866   00162C  A0D8               	btfss	status,0,c
 13867   00162E  EF1B  F00B         	goto	u5931
 13868   001632  EF1D  F00B         	goto	u5930
 13869   001636                     u5931:
 13870   001636  EF1F  F00B         	goto	l5995
 13871   00163A                     u5930:
 13872   00163A  EFBD  F00A         	goto	l5973
 13873   00163E                     l5995:
 13874                           
 13875                           ; BSR set to: 0
 13876   00163E  EE20 F008          	lfsr	2,8
 13877   001642  51AC               	movf	Colour_decider@rel& (0+255),w,b
 13878   001644  26D9               	addwf	fsr2l,f,c
 13879   001646  51AD               	movf	(Colour_decider@rel+1)& (0+255),w,b
 13880   001648  22DA               	addwfc	fsr2h,f,c
 13881   00164A  CFDE F089          	movff	postinc2,___flge@ff1
 13882   00164E  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13883   001652  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13884   001656  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13885   00165A  0E8F               	movlw	143
 13886   00165C  6F8D               	movwf	___flge@ff2& (0+255),b
 13887   00165E  0EC2               	movlw	194
 13888   001660  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13889   001662  0EF5               	movlw	245
 13890   001664  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13891   001666  0E3D               	movlw	61
 13892   001668  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13893   00166A  EC41  F028         	call	___flge	;wreg free
 13894   00166E  0100               	movlb	0	; () banked
 13895   001670  A0D8               	btfss	status,0,c
 13896   001672  EF3D  F00B         	goto	u5941
 13897   001676  EF3F  F00B         	goto	u5940
 13898   00167A                     u5941:
 13899   00167A  EF45  F00B         	goto	l6003
 13900   00167E                     u5940:
 13901   00167E                     l5997:
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;color.c: 192:             return 6;
 13905   00167E  0E00               	movlw	0
 13906   001680  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13907   001682  0E06               	movlw	6
 13908   001684  6FAA               	movwf	?_Colour_decider& (0+255),b
 13909   001686  EFA9  F00C         	goto	l76
 13910   00168A                     l6003:
 13911                           
 13912                           ; BSR set to: 0
 13913                           ;color.c: 195:             return 5;
 13914   00168A  0E00               	movlw	0
 13915   00168C  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 13916   00168E  0E05               	movlw	5
 13917   001690  6FAA               	movwf	?_Colour_decider& (0+255),b
 13918   001692  EFA9  F00C         	goto	l76
 13919   001696                     l6007:
 13920                           
 13921                           ; BSR set to: 0
 13922   001696  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13923   00169A  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13924   00169E  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13925   0016A2  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13926   0016A6  0E00               	movlw	0
 13927   0016A8  6F8D               	movwf	___flge@ff2& (0+255),b
 13928   0016AA  0E00               	movlw	0
 13929   0016AC  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13930   0016AE  0EA2               	movlw	162
 13931   0016B0  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13932   0016B2  0E42               	movlw	66
 13933   0016B4  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13934   0016B6  EC41  F028         	call	___flge	;wreg free
 13935   0016BA  0100               	movlb	0	; () banked
 13936   0016BC  A0D8               	btfss	status,0,c
 13937   0016BE  EF63  F00B         	goto	u5951
 13938   0016C2  EF65  F00B         	goto	u5950
 13939   0016C6                     u5951:
 13940   0016C6  EFA1  F00B         	goto	l6023
 13941   0016CA                     u5950:
 13942   0016CA                     
 13943                           ; BSR set to: 0
 13944   0016CA  0E00               	movlw	0
 13945   0016CC  6F89               	movwf	___flge@ff1& (0+255),b
 13946   0016CE  0E00               	movlw	0
 13947   0016D0  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 13948   0016D2  0EE6               	movlw	230
 13949   0016D4  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 13950   0016D6  0E42               	movlw	66
 13951   0016D8  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 13952   0016DA  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 13953   0016DE  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13954   0016E2  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13955   0016E6  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13956   0016EA  EC41  F028         	call	___flge	;wreg free
 13957   0016EE  0100               	movlb	0	; () banked
 13958   0016F0  A0D8               	btfss	status,0,c
 13959   0016F2  EF7D  F00B         	goto	u5961
 13960   0016F6  EF7F  F00B         	goto	u5960
 13961   0016FA                     u5961:
 13962   0016FA  EFA1  F00B         	goto	l6023
 13963   0016FE                     u5960:
 13964   0016FE                     
 13965                           ; BSR set to: 0
 13966                           ;color.c: 201:         if(0.15<=rel->B){
 13967   0016FE  EE20 F008          	lfsr	2,8
 13968   001702  51AC               	movf	Colour_decider@rel& (0+255),w,b
 13969   001704  26D9               	addwf	fsr2l,f,c
 13970   001706  51AD               	movf	(Colour_decider@rel+1)& (0+255),w,b
 13971   001708  22DA               	addwfc	fsr2h,f,c
 13972   00170A  CFDE F089          	movff	postinc2,___flge@ff1
 13973   00170E  CFDE F08A          	movff	postinc2,___flge@ff1+1
 13974   001712  CFDE F08B          	movff	postinc2,___flge@ff1+2
 13975   001716  CFDE F08C          	movff	postinc2,___flge@ff1+3
 13976   00171A  0E9A               	movlw	154
 13977   00171C  6F8D               	movwf	___flge@ff2& (0+255),b
 13978   00171E  0E99               	movlw	153
 13979   001720  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 13980   001722  0E19               	movlw	25
 13981   001724  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 13982   001726  0E3E               	movlw	62
 13983   001728  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 13984   00172A  EC41  F028         	call	___flge	;wreg free
 13985   00172E  0100               	movlb	0	; () banked
 13986   001730  A0D8               	btfss	status,0,c
 13987   001732  EF9D  F00B         	goto	u5971
 13988   001736  EF9F  F00B         	goto	u5970
 13989   00173A                     u5971:
 13990   00173A  EF3F  F00B         	goto	l5997
 13991   00173E                     u5970:
 13992   00173E  EFBD  F00A         	goto	l5973
 13993   001742                     l6023:
 13994                           
 13995                           ; BSR set to: 0
 13996   001742  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 13997   001746  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13998   00174A  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13999   00174E  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 14000   001752  0E00               	movlw	0
 14001   001754  6F8D               	movwf	___flge@ff2& (0+255),b
 14002   001756  0E00               	movlw	0
 14003   001758  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 14004   00175A  0EF0               	movlw	240
 14005   00175C  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 14006   00175E  0E41               	movlw	65
 14007   001760  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 14008   001762  EC41  F028         	call	___flge	;wreg free
 14009   001766  0100               	movlb	0	; () banked
 14010   001768  A0D8               	btfss	status,0,c
 14011   00176A  EFB9  F00B         	goto	u5981
 14012   00176E  EFBB  F00B         	goto	u5980
 14013   001772                     u5981:
 14014   001772  EFD5  F00B         	goto	l6027
 14015   001776                     u5980:
 14016   001776                     
 14017                           ; BSR set to: 0
 14018   001776  0E00               	movlw	0
 14019   001778  6F89               	movwf	___flge@ff1& (0+255),b
 14020   00177A  0E00               	movlw	0
 14021   00177C  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 14022   00177E  0E68               	movlw	104
 14023   001780  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 14024   001782  0E42               	movlw	66
 14025   001784  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 14026   001786  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 14027   00178A  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 14028   00178E  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 14029   001792  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 14030   001796  EC41  F028         	call	___flge	;wreg free
 14031   00179A  0100               	movlb	0	; () banked
 14032   00179C  B0D8               	btfsc	status,0,c
 14033   00179E  EFD3  F00B         	goto	u5991
 14034   0017A2  EFD5  F00B         	goto	u5990
 14035   0017A6                     u5991:
 14036   0017A6  EFBD  F00A         	goto	l5973
 14037   0017AA                     u5990:
 14038   0017AA                     l6027:
 14039                           
 14040                           ; BSR set to: 0
 14041   0017AA  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 14042   0017AE  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 14043   0017B2  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 14044   0017B6  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 14045   0017BA  0E00               	movlw	0
 14046   0017BC  6F8D               	movwf	___flge@ff2& (0+255),b
 14047   0017BE  0E00               	movlw	0
 14048   0017C0  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 14049   0017C2  0EF0               	movlw	240
 14050   0017C4  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 14051   0017C6  0E42               	movlw	66
 14052   0017C8  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 14053   0017CA  EC41  F028         	call	___flge	;wreg free
 14054   0017CE  0100               	movlb	0	; () banked
 14055   0017D0  A0D8               	btfss	status,0,c
 14056   0017D2  EFED  F00B         	goto	u6001
 14057   0017D6  EFEF  F00B         	goto	u6000
 14058   0017DA                     u6001:
 14059   0017DA  EF0B  F00C         	goto	l6037
 14060   0017DE                     u6000:
 14061   0017DE                     
 14062                           ; BSR set to: 0
 14063   0017DE  0E00               	movlw	0
 14064   0017E0  6F89               	movwf	___flge@ff1& (0+255),b
 14065   0017E2  0E00               	movlw	0
 14066   0017E4  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 14067   0017E6  0E5C               	movlw	92
 14068   0017E8  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 14069   0017EA  0E43               	movlw	67
 14070   0017EC  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 14071   0017EE  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 14072   0017F2  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 14073   0017F6  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 14074   0017FA  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 14075   0017FE  EC41  F028         	call	___flge	;wreg free
 14076   001802  0100               	movlb	0	; () banked
 14077   001804  A0D8               	btfss	status,0,c
 14078   001806  EF07  F00C         	goto	u6011
 14079   00180A  EF09  F00C         	goto	u6010
 14080   00180E                     u6011:
 14081   00180E  EF0B  F00C         	goto	l6037
 14082   001812                     u6010:
 14083   001812  EFBD  F00A         	goto	l5973
 14084   001816                     l6037:
 14085                           
 14086                           ; BSR set to: 0
 14087   001816  C0CC  F089         	movff	Colour_decider@Hue,___flge@ff1
 14088   00181A  C0CD  F08A         	movff	Colour_decider@Hue+1,___flge@ff1+1
 14089   00181E  C0CE  F08B         	movff	Colour_decider@Hue+2,___flge@ff1+2
 14090   001822  C0CF  F08C         	movff	Colour_decider@Hue+3,___flge@ff1+3
 14091   001826  0E00               	movlw	0
 14092   001828  6F8D               	movwf	___flge@ff2& (0+255),b
 14093   00182A  0E00               	movlw	0
 14094   00182C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 14095   00182E  0E60               	movlw	96
 14096   001830  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 14097   001832  0E41               	movlw	65
 14098   001834  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 14099   001836  EC41  F028         	call	___flge	;wreg free
 14100   00183A  0100               	movlb	0	; () banked
 14101   00183C  A0D8               	btfss	status,0,c
 14102   00183E  EF23  F00C         	goto	u6021
 14103   001842  EF25  F00C         	goto	u6020
 14104   001846                     u6021:
 14105   001846  EFA5  F00C         	goto	l6063
 14106   00184A                     u6020:
 14107   00184A                     
 14108                           ; BSR set to: 0
 14109   00184A  0E00               	movlw	0
 14110   00184C  6F89               	movwf	___flge@ff1& (0+255),b
 14111   00184E  0E00               	movlw	0
 14112   001850  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 14113   001852  0E98               	movlw	152
 14114   001854  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 14115   001856  0E41               	movlw	65
 14116   001858  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 14117   00185A  C0CC  F08D         	movff	Colour_decider@Hue,___flge@ff2
 14118   00185E  C0CD  F08E         	movff	Colour_decider@Hue+1,___flge@ff2+1
 14119   001862  C0CE  F08F         	movff	Colour_decider@Hue+2,___flge@ff2+2
 14120   001866  C0CF  F090         	movff	Colour_decider@Hue+3,___flge@ff2+3
 14121   00186A  EC41  F028         	call	___flge	;wreg free
 14122   00186E  0100               	movlb	0	; () banked
 14123   001870  A0D8               	btfss	status,0,c
 14124   001872  EF3D  F00C         	goto	u6031
 14125   001876  EF3F  F00C         	goto	u6030
 14126   00187A                     u6031:
 14127   00187A  EFA5  F00C         	goto	l6063
 14128   00187E                     u6030:
 14129   00187E                     
 14130                           ; BSR set to: 0
 14131                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 14132   00187E  C0AC  FFD9         	movff	Colour_decider@rel,fsr2l
 14133   001882  C0AD  FFDA         	movff	Colour_decider@rel+1,fsr2h
 14134   001886  CFDE F089          	movff	postinc2,___flge@ff1
 14135   00188A  CFDE F08A          	movff	postinc2,___flge@ff1+1
 14136   00188E  CFDE F08B          	movff	postinc2,___flge@ff1+2
 14137   001892  CFDE F08C          	movff	postinc2,___flge@ff1+3
 14138   001896  0ECD               	movlw	205
 14139   001898  6F8D               	movwf	___flge@ff2& (0+255),b
 14140   00189A  0ECC               	movlw	204
 14141   00189C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 14142   00189E  0E4C               	movlw	76
 14143   0018A0  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 14144   0018A2  0E3E               	movlw	62
 14145   0018A4  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 14146   0018A6  EC41  F028         	call	___flge	;wreg free
 14147   0018AA  0100               	movlb	0	; () banked
 14148   0018AC  A0D8               	btfss	status,0,c
 14149   0018AE  EF5B  F00C         	goto	u6041
 14150   0018B2  EF5D  F00C         	goto	u6040
 14151   0018B6                     u6041:
 14152   0018B6  EF7D  F00C         	goto	l6051
 14153   0018BA                     u6040:
 14154   0018BA                     
 14155                           ; BSR set to: 0
 14156   0018BA  0E1F               	movlw	31
 14157   0018BC  6F89               	movwf	___flge@ff1& (0+255),b
 14158   0018BE  0E85               	movlw	133
 14159   0018C0  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 14160   0018C2  0E6B               	movlw	107
 14161   0018C4  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 14162   0018C6  0E3E               	movlw	62
 14163   0018C8  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 14164   0018CA  C0AC  FFD9         	movff	Colour_decider@rel,fsr2l
 14165   0018CE  C0AD  FFDA         	movff	Colour_decider@rel+1,fsr2h
 14166   0018D2  CFDE F08D          	movff	postinc2,___flge@ff2
 14167   0018D6  CFDE F08E          	movff	postinc2,___flge@ff2+1
 14168   0018DA  CFDE F08F          	movff	postinc2,___flge@ff2+2
 14169   0018DE  CFDE F090          	movff	postinc2,___flge@ff2+3
 14170   0018E2  EC41  F028         	call	___flge	;wreg free
 14171   0018E6  0100               	movlb	0	; () banked
 14172   0018E8  A0D8               	btfss	status,0,c
 14173   0018EA  EF79  F00C         	goto	u6051
 14174   0018EE  EF7B  F00C         	goto	u6050
 14175   0018F2                     u6051:
 14176   0018F2  EF7D  F00C         	goto	l6051
 14177   0018F6                     u6050:
 14178   0018F6  EF4F  F008         	goto	l5915
 14179   0018FA                     l6051:
 14180                           
 14181                           ; BSR set to: 0
 14182   0018FA  EE20 F008          	lfsr	2,8
 14183   0018FE  51AC               	movf	Colour_decider@rel& (0+255),w,b
 14184   001900  26D9               	addwf	fsr2l,f,c
 14185   001902  51AD               	movf	(Colour_decider@rel+1)& (0+255),w,b
 14186   001904  22DA               	addwfc	fsr2h,f,c
 14187   001906  CFDE F089          	movff	postinc2,___flge@ff1
 14188   00190A  CFDE F08A          	movff	postinc2,___flge@ff1+1
 14189   00190E  CFDE F08B          	movff	postinc2,___flge@ff1+2
 14190   001912  CFDE F08C          	movff	postinc2,___flge@ff1+3
 14191   001916  0E9A               	movlw	154
 14192   001918  6F8D               	movwf	___flge@ff2& (0+255),b
 14193   00191A  0E99               	movlw	153
 14194   00191C  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 14195   00191E  0E19               	movlw	25
 14196   001920  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 14197   001922  0E3E               	movlw	62
 14198   001924  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 14199   001926  EC41  F028         	call	___flge	;wreg free
 14200   00192A  0100               	movlb	0	; () banked
 14201   00192C  A0D8               	btfss	status,0,c
 14202   00192E  EF9B  F00C         	goto	u6061
 14203   001932  EF9D  F00C         	goto	u6060
 14204   001936                     u6061:
 14205   001936  EF9F  F00C         	goto	l6059
 14206   00193A                     u6060:
 14207   00193A  EFBD  F00A         	goto	l5973
 14208   00193E                     l6059:
 14209                           
 14210                           ; BSR set to: 0
 14211                           ;color.c: 223:             return 7;
 14212   00193E  0E00               	movlw	0
 14213   001940  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 14214   001942  0E07               	movlw	7
 14215   001944  6FAA               	movwf	?_Colour_decider& (0+255),b
 14216   001946  EFA9  F00C         	goto	l76
 14217   00194A                     l6063:
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;color.c: 227:         return 10;
 14221   00194A  0E00               	movlw	0
 14222   00194C  6FAB               	movwf	(?_Colour_decider+1)& (0+255),b
 14223   00194E  0E0A               	movlw	10
 14224   001950  6FAA               	movwf	?_Colour_decider& (0+255),b
 14225   001952                     l76:
 14226                           
 14227                           ; BSR set to: 0
 14228   001952  0012               	return		;funcret
 14229   001954                     __end_of_Colour_decider:
 14230                           	callstack 0
 14231                           
 14232 ;; *************** function ___xxtofl *****************
 14233 ;; Defined at:
 14234 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 14235 ;; Parameters:    Size  Location     Type
 14236 ;;  sign            1    wreg     unsigned char 
 14237 ;;  val             4    0[BANK0 ] long 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  sign            1    8[BANK0 ] unsigned char 
 14240 ;;  arg             4   10[BANK0 ] unsigned long 
 14241 ;;  exp             1    9[BANK0 ] unsigned char 
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  4    0[BANK0 ] unsigned char 
 14244 ;; Registers used:
 14245 ;;		wreg, status,2, status,0
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14252 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14254 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14255 ;;Total ram usage:       14 bytes
 14256 ;; Hardware stack levels used: 1
 14257 ;; Hardware stack levels required when called: 7
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_colour_rel
 14262 ;;		_Colour_decider
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266                           	psect	text73
 14267   0047F0                     __ptext73:
 14268                           	callstack 0
 14269   0047F0                     ___xxtofl:
 14270                           	callstack 22
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;incstack = 0
 14274                           ;___xxtofl@sign stored from wreg
 14275   0047F0  0100               	movlb	0	; () banked
 14276   0047F2  6F68               	movwf	___xxtofl@sign& (0+255),b
 14277   0047F4  0100               	movlb	0	; () banked
 14278   0047F6  5168               	movf	___xxtofl@sign& (0+255),w,b
 14279   0047F8  B4D8               	btfsc	status,2,c
 14280   0047FA  EF01  F024         	goto	u5611
 14281   0047FE  EF03  F024         	goto	u5610
 14282   004802                     u5611:
 14283   004802  EF25  F024         	goto	l1401
 14284   004806                     u5610:
 14285   004806                     
 14286                           ; BSR set to: 0
 14287   004806  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14288   004808  EF0A  F024         	goto	u5620
 14289   00480C  EF08  F024         	goto	u5621
 14290   004810                     u5621:
 14291   004810  EF25  F024         	goto	l1401
 14292   004814                     u5620:
 14293   004814                     
 14294                           ; BSR set to: 0
 14295   004814  C060  F064         	movff	___xxtofl@val,??___xxtofl
 14296   004818  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 14297   00481C  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 14298   004820  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 14299   004824  1F64               	comf	??___xxtofl& (0+255),f,b
 14300   004826  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 14301   004828  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 14302   00482A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 14303   00482C  2B64               	incf	??___xxtofl& (0+255),f,b
 14304   00482E  0E00               	movlw	0
 14305   004830  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 14306   004832  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 14307   004834  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 14308   004836  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 14309   00483A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 14310   00483E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 14311   004842  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 14312   004846  EF2D  F024         	goto	l5755
 14313   00484A                     l1401:
 14314                           
 14315                           ; BSR set to: 0
 14316   00484A  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 14317   00484E  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14318   004852  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14319   004856  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14320   00485A                     l5755:
 14321                           
 14322                           ; BSR set to: 0
 14323   00485A  5160               	movf	___xxtofl@val& (0+255),w,b
 14324   00485C  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 14325   00485E  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 14326   004860  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 14327   004862  A4D8               	btfss	status,2,c
 14328   004864  EF36  F024         	goto	u5631
 14329   004868  EF38  F024         	goto	u5630
 14330   00486C                     u5631:
 14331   00486C  EF42  F024         	goto	l5761
 14332   004870                     u5630:
 14333   004870                     
 14334                           ; BSR set to: 0
 14335   004870  0E00               	movlw	0
 14336   004872  6F60               	movwf	?___xxtofl& (0+255),b
 14337   004874  0E00               	movlw	0
 14338   004876  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 14339   004878  0E00               	movlw	0
 14340   00487A  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 14341   00487C  0E00               	movlw	0
 14342   00487E  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 14343   004880  EFD3  F024         	goto	l1404
 14344   004884                     l5761:
 14345                           
 14346                           ; BSR set to: 0
 14347   004884  0E96               	movlw	150
 14348   004886  6F69               	movwf	___xxtofl@exp& (0+255),b
 14349   004888  EF4C  F024         	goto	l5765
 14350   00488C                     l5763:
 14351                           
 14352                           ; BSR set to: 0
 14353   00488C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14354   00488E  90D8               	bcf	status,0,c
 14355   004890  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14356   004892  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14357   004894  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14358   004896  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14359   004898                     l5765:
 14360                           
 14361                           ; BSR set to: 0
 14362   004898  0E00               	movlw	0
 14363   00489A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14364   00489C  6F64               	movwf	??___xxtofl& (0+255),b
 14365   00489E  0E00               	movlw	0
 14366   0048A0  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14367   0048A2  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14368   0048A4  0E00               	movlw	0
 14369   0048A6  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14370   0048A8  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14371   0048AA  0EFE               	movlw	254
 14372   0048AC  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14373   0048AE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14374   0048B0  5164               	movf	??___xxtofl& (0+255),w,b
 14375   0048B2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14376   0048B4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14377   0048B6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14378   0048B8  A4D8               	btfss	status,2,c
 14379   0048BA  EF61  F024         	goto	u5641
 14380   0048BE  EF63  F024         	goto	u5640
 14381   0048C2                     u5641:
 14382   0048C2  EF46  F024         	goto	l5763
 14383   0048C6                     u5640:
 14384   0048C6  EF71  F024         	goto	l1408
 14385   0048CA                     l5767:
 14386                           
 14387                           ; BSR set to: 0
 14388   0048CA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 14389   0048CC                     
 14390                           ; BSR set to: 0
 14391   0048CC  0E01               	movlw	1
 14392   0048CE  276A               	addwf	___xxtofl@arg& (0+255),f,b
 14393   0048D0  0E00               	movlw	0
 14394   0048D2  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 14395   0048D4  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 14396   0048D6  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 14397   0048D8                     
 14398                           ; BSR set to: 0
 14399   0048D8  90D8               	bcf	status,0,c
 14400   0048DA  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 14401   0048DC  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 14402   0048DE  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 14403   0048E0  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 14404   0048E2                     l1408:
 14405                           
 14406                           ; BSR set to: 0
 14407   0048E2  0E00               	movlw	0
 14408   0048E4  156A               	andwf	___xxtofl@arg& (0+255),w,b
 14409   0048E6  6F64               	movwf	??___xxtofl& (0+255),b
 14410   0048E8  0E00               	movlw	0
 14411   0048EA  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 14412   0048EC  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 14413   0048EE  0E00               	movlw	0
 14414   0048F0  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 14415   0048F2  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 14416   0048F4  0EFF               	movlw	255
 14417   0048F6  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 14418   0048F8  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 14419   0048FA  5164               	movf	??___xxtofl& (0+255),w,b
 14420   0048FC  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 14421   0048FE  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 14422   004900  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 14423   004902  A4D8               	btfss	status,2,c
 14424   004904  EF86  F024         	goto	u5651
 14425   004908  EF88  F024         	goto	u5650
 14426   00490C                     u5651:
 14427   00490C  EF65  F024         	goto	l5767
 14428   004910                     u5650:
 14429   004910  EF90  F024         	goto	l5775
 14430   004914                     l5773:
 14431                           
 14432                           ; BSR set to: 0
 14433   004914  0769               	decf	___xxtofl@exp& (0+255),f,b
 14434   004916  90D8               	bcf	status,0,c
 14435   004918  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 14436   00491A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 14437   00491C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 14438   00491E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 14439   004920                     l5775:
 14440                           
 14441                           ; BSR set to: 0
 14442   004920  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 14443   004922  EF95  F024         	goto	u5661
 14444   004926  EF97  F024         	goto	u5660
 14445   00492A                     u5661:
 14446   00492A  EF9F  F024         	goto	l1415
 14447   00492E                     u5660:
 14448   00492E                     
 14449                           ; BSR set to: 0
 14450   00492E  0E02               	movlw	2
 14451   004930  6169               	cpfslt	___xxtofl@exp& (0+255),b
 14452   004932  EF9D  F024         	goto	u5671
 14453   004936  EF9F  F024         	goto	u5670
 14454   00493A                     u5671:
 14455   00493A  EF8A  F024         	goto	l5773
 14456   00493E                     u5670:
 14457   00493E                     l1415:
 14458                           
 14459                           ; BSR set to: 0
 14460   00493E  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 14461   004940  EFA4  F024         	goto	u5681
 14462   004944  EFA6  F024         	goto	u5680
 14463   004948                     u5681:
 14464   004948  EFA7  F024         	goto	l5781
 14465   00494C                     u5680:
 14466   00494C                     
 14467                           ; BSR set to: 0
 14468   00494C  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 14469   00494E                     l5781:
 14470                           
 14471                           ; BSR set to: 0
 14472   00494E  90D8               	bcf	status,0,c
 14473   004950  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 14474   004952                     
 14475                           ; BSR set to: 0
 14476   004952  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 14477   004956  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14478   004958  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14479   00495A  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 14480   00495C  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 14481   004960  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 14482   004962  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 14483   004964  6B64               	clrf	??___xxtofl& (0+255),b
 14484   004966  5164               	movf	??___xxtofl& (0+255),w,b
 14485   004968  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 14486   00496A  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 14487   00496C  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 14488   00496E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 14489   004970  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 14490   004972  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 14491   004974  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 14492   004976                     
 14493                           ; BSR set to: 0
 14494   004976  5168               	movf	___xxtofl@sign& (0+255),w,b
 14495   004978  B4D8               	btfsc	status,2,c
 14496   00497A  EFC1  F024         	goto	u5691
 14497   00497E  EFC3  F024         	goto	u5690
 14498   004982                     u5691:
 14499   004982  EFCB  F024         	goto	l5791
 14500   004986                     u5690:
 14501   004986                     
 14502                           ; BSR set to: 0
 14503   004986  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 14504   004988  EFCA  F024         	goto	u5700
 14505   00498C  EFC8  F024         	goto	u5701
 14506   004990                     u5701:
 14507   004990  EFCB  F024         	goto	l5791
 14508   004994                     u5700:
 14509   004994                     
 14510                           ; BSR set to: 0
 14511   004994  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 14512   004996                     l5791:
 14513                           
 14514                           ; BSR set to: 0
 14515   004996  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 14516   00499A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 14517   00499E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 14518   0049A2  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 14519   0049A6                     l1404:
 14520                           
 14521                           ; BSR set to: 0
 14522   0049A6  0012               	return		;funcret
 14523   0049A8                     __end_of___xxtofl:
 14524                           	callstack 0
 14525                           
 14526 ;; *************** function ___flsub *****************
 14527 ;; Defined at:
 14528 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 14529 ;; Parameters:    Size  Location     Type
 14530 ;;  b               4   41[BANK0 ] unsigned char 
 14531 ;;  a               4   45[BANK0 ] unsigned char 
 14532 ;; Auto vars:     Size  Location     Type
 14533 ;;		None
 14534 ;; Return value:  Size  Location     Type
 14535 ;;                  4   41[BANK0 ] unsigned char 
 14536 ;; Registers used:
 14537 ;;		wreg, status,2, status,0, cstack
 14538 ;; Tracked objects:
 14539 ;;		On entry : 0/0
 14540 ;;		On exit  : 0/0
 14541 ;;		Unchanged: 0/0
 14542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14543 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14547 ;;Total ram usage:        8 bytes
 14548 ;; Hardware stack levels used: 1
 14549 ;; Hardware stack levels required when called: 8
 14550 ;; This function calls:
 14551 ;;		___fladd
 14552 ;; This function is called by:
 14553 ;;		_Colour_decider
 14554 ;;		_efgtoa
 14555 ;; This function uses a non-reentrant model
 14556 ;;
 14557                           
 14558                           	psect	text74
 14559   006DCE                     __ptext74:
 14560                           	callstack 0
 14561   006DCE                     ___flsub:
 14562                           	callstack 18
 14563   006DCE  0E00               	movlw	0
 14564   006DD0  0100               	movlb	0	; () banked
 14565   006DD2  1B8D               	xorwf	___flsub@a& (0+255),f,b
 14566   006DD4  0E00               	movlw	0
 14567   006DD6  1B8E               	xorwf	(___flsub@a+1)& (0+255),f,b
 14568   006DD8  0E00               	movlw	0
 14569   006DDA  1B8F               	xorwf	(___flsub@a+2)& (0+255),f,b
 14570   006DDC  0E80               	movlw	128
 14571   006DDE  1B90               	xorwf	(___flsub@a+3)& (0+255),f,b
 14572   006DE0                     
 14573                           ; BSR set to: 0
 14574   006DE0  C089  F060         	movff	___flsub@b,___fladd@b
 14575   006DE4  C08A  F061         	movff	___flsub@b+1,___fladd@b+1
 14576   006DE8  C08B  F062         	movff	___flsub@b+2,___fladd@b+2
 14577   006DEC  C08C  F063         	movff	___flsub@b+3,___fladd@b+3
 14578   006DF0  C08D  F064         	movff	___flsub@a,___fladd@a
 14579   006DF4  C08E  F065         	movff	___flsub@a+1,___fladd@a+1
 14580   006DF8  C08F  F066         	movff	___flsub@a+2,___fladd@a+2
 14581   006DFC  C090  F067         	movff	___flsub@a+3,___fladd@a+3
 14582   006E00  EC51  F014         	call	___fladd	;wreg free
 14583   006E04  C060  F089         	movff	?___fladd,?___flsub
 14584   006E08  C061  F08A         	movff	?___fladd+1,?___flsub+1
 14585   006E0C  C062  F08B         	movff	?___fladd+2,?___flsub+2
 14586   006E10  C063  F08C         	movff	?___fladd+3,?___flsub+3
 14587   006E14  0012               	return		;funcret
 14588   006E16                     __end_of___flsub:
 14589                           	callstack 0
 14590                           
 14591 ;; *************** function ___fladd *****************
 14592 ;; Defined at:
 14593 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  b               4    0[BANK0 ] unsigned char 
 14596 ;;  a               4    4[BANK0 ] unsigned char 
 14597 ;; Auto vars:     Size  Location     Type
 14598 ;;  grs             1   15[BANK0 ] unsigned char 
 14599 ;;  bexp            1   14[BANK0 ] unsigned char 
 14600 ;;  aexp            1   13[BANK0 ] unsigned char 
 14601 ;;  signs           1   12[BANK0 ] unsigned char 
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  4    0[BANK0 ] unsigned char 
 14604 ;; Registers used:
 14605 ;;		wreg, status,2, status,0
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14611 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14612 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14613 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14614 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14615 ;;Total ram usage:       16 bytes
 14616 ;; Hardware stack levels used: 1
 14617 ;; Hardware stack levels required when called: 7
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_colour_rel
 14622 ;;		_Colour_decider
 14623 ;;		___flsub
 14624 ;;		_efgtoa
 14625 ;; This function uses a non-reentrant model
 14626 ;;
 14627                           
 14628                           	psect	text75
 14629   0028A2                     __ptext75:
 14630                           	callstack 0
 14631   0028A2                     ___fladd:
 14632                           	callstack 18
 14633   0028A2  0100               	movlb	0	; () banked
 14634   0028A4  5163               	movf	(___fladd@b+3)& (0+255),w,b
 14635   0028A6  0B80               	andlw	128
 14636   0028A8  6F6C               	movwf	___fladd@signs& (0+255),b
 14637   0028AA  5163               	movf	(___fladd@b+3)& (0+255),w,b
 14638   0028AC  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 14639   0028AE  6F6E               	movwf	___fladd@bexp& (0+255),b
 14640   0028B0                     
 14641                           ; BSR set to: 0
 14642   0028B0  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 14643   0028B2  EF5D  F014         	goto	u3341
 14644   0028B6  EF5F  F014         	goto	u3340
 14645   0028BA                     u3341:
 14646   0028BA  EF60  F014         	goto	l4193
 14647   0028BE                     u3340:
 14648   0028BE                     
 14649                           ; BSR set to: 0
 14650   0028BE  816E               	bsf	___fladd@bexp& (0+255),0,b
 14651   0028C0                     l4193:
 14652                           
 14653                           ; BSR set to: 0
 14654   0028C0  516E               	movf	___fladd@bexp& (0+255),w,b
 14655   0028C2  B4D8               	btfsc	status,2,c
 14656   0028C4  EF66  F014         	goto	u3351
 14657   0028C8  EF68  F014         	goto	u3350
 14658   0028CC                     u3351:
 14659   0028CC  EF7D  F014         	goto	l4203
 14660   0028D0                     u3350:
 14661   0028D0                     
 14662                           ; BSR set to: 0
 14663   0028D0  296E               	incf	___fladd@bexp& (0+255),w,b
 14664   0028D2  A4D8               	btfss	status,2,c
 14665   0028D4  EF6E  F014         	goto	u3361
 14666   0028D8  EF70  F014         	goto	u3360
 14667   0028DC                     u3361:
 14668   0028DC  EF78  F014         	goto	l4199
 14669   0028E0                     u3360:
 14670   0028E0                     
 14671                           ; BSR set to: 0
 14672   0028E0  0E00               	movlw	0
 14673   0028E2  6F60               	movwf	___fladd@b& (0+255),b
 14674   0028E4  0E00               	movlw	0
 14675   0028E6  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14676   0028E8  0E00               	movlw	0
 14677   0028EA  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14678   0028EC  0E00               	movlw	0
 14679   0028EE  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14680   0028F0                     l4199:
 14681                           
 14682                           ; BSR set to: 0
 14683   0028F0  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 14684   0028F2                     
 14685                           ; BSR set to: 0
 14686   0028F2  0E00               	movlw	0
 14687   0028F4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14688   0028F6  EF85  F014         	goto	l4205
 14689   0028FA                     l4203:
 14690                           
 14691                           ; BSR set to: 0
 14692   0028FA  0E00               	movlw	0
 14693   0028FC  6F60               	movwf	___fladd@b& (0+255),b
 14694   0028FE  0E00               	movlw	0
 14695   002900  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14696   002902  0E00               	movlw	0
 14697   002904  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14698   002906  0E00               	movlw	0
 14699   002908  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14700   00290A                     l4205:
 14701                           
 14702                           ; BSR set to: 0
 14703   00290A  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14704   00290C  0B80               	andlw	128
 14705   00290E  6F6D               	movwf	___fladd@aexp& (0+255),b
 14706   002910                     
 14707                           ; BSR set to: 0
 14708   002910  516C               	movf	___fladd@signs& (0+255),w,b
 14709   002912  196D               	xorwf	___fladd@aexp& (0+255),w,b
 14710   002914  B4D8               	btfsc	status,2,c
 14711   002916  EF8F  F014         	goto	u3371
 14712   00291A  EF91  F014         	goto	u3370
 14713   00291E                     u3371:
 14714   00291E  EF92  F014         	goto	l4211
 14715   002922                     u3370:
 14716   002922                     
 14717                           ; BSR set to: 0
 14718   002922  8D6C               	bsf	___fladd@signs& (0+255),6,b
 14719   002924                     l4211:
 14720                           
 14721                           ; BSR set to: 0
 14722   002924  5167               	movf	(___fladd@a+3)& (0+255),w,b
 14723   002926  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 14724   002928  6F6D               	movwf	___fladd@aexp& (0+255),b
 14725   00292A                     
 14726                           ; BSR set to: 0
 14727   00292A  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 14728   00292C  EF9A  F014         	goto	u3381
 14729   002930  EF9C  F014         	goto	u3380
 14730   002934                     u3381:
 14731   002934  EF9D  F014         	goto	l4217
 14732   002938                     u3380:
 14733   002938                     
 14734                           ; BSR set to: 0
 14735   002938  816D               	bsf	___fladd@aexp& (0+255),0,b
 14736   00293A                     l4217:
 14737                           
 14738                           ; BSR set to: 0
 14739   00293A  516D               	movf	___fladd@aexp& (0+255),w,b
 14740   00293C  B4D8               	btfsc	status,2,c
 14741   00293E  EFA3  F014         	goto	u3391
 14742   002942  EFA5  F014         	goto	u3390
 14743   002946                     u3391:
 14744   002946  EFBA  F014         	goto	l4227
 14745   00294A                     u3390:
 14746   00294A                     
 14747                           ; BSR set to: 0
 14748   00294A  296D               	incf	___fladd@aexp& (0+255),w,b
 14749   00294C  A4D8               	btfss	status,2,c
 14750   00294E  EFAB  F014         	goto	u3401
 14751   002952  EFAD  F014         	goto	u3400
 14752   002956                     u3401:
 14753   002956  EFB5  F014         	goto	l4223
 14754   00295A                     u3400:
 14755   00295A                     
 14756                           ; BSR set to: 0
 14757   00295A  0E00               	movlw	0
 14758   00295C  6F64               	movwf	___fladd@a& (0+255),b
 14759   00295E  0E00               	movlw	0
 14760   002960  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14761   002962  0E00               	movlw	0
 14762   002964  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14763   002966  0E00               	movlw	0
 14764   002968  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14765   00296A                     l4223:
 14766                           
 14767                           ; BSR set to: 0
 14768   00296A  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 14769   00296C                     
 14770                           ; BSR set to: 0
 14771   00296C  0E00               	movlw	0
 14772   00296E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14773   002970  EFC2  F014         	goto	l4229
 14774   002974                     l4227:
 14775                           
 14776                           ; BSR set to: 0
 14777   002974  0E00               	movlw	0
 14778   002976  6F64               	movwf	___fladd@a& (0+255),b
 14779   002978  0E00               	movlw	0
 14780   00297A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 14781   00297C  0E00               	movlw	0
 14782   00297E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 14783   002980  0E00               	movlw	0
 14784   002982  6F67               	movwf	(___fladd@a+3)& (0+255),b
 14785   002984                     l4229:
 14786                           
 14787                           ; BSR set to: 0
 14788   002984  516E               	movf	___fladd@bexp& (0+255),w,b
 14789   002986  5D6D               	subwf	___fladd@aexp& (0+255),w,b
 14790   002988  B0D8               	btfsc	status,0,c
 14791   00298A  EFC9  F014         	goto	u3411
 14792   00298E  EFCB  F014         	goto	u3410
 14793   002992                     u3411:
 14794   002992  EFF2  F014         	goto	l4265
 14795   002996                     u3410:
 14796   002996                     
 14797                           ; BSR set to: 0
 14798   002996  AD6C               	btfss	___fladd@signs& (0+255),6,b
 14799   002998  EFD0  F014         	goto	u3421
 14800   00299C  EFD2  F014         	goto	u3420
 14801   0029A0                     u3421:
 14802   0029A0  EFD4  F014         	goto	l4235
 14803   0029A4                     u3420:
 14804   0029A4                     
 14805                           ; BSR set to: 0
 14806   0029A4  0E80               	movlw	128
 14807   0029A6  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 14808   0029A8                     l4235:
 14809                           
 14810                           ; BSR set to: 0
 14811   0029A8  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
 14812   0029AC                     
 14813                           ; BSR set to: 0
 14814   0029AC  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 14815   0029B0                     
 14816                           ; BSR set to: 0
 14817   0029B0  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
 14818   0029B4                     
 14819                           ; BSR set to: 0
 14820   0029B4  C060  F06F         	movff	___fladd@b,___fladd@grs
 14821   0029B8                     
 14822                           ; BSR set to: 0
 14823   0029B8  C064  F060         	movff	___fladd@a,___fladd@b
 14824   0029BC                     
 14825                           ; BSR set to: 0
 14826   0029BC  C06F  F064         	movff	___fladd@grs,___fladd@a
 14827   0029C0                     
 14828                           ; BSR set to: 0
 14829   0029C0  C061  F06F         	movff	___fladd@b+1,___fladd@grs
 14830   0029C4                     
 14831                           ; BSR set to: 0
 14832   0029C4  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 14833   0029C8                     
 14834                           ; BSR set to: 0
 14835   0029C8  C06F  F065         	movff	___fladd@grs,___fladd@a+1
 14836   0029CC                     
 14837                           ; BSR set to: 0
 14838   0029CC  C062  F06F         	movff	___fladd@b+2,___fladd@grs
 14839   0029D0                     
 14840                           ; BSR set to: 0
 14841   0029D0  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 14842   0029D4                     
 14843                           ; BSR set to: 0
 14844   0029D4  C06F  F066         	movff	___fladd@grs,___fladd@a+2
 14845   0029D8                     
 14846                           ; BSR set to: 0
 14847   0029D8  C063  F06F         	movff	___fladd@b+3,___fladd@grs
 14848   0029DC                     
 14849                           ; BSR set to: 0
 14850   0029DC  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 14851   0029E0                     
 14852                           ; BSR set to: 0
 14853   0029E0  C06F  F067         	movff	___fladd@grs,___fladd@a+3
 14854   0029E4                     l4265:
 14855                           
 14856                           ; BSR set to: 0
 14857   0029E4  0E00               	movlw	0
 14858   0029E6  6F6F               	movwf	___fladd@grs& (0+255),b
 14859   0029E8                     
 14860                           ; BSR set to: 0
 14861   0029E8  516E               	movf	___fladd@bexp& (0+255),w,b
 14862   0029EA  C06D  F068         	movff	___fladd@aexp,??___fladd
 14863   0029EE  6B69               	clrf	(??___fladd+1)& (0+255),b
 14864   0029F0  5F68               	subwf	??___fladd& (0+255),f,b
 14865   0029F2  0E00               	movlw	0
 14866   0029F4  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
 14867   0029F6  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
 14868   0029F8  EF07  F015         	goto	u3431
 14869   0029FC  5169               	movf	(??___fladd+1)& (0+255),w,b
 14870   0029FE  E109               	bnz	u3430
 14871   002A00  0E1A               	movlw	26
 14872   002A02  5D68               	subwf	??___fladd& (0+255),w,b
 14873   002A04  A0D8               	btfss	status,0,c
 14874   002A06  EF07  F015         	goto	u3431
 14875   002A0A  EF09  F015         	goto	u3430
 14876   002A0E                     u3431:
 14877   002A0E  EF40  F015         	goto	l1275
 14878   002A12                     u3430:
 14879   002A12                     
 14880                           ; BSR set to: 0
 14881   002A12  5160               	movf	___fladd@b& (0+255),w,b
 14882   002A14  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 14883   002A16  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 14884   002A18  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 14885   002A1A  A4D8               	btfss	status,2,c
 14886   002A1C  EF12  F015         	goto	u3441
 14887   002A20  EF15  F015         	goto	u3440
 14888   002A24                     u3441:
 14889   002A24  0E01               	movlw	1
 14890   002A26  EF16  F015         	goto	u3450
 14891   002A2A                     u3440:
 14892   002A2A  0E00               	movlw	0
 14893   002A2C                     u3450:
 14894   002A2C  6F6F               	movwf	___fladd@grs& (0+255),b
 14895   002A2E                     
 14896                           ; BSR set to: 0
 14897   002A2E  0E00               	movlw	0
 14898   002A30  6F60               	movwf	___fladd@b& (0+255),b
 14899   002A32  0E00               	movlw	0
 14900   002A34  6F61               	movwf	(___fladd@b+1)& (0+255),b
 14901   002A36  0E00               	movlw	0
 14902   002A38  6F62               	movwf	(___fladd@b+2)& (0+255),b
 14903   002A3A  0E00               	movlw	0
 14904   002A3C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 14905   002A3E                     
 14906                           ; BSR set to: 0
 14907   002A3E  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
 14908   002A42  EF49  F015         	goto	l1274
 14909   002A46                     l1276:
 14910                           
 14911                           ; BSR set to: 0
 14912   002A46  A16F               	btfss	___fladd@grs& (0+255),0,b
 14913   002A48  EF28  F015         	goto	u3461
 14914   002A4C  EF2A  F015         	goto	u3460
 14915   002A50                     u3461:
 14916   002A50  EF30  F015         	goto	l4277
 14917   002A54                     u3460:
 14918   002A54                     
 14919                           ; BSR set to: 0
 14920   002A54  90D8               	bcf	status,0,c
 14921   002A56  316F               	rrcf	___fladd@grs& (0+255),w,b
 14922   002A58  0901               	iorlw	1
 14923   002A5A  6F6F               	movwf	___fladd@grs& (0+255),b
 14924   002A5C  EF32  F015         	goto	l4279
 14925   002A60                     l4277:
 14926                           
 14927                           ; BSR set to: 0
 14928   002A60  90D8               	bcf	status,0,c
 14929   002A62  336F               	rrcf	___fladd@grs& (0+255),f,b
 14930   002A64                     l4279:
 14931                           
 14932                           ; BSR set to: 0
 14933   002A64  A160               	btfss	___fladd@b& (0+255),0,b
 14934   002A66  EF37  F015         	goto	u3471
 14935   002A6A  EF39  F015         	goto	u3470
 14936   002A6E                     u3471:
 14937   002A6E  EF3A  F015         	goto	l4283
 14938   002A72                     u3470:
 14939   002A72                     
 14940                           ; BSR set to: 0
 14941   002A72  8F6F               	bsf	___fladd@grs& (0+255),7,b
 14942   002A74                     l4283:
 14943                           
 14944                           ; BSR set to: 0
 14945   002A74  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 14946   002A76  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 14947   002A78  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 14948   002A7A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 14949   002A7C  3360               	rrcf	___fladd@b& (0+255),f,b
 14950   002A7E                     
 14951                           ; BSR set to: 0
 14952   002A7E  2B6E               	incf	___fladd@bexp& (0+255),f,b
 14953   002A80                     l1275:
 14954                           
 14955                           ; BSR set to: 0
 14956   002A80  516D               	movf	___fladd@aexp& (0+255),w,b
 14957   002A82  5D6E               	subwf	___fladd@bexp& (0+255),w,b
 14958   002A84  A0D8               	btfss	status,0,c
 14959   002A86  EF47  F015         	goto	u3481
 14960   002A8A  EF49  F015         	goto	u3480
 14961   002A8E                     u3481:
 14962   002A8E  EF23  F015         	goto	l1276
 14963   002A92                     u3480:
 14964   002A92                     l1274:
 14965                           
 14966                           ; BSR set to: 0
 14967   002A92  BD6C               	btfsc	___fladd@signs& (0+255),6,b
 14968   002A94  EF4E  F015         	goto	u3491
 14969   002A98  EF50  F015         	goto	u3490
 14970   002A9C                     u3491:
 14971   002A9C  EF90  F015         	goto	l4311
 14972   002AA0                     u3490:
 14973   002AA0                     
 14974                           ; BSR set to: 0
 14975   002AA0  516E               	movf	___fladd@bexp& (0+255),w,b
 14976   002AA2  A4D8               	btfss	status,2,c
 14977   002AA4  EF56  F015         	goto	u3501
 14978   002AA8  EF58  F015         	goto	u3500
 14979   002AAC                     u3501:
 14980   002AAC  EF62  F015         	goto	l4293
 14981   002AB0                     u3500:
 14982   002AB0                     
 14983                           ; BSR set to: 0
 14984   002AB0  0E00               	movlw	0
 14985   002AB2  6F60               	movwf	?___fladd& (0+255),b
 14986   002AB4  0E00               	movlw	0
 14987   002AB6  6F61               	movwf	(?___fladd+1)& (0+255),b
 14988   002AB8  0E00               	movlw	0
 14989   002ABA  6F62               	movwf	(?___fladd+2)& (0+255),b
 14990   002ABC  0E00               	movlw	0
 14991   002ABE  6F63               	movwf	(?___fladd+3)& (0+255),b
 14992   002AC0  EFB1  F016         	goto	l1283
 14993   002AC4                     l4293:
 14994                           
 14995                           ; BSR set to: 0
 14996   002AC4  5164               	movf	___fladd@a& (0+255),w,b
 14997   002AC6  2760               	addwf	___fladd@b& (0+255),f,b
 14998   002AC8  5165               	movf	(___fladd@a+1)& (0+255),w,b
 14999   002ACA  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 15000   002ACC  5166               	movf	(___fladd@a+2)& (0+255),w,b
 15001   002ACE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 15002   002AD0  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15003   002AD2  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 15004   002AD4                     
 15005                           ; BSR set to: 0
 15006   002AD4  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 15007   002AD6  EF6F  F015         	goto	u3511
 15008   002ADA  EF71  F015         	goto	u3510
 15009   002ADE                     u3511:
 15010   002ADE  EF1D  F016         	goto	l4347
 15011   002AE2                     u3510:
 15012   002AE2                     
 15013                           ; BSR set to: 0
 15014   002AE2  A16F               	btfss	___fladd@grs& (0+255),0,b
 15015   002AE4  EF76  F015         	goto	u3521
 15016   002AE8  EF78  F015         	goto	u3520
 15017   002AEC                     u3521:
 15018   002AEC  EF7E  F015         	goto	l4301
 15019   002AF0                     u3520:
 15020   002AF0                     
 15021                           ; BSR set to: 0
 15022   002AF0  90D8               	bcf	status,0,c
 15023   002AF2  316F               	rrcf	___fladd@grs& (0+255),w,b
 15024   002AF4  0901               	iorlw	1
 15025   002AF6  6F6F               	movwf	___fladd@grs& (0+255),b
 15026   002AF8  EF80  F015         	goto	l4303
 15027   002AFC                     l4301:
 15028                           
 15029                           ; BSR set to: 0
 15030   002AFC  90D8               	bcf	status,0,c
 15031   002AFE  336F               	rrcf	___fladd@grs& (0+255),f,b
 15032   002B00                     l4303:
 15033                           
 15034                           ; BSR set to: 0
 15035   002B00  A160               	btfss	___fladd@b& (0+255),0,b
 15036   002B02  EF85  F015         	goto	u3531
 15037   002B06  EF87  F015         	goto	u3530
 15038   002B0A                     u3531:
 15039   002B0A  EF88  F015         	goto	l4307
 15040   002B0E                     u3530:
 15041   002B0E                     
 15042                           ; BSR set to: 0
 15043   002B0E  8F6F               	bsf	___fladd@grs& (0+255),7,b
 15044   002B10                     l4307:
 15045                           
 15046                           ; BSR set to: 0
 15047   002B10  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 15048   002B12  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 15049   002B14  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 15050   002B16  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 15051   002B18  3360               	rrcf	___fladd@b& (0+255),f,b
 15052   002B1A                     
 15053                           ; BSR set to: 0
 15054   002B1A  2B6E               	incf	___fladd@bexp& (0+255),f,b
 15055   002B1C  EF1D  F016         	goto	l4347
 15056   002B20                     l4311:
 15057                           
 15058                           ; BSR set to: 0
 15059   002B20  5164               	movf	___fladd@a& (0+255),w,b
 15060   002B22  5D60               	subwf	___fladd@b& (0+255),w,b
 15061   002B24  5165               	movf	(___fladd@a+1)& (0+255),w,b
 15062   002B26  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 15063   002B28  5166               	movf	(___fladd@a+2)& (0+255),w,b
 15064   002B2A  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 15065   002B2C  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15066   002B2E  0A80               	xorlw	128
 15067   002B30  6F68               	movwf	??___fladd& (0+255),b
 15068   002B32  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15069   002B34  0A80               	xorlw	128
 15070   002B36  5968               	subwfb	??___fladd& (0+255),w,b
 15071   002B38  B0D8               	btfsc	status,0,c
 15072   002B3A  EFA1  F015         	goto	u3541
 15073   002B3E  EFA3  F015         	goto	u3540
 15074   002B42                     u3541:
 15075   002B42  EFCE  F015         	goto	l4321
 15076   002B46                     u3540:
 15077   002B46                     
 15078                           ; BSR set to: 0
 15079   002B46  5160               	movf	___fladd@b& (0+255),w,b
 15080   002B48  5D64               	subwf	___fladd@a& (0+255),w,b
 15081   002B4A  6F68               	movwf	??___fladd& (0+255),b
 15082   002B4C  5161               	movf	(___fladd@b+1)& (0+255),w,b
 15083   002B4E  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
 15084   002B50  6F69               	movwf	(??___fladd+1)& (0+255),b
 15085   002B52  5162               	movf	(___fladd@b+2)& (0+255),w,b
 15086   002B54  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
 15087   002B56  6F6A               	movwf	(??___fladd+2)& (0+255),b
 15088   002B58  5163               	movf	(___fladd@b+3)& (0+255),w,b
 15089   002B5A  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
 15090   002B5C  6F6B               	movwf	(??___fladd+3)& (0+255),b
 15091   002B5E  0EFF               	movlw	255
 15092   002B60  2568               	addwf	??___fladd& (0+255),w,b
 15093   002B62  6F60               	movwf	___fladd@b& (0+255),b
 15094   002B64  0EFF               	movlw	255
 15095   002B66  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 15096   002B68  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15097   002B6A  0EFF               	movlw	255
 15098   002B6C  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 15099   002B6E  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15100   002B70  0EFF               	movlw	255
 15101   002B72  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 15102   002B74  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15103   002B76  0E80               	movlw	128
 15104   002B78  1B6C               	xorwf	___fladd@signs& (0+255),f,b
 15105   002B7A                     
 15106                           ; BSR set to: 0
 15107   002B7A  6D6F               	negf	___fladd@grs& (0+255),b
 15108   002B7C                     
 15109                           ; BSR set to: 0
 15110   002B7C  516F               	movf	___fladd@grs& (0+255),w,b
 15111   002B7E  A4D8               	btfss	status,2,c
 15112   002B80  EFC4  F015         	goto	u3551
 15113   002B84  EFC6  F015         	goto	u3550
 15114   002B88                     u3551:
 15115   002B88  EFD6  F015         	goto	l1291
 15116   002B8C                     u3550:
 15117   002B8C                     
 15118                           ; BSR set to: 0
 15119   002B8C  0E01               	movlw	1
 15120   002B8E  2760               	addwf	___fladd@b& (0+255),f,b
 15121   002B90  0E00               	movlw	0
 15122   002B92  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 15123   002B94  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 15124   002B96  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 15125   002B98  EFD6  F015         	goto	l1291
 15126   002B9C                     l4321:
 15127                           
 15128                           ; BSR set to: 0
 15129   002B9C  5164               	movf	___fladd@a& (0+255),w,b
 15130   002B9E  5F60               	subwf	___fladd@b& (0+255),f,b
 15131   002BA0  5165               	movf	(___fladd@a+1)& (0+255),w,b
 15132   002BA2  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 15133   002BA4  5166               	movf	(___fladd@a+2)& (0+255),w,b
 15134   002BA6  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 15135   002BA8  5167               	movf	(___fladd@a+3)& (0+255),w,b
 15136   002BAA  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 15137   002BAC                     l1291:
 15138                           
 15139                           ; BSR set to: 0
 15140   002BAC  5160               	movf	___fladd@b& (0+255),w,b
 15141   002BAE  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 15142   002BB0  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 15143   002BB2  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 15144   002BB4  A4D8               	btfss	status,2,c
 15145   002BB6  EFDF  F015         	goto	u3561
 15146   002BBA  EFE1  F015         	goto	u3560
 15147   002BBE                     u3561:
 15148   002BBE  EF16  F016         	goto	l4345
 15149   002BC2                     u3560:
 15150   002BC2                     
 15151                           ; BSR set to: 0
 15152   002BC2  516F               	movf	___fladd@grs& (0+255),w,b
 15153   002BC4  A4D8               	btfss	status,2,c
 15154   002BC6  EFE7  F015         	goto	u3571
 15155   002BCA  EFE9  F015         	goto	u3570
 15156   002BCE                     u3571:
 15157   002BCE  EF16  F016         	goto	l4345
 15158   002BD2                     u3570:
 15159   002BD2                     
 15160                           ; BSR set to: 0
 15161   002BD2  0E00               	movlw	0
 15162   002BD4  6F60               	movwf	?___fladd& (0+255),b
 15163   002BD6  0E00               	movlw	0
 15164   002BD8  6F61               	movwf	(?___fladd+1)& (0+255),b
 15165   002BDA  0E00               	movlw	0
 15166   002BDC  6F62               	movwf	(?___fladd+2)& (0+255),b
 15167   002BDE  0E00               	movlw	0
 15168   002BE0  6F63               	movwf	(?___fladd+3)& (0+255),b
 15169   002BE2  EFB1  F016         	goto	l1283
 15170   002BE6                     l4329:
 15171                           
 15172                           ; BSR set to: 0
 15173   002BE6  90D8               	bcf	status,0,c
 15174   002BE8  3760               	rlcf	___fladd@b& (0+255),f,b
 15175   002BEA  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 15176   002BEC  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 15177   002BEE  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 15178   002BF0                     
 15179                           ; BSR set to: 0
 15180   002BF0  AF6F               	btfss	___fladd@grs& (0+255),7,b
 15181   002BF2  EFFD  F015         	goto	u3581
 15182   002BF6  EFFF  F015         	goto	u3580
 15183   002BFA                     u3581:
 15184   002BFA  EF00  F016         	goto	l4335
 15185   002BFE                     u3580:
 15186   002BFE                     
 15187                           ; BSR set to: 0
 15188   002BFE  8160               	bsf	___fladd@b& (0+255),0,b
 15189   002C00                     l4335:
 15190                           
 15191                           ; BSR set to: 0
 15192   002C00  A16F               	btfss	___fladd@grs& (0+255),0,b
 15193   002C02  EF05  F016         	goto	u3591
 15194   002C06  EF07  F016         	goto	u3590
 15195   002C0A                     u3591:
 15196   002C0A  EF0B  F016         	goto	l4339
 15197   002C0E                     u3590:
 15198   002C0E                     
 15199                           ; BSR set to: 0
 15200   002C0E  80D8               	bsf	status,0,c
 15201   002C10  376F               	rlcf	___fladd@grs& (0+255),f,b
 15202   002C12  EF0D  F016         	goto	l4341
 15203   002C16                     l4339:
 15204                           
 15205                           ; BSR set to: 0
 15206   002C16  90D8               	bcf	status,0,c
 15207   002C18  376F               	rlcf	___fladd@grs& (0+255),f,b
 15208   002C1A                     l4341:
 15209                           
 15210                           ; BSR set to: 0
 15211   002C1A  516E               	movf	___fladd@bexp& (0+255),w,b
 15212   002C1C  B4D8               	btfsc	status,2,c
 15213   002C1E  EF13  F016         	goto	u3601
 15214   002C22  EF15  F016         	goto	u3600
 15215   002C26                     u3601:
 15216   002C26  EF16  F016         	goto	l4345
 15217   002C2A                     u3600:
 15218   002C2A                     
 15219                           ; BSR set to: 0
 15220   002C2A  076E               	decf	___fladd@bexp& (0+255),f,b
 15221   002C2C                     l4345:
 15222                           
 15223                           ; BSR set to: 0
 15224   002C2C  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 15225   002C2E  EF1B  F016         	goto	u3611
 15226   002C32  EF1D  F016         	goto	u3610
 15227   002C36                     u3611:
 15228   002C36  EFF3  F015         	goto	l4329
 15229   002C3A                     u3610:
 15230   002C3A                     l4347:
 15231                           
 15232                           ; BSR set to: 0
 15233   002C3A  0E00               	movlw	0
 15234   002C3C  6F6D               	movwf	___fladd@aexp& (0+255),b
 15235   002C3E                     
 15236                           ; BSR set to: 0
 15237   002C3E  AF6F               	btfss	___fladd@grs& (0+255),7,b
 15238   002C40  EF24  F016         	goto	u3621
 15239   002C44  EF26  F016         	goto	u3620
 15240   002C48                     u3621:
 15241   002C48  EF3E  F016         	goto	l1300
 15242   002C4C                     u3620:
 15243   002C4C                     
 15244                           ; BSR set to: 0
 15245   002C4C  C06F  F068         	movff	___fladd@grs,??___fladd
 15246   002C50  0E7F               	movlw	127
 15247   002C52  1768               	andwf	??___fladd& (0+255),f,b
 15248   002C54  B4D8               	btfsc	status,2,c
 15249   002C56  EF2F  F016         	goto	u3631
 15250   002C5A  EF31  F016         	goto	u3630
 15251   002C5E                     u3631:
 15252   002C5E  EF35  F016         	goto	l1301
 15253   002C62                     u3630:
 15254   002C62                     l4353:
 15255                           
 15256                           ; BSR set to: 0
 15257   002C62  0E01               	movlw	1
 15258   002C64  6F6D               	movwf	___fladd@aexp& (0+255),b
 15259   002C66  EF3E  F016         	goto	l1300
 15260   002C6A                     l1301:
 15261                           
 15262                           ; BSR set to: 0
 15263   002C6A  A160               	btfss	___fladd@b& (0+255),0,b
 15264   002C6C  EF3A  F016         	goto	u3641
 15265   002C70  EF3C  F016         	goto	u3640
 15266   002C74                     u3641:
 15267   002C74  EF3E  F016         	goto	l1300
 15268   002C78                     u3640:
 15269   002C78  EF31  F016         	goto	l4353
 15270   002C7C                     l1300:
 15271                           
 15272                           ; BSR set to: 0
 15273   002C7C  516D               	movf	___fladd@aexp& (0+255),w,b
 15274   002C7E  B4D8               	btfsc	status,2,c
 15275   002C80  EF44  F016         	goto	u3651
 15276   002C84  EF46  F016         	goto	u3650
 15277   002C88                     u3651:
 15278   002C88  EF71  F016         	goto	l4365
 15279   002C8C                     u3650:
 15280   002C8C                     
 15281                           ; BSR set to: 0
 15282   002C8C  0E01               	movlw	1
 15283   002C8E  2760               	addwf	___fladd@b& (0+255),f,b
 15284   002C90  0E00               	movlw	0
 15285   002C92  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 15286   002C94  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 15287   002C96  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 15288   002C98                     
 15289                           ; BSR set to: 0
 15290   002C98  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 15291   002C9A  EF51  F016         	goto	u3661
 15292   002C9E  EF53  F016         	goto	u3660
 15293   002CA2                     u3661:
 15294   002CA2  EF71  F016         	goto	l4365
 15295   002CA6                     u3660:
 15296   002CA6                     
 15297                           ; BSR set to: 0
 15298   002CA6  C060  F068         	movff	___fladd@b,??___fladd
 15299   002CAA  C061  F069         	movff	___fladd@b+1,??___fladd+1
 15300   002CAE  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 15301   002CB2  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 15302   002CB6  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 15303   002CB8  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 15304   002CBA  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 15305   002CBC  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 15306   002CBE  3368               	rrcf	??___fladd& (0+255),f,b
 15307   002CC0  C068  F060         	movff	??___fladd,___fladd@b
 15308   002CC4  C069  F061         	movff	??___fladd+1,___fladd@b+1
 15309   002CC8  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 15310   002CCC  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 15311   002CD0  296E               	incf	___fladd@bexp& (0+255),w,b
 15312   002CD2  B4D8               	btfsc	status,2,c
 15313   002CD4  EF6E  F016         	goto	u3671
 15314   002CD8  EF70  F016         	goto	u3670
 15315   002CDC                     u3671:
 15316   002CDC  EF71  F016         	goto	l4365
 15317   002CE0                     u3670:
 15318   002CE0                     
 15319                           ; BSR set to: 0
 15320   002CE0  2B6E               	incf	___fladd@bexp& (0+255),f,b
 15321   002CE2                     l4365:
 15322                           
 15323                           ; BSR set to: 0
 15324   002CE2  296E               	incf	___fladd@bexp& (0+255),w,b
 15325   002CE4  B4D8               	btfsc	status,2,c
 15326   002CE6  EF77  F016         	goto	u3681
 15327   002CEA  EF79  F016         	goto	u3680
 15328   002CEE                     u3681:
 15329   002CEE  EF81  F016         	goto	l4369
 15330   002CF2                     u3680:
 15331   002CF2                     
 15332                           ; BSR set to: 0
 15333   002CF2  516E               	movf	___fladd@bexp& (0+255),w,b
 15334   002CF4  A4D8               	btfss	status,2,c
 15335   002CF6  EF7F  F016         	goto	u3691
 15336   002CFA  EF81  F016         	goto	u3690
 15337   002CFE                     u3691:
 15338   002CFE  EF93  F016         	goto	l4373
 15339   002D02                     u3690:
 15340   002D02                     l4369:
 15341                           
 15342                           ; BSR set to: 0
 15343   002D02  0E00               	movlw	0
 15344   002D04  6F60               	movwf	___fladd@b& (0+255),b
 15345   002D06  0E00               	movlw	0
 15346   002D08  6F61               	movwf	(___fladd@b+1)& (0+255),b
 15347   002D0A  0E00               	movlw	0
 15348   002D0C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 15349   002D0E  0E00               	movlw	0
 15350   002D10  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15351   002D12  516E               	movf	___fladd@bexp& (0+255),w,b
 15352   002D14  A4D8               	btfss	status,2,c
 15353   002D16  EF8F  F016         	goto	u3701
 15354   002D1A  EF91  F016         	goto	u3700
 15355   002D1E                     u3701:
 15356   002D1E  EF93  F016         	goto	l4373
 15357   002D22                     u3700:
 15358   002D22                     
 15359                           ; BSR set to: 0
 15360   002D22  0E00               	movlw	0
 15361   002D24  6F6C               	movwf	___fladd@signs& (0+255),b
 15362   002D26                     l4373:
 15363                           
 15364                           ; BSR set to: 0
 15365   002D26  A16E               	btfss	___fladd@bexp& (0+255),0,b
 15366   002D28  EF98  F016         	goto	u3711
 15367   002D2C  EF9A  F016         	goto	u3710
 15368   002D30                     u3711:
 15369   002D30  EF9D  F016         	goto	l4377
 15370   002D34                     u3710:
 15371   002D34                     
 15372                           ; BSR set to: 0
 15373   002D34  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 15374   002D36  EF9E  F016         	goto	l4379
 15375   002D3A                     l4377:
 15376                           
 15377                           ; BSR set to: 0
 15378   002D3A  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 15379   002D3C                     l4379:
 15380                           
 15381                           ; BSR set to: 0
 15382   002D3C  90D8               	bcf	status,0,c
 15383   002D3E  316E               	rrcf	___fladd@bexp& (0+255),w,b
 15384   002D40  6F63               	movwf	(___fladd@b+3)& (0+255),b
 15385   002D42                     
 15386                           ; BSR set to: 0
 15387   002D42  AF6C               	btfss	___fladd@signs& (0+255),7,b
 15388   002D44  EFA6  F016         	goto	u3721
 15389   002D48  EFA8  F016         	goto	u3720
 15390   002D4C                     u3721:
 15391   002D4C  EFA9  F016         	goto	l4385
 15392   002D50                     u3720:
 15393   002D50                     
 15394                           ; BSR set to: 0
 15395   002D50  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 15396   002D52                     l4385:
 15397                           
 15398                           ; BSR set to: 0
 15399   002D52  C060  F060         	movff	___fladd@b,?___fladd
 15400   002D56  C061  F061         	movff	___fladd@b+1,?___fladd+1
 15401   002D5A  C062  F062         	movff	___fladd@b+2,?___fladd+2
 15402   002D5E  C063  F063         	movff	___fladd@b+3,?___fladd+3
 15403   002D62                     l1283:
 15404                           
 15405                           ; BSR set to: 0
 15406   002D62  0012               	return		;funcret
 15407   002D64                     __end_of___fladd:
 15408                           	callstack 0
 15409                           
 15410 ;; *************** function ___flmul *****************
 15411 ;; Defined at:
 15412 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  b               4   16[BANK0 ] unsigned char 
 15415 ;;  a               4   20[BANK0 ] unsigned char 
 15416 ;; Auto vars:     Size  Location     Type
 15417 ;;  prod            4   35[BANK0 ] struct .
 15418 ;;  grs             4   29[BANK0 ] unsigned long 
 15419 ;;  temp            2   39[BANK0 ] struct .
 15420 ;;  bexp            1   34[BANK0 ] unsigned char 
 15421 ;;  aexp            1   33[BANK0 ] unsigned char 
 15422 ;;  sign            1   28[BANK0 ] unsigned char 
 15423 ;; Return value:  Size  Location     Type
 15424 ;;                  4   16[BANK0 ] unsigned char 
 15425 ;; Registers used:
 15426 ;;		wreg, status,2, status,0, prodl, prodh
 15427 ;; Tracked objects:
 15428 ;;		On entry : 0/0
 15429 ;;		On exit  : 0/0
 15430 ;;		Unchanged: 0/0
 15431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15432 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15433 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15435 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15436 ;;Total ram usage:       25 bytes
 15437 ;; Hardware stack levels used: 1
 15438 ;; Hardware stack levels required when called: 7
 15439 ;; This function calls:
 15440 ;;		Nothing
 15441 ;; This function is called by:
 15442 ;;		_Colour_decider
 15443 ;;		_efgtoa
 15444 ;; This function uses a non-reentrant model
 15445 ;;
 15446                           
 15447                           	psect	text76
 15448   002D64                     __ptext76:
 15449                           	callstack 0
 15450   002D64                     ___flmul:
 15451                           	callstack 19
 15452   002D64  0100               	movlb	0	; () banked
 15453   002D66  5173               	movf	(___flmul@b+3)& (0+255),w,b
 15454   002D68  0B80               	andlw	128
 15455   002D6A  6F7C               	movwf	___flmul@sign& (0+255),b
 15456   002D6C  5173               	movf	(___flmul@b+3)& (0+255),w,b
 15457   002D6E  2573               	addwf	(___flmul@b+3)& (0+255),w,b
 15458   002D70  6F82               	movwf	___flmul@bexp& (0+255),b
 15459   002D72                     
 15460                           ; BSR set to: 0
 15461   002D72  AF72               	btfss	(___flmul@b+2)& (0+255),7,b
 15462   002D74  EFBE  F016         	goto	u4181
 15463   002D78  EFC0  F016         	goto	u4180
 15464   002D7C                     u4181:
 15465   002D7C  EFC1  F016         	goto	l4687
 15466   002D80                     u4180:
 15467   002D80                     
 15468                           ; BSR set to: 0
 15469   002D80  8182               	bsf	___flmul@bexp& (0+255),0,b
 15470   002D82                     l4687:
 15471                           
 15472                           ; BSR set to: 0
 15473   002D82  5182               	movf	___flmul@bexp& (0+255),w,b
 15474   002D84  B4D8               	btfsc	status,2,c
 15475   002D86  EFC7  F016         	goto	u4191
 15476   002D8A  EFC9  F016         	goto	u4190
 15477   002D8E                     u4191:
 15478   002D8E  EFDC  F016         	goto	l4695
 15479   002D92                     u4190:
 15480   002D92                     
 15481                           ; BSR set to: 0
 15482   002D92  2982               	incf	___flmul@bexp& (0+255),w,b
 15483   002D94  A4D8               	btfss	status,2,c
 15484   002D96  EFCF  F016         	goto	u4201
 15485   002D9A  EFD1  F016         	goto	u4200
 15486   002D9E                     u4201:
 15487   002D9E  EFD9  F016         	goto	l4693
 15488   002DA2                     u4200:
 15489   002DA2                     
 15490                           ; BSR set to: 0
 15491   002DA2  0E00               	movlw	0
 15492   002DA4  6F70               	movwf	___flmul@b& (0+255),b
 15493   002DA6  0E00               	movlw	0
 15494   002DA8  6F71               	movwf	(___flmul@b+1)& (0+255),b
 15495   002DAA  0E00               	movlw	0
 15496   002DAC  6F72               	movwf	(___flmul@b+2)& (0+255),b
 15497   002DAE  0E00               	movlw	0
 15498   002DB0  6F73               	movwf	(___flmul@b+3)& (0+255),b
 15499   002DB2                     l4693:
 15500                           
 15501                           ; BSR set to: 0
 15502   002DB2  8F72               	bsf	(___flmul@b+2)& (0+255),7,b
 15503   002DB4  EFE4  F016         	goto	l4697
 15504   002DB8                     l4695:
 15505                           
 15506                           ; BSR set to: 0
 15507   002DB8  0E00               	movlw	0
 15508   002DBA  6F70               	movwf	___flmul@b& (0+255),b
 15509   002DBC  0E00               	movlw	0
 15510   002DBE  6F71               	movwf	(___flmul@b+1)& (0+255),b
 15511   002DC0  0E00               	movlw	0
 15512   002DC2  6F72               	movwf	(___flmul@b+2)& (0+255),b
 15513   002DC4  0E00               	movlw	0
 15514   002DC6  6F73               	movwf	(___flmul@b+3)& (0+255),b
 15515   002DC8                     l4697:
 15516                           
 15517                           ; BSR set to: 0
 15518   002DC8  5177               	movf	(___flmul@a+3)& (0+255),w,b
 15519   002DCA  0B80               	andlw	128
 15520   002DCC  1B7C               	xorwf	___flmul@sign& (0+255),f,b
 15521   002DCE                     
 15522                           ; BSR set to: 0
 15523   002DCE  5177               	movf	(___flmul@a+3)& (0+255),w,b
 15524   002DD0  2577               	addwf	(___flmul@a+3)& (0+255),w,b
 15525   002DD2  6F81               	movwf	___flmul@aexp& (0+255),b
 15526   002DD4                     
 15527                           ; BSR set to: 0
 15528   002DD4  AF76               	btfss	(___flmul@a+2)& (0+255),7,b
 15529   002DD6  EFEF  F016         	goto	u4211
 15530   002DDA  EFF1  F016         	goto	u4210
 15531   002DDE                     u4211:
 15532   002DDE  EFF2  F016         	goto	l4705
 15533   002DE2                     u4210:
 15534   002DE2                     
 15535                           ; BSR set to: 0
 15536   002DE2  8181               	bsf	___flmul@aexp& (0+255),0,b
 15537   002DE4                     l4705:
 15538                           
 15539                           ; BSR set to: 0
 15540   002DE4  5181               	movf	___flmul@aexp& (0+255),w,b
 15541   002DE6  B4D8               	btfsc	status,2,c
 15542   002DE8  EFF8  F016         	goto	u4221
 15543   002DEC  EFFA  F016         	goto	u4220
 15544   002DF0                     u4221:
 15545   002DF0  EF0D  F017         	goto	l4713
 15546   002DF4                     u4220:
 15547   002DF4                     
 15548                           ; BSR set to: 0
 15549   002DF4  2981               	incf	___flmul@aexp& (0+255),w,b
 15550   002DF6  A4D8               	btfss	status,2,c
 15551   002DF8  EF00  F017         	goto	u4231
 15552   002DFC  EF02  F017         	goto	u4230
 15553   002E00                     u4231:
 15554   002E00  EF0A  F017         	goto	l4711
 15555   002E04                     u4230:
 15556   002E04                     
 15557                           ; BSR set to: 0
 15558   002E04  0E00               	movlw	0
 15559   002E06  6F74               	movwf	___flmul@a& (0+255),b
 15560   002E08  0E00               	movlw	0
 15561   002E0A  6F75               	movwf	(___flmul@a+1)& (0+255),b
 15562   002E0C  0E00               	movlw	0
 15563   002E0E  6F76               	movwf	(___flmul@a+2)& (0+255),b
 15564   002E10  0E00               	movlw	0
 15565   002E12  6F77               	movwf	(___flmul@a+3)& (0+255),b
 15566   002E14                     l4711:
 15567                           
 15568                           ; BSR set to: 0
 15569   002E14  8F76               	bsf	(___flmul@a+2)& (0+255),7,b
 15570   002E16  EF15  F017         	goto	l1360
 15571   002E1A                     l4713:
 15572                           
 15573                           ; BSR set to: 0
 15574   002E1A  0E00               	movlw	0
 15575   002E1C  6F74               	movwf	___flmul@a& (0+255),b
 15576   002E1E  0E00               	movlw	0
 15577   002E20  6F75               	movwf	(___flmul@a+1)& (0+255),b
 15578   002E22  0E00               	movlw	0
 15579   002E24  6F76               	movwf	(___flmul@a+2)& (0+255),b
 15580   002E26  0E00               	movlw	0
 15581   002E28  6F77               	movwf	(___flmul@a+3)& (0+255),b
 15582   002E2A                     l1360:
 15583                           
 15584                           ; BSR set to: 0
 15585   002E2A  5181               	movf	___flmul@aexp& (0+255),w,b
 15586   002E2C  B4D8               	btfsc	status,2,c
 15587   002E2E  EF1B  F017         	goto	u4241
 15588   002E32  EF1D  F017         	goto	u4240
 15589   002E36                     u4241:
 15590   002E36  EF25  F017         	goto	l4717
 15591   002E3A                     u4240:
 15592   002E3A                     
 15593                           ; BSR set to: 0
 15594   002E3A  5182               	movf	___flmul@bexp& (0+255),w,b
 15595   002E3C  A4D8               	btfss	status,2,c
 15596   002E3E  EF23  F017         	goto	u4251
 15597   002E42  EF25  F017         	goto	u4250
 15598   002E46                     u4251:
 15599   002E46  EF2F  F017         	goto	l4721
 15600   002E4A                     u4250:
 15601   002E4A                     l4717:
 15602                           
 15603                           ; BSR set to: 0
 15604   002E4A  0E00               	movlw	0
 15605   002E4C  6F70               	movwf	?___flmul& (0+255),b
 15606   002E4E  0E00               	movlw	0
 15607   002E50  6F71               	movwf	(?___flmul+1)& (0+255),b
 15608   002E52  0E00               	movlw	0
 15609   002E54  6F72               	movwf	(?___flmul+2)& (0+255),b
 15610   002E56  0E00               	movlw	0
 15611   002E58  6F73               	movwf	(?___flmul+3)& (0+255),b
 15612   002E5A  EFC7  F018         	goto	l1364
 15613   002E5E                     l4721:
 15614                           
 15615                           ; BSR set to: 0
 15616   002E5E  5176               	movf	(___flmul@a+2)& (0+255),w,b
 15617   002E60  0370               	mulwf	___flmul@b& (0+255),b
 15618   002E62  CFF3 F087          	movff	prodl,___flmul@temp
 15619   002E66  CFF4 F088          	movff	prodh,___flmul@temp+1
 15620   002E6A                     
 15621                           ; BSR set to: 0
 15622   002E6A  5187               	movf	___flmul@temp& (0+255),w,b
 15623   002E6C  6F7D               	movwf	___flmul@grs& (0+255),b
 15624   002E6E  6B7E               	clrf	(___flmul@grs+1)& (0+255),b
 15625   002E70  6B7F               	clrf	(___flmul@grs+2)& (0+255),b
 15626   002E72  6B80               	clrf	(___flmul@grs+3)& (0+255),b
 15627   002E74                     
 15628                           ; BSR set to: 0
 15629   002E74  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15630   002E76  6F83               	movwf	___flmul@prod& (0+255),b
 15631   002E78  6B84               	clrf	(___flmul@prod+1)& (0+255),b
 15632   002E7A  6B85               	clrf	(___flmul@prod+2)& (0+255),b
 15633   002E7C  6B86               	clrf	(___flmul@prod+3)& (0+255),b
 15634   002E7E  5175               	movf	(___flmul@a+1)& (0+255),w,b
 15635   002E80  0371               	mulwf	(___flmul@b+1)& (0+255),b
 15636   002E82  CFF3 F087          	movff	prodl,___flmul@temp
 15637   002E86  CFF4 F088          	movff	prodh,___flmul@temp+1
 15638   002E8A                     
 15639                           ; BSR set to: 0
 15640   002E8A  5187               	movf	___flmul@temp& (0+255),w,b
 15641   002E8C  277D               	addwf	___flmul@grs& (0+255),f,b
 15642   002E8E  0E00               	movlw	0
 15643   002E90  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15644   002E92  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15645   002E94  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15646   002E96                     
 15647                           ; BSR set to: 0
 15648   002E96  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15649   002E98  2783               	addwf	___flmul@prod& (0+255),f,b
 15650   002E9A  0E00               	movlw	0
 15651   002E9C  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15652   002E9E  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15653   002EA0  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15654   002EA2  5174               	movf	___flmul@a& (0+255),w,b
 15655   002EA4  0372               	mulwf	(___flmul@b+2)& (0+255),b
 15656   002EA6  CFF3 F087          	movff	prodl,___flmul@temp
 15657   002EAA  CFF4 F088          	movff	prodh,___flmul@temp+1
 15658   002EAE                     
 15659                           ; BSR set to: 0
 15660   002EAE  5187               	movf	___flmul@temp& (0+255),w,b
 15661   002EB0  277D               	addwf	___flmul@grs& (0+255),f,b
 15662   002EB2  0E00               	movlw	0
 15663   002EB4  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15664   002EB6  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15665   002EB8  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15666   002EBA                     
 15667                           ; BSR set to: 0
 15668   002EBA  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15669   002EBC  2783               	addwf	___flmul@prod& (0+255),f,b
 15670   002EBE  0E00               	movlw	0
 15671   002EC0  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15672   002EC2  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15673   002EC4  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15674   002EC6                     
 15675                           ; BSR set to: 0
 15676   002EC6  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 15677   002ECA  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 15678   002ECE  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 15679   002ED2  6B7D               	clrf	___flmul@grs& (0+255),b
 15680   002ED4                     
 15681                           ; BSR set to: 0
 15682   002ED4  5174               	movf	___flmul@a& (0+255),w,b
 15683   002ED6  0371               	mulwf	(___flmul@b+1)& (0+255),b
 15684   002ED8  CFF3 F087          	movff	prodl,___flmul@temp
 15685   002EDC  CFF4 F088          	movff	prodh,___flmul@temp+1
 15686   002EE0                     
 15687                           ; BSR set to: 0
 15688   002EE0  5187               	movf	___flmul@temp& (0+255),w,b
 15689   002EE2  277D               	addwf	___flmul@grs& (0+255),f,b
 15690   002EE4  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15691   002EE6  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15692   002EE8  0E00               	movlw	0
 15693   002EEA  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15694   002EEC  0E00               	movlw	0
 15695   002EEE  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15696   002EF0                     
 15697                           ; BSR set to: 0
 15698   002EF0  5175               	movf	(___flmul@a+1)& (0+255),w,b
 15699   002EF2  0370               	mulwf	___flmul@b& (0+255),b
 15700   002EF4  CFF3 F087          	movff	prodl,___flmul@temp
 15701   002EF8  CFF4 F088          	movff	prodh,___flmul@temp+1
 15702   002EFC                     
 15703                           ; BSR set to: 0
 15704   002EFC  5187               	movf	___flmul@temp& (0+255),w,b
 15705   002EFE  277D               	addwf	___flmul@grs& (0+255),f,b
 15706   002F00  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15707   002F02  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15708   002F04  0E00               	movlw	0
 15709   002F06  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15710   002F08  0E00               	movlw	0
 15711   002F0A  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15712   002F0C                     
 15713                           ; BSR set to: 0
 15714   002F0C  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 15715   002F10  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 15716   002F14  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 15717   002F18  6B7D               	clrf	___flmul@grs& (0+255),b
 15718   002F1A  5174               	movf	___flmul@a& (0+255),w,b
 15719   002F1C  0370               	mulwf	___flmul@b& (0+255),b
 15720   002F1E  CFF3 F087          	movff	prodl,___flmul@temp
 15721   002F22  CFF4 F088          	movff	prodh,___flmul@temp+1
 15722   002F26                     
 15723                           ; BSR set to: 0
 15724   002F26  5187               	movf	___flmul@temp& (0+255),w,b
 15725   002F28  277D               	addwf	___flmul@grs& (0+255),f,b
 15726   002F2A  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15727   002F2C  237E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15728   002F2E  0E00               	movlw	0
 15729   002F30  237F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15730   002F32  0E00               	movlw	0
 15731   002F34  2380               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15732   002F36                     
 15733                           ; BSR set to: 0
 15734   002F36  5176               	movf	(___flmul@a+2)& (0+255),w,b
 15735   002F38  0371               	mulwf	(___flmul@b+1)& (0+255),b
 15736   002F3A  CFF3 F087          	movff	prodl,___flmul@temp
 15737   002F3E  CFF4 F088          	movff	prodh,___flmul@temp+1
 15738   002F42  5187               	movf	___flmul@temp& (0+255),w,b
 15739   002F44  2783               	addwf	___flmul@prod& (0+255),f,b
 15740   002F46  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15741   002F48  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15742   002F4A  0E00               	movlw	0
 15743   002F4C  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15744   002F4E  0E00               	movlw	0
 15745   002F50  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15746   002F52                     
 15747                           ; BSR set to: 0
 15748   002F52  5175               	movf	(___flmul@a+1)& (0+255),w,b
 15749   002F54  0372               	mulwf	(___flmul@b+2)& (0+255),b
 15750   002F56  CFF3 F087          	movff	prodl,___flmul@temp
 15751   002F5A  CFF4 F088          	movff	prodh,___flmul@temp+1
 15752   002F5E                     
 15753                           ; BSR set to: 0
 15754   002F5E  5187               	movf	___flmul@temp& (0+255),w,b
 15755   002F60  2783               	addwf	___flmul@prod& (0+255),f,b
 15756   002F62  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15757   002F64  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15758   002F66  0E00               	movlw	0
 15759   002F68  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15760   002F6A  0E00               	movlw	0
 15761   002F6C  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15762   002F6E  5176               	movf	(___flmul@a+2)& (0+255),w,b
 15763   002F70  0372               	mulwf	(___flmul@b+2)& (0+255),b
 15764   002F72  CFF3 F087          	movff	prodl,___flmul@temp
 15765   002F76  CFF4 F088          	movff	prodh,___flmul@temp+1
 15766   002F7A                     
 15767                           ; BSR set to: 0
 15768   002F7A  5187               	movf	___flmul@temp& (0+255),w,b
 15769   002F7C  6F78               	movwf	??___flmul& (0+255),b
 15770   002F7E  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15771   002F80  6F79               	movwf	(??___flmul+1)& (0+255),b
 15772   002F82  6B7A               	clrf	(??___flmul+2)& (0+255),b
 15773   002F84  6B7B               	clrf	(??___flmul+3)& (0+255),b
 15774   002F86  C07A  F07B         	movff	??___flmul+2,??___flmul+3
 15775   002F8A  C079  F07A         	movff	??___flmul+1,??___flmul+2
 15776   002F8E  C078  F079         	movff	??___flmul,??___flmul+1
 15777   002F92  6B78               	clrf	??___flmul& (0+255),b
 15778   002F94  5178               	movf	??___flmul& (0+255),w,b
 15779   002F96  2783               	addwf	___flmul@prod& (0+255),f,b
 15780   002F98  5179               	movf	(??___flmul+1)& (0+255),w,b
 15781   002F9A  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15782   002F9C  517A               	movf	(??___flmul+2)& (0+255),w,b
 15783   002F9E  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15784   002FA0  517B               	movf	(??___flmul+3)& (0+255),w,b
 15785   002FA2  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15786   002FA4                     
 15787                           ; BSR set to: 0
 15788   002FA4  C07D  F078         	movff	___flmul@grs,??___flmul
 15789   002FA8  C07E  F079         	movff	___flmul@grs+1,??___flmul+1
 15790   002FAC  C07F  F07A         	movff	___flmul@grs+2,??___flmul+2
 15791   002FB0  C080  F07B         	movff	___flmul@grs+3,??___flmul+3
 15792   002FB4  0E19               	movlw	25
 15793   002FB6  EFE2  F017         	goto	u4260
 15794   002FBA                     u4265:
 15795   002FBA  90D8               	bcf	status,0,c
 15796   002FBC  337B               	rrcf	(??___flmul+3)& (0+255),f,b
 15797   002FBE  337A               	rrcf	(??___flmul+2)& (0+255),f,b
 15798   002FC0  3379               	rrcf	(??___flmul+1)& (0+255),f,b
 15799   002FC2  3378               	rrcf	??___flmul& (0+255),f,b
 15800   002FC4                     u4260:
 15801   002FC4  2EE8               	decfsz	wreg,f,c
 15802   002FC6  EFDD  F017         	goto	u4265
 15803   002FCA  5178               	movf	??___flmul& (0+255),w,b
 15804   002FCC  2783               	addwf	___flmul@prod& (0+255),f,b
 15805   002FCE  5179               	movf	(??___flmul+1)& (0+255),w,b
 15806   002FD0  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15807   002FD2  517A               	movf	(??___flmul+2)& (0+255),w,b
 15808   002FD4  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15809   002FD6  517B               	movf	(??___flmul+3)& (0+255),w,b
 15810   002FD8  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15811   002FDA                     
 15812                           ; BSR set to: 0
 15813   002FDA  C07F  F080         	movff	___flmul@grs+2,___flmul@grs+3
 15814   002FDE  C07E  F07F         	movff	___flmul@grs+1,___flmul@grs+2
 15815   002FE2  C07D  F07E         	movff	___flmul@grs,___flmul@grs+1
 15816   002FE6  6B7D               	clrf	___flmul@grs& (0+255),b
 15817   002FE8                     
 15818                           ; BSR set to: 0
 15819   002FE8  5181               	movf	___flmul@aexp& (0+255),w,b
 15820   002FEA  C082  F078         	movff	___flmul@bexp,??___flmul
 15821   002FEE  6B79               	clrf	(??___flmul+1)& (0+255),b
 15822   002FF0  2778               	addwf	??___flmul& (0+255),f,b
 15823   002FF2  0E00               	movlw	0
 15824   002FF4  2379               	addwfc	(??___flmul+1)& (0+255),f,b
 15825   002FF6  0E82               	movlw	130
 15826   002FF8  2578               	addwf	??___flmul& (0+255),w,b
 15827   002FFA  6F87               	movwf	___flmul@temp& (0+255),b
 15828   002FFC  0EFF               	movlw	255
 15829   002FFE  2179               	addwfc	(??___flmul+1)& (0+255),w,b
 15830   003000  6F88               	movwf	(___flmul@temp+1)& (0+255),b
 15831   003002  EF18  F018         	goto	l4769
 15832   003006                     l4763:
 15833                           
 15834                           ; BSR set to: 0
 15835   003006  90D8               	bcf	status,0,c
 15836   003008  3783               	rlcf	___flmul@prod& (0+255),f,b
 15837   00300A  3784               	rlcf	(___flmul@prod+1)& (0+255),f,b
 15838   00300C  3785               	rlcf	(___flmul@prod+2)& (0+255),f,b
 15839   00300E  3786               	rlcf	(___flmul@prod+3)& (0+255),f,b
 15840   003010                     
 15841                           ; BSR set to: 0
 15842   003010  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 15843   003012  EF0D  F018         	goto	u4271
 15844   003016  EF0F  F018         	goto	u4270
 15845   00301A                     u4271:
 15846   00301A  EF10  F018         	goto	l1367
 15847   00301E                     u4270:
 15848   00301E                     
 15849                           ; BSR set to: 0
 15850   00301E  8183               	bsf	___flmul@prod& (0+255),0,b
 15851   003020                     l1367:
 15852                           
 15853                           ; BSR set to: 0
 15854   003020  90D8               	bcf	status,0,c
 15855   003022  377D               	rlcf	___flmul@grs& (0+255),f,b
 15856   003024  377E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 15857   003026  377F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 15858   003028  3780               	rlcf	(___flmul@grs+3)& (0+255),f,b
 15859   00302A  0787               	decf	___flmul@temp& (0+255),f,b
 15860   00302C  A0D8               	btfss	status,0,c
 15861   00302E  0788               	decf	(___flmul@temp+1)& (0+255),f,b
 15862   003030                     l4769:
 15863                           
 15864                           ; BSR set to: 0
 15865   003030  AF85               	btfss	(___flmul@prod+2)& (0+255),7,b
 15866   003032  EF1D  F018         	goto	u4281
 15867   003036  EF1F  F018         	goto	u4280
 15868   00303A                     u4281:
 15869   00303A  EF03  F018         	goto	l4763
 15870   00303E                     u4280:
 15871   00303E                     
 15872                           ; BSR set to: 0
 15873   00303E  0E00               	movlw	0
 15874   003040  6F81               	movwf	___flmul@aexp& (0+255),b
 15875   003042                     
 15876                           ; BSR set to: 0
 15877   003042  AF80               	btfss	(___flmul@grs+3)& (0+255),7,b
 15878   003044  EF26  F018         	goto	u4291
 15879   003048  EF28  F018         	goto	u4290
 15880   00304C                     u4291:
 15881   00304C  EF4C  F018         	goto	l1369
 15882   003050                     u4290:
 15883   003050                     
 15884                           ; BSR set to: 0
 15885   003050  0EFF               	movlw	255
 15886   003052  157D               	andwf	___flmul@grs& (0+255),w,b
 15887   003054  6F78               	movwf	??___flmul& (0+255),b
 15888   003056  0EFF               	movlw	255
 15889   003058  157E               	andwf	(___flmul@grs+1)& (0+255),w,b
 15890   00305A  6F79               	movwf	(??___flmul+1)& (0+255),b
 15891   00305C  0EFF               	movlw	255
 15892   00305E  157F               	andwf	(___flmul@grs+2)& (0+255),w,b
 15893   003060  6F7A               	movwf	(??___flmul+2)& (0+255),b
 15894   003062  0E7F               	movlw	127
 15895   003064  1580               	andwf	(___flmul@grs+3)& (0+255),w,b
 15896   003066  6F7B               	movwf	(??___flmul+3)& (0+255),b
 15897   003068  5178               	movf	??___flmul& (0+255),w,b
 15898   00306A  1179               	iorwf	(??___flmul+1)& (0+255),w,b
 15899   00306C  117A               	iorwf	(??___flmul+2)& (0+255),w,b
 15900   00306E  117B               	iorwf	(??___flmul+3)& (0+255),w,b
 15901   003070  B4D8               	btfsc	status,2,c
 15902   003072  EF3D  F018         	goto	u4301
 15903   003076  EF3F  F018         	goto	u4300
 15904   00307A                     u4301:
 15905   00307A  EF43  F018         	goto	l1370
 15906   00307E                     u4300:
 15907   00307E                     l4777:
 15908                           
 15909                           ; BSR set to: 0
 15910   00307E  0E01               	movlw	1
 15911   003080  6F81               	movwf	___flmul@aexp& (0+255),b
 15912   003082  EF4C  F018         	goto	l1369
 15913   003086                     l1370:
 15914                           
 15915                           ; BSR set to: 0
 15916   003086  A183               	btfss	___flmul@prod& (0+255),0,b
 15917   003088  EF48  F018         	goto	u4311
 15918   00308C  EF4A  F018         	goto	u4310
 15919   003090                     u4311:
 15920   003090  EF4C  F018         	goto	l1369
 15921   003094                     u4310:
 15922   003094  EF3F  F018         	goto	l4777
 15923   003098                     l1369:
 15924                           
 15925                           ; BSR set to: 0
 15926   003098  5181               	movf	___flmul@aexp& (0+255),w,b
 15927   00309A  B4D8               	btfsc	status,2,c
 15928   00309C  EF52  F018         	goto	u4321
 15929   0030A0  EF54  F018         	goto	u4320
 15930   0030A4                     u4321:
 15931   0030A4  EF78  F018         	goto	l4789
 15932   0030A8                     u4320:
 15933   0030A8                     
 15934                           ; BSR set to: 0
 15935   0030A8  0E01               	movlw	1
 15936   0030AA  2783               	addwf	___flmul@prod& (0+255),f,b
 15937   0030AC  0E00               	movlw	0
 15938   0030AE  2384               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15939   0030B0  2385               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15940   0030B2  2386               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15941   0030B4                     
 15942                           ; BSR set to: 0
 15943   0030B4  A186               	btfss	(___flmul@prod+3)& (0+255),0,b
 15944   0030B6  EF5F  F018         	goto	u4331
 15945   0030BA  EF61  F018         	goto	u4330
 15946   0030BE                     u4331:
 15947   0030BE  EF78  F018         	goto	l4789
 15948   0030C2                     u4330:
 15949   0030C2                     
 15950                           ; BSR set to: 0
 15951   0030C2  C083  F078         	movff	___flmul@prod,??___flmul
 15952   0030C6  C084  F079         	movff	___flmul@prod+1,??___flmul+1
 15953   0030CA  C085  F07A         	movff	___flmul@prod+2,??___flmul+2
 15954   0030CE  C086  F07B         	movff	___flmul@prod+3,??___flmul+3
 15955   0030D2  357B               	rlcf	(??___flmul+3)& (0+255),w,b
 15956   0030D4  337B               	rrcf	(??___flmul+3)& (0+255),f,b
 15957   0030D6  337A               	rrcf	(??___flmul+2)& (0+255),f,b
 15958   0030D8  3379               	rrcf	(??___flmul+1)& (0+255),f,b
 15959   0030DA  3378               	rrcf	??___flmul& (0+255),f,b
 15960   0030DC  C078  F083         	movff	??___flmul,___flmul@prod
 15961   0030E0  C079  F084         	movff	??___flmul+1,___flmul@prod+1
 15962   0030E4  C07A  F085         	movff	??___flmul+2,___flmul@prod+2
 15963   0030E8  C07B  F086         	movff	??___flmul+3,___flmul@prod+3
 15964   0030EC                     
 15965                           ; BSR set to: 0
 15966   0030EC  4B87               	infsnz	___flmul@temp& (0+255),f,b
 15967   0030EE  2B88               	incf	(___flmul@temp+1)& (0+255),f,b
 15968   0030F0                     l4789:
 15969                           
 15970                           ; BSR set to: 0
 15971   0030F0  BF88               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15972   0030F2  EF83  F018         	goto	u4341
 15973   0030F6  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15974   0030F8  E108               	bnz	u4340
 15975   0030FA  2987               	incf	___flmul@temp& (0+255),w,b
 15976   0030FC  A0D8               	btfss	status,0,c
 15977   0030FE  EF83  F018         	goto	u4341
 15978   003102  EF85  F018         	goto	u4340
 15979   003106                     u4341:
 15980   003106  EF8F  F018         	goto	l4793
 15981   00310A                     u4340:
 15982   00310A                     
 15983                           ; BSR set to: 0
 15984   00310A  0E00               	movlw	0
 15985   00310C  6F83               	movwf	___flmul@prod& (0+255),b
 15986   00310E  0E00               	movlw	0
 15987   003110  6F84               	movwf	(___flmul@prod+1)& (0+255),b
 15988   003112  0E80               	movlw	128
 15989   003114  6F85               	movwf	(___flmul@prod+2)& (0+255),b
 15990   003116  0E7F               	movlw	127
 15991   003118  6F86               	movwf	(___flmul@prod+3)& (0+255),b
 15992   00311A  EFBD  F018         	goto	l4805
 15993   00311E                     l4793:
 15994                           
 15995                           ; BSR set to: 0
 15996   00311E  BF88               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15997   003120  EF9C  F018         	goto	u4350
 15998   003124  5188               	movf	(___flmul@temp+1)& (0+255),w,b
 15999   003126  E106               	bnz	u4351
 16000   003128  0587               	decf	___flmul@temp& (0+255),w,b
 16001   00312A  B0D8               	btfsc	status,0,c
 16002   00312C  EF9A  F018         	goto	u4351
 16003   003130  EF9C  F018         	goto	u4350
 16004   003134                     u4351:
 16005   003134  EFA8  F018         	goto	l1377
 16006   003138                     u4350:
 16007   003138                     
 16008                           ; BSR set to: 0
 16009   003138  0E00               	movlw	0
 16010   00313A  6F83               	movwf	___flmul@prod& (0+255),b
 16011   00313C  0E00               	movlw	0
 16012   00313E  6F84               	movwf	(___flmul@prod+1)& (0+255),b
 16013   003140  0E00               	movlw	0
 16014   003142  6F85               	movwf	(___flmul@prod+2)& (0+255),b
 16015   003144  0E00               	movlw	0
 16016   003146  6F86               	movwf	(___flmul@prod+3)& (0+255),b
 16017   003148  0E00               	movlw	0
 16018   00314A  6F7C               	movwf	___flmul@sign& (0+255),b
 16019   00314C  EFBD  F018         	goto	l4805
 16020   003150                     l1377:
 16021                           
 16022                           ; BSR set to: 0
 16023   003150  C087  F082         	movff	___flmul@temp,___flmul@bexp
 16024   003154                     
 16025                           ; BSR set to: 0
 16026   003154  0EFF               	movlw	255
 16027   003156  1783               	andwf	___flmul@prod& (0+255),f,b
 16028   003158  0EFF               	movlw	255
 16029   00315A  1784               	andwf	(___flmul@prod+1)& (0+255),f,b
 16030   00315C  0E7F               	movlw	127
 16031   00315E  1785               	andwf	(___flmul@prod+2)& (0+255),f,b
 16032   003160  0E00               	movlw	0
 16033   003162  1786               	andwf	(___flmul@prod+3)& (0+255),f,b
 16034   003164                     
 16035                           ; BSR set to: 0
 16036   003164  A182               	btfss	___flmul@bexp& (0+255),0,b
 16037   003166  EFB7  F018         	goto	u4361
 16038   00316A  EFB9  F018         	goto	u4360
 16039   00316E                     u4361:
 16040   00316E  EFBA  F018         	goto	l4803
 16041   003172                     u4360:
 16042   003172                     
 16043                           ; BSR set to: 0
 16044   003172  8F85               	bsf	(___flmul@prod+2)& (0+255),7,b
 16045   003174                     l4803:
 16046                           
 16047                           ; BSR set to: 0
 16048   003174  90D8               	bcf	status,0,c
 16049   003176  3182               	rrcf	___flmul@bexp& (0+255),w,b
 16050   003178  6F86               	movwf	(___flmul@prod+3)& (0+255),b
 16051   00317A                     l4805:
 16052                           
 16053                           ; BSR set to: 0
 16054   00317A  517C               	movf	___flmul@sign& (0+255),w,b
 16055   00317C  1386               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16056   00317E                     
 16057                           ; BSR set to: 0
 16058   00317E  C083  F070         	movff	___flmul@prod,?___flmul
 16059   003182  C084  F071         	movff	___flmul@prod+1,?___flmul+1
 16060   003186  C085  F072         	movff	___flmul@prod+2,?___flmul+2
 16061   00318A  C086  F073         	movff	___flmul@prod+3,?___flmul+3
 16062   00318E                     l1364:
 16063                           
 16064                           ; BSR set to: 0
 16065   00318E  0012               	return		;funcret
 16066   003190                     __end_of___flmul:
 16067                           	callstack 0
 16068                           
 16069 ;; *************** function ___flge *****************
 16070 ;; Defined at:
 16071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;  ff1             4   41[BANK0 ] unsigned char 
 16074 ;;  ff2             4   45[BANK0 ] unsigned char 
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;		None               void
 16079 ;; Registers used:
 16080 ;;		wreg, status,2, status,0
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16089 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16090 ;;Total ram usage:       12 bytes
 16091 ;; Hardware stack levels used: 1
 16092 ;; Hardware stack levels required when called: 7
 16093 ;; This function calls:
 16094 ;;		Nothing
 16095 ;; This function is called by:
 16096 ;;		_Colour_decider
 16097 ;;		_efgtoa
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           	psect	text77
 16102   005082                     __ptext77:
 16103                           	callstack 0
 16104   005082                     ___flge:
 16105                           	callstack 19
 16106   005082  0E00               	movlw	0
 16107   005084  0100               	movlb	0	; () banked
 16108   005086  1589               	andwf	___flge@ff1& (0+255),w,b
 16109   005088  6F91               	movwf	??___flge& (0+255),b
 16110   00508A  0E00               	movlw	0
 16111   00508C  158A               	andwf	(___flge@ff1+1)& (0+255),w,b
 16112   00508E  6F92               	movwf	(??___flge+1)& (0+255),b
 16113   005090  0E80               	movlw	128
 16114   005092  158B               	andwf	(___flge@ff1+2)& (0+255),w,b
 16115   005094  6F93               	movwf	(??___flge+2)& (0+255),b
 16116   005096  0E7F               	movlw	127
 16117   005098  158C               	andwf	(___flge@ff1+3)& (0+255),w,b
 16118   00509A  6F94               	movwf	(??___flge+3)& (0+255),b
 16119   00509C  5191               	movf	??___flge& (0+255),w,b
 16120   00509E  1192               	iorwf	(??___flge+1)& (0+255),w,b
 16121   0050A0  1193               	iorwf	(??___flge+2)& (0+255),w,b
 16122   0050A2  1194               	iorwf	(??___flge+3)& (0+255),w,b
 16123   0050A4  A4D8               	btfss	status,2,c
 16124   0050A6  EF57  F028         	goto	u4401
 16125   0050AA  EF59  F028         	goto	u4400
 16126   0050AE                     u4401:
 16127   0050AE  EF61  F028         	goto	l4837
 16128   0050B2                     u4400:
 16129   0050B2                     
 16130                           ; BSR set to: 0
 16131   0050B2  0E00               	movlw	0
 16132   0050B4  6F89               	movwf	___flge@ff1& (0+255),b
 16133   0050B6  0E00               	movlw	0
 16134   0050B8  6F8A               	movwf	(___flge@ff1+1)& (0+255),b
 16135   0050BA  0E00               	movlw	0
 16136   0050BC  6F8B               	movwf	(___flge@ff1+2)& (0+255),b
 16137   0050BE  0E00               	movlw	0
 16138   0050C0  6F8C               	movwf	(___flge@ff1+3)& (0+255),b
 16139   0050C2                     l4837:
 16140                           
 16141                           ; BSR set to: 0
 16142   0050C2  0E00               	movlw	0
 16143   0050C4  158D               	andwf	___flge@ff2& (0+255),w,b
 16144   0050C6  6F91               	movwf	??___flge& (0+255),b
 16145   0050C8  0E00               	movlw	0
 16146   0050CA  158E               	andwf	(___flge@ff2+1)& (0+255),w,b
 16147   0050CC  6F92               	movwf	(??___flge+1)& (0+255),b
 16148   0050CE  0E80               	movlw	128
 16149   0050D0  158F               	andwf	(___flge@ff2+2)& (0+255),w,b
 16150   0050D2  6F93               	movwf	(??___flge+2)& (0+255),b
 16151   0050D4  0E7F               	movlw	127
 16152   0050D6  1590               	andwf	(___flge@ff2+3)& (0+255),w,b
 16153   0050D8  6F94               	movwf	(??___flge+3)& (0+255),b
 16154   0050DA  5191               	movf	??___flge& (0+255),w,b
 16155   0050DC  1192               	iorwf	(??___flge+1)& (0+255),w,b
 16156   0050DE  1193               	iorwf	(??___flge+2)& (0+255),w,b
 16157   0050E0  1194               	iorwf	(??___flge+3)& (0+255),w,b
 16158   0050E2  A4D8               	btfss	status,2,c
 16159   0050E4  EF76  F028         	goto	u4411
 16160   0050E8  EF78  F028         	goto	u4410
 16161   0050EC                     u4411:
 16162   0050EC  EF80  F028         	goto	l4841
 16163   0050F0                     u4410:
 16164   0050F0                     
 16165                           ; BSR set to: 0
 16166   0050F0  0E00               	movlw	0
 16167   0050F2  6F8D               	movwf	___flge@ff2& (0+255),b
 16168   0050F4  0E00               	movlw	0
 16169   0050F6  6F8E               	movwf	(___flge@ff2+1)& (0+255),b
 16170   0050F8  0E00               	movlw	0
 16171   0050FA  6F8F               	movwf	(___flge@ff2+2)& (0+255),b
 16172   0050FC  0E00               	movlw	0
 16173   0050FE  6F90               	movwf	(___flge@ff2+3)& (0+255),b
 16174   005100                     l4841:
 16175                           
 16176                           ; BSR set to: 0
 16177   005100  AF8C               	btfss	(___flge@ff1+3)& (0+255),7,b
 16178   005102  EF85  F028         	goto	u4421
 16179   005106  EF87  F028         	goto	u4420
 16180   00510A                     u4421:
 16181   00510A  EF90  F028         	goto	l4845
 16182   00510E                     u4420:
 16183   00510E                     
 16184                           ; BSR set to: 0
 16185   00510E  6D89               	negf	___flge@ff1& (0+255),b
 16186   005110  1F8A               	comf	(___flge@ff1+1)& (0+255),f,b
 16187   005112  B0D8               	btfsc	status,0,c
 16188   005114  2B8A               	incf	(___flge@ff1+1)& (0+255),f,b
 16189   005116  1F8B               	comf	(___flge@ff1+2)& (0+255),f,b
 16190   005118  B0D8               	btfsc	status,0,c
 16191   00511A  2B8B               	incf	(___flge@ff1+2)& (0+255),f,b
 16192   00511C  0E80               	movlw	128
 16193   00511E  578C               	subfwb	(___flge@ff1+3)& (0+255),f,b
 16194   005120                     l4845:
 16195                           
 16196                           ; BSR set to: 0
 16197   005120  AF90               	btfss	(___flge@ff2+3)& (0+255),7,b
 16198   005122  EF95  F028         	goto	u4431
 16199   005126  EF97  F028         	goto	u4430
 16200   00512A                     u4431:
 16201   00512A  EFA0  F028         	goto	l1011
 16202   00512E                     u4430:
 16203   00512E                     
 16204                           ; BSR set to: 0
 16205   00512E  6D8D               	negf	___flge@ff2& (0+255),b
 16206   005130  1F8E               	comf	(___flge@ff2+1)& (0+255),f,b
 16207   005132  B0D8               	btfsc	status,0,c
 16208   005134  2B8E               	incf	(___flge@ff2+1)& (0+255),f,b
 16209   005136  1F8F               	comf	(___flge@ff2+2)& (0+255),f,b
 16210   005138  B0D8               	btfsc	status,0,c
 16211   00513A  2B8F               	incf	(___flge@ff2+2)& (0+255),f,b
 16212   00513C  0E80               	movlw	128
 16213   00513E  5790               	subfwb	(___flge@ff2+3)& (0+255),f,b
 16214   005140                     l1011:
 16215                           
 16216                           ; BSR set to: 0
 16217   005140  0E00               	movlw	0
 16218   005142  1B89               	xorwf	___flge@ff1& (0+255),f,b
 16219   005144  0E00               	movlw	0
 16220   005146  1B8A               	xorwf	(___flge@ff1+1)& (0+255),f,b
 16221   005148  0E00               	movlw	0
 16222   00514A  1B8B               	xorwf	(___flge@ff1+2)& (0+255),f,b
 16223   00514C  0E80               	movlw	128
 16224   00514E  1B8C               	xorwf	(___flge@ff1+3)& (0+255),f,b
 16225   005150  0E00               	movlw	0
 16226   005152  1B8D               	xorwf	___flge@ff2& (0+255),f,b
 16227   005154  0E00               	movlw	0
 16228   005156  1B8E               	xorwf	(___flge@ff2+1)& (0+255),f,b
 16229   005158  0E00               	movlw	0
 16230   00515A  1B8F               	xorwf	(___flge@ff2+2)& (0+255),f,b
 16231   00515C  0E80               	movlw	128
 16232   00515E  1B90               	xorwf	(___flge@ff2+3)& (0+255),f,b
 16233   005160  518D               	movf	___flge@ff2& (0+255),w,b
 16234   005162  5D89               	subwf	___flge@ff1& (0+255),w,b
 16235   005164  518E               	movf	(___flge@ff2+1)& (0+255),w,b
 16236   005166  598A               	subwfb	(___flge@ff1+1)& (0+255),w,b
 16237   005168  518F               	movf	(___flge@ff2+2)& (0+255),w,b
 16238   00516A  598B               	subwfb	(___flge@ff1+2)& (0+255),w,b
 16239   00516C  5190               	movf	(___flge@ff2+3)& (0+255),w,b
 16240   00516E  598C               	subwfb	(___flge@ff1+3)& (0+255),w,b
 16241   005170  B0D8               	btfsc	status,0,c
 16242   005172  EFBD  F028         	goto	u4441
 16243   005176  EFBF  F028         	goto	u4440
 16244   00517A                     u4441:
 16245   00517A  EFC2  F028         	goto	l4851
 16246   00517E                     u4440:
 16247   00517E                     
 16248                           ; BSR set to: 0
 16249   00517E  90D8               	bcf	status,0,c
 16250   005180  EFC3  F028         	goto	l1016
 16251   005184                     l4851:
 16252                           
 16253                           ; BSR set to: 0
 16254   005184  80D8               	bsf	status,0,c
 16255   005186                     l1016:
 16256                           
 16257                           ; BSR set to: 0
 16258   005186  0012               	return		;funcret
 16259   005188                     __end_of___flge:
 16260                           	callstack 0
 16261                           
 16262 ;; *************** function ___fleq *****************
 16263 ;; Defined at:
 16264 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;  ff1             4   49[BANK0 ] unsigned char 
 16267 ;;  ff2             4   53[BANK0 ] unsigned char 
 16268 ;; Auto vars:     Size  Location     Type
 16269 ;;		None
 16270 ;; Return value:  Size  Location     Type
 16271 ;;		None               void
 16272 ;; Registers used:
 16273 ;;		wreg, status,2, status,0
 16274 ;; Tracked objects:
 16275 ;;		On entry : 0/0
 16276 ;;		On exit  : 0/0
 16277 ;;		Unchanged: 0/0
 16278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16279 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16282 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16283 ;;Total ram usage:       12 bytes
 16284 ;; Hardware stack levels used: 1
 16285 ;; Hardware stack levels required when called: 7
 16286 ;; This function calls:
 16287 ;;		Nothing
 16288 ;; This function is called by:
 16289 ;;		_Colour_decider
 16290 ;;		_efgtoa
 16291 ;; This function uses a non-reentrant model
 16292 ;;
 16293                           
 16294                           	psect	text78
 16295   005F08                     __ptext78:
 16296                           	callstack 0
 16297   005F08                     ___fleq:
 16298                           	callstack 19
 16299   005F08  0E00               	movlw	0
 16300   005F0A  0100               	movlb	0	; () banked
 16301   005F0C  1591               	andwf	___fleq@ff1& (0+255),w,b
 16302   005F0E  6F99               	movwf	??___fleq& (0+255),b
 16303   005F10  0E00               	movlw	0
 16304   005F12  1592               	andwf	(___fleq@ff1+1)& (0+255),w,b
 16305   005F14  6F9A               	movwf	(??___fleq+1)& (0+255),b
 16306   005F16  0E80               	movlw	128
 16307   005F18  1593               	andwf	(___fleq@ff1+2)& (0+255),w,b
 16308   005F1A  6F9B               	movwf	(??___fleq+2)& (0+255),b
 16309   005F1C  0E7F               	movlw	127
 16310   005F1E  1594               	andwf	(___fleq@ff1+3)& (0+255),w,b
 16311   005F20  6F9C               	movwf	(??___fleq+3)& (0+255),b
 16312   005F22  5199               	movf	??___fleq& (0+255),w,b
 16313   005F24  119A               	iorwf	(??___fleq+1)& (0+255),w,b
 16314   005F26  119B               	iorwf	(??___fleq+2)& (0+255),w,b
 16315   005F28  119C               	iorwf	(??___fleq+3)& (0+255),w,b
 16316   005F2A  A4D8               	btfss	status,2,c
 16317   005F2C  EF9A  F02F         	goto	u4371
 16318   005F30  EF9C  F02F         	goto	u4370
 16319   005F34                     u4371:
 16320   005F34  EFA4  F02F         	goto	l4821
 16321   005F38                     u4370:
 16322   005F38                     
 16323                           ; BSR set to: 0
 16324   005F38  0E00               	movlw	0
 16325   005F3A  6F91               	movwf	___fleq@ff1& (0+255),b
 16326   005F3C  0E00               	movlw	0
 16327   005F3E  6F92               	movwf	(___fleq@ff1+1)& (0+255),b
 16328   005F40  0E00               	movlw	0
 16329   005F42  6F93               	movwf	(___fleq@ff1+2)& (0+255),b
 16330   005F44  0E00               	movlw	0
 16331   005F46  6F94               	movwf	(___fleq@ff1+3)& (0+255),b
 16332   005F48                     l4821:
 16333                           
 16334                           ; BSR set to: 0
 16335   005F48  0E00               	movlw	0
 16336   005F4A  1595               	andwf	___fleq@ff2& (0+255),w,b
 16337   005F4C  6F99               	movwf	??___fleq& (0+255),b
 16338   005F4E  0E00               	movlw	0
 16339   005F50  1596               	andwf	(___fleq@ff2+1)& (0+255),w,b
 16340   005F52  6F9A               	movwf	(??___fleq+1)& (0+255),b
 16341   005F54  0E80               	movlw	128
 16342   005F56  1597               	andwf	(___fleq@ff2+2)& (0+255),w,b
 16343   005F58  6F9B               	movwf	(??___fleq+2)& (0+255),b
 16344   005F5A  0E7F               	movlw	127
 16345   005F5C  1598               	andwf	(___fleq@ff2+3)& (0+255),w,b
 16346   005F5E  6F9C               	movwf	(??___fleq+3)& (0+255),b
 16347   005F60  5199               	movf	??___fleq& (0+255),w,b
 16348   005F62  119A               	iorwf	(??___fleq+1)& (0+255),w,b
 16349   005F64  119B               	iorwf	(??___fleq+2)& (0+255),w,b
 16350   005F66  119C               	iorwf	(??___fleq+3)& (0+255),w,b
 16351   005F68  A4D8               	btfss	status,2,c
 16352   005F6A  EFB9  F02F         	goto	u4381
 16353   005F6E  EFBB  F02F         	goto	u4380
 16354   005F72                     u4381:
 16355   005F72  EFC3  F02F         	goto	l4825
 16356   005F76                     u4380:
 16357   005F76                     
 16358                           ; BSR set to: 0
 16359   005F76  0E00               	movlw	0
 16360   005F78  6F95               	movwf	___fleq@ff2& (0+255),b
 16361   005F7A  0E00               	movlw	0
 16362   005F7C  6F96               	movwf	(___fleq@ff2+1)& (0+255),b
 16363   005F7E  0E00               	movlw	0
 16364   005F80  6F97               	movwf	(___fleq@ff2+2)& (0+255),b
 16365   005F82  0E00               	movlw	0
 16366   005F84  6F98               	movwf	(___fleq@ff2+3)& (0+255),b
 16367   005F86                     l4825:
 16368                           
 16369                           ; BSR set to: 0
 16370   005F86  5195               	movf	___fleq@ff2& (0+255),w,b
 16371   005F88  1991               	xorwf	___fleq@ff1& (0+255),w,b
 16372   005F8A  E10F               	bnz	u4390
 16373   005F8C  5196               	movf	(___fleq@ff2+1)& (0+255),w,b
 16374   005F8E  1992               	xorwf	(___fleq@ff1+1)& (0+255),w,b
 16375   005F90  E10C               	bnz	u4390
 16376   005F92  5197               	movf	(___fleq@ff2+2)& (0+255),w,b
 16377   005F94  1993               	xorwf	(___fleq@ff1+2)& (0+255),w,b
 16378   005F96  E109               	bnz	u4390
 16379   005F98  5198               	movf	(___fleq@ff2+3)& (0+255),w,b
 16380   005F9A  1994               	xorwf	(___fleq@ff1+3)& (0+255),w,b
 16381   005F9C  B4D8               	btfsc	status,2,c
 16382   005F9E  EFD3  F02F         	goto	u4391
 16383   005FA2  EFD5  F02F         	goto	u4390
 16384   005FA6                     u4391:
 16385   005FA6  EFD8  F02F         	goto	l4829
 16386   005FAA                     u4390:
 16387   005FAA                     
 16388                           ; BSR set to: 0
 16389   005FAA  90D8               	bcf	status,0,c
 16390   005FAC  EFD9  F02F         	goto	l1005
 16391   005FB0                     l4829:
 16392                           
 16393                           ; BSR set to: 0
 16394   005FB0  80D8               	bsf	status,0,c
 16395   005FB2                     l1005:
 16396                           
 16397                           ; BSR set to: 0
 16398   005FB2  0012               	return		;funcret
 16399   005FB4                     __end_of___fleq:
 16400                           	callstack 0
 16401                           
 16402 ;; *************** function ___fldiv *****************
 16403 ;; Defined at:
 16404 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 16405 ;; Parameters:    Size  Location     Type
 16406 ;;  b               4   49[BANK0 ] unsigned char 
 16407 ;;  a               4   53[BANK0 ] unsigned char 
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;  grs             4   68[BANK0 ] unsigned long 
 16410 ;;  rem             4   61[BANK0 ] unsigned long 
 16411 ;;  new_exp         2   66[BANK0 ] short 
 16412 ;;  aexp            1   73[BANK0 ] unsigned char 
 16413 ;;  bexp            1   72[BANK0 ] unsigned char 
 16414 ;;  sign            1   65[BANK0 ] unsigned char 
 16415 ;; Return value:  Size  Location     Type
 16416 ;;                  4   49[BANK0 ] unsigned char 
 16417 ;; Registers used:
 16418 ;;		wreg, status,2, status,0
 16419 ;; Tracked objects:
 16420 ;;		On entry : 0/0
 16421 ;;		On exit  : 0/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16424 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16425 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16427 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16428 ;;Total ram usage:       25 bytes
 16429 ;; Hardware stack levels used: 1
 16430 ;; Hardware stack levels required when called: 7
 16431 ;; This function calls:
 16432 ;;		Nothing
 16433 ;; This function is called by:
 16434 ;;		_colour_rel
 16435 ;;		_Colour_decider
 16436 ;;		_efgtoa
 16437 ;; This function uses a non-reentrant model
 16438 ;;
 16439                           
 16440                           	psect	text79
 16441   003190                     __ptext79:
 16442                           	callstack 0
 16443   003190                     ___fldiv:
 16444                           	callstack 19
 16445   003190  0100               	movlb	0	; () banked
 16446   003192  5194               	movf	(___fldiv@b+3)& (0+255),w,b
 16447   003194  0B80               	andlw	128
 16448   003196  6FA1               	movwf	___fldiv@sign& (0+255),b
 16449   003198  5194               	movf	(___fldiv@b+3)& (0+255),w,b
 16450   00319A  2594               	addwf	(___fldiv@b+3)& (0+255),w,b
 16451   00319C  6FA8               	movwf	___fldiv@bexp& (0+255),b
 16452   00319E                     
 16453                           ; BSR set to: 0
 16454   00319E  AF93               	btfss	(___fldiv@b+2)& (0+255),7,b
 16455   0031A0  EFD4  F018         	goto	u3951
 16456   0031A4  EFD6  F018         	goto	u3950
 16457   0031A8                     u3951:
 16458   0031A8  EFD7  F018         	goto	l4549
 16459   0031AC                     u3950:
 16460   0031AC                     
 16461                           ; BSR set to: 0
 16462   0031AC  81A8               	bsf	___fldiv@bexp& (0+255),0,b
 16463   0031AE                     l4549:
 16464                           
 16465                           ; BSR set to: 0
 16466   0031AE  51A8               	movf	___fldiv@bexp& (0+255),w,b
 16467   0031B0  B4D8               	btfsc	status,2,c
 16468   0031B2  EFDD  F018         	goto	u3961
 16469   0031B6  EFDF  F018         	goto	u3960
 16470   0031BA                     u3961:
 16471   0031BA  EFF4  F018         	goto	l4559
 16472   0031BE                     u3960:
 16473   0031BE                     
 16474                           ; BSR set to: 0
 16475   0031BE  29A8               	incf	___fldiv@bexp& (0+255),w,b
 16476   0031C0  A4D8               	btfss	status,2,c
 16477   0031C2  EFE5  F018         	goto	u3971
 16478   0031C6  EFE7  F018         	goto	u3970
 16479   0031CA                     u3971:
 16480   0031CA  EFEF  F018         	goto	l4555
 16481   0031CE                     u3970:
 16482   0031CE                     
 16483                           ; BSR set to: 0
 16484   0031CE  0E00               	movlw	0
 16485   0031D0  6F91               	movwf	___fldiv@b& (0+255),b
 16486   0031D2  0E00               	movlw	0
 16487   0031D4  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16488   0031D6  0E00               	movlw	0
 16489   0031D8  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16490   0031DA  0E00               	movlw	0
 16491   0031DC  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16492   0031DE                     l4555:
 16493                           
 16494                           ; BSR set to: 0
 16495   0031DE  8F93               	bsf	(___fldiv@b+2)& (0+255),7,b
 16496   0031E0                     
 16497                           ; BSR set to: 0
 16498   0031E0  0E00               	movlw	0
 16499   0031E2  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16500   0031E4  EFFC  F018         	goto	l4561
 16501   0031E8                     l4559:
 16502                           
 16503                           ; BSR set to: 0
 16504   0031E8  0E00               	movlw	0
 16505   0031EA  6F91               	movwf	___fldiv@b& (0+255),b
 16506   0031EC  0E00               	movlw	0
 16507   0031EE  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16508   0031F0  0E00               	movlw	0
 16509   0031F2  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16510   0031F4  0E00               	movlw	0
 16511   0031F6  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16512   0031F8                     l4561:
 16513                           
 16514                           ; BSR set to: 0
 16515   0031F8  5198               	movf	(___fldiv@a+3)& (0+255),w,b
 16516   0031FA  0B80               	andlw	128
 16517   0031FC  1BA1               	xorwf	___fldiv@sign& (0+255),f,b
 16518   0031FE                     
 16519                           ; BSR set to: 0
 16520   0031FE  5198               	movf	(___fldiv@a+3)& (0+255),w,b
 16521   003200  2598               	addwf	(___fldiv@a+3)& (0+255),w,b
 16522   003202  6FA9               	movwf	___fldiv@aexp& (0+255),b
 16523   003204                     
 16524                           ; BSR set to: 0
 16525   003204  AF97               	btfss	(___fldiv@a+2)& (0+255),7,b
 16526   003206  EF07  F019         	goto	u3981
 16527   00320A  EF09  F019         	goto	u3980
 16528   00320E                     u3981:
 16529   00320E  EF0A  F019         	goto	l4569
 16530   003212                     u3980:
 16531   003212                     
 16532                           ; BSR set to: 0
 16533   003212  81A9               	bsf	___fldiv@aexp& (0+255),0,b
 16534   003214                     l4569:
 16535                           
 16536                           ; BSR set to: 0
 16537   003214  51A9               	movf	___fldiv@aexp& (0+255),w,b
 16538   003216  B4D8               	btfsc	status,2,c
 16539   003218  EF10  F019         	goto	u3991
 16540   00321C  EF12  F019         	goto	u3990
 16541   003220                     u3991:
 16542   003220  EF27  F019         	goto	l4579
 16543   003224                     u3990:
 16544   003224                     
 16545                           ; BSR set to: 0
 16546   003224  29A9               	incf	___fldiv@aexp& (0+255),w,b
 16547   003226  A4D8               	btfss	status,2,c
 16548   003228  EF18  F019         	goto	u4001
 16549   00322C  EF1A  F019         	goto	u4000
 16550   003230                     u4001:
 16551   003230  EF22  F019         	goto	l4575
 16552   003234                     u4000:
 16553   003234                     
 16554                           ; BSR set to: 0
 16555   003234  0E00               	movlw	0
 16556   003236  6F95               	movwf	___fldiv@a& (0+255),b
 16557   003238  0E00               	movlw	0
 16558   00323A  6F96               	movwf	(___fldiv@a+1)& (0+255),b
 16559   00323C  0E00               	movlw	0
 16560   00323E  6F97               	movwf	(___fldiv@a+2)& (0+255),b
 16561   003240  0E00               	movlw	0
 16562   003242  6F98               	movwf	(___fldiv@a+3)& (0+255),b
 16563   003244                     l4575:
 16564                           
 16565                           ; BSR set to: 0
 16566   003244  8F97               	bsf	(___fldiv@a+2)& (0+255),7,b
 16567   003246                     
 16568                           ; BSR set to: 0
 16569   003246  0E00               	movlw	0
 16570   003248  6F98               	movwf	(___fldiv@a+3)& (0+255),b
 16571   00324A  EF2F  F019         	goto	l4581
 16572   00324E                     l4579:
 16573                           
 16574                           ; BSR set to: 0
 16575   00324E  0E00               	movlw	0
 16576   003250  6F95               	movwf	___fldiv@a& (0+255),b
 16577   003252  0E00               	movlw	0
 16578   003254  6F96               	movwf	(___fldiv@a+1)& (0+255),b
 16579   003256  0E00               	movlw	0
 16580   003258  6F97               	movwf	(___fldiv@a+2)& (0+255),b
 16581   00325A  0E00               	movlw	0
 16582   00325C  6F98               	movwf	(___fldiv@a+3)& (0+255),b
 16583   00325E                     l4581:
 16584                           
 16585                           ; BSR set to: 0
 16586   00325E  5195               	movf	___fldiv@a& (0+255),w,b
 16587   003260  1196               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16588   003262  1197               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16589   003264  1198               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16590   003266  A4D8               	btfss	status,2,c
 16591   003268  EF38  F019         	goto	u4011
 16592   00326C  EF3A  F019         	goto	u4010
 16593   003270                     u4011:
 16594   003270  EF52  F019         	goto	l4593
 16595   003274                     u4010:
 16596   003274                     
 16597                           ; BSR set to: 0
 16598   003274  0E00               	movlw	0
 16599   003276  6F91               	movwf	___fldiv@b& (0+255),b
 16600   003278  0E00               	movlw	0
 16601   00327A  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16602   00327C  0E00               	movlw	0
 16603   00327E  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16604   003280  0E00               	movlw	0
 16605   003282  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16606   003284                     
 16607                           ; BSR set to: 0
 16608   003284  0E80               	movlw	128
 16609   003286  1393               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16610   003288  0E7F               	movlw	127
 16611   00328A  1394               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16612   00328C                     l4587:
 16613                           
 16614                           ; BSR set to: 0
 16615   00328C  51A1               	movf	___fldiv@sign& (0+255),w,b
 16616   00328E  1394               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16617   003290                     
 16618                           ; BSR set to: 0
 16619   003290  C091  F091         	movff	___fldiv@b,?___fldiv
 16620   003294  C092  F092         	movff	___fldiv@b+1,?___fldiv+1
 16621   003298  C093  F093         	movff	___fldiv@b+2,?___fldiv+2
 16622   00329C  C094  F094         	movff	___fldiv@b+3,?___fldiv+3
 16623   0032A0  EF95  F01A         	goto	l1328
 16624   0032A4                     l4593:
 16625                           
 16626                           ; BSR set to: 0
 16627   0032A4  51A8               	movf	___fldiv@bexp& (0+255),w,b
 16628   0032A6  A4D8               	btfss	status,2,c
 16629   0032A8  EF58  F019         	goto	u4021
 16630   0032AC  EF5A  F019         	goto	u4020
 16631   0032B0                     u4021:
 16632   0032B0  EF64  F019         	goto	l4601
 16633   0032B4                     u4020:
 16634   0032B4                     
 16635                           ; BSR set to: 0
 16636   0032B4  0E00               	movlw	0
 16637   0032B6  6F91               	movwf	?___fldiv& (0+255),b
 16638   0032B8  0E00               	movlw	0
 16639   0032BA  6F92               	movwf	(?___fldiv+1)& (0+255),b
 16640   0032BC  0E00               	movlw	0
 16641   0032BE  6F93               	movwf	(?___fldiv+2)& (0+255),b
 16642   0032C0  0E00               	movlw	0
 16643   0032C2  6F94               	movwf	(?___fldiv+3)& (0+255),b
 16644   0032C4  EF95  F01A         	goto	l1328
 16645   0032C8                     l4601:
 16646                           
 16647                           ; BSR set to: 0
 16648   0032C8  51A9               	movf	___fldiv@aexp& (0+255),w,b
 16649   0032CA  C0A8  F099         	movff	___fldiv@bexp,??___fldiv
 16650   0032CE  6B9A               	clrf	(??___fldiv+1)& (0+255),b
 16651   0032D0  5F99               	subwf	??___fldiv& (0+255),f,b
 16652   0032D2  0E00               	movlw	0
 16653   0032D4  5B9A               	subwfb	(??___fldiv+1)& (0+255),f,b
 16654   0032D6  0E7F               	movlw	127
 16655   0032D8  2599               	addwf	??___fldiv& (0+255),w,b
 16656   0032DA  6FA2               	movwf	___fldiv@new_exp& (0+255),b
 16657   0032DC  0E00               	movlw	0
 16658   0032DE  219A               	addwfc	(??___fldiv+1)& (0+255),w,b
 16659   0032E0  6FA3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16660   0032E2                     
 16661                           ; BSR set to: 0
 16662   0032E2  C091  F09D         	movff	___fldiv@b,___fldiv@rem
 16663   0032E6  C092  F09E         	movff	___fldiv@b+1,___fldiv@rem+1
 16664   0032EA  C093  F09F         	movff	___fldiv@b+2,___fldiv@rem+2
 16665   0032EE  C094  F0A0         	movff	___fldiv@b+3,___fldiv@rem+3
 16666   0032F2                     
 16667                           ; BSR set to: 0
 16668   0032F2  0E00               	movlw	0
 16669   0032F4  6F91               	movwf	___fldiv@b& (0+255),b
 16670   0032F6  0E00               	movlw	0
 16671   0032F8  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16672   0032FA  0E00               	movlw	0
 16673   0032FC  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16674   0032FE  0E00               	movlw	0
 16675   003300  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16676   003302                     
 16677                           ; BSR set to: 0
 16678   003302  0E00               	movlw	0
 16679   003304  6FA4               	movwf	___fldiv@grs& (0+255),b
 16680   003306  0E00               	movlw	0
 16681   003308  6FA5               	movwf	(___fldiv@grs+1)& (0+255),b
 16682   00330A  0E00               	movlw	0
 16683   00330C  6FA6               	movwf	(___fldiv@grs+2)& (0+255),b
 16684   00330E  0E00               	movlw	0
 16685   003310  6FA7               	movwf	(___fldiv@grs+3)& (0+255),b
 16686   003312                     
 16687                           ; BSR set to: 0
 16688   003312  0E00               	movlw	0
 16689   003314  6FA9               	movwf	___fldiv@aexp& (0+255),b
 16690   003316  EFC5  F019         	goto	l1330
 16691   00331A                     l4611:
 16692                           
 16693                           ; BSR set to: 0
 16694   00331A  51A9               	movf	___fldiv@aexp& (0+255),w,b
 16695   00331C  B4D8               	btfsc	status,2,c
 16696   00331E  EF93  F019         	goto	u4031
 16697   003322  EF95  F019         	goto	u4030
 16698   003326                     u4031:
 16699   003326  EFAC  F019         	goto	l4619
 16700   00332A                     u4030:
 16701   00332A                     
 16702                           ; BSR set to: 0
 16703   00332A  90D8               	bcf	status,0,c
 16704   00332C  379D               	rlcf	___fldiv@rem& (0+255),f,b
 16705   00332E  379E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16706   003330  379F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16707   003332  37A0               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16708   003334  90D8               	bcf	status,0,c
 16709   003336  3791               	rlcf	___fldiv@b& (0+255),f,b
 16710   003338  3792               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16711   00333A  3793               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16712   00333C  3794               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16713   00333E                     
 16714                           ; BSR set to: 0
 16715   00333E  AFA7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16716   003340  EFA4  F019         	goto	u4041
 16717   003344  EFA6  F019         	goto	u4040
 16718   003348                     u4041:
 16719   003348  EFA7  F019         	goto	l1333
 16720   00334C                     u4040:
 16721   00334C                     
 16722                           ; BSR set to: 0
 16723   00334C  8191               	bsf	___fldiv@b& (0+255),0,b
 16724   00334E                     l1333:
 16725                           
 16726                           ; BSR set to: 0
 16727   00334E  90D8               	bcf	status,0,c
 16728   003350  37A4               	rlcf	___fldiv@grs& (0+255),f,b
 16729   003352  37A5               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16730   003354  37A6               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16731   003356  37A7               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16732   003358                     l4619:
 16733                           
 16734                           ; BSR set to: 0
 16735   003358  5195               	movf	___fldiv@a& (0+255),w,b
 16736   00335A  5D9D               	subwf	___fldiv@rem& (0+255),w,b
 16737   00335C  5196               	movf	(___fldiv@a+1)& (0+255),w,b
 16738   00335E  599E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16739   003360  5197               	movf	(___fldiv@a+2)& (0+255),w,b
 16740   003362  599F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16741   003364  5198               	movf	(___fldiv@a+3)& (0+255),w,b
 16742   003366  59A0               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16743   003368  A0D8               	btfss	status,0,c
 16744   00336A  EFB9  F019         	goto	u4051
 16745   00336E  EFBB  F019         	goto	u4050
 16746   003372                     u4051:
 16747   003372  EFC4  F019         	goto	l4625
 16748   003376                     u4050:
 16749   003376                     
 16750                           ; BSR set to: 0
 16751   003376  8DA7               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16752   003378                     
 16753                           ; BSR set to: 0
 16754   003378  5195               	movf	___fldiv@a& (0+255),w,b
 16755   00337A  5F9D               	subwf	___fldiv@rem& (0+255),f,b
 16756   00337C  5196               	movf	(___fldiv@a+1)& (0+255),w,b
 16757   00337E  5B9E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16758   003380  5197               	movf	(___fldiv@a+2)& (0+255),w,b
 16759   003382  5B9F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16760   003384  5198               	movf	(___fldiv@a+3)& (0+255),w,b
 16761   003386  5BA0               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16762   003388                     l4625:
 16763                           
 16764                           ; BSR set to: 0
 16765   003388  2BA9               	incf	___fldiv@aexp& (0+255),f,b
 16766   00338A                     l1330:
 16767                           
 16768                           ; BSR set to: 0
 16769   00338A  0E19               	movlw	25
 16770   00338C  65A9               	cpfsgt	___fldiv@aexp& (0+255),b
 16771   00338E  EFCB  F019         	goto	u4061
 16772   003392  EFCD  F019         	goto	u4060
 16773   003396                     u4061:
 16774   003396  EF8D  F019         	goto	l4611
 16775   00339A                     u4060:
 16776   00339A                     
 16777                           ; BSR set to: 0
 16778   00339A  519D               	movf	___fldiv@rem& (0+255),w,b
 16779   00339C  119E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16780   00339E  119F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16781   0033A0  11A0               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16782   0033A2  B4D8               	btfsc	status,2,c
 16783   0033A4  EFD6  F019         	goto	u4071
 16784   0033A8  EFD8  F019         	goto	u4070
 16785   0033AC                     u4071:
 16786   0033AC  EFF0  F019         	goto	l4637
 16787   0033B0                     u4070:
 16788   0033B0                     
 16789                           ; BSR set to: 0
 16790   0033B0  81A4               	bsf	___fldiv@grs& (0+255),0,b
 16791   0033B2  EFF0  F019         	goto	l4637
 16792   0033B6                     l4631:
 16793                           
 16794                           ; BSR set to: 0
 16795   0033B6  90D8               	bcf	status,0,c
 16796   0033B8  3791               	rlcf	___fldiv@b& (0+255),f,b
 16797   0033BA  3792               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16798   0033BC  3793               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16799   0033BE  3794               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16800   0033C0                     
 16801                           ; BSR set to: 0
 16802   0033C0  AFA7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16803   0033C2  EFE5  F019         	goto	u4081
 16804   0033C6  EFE7  F019         	goto	u4080
 16805   0033CA                     u4081:
 16806   0033CA  EFE8  F019         	goto	l1339
 16807   0033CE                     u4080:
 16808   0033CE                     
 16809                           ; BSR set to: 0
 16810   0033CE  8191               	bsf	___fldiv@b& (0+255),0,b
 16811   0033D0                     l1339:
 16812                           
 16813                           ; BSR set to: 0
 16814   0033D0  90D8               	bcf	status,0,c
 16815   0033D2  37A4               	rlcf	___fldiv@grs& (0+255),f,b
 16816   0033D4  37A5               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16817   0033D6  37A6               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16818   0033D8  37A7               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16819   0033DA  07A2               	decf	___fldiv@new_exp& (0+255),f,b
 16820   0033DC  A0D8               	btfss	status,0,c
 16821   0033DE  07A3               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16822   0033E0                     l4637:
 16823                           
 16824                           ; BSR set to: 0
 16825   0033E0  AF93               	btfss	(___fldiv@b+2)& (0+255),7,b
 16826   0033E2  EFF5  F019         	goto	u4091
 16827   0033E6  EFF7  F019         	goto	u4090
 16828   0033EA                     u4091:
 16829   0033EA  EFDB  F019         	goto	l4631
 16830   0033EE                     u4090:
 16831   0033EE                     
 16832                           ; BSR set to: 0
 16833   0033EE  0E00               	movlw	0
 16834   0033F0  6FA9               	movwf	___fldiv@aexp& (0+255),b
 16835   0033F2                     
 16836                           ; BSR set to: 0
 16837   0033F2  AFA7               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16838   0033F4  EFFE  F019         	goto	u4101
 16839   0033F8  EF00  F01A         	goto	u4100
 16840   0033FC                     u4101:
 16841   0033FC  EF24  F01A         	goto	l1341
 16842   003400                     u4100:
 16843   003400                     
 16844                           ; BSR set to: 0
 16845   003400  0EFF               	movlw	255
 16846   003402  15A4               	andwf	___fldiv@grs& (0+255),w,b
 16847   003404  6F99               	movwf	??___fldiv& (0+255),b
 16848   003406  0EFF               	movlw	255
 16849   003408  15A5               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16850   00340A  6F9A               	movwf	(??___fldiv+1)& (0+255),b
 16851   00340C  0EFF               	movlw	255
 16852   00340E  15A6               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16853   003410  6F9B               	movwf	(??___fldiv+2)& (0+255),b
 16854   003412  0E7F               	movlw	127
 16855   003414  15A7               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16856   003416  6F9C               	movwf	(??___fldiv+3)& (0+255),b
 16857   003418  5199               	movf	??___fldiv& (0+255),w,b
 16858   00341A  119A               	iorwf	(??___fldiv+1)& (0+255),w,b
 16859   00341C  119B               	iorwf	(??___fldiv+2)& (0+255),w,b
 16860   00341E  119C               	iorwf	(??___fldiv+3)& (0+255),w,b
 16861   003420  B4D8               	btfsc	status,2,c
 16862   003422  EF15  F01A         	goto	u4111
 16863   003426  EF17  F01A         	goto	u4110
 16864   00342A                     u4111:
 16865   00342A  EF1B  F01A         	goto	l1342
 16866   00342E                     u4110:
 16867   00342E                     l4645:
 16868                           
 16869                           ; BSR set to: 0
 16870   00342E  0E01               	movlw	1
 16871   003430  6FA9               	movwf	___fldiv@aexp& (0+255),b
 16872   003432  EF24  F01A         	goto	l1341
 16873   003436                     l1342:
 16874                           
 16875                           ; BSR set to: 0
 16876   003436  A191               	btfss	___fldiv@b& (0+255),0,b
 16877   003438  EF20  F01A         	goto	u4121
 16878   00343C  EF22  F01A         	goto	u4120
 16879   003440                     u4121:
 16880   003440  EF24  F01A         	goto	l1341
 16881   003444                     u4120:
 16882   003444  EF17  F01A         	goto	l4645
 16883   003448                     l1341:
 16884                           
 16885                           ; BSR set to: 0
 16886   003448  51A9               	movf	___fldiv@aexp& (0+255),w,b
 16887   00344A  B4D8               	btfsc	status,2,c
 16888   00344C  EF2A  F01A         	goto	u4131
 16889   003450  EF2C  F01A         	goto	u4130
 16890   003454                     u4131:
 16891   003454  EF50  F01A         	goto	l4657
 16892   003458                     u4130:
 16893   003458                     
 16894                           ; BSR set to: 0
 16895   003458  0E01               	movlw	1
 16896   00345A  2791               	addwf	___fldiv@b& (0+255),f,b
 16897   00345C  0E00               	movlw	0
 16898   00345E  2392               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16899   003460  2393               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16900   003462  2394               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16901   003464                     
 16902                           ; BSR set to: 0
 16903   003464  A194               	btfss	(___fldiv@b+3)& (0+255),0,b
 16904   003466  EF37  F01A         	goto	u4141
 16905   00346A  EF39  F01A         	goto	u4140
 16906   00346E                     u4141:
 16907   00346E  EF50  F01A         	goto	l4657
 16908   003472                     u4140:
 16909   003472                     
 16910                           ; BSR set to: 0
 16911   003472  C091  F099         	movff	___fldiv@b,??___fldiv
 16912   003476  C092  F09A         	movff	___fldiv@b+1,??___fldiv+1
 16913   00347A  C093  F09B         	movff	___fldiv@b+2,??___fldiv+2
 16914   00347E  C094  F09C         	movff	___fldiv@b+3,??___fldiv+3
 16915   003482  359C               	rlcf	(??___fldiv+3)& (0+255),w,b
 16916   003484  339C               	rrcf	(??___fldiv+3)& (0+255),f,b
 16917   003486  339B               	rrcf	(??___fldiv+2)& (0+255),f,b
 16918   003488  339A               	rrcf	(??___fldiv+1)& (0+255),f,b
 16919   00348A  3399               	rrcf	??___fldiv& (0+255),f,b
 16920   00348C  C099  F091         	movff	??___fldiv,___fldiv@b
 16921   003490  C09A  F092         	movff	??___fldiv+1,___fldiv@b+1
 16922   003494  C09B  F093         	movff	??___fldiv+2,___fldiv@b+2
 16923   003498  C09C  F094         	movff	??___fldiv+3,___fldiv@b+3
 16924   00349C                     
 16925                           ; BSR set to: 0
 16926   00349C  4BA2               	infsnz	___fldiv@new_exp& (0+255),f,b
 16927   00349E  2BA3               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16928   0034A0                     l4657:
 16929                           
 16930                           ; BSR set to: 0
 16931   0034A0  BFA3               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16932   0034A2  EF5B  F01A         	goto	u4151
 16933   0034A6  51A3               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16934   0034A8  E108               	bnz	u4150
 16935   0034AA  29A2               	incf	___fldiv@new_exp& (0+255),w,b
 16936   0034AC  A0D8               	btfss	status,0,c
 16937   0034AE  EF5B  F01A         	goto	u4151
 16938   0034B2  EF5D  F01A         	goto	u4150
 16939   0034B6                     u4151:
 16940   0034B6  EF68  F01A         	goto	l4661
 16941   0034BA                     u4150:
 16942   0034BA                     
 16943                           ; BSR set to: 0
 16944   0034BA  0E00               	movlw	0
 16945   0034BC  6FA3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16946   0034BE  69A2               	setf	___fldiv@new_exp& (0+255),b
 16947   0034C0  0E00               	movlw	0
 16948   0034C2  6F91               	movwf	___fldiv@b& (0+255),b
 16949   0034C4  0E00               	movlw	0
 16950   0034C6  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16951   0034C8  0E00               	movlw	0
 16952   0034CA  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16953   0034CC  0E00               	movlw	0
 16954   0034CE  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16955   0034D0                     l4661:
 16956                           
 16957                           ; BSR set to: 0
 16958   0034D0  BFA3               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16959   0034D2  EF75  F01A         	goto	u4160
 16960   0034D6  51A3               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16961   0034D8  E106               	bnz	u4161
 16962   0034DA  05A2               	decf	___fldiv@new_exp& (0+255),w,b
 16963   0034DC  B0D8               	btfsc	status,0,c
 16964   0034DE  EF73  F01A         	goto	u4161
 16965   0034E2  EF75  F01A         	goto	u4160
 16966   0034E6                     u4161:
 16967   0034E6  EF83  F01A         	goto	l4665
 16968   0034EA                     u4160:
 16969   0034EA                     
 16970                           ; BSR set to: 0
 16971   0034EA  0E00               	movlw	0
 16972   0034EC  6FA3               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16973   0034EE  0E00               	movlw	0
 16974   0034F0  6FA2               	movwf	___fldiv@new_exp& (0+255),b
 16975   0034F2  0E00               	movlw	0
 16976   0034F4  6F91               	movwf	___fldiv@b& (0+255),b
 16977   0034F6  0E00               	movlw	0
 16978   0034F8  6F92               	movwf	(___fldiv@b+1)& (0+255),b
 16979   0034FA  0E00               	movlw	0
 16980   0034FC  6F93               	movwf	(___fldiv@b+2)& (0+255),b
 16981   0034FE  0E00               	movlw	0
 16982   003500  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 16983   003502  0E00               	movlw	0
 16984   003504  6FA1               	movwf	___fldiv@sign& (0+255),b
 16985   003506                     l4665:
 16986                           
 16987                           ; BSR set to: 0
 16988   003506  C0A2  F0A8         	movff	___fldiv@new_exp,___fldiv@bexp
 16989   00350A                     
 16990                           ; BSR set to: 0
 16991   00350A  A1A8               	btfss	___fldiv@bexp& (0+255),0,b
 16992   00350C  EF8A  F01A         	goto	u4171
 16993   003510  EF8C  F01A         	goto	u4170
 16994   003514                     u4171:
 16995   003514  EF8F  F01A         	goto	l4671
 16996   003518                     u4170:
 16997   003518                     
 16998                           ; BSR set to: 0
 16999   003518  8F93               	bsf	(___fldiv@b+2)& (0+255),7,b
 17000   00351A  EF90  F01A         	goto	l4673
 17001   00351E                     l4671:
 17002                           
 17003                           ; BSR set to: 0
 17004   00351E  9F93               	bcf	(___fldiv@b+2)& (0+255),7,b
 17005   003520                     l4673:
 17006                           
 17007                           ; BSR set to: 0
 17008   003520  90D8               	bcf	status,0,c
 17009   003522  31A8               	rrcf	___fldiv@bexp& (0+255),w,b
 17010   003524  6F94               	movwf	(___fldiv@b+3)& (0+255),b
 17011   003526  EF46  F019         	goto	l4587
 17012   00352A                     l1328:
 17013                           
 17014                           ; BSR set to: 0
 17015   00352A  0012               	return		;funcret
 17016   00352C                     __end_of___fldiv:
 17017                           	callstack 0
 17018                           
 17019 ;; *************** function _HighISR *****************
 17020 ;; Defined at:
 17021 ;;		line 28 in file "interrupts.c"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17039 ;;Total ram usage:        4 bytes
 17040 ;; Hardware stack levels used: 1
 17041 ;; Hardware stack levels required when called: 6
 17042 ;; This function calls:
 17043 ;;		i2_go_Home
 17044 ;; This function is called by:
 17045 ;;		Interrupt level 2
 17046 ;; This function uses a non-reentrant model
 17047 ;;
 17048                           
 17049                           	psect	intcode
 17050   000008                     __pintcode:
 17051                           	callstack 0
 17052   000008                     _HighISR:
 17053                           	callstack 16
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;incstack = 0
 17057   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17058   00000A  CFD9 F02E          	movff	fsr2l,??_HighISR
 17059   00000E  CFDA F02F          	movff	fsr2h,??_HighISR+1
 17060   000012  CFF3 F030          	movff	prodl,??_HighISR+2
 17061   000016  CFF4 F031          	movff	prodh,??_HighISR+3
 17062   00001A                     
 17063                           ;interrupts.c: 30:     if (PIR0bits.TMR0IF){
 17064   00001A  010E               	movlb	14	; () banked
 17065   00001C  AB33               	btfss	51,5,b	;volatile
 17066   00001E  EF13  F000         	goto	i2u637_41
 17067   000022  EF15  F000         	goto	i2u637_40
 17068   000026                     i2u637_41:
 17069   000026  EF30  F000         	goto	i2l302
 17070   00002A                     i2u637_40:
 17071   00002A                     
 17072                           ; BSR set to: 14
 17073                           ;interrupts.c: 31:         move_count++;
 17074   00002A  4A4E               	infsnz	_move_count^0,f,c	;volatile
 17075   00002C  2A4F               	incf	(_move_count+1)^0,f,c	;volatile
 17076   00002E                     
 17077                           ; BSR set to: 14
 17078                           ;interrupts.c: 32:         Time_forward[move_count]=65535;
 17079   00002E  90D8               	bcf	status,0,c
 17080   000030  344E               	rlcf	_move_count^0,w,c	;volatile
 17081   000032  6ED9               	movwf	fsr2l,c
 17082   000034  344F               	rlcf	(_move_count+1)^0,w,c	;volatile
 17083   000036  6EDA               	movwf	fsr2h,c
 17084   000038  0E00               	movlw	low _Time_forward
 17085   00003A  26D9               	addwf	fsr2l,f,c
 17086   00003C  0E03               	movlw	high _Time_forward
 17087   00003E  22DA               	addwfc	fsr2h,f,c
 17088   000040  0EFF               	movlw	255
 17089   000042  6EDE               	movwf	postinc2,c
 17090   000044  0EFF               	movlw	255
 17091   000046  6EDD               	movwf	postdec2,c
 17092   000048                     
 17093                           ; BSR set to: 14
 17094                           ;interrupts.c: 33:         PIR0bits.TMR0IF=0;
 17095   000048  9B33               	bcf	51,5,b	;volatile
 17096   00004A                     
 17097                           ; BSR set to: 14
 17098                           ;interrupts.c: 34:         PIE0bits.TMR0IE = 0;
 17099   00004A  9B29               	bcf	41,5,b	;volatile
 17100   00004C                     
 17101                           ; BSR set to: 14
 17102                           ;interrupts.c: 35:         go_Home(WayBack, Time_forward);
 17103   00004C  0E8C               	movlw	low _WayBack
 17104   00004E  6E25               	movwf	i2go_Home@WayBack^0,c
 17105   000050  0E02               	movlw	high _WayBack
 17106   000052  6E26               	movwf	(i2go_Home@WayBack+1)^0,c
 17107   000054  0E00               	movlw	low _Time_forward
 17108   000056  6E27               	movwf	i2go_Home@Time_forward^0,c
 17109   000058  0E03               	movlw	high _Time_forward
 17110   00005A  6E28               	movwf	(i2go_Home@Time_forward+1)^0,c
 17111   00005C  EC3F  F01F         	call	i2_go_Home	;wreg free
 17112   000060                     i2l302:
 17113   000060  C031  FFF4         	movff	??_HighISR+3,prodh
 17114   000064  C030  FFF3         	movff	??_HighISR+2,prodl
 17115   000068  C02F  FFDA         	movff	??_HighISR+1,fsr2h
 17116   00006C  C02E  FFD9         	movff	??_HighISR,fsr2l
 17117   000070  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17118   000072  0011               	retfie		f
 17119   000074                     __end_of_HighISR:
 17120                           	callstack 0
 17121                           
 17122 ;; *************** function i2_go_Home *****************
 17123 ;; Defined at:
 17124 ;;		line 5 in file "Memory.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;  WayBack         2   36[COMRAM] PTR unsigned char 
 17127 ;;		 -> WayBack(50), 
 17128 ;;  Time_forward    2   38[COMRAM] PTR int 
 17129 ;;		 -> Time_forward(100), 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  i               2   43[COMRAM] int 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      void 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17143 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17144 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17145 ;;Total ram usage:        9 bytes
 17146 ;; Hardware stack levels used: 1
 17147 ;; Hardware stack levels required when called: 5
 17148 ;; This function calls:
 17149 ;;		i2_BlueMove
 17150 ;;		i2_GreenMove
 17151 ;;		i2_LightBlueMove
 17152 ;;		i2_OrangeMove
 17153 ;;		i2_RedMove
 17154 ;;		i2_ReversePink
 17155 ;;		i2_ReverseYellow
 17156 ;;		i2_reverseDetect
 17157 ;;		i2_stop
 17158 ;;		i2_timed_forward
 17159 ;; This function is called by:
 17160 ;;		_HighISR
 17161 ;; This function uses a non-reentrant model
 17162 ;;
 17163                           
 17164                           	psect	text81
 17165   003E7E                     __ptext81:
 17166                           	callstack 0
 17167   003E7E                     i2_go_Home:
 17168                           	callstack 16
 17169   003E7E                     
 17170                           ;Memory.c: 6:     int i;;Memory.c: 7:     BlueMove(&motorL, &motorR);
 17171   003E7E  0EC3               	movlw	low _motorL
 17172   003E80  6E21               	movwf	i2BlueMove@mL^0,c
 17173   003E82  0E01               	movlw	high _motorL
 17174   003E84  6E22               	movwf	(i2BlueMove@mL+1)^0,c
 17175   003E86  0EBA               	movlw	low _motorR
 17176   003E88  6E23               	movwf	i2BlueMove@mR^0,c
 17177   003E8A  0E01               	movlw	high _motorR
 17178   003E8C  6E24               	movwf	(i2BlueMove@mR+1)^0,c
 17179   003E8E  ECA1  F032         	call	i2_BlueMove	;wreg free
 17180   003E92                     
 17181                           ;Memory.c: 8:     T0CON0bits.T0EN=0;
 17182   003E92  9ED5               	bcf	213,7,c	;volatile
 17183   003E94                     
 17184                           ;Memory.c: 11:         for (i = move_count; i >= 0; i--){
 17185   003E94  C04E  F02C         	movff	_move_count,i2go_Home@i	;volatile
 17186   003E98  C04F  F02D         	movff	_move_count+1,i2go_Home@i+1	;volatile
 17187   003E9C                     i2l6269:
 17188   003E9C  BE2D               	btfsc	(i2go_Home@i+1)^0,7,c
 17189   003E9E  EF55  F01F         	goto	i2u627_40
 17190   003EA2  EF53  F01F         	goto	i2u627_41
 17191   003EA6                     i2u627_41:
 17192   003EA6  EF57  F01F         	goto	i2l6273
 17193   003EAA                     i2u627_40:
 17194   003EAA  EF9F  F020         	goto	i2l6307
 17195   003EAE                     i2l6273:
 17196                           
 17197                           ;Memory.c: 14:             timed_forward(&motorL, &motorR,Time_forward[i]);
 17198   003EAE  0EC3               	movlw	low _motorL
 17199   003EB0  6E14               	movwf	i2timed_forward@mL^0,c
 17200   003EB2  0E01               	movlw	high _motorL
 17201   003EB4  6E15               	movwf	(i2timed_forward@mL+1)^0,c
 17202   003EB6  0EBA               	movlw	low _motorR
 17203   003EB8  6E16               	movwf	i2timed_forward@mR^0,c
 17204   003EBA  0E01               	movlw	high _motorR
 17205   003EBC  6E17               	movwf	(i2timed_forward@mR+1)^0,c
 17206   003EBE  90D8               	bcf	status,0,c
 17207   003EC0  342C               	rlcf	i2go_Home@i^0,w,c
 17208   003EC2  6ED9               	movwf	fsr2l,c
 17209   003EC4  342D               	rlcf	(i2go_Home@i+1)^0,w,c
 17210   003EC6  6EDA               	movwf	fsr2h,c
 17211   003EC8  5027               	movf	i2go_Home@Time_forward^0,w,c
 17212   003ECA  26D9               	addwf	fsr2l,f,c
 17213   003ECC  5028               	movf	(i2go_Home@Time_forward+1)^0,w,c
 17214   003ECE  22DA               	addwfc	fsr2h,f,c
 17215   003ED0  CFDE F018          	movff	postinc2,i2timed_forward@time
 17216   003ED4  CFDD F019          	movff	postdec2,i2timed_forward@time+1
 17217   003ED8  ECB0  F029         	call	i2_timed_forward	;wreg free
 17218   003EDC                     
 17219                           ;Memory.c: 17:             if (WayBack[i-1]==1){
 17220   003EDC  502C               	movf	i2go_Home@i^0,w,c
 17221   003EDE  2425               	addwf	i2go_Home@WayBack^0,w,c
 17222   003EE0  6E29               	movwf	??i2_go_Home^0,c
 17223   003EE2  502D               	movf	(i2go_Home@i+1)^0,w,c
 17224   003EE4  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17225   003EE6  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17226   003EE8  0EFF               	movlw	255
 17227   003EEA  2429               	addwf	??i2_go_Home^0,w,c
 17228   003EEC  6ED9               	movwf	fsr2l,c
 17229   003EEE  0EFF               	movlw	255
 17230   003EF0  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17231   003EF2  6EDA               	movwf	fsr2h,c
 17232   003EF4  04DE               	decf	postinc2,w,c
 17233   003EF6  A4D8               	btfss	status,2,c
 17234   003EF8  EF80  F01F         	goto	i2u628_41
 17235   003EFC  EF82  F01F         	goto	i2u628_40
 17236   003F00                     i2u628_41:
 17237   003F00  EF98  F01F         	goto	i2l6279
 17238   003F04                     i2u628_40:
 17239   003F04                     
 17240                           ;Memory.c: 18:                 reverseDetect(&motorL, &motorR);
 17241   003F04  0EC3               	movlw	low _motorL
 17242   003F06  6E1B               	movwf	i2reverseDetect@mL^0,c
 17243   003F08  0E01               	movlw	high _motorL
 17244   003F0A  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17245   003F0C  0EBA               	movlw	low _motorR
 17246   003F0E  6E1D               	movwf	i2reverseDetect@mR^0,c
 17247   003F10  0E01               	movlw	high _motorR
 17248   003F12  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17249   003F14  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17250                           
 17251                           ;Memory.c: 19:                 GreenMove(&motorL, &motorR);
 17252   003F18  0EC3               	movlw	low _motorL
 17253   003F1A  6E21               	movwf	i2GreenMove@mL^0,c
 17254   003F1C  0E01               	movlw	high _motorL
 17255   003F1E  6E22               	movwf	(i2GreenMove@mL+1)^0,c
 17256   003F20  0EBA               	movlw	low _motorR
 17257   003F22  6E23               	movwf	i2GreenMove@mR^0,c
 17258   003F24  0E01               	movlw	high _motorR
 17259   003F26  6E24               	movwf	(i2GreenMove@mR+1)^0,c
 17260   003F28  ECD1  F037         	call	i2_GreenMove	;wreg free
 17261                           
 17262                           ;Memory.c: 20:             }
 17263   003F2C  EF9A  F020         	goto	i2l6303
 17264   003F30                     i2l6279:
 17265   003F30  502C               	movf	i2go_Home@i^0,w,c
 17266   003F32  2425               	addwf	i2go_Home@WayBack^0,w,c
 17267   003F34  6E29               	movwf	??i2_go_Home^0,c
 17268   003F36  502D               	movf	(i2go_Home@i+1)^0,w,c
 17269   003F38  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17270   003F3A  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17271   003F3C  0EFF               	movlw	255
 17272   003F3E  2429               	addwf	??i2_go_Home^0,w,c
 17273   003F40  6ED9               	movwf	fsr2l,c
 17274   003F42  0EFF               	movlw	255
 17275   003F44  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17276   003F46  6EDA               	movwf	fsr2h,c
 17277   003F48  0E02               	movlw	2
 17278   003F4A  18DE               	xorwf	postinc2,w,c
 17279   003F4C  A4D8               	btfss	status,2,c
 17280   003F4E  EFAB  F01F         	goto	i2u629_41
 17281   003F52  EFAD  F01F         	goto	i2u629_40
 17282   003F56                     i2u629_41:
 17283   003F56  EFC3  F01F         	goto	i2l6283
 17284   003F5A                     i2u629_40:
 17285   003F5A                     
 17286                           ;Memory.c: 22:                 reverseDetect(&motorL, &motorR);
 17287   003F5A  0EC3               	movlw	low _motorL
 17288   003F5C  6E1B               	movwf	i2reverseDetect@mL^0,c
 17289   003F5E  0E01               	movlw	high _motorL
 17290   003F60  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17291   003F62  0EBA               	movlw	low _motorR
 17292   003F64  6E1D               	movwf	i2reverseDetect@mR^0,c
 17293   003F66  0E01               	movlw	high _motorR
 17294   003F68  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17295   003F6A  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17296                           
 17297                           ;Memory.c: 23:                 LightBlueMove(&motorL, &motorR);
 17298   003F6E  0EC3               	movlw	low _motorL
 17299   003F70  6E21               	movwf	i2LightBlueMove@mL^0,c
 17300   003F72  0E01               	movlw	high _motorL
 17301   003F74  6E22               	movwf	(i2LightBlueMove@mL+1)^0,c
 17302   003F76  0EBA               	movlw	low _motorR
 17303   003F78  6E23               	movwf	i2LightBlueMove@mR^0,c
 17304   003F7A  0E01               	movlw	high _motorR
 17305   003F7C  6E24               	movwf	(i2LightBlueMove@mR+1)^0,c
 17306   003F7E  EC5E  F035         	call	i2_LightBlueMove	;wreg free
 17307                           
 17308                           ;Memory.c: 24:             }
 17309   003F82  EF9A  F020         	goto	i2l6303
 17310   003F86                     i2l6283:
 17311   003F86  502C               	movf	i2go_Home@i^0,w,c
 17312   003F88  2425               	addwf	i2go_Home@WayBack^0,w,c
 17313   003F8A  6E29               	movwf	??i2_go_Home^0,c
 17314   003F8C  502D               	movf	(i2go_Home@i+1)^0,w,c
 17315   003F8E  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17316   003F90  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17317   003F92  0EFF               	movlw	255
 17318   003F94  2429               	addwf	??i2_go_Home^0,w,c
 17319   003F96  6ED9               	movwf	fsr2l,c
 17320   003F98  0EFF               	movlw	255
 17321   003F9A  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17322   003F9C  6EDA               	movwf	fsr2h,c
 17323   003F9E  0E03               	movlw	3
 17324   003FA0  18DE               	xorwf	postinc2,w,c
 17325   003FA2  A4D8               	btfss	status,2,c
 17326   003FA4  EFD6  F01F         	goto	i2u630_41
 17327   003FA8  EFD8  F01F         	goto	i2u630_40
 17328   003FAC                     i2u630_41:
 17329   003FAC  EFEE  F01F         	goto	i2l6287
 17330   003FB0                     i2u630_40:
 17331   003FB0                     
 17332                           ;Memory.c: 26:                 reverseDetect(&motorL, &motorR);
 17333   003FB0  0EC3               	movlw	low _motorL
 17334   003FB2  6E1B               	movwf	i2reverseDetect@mL^0,c
 17335   003FB4  0E01               	movlw	high _motorL
 17336   003FB6  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17337   003FB8  0EBA               	movlw	low _motorR
 17338   003FBA  6E1D               	movwf	i2reverseDetect@mR^0,c
 17339   003FBC  0E01               	movlw	high _motorR
 17340   003FBE  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17341   003FC0  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17342                           
 17343                           ;Memory.c: 27:                 ReverseYellow(&motorL, &motorR);
 17344   003FC4  0EC3               	movlw	low _motorL
 17345   003FC6  6E21               	movwf	i2ReverseYellow@mL^0,c
 17346   003FC8  0E01               	movlw	high _motorL
 17347   003FCA  6E22               	movwf	(i2ReverseYellow@mL+1)^0,c
 17348   003FCC  0EBA               	movlw	low _motorR
 17349   003FCE  6E23               	movwf	i2ReverseYellow@mR^0,c
 17350   003FD0  0E01               	movlw	high _motorR
 17351   003FD2  6E24               	movwf	(i2ReverseYellow@mR+1)^0,c
 17352   003FD4  ECCE  F02E         	call	i2_ReverseYellow	;wreg free
 17353                           
 17354                           ;Memory.c: 28:             }
 17355   003FD8  EF9A  F020         	goto	i2l6303
 17356   003FDC                     i2l6287:
 17357   003FDC  502C               	movf	i2go_Home@i^0,w,c
 17358   003FDE  2425               	addwf	i2go_Home@WayBack^0,w,c
 17359   003FE0  6E29               	movwf	??i2_go_Home^0,c
 17360   003FE2  502D               	movf	(i2go_Home@i+1)^0,w,c
 17361   003FE4  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17362   003FE6  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17363   003FE8  0EFF               	movlw	255
 17364   003FEA  2429               	addwf	??i2_go_Home^0,w,c
 17365   003FEC  6ED9               	movwf	fsr2l,c
 17366   003FEE  0EFF               	movlw	255
 17367   003FF0  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17368   003FF2  6EDA               	movwf	fsr2h,c
 17369   003FF4  0E04               	movlw	4
 17370   003FF6  18DE               	xorwf	postinc2,w,c
 17371   003FF8  A4D8               	btfss	status,2,c
 17372   003FFA  EF01  F020         	goto	i2u631_41
 17373   003FFE  EF03  F020         	goto	i2u631_40
 17374   004002                     i2u631_41:
 17375   004002  EF19  F020         	goto	i2l6291
 17376   004006                     i2u631_40:
 17377   004006                     
 17378                           ;Memory.c: 30:                 reverseDetect(&motorL, &motorR);
 17379   004006  0EC3               	movlw	low _motorL
 17380   004008  6E1B               	movwf	i2reverseDetect@mL^0,c
 17381   00400A  0E01               	movlw	high _motorL
 17382   00400C  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17383   00400E  0EBA               	movlw	low _motorR
 17384   004010  6E1D               	movwf	i2reverseDetect@mR^0,c
 17385   004012  0E01               	movlw	high _motorR
 17386   004014  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17387   004016  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17388                           
 17389                           ;Memory.c: 31:                 BlueMove(&motorL, &motorR);
 17390   00401A  0EC3               	movlw	low _motorL
 17391   00401C  6E21               	movwf	i2BlueMove@mL^0,c
 17392   00401E  0E01               	movlw	high _motorL
 17393   004020  6E22               	movwf	(i2BlueMove@mL+1)^0,c
 17394   004022  0EBA               	movlw	low _motorR
 17395   004024  6E23               	movwf	i2BlueMove@mR^0,c
 17396   004026  0E01               	movlw	high _motorR
 17397   004028  6E24               	movwf	(i2BlueMove@mR+1)^0,c
 17398   00402A  ECA1  F032         	call	i2_BlueMove	;wreg free
 17399                           
 17400                           ;Memory.c: 32:             }
 17401   00402E  EF9A  F020         	goto	i2l6303
 17402   004032                     i2l6291:
 17403   004032  502C               	movf	i2go_Home@i^0,w,c
 17404   004034  2425               	addwf	i2go_Home@WayBack^0,w,c
 17405   004036  6E29               	movwf	??i2_go_Home^0,c
 17406   004038  502D               	movf	(i2go_Home@i+1)^0,w,c
 17407   00403A  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17408   00403C  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17409   00403E  0EFF               	movlw	255
 17410   004040  2429               	addwf	??i2_go_Home^0,w,c
 17411   004042  6ED9               	movwf	fsr2l,c
 17412   004044  0EFF               	movlw	255
 17413   004046  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17414   004048  6EDA               	movwf	fsr2h,c
 17415   00404A  0E05               	movlw	5
 17416   00404C  18DE               	xorwf	postinc2,w,c
 17417   00404E  A4D8               	btfss	status,2,c
 17418   004050  EF2C  F020         	goto	i2u632_41
 17419   004054  EF2E  F020         	goto	i2u632_40
 17420   004058                     i2u632_41:
 17421   004058  EF44  F020         	goto	i2l6295
 17422   00405C                     i2u632_40:
 17423   00405C                     
 17424                           ;Memory.c: 34:                 reverseDetect(&motorL, &motorR);
 17425   00405C  0EC3               	movlw	low _motorL
 17426   00405E  6E1B               	movwf	i2reverseDetect@mL^0,c
 17427   004060  0E01               	movlw	high _motorL
 17428   004062  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17429   004064  0EBA               	movlw	low _motorR
 17430   004066  6E1D               	movwf	i2reverseDetect@mR^0,c
 17431   004068  0E01               	movlw	high _motorR
 17432   00406A  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17433   00406C  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17434                           
 17435                           ;Memory.c: 35:                 RedMove(&motorL, &motorR);
 17436   004070  0EC3               	movlw	low _motorL
 17437   004072  6E21               	movwf	i2RedMove@mL^0,c
 17438   004074  0E01               	movlw	high _motorL
 17439   004076  6E22               	movwf	(i2RedMove@mL+1)^0,c
 17440   004078  0EBA               	movlw	low _motorR
 17441   00407A  6E23               	movwf	i2RedMove@mR^0,c
 17442   00407C  0E01               	movlw	high _motorR
 17443   00407E  6E24               	movwf	(i2RedMove@mR+1)^0,c
 17444   004080  ECB2  F037         	call	i2_RedMove	;wreg free
 17445                           
 17446                           ;Memory.c: 36:             }
 17447   004084  EF9A  F020         	goto	i2l6303
 17448   004088                     i2l6295:
 17449   004088  502C               	movf	i2go_Home@i^0,w,c
 17450   00408A  2425               	addwf	i2go_Home@WayBack^0,w,c
 17451   00408C  6E29               	movwf	??i2_go_Home^0,c
 17452   00408E  502D               	movf	(i2go_Home@i+1)^0,w,c
 17453   004090  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17454   004092  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17455   004094  0EFF               	movlw	255
 17456   004096  2429               	addwf	??i2_go_Home^0,w,c
 17457   004098  6ED9               	movwf	fsr2l,c
 17458   00409A  0EFF               	movlw	255
 17459   00409C  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17460   00409E  6EDA               	movwf	fsr2h,c
 17461   0040A0  0E06               	movlw	6
 17462   0040A2  18DE               	xorwf	postinc2,w,c
 17463   0040A4  A4D8               	btfss	status,2,c
 17464   0040A6  EF57  F020         	goto	i2u633_41
 17465   0040AA  EF59  F020         	goto	i2u633_40
 17466   0040AE                     i2u633_41:
 17467   0040AE  EF6F  F020         	goto	i2l6299
 17468   0040B2                     i2u633_40:
 17469   0040B2                     
 17470                           ;Memory.c: 38:                 reverseDetect(&motorL, &motorR);
 17471   0040B2  0EC3               	movlw	low _motorL
 17472   0040B4  6E1B               	movwf	i2reverseDetect@mL^0,c
 17473   0040B6  0E01               	movlw	high _motorL
 17474   0040B8  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17475   0040BA  0EBA               	movlw	low _motorR
 17476   0040BC  6E1D               	movwf	i2reverseDetect@mR^0,c
 17477   0040BE  0E01               	movlw	high _motorR
 17478   0040C0  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17479   0040C2  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17480                           
 17481                           ;Memory.c: 39:                 OrangeMove(&motorL, &motorR);
 17482   0040C6  0EC3               	movlw	low _motorL
 17483   0040C8  6E21               	movwf	i2OrangeMove@mL^0,c
 17484   0040CA  0E01               	movlw	high _motorL
 17485   0040CC  6E22               	movwf	(i2OrangeMove@mL+1)^0,c
 17486   0040CE  0EBA               	movlw	low _motorR
 17487   0040D0  6E23               	movwf	i2OrangeMove@mR^0,c
 17488   0040D2  0E01               	movlw	high _motorR
 17489   0040D4  6E24               	movwf	(i2OrangeMove@mR+1)^0,c
 17490   0040D6  EC35  F035         	call	i2_OrangeMove	;wreg free
 17491                           
 17492                           ;Memory.c: 40:             }
 17493   0040DA  EF9A  F020         	goto	i2l6303
 17494   0040DE                     i2l6299:
 17495   0040DE  502C               	movf	i2go_Home@i^0,w,c
 17496   0040E0  2425               	addwf	i2go_Home@WayBack^0,w,c
 17497   0040E2  6E29               	movwf	??i2_go_Home^0,c
 17498   0040E4  502D               	movf	(i2go_Home@i+1)^0,w,c
 17499   0040E6  2026               	addwfc	(i2go_Home@WayBack+1)^0,w,c
 17500   0040E8  6E2A               	movwf	(??i2_go_Home+1)^0,c
 17501   0040EA  0EFF               	movlw	255
 17502   0040EC  2429               	addwf	??i2_go_Home^0,w,c
 17503   0040EE  6ED9               	movwf	fsr2l,c
 17504   0040F0  0EFF               	movlw	255
 17505   0040F2  202A               	addwfc	(??i2_go_Home+1)^0,w,c
 17506   0040F4  6EDA               	movwf	fsr2h,c
 17507   0040F6  0E07               	movlw	7
 17508   0040F8  18DE               	xorwf	postinc2,w,c
 17509   0040FA  A4D8               	btfss	status,2,c
 17510   0040FC  EF82  F020         	goto	i2u634_41
 17511   004100  EF84  F020         	goto	i2u634_40
 17512   004104                     i2u634_41:
 17513   004104  EF9A  F020         	goto	i2l707
 17514   004108                     i2u634_40:
 17515   004108                     
 17516                           ;Memory.c: 42:                 reverseDetect(&motorL, &motorR);
 17517   004108  0EC3               	movlw	low _motorL
 17518   00410A  6E1B               	movwf	i2reverseDetect@mL^0,c
 17519   00410C  0E01               	movlw	high _motorL
 17520   00410E  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17521   004110  0EBA               	movlw	low _motorR
 17522   004112  6E1D               	movwf	i2reverseDetect@mR^0,c
 17523   004114  0E01               	movlw	high _motorR
 17524   004116  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17525   004118  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17526                           
 17527                           ;Memory.c: 43:                 ReversePink(&motorL, &motorR);
 17528   00411C  0EC3               	movlw	low _motorL
 17529   00411E  6E21               	movwf	i2ReversePink@mL^0,c
 17530   004120  0E01               	movlw	high _motorL
 17531   004122  6E22               	movwf	(i2ReversePink@mL+1)^0,c
 17532   004124  0EBA               	movlw	low _motorR
 17533   004126  6E23               	movwf	i2ReversePink@mR^0,c
 17534   004128  0E01               	movlw	high _motorR
 17535   00412A  6E24               	movwf	(i2ReversePink@mR+1)^0,c
 17536   00412C  EC29  F02F         	call	i2_ReversePink	;wreg free
 17537   004130  EF9A  F020         	goto	i2l6303
 17538   004134                     i2l707:
 17539   004134                     i2l6303:
 17540                           
 17541                           ;Memory.c: 47:       }
 17542   004134  062C               	decf	i2go_Home@i^0,f,c
 17543   004136  A0D8               	btfss	status,0,c
 17544   004138  062D               	decf	(i2go_Home@i+1)^0,f,c
 17545   00413A  EF4E  F01F         	goto	i2l6269
 17546   00413E                     i2l6307:
 17547                           
 17548                           ;Memory.c: 48:         stop(&motorL, &motorR);
 17549   00413E  0EC3               	movlw	low _motorL
 17550   004140  6E14               	movwf	i2stop@mL^0,c
 17551   004142  0E01               	movlw	high _motorL
 17552   004144  6E15               	movwf	(i2stop@mL+1)^0,c
 17553   004146  0EBA               	movlw	low _motorR
 17554   004148  6E16               	movwf	i2stop@mR^0,c
 17555   00414A  0E01               	movlw	high _motorR
 17556   00414C  6E17               	movwf	(i2stop@mR+1)^0,c
 17557   00414E  ECE0  F030         	call	i2_stop	;wreg free
 17558   004152                     
 17559                           ;Memory.c: 49:         run_flag=0;
 17560   004152  0E00               	movlw	0
 17561   004154  0101               	movlb	1	; () banked
 17562   004156  6FD5               	movwf	(_run_flag+1)& (0+255),b
 17563   004158  0E00               	movlw	0
 17564   00415A  6FD4               	movwf	_run_flag& (0+255),b
 17565   00415C                     
 17566                           ; BSR set to: 1
 17567   00415C  0012               	return		;funcret
 17568   00415E                     __end_ofi2_go_Home:
 17569                           	callstack 0
 17570                           
 17571 ;; *************** function i2_timed_forward *****************
 17572 ;; Defined at:
 17573 ;;		line 165 in file "dc_motor.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 17576 ;;		 -> motorL(9), 
 17577 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 17578 ;;		 -> motorR(9), 
 17579 ;;  time            2   23[COMRAM] int 
 17580 ;; Auto vars:     Size  Location     Type
 17581 ;;		None
 17582 ;; Return value:  Size  Location     Type
 17583 ;;                  1    wreg      void 
 17584 ;; Registers used:
 17585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17586 ;; Tracked objects:
 17587 ;;		On entry : 0/0
 17588 ;;		On exit  : 0/0
 17589 ;;		Unchanged: 0/0
 17590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17593 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17594 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17595 ;;Total ram usage:        9 bytes
 17596 ;; Hardware stack levels used: 1
 17597 ;; Hardware stack levels required when called: 2
 17598 ;; This function calls:
 17599 ;;		i2_delayed_ms
 17600 ;;		i2_setMotorPWM
 17601 ;; This function is called by:
 17602 ;;		i2_go_Home
 17603 ;; This function uses a non-reentrant model
 17604 ;;
 17605                           
 17606                           	psect	text82
 17607   005360                     __ptext82:
 17608                           	callstack 0
 17609   005360                     i2_timed_forward:
 17610                           	callstack 18
 17611   005360                     
 17612                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
 17613   005360  EE20 F001          	lfsr	2,1
 17614   005364  5014               	movf	i2timed_forward@mL^0,w,c
 17615   005366  26D9               	addwf	fsr2l,f,c
 17616   005368  5015               	movf	(i2timed_forward@mL+1)^0,w,c
 17617   00536A  22DA               	addwfc	fsr2h,f,c
 17618   00536C  0E01               	movlw	1
 17619   00536E  6EDF               	movwf	indf2,c
 17620                           
 17621                           ;dc_motor.c: 169:     mR->direction =1;
 17622   005370  EE20 F001          	lfsr	2,1
 17623   005374  5016               	movf	i2timed_forward@mR^0,w,c
 17624   005376  26D9               	addwf	fsr2l,f,c
 17625   005378  5017               	movf	(i2timed_forward@mR+1)^0,w,c
 17626   00537A  22DA               	addwfc	fsr2h,f,c
 17627   00537C  0E01               	movlw	1
 17628   00537E  6EDF               	movwf	indf2,c
 17629                           
 17630                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
 17631   005380  EFE6  F029         	goto	i2l5815
 17632   005384                     i2l5807:
 17633                           
 17634                           ;dc_motor.c: 172:         mL->power+=10;
 17635   005384  C014  FFD9         	movff	i2timed_forward@mL,fsr2l
 17636   005388  C015  FFDA         	movff	i2timed_forward@mL+1,fsr2h
 17637   00538C  0E0A               	movlw	10
 17638   00538E  26DF               	addwf	indf2,f,c
 17639                           
 17640                           ;dc_motor.c: 173:         mR->power+=10;
 17641   005390  C016  FFD9         	movff	i2timed_forward@mR,fsr2l
 17642   005394  C017  FFDA         	movff	i2timed_forward@mR+1,fsr2h
 17643   005398  0E0A               	movlw	10
 17644   00539A  26DF               	addwf	indf2,f,c
 17645   00539C                     
 17646                           ;dc_motor.c: 175:         setMotorPWM(mL);
 17647   00539C  C014  F00E         	movff	i2timed_forward@mL,i2setMotorPWM@m
 17648   0053A0  C015  F00F         	movff	i2timed_forward@mL+1,i2setMotorPWM@m+1
 17649   0053A4  EC54  F026         	call	i2_setMotorPWM	;wreg free
 17650   0053A8                     
 17651                           ;dc_motor.c: 176:         setMotorPWM(mR);
 17652   0053A8  C016  F00E         	movff	i2timed_forward@mR,i2setMotorPWM@m
 17653   0053AC  C017  F00F         	movff	i2timed_forward@mR+1,i2setMotorPWM@m+1
 17654   0053B0  EC54  F026         	call	i2_setMotorPWM	;wreg free
 17655   0053B4                     
 17656                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
 17657   0053B4  0E02               	movlw	2
 17658   0053B6  6E1B               	movwf	(??i2_timed_forward+1)^0,c
 17659   0053B8  0EA0               	movlw	160
 17660   0053BA  6E1A               	movwf	??i2_timed_forward^0,c
 17661   0053BC  0E92               	movlw	146
 17662   0053BE                     i2u682_47:
 17663   0053BE  2EE8               	decfsz	wreg,f,c
 17664   0053C0  D7FE               	bra	i2u682_47
 17665   0053C2  2E1A               	decfsz	??i2_timed_forward^0,f,c
 17666   0053C4  D7FC               	bra	i2u682_47
 17667   0053C6  2E1B               	decfsz	(??i2_timed_forward+1)^0,f,c
 17668   0053C8  D7FA               	bra	i2u682_47
 17669   0053CA  D000               	nop2	
 17670   0053CC                     i2l5815:
 17671                           
 17672                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
 17673   0053CC  C014  FFD9         	movff	i2timed_forward@mL,fsr2l
 17674   0053D0  C015  FFDA         	movff	i2timed_forward@mL+1,fsr2h
 17675   0053D4  50DF               	movf	indf2,w,c
 17676   0053D6  6E1A               	movwf	??i2_timed_forward^0,c
 17677   0053D8  6A1B               	clrf	(??i2_timed_forward+1)^0,c
 17678   0053DA  5058               	movf	_power^0,w,c
 17679   0053DC  5C1A               	subwf	??i2_timed_forward^0,w,c
 17680   0053DE  501B               	movf	(??i2_timed_forward+1)^0,w,c
 17681   0053E0  0A80               	xorlw	128
 17682   0053E2  6E1C               	movwf	(??i2_timed_forward+2)^0,c
 17683   0053E4  5059               	movf	(_power+1)^0,w,c
 17684   0053E6  0A80               	xorlw	128
 17685   0053E8  581C               	subwfb	(??i2_timed_forward+2)^0,w,c
 17686   0053EA  B0D8               	btfsc	status,0,c
 17687   0053EC  EFFA  F029         	goto	i2u572_41
 17688   0053F0  EFFC  F029         	goto	i2u572_40
 17689   0053F4                     i2u572_41:
 17690   0053F4  EF12  F02A         	goto	i2l5819
 17691   0053F8                     i2u572_40:
 17692   0053F8  C016  FFD9         	movff	i2timed_forward@mR,fsr2l
 17693   0053FC  C017  FFDA         	movff	i2timed_forward@mR+1,fsr2h
 17694   005400  50DF               	movf	indf2,w,c
 17695   005402  6E1A               	movwf	??i2_timed_forward^0,c
 17696   005404  6A1B               	clrf	(??i2_timed_forward+1)^0,c
 17697   005406  5058               	movf	_power^0,w,c
 17698   005408  5C1A               	subwf	??i2_timed_forward^0,w,c
 17699   00540A  501B               	movf	(??i2_timed_forward+1)^0,w,c
 17700   00540C  0A80               	xorlw	128
 17701   00540E  6E1C               	movwf	(??i2_timed_forward+2)^0,c
 17702   005410  5059               	movf	(_power+1)^0,w,c
 17703   005412  0A80               	xorlw	128
 17704   005414  581C               	subwfb	(??i2_timed_forward+2)^0,w,c
 17705   005416  A0D8               	btfss	status,0,c
 17706   005418  EF10  F02A         	goto	i2u573_41
 17707   00541C  EF12  F02A         	goto	i2u573_40
 17708   005420                     i2u573_41:
 17709   005420  EFC2  F029         	goto	i2l5807
 17710   005424                     i2u573_40:
 17711   005424                     i2l5819:
 17712                           
 17713                           ;dc_motor.c: 181:     delayed_ms(time);
 17714   005424  C018  F001         	movff	i2timed_forward@time,i2delayed_ms@time
 17715   005428  C019  F002         	movff	i2timed_forward@time+1,i2delayed_ms@time+1
 17716   00542C  EC2B  F038         	call	i2_delayed_ms	;wreg free
 17717   005430  0012               	return		;funcret
 17718   005432                     __end_ofi2_timed_forward:
 17719                           	callstack 0
 17720                           
 17721 ;; *************** function i2_ReverseYellow *****************
 17722 ;; Defined at:
 17723 ;;		line 334 in file "dc_motor.c"
 17724 ;; Parameters:    Size  Location     Type
 17725 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 17726 ;;		 -> motorL(9), 
 17727 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 17728 ;;		 -> motorR(9), 
 17729 ;; Auto vars:     Size  Location     Type
 17730 ;;		None
 17731 ;; Return value:  Size  Location     Type
 17732 ;;                  1    wreg      void 
 17733 ;; Registers used:
 17734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17735 ;; Tracked objects:
 17736 ;;		On entry : 0/0
 17737 ;;		On exit  : 0/0
 17738 ;;		Unchanged: 0/0
 17739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17744 ;;Total ram usage:        4 bytes
 17745 ;; Hardware stack levels used: 1
 17746 ;; Hardware stack levels required when called: 4
 17747 ;; This function calls:
 17748 ;;		i2_ForwardOneBlock
 17749 ;;		i2_reverseDetect
 17750 ;;		i2_turnRight45
 17751 ;; This function is called by:
 17752 ;;		i2_go_Home
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text83
 17757   005D9C                     __ptext83:
 17758                           	callstack 0
 17759   005D9C                     i2_ReverseYellow:
 17760                           	callstack 16
 17761   005D9C                     
 17762                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
 17763   005D9C  0EC3               	movlw	low _motorL
 17764   005D9E  6E1B               	movwf	i2reverseDetect@mL^0,c
 17765   005DA0  0E01               	movlw	high _motorL
 17766   005DA2  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17767   005DA4  0EBA               	movlw	low _motorR
 17768   005DA6  6E1D               	movwf	i2reverseDetect@mR^0,c
 17769   005DA8  0E01               	movlw	high _motorR
 17770   005DAA  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17771   005DAC  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17772                           
 17773                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
 17774   005DB0  0EC3               	movlw	low _motorL
 17775   005DB2  6E1B               	movwf	i2turnRight45@mL^0,c
 17776   005DB4  0E01               	movlw	high _motorL
 17777   005DB6  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17778   005DB8  0EBA               	movlw	low _motorR
 17779   005DBA  6E1D               	movwf	i2turnRight45@mR^0,c
 17780   005DBC  0E01               	movlw	high _motorR
 17781   005DBE  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17782   005DC0  EC9C  F036         	call	i2_turnRight45	;wreg free
 17783                           
 17784                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
 17785   005DC4  0EC3               	movlw	low _motorL
 17786   005DC6  6E1B               	movwf	i2turnRight45@mL^0,c
 17787   005DC8  0E01               	movlw	high _motorL
 17788   005DCA  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17789   005DCC  0EBA               	movlw	low _motorR
 17790   005DCE  6E1D               	movwf	i2turnRight45@mR^0,c
 17791   005DD0  0E01               	movlw	high _motorR
 17792   005DD2  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17793   005DD4  EC9C  F036         	call	i2_turnRight45	;wreg free
 17794                           
 17795                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
 17796   005DD8  0EC3               	movlw	low _motorL
 17797   005DDA  6E1B               	movwf	i2ForwardOneBlock@mL^0,c
 17798   005DDC  0E01               	movlw	high _motorL
 17799   005DDE  6E1C               	movwf	(i2ForwardOneBlock@mL+1)^0,c
 17800   005DE0  0EBA               	movlw	low _motorR
 17801   005DE2  6E1D               	movwf	i2ForwardOneBlock@mR^0,c
 17802   005DE4  0E01               	movlw	high _motorR
 17803   005DE6  6E1E               	movwf	(i2ForwardOneBlock@mR+1)^0,c
 17804   005DE8  EC4E  F036         	call	i2_ForwardOneBlock	;wreg free
 17805                           
 17806                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
 17807   005DEC  0EC3               	movlw	low _motorL
 17808   005DEE  6E1B               	movwf	i2reverseDetect@mL^0,c
 17809   005DF0  0E01               	movlw	high _motorL
 17810   005DF2  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17811   005DF4  0EBA               	movlw	low _motorR
 17812   005DF6  6E1D               	movwf	i2reverseDetect@mR^0,c
 17813   005DF8  0E01               	movlw	high _motorR
 17814   005DFA  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17815   005DFC  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17816                           
 17817                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
 17818   005E00  0EC3               	movlw	low _motorL
 17819   005E02  6E1B               	movwf	i2turnRight45@mL^0,c
 17820   005E04  0E01               	movlw	high _motorL
 17821   005E06  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17822   005E08  0EBA               	movlw	low _motorR
 17823   005E0A  6E1D               	movwf	i2turnRight45@mR^0,c
 17824   005E0C  0E01               	movlw	high _motorR
 17825   005E0E  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17826   005E10  EC9C  F036         	call	i2_turnRight45	;wreg free
 17827                           
 17828                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
 17829   005E14  0EC3               	movlw	low _motorL
 17830   005E16  6E1B               	movwf	i2turnRight45@mL^0,c
 17831   005E18  0E01               	movlw	high _motorL
 17832   005E1A  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17833   005E1C  0EBA               	movlw	low _motorR
 17834   005E1E  6E1D               	movwf	i2turnRight45@mR^0,c
 17835   005E20  0E01               	movlw	high _motorR
 17836   005E22  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17837   005E24  EC9C  F036         	call	i2_turnRight45	;wreg free
 17838                           
 17839                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
 17840   005E28  0EC3               	movlw	low _motorL
 17841   005E2A  6E1B               	movwf	i2turnRight45@mL^0,c
 17842   005E2C  0E01               	movlw	high _motorL
 17843   005E2E  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17844   005E30  0EBA               	movlw	low _motorR
 17845   005E32  6E1D               	movwf	i2turnRight45@mR^0,c
 17846   005E34  0E01               	movlw	high _motorR
 17847   005E36  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17848   005E38  EC9C  F036         	call	i2_turnRight45	;wreg free
 17849                           
 17850                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
 17851   005E3C  0EC3               	movlw	low _motorL
 17852   005E3E  6E1B               	movwf	i2turnRight45@mL^0,c
 17853   005E40  0E01               	movlw	high _motorL
 17854   005E42  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 17855   005E44  0EBA               	movlw	low _motorR
 17856   005E46  6E1D               	movwf	i2turnRight45@mR^0,c
 17857   005E48  0E01               	movlw	high _motorR
 17858   005E4A  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 17859   005E4C  EC9C  F036         	call	i2_turnRight45	;wreg free
 17860   005E50  0012               	return		;funcret
 17861   005E52                     __end_ofi2_ReverseYellow:
 17862                           	callstack 0
 17863                           
 17864 ;; *************** function i2_ReversePink *****************
 17865 ;; Defined at:
 17866 ;;		line 345 in file "dc_motor.c"
 17867 ;; Parameters:    Size  Location     Type
 17868 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 17869 ;;		 -> motorL(9), 
 17870 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 17871 ;;		 -> motorR(9), 
 17872 ;; Auto vars:     Size  Location     Type
 17873 ;;		None
 17874 ;; Return value:  Size  Location     Type
 17875 ;;                  1    wreg      void 
 17876 ;; Registers used:
 17877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17878 ;; Tracked objects:
 17879 ;;		On entry : 0/0
 17880 ;;		On exit  : 0/0
 17881 ;;		Unchanged: 0/0
 17882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17887 ;;Total ram usage:        4 bytes
 17888 ;; Hardware stack levels used: 1
 17889 ;; Hardware stack levels required when called: 4
 17890 ;; This function calls:
 17891 ;;		i2_ForwardOneBlock
 17892 ;;		i2_reverseDetect
 17893 ;;		i2_turnLeft45
 17894 ;; This function is called by:
 17895 ;;		i2_go_Home
 17896 ;; This function uses a non-reentrant model
 17897 ;;
 17898                           
 17899                           	psect	text84
 17900   005E52                     __ptext84:
 17901                           	callstack 0
 17902   005E52                     i2_ReversePink:
 17903                           	callstack 16
 17904   005E52                     
 17905                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
 17906   005E52  0EC3               	movlw	low _motorL
 17907   005E54  6E1B               	movwf	i2reverseDetect@mL^0,c
 17908   005E56  0E01               	movlw	high _motorL
 17909   005E58  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17910   005E5A  0EBA               	movlw	low _motorR
 17911   005E5C  6E1D               	movwf	i2reverseDetect@mR^0,c
 17912   005E5E  0E01               	movlw	high _motorR
 17913   005E60  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17914   005E62  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17915                           
 17916                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
 17917   005E66  0EC3               	movlw	low _motorL
 17918   005E68  6E1B               	movwf	i2turnLeft45@mL^0,c
 17919   005E6A  0E01               	movlw	high _motorL
 17920   005E6C  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17921   005E6E  0EBA               	movlw	low _motorR
 17922   005E70  6E1D               	movwf	i2turnLeft45@mR^0,c
 17923   005E72  0E01               	movlw	high _motorR
 17924   005E74  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 17925   005E76  EC75  F036         	call	i2_turnLeft45	;wreg free
 17926                           
 17927                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
 17928   005E7A  0EC3               	movlw	low _motorL
 17929   005E7C  6E1B               	movwf	i2turnLeft45@mL^0,c
 17930   005E7E  0E01               	movlw	high _motorL
 17931   005E80  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17932   005E82  0EBA               	movlw	low _motorR
 17933   005E84  6E1D               	movwf	i2turnLeft45@mR^0,c
 17934   005E86  0E01               	movlw	high _motorR
 17935   005E88  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 17936   005E8A  EC75  F036         	call	i2_turnLeft45	;wreg free
 17937                           
 17938                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
 17939   005E8E  0EC3               	movlw	low _motorL
 17940   005E90  6E1B               	movwf	i2ForwardOneBlock@mL^0,c
 17941   005E92  0E01               	movlw	high _motorL
 17942   005E94  6E1C               	movwf	(i2ForwardOneBlock@mL+1)^0,c
 17943   005E96  0EBA               	movlw	low _motorR
 17944   005E98  6E1D               	movwf	i2ForwardOneBlock@mR^0,c
 17945   005E9A  0E01               	movlw	high _motorR
 17946   005E9C  6E1E               	movwf	(i2ForwardOneBlock@mR+1)^0,c
 17947   005E9E  EC4E  F036         	call	i2_ForwardOneBlock	;wreg free
 17948                           
 17949                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
 17950   005EA2  0EC3               	movlw	low _motorL
 17951   005EA4  6E1B               	movwf	i2reverseDetect@mL^0,c
 17952   005EA6  0E01               	movlw	high _motorL
 17953   005EA8  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 17954   005EAA  0EBA               	movlw	low _motorR
 17955   005EAC  6E1D               	movwf	i2reverseDetect@mR^0,c
 17956   005EAE  0E01               	movlw	high _motorR
 17957   005EB0  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 17958   005EB2  ECE3  F033         	call	i2_reverseDetect	;wreg free
 17959                           
 17960                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
 17961   005EB6  0EC3               	movlw	low _motorL
 17962   005EB8  6E1B               	movwf	i2turnLeft45@mL^0,c
 17963   005EBA  0E01               	movlw	high _motorL
 17964   005EBC  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17965   005EBE  0EBA               	movlw	low _motorR
 17966   005EC0  6E1D               	movwf	i2turnLeft45@mR^0,c
 17967   005EC2  0E01               	movlw	high _motorR
 17968   005EC4  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 17969   005EC6  EC75  F036         	call	i2_turnLeft45	;wreg free
 17970                           
 17971                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
 17972   005ECA  0EC3               	movlw	low _motorL
 17973   005ECC  6E1B               	movwf	i2turnLeft45@mL^0,c
 17974   005ECE  0E01               	movlw	high _motorL
 17975   005ED0  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17976   005ED2  0EBA               	movlw	low _motorR
 17977   005ED4  6E1D               	movwf	i2turnLeft45@mR^0,c
 17978   005ED6  0E01               	movlw	high _motorR
 17979   005ED8  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 17980   005EDA  EC75  F036         	call	i2_turnLeft45	;wreg free
 17981                           
 17982                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
 17983   005EDE  0EC3               	movlw	low _motorL
 17984   005EE0  6E1B               	movwf	i2turnLeft45@mL^0,c
 17985   005EE2  0E01               	movlw	high _motorL
 17986   005EE4  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17987   005EE6  0EBA               	movlw	low _motorR
 17988   005EE8  6E1D               	movwf	i2turnLeft45@mR^0,c
 17989   005EEA  0E01               	movlw	high _motorR
 17990   005EEC  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 17991   005EEE  EC75  F036         	call	i2_turnLeft45	;wreg free
 17992                           
 17993                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
 17994   005EF2  0EC3               	movlw	low _motorL
 17995   005EF4  6E1B               	movwf	i2turnLeft45@mL^0,c
 17996   005EF6  0E01               	movlw	high _motorL
 17997   005EF8  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 17998   005EFA  0EBA               	movlw	low _motorR
 17999   005EFC  6E1D               	movwf	i2turnLeft45@mR^0,c
 18000   005EFE  0E01               	movlw	high _motorR
 18001   005F00  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18002   005F02  EC75  F036         	call	i2_turnLeft45	;wreg free
 18003   005F06  0012               	return		;funcret
 18004   005F08                     __end_ofi2_ReversePink:
 18005                           	callstack 0
 18006                           
 18007 ;; *************** function i2_ForwardOneBlock *****************
 18008 ;; Defined at:
 18009 ;;		line 238 in file "dc_motor.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 18012 ;;		 -> motorL(9), 
 18013 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 18014 ;;		 -> motorR(9), 
 18015 ;; Auto vars:     Size  Location     Type
 18016 ;;		None
 18017 ;; Return value:  Size  Location     Type
 18018 ;;                  1    wreg      void 
 18019 ;; Registers used:
 18020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18021 ;; Tracked objects:
 18022 ;;		On entry : 0/0
 18023 ;;		On exit  : 0/0
 18024 ;;		Unchanged: 0/0
 18025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18030 ;;Total ram usage:        6 bytes
 18031 ;; Hardware stack levels used: 1
 18032 ;; Hardware stack levels required when called: 3
 18033 ;; This function calls:
 18034 ;;		i2_delayed_ms
 18035 ;;		i2_fullSpeedAhead
 18036 ;;		i2_stop
 18037 ;; This function is called by:
 18038 ;;		i2_ReverseYellow
 18039 ;;		i2_ReversePink
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text85
 18044   006C9C                     __ptext85:
 18045                           	callstack 0
 18046   006C9C                     i2_ForwardOneBlock:
 18047                           	callstack 16
 18048   006C9C                     
 18049                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
 18050   006C9C  C01B  F014         	movff	i2ForwardOneBlock@mL,i2fullSpeedAhead@mL
 18051   006CA0  C01C  F015         	movff	i2ForwardOneBlock@mL+1,i2fullSpeedAhead@mL+1
 18052   006CA4  C01D  F016         	movff	i2ForwardOneBlock@mR,i2fullSpeedAhead@mR
 18053   006CA8  C01E  F017         	movff	i2ForwardOneBlock@mR+1,i2fullSpeedAhead@mR+1
 18054   006CAC  EC42  F02D         	call	i2_fullSpeedAhead	;wreg free
 18055   006CB0                     
 18056                           ;dc_motor.c: 240:     delayed_ms(RunOneBlockTime);
 18057   006CB0  C054  F001         	movff	_RunOneBlockTime,i2delayed_ms@time
 18058   006CB4  C055  F002         	movff	_RunOneBlockTime+1,i2delayed_ms@time+1
 18059   006CB8  EC2B  F038         	call	i2_delayed_ms	;wreg free
 18060   006CBC                     
 18061                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
 18062   006CBC  0EC3               	movlw	low _motorL
 18063   006CBE  6E14               	movwf	i2stop@mL^0,c
 18064   006CC0  0E01               	movlw	high _motorL
 18065   006CC2  6E15               	movwf	(i2stop@mL+1)^0,c
 18066   006CC4  0EBA               	movlw	low _motorR
 18067   006CC6  6E16               	movwf	i2stop@mR^0,c
 18068   006CC8  0E01               	movlw	high _motorR
 18069   006CCA  6E17               	movwf	(i2stop@mR+1)^0,c
 18070   006CCC  ECE0  F030         	call	i2_stop	;wreg free
 18071   006CD0                     
 18072                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
 18073   006CD0  0E05               	movlw	5
 18074   006CD2  6E20               	movwf	(??i2_ForwardOneBlock+1)^0,c
 18075   006CD4  0E0F               	movlw	15
 18076   006CD6  6E1F               	movwf	??i2_ForwardOneBlock^0,c
 18077   006CD8  0EF1               	movlw	241
 18078   006CDA                     i2u683_47:
 18079   006CDA  2EE8               	decfsz	wreg,f,c
 18080   006CDC  D7FE               	bra	i2u683_47
 18081   006CDE  2E1F               	decfsz	??i2_ForwardOneBlock^0,f,c
 18082   006CE0  D7FC               	bra	i2u683_47
 18083   006CE2  2E20               	decfsz	(??i2_ForwardOneBlock+1)^0,f,c
 18084   006CE4  D7FA               	bra	i2u683_47
 18085   006CE6  F000               	nop	
 18086   006CE8  0012               	return		;funcret
 18087   006CEA                     __end_ofi2_ForwardOneBlock:
 18088                           	callstack 0
 18089                           
 18090 ;; *************** function i2_fullSpeedAhead *****************
 18091 ;; Defined at:
 18092 ;;		line 147 in file "dc_motor.c"
 18093 ;; Parameters:    Size  Location     Type
 18094 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 18095 ;;		 -> motorL(9), 
 18096 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 18097 ;;		 -> motorR(9), 
 18098 ;; Auto vars:     Size  Location     Type
 18099 ;;		None
 18100 ;; Return value:  Size  Location     Type
 18101 ;;                  1    wreg      void 
 18102 ;; Registers used:
 18103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18104 ;; Tracked objects:
 18105 ;;		On entry : 0/0
 18106 ;;		On exit  : 0/0
 18107 ;;		Unchanged: 0/0
 18108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18112 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18113 ;;Total ram usage:        7 bytes
 18114 ;; Hardware stack levels used: 1
 18115 ;; Hardware stack levels required when called: 2
 18116 ;; This function calls:
 18117 ;;		i2_setMotorPWM
 18118 ;; This function is called by:
 18119 ;;		i2_ForwardOneBlock
 18120 ;; This function uses a non-reentrant model
 18121 ;;
 18122                           
 18123                           	psect	text86
 18124   005A84                     __ptext86:
 18125                           	callstack 0
 18126   005A84                     i2_fullSpeedAhead:
 18127                           	callstack 16
 18128   005A84                     
 18129                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 18130   005A84  EE20 F001          	lfsr	2,1
 18131   005A88  5014               	movf	i2fullSpeedAhead@mL^0,w,c
 18132   005A8A  26D9               	addwf	fsr2l,f,c
 18133   005A8C  5015               	movf	(i2fullSpeedAhead@mL+1)^0,w,c
 18134   005A8E  22DA               	addwfc	fsr2h,f,c
 18135   005A90  0E01               	movlw	1
 18136   005A92  6EDF               	movwf	indf2,c
 18137                           
 18138                           ;dc_motor.c: 151:     mR->direction =1;
 18139   005A94  EE20 F001          	lfsr	2,1
 18140   005A98  5016               	movf	i2fullSpeedAhead@mR^0,w,c
 18141   005A9A  26D9               	addwf	fsr2l,f,c
 18142   005A9C  5017               	movf	(i2fullSpeedAhead@mR+1)^0,w,c
 18143   005A9E  22DA               	addwfc	fsr2h,f,c
 18144   005AA0  0E01               	movlw	1
 18145   005AA2  6EDF               	movwf	indf2,c
 18146                           
 18147                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 18148   005AA4  EF78  F02D         	goto	i2l5423
 18149   005AA8                     i2l5415:
 18150                           
 18151                           ;dc_motor.c: 154:         mL->power+=10;
 18152   005AA8  C014  FFD9         	movff	i2fullSpeedAhead@mL,fsr2l
 18153   005AAC  C015  FFDA         	movff	i2fullSpeedAhead@mL+1,fsr2h
 18154   005AB0  0E0A               	movlw	10
 18155   005AB2  26DF               	addwf	indf2,f,c
 18156                           
 18157                           ;dc_motor.c: 155:         mR->power+=10;
 18158   005AB4  C016  FFD9         	movff	i2fullSpeedAhead@mR,fsr2l
 18159   005AB8  C017  FFDA         	movff	i2fullSpeedAhead@mR+1,fsr2h
 18160   005ABC  0E0A               	movlw	10
 18161   005ABE  26DF               	addwf	indf2,f,c
 18162   005AC0                     
 18163                           ;dc_motor.c: 157:         setMotorPWM(mL);
 18164   005AC0  C014  F00E         	movff	i2fullSpeedAhead@mL,i2setMotorPWM@m
 18165   005AC4  C015  F00F         	movff	i2fullSpeedAhead@mL+1,i2setMotorPWM@m+1
 18166   005AC8  EC54  F026         	call	i2_setMotorPWM	;wreg free
 18167   005ACC                     
 18168                           ;dc_motor.c: 158:         setMotorPWM(mR);
 18169   005ACC  C016  F00E         	movff	i2fullSpeedAhead@mR,i2setMotorPWM@m
 18170   005AD0  C017  F00F         	movff	i2fullSpeedAhead@mR+1,i2setMotorPWM@m+1
 18171   005AD4  EC54  F026         	call	i2_setMotorPWM	;wreg free
 18172   005AD8                     
 18173                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 18174   005AD8  0E02               	movlw	2
 18175   005ADA  6E19               	movwf	(??i2_fullSpeedAhead+1)^0,c
 18176   005ADC  0EA0               	movlw	160
 18177   005ADE  6E18               	movwf	??i2_fullSpeedAhead^0,c
 18178   005AE0  0E92               	movlw	146
 18179   005AE2                     i2u684_47:
 18180   005AE2  2EE8               	decfsz	wreg,f,c
 18181   005AE4  D7FE               	bra	i2u684_47
 18182   005AE6  2E18               	decfsz	??i2_fullSpeedAhead^0,f,c
 18183   005AE8  D7FC               	bra	i2u684_47
 18184   005AEA  2E19               	decfsz	(??i2_fullSpeedAhead+1)^0,f,c
 18185   005AEC  D7FA               	bra	i2u684_47
 18186   005AEE  D000               	nop2	
 18187   005AF0                     i2l5423:
 18188                           
 18189                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 18190   005AF0  C014  FFD9         	movff	i2fullSpeedAhead@mL,fsr2l
 18191   005AF4  C015  FFDA         	movff	i2fullSpeedAhead@mL+1,fsr2h
 18192   005AF8  50DF               	movf	indf2,w,c
 18193   005AFA  6E18               	movwf	??i2_fullSpeedAhead^0,c
 18194   005AFC  6A19               	clrf	(??i2_fullSpeedAhead+1)^0,c
 18195   005AFE  5058               	movf	_power^0,w,c
 18196   005B00  5C18               	subwf	??i2_fullSpeedAhead^0,w,c
 18197   005B02  5019               	movf	(??i2_fullSpeedAhead+1)^0,w,c
 18198   005B04  0A80               	xorlw	128
 18199   005B06  6E1A               	movwf	(??i2_fullSpeedAhead+2)^0,c
 18200   005B08  5059               	movf	(_power+1)^0,w,c
 18201   005B0A  0A80               	xorlw	128
 18202   005B0C  581A               	subwfb	(??i2_fullSpeedAhead+2)^0,w,c
 18203   005B0E  B0D8               	btfsc	status,0,c
 18204   005B10  EF8C  F02D         	goto	i2u540_41
 18205   005B14  EF8E  F02D         	goto	i2u540_40
 18206   005B18                     i2u540_41:
 18207   005B18  EFA4  F02D         	goto	i2l566
 18208   005B1C                     i2u540_40:
 18209   005B1C  C016  FFD9         	movff	i2fullSpeedAhead@mR,fsr2l
 18210   005B20  C017  FFDA         	movff	i2fullSpeedAhead@mR+1,fsr2h
 18211   005B24  50DF               	movf	indf2,w,c
 18212   005B26  6E18               	movwf	??i2_fullSpeedAhead^0,c
 18213   005B28  6A19               	clrf	(??i2_fullSpeedAhead+1)^0,c
 18214   005B2A  5058               	movf	_power^0,w,c
 18215   005B2C  5C18               	subwf	??i2_fullSpeedAhead^0,w,c
 18216   005B2E  5019               	movf	(??i2_fullSpeedAhead+1)^0,w,c
 18217   005B30  0A80               	xorlw	128
 18218   005B32  6E1A               	movwf	(??i2_fullSpeedAhead+2)^0,c
 18219   005B34  5059               	movf	(_power+1)^0,w,c
 18220   005B36  0A80               	xorlw	128
 18221   005B38  581A               	subwfb	(??i2_fullSpeedAhead+2)^0,w,c
 18222   005B3A  A0D8               	btfss	status,0,c
 18223   005B3C  EFA2  F02D         	goto	i2u541_41
 18224   005B40  EFA4  F02D         	goto	i2u541_40
 18225   005B44                     i2u541_41:
 18226   005B44  EF54  F02D         	goto	i2l5415
 18227   005B48                     i2u541_40:
 18228   005B48                     i2l566:
 18229   005B48  0012               	return		;funcret
 18230   005B4A                     __end_ofi2_fullSpeedAhead:
 18231                           	callstack 0
 18232                           
 18233 ;; *************** function i2_delayed_ms *****************
 18234 ;; Defined at:
 18235 ;;		line 39 in file "timers.c"
 18236 ;; Parameters:    Size  Location     Type
 18237 ;;  time            2    0[COMRAM] int 
 18238 ;; Auto vars:     Size  Location     Type
 18239 ;;  i               2    3[COMRAM] unsigned int 
 18240 ;; Return value:  Size  Location     Type
 18241 ;;                  1    wreg      void 
 18242 ;; Registers used:
 18243 ;;		wreg, status,2, status,0
 18244 ;; Tracked objects:
 18245 ;;		On entry : 0/0
 18246 ;;		On exit  : 0/0
 18247 ;;		Unchanged: 0/0
 18248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18253 ;;Total ram usage:        5 bytes
 18254 ;; Hardware stack levels used: 1
 18255 ;; This function calls:
 18256 ;;		Nothing
 18257 ;; This function is called by:
 18258 ;;		i2_timed_forward
 18259 ;;		i2_ForwardOneBlock
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           	psect	text87
 18264   007056                     __ptext87:
 18265                           	callstack 0
 18266   007056                     i2_delayed_ms:
 18267                           	callstack 19
 18268   007056                     
 18269                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
 18270   007056  0E00               	movlw	0
 18271   007058  6E05               	movwf	(i2delayed_ms@i+1)^0,c
 18272   00705A  0E00               	movlw	0
 18273   00705C  6E04               	movwf	i2delayed_ms@i^0,c
 18274   00705E  EF3B  F038         	goto	i2l740
 18275   007062                     i2l5449:
 18276                           
 18277                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
 18278   007062  0E15               	movlw	21
 18279   007064  6E03               	movwf	??i2_delayed_ms^0,c
 18280   007066  0EC6               	movlw	198
 18281   007068                     i2u685_47:
 18282   007068  2EE8               	decfsz	wreg,f,c
 18283   00706A  D7FE               	bra	i2u685_47
 18284   00706C  2E03               	decfsz	??i2_delayed_ms^0,f,c
 18285   00706E  D7FC               	bra	i2u685_47
 18286   007070  D000               	nop2	
 18287   007072                     
 18288                           ;timers.c: 42:     }
 18289   007072  4A04               	infsnz	i2delayed_ms@i^0,f,c
 18290   007074  2A05               	incf	(i2delayed_ms@i+1)^0,f,c
 18291   007076                     i2l740:
 18292   007076  5001               	movf	i2delayed_ms@time^0,w,c
 18293   007078  5C04               	subwf	i2delayed_ms@i^0,w,c
 18294   00707A  5002               	movf	(i2delayed_ms@time+1)^0,w,c
 18295   00707C  5805               	subwfb	(i2delayed_ms@i+1)^0,w,c
 18296   00707E  A0D8               	btfss	status,0,c
 18297   007080  EF44  F038         	goto	i2u545_41
 18298   007084  EF46  F038         	goto	i2u545_40
 18299   007088                     i2u545_41:
 18300   007088  EF31  F038         	goto	i2l5449
 18301   00708C                     i2u545_40:
 18302   00708C  0012               	return		;funcret
 18303   00708E                     __end_ofi2_delayed_ms:
 18304                           	callstack 0
 18305                           
 18306 ;; *************** function i2_RedMove *****************
 18307 ;; Defined at:
 18308 ;;		line 262 in file "dc_motor.c"
 18309 ;; Parameters:    Size  Location     Type
 18310 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 18311 ;;		 -> motorL(9), 
 18312 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 18313 ;;		 -> motorR(9), 
 18314 ;; Auto vars:     Size  Location     Type
 18315 ;;		None
 18316 ;; Return value:  Size  Location     Type
 18317 ;;                  1    wreg      void 
 18318 ;; Registers used:
 18319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18320 ;; Tracked objects:
 18321 ;;		On entry : 0/0
 18322 ;;		On exit  : 0/0
 18323 ;;		Unchanged: 0/0
 18324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18329 ;;Total ram usage:        4 bytes
 18330 ;; Hardware stack levels used: 1
 18331 ;; Hardware stack levels required when called: 4
 18332 ;; This function calls:
 18333 ;;		i2_reverseDetect
 18334 ;;		i2_turnRight45
 18335 ;; This function is called by:
 18336 ;;		i2_go_Home
 18337 ;; This function uses a non-reentrant model
 18338 ;;
 18339                           
 18340                           	psect	text88
 18341   006F64                     __ptext88:
 18342                           	callstack 0
 18343   006F64                     i2_RedMove:
 18344                           	callstack 16
 18345   006F64                     
 18346                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
 18347   006F64  0EC3               	movlw	low _motorL
 18348   006F66  6E1B               	movwf	i2reverseDetect@mL^0,c
 18349   006F68  0E01               	movlw	high _motorL
 18350   006F6A  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 18351   006F6C  0EBA               	movlw	low _motorR
 18352   006F6E  6E1D               	movwf	i2reverseDetect@mR^0,c
 18353   006F70  0E01               	movlw	high _motorR
 18354   006F72  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 18355   006F74  ECE3  F033         	call	i2_reverseDetect	;wreg free
 18356                           
 18357                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
 18358   006F78  0EC3               	movlw	low _motorL
 18359   006F7A  6E1B               	movwf	i2turnRight45@mL^0,c
 18360   006F7C  0E01               	movlw	high _motorL
 18361   006F7E  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18362   006F80  0EBA               	movlw	low _motorR
 18363   006F82  6E1D               	movwf	i2turnRight45@mR^0,c
 18364   006F84  0E01               	movlw	high _motorR
 18365   006F86  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18366   006F88  EC9C  F036         	call	i2_turnRight45	;wreg free
 18367                           
 18368                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
 18369   006F8C  0EC3               	movlw	low _motorL
 18370   006F8E  6E1B               	movwf	i2turnRight45@mL^0,c
 18371   006F90  0E01               	movlw	high _motorL
 18372   006F92  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18373   006F94  0EBA               	movlw	low _motorR
 18374   006F96  6E1D               	movwf	i2turnRight45@mR^0,c
 18375   006F98  0E01               	movlw	high _motorR
 18376   006F9A  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18377   006F9C  EC9C  F036         	call	i2_turnRight45	;wreg free
 18378   006FA0  0012               	return		;funcret
 18379   006FA2                     __end_ofi2_RedMove:
 18380                           	callstack 0
 18381                           
 18382 ;; *************** function i2_OrangeMove *****************
 18383 ;; Defined at:
 18384 ;;		line 308 in file "dc_motor.c"
 18385 ;; Parameters:    Size  Location     Type
 18386 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 18387 ;;		 -> motorL(9), 
 18388 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 18389 ;;		 -> motorR(9), 
 18390 ;; Auto vars:     Size  Location     Type
 18391 ;;		None
 18392 ;; Return value:  Size  Location     Type
 18393 ;;                  1    wreg      void 
 18394 ;; Registers used:
 18395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18396 ;; Tracked objects:
 18397 ;;		On entry : 0/0
 18398 ;;		On exit  : 0/0
 18399 ;;		Unchanged: 0/0
 18400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18405 ;;Total ram usage:        4 bytes
 18406 ;; Hardware stack levels used: 1
 18407 ;; Hardware stack levels required when called: 4
 18408 ;; This function calls:
 18409 ;;		i2_reverseDetect
 18410 ;;		i2_turnRight45
 18411 ;; This function is called by:
 18412 ;;		i2_go_Home
 18413 ;; This function uses a non-reentrant model
 18414 ;;
 18415                           
 18416                           	psect	text89
 18417   006A6A                     __ptext89:
 18418                           	callstack 0
 18419   006A6A                     i2_OrangeMove:
 18420                           	callstack 16
 18421   006A6A                     
 18422                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
 18423   006A6A  0EC3               	movlw	low _motorL
 18424   006A6C  6E1B               	movwf	i2reverseDetect@mL^0,c
 18425   006A6E  0E01               	movlw	high _motorL
 18426   006A70  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 18427   006A72  0EBA               	movlw	low _motorR
 18428   006A74  6E1D               	movwf	i2reverseDetect@mR^0,c
 18429   006A76  0E01               	movlw	high _motorR
 18430   006A78  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 18431   006A7A  ECE3  F033         	call	i2_reverseDetect	;wreg free
 18432                           
 18433                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
 18434   006A7E  0EC3               	movlw	low _motorL
 18435   006A80  6E1B               	movwf	i2turnRight45@mL^0,c
 18436   006A82  0E01               	movlw	high _motorL
 18437   006A84  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18438   006A86  0EBA               	movlw	low _motorR
 18439   006A88  6E1D               	movwf	i2turnRight45@mR^0,c
 18440   006A8A  0E01               	movlw	high _motorR
 18441   006A8C  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18442   006A8E  EC9C  F036         	call	i2_turnRight45	;wreg free
 18443                           
 18444                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
 18445   006A92  0EC3               	movlw	low _motorL
 18446   006A94  6E1B               	movwf	i2turnRight45@mL^0,c
 18447   006A96  0E01               	movlw	high _motorL
 18448   006A98  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18449   006A9A  0EBA               	movlw	low _motorR
 18450   006A9C  6E1D               	movwf	i2turnRight45@mR^0,c
 18451   006A9E  0E01               	movlw	high _motorR
 18452   006AA0  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18453   006AA2  EC9C  F036         	call	i2_turnRight45	;wreg free
 18454                           
 18455                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
 18456   006AA6  0EC3               	movlw	low _motorL
 18457   006AA8  6E1B               	movwf	i2turnRight45@mL^0,c
 18458   006AAA  0E01               	movlw	high _motorL
 18459   006AAC  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18460   006AAE  0EBA               	movlw	low _motorR
 18461   006AB0  6E1D               	movwf	i2turnRight45@mR^0,c
 18462   006AB2  0E01               	movlw	high _motorR
 18463   006AB4  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18464   006AB6  EC9C  F036         	call	i2_turnRight45	;wreg free
 18465   006ABA  0012               	return		;funcret
 18466   006ABC                     __end_ofi2_OrangeMove:
 18467                           	callstack 0
 18468                           
 18469 ;; *************** function i2_LightBlueMove *****************
 18470 ;; Defined at:
 18471 ;;		line 317 in file "dc_motor.c"
 18472 ;; Parameters:    Size  Location     Type
 18473 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 18474 ;;		 -> motorL(9), 
 18475 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 18476 ;;		 -> motorR(9), 
 18477 ;; Auto vars:     Size  Location     Type
 18478 ;;		None
 18479 ;; Return value:  Size  Location     Type
 18480 ;;                  1    wreg      void 
 18481 ;; Registers used:
 18482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18483 ;; Tracked objects:
 18484 ;;		On entry : 0/0
 18485 ;;		On exit  : 0/0
 18486 ;;		Unchanged: 0/0
 18487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18492 ;;Total ram usage:        4 bytes
 18493 ;; Hardware stack levels used: 1
 18494 ;; Hardware stack levels required when called: 4
 18495 ;; This function calls:
 18496 ;;		i2_reverseDetect
 18497 ;;		i2_turnLeft45
 18498 ;; This function is called by:
 18499 ;;		i2_go_Home
 18500 ;; This function uses a non-reentrant model
 18501 ;;
 18502                           
 18503                           	psect	text90
 18504   006ABC                     __ptext90:
 18505                           	callstack 0
 18506   006ABC                     i2_LightBlueMove:
 18507                           	callstack 16
 18508   006ABC                     
 18509                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
 18510   006ABC  0EC3               	movlw	low _motorL
 18511   006ABE  6E1B               	movwf	i2reverseDetect@mL^0,c
 18512   006AC0  0E01               	movlw	high _motorL
 18513   006AC2  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 18514   006AC4  0EBA               	movlw	low _motorR
 18515   006AC6  6E1D               	movwf	i2reverseDetect@mR^0,c
 18516   006AC8  0E01               	movlw	high _motorR
 18517   006ACA  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 18518   006ACC  ECE3  F033         	call	i2_reverseDetect	;wreg free
 18519                           
 18520                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
 18521   006AD0  0EC3               	movlw	low _motorL
 18522   006AD2  6E1B               	movwf	i2turnLeft45@mL^0,c
 18523   006AD4  0E01               	movlw	high _motorL
 18524   006AD6  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 18525   006AD8  0EBA               	movlw	low _motorR
 18526   006ADA  6E1D               	movwf	i2turnLeft45@mR^0,c
 18527   006ADC  0E01               	movlw	high _motorR
 18528   006ADE  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18529   006AE0  EC75  F036         	call	i2_turnLeft45	;wreg free
 18530                           
 18531                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
 18532   006AE4  0EC3               	movlw	low _motorL
 18533   006AE6  6E1B               	movwf	i2turnLeft45@mL^0,c
 18534   006AE8  0E01               	movlw	high _motorL
 18535   006AEA  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 18536   006AEC  0EBA               	movlw	low _motorR
 18537   006AEE  6E1D               	movwf	i2turnLeft45@mR^0,c
 18538   006AF0  0E01               	movlw	high _motorR
 18539   006AF2  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18540   006AF4  EC75  F036         	call	i2_turnLeft45	;wreg free
 18541                           
 18542                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
 18543   006AF8  0EC3               	movlw	low _motorL
 18544   006AFA  6E1B               	movwf	i2turnLeft45@mL^0,c
 18545   006AFC  0E01               	movlw	high _motorL
 18546   006AFE  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 18547   006B00  0EBA               	movlw	low _motorR
 18548   006B02  6E1D               	movwf	i2turnLeft45@mR^0,c
 18549   006B04  0E01               	movlw	high _motorR
 18550   006B06  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18551   006B08  EC75  F036         	call	i2_turnLeft45	;wreg free
 18552   006B0C  0012               	return		;funcret
 18553   006B0E                     __end_ofi2_LightBlueMove:
 18554                           	callstack 0
 18555                           
 18556 ;; *************** function i2_GreenMove *****************
 18557 ;; Defined at:
 18558 ;;		line 270 in file "dc_motor.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 18561 ;;		 -> motorL(9), 
 18562 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 18563 ;;		 -> motorR(9), 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;		None
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  1    wreg      void 
 18568 ;; Registers used:
 18569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18579 ;;Total ram usage:        4 bytes
 18580 ;; Hardware stack levels used: 1
 18581 ;; Hardware stack levels required when called: 4
 18582 ;; This function calls:
 18583 ;;		i2_reverseDetect
 18584 ;;		i2_turnLeft45
 18585 ;; This function is called by:
 18586 ;;		i2_go_Home
 18587 ;; This function uses a non-reentrant model
 18588 ;;
 18589                           
 18590                           	psect	text91
 18591   006FA2                     __ptext91:
 18592                           	callstack 0
 18593   006FA2                     i2_GreenMove:
 18594                           	callstack 16
 18595   006FA2                     
 18596                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
 18597   006FA2  0EC3               	movlw	low _motorL
 18598   006FA4  6E1B               	movwf	i2reverseDetect@mL^0,c
 18599   006FA6  0E01               	movlw	high _motorL
 18600   006FA8  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 18601   006FAA  0EBA               	movlw	low _motorR
 18602   006FAC  6E1D               	movwf	i2reverseDetect@mR^0,c
 18603   006FAE  0E01               	movlw	high _motorR
 18604   006FB0  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 18605   006FB2  ECE3  F033         	call	i2_reverseDetect	;wreg free
 18606                           
 18607                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
 18608   006FB6  0EC3               	movlw	low _motorL
 18609   006FB8  6E1B               	movwf	i2turnLeft45@mL^0,c
 18610   006FBA  0E01               	movlw	high _motorL
 18611   006FBC  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 18612   006FBE  0EBA               	movlw	low _motorR
 18613   006FC0  6E1D               	movwf	i2turnLeft45@mR^0,c
 18614   006FC2  0E01               	movlw	high _motorR
 18615   006FC4  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18616   006FC6  EC75  F036         	call	i2_turnLeft45	;wreg free
 18617                           
 18618                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
 18619   006FCA  0EC3               	movlw	low _motorL
 18620   006FCC  6E1B               	movwf	i2turnLeft45@mL^0,c
 18621   006FCE  0E01               	movlw	high _motorL
 18622   006FD0  6E1C               	movwf	(i2turnLeft45@mL+1)^0,c
 18623   006FD2  0EBA               	movlw	low _motorR
 18624   006FD4  6E1D               	movwf	i2turnLeft45@mR^0,c
 18625   006FD6  0E01               	movlw	high _motorR
 18626   006FD8  6E1E               	movwf	(i2turnLeft45@mR+1)^0,c
 18627   006FDA  EC75  F036         	call	i2_turnLeft45	;wreg free
 18628   006FDE  0012               	return		;funcret
 18629   006FE0                     __end_ofi2_GreenMove:
 18630                           	callstack 0
 18631                           
 18632 ;; *************** function i2_turnLeft45 *****************
 18633 ;; Defined at:
 18634 ;;		line 218 in file "dc_motor.c"
 18635 ;; Parameters:    Size  Location     Type
 18636 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 18637 ;;		 -> motorL(9), 
 18638 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 18639 ;;		 -> motorR(9), 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      void 
 18644 ;; Registers used:
 18645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        6 bytes
 18656 ;; Hardware stack levels used: 1
 18657 ;; Hardware stack levels required when called: 3
 18658 ;; This function calls:
 18659 ;;		i2_TurnDelay
 18660 ;;		i2_stop
 18661 ;;		i2_turnLeft
 18662 ;; This function is called by:
 18663 ;;		i2_GreenMove
 18664 ;;		i2_LightBlueMove
 18665 ;;		i2_ReversePink
 18666 ;; This function uses a non-reentrant model
 18667 ;;
 18668                           
 18669                           	psect	text92
 18670   006CEA                     __ptext92:
 18671                           	callstack 0
 18672   006CEA                     i2_turnLeft45:
 18673                           	callstack 16
 18674   006CEA                     
 18675                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 18676   006CEA  C01B  F014         	movff	i2turnLeft45@mL,i2turnLeft@mL
 18677   006CEE  C01C  F015         	movff	i2turnLeft45@mL+1,i2turnLeft@mL+1
 18678   006CF2  C01D  F016         	movff	i2turnLeft45@mR,i2turnLeft@mR
 18679   006CF6  C01E  F017         	movff	i2turnLeft45@mR+1,i2turnLeft@mR+1
 18680   006CFA  ECA5  F02D         	call	i2_turnLeft	;wreg free
 18681   006CFE                     
 18682                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 18683   006CFE  C056  F001         	movff	_Turn45Delay,i2TurnDelay@Turn45Delay
 18684   006D02  C057  F002         	movff	_Turn45Delay+1,i2TurnDelay@Turn45Delay+1
 18685   006D06  EC47  F038         	call	i2_TurnDelay	;wreg free
 18686   006D0A                     
 18687                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 18688   006D0A  0EC3               	movlw	low _motorL
 18689   006D0C  6E14               	movwf	i2stop@mL^0,c
 18690   006D0E  0E01               	movlw	high _motorL
 18691   006D10  6E15               	movwf	(i2stop@mL+1)^0,c
 18692   006D12  0EBA               	movlw	low _motorR
 18693   006D14  6E16               	movwf	i2stop@mR^0,c
 18694   006D16  0E01               	movlw	high _motorR
 18695   006D18  6E17               	movwf	(i2stop@mR+1)^0,c
 18696   006D1A  ECE0  F030         	call	i2_stop	;wreg free
 18697   006D1E                     
 18698                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 18699   006D1E  0E05               	movlw	5
 18700   006D20  6E20               	movwf	(??i2_turnLeft45+1)^0,c
 18701   006D22  0E0F               	movlw	15
 18702   006D24  6E1F               	movwf	??i2_turnLeft45^0,c
 18703   006D26  0EF1               	movlw	241
 18704   006D28                     i2u686_47:
 18705   006D28  2EE8               	decfsz	wreg,f,c
 18706   006D2A  D7FE               	bra	i2u686_47
 18707   006D2C  2E1F               	decfsz	??i2_turnLeft45^0,f,c
 18708   006D2E  D7FC               	bra	i2u686_47
 18709   006D30  2E20               	decfsz	(??i2_turnLeft45+1)^0,f,c
 18710   006D32  D7FA               	bra	i2u686_47
 18711   006D34  F000               	nop	
 18712   006D36  0012               	return		;funcret
 18713   006D38                     __end_ofi2_turnLeft45:
 18714                           	callstack 0
 18715                           
 18716 ;; *************** function i2_turnLeft *****************
 18717 ;; Defined at:
 18718 ;;		line 111 in file "dc_motor.c"
 18719 ;; Parameters:    Size  Location     Type
 18720 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 18721 ;;		 -> motorL(9), 
 18722 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 18723 ;;		 -> motorR(9), 
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;		None
 18726 ;; Return value:  Size  Location     Type
 18727 ;;                  1    wreg      void 
 18728 ;; Registers used:
 18729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18730 ;; Tracked objects:
 18731 ;;		On entry : 0/0
 18732 ;;		On exit  : 0/0
 18733 ;;		Unchanged: 0/0
 18734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18737 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18738 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18739 ;;Total ram usage:        7 bytes
 18740 ;; Hardware stack levels used: 1
 18741 ;; Hardware stack levels required when called: 2
 18742 ;; This function calls:
 18743 ;;		i2_setMotorPWM
 18744 ;; This function is called by:
 18745 ;;		i2_turnLeft45
 18746 ;; This function uses a non-reentrant model
 18747 ;;
 18748                           
 18749                           	psect	text93
 18750   005B4A                     __ptext93:
 18751                           	callstack 0
 18752   005B4A                     i2_turnLeft:
 18753                           	callstack 16
 18754   005B4A                     
 18755                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 18756   005B4A  EE20 F001          	lfsr	2,1
 18757   005B4E  5014               	movf	i2turnLeft@mL^0,w,c
 18758   005B50  26D9               	addwf	fsr2l,f,c
 18759   005B52  5015               	movf	(i2turnLeft@mL+1)^0,w,c
 18760   005B54  22DA               	addwfc	fsr2h,f,c
 18761   005B56  0E00               	movlw	0
 18762   005B58  6EDF               	movwf	indf2,c
 18763                           
 18764                           ;dc_motor.c: 114:     mR->direction =1;
 18765   005B5A  EE20 F001          	lfsr	2,1
 18766   005B5E  5016               	movf	i2turnLeft@mR^0,w,c
 18767   005B60  26D9               	addwf	fsr2l,f,c
 18768   005B62  5017               	movf	(i2turnLeft@mR+1)^0,w,c
 18769   005B64  22DA               	addwfc	fsr2h,f,c
 18770   005B66  0E01               	movlw	1
 18771   005B68  6EDF               	movwf	indf2,c
 18772                           
 18773                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 18774   005B6A  EFDB  F02D         	goto	i2l5395
 18775   005B6E                     i2l5387:
 18776                           
 18777                           ;dc_motor.c: 118:         mL->power+=10;
 18778   005B6E  C014  FFD9         	movff	i2turnLeft@mL,fsr2l
 18779   005B72  C015  FFDA         	movff	i2turnLeft@mL+1,fsr2h
 18780   005B76  0E0A               	movlw	10
 18781   005B78  26DF               	addwf	indf2,f,c
 18782                           
 18783                           ;dc_motor.c: 119:         mR->power+=10;
 18784   005B7A  C016  FFD9         	movff	i2turnLeft@mR,fsr2l
 18785   005B7E  C017  FFDA         	movff	i2turnLeft@mR+1,fsr2h
 18786   005B82  0E0A               	movlw	10
 18787   005B84  26DF               	addwf	indf2,f,c
 18788   005B86                     
 18789                           ;dc_motor.c: 121:         setMotorPWM(mL);
 18790   005B86  C014  F00E         	movff	i2turnLeft@mL,i2setMotorPWM@m
 18791   005B8A  C015  F00F         	movff	i2turnLeft@mL+1,i2setMotorPWM@m+1
 18792   005B8E  EC54  F026         	call	i2_setMotorPWM	;wreg free
 18793   005B92                     
 18794                           ;dc_motor.c: 122:         setMotorPWM(mR);
 18795   005B92  C016  F00E         	movff	i2turnLeft@mR,i2setMotorPWM@m
 18796   005B96  C017  F00F         	movff	i2turnLeft@mR+1,i2setMotorPWM@m+1
 18797   005B9A  EC54  F026         	call	i2_setMotorPWM	;wreg free
 18798   005B9E                     
 18799                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 18800   005B9E  0E02               	movlw	2
 18801   005BA0  6E19               	movwf	(??i2_turnLeft+1)^0,c
 18802   005BA2  0EA0               	movlw	160
 18803   005BA4  6E18               	movwf	??i2_turnLeft^0,c
 18804   005BA6  0E92               	movlw	146
 18805   005BA8                     i2u687_47:
 18806   005BA8  2EE8               	decfsz	wreg,f,c
 18807   005BAA  D7FE               	bra	i2u687_47
 18808   005BAC  2E18               	decfsz	??i2_turnLeft^0,f,c
 18809   005BAE  D7FC               	bra	i2u687_47
 18810   005BB0  2E19               	decfsz	(??i2_turnLeft+1)^0,f,c
 18811   005BB2  D7FA               	bra	i2u687_47
 18812   005BB4  D000               	nop2	
 18813   005BB6                     i2l5395:
 18814                           
 18815                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 18816   005BB6  C014  FFD9         	movff	i2turnLeft@mL,fsr2l
 18817   005BBA  C015  FFDA         	movff	i2turnLeft@mL+1,fsr2h
 18818   005BBE  50DF               	movf	indf2,w,c
 18819   005BC0  6E18               	movwf	??i2_turnLeft^0,c
 18820   005BC2  6A19               	clrf	(??i2_turnLeft+1)^0,c
 18821   005BC4  5058               	movf	_power^0,w,c
 18822   005BC6  5C18               	subwf	??i2_turnLeft^0,w,c
 18823   005BC8  5019               	movf	(??i2_turnLeft+1)^0,w,c
 18824   005BCA  0A80               	xorlw	128
 18825   005BCC  6E1A               	movwf	(??i2_turnLeft+2)^0,c
 18826   005BCE  5059               	movf	(_power+1)^0,w,c
 18827   005BD0  0A80               	xorlw	128
 18828   005BD2  581A               	subwfb	(??i2_turnLeft+2)^0,w,c
 18829   005BD4  B0D8               	btfsc	status,0,c
 18830   005BD6  EFEF  F02D         	goto	i2u536_41
 18831   005BDA  EFF1  F02D         	goto	i2u536_40
 18832   005BDE                     i2u536_41:
 18833   005BDE  EF07  F02E         	goto	i2l550
 18834   005BE2                     i2u536_40:
 18835   005BE2  C016  FFD9         	movff	i2turnLeft@mR,fsr2l
 18836   005BE6  C017  FFDA         	movff	i2turnLeft@mR+1,fsr2h
 18837   005BEA  50DF               	movf	indf2,w,c
 18838   005BEC  6E18               	movwf	??i2_turnLeft^0,c
 18839   005BEE  6A19               	clrf	(??i2_turnLeft+1)^0,c
 18840   005BF0  5058               	movf	_power^0,w,c
 18841   005BF2  5C18               	subwf	??i2_turnLeft^0,w,c
 18842   005BF4  5019               	movf	(??i2_turnLeft+1)^0,w,c
 18843   005BF6  0A80               	xorlw	128
 18844   005BF8  6E1A               	movwf	(??i2_turnLeft+2)^0,c
 18845   005BFA  5059               	movf	(_power+1)^0,w,c
 18846   005BFC  0A80               	xorlw	128
 18847   005BFE  581A               	subwfb	(??i2_turnLeft+2)^0,w,c
 18848   005C00  A0D8               	btfss	status,0,c
 18849   005C02  EF05  F02E         	goto	i2u537_41
 18850   005C06  EF07  F02E         	goto	i2u537_40
 18851   005C0A                     i2u537_41:
 18852   005C0A  EFB7  F02D         	goto	i2l5387
 18853   005C0E                     i2u537_40:
 18854   005C0E                     i2l550:
 18855   005C0E  0012               	return		;funcret
 18856   005C10                     __end_ofi2_turnLeft:
 18857                           	callstack 0
 18858                           
 18859 ;; *************** function i2_BlueMove *****************
 18860 ;; Defined at:
 18861 ;;		line 278 in file "dc_motor.c"
 18862 ;; Parameters:    Size  Location     Type
 18863 ;;  mL              2   32[COMRAM] PTR struct DC_motor
 18864 ;;		 -> motorL(9), 
 18865 ;;  mR              2   34[COMRAM] PTR struct DC_motor
 18866 ;;		 -> motorR(9), 
 18867 ;; Auto vars:     Size  Location     Type
 18868 ;;		None
 18869 ;; Return value:  Size  Location     Type
 18870 ;;                  1    wreg      void 
 18871 ;; Registers used:
 18872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18873 ;; Tracked objects:
 18874 ;;		On entry : 0/0
 18875 ;;		On exit  : 0/0
 18876 ;;		Unchanged: 0/0
 18877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18882 ;;Total ram usage:        4 bytes
 18883 ;; Hardware stack levels used: 1
 18884 ;; Hardware stack levels required when called: 4
 18885 ;; This function calls:
 18886 ;;		i2_reverseDetect
 18887 ;;		i2_turnRight45
 18888 ;; This function is called by:
 18889 ;;		i2_go_Home
 18890 ;; This function uses a non-reentrant model
 18891 ;;
 18892                           
 18893                           	psect	text94
 18894   006542                     __ptext94:
 18895                           	callstack 0
 18896   006542                     i2_BlueMove:
 18897                           	callstack 16
 18898   006542                     
 18899                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
 18900   006542  0EC3               	movlw	low _motorL
 18901   006544  6E1B               	movwf	i2reverseDetect@mL^0,c
 18902   006546  0E01               	movlw	high _motorL
 18903   006548  6E1C               	movwf	(i2reverseDetect@mL+1)^0,c
 18904   00654A  0EBA               	movlw	low _motorR
 18905   00654C  6E1D               	movwf	i2reverseDetect@mR^0,c
 18906   00654E  0E01               	movlw	high _motorR
 18907   006550  6E1E               	movwf	(i2reverseDetect@mR+1)^0,c
 18908   006552  ECE3  F033         	call	i2_reverseDetect	;wreg free
 18909                           
 18910                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
 18911   006556  0EC3               	movlw	low _motorL
 18912   006558  6E1B               	movwf	i2turnRight45@mL^0,c
 18913   00655A  0E01               	movlw	high _motorL
 18914   00655C  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18915   00655E  0EBA               	movlw	low _motorR
 18916   006560  6E1D               	movwf	i2turnRight45@mR^0,c
 18917   006562  0E01               	movlw	high _motorR
 18918   006564  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18919   006566  EC9C  F036         	call	i2_turnRight45	;wreg free
 18920                           
 18921                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
 18922   00656A  0EC3               	movlw	low _motorL
 18923   00656C  6E1B               	movwf	i2turnRight45@mL^0,c
 18924   00656E  0E01               	movlw	high _motorL
 18925   006570  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18926   006572  0EBA               	movlw	low _motorR
 18927   006574  6E1D               	movwf	i2turnRight45@mR^0,c
 18928   006576  0E01               	movlw	high _motorR
 18929   006578  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18930   00657A  EC9C  F036         	call	i2_turnRight45	;wreg free
 18931                           
 18932                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
 18933   00657E  0EC3               	movlw	low _motorL
 18934   006580  6E1B               	movwf	i2turnRight45@mL^0,c
 18935   006582  0E01               	movlw	high _motorL
 18936   006584  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18937   006586  0EBA               	movlw	low _motorR
 18938   006588  6E1D               	movwf	i2turnRight45@mR^0,c
 18939   00658A  0E01               	movlw	high _motorR
 18940   00658C  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18941   00658E  EC9C  F036         	call	i2_turnRight45	;wreg free
 18942                           
 18943                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
 18944   006592  0EC3               	movlw	low _motorL
 18945   006594  6E1B               	movwf	i2turnRight45@mL^0,c
 18946   006596  0E01               	movlw	high _motorL
 18947   006598  6E1C               	movwf	(i2turnRight45@mL+1)^0,c
 18948   00659A  0EBA               	movlw	low _motorR
 18949   00659C  6E1D               	movwf	i2turnRight45@mR^0,c
 18950   00659E  0E01               	movlw	high _motorR
 18951   0065A0  6E1E               	movwf	(i2turnRight45@mR+1)^0,c
 18952   0065A2  EC9C  F036         	call	i2_turnRight45	;wreg free
 18953   0065A6  0012               	return		;funcret
 18954   0065A8                     __end_ofi2_BlueMove:
 18955                           	callstack 0
 18956                           
 18957 ;; *************** function i2_turnRight45 *****************
 18958 ;; Defined at:
 18959 ;;		line 211 in file "dc_motor.c"
 18960 ;; Parameters:    Size  Location     Type
 18961 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 18962 ;;		 -> motorL(9), 
 18963 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 18964 ;;		 -> motorR(9), 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;		None
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  1    wreg      void 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18978 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18980 ;;Total ram usage:        6 bytes
 18981 ;; Hardware stack levels used: 1
 18982 ;; Hardware stack levels required when called: 3
 18983 ;; This function calls:
 18984 ;;		i2_TurnDelay
 18985 ;;		i2_stop
 18986 ;;		i2_turnRight
 18987 ;; This function is called by:
 18988 ;;		i2_RedMove
 18989 ;;		i2_BlueMove
 18990 ;;		i2_OrangeMove
 18991 ;;		i2_ReverseYellow
 18992 ;; This function uses a non-reentrant model
 18993 ;;
 18994                           
 18995                           	psect	text95
 18996   006D38                     __ptext95:
 18997                           	callstack 0
 18998   006D38                     i2_turnRight45:
 18999                           	callstack 16
 19000   006D38                     
 19001                           ;dc_motor.c: 212:     turnRight(mL,mR);
 19002   006D38  C01B  F014         	movff	i2turnRight45@mL,i2turnRight@mL
 19003   006D3C  C01C  F015         	movff	i2turnRight45@mL+1,i2turnRight@mL+1
 19004   006D40  C01D  F016         	movff	i2turnRight45@mR,i2turnRight@mR
 19005   006D44  C01E  F017         	movff	i2turnRight45@mR+1,i2turnRight@mR+1
 19006   006D48  EC08  F02E         	call	i2_turnRight	;wreg free
 19007   006D4C                     
 19008                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 19009   006D4C  C056  F001         	movff	_Turn45Delay,i2TurnDelay@Turn45Delay
 19010   006D50  C057  F002         	movff	_Turn45Delay+1,i2TurnDelay@Turn45Delay+1
 19011   006D54  EC47  F038         	call	i2_TurnDelay	;wreg free
 19012   006D58                     
 19013                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 19014   006D58  0EC3               	movlw	low _motorL
 19015   006D5A  6E14               	movwf	i2stop@mL^0,c
 19016   006D5C  0E01               	movlw	high _motorL
 19017   006D5E  6E15               	movwf	(i2stop@mL+1)^0,c
 19018   006D60  0EBA               	movlw	low _motorR
 19019   006D62  6E16               	movwf	i2stop@mR^0,c
 19020   006D64  0E01               	movlw	high _motorR
 19021   006D66  6E17               	movwf	(i2stop@mR+1)^0,c
 19022   006D68  ECE0  F030         	call	i2_stop	;wreg free
 19023   006D6C                     
 19024                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 19025   006D6C  0E05               	movlw	5
 19026   006D6E  6E20               	movwf	(??i2_turnRight45+1)^0,c
 19027   006D70  0E0F               	movlw	15
 19028   006D72  6E1F               	movwf	??i2_turnRight45^0,c
 19029   006D74  0EF1               	movlw	241
 19030   006D76                     i2u688_47:
 19031   006D76  2EE8               	decfsz	wreg,f,c
 19032   006D78  D7FE               	bra	i2u688_47
 19033   006D7A  2E1F               	decfsz	??i2_turnRight45^0,f,c
 19034   006D7C  D7FC               	bra	i2u688_47
 19035   006D7E  2E20               	decfsz	(??i2_turnRight45+1)^0,f,c
 19036   006D80  D7FA               	bra	i2u688_47
 19037   006D82  F000               	nop	
 19038   006D84  0012               	return		;funcret
 19039   006D86                     __end_ofi2_turnRight45:
 19040                           	callstack 0
 19041                           
 19042 ;; *************** function i2_turnRight *****************
 19043 ;; Defined at:
 19044 ;;		line 129 in file "dc_motor.c"
 19045 ;; Parameters:    Size  Location     Type
 19046 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 19047 ;;		 -> motorL(9), 
 19048 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 19049 ;;		 -> motorR(9), 
 19050 ;; Auto vars:     Size  Location     Type
 19051 ;;		None
 19052 ;; Return value:  Size  Location     Type
 19053 ;;                  1    wreg      void 
 19054 ;; Registers used:
 19055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19056 ;; Tracked objects:
 19057 ;;		On entry : 0/0
 19058 ;;		On exit  : 0/0
 19059 ;;		Unchanged: 0/0
 19060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19064 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19065 ;;Total ram usage:        7 bytes
 19066 ;; Hardware stack levels used: 1
 19067 ;; Hardware stack levels required when called: 2
 19068 ;; This function calls:
 19069 ;;		i2_setMotorPWM
 19070 ;; This function is called by:
 19071 ;;		i2_turnRight45
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           	psect	text96
 19076   005C10                     __ptext96:
 19077                           	callstack 0
 19078   005C10                     i2_turnRight:
 19079                           	callstack 16
 19080   005C10                     
 19081                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 19082   005C10  EE20 F001          	lfsr	2,1
 19083   005C14  5014               	movf	i2turnRight@mL^0,w,c
 19084   005C16  26D9               	addwf	fsr2l,f,c
 19085   005C18  5015               	movf	(i2turnRight@mL+1)^0,w,c
 19086   005C1A  22DA               	addwfc	fsr2h,f,c
 19087   005C1C  0E01               	movlw	1
 19088   005C1E  6EDF               	movwf	indf2,c
 19089                           
 19090                           ;dc_motor.c: 132:     mR->direction =0;
 19091   005C20  EE20 F001          	lfsr	2,1
 19092   005C24  5016               	movf	i2turnRight@mR^0,w,c
 19093   005C26  26D9               	addwf	fsr2l,f,c
 19094   005C28  5017               	movf	(i2turnRight@mR+1)^0,w,c
 19095   005C2A  22DA               	addwfc	fsr2h,f,c
 19096   005C2C  0E00               	movlw	0
 19097   005C2E  6EDF               	movwf	indf2,c
 19098                           
 19099                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 19100   005C30  EF3E  F02E         	goto	i2l5409
 19101   005C34                     i2l5401:
 19102                           
 19103                           ;dc_motor.c: 136:         mL->power+=10;
 19104   005C34  C014  FFD9         	movff	i2turnRight@mL,fsr2l
 19105   005C38  C015  FFDA         	movff	i2turnRight@mL+1,fsr2h
 19106   005C3C  0E0A               	movlw	10
 19107   005C3E  26DF               	addwf	indf2,f,c
 19108                           
 19109                           ;dc_motor.c: 137:         mR->power+=10;
 19110   005C40  C016  FFD9         	movff	i2turnRight@mR,fsr2l
 19111   005C44  C017  FFDA         	movff	i2turnRight@mR+1,fsr2h
 19112   005C48  0E0A               	movlw	10
 19113   005C4A  26DF               	addwf	indf2,f,c
 19114   005C4C                     
 19115                           ;dc_motor.c: 139:         setMotorPWM(mL);
 19116   005C4C  C014  F00E         	movff	i2turnRight@mL,i2setMotorPWM@m
 19117   005C50  C015  F00F         	movff	i2turnRight@mL+1,i2setMotorPWM@m+1
 19118   005C54  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19119   005C58                     
 19120                           ;dc_motor.c: 140:         setMotorPWM(mR);
 19121   005C58  C016  F00E         	movff	i2turnRight@mR,i2setMotorPWM@m
 19122   005C5C  C017  F00F         	movff	i2turnRight@mR+1,i2setMotorPWM@m+1
 19123   005C60  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19124   005C64                     
 19125                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 19126   005C64  0E02               	movlw	2
 19127   005C66  6E19               	movwf	(??i2_turnRight+1)^0,c
 19128   005C68  0EA0               	movlw	160
 19129   005C6A  6E18               	movwf	??i2_turnRight^0,c
 19130   005C6C  0E92               	movlw	146
 19131   005C6E                     i2u689_47:
 19132   005C6E  2EE8               	decfsz	wreg,f,c
 19133   005C70  D7FE               	bra	i2u689_47
 19134   005C72  2E18               	decfsz	??i2_turnRight^0,f,c
 19135   005C74  D7FC               	bra	i2u689_47
 19136   005C76  2E19               	decfsz	(??i2_turnRight+1)^0,f,c
 19137   005C78  D7FA               	bra	i2u689_47
 19138   005C7A  D000               	nop2	
 19139   005C7C                     i2l5409:
 19140                           
 19141                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 19142   005C7C  C014  FFD9         	movff	i2turnRight@mL,fsr2l
 19143   005C80  C015  FFDA         	movff	i2turnRight@mL+1,fsr2h
 19144   005C84  50DF               	movf	indf2,w,c
 19145   005C86  6E18               	movwf	??i2_turnRight^0,c
 19146   005C88  6A19               	clrf	(??i2_turnRight+1)^0,c
 19147   005C8A  5058               	movf	_power^0,w,c
 19148   005C8C  5C18               	subwf	??i2_turnRight^0,w,c
 19149   005C8E  5019               	movf	(??i2_turnRight+1)^0,w,c
 19150   005C90  0A80               	xorlw	128
 19151   005C92  6E1A               	movwf	(??i2_turnRight+2)^0,c
 19152   005C94  5059               	movf	(_power+1)^0,w,c
 19153   005C96  0A80               	xorlw	128
 19154   005C98  581A               	subwfb	(??i2_turnRight+2)^0,w,c
 19155   005C9A  B0D8               	btfsc	status,0,c
 19156   005C9C  EF52  F02E         	goto	i2u538_41
 19157   005CA0  EF54  F02E         	goto	i2u538_40
 19158   005CA4                     i2u538_41:
 19159   005CA4  EF6A  F02E         	goto	i2l558
 19160   005CA8                     i2u538_40:
 19161   005CA8  C016  FFD9         	movff	i2turnRight@mR,fsr2l
 19162   005CAC  C017  FFDA         	movff	i2turnRight@mR+1,fsr2h
 19163   005CB0  50DF               	movf	indf2,w,c
 19164   005CB2  6E18               	movwf	??i2_turnRight^0,c
 19165   005CB4  6A19               	clrf	(??i2_turnRight+1)^0,c
 19166   005CB6  5058               	movf	_power^0,w,c
 19167   005CB8  5C18               	subwf	??i2_turnRight^0,w,c
 19168   005CBA  5019               	movf	(??i2_turnRight+1)^0,w,c
 19169   005CBC  0A80               	xorlw	128
 19170   005CBE  6E1A               	movwf	(??i2_turnRight+2)^0,c
 19171   005CC0  5059               	movf	(_power+1)^0,w,c
 19172   005CC2  0A80               	xorlw	128
 19173   005CC4  581A               	subwfb	(??i2_turnRight+2)^0,w,c
 19174   005CC6  A0D8               	btfss	status,0,c
 19175   005CC8  EF68  F02E         	goto	i2u539_41
 19176   005CCC  EF6A  F02E         	goto	i2u539_40
 19177   005CD0                     i2u539_41:
 19178   005CD0  EF1A  F02E         	goto	i2l5401
 19179   005CD4                     i2u539_40:
 19180   005CD4                     i2l558:
 19181   005CD4  0012               	return		;funcret
 19182   005CD6                     __end_ofi2_turnRight:
 19183                           	callstack 0
 19184                           
 19185 ;; *************** function i2_TurnDelay *****************
 19186 ;; Defined at:
 19187 ;;		line 204 in file "dc_motor.c"
 19188 ;; Parameters:    Size  Location     Type
 19189 ;;  Turn45Delay     2    0[COMRAM] int 
 19190 ;; Auto vars:     Size  Location     Type
 19191 ;;		None
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  1    wreg      void 
 19194 ;; Registers used:
 19195 ;;		wreg, status,2, status,0
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19205 ;;Total ram usage:        3 bytes
 19206 ;; Hardware stack levels used: 1
 19207 ;; This function calls:
 19208 ;;		Nothing
 19209 ;; This function is called by:
 19210 ;;		i2_turnRight45
 19211 ;;		i2_turnLeft45
 19212 ;; This function uses a non-reentrant model
 19213 ;;
 19214                           
 19215                           	psect	text97
 19216   00708E                     __ptext97:
 19217                           	callstack 0
 19218   00708E                     i2_TurnDelay:
 19219                           	callstack 18
 19220   00708E                     
 19221                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 19222   00708E  EF54  F038         	goto	i2l585
 19223   007092                     i2l5443:
 19224                           
 19225                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 19226   007092  0E15               	movlw	21
 19227   007094  6E03               	movwf	??i2_TurnDelay^0,c
 19228   007096  0EC6               	movlw	198
 19229   007098                     i2u690_47:
 19230   007098  2EE8               	decfsz	wreg,f,c
 19231   00709A  D7FE               	bra	i2u690_47
 19232   00709C  2E03               	decfsz	??i2_TurnDelay^0,f,c
 19233   00709E  D7FC               	bra	i2u690_47
 19234   0070A0  D000               	nop2	
 19235   0070A2                     
 19236                           ;dc_motor.c: 207:         Turn45Delay--;
 19237   0070A2  0601               	decf	i2TurnDelay@Turn45Delay^0,f,c
 19238   0070A4  A0D8               	btfss	status,0,c
 19239   0070A6  0602               	decf	(i2TurnDelay@Turn45Delay+1)^0,f,c
 19240   0070A8                     i2l585:
 19241                           
 19242                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 19243   0070A8  BE02               	btfsc	(i2TurnDelay@Turn45Delay+1)^0,7,c
 19244   0070AA  EF61  F038         	goto	i2u544_40
 19245   0070AE  5002               	movf	(i2TurnDelay@Turn45Delay+1)^0,w,c
 19246   0070B0  E106               	bnz	i2u544_41
 19247   0070B2  0401               	decf	i2TurnDelay@Turn45Delay^0,w,c
 19248   0070B4  B0D8               	btfsc	status,0,c
 19249   0070B6  EF5F  F038         	goto	i2u544_41
 19250   0070BA  EF61  F038         	goto	i2u544_40
 19251   0070BE                     i2u544_41:
 19252   0070BE  EF49  F038         	goto	i2l5443
 19253   0070C2                     i2u544_40:
 19254   0070C2  0012               	return		;funcret
 19255   0070C4                     __end_ofi2_TurnDelay:
 19256                           	callstack 0
 19257                           
 19258 ;; *************** function i2_reverseDetect *****************
 19259 ;; Defined at:
 19260 ;;		line 225 in file "dc_motor.c"
 19261 ;; Parameters:    Size  Location     Type
 19262 ;;  mL              2   26[COMRAM] PTR struct DC_motor
 19263 ;;		 -> motorL(9), 
 19264 ;;  mR              2   28[COMRAM] PTR struct DC_motor
 19265 ;;		 -> motorR(9), 
 19266 ;; Auto vars:     Size  Location     Type
 19267 ;;		None
 19268 ;; Return value:  Size  Location     Type
 19269 ;;                  1    wreg      void 
 19270 ;; Registers used:
 19271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19272 ;; Tracked objects:
 19273 ;;		On entry : 0/0
 19274 ;;		On exit  : 0/0
 19275 ;;		Unchanged: 0/0
 19276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19281 ;;Total ram usage:        6 bytes
 19282 ;; Hardware stack levels used: 1
 19283 ;; Hardware stack levels required when called: 3
 19284 ;; This function calls:
 19285 ;;		i2_fullSpeedBack
 19286 ;;		i2_stop
 19287 ;; This function is called by:
 19288 ;;		i2_RedMove
 19289 ;;		i2_GreenMove
 19290 ;;		i2_BlueMove
 19291 ;;		i2_OrangeMove
 19292 ;;		i2_LightBlueMove
 19293 ;;		i2_ReverseYellow
 19294 ;;		i2_ReversePink
 19295 ;;		i2_go_Home
 19296 ;; This function uses a non-reentrant model
 19297 ;;
 19298                           
 19299                           	psect	text98
 19300   0067C6                     __ptext98:
 19301                           	callstack 0
 19302   0067C6                     i2_reverseDetect:
 19303                           	callstack 17
 19304   0067C6                     
 19305                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 19306   0067C6  C01B  F014         	movff	i2reverseDetect@mL,i2fullSpeedBack@mL
 19307   0067CA  C01C  F015         	movff	i2reverseDetect@mL+1,i2fullSpeedBack@mL+1
 19308   0067CE  C01D  F016         	movff	i2reverseDetect@mR,i2fullSpeedBack@mR
 19309   0067D2  C01E  F017         	movff	i2reverseDetect@mR+1,i2fullSpeedBack@mR+1
 19310   0067D6  EC6B  F02E         	call	i2_fullSpeedBack	;wreg free
 19311   0067DA                     
 19312                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 19313   0067DA  0E11               	movlw	17
 19314   0067DC  6E20               	movwf	(??i2_reverseDetect+1)^0,c
 19315   0067DE  0E3C               	movlw	60
 19316   0067E0  6E1F               	movwf	??i2_reverseDetect^0,c
 19317   0067E2  0ECB               	movlw	203
 19318   0067E4                     i2u691_47:
 19319   0067E4  2EE8               	decfsz	wreg,f,c
 19320   0067E6  D7FE               	bra	i2u691_47
 19321   0067E8  2E1F               	decfsz	??i2_reverseDetect^0,f,c
 19322   0067EA  D7FC               	bra	i2u691_47
 19323   0067EC  2E20               	decfsz	(??i2_reverseDetect+1)^0,f,c
 19324   0067EE  D7FA               	bra	i2u691_47
 19325   0067F0  F000               	nop	
 19326   0067F2                     
 19327                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 19328   0067F2  0EC3               	movlw	low _motorL
 19329   0067F4  6E14               	movwf	i2stop@mL^0,c
 19330   0067F6  0E01               	movlw	high _motorL
 19331   0067F8  6E15               	movwf	(i2stop@mL+1)^0,c
 19332   0067FA  0EBA               	movlw	low _motorR
 19333   0067FC  6E16               	movwf	i2stop@mR^0,c
 19334   0067FE  0E01               	movlw	high _motorR
 19335   006800  6E17               	movwf	(i2stop@mR+1)^0,c
 19336   006802  ECE0  F030         	call	i2_stop	;wreg free
 19337                           
 19338                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 19339   006806  0E05               	movlw	5
 19340   006808  6E20               	movwf	(??i2_reverseDetect+1)^0,c
 19341   00680A  0E0F               	movlw	15
 19342   00680C  6E1F               	movwf	??i2_reverseDetect^0,c
 19343   00680E  0EF1               	movlw	241
 19344   006810                     i2u692_47:
 19345   006810  2EE8               	decfsz	wreg,f,c
 19346   006812  D7FE               	bra	i2u692_47
 19347   006814  2E1F               	decfsz	??i2_reverseDetect^0,f,c
 19348   006816  D7FC               	bra	i2u692_47
 19349   006818  2E20               	decfsz	(??i2_reverseDetect+1)^0,f,c
 19350   00681A  D7FA               	bra	i2u692_47
 19351   00681C  F000               	nop	
 19352   00681E  0012               	return		;funcret
 19353   006820                     __end_ofi2_reverseDetect:
 19354                           	callstack 0
 19355                           
 19356 ;; *************** function i2_stop *****************
 19357 ;; Defined at:
 19358 ;;		line 93 in file "dc_motor.c"
 19359 ;; Parameters:    Size  Location     Type
 19360 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 19361 ;;		 -> motorL(9), 
 19362 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 19363 ;;		 -> motorR(9), 
 19364 ;; Auto vars:     Size  Location     Type
 19365 ;;		None
 19366 ;; Return value:  Size  Location     Type
 19367 ;;                  1    wreg      void 
 19368 ;; Registers used:
 19369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19370 ;; Tracked objects:
 19371 ;;		On entry : 0/0
 19372 ;;		On exit  : 0/0
 19373 ;;		Unchanged: 0/0
 19374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19379 ;;Total ram usage:        6 bytes
 19380 ;; Hardware stack levels used: 1
 19381 ;; Hardware stack levels required when called: 2
 19382 ;; This function calls:
 19383 ;;		i2_setMotorPWM
 19384 ;; This function is called by:
 19385 ;;		i2_turnRight45
 19386 ;;		i2_turnLeft45
 19387 ;;		i2_reverseDetect
 19388 ;;		i2_ForwardOneBlock
 19389 ;;		i2_go_Home
 19390 ;; This function uses a non-reentrant model
 19391 ;;
 19392                           
 19393                           	psect	text99
 19394   0061C0                     __ptext99:
 19395                           	callstack 0
 19396   0061C0                     i2_stop:
 19397                           	callstack 18
 19398   0061C0                     
 19399                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 19400   0061C0  EF06  F031         	goto	i2l5381
 19401   0061C4                     i2l5373:
 19402                           
 19403                           ;dc_motor.c: 97:         mL->power-=10;
 19404   0061C4  C014  FFD9         	movff	i2stop@mL,fsr2l
 19405   0061C8  C015  FFDA         	movff	i2stop@mL+1,fsr2h
 19406   0061CC  0E0A               	movlw	10
 19407   0061CE  5EDF               	subwf	indf2,f,c
 19408                           
 19409                           ;dc_motor.c: 98:         mR->power-=10;
 19410   0061D0  C016  FFD9         	movff	i2stop@mR,fsr2l
 19411   0061D4  C017  FFDA         	movff	i2stop@mR+1,fsr2h
 19412   0061D8  0E0A               	movlw	10
 19413   0061DA  5EDF               	subwf	indf2,f,c
 19414   0061DC                     
 19415                           ;dc_motor.c: 103:         setMotorPWM(mL);
 19416   0061DC  C014  F00E         	movff	i2stop@mL,i2setMotorPWM@m
 19417   0061E0  C015  F00F         	movff	i2stop@mL+1,i2setMotorPWM@m+1
 19418   0061E4  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19419   0061E8                     
 19420                           ;dc_motor.c: 104:         setMotorPWM(mR);
 19421   0061E8  C016  F00E         	movff	i2stop@mR,i2setMotorPWM@m
 19422   0061EC  C017  F00F         	movff	i2stop@mR+1,i2setMotorPWM@m+1
 19423   0061F0  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19424   0061F4                     
 19425                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 19426   0061F4  0E02               	movlw	2
 19427   0061F6  6E19               	movwf	(??i2_stop+1)^0,c
 19428   0061F8  0EA0               	movlw	160
 19429   0061FA  6E18               	movwf	??i2_stop^0,c
 19430   0061FC  0E92               	movlw	146
 19431   0061FE                     i2u693_47:
 19432   0061FE  2EE8               	decfsz	wreg,f,c
 19433   006200  D7FE               	bra	i2u693_47
 19434   006202  2E18               	decfsz	??i2_stop^0,f,c
 19435   006204  D7FC               	bra	i2u693_47
 19436   006206  2E19               	decfsz	(??i2_stop+1)^0,f,c
 19437   006208  D7FA               	bra	i2u693_47
 19438   00620A  D000               	nop2	
 19439   00620C                     i2l5381:
 19440                           
 19441                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 19442   00620C  C014  FFD9         	movff	i2stop@mL,fsr2l
 19443   006210  C015  FFDA         	movff	i2stop@mL+1,fsr2h
 19444   006214  50DF               	movf	indf2,w,c
 19445   006216  A4D8               	btfss	status,2,c
 19446   006218  EF10  F031         	goto	i2u534_41
 19447   00621C  EF12  F031         	goto	i2u534_40
 19448   006220                     i2u534_41:
 19449   006220  EFE2  F030         	goto	i2l5373
 19450   006224                     i2u534_40:
 19451   006224  C016  FFD9         	movff	i2stop@mR,fsr2l
 19452   006228  C017  FFDA         	movff	i2stop@mR+1,fsr2h
 19453   00622C  50DF               	movf	indf2,w,c
 19454   00622E  A4D8               	btfss	status,2,c
 19455   006230  EF1C  F031         	goto	i2u535_41
 19456   006234  EF1E  F031         	goto	i2u535_40
 19457   006238                     i2u535_41:
 19458   006238  EFE2  F030         	goto	i2l5373
 19459   00623C                     i2u535_40:
 19460   00623C  0012               	return		;funcret
 19461   00623E                     __end_ofi2_stop:
 19462                           	callstack 0
 19463                           
 19464 ;; *************** function i2_fullSpeedBack *****************
 19465 ;; Defined at:
 19466 ;;		line 185 in file "dc_motor.c"
 19467 ;; Parameters:    Size  Location     Type
 19468 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 19469 ;;		 -> motorL(9), 
 19470 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 19471 ;;		 -> motorR(9), 
 19472 ;; Auto vars:     Size  Location     Type
 19473 ;;		None
 19474 ;; Return value:  Size  Location     Type
 19475 ;;                  1    wreg      void 
 19476 ;; Registers used:
 19477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19478 ;; Tracked objects:
 19479 ;;		On entry : 0/0
 19480 ;;		On exit  : 0/0
 19481 ;;		Unchanged: 0/0
 19482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19485 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19487 ;;Total ram usage:        7 bytes
 19488 ;; Hardware stack levels used: 1
 19489 ;; Hardware stack levels required when called: 2
 19490 ;; This function calls:
 19491 ;;		i2_setMotorPWM
 19492 ;; This function is called by:
 19493 ;;		i2_reverseDetect
 19494 ;; This function uses a non-reentrant model
 19495 ;;
 19496                           
 19497                           	psect	text100
 19498   005CD6                     __ptext100:
 19499                           	callstack 0
 19500   005CD6                     i2_fullSpeedBack:
 19501                           	callstack 17
 19502   005CD6                     
 19503                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 19504   005CD6  EE20 F001          	lfsr	2,1
 19505   005CDA  5014               	movf	i2fullSpeedBack@mL^0,w,c
 19506   005CDC  26D9               	addwf	fsr2l,f,c
 19507   005CDE  5015               	movf	(i2fullSpeedBack@mL+1)^0,w,c
 19508   005CE0  22DA               	addwfc	fsr2h,f,c
 19509   005CE2  0E00               	movlw	0
 19510   005CE4  6EDF               	movwf	indf2,c
 19511                           
 19512                           ;dc_motor.c: 189:     mR->direction =0;
 19513   005CE6  EE20 F001          	lfsr	2,1
 19514   005CEA  5016               	movf	i2fullSpeedBack@mR^0,w,c
 19515   005CEC  26D9               	addwf	fsr2l,f,c
 19516   005CEE  5017               	movf	(i2fullSpeedBack@mR+1)^0,w,c
 19517   005CF0  22DA               	addwfc	fsr2h,f,c
 19518   005CF2  0E00               	movlw	0
 19519   005CF4  6EDF               	movwf	indf2,c
 19520                           
 19521                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 19522   005CF6  EFA1  F02E         	goto	i2l5437
 19523   005CFA                     i2l5429:
 19524                           
 19525                           ;dc_motor.c: 192:         mL->power+=10;
 19526   005CFA  C014  FFD9         	movff	i2fullSpeedBack@mL,fsr2l
 19527   005CFE  C015  FFDA         	movff	i2fullSpeedBack@mL+1,fsr2h
 19528   005D02  0E0A               	movlw	10
 19529   005D04  26DF               	addwf	indf2,f,c
 19530                           
 19531                           ;dc_motor.c: 193:         mR->power+=10;
 19532   005D06  C016  FFD9         	movff	i2fullSpeedBack@mR,fsr2l
 19533   005D0A  C017  FFDA         	movff	i2fullSpeedBack@mR+1,fsr2h
 19534   005D0E  0E0A               	movlw	10
 19535   005D10  26DF               	addwf	indf2,f,c
 19536   005D12                     
 19537                           ;dc_motor.c: 195:         setMotorPWM(mL);
 19538   005D12  C014  F00E         	movff	i2fullSpeedBack@mL,i2setMotorPWM@m
 19539   005D16  C015  F00F         	movff	i2fullSpeedBack@mL+1,i2setMotorPWM@m+1
 19540   005D1A  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19541   005D1E                     
 19542                           ;dc_motor.c: 196:         setMotorPWM(mR);
 19543   005D1E  C016  F00E         	movff	i2fullSpeedBack@mR,i2setMotorPWM@m
 19544   005D22  C017  F00F         	movff	i2fullSpeedBack@mR+1,i2setMotorPWM@m+1
 19545   005D26  EC54  F026         	call	i2_setMotorPWM	;wreg free
 19546   005D2A                     
 19547                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 19548   005D2A  0E02               	movlw	2
 19549   005D2C  6E19               	movwf	(??i2_fullSpeedBack+1)^0,c
 19550   005D2E  0EA0               	movlw	160
 19551   005D30  6E18               	movwf	??i2_fullSpeedBack^0,c
 19552   005D32  0E92               	movlw	146
 19553   005D34                     i2u694_47:
 19554   005D34  2EE8               	decfsz	wreg,f,c
 19555   005D36  D7FE               	bra	i2u694_47
 19556   005D38  2E18               	decfsz	??i2_fullSpeedBack^0,f,c
 19557   005D3A  D7FC               	bra	i2u694_47
 19558   005D3C  2E19               	decfsz	(??i2_fullSpeedBack+1)^0,f,c
 19559   005D3E  D7FA               	bra	i2u694_47
 19560   005D40  D000               	nop2	
 19561   005D42                     i2l5437:
 19562                           
 19563                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 19564   005D42  C014  FFD9         	movff	i2fullSpeedBack@mL,fsr2l
 19565   005D46  C015  FFDA         	movff	i2fullSpeedBack@mL+1,fsr2h
 19566   005D4A  50DF               	movf	indf2,w,c
 19567   005D4C  6E18               	movwf	??i2_fullSpeedBack^0,c
 19568   005D4E  6A19               	clrf	(??i2_fullSpeedBack+1)^0,c
 19569   005D50  5058               	movf	_power^0,w,c
 19570   005D52  5C18               	subwf	??i2_fullSpeedBack^0,w,c
 19571   005D54  5019               	movf	(??i2_fullSpeedBack+1)^0,w,c
 19572   005D56  0A80               	xorlw	128
 19573   005D58  6E1A               	movwf	(??i2_fullSpeedBack+2)^0,c
 19574   005D5A  5059               	movf	(_power+1)^0,w,c
 19575   005D5C  0A80               	xorlw	128
 19576   005D5E  581A               	subwfb	(??i2_fullSpeedBack+2)^0,w,c
 19577   005D60  B0D8               	btfsc	status,0,c
 19578   005D62  EFB5  F02E         	goto	i2u542_41
 19579   005D66  EFB7  F02E         	goto	i2u542_40
 19580   005D6A                     i2u542_41:
 19581   005D6A  EFCD  F02E         	goto	i2l582
 19582   005D6E                     i2u542_40:
 19583   005D6E  C016  FFD9         	movff	i2fullSpeedBack@mR,fsr2l
 19584   005D72  C017  FFDA         	movff	i2fullSpeedBack@mR+1,fsr2h
 19585   005D76  50DF               	movf	indf2,w,c
 19586   005D78  6E18               	movwf	??i2_fullSpeedBack^0,c
 19587   005D7A  6A19               	clrf	(??i2_fullSpeedBack+1)^0,c
 19588   005D7C  5058               	movf	_power^0,w,c
 19589   005D7E  5C18               	subwf	??i2_fullSpeedBack^0,w,c
 19590   005D80  5019               	movf	(??i2_fullSpeedBack+1)^0,w,c
 19591   005D82  0A80               	xorlw	128
 19592   005D84  6E1A               	movwf	(??i2_fullSpeedBack+2)^0,c
 19593   005D86  5059               	movf	(_power+1)^0,w,c
 19594   005D88  0A80               	xorlw	128
 19595   005D8A  581A               	subwfb	(??i2_fullSpeedBack+2)^0,w,c
 19596   005D8C  A0D8               	btfss	status,0,c
 19597   005D8E  EFCB  F02E         	goto	i2u543_41
 19598   005D92  EFCD  F02E         	goto	i2u543_40
 19599   005D96                     i2u543_41:
 19600   005D96  EF7D  F02E         	goto	i2l5429
 19601   005D9A                     i2u543_40:
 19602   005D9A                     i2l582:
 19603   005D9A  0012               	return		;funcret
 19604   005D9C                     __end_ofi2_fullSpeedBack:
 19605                           	callstack 0
 19606                           
 19607 ;; *************** function i2_setMotorPWM *****************
 19608 ;; Defined at:
 19609 ;;		line 68 in file "dc_motor.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;  m               2   13[COMRAM] PTR struct DC_motor
 19612 ;;		 -> motorR(9), motorL(9), 
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;  negDuty         1   18[COMRAM] unsigned char 
 19615 ;;  posDuty         1   17[COMRAM] unsigned char 
 19616 ;; Return value:  Size  Location     Type
 19617 ;;                  1    wreg      void 
 19618 ;; Registers used:
 19619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19620 ;; Tracked objects:
 19621 ;;		On entry : 0/0
 19622 ;;		On exit  : 0/0
 19623 ;;		Unchanged: 0/0
 19624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19628 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19629 ;;Total ram usage:        6 bytes
 19630 ;; Hardware stack levels used: 1
 19631 ;; Hardware stack levels required when called: 1
 19632 ;; This function calls:
 19633 ;;		i2___lwdiv
 19634 ;;		i2___wmul
 19635 ;; This function is called by:
 19636 ;;		i2_stop
 19637 ;;		i2_turnLeft
 19638 ;;		i2_turnRight
 19639 ;;		i2_fullSpeedAhead
 19640 ;;		i2_timed_forward
 19641 ;;		i2_fullSpeedBack
 19642 ;; This function uses a non-reentrant model
 19643 ;;
 19644                           
 19645                           	psect	text101
 19646   004CA8                     __ptext101:
 19647                           	callstack 0
 19648   004CA8                     i2_setMotorPWM:
 19649                           	callstack 18
 19650   004CA8                     
 19651                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 19652   004CA8  EE20 F002          	lfsr	2,2
 19653   004CAC  500E               	movf	i2setMotorPWM@m^0,w,c
 19654   004CAE  26D9               	addwf	fsr2l,f,c
 19655   004CB0  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19656   004CB2  22DA               	addwfc	fsr2h,f,c
 19657   004CB4  50DF               	movf	indf2,w,c
 19658   004CB6  B4D8               	btfsc	status,2,c
 19659   004CB8  EF60  F026         	goto	i2u476_41
 19660   004CBC  EF62  F026         	goto	i2u476_40
 19661   004CC0                     i2u476_41:
 19662   004CC0  EF96  F026         	goto	i2l5001
 19663   004CC4                     i2u476_40:
 19664   004CC4                     
 19665                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 19666   004CC4  C00E  FFD9         	movff	i2setMotorPWM@m,fsr2l
 19667   004CC8  C00F  FFDA         	movff	i2setMotorPWM@m+1,fsr2h
 19668   004CCC  50DF               	movf	indf2,w,c
 19669   004CCE  6E10               	movwf	??i2_setMotorPWM^0,c
 19670   004CD0  5010               	movf	??i2_setMotorPWM^0,w,c
 19671   004CD2  6E01               	movwf	i2___wmul@multiplier^0,c
 19672   004CD4  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 19673   004CD6  EE20 F003          	lfsr	2,3
 19674   004CDA  500E               	movf	i2setMotorPWM@m^0,w,c
 19675   004CDC  26D9               	addwf	fsr2l,f,c
 19676   004CDE  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19677   004CE0  22DA               	addwfc	fsr2h,f,c
 19678   004CE2  CFDE F003          	movff	postinc2,i2___wmul@multiplicand
 19679   004CE6  CFDD F004          	movff	postdec2,i2___wmul@multiplicand+1
 19680   004CEA  ECDF  F038         	call	i2___wmul	;wreg free
 19681   004CEE  C001  F007         	movff	?i2___wmul,i2___lwdiv@dividend
 19682   004CF2  C002  F008         	movff	?i2___wmul+1,i2___lwdiv@dividend+1
 19683   004CF6  0E00               	movlw	0
 19684   004CF8  6E0A               	movwf	(i2___lwdiv@divisor+1)^0,c
 19685   004CFA  0E64               	movlw	100
 19686   004CFC  6E09               	movwf	i2___lwdiv@divisor^0,c
 19687   004CFE  EC95  F031         	call	i2___lwdiv	;wreg free
 19688   004D02  EE20 F003          	lfsr	2,3
 19689   004D06  500E               	movf	i2setMotorPWM@m^0,w,c
 19690   004D08  26D9               	addwf	fsr2l,f,c
 19691   004D0A  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19692   004D0C  22DA               	addwfc	fsr2h,f,c
 19693   004D0E  50DF               	movf	indf2,w,c
 19694   004D10  6E11               	movwf	(??i2_setMotorPWM+1)^0,c
 19695   004D12  5007               	movf	?i2___lwdiv^0,w,c
 19696   004D14  5C11               	subwf	(??i2_setMotorPWM+1)^0,w,c
 19697   004D16  6E12               	movwf	i2setMotorPWM@posDuty^0,c
 19698   004D18                     
 19699                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 19700   004D18  EE20 F003          	lfsr	2,3
 19701   004D1C  500E               	movf	i2setMotorPWM@m^0,w,c
 19702   004D1E  26D9               	addwf	fsr2l,f,c
 19703   004D20  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19704   004D22  22DA               	addwfc	fsr2h,f,c
 19705   004D24  50DF               	movf	indf2,w,c
 19706   004D26  6E13               	movwf	i2setMotorPWM@negDuty^0,c
 19707                           
 19708                           ;dc_motor.c: 75:     }
 19709   004D28  EFB9  F026         	goto	i2l5005
 19710   004D2C                     i2l5001:
 19711                           
 19712                           ;dc_motor.c: 77:         posDuty=0;
 19713   004D2C  0E00               	movlw	0
 19714   004D2E  6E12               	movwf	i2setMotorPWM@posDuty^0,c
 19715   004D30                     
 19716                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 19717   004D30  C00E  FFD9         	movff	i2setMotorPWM@m,fsr2l
 19718   004D34  C00F  FFDA         	movff	i2setMotorPWM@m+1,fsr2h
 19719   004D38  50DF               	movf	indf2,w,c
 19720   004D3A  6E10               	movwf	??i2_setMotorPWM^0,c
 19721   004D3C  5010               	movf	??i2_setMotorPWM^0,w,c
 19722   004D3E  6E01               	movwf	i2___wmul@multiplier^0,c
 19723   004D40  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 19724   004D42  EE20 F003          	lfsr	2,3
 19725   004D46  500E               	movf	i2setMotorPWM@m^0,w,c
 19726   004D48  26D9               	addwf	fsr2l,f,c
 19727   004D4A  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19728   004D4C  22DA               	addwfc	fsr2h,f,c
 19729   004D4E  CFDE F003          	movff	postinc2,i2___wmul@multiplicand
 19730   004D52  CFDD F004          	movff	postdec2,i2___wmul@multiplicand+1
 19731   004D56  ECDF  F038         	call	i2___wmul	;wreg free
 19732   004D5A  C001  F007         	movff	?i2___wmul,i2___lwdiv@dividend
 19733   004D5E  C002  F008         	movff	?i2___wmul+1,i2___lwdiv@dividend+1
 19734   004D62  0E00               	movlw	0
 19735   004D64  6E0A               	movwf	(i2___lwdiv@divisor+1)^0,c
 19736   004D66  0E64               	movlw	100
 19737   004D68  6E09               	movwf	i2___lwdiv@divisor^0,c
 19738   004D6A  EC95  F031         	call	i2___lwdiv	;wreg free
 19739   004D6E  5007               	movf	?i2___lwdiv^0,w,c
 19740   004D70  6E13               	movwf	i2setMotorPWM@negDuty^0,c
 19741   004D72                     i2l5005:
 19742                           
 19743                           ;dc_motor.c: 81:     if (m->direction) {
 19744   004D72  EE20 F001          	lfsr	2,1
 19745   004D76  500E               	movf	i2setMotorPWM@m^0,w,c
 19746   004D78  26D9               	addwf	fsr2l,f,c
 19747   004D7A  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19748   004D7C  22DA               	addwfc	fsr2h,f,c
 19749   004D7E  50DF               	movf	indf2,w,c
 19750   004D80  B4D8               	btfsc	status,2,c
 19751   004D82  EFC5  F026         	goto	i2u477_41
 19752   004D86  EFC7  F026         	goto	i2u477_40
 19753   004D8A                     i2u477_41:
 19754   004D8A  EFE9  F026         	goto	i2l5009
 19755   004D8E                     i2u477_40:
 19756   004D8E                     
 19757                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 19758   004D8E  EE20 F005          	lfsr	2,5
 19759   004D92  500E               	movf	i2setMotorPWM@m^0,w,c
 19760   004D94  26D9               	addwf	fsr2l,f,c
 19761   004D96  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19762   004D98  22DA               	addwfc	fsr2h,f,c
 19763   004D9A  CFDE F010          	movff	postinc2,??i2_setMotorPWM
 19764   004D9E  CFDD F011          	movff	postdec2,??i2_setMotorPWM+1
 19765   004DA2  C010  FFD9         	movff	??i2_setMotorPWM,fsr2l
 19766   004DA6  C011  FFDA         	movff	??i2_setMotorPWM+1,fsr2h
 19767   004DAA  C012  FFDF         	movff	i2setMotorPWM@posDuty,indf2
 19768                           
 19769                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 19770   004DAE  EE20 F007          	lfsr	2,7
 19771   004DB2  500E               	movf	i2setMotorPWM@m^0,w,c
 19772   004DB4  26D9               	addwf	fsr2l,f,c
 19773   004DB6  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19774   004DB8  22DA               	addwfc	fsr2h,f,c
 19775   004DBA  CFDE F010          	movff	postinc2,??i2_setMotorPWM
 19776   004DBE  CFDD F011          	movff	postdec2,??i2_setMotorPWM+1
 19777   004DC2  C010  FFD9         	movff	??i2_setMotorPWM,fsr2l
 19778   004DC6  C011  FFDA         	movff	??i2_setMotorPWM+1,fsr2h
 19779   004DCA  C013  FFDF         	movff	i2setMotorPWM@negDuty,indf2
 19780                           
 19781                           ;dc_motor.c: 86:     } else {
 19782   004DCE  EF09  F027         	goto	i2l536
 19783   004DD2                     i2l5009:
 19784                           
 19785                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 19786   004DD2  EE20 F005          	lfsr	2,5
 19787   004DD6  500E               	movf	i2setMotorPWM@m^0,w,c
 19788   004DD8  26D9               	addwf	fsr2l,f,c
 19789   004DDA  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19790   004DDC  22DA               	addwfc	fsr2h,f,c
 19791   004DDE  CFDE F010          	movff	postinc2,??i2_setMotorPWM
 19792   004DE2  CFDD F011          	movff	postdec2,??i2_setMotorPWM+1
 19793   004DE6  C010  FFD9         	movff	??i2_setMotorPWM,fsr2l
 19794   004DEA  C011  FFDA         	movff	??i2_setMotorPWM+1,fsr2h
 19795   004DEE  C013  FFDF         	movff	i2setMotorPWM@negDuty,indf2
 19796                           
 19797                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 19798   004DF2  EE20 F007          	lfsr	2,7
 19799   004DF6  500E               	movf	i2setMotorPWM@m^0,w,c
 19800   004DF8  26D9               	addwf	fsr2l,f,c
 19801   004DFA  500F               	movf	(i2setMotorPWM@m+1)^0,w,c
 19802   004DFC  22DA               	addwfc	fsr2h,f,c
 19803   004DFE  CFDE F010          	movff	postinc2,??i2_setMotorPWM
 19804   004E02  CFDD F011          	movff	postdec2,??i2_setMotorPWM+1
 19805   004E06  C010  FFD9         	movff	??i2_setMotorPWM,fsr2l
 19806   004E0A  C011  FFDA         	movff	??i2_setMotorPWM+1,fsr2h
 19807   004E0E  C012  FFDF         	movff	i2setMotorPWM@posDuty,indf2
 19808   004E12                     i2l536:
 19809   004E12  0012               	return		;funcret
 19810   004E14                     __end_ofi2_setMotorPWM:
 19811                           	callstack 0
 19812                           
 19813 ;; *************** function i2___wmul *****************
 19814 ;; Defined at:
 19815 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 19816 ;; Parameters:    Size  Location     Type
 19817 ;;  multiplier      2    0[COMRAM] unsigned int 
 19818 ;;  multiplicand    2    2[COMRAM] unsigned int 
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;  product         2    4[COMRAM] unsigned int 
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  2    0[COMRAM] unsigned int 
 19823 ;; Registers used:
 19824 ;;		wreg, status,2, status,0, prodl, prodh
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19830 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19833 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19834 ;;Total ram usage:        6 bytes
 19835 ;; Hardware stack levels used: 1
 19836 ;; This function calls:
 19837 ;;		Nothing
 19838 ;; This function is called by:
 19839 ;;		i2_setMotorPWM
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text102
 19844   0071BE                     __ptext102:
 19845                           	callstack 0
 19846   0071BE                     i2___wmul:
 19847                           	callstack 18
 19848   0071BE  5001               	movf	i2___wmul@multiplier^0,w,c
 19849   0071C0  0203               	mulwf	i2___wmul@multiplicand^0,c
 19850   0071C2  CFF3 F005          	movff	prodl,i2___wmul@product
 19851   0071C6  CFF4 F006          	movff	prodh,i2___wmul@product+1
 19852   0071CA  5001               	movf	i2___wmul@multiplier^0,w,c
 19853   0071CC  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 19854   0071CE  50F3               	movf	243,w,c
 19855   0071D0  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19856   0071D2  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 19857   0071D4  0203               	mulwf	i2___wmul@multiplicand^0,c
 19858   0071D6  50F3               	movf	243,w,c
 19859   0071D8  2606               	addwf	(i2___wmul@product+1)^0,f,c
 19860   0071DA  C005  F001         	movff	i2___wmul@product,?i2___wmul
 19861   0071DE  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 19862   0071E2  0012               	return		;funcret
 19863   0071E4                     __end_ofi2___wmul:
 19864                           	callstack 0
 19865                           
 19866 ;; *************** function i2___lwdiv *****************
 19867 ;; Defined at:
 19868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 19869 ;; Parameters:    Size  Location     Type
 19870 ;;  dividend        2    6[COMRAM] unsigned int 
 19871 ;;  divisor         2    8[COMRAM] unsigned int 
 19872 ;; Auto vars:     Size  Location     Type
 19873 ;;  quotient        2   10[COMRAM] unsigned int 
 19874 ;;  counter         1   12[COMRAM] unsigned char 
 19875 ;; Return value:  Size  Location     Type
 19876 ;;                  2    6[COMRAM] unsigned int 
 19877 ;; Registers used:
 19878 ;;		wreg, status,2, status,0
 19879 ;; Tracked objects:
 19880 ;;		On entry : 0/0
 19881 ;;		On exit  : 0/0
 19882 ;;		Unchanged: 0/0
 19883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19885 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19887 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19888 ;;Total ram usage:        7 bytes
 19889 ;; Hardware stack levels used: 1
 19890 ;; This function calls:
 19891 ;;		Nothing
 19892 ;; This function is called by:
 19893 ;;		i2_setMotorPWM
 19894 ;; This function uses a non-reentrant model
 19895 ;;
 19896                           
 19897                           	psect	text103
 19898   00632A                     __ptext103:
 19899                           	callstack 0
 19900   00632A                     i2___lwdiv:
 19901                           	callstack 18
 19902   00632A  0E00               	movlw	0
 19903   00632C  6E0C               	movwf	(i2___lwdiv@quotient+1)^0,c
 19904   00632E  0E00               	movlw	0
 19905   006330  6E0B               	movwf	i2___lwdiv@quotient^0,c
 19906   006332  5009               	movf	i2___lwdiv@divisor^0,w,c
 19907   006334  100A               	iorwf	(i2___lwdiv@divisor+1)^0,w,c
 19908   006336  B4D8               	btfsc	status,2,c
 19909   006338  EFA0  F031         	goto	i2u377_41
 19910   00633C  EFA2  F031         	goto	i2u377_40
 19911   006340                     i2u377_41:
 19912   006340  EFCA  F031         	goto	i2l1237
 19913   006344                     i2u377_40:
 19914   006344  0E01               	movlw	1
 19915   006346  6E0D               	movwf	i2___lwdiv@counter^0,c
 19916   006348  EFAA  F031         	goto	i2l4433
 19917   00634C                     i2l4431:
 19918   00634C  90D8               	bcf	status,0,c
 19919   00634E  3609               	rlcf	i2___lwdiv@divisor^0,f,c
 19920   006350  360A               	rlcf	(i2___lwdiv@divisor+1)^0,f,c
 19921   006352  2A0D               	incf	i2___lwdiv@counter^0,f,c
 19922   006354                     i2l4433:
 19923   006354  AE0A               	btfss	(i2___lwdiv@divisor+1)^0,7,c
 19924   006356  EFAF  F031         	goto	i2u378_41
 19925   00635A  EFB1  F031         	goto	i2u378_40
 19926   00635E                     i2u378_41:
 19927   00635E  EFA6  F031         	goto	i2l4431
 19928   006362                     i2u378_40:
 19929   006362                     i2l4435:
 19930   006362  90D8               	bcf	status,0,c
 19931   006364  360B               	rlcf	i2___lwdiv@quotient^0,f,c
 19932   006366  360C               	rlcf	(i2___lwdiv@quotient+1)^0,f,c
 19933   006368  5009               	movf	i2___lwdiv@divisor^0,w,c
 19934   00636A  5C07               	subwf	i2___lwdiv@dividend^0,w,c
 19935   00636C  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
 19936   00636E  5808               	subwfb	(i2___lwdiv@dividend+1)^0,w,c
 19937   006370  A0D8               	btfss	status,0,c
 19938   006372  EFBD  F031         	goto	i2u379_41
 19939   006376  EFBF  F031         	goto	i2u379_40
 19940   00637A                     i2u379_41:
 19941   00637A  EFC4  F031         	goto	i2l4443
 19942   00637E                     i2u379_40:
 19943   00637E  5009               	movf	i2___lwdiv@divisor^0,w,c
 19944   006380  5E07               	subwf	i2___lwdiv@dividend^0,f,c
 19945   006382  500A               	movf	(i2___lwdiv@divisor+1)^0,w,c
 19946   006384  5A08               	subwfb	(i2___lwdiv@dividend+1)^0,f,c
 19947   006386  800B               	bsf	i2___lwdiv@quotient^0,0,c
 19948   006388                     i2l4443:
 19949   006388  90D8               	bcf	status,0,c
 19950   00638A  320A               	rrcf	(i2___lwdiv@divisor+1)^0,f,c
 19951   00638C  3209               	rrcf	i2___lwdiv@divisor^0,f,c
 19952   00638E  2E0D               	decfsz	i2___lwdiv@counter^0,f,c
 19953   006390  EFB1  F031         	goto	i2l4435
 19954   006394                     i2l1237:
 19955   006394  C00B  F007         	movff	i2___lwdiv@quotient,?i2___lwdiv
 19956   006398  C00C  F008         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 19957   00639C  0012               	return		;funcret
 19958   00639E                     __end_ofi2___lwdiv:
 19959                           	callstack 0
 19960                           
 19961                           	psect	rparam
 19962   000000                     
 19963                           	psect	temp
 19964   00005B                     btemp:
 19965                           	callstack 0
 19966   00005B                     	ds	1
 19967   000000                     int$flags	set	btemp
 19968   000000                     wtemp8	set	btemp+1
 19969   000000                     ttemp5	set	btemp+1
 19970   000000                     ttemp6	set	btemp+4
 19971   000000                     ttemp7	set	btemp+8
 19972                           
 19973                           	psect	idloc
 19974                           
 19975                           ;Config register IDLOC0 @ 0x200000
 19976                           ;	unspecified, using default values
 19977   200000                     	org	2097152
 19978   200000  0FFF               	dw	4095
 19979                           
 19980                           ;Config register IDLOC1 @ 0x200002
 19981                           ;	unspecified, using default values
 19982   200002                     	org	2097154
 19983   200002  0FFF               	dw	4095
 19984                           
 19985                           ;Config register IDLOC2 @ 0x200004
 19986                           ;	unspecified, using default values
 19987   200004                     	org	2097156
 19988   200004  0FFF               	dw	4095
 19989                           
 19990                           ;Config register IDLOC3 @ 0x200006
 19991                           ;	unspecified, using default values
 19992   200006                     	org	2097158
 19993   200006  0FFF               	dw	4095
 19994                           
 19995                           ;Config register IDLOC4 @ 0x200008
 19996                           ;	unspecified, using default values
 19997   200008                     	org	2097160
 19998   200008  0FFF               	dw	4095
 19999                           
 20000                           ;Config register IDLOC5 @ 0x20000A
 20001                           ;	unspecified, using default values
 20002   20000A                     	org	2097162
 20003   20000A  0FFF               	dw	4095
 20004                           
 20005                           ;Config register IDLOC6 @ 0x20000C
 20006                           ;	unspecified, using default values
 20007   20000C                     	org	2097164
 20008   20000C  0FFF               	dw	4095
 20009                           
 20010                           ;Config register IDLOC7 @ 0x20000E
 20011                           ;	unspecified, using default values
 20012   20000E                     	org	2097166
 20013   20000E  0FFF               	dw	4095
 20014                           
 20015                           	psect	config
 20016                           
 20017                           ;Config register CONFIG1L @ 0x300000
 20018                           ;	External Oscillator mode Selection bits
 20019                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 20020                           ;	Power-up default value for COSC bits
 20021                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 20022   300000                     	org	3145728
 20023   300000  AA                 	db	170
 20024                           
 20025                           ;Config register CONFIG1H @ 0x300001
 20026                           ;	unspecified, using default values
 20027                           ;	Clock Out Enable bit
 20028                           ;	CLKOUTEN = 0x1, unprogrammed default
 20029                           ;	Clock Switch Enable bit
 20030                           ;	CSWEN = 0x1, unprogrammed default
 20031                           ;	Fail-Safe Clock Monitor Enable bit
 20032                           ;	FCMEN = 0x1, unprogrammed default
 20033   300001                     	org	3145729
 20034   300001  FF                 	db	255
 20035                           
 20036                           ;Config register CONFIG2L @ 0x300002
 20037                           ;	unspecified, using default values
 20038                           ;	Master Clear Enable bit
 20039                           ;	MCLRE = 0x1, unprogrammed default
 20040                           ;	Power-up Timer Enable bit
 20041                           ;	PWRTE = 0x1, unprogrammed default
 20042                           ;	Low-power BOR enable bit
 20043                           ;	LPBOREN = 0x1, unprogrammed default
 20044                           ;	Brown-out Reset Enable bits
 20045                           ;	BOREN = 0x3, unprogrammed default
 20046   300002                     	org	3145730
 20047   300002  FF                 	db	255
 20048                           
 20049                           ;Config register CONFIG2H @ 0x300003
 20050                           ;	unspecified, using default values
 20051                           ;	Brown Out Reset Voltage selection bits
 20052                           ;	BORV = 0x3, unprogrammed default
 20053                           ;	ZCD Disable bit
 20054                           ;	ZCD = 0x1, unprogrammed default
 20055                           ;	PPSLOCK bit One-Way Set Enable bit
 20056                           ;	PPS1WAY = 0x1, unprogrammed default
 20057                           ;	Stack Full/Underflow Reset Enable bit
 20058                           ;	STVREN = 0x1, unprogrammed default
 20059                           ;	Debugger Enable bit
 20060                           ;	DEBUG = 0x1, unprogrammed default
 20061                           ;	Extended Instruction Set Enable bit
 20062                           ;	XINST = 0x1, unprogrammed default
 20063   300003                     	org	3145731
 20064   300003  FF                 	db	255
 20065                           
 20066                           ;Config register CONFIG3L @ 0x300004
 20067                           ;	WDT Period Select bits
 20068                           ;	WDTCPS = 0x1F, unprogrammed default
 20069                           ;	WDT operating mode
 20070                           ;	WDTE = OFF, WDT Disabled
 20071   300004                     	org	3145732
 20072   300004  9F                 	db	159
 20073                           
 20074                           ;Config register CONFIG3H @ 0x300005
 20075                           ;	unspecified, using default values
 20076                           ;	WDT Window Select bits
 20077                           ;	WDTCWS = 0x7, unprogrammed default
 20078                           ;	WDT input clock selector
 20079                           ;	WDTCCS = 0x7, unprogrammed default
 20080   300005                     	org	3145733
 20081   300005  FF                 	db	255
 20082                           
 20083                           ;Config register CONFIG4L @ 0x300006
 20084                           ;	unspecified, using default values
 20085                           ;	Write Protection Block 0
 20086                           ;	WRT0 = 0x1, unprogrammed default
 20087                           ;	Write Protection Block 1
 20088                           ;	WRT1 = 0x1, unprogrammed default
 20089                           ;	Write Protection Block 2
 20090                           ;	WRT2 = 0x1, unprogrammed default
 20091                           ;	Write Protection Block 3
 20092                           ;	WRT3 = 0x1, unprogrammed default
 20093                           ;	Write Protection Block 3
 20094                           ;	WRT4 = 0x1, unprogrammed default
 20095                           ;	Write Protection Block 3
 20096                           ;	WRT5 = 0x1, unprogrammed default
 20097                           ;	Write Protection Block 3
 20098                           ;	WRT6 = 0x1, unprogrammed default
 20099                           ;	Write Protection Block 3
 20100                           ;	WRT7 = 0x1, unprogrammed default
 20101   300006                     	org	3145734
 20102   300006  FF                 	db	255
 20103                           
 20104                           ;Config register CONFIG4H @ 0x300007
 20105                           ;	unspecified, using default values
 20106                           ;	Configuration Register Write Protection bit
 20107                           ;	WRTC = 0x1, unprogrammed default
 20108                           ;	Boot Block Write Protection bit
 20109                           ;	WRTB = 0x1, unprogrammed default
 20110                           ;	Data EEPROM Write Protection bit
 20111                           ;	WRTD = 0x1, unprogrammed default
 20112                           ;	Scanner Enable bit
 20113                           ;	SCANE = 0x1, unprogrammed default
 20114                           ;	Low Voltage Programming Enable bit
 20115                           ;	LVP = 0x1, unprogrammed default
 20116   300007                     	org	3145735
 20117   300007  FF                 	db	255
 20118                           
 20119                           ;Config register CONFIG5L @ 0x300008
 20120                           ;	unspecified, using default values
 20121                           ;	UserNVM Program Memory Code Protection bit
 20122                           ;	CP = 0x1, unprogrammed default
 20123                           ;	DataNVM Memory Code Protection bit
 20124                           ;	CPD = 0x1, unprogrammed default
 20125   300008                     	org	3145736
 20126   300008  FF                 	db	255
 20127                           
 20128                           ;Config register CONFIG5H @ 0x300009
 20129                           ;	unspecified, using default values
 20130   300009                     	org	3145737
 20131   300009  FF                 	db	255
 20132                           
 20133                           ;Config register CONFIG6L @ 0x30000A
 20134                           ;	unspecified, using default values
 20135                           ;	Table Read Protection Block 0
 20136                           ;	EBTR0 = 0x1, unprogrammed default
 20137                           ;	Table Read Protection Block 1
 20138                           ;	EBTR1 = 0x1, unprogrammed default
 20139                           ;	Table Read Protection Block 2
 20140                           ;	EBTR2 = 0x1, unprogrammed default
 20141                           ;	Table Read Protection Block 3
 20142                           ;	EBTR3 = 0x1, unprogrammed default
 20143                           ;	Table Read Protection Block 4
 20144                           ;	EBTR4 = 0x1, unprogrammed default
 20145                           ;	Table Read Protection Block 5
 20146                           ;	EBTR5 = 0x1, unprogrammed default
 20147                           ;	Table Read Protection Block 6
 20148                           ;	EBTR6 = 0x1, unprogrammed default
 20149                           ;	Table Read Protection Block 7
 20150                           ;	EBTR7 = 0x1, unprogrammed default
 20151   30000A                     	org	3145738
 20152   30000A  FF                 	db	255
 20153                           
 20154                           ;Config register CONFIG6H @ 0x30000B
 20155                           ;	unspecified, using default values
 20156                           ;	Boot Block Table Read Protection bit
 20157                           ;	EBTRB = 0x1, unprogrammed default
 20158   30000B                     	org	3145739
 20159   30000B  FF                 	db	255
 20160                           tosu	equ	0xFFF
 20161                           tosh	equ	0xFFE
 20162                           tosl	equ	0xFFD
 20163                           stkptr	equ	0xFFC
 20164                           pclatu	equ	0xFFB
 20165                           pclath	equ	0xFFA
 20166                           pcl	equ	0xFF9
 20167                           tblptru	equ	0xFF8
 20168                           tblptrh	equ	0xFF7
 20169                           tblptrl	equ	0xFF6
 20170                           tablat	equ	0xFF5
 20171                           prodh	equ	0xFF4
 20172                           prodl	equ	0xFF3
 20173                           indf0	equ	0xFEF
 20174                           postinc0	equ	0xFEE
 20175                           postdec0	equ	0xFED
 20176                           preinc0	equ	0xFEC
 20177                           plusw0	equ	0xFEB
 20178                           fsr0h	equ	0xFEA
 20179                           fsr0l	equ	0xFE9
 20180                           wreg	equ	0xFE8
 20181                           indf1	equ	0xFE7
 20182                           postinc1	equ	0xFE6
 20183                           postdec1	equ	0xFE5
 20184                           preinc1	equ	0xFE4
 20185                           plusw1	equ	0xFE3
 20186                           fsr1h	equ	0xFE2
 20187                           fsr1l	equ	0xFE1
 20188                           bsr	equ	0xFE0
 20189                           indf2	equ	0xFDF
 20190                           postinc2	equ	0xFDE
 20191                           postdec2	equ	0xFDD
 20192                           preinc2	equ	0xFDC
 20193                           plusw2	equ	0xFDB
 20194                           fsr2h	equ	0xFDA
 20195                           fsr2l	equ	0xFD9
 20196                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    0
    Data        9
    BSS         379
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      90
    BANK0           160    159     160
    BANK1           256    158     214
    BANK2           256      0     190
    BANK3           256      0     100
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2875$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2791$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2791$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK2[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK3[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhllll[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_go_Home
    i2_go_Home->i2_BlueMove
    i2_go_Home->i2_GreenMove
    i2_go_Home->i2_LightBlueMove
    i2_go_Home->i2_OrangeMove
    i2_go_Home->i2_RedMove
    i2_go_Home->i2_ReversePink
    i2_go_Home->i2_ReverseYellow
    i2_timed_forward->i2_setMotorPWM
    i2_ReverseYellow->i2_ForwardOneBlock
    i2_ReverseYellow->i2_reverseDetect
    i2_ReverseYellow->i2_turnRight45
    i2_ReversePink->i2_ForwardOneBlock
    i2_ReversePink->i2_reverseDetect
    i2_ReversePink->i2_turnLeft45
    i2_ForwardOneBlock->i2_fullSpeedAhead
    i2_fullSpeedAhead->i2_setMotorPWM
    i2_RedMove->i2_reverseDetect
    i2_RedMove->i2_turnRight45
    i2_OrangeMove->i2_reverseDetect
    i2_OrangeMove->i2_turnRight45
    i2_LightBlueMove->i2_reverseDetect
    i2_LightBlueMove->i2_turnLeft45
    i2_GreenMove->i2_reverseDetect
    i2_GreenMove->i2_turnLeft45
    i2_turnLeft45->i2_turnLeft
    i2_turnLeft->i2_setMotorPWM
    i2_BlueMove->i2_reverseDetect
    i2_BlueMove->i2_turnRight45
    i2_turnRight45->i2_turnRight
    i2_turnRight->i2_setMotorPWM
    i2_reverseDetect->i2_fullSpeedBack
    i2_stop->i2_setMotorPWM
    i2_fullSpeedBack->i2_setMotorPWM
    i2_setMotorPWM->i2___lwdiv
    i2___lwdiv->i2___wmul

Critical Paths under _main in BANK0

    _turnCalibration->_turnLeft45
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseDetect->_fullSpeedBack
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _delayed_ms->___awdiv
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411203
                                            157 BANK0      2     2      0
                                             50 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9161
                                             32 BANK0      6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35213
                                             17 BANK1     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34858
                                            155 BANK0      2     2      0
                                             11 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34505
                                            147 BANK0      8     2      6
                                              0 BANK1     11    11      0
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28659
                                             94 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 BANK0      2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 BANK0      2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 BANK0      7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 BANK0      7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 BANK0      7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 BANK0      7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 BANK0      3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  162979
                                             36 BANK0      9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        9     3      6    2889
                                             19 BANK0      9     3      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   26039
                                             32 BANK0      4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   26039
                                             32 BANK0      4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7436
                                             26 BANK0      6     2      4
                         _delayed_ms
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18755
                                             32 BANK0      4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18755
                                             32 BANK0      4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18755
                                             32 BANK0      4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18755
                                             32 BANK0      4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18907
                                             32 BANK0      4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8600
                                             74 BANK0     28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 BANK0      1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 BANK0      2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 BANK0      1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   26039
                                             32 BANK0      4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9009
                                             26 BANK0      6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            7     3      4    2365
                                             19 BANK0      7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9723
                                             26 BANK0      6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   26039
                                             32 BANK0      4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9009
                                             26 BANK0      6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             7     3      4    2365
                                             19 BANK0      7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    7436
                                             26 BANK0      6     2      4
                         _delayed_ms
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9442
                                             26 BANK0      6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     3      4    2821
                                             19 BANK0      7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    7888
                                             26 BANK0      6     2      4
                            ___awdiv
                         _delayed_ms
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3841
                                             19 BANK0      6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       7     3      4    2821
                                             19 BANK0      7     3      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    2037
                                             13 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     383
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     386
                                              6 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     426
                                              8 BANK0      5     3      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23331
                                             74 BANK0     38    34      4
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             16 BANK0     25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 BANK0     12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              4     4      0   63393
                                             45 COMRAM     4     4      0
                          i2_go_Home
 ---------------------------------------------------------------------------------
 (10) i2_go_Home                                           9     5      4   63393
                                             36 COMRAM     9     5      4
                         i2_BlueMove
                        i2_GreenMove
                    i2_LightBlueMove
                       i2_OrangeMove
                          i2_RedMove
                      i2_ReversePink
                    i2_ReverseYellow
                    i2_reverseDetect
                             i2_stop
                    i2_timed_forward
 ---------------------------------------------------------------------------------
 (11) i2_timed_forward                                     9     3      6    1431
                                             19 COMRAM     9     3      6
                       i2_delayed_ms
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (11) i2_ReverseYellow                                     4     0      4   10275
                                             32 COMRAM     4     0      4
                  i2_ForwardOneBlock
                    i2_reverseDetect
                      i2_turnRight45
 ---------------------------------------------------------------------------------
 (11) i2_ReversePink                                       4     0      4   10067
                                             32 COMRAM     4     0      4
                  i2_ForwardOneBlock
                    i2_reverseDetect
                       i2_turnLeft45
 ---------------------------------------------------------------------------------
 (12) i2_ForwardOneBlock                                   6     2      4    2980
                                             26 COMRAM     6     2      4
                       i2_delayed_ms
                   i2_fullSpeedAhead
                             i2_stop
 ---------------------------------------------------------------------------------
 (13) i2_fullSpeedAhead                                    7     3      4    1285
                                             19 COMRAM     7     3      4
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (12) i2_delayed_ms                                        5     3      2      98
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (11) i2_RedMove                                           4     0      4    7295
                                             32 COMRAM     4     0      4
                    i2_reverseDetect
                      i2_turnRight45
 ---------------------------------------------------------------------------------
 (11) i2_OrangeMove                                        4     0      4    7295
                                             32 COMRAM     4     0      4
                    i2_reverseDetect
                      i2_turnRight45
 ---------------------------------------------------------------------------------
 (11) i2_LightBlueMove                                     4     0      4    7087
                                             32 COMRAM     4     0      4
                    i2_reverseDetect
                       i2_turnLeft45
 ---------------------------------------------------------------------------------
 (11) i2_GreenMove                                         4     0      4    7087
                                             32 COMRAM     4     0      4
                    i2_reverseDetect
                       i2_turnLeft45
 ---------------------------------------------------------------------------------
 (12) i2_turnLeft45                                        6     2      4    3425
                                             26 COMRAM     6     2      4
                        i2_TurnDelay
                             i2_stop
                         i2_turnLeft
 ---------------------------------------------------------------------------------
 (13) i2_turnLeft                                          7     3      4    1285
                                             19 COMRAM     7     3      4
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (11) i2_BlueMove                                          4     0      4    7347
                                             32 COMRAM     4     0      4
                    i2_reverseDetect
                      i2_turnRight45
 ---------------------------------------------------------------------------------
 (12) i2_turnRight45                                       6     2      4    3633
                                             26 COMRAM     6     2      4
                        i2_TurnDelay
                             i2_stop
                        i2_turnRight
 ---------------------------------------------------------------------------------
 (13) i2_turnRight                                         7     3      4    1285
                                             19 COMRAM     7     3      4
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (13) i2_TurnDelay                                         3     1      2      75
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (11) i2_reverseDetect                                     6     2      4    3610
                                             26 COMRAM     6     2      4
                    i2_fullSpeedBack
                             i2_stop
 ---------------------------------------------------------------------------------
 (11) i2_stop                                              6     2      4    1449
                                             19 COMRAM     6     2      4
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (12) i2_fullSpeedBack                                     7     3      4    1285
                                             19 COMRAM     7     3      4
                      i2_setMotorPWM
 ---------------------------------------------------------------------------------
 (12) i2_setMotorPWM                                       6     4      2    1057
                                             13 COMRAM     6     4      2
                          i2___lwdiv
                           i2___wmul
 ---------------------------------------------------------------------------------
 (13) i2___wmul                                            6     2      4     193
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (13) i2___lwdiv                                           7     3      4     196
                                              6 COMRAM     7     3      4
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     ___awdiv
     _delayed_ms
       ___awdiv (ARG)
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _delayed_ms
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _delayed_ms
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)
   i2_go_Home
     i2_BlueMove
       i2_reverseDetect
         i2_fullSpeedBack
           i2_setMotorPWM
             i2___lwdiv
               i2___wmul (ARG)
             i2___wmul
         i2_stop
           i2_setMotorPWM
       i2_turnRight45
         i2_TurnDelay
         i2_stop
         i2_turnRight
           i2_setMotorPWM
     i2_GreenMove
       i2_reverseDetect
       i2_turnLeft45
         i2_TurnDelay
         i2_stop
         i2_turnLeft
           i2_setMotorPWM
     i2_LightBlueMove
       i2_reverseDetect
       i2_turnLeft45
     i2_OrangeMove
       i2_reverseDetect
       i2_turnRight45
     i2_RedMove
       i2_reverseDetect
       i2_turnRight45
     i2_ReversePink
       i2_ForwardOneBlock
         i2_delayed_ms
         i2_fullSpeedAhead
           i2_setMotorPWM
         i2_stop
       i2_reverseDetect
       i2_turnLeft45
     i2_ReverseYellow
       i2_ForwardOneBlock
       i2_reverseDetect
       i2_turnRight45
     i2_reverseDetect
     i2_stop
     i2_timed_forward
       i2_delayed_ms
       i2_setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      64      11       39.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      BE       9       74.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     9E      D6       7       83.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     31      5A       1       95.7%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      63        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlhh       1B      0       0      33        0.0%
BITBIGSFRhlllh      17      0       0      38        0.0%
BITBIGSFRhlhlh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhlhllh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      61        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      62        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      58        0.0%
BITBIGSFRhllll       5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhlhlll      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllll      1      0       0      59        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2F2      64        0.0%
DATA                 0      0     2F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 19:13:39 2023

               _color_read_Red 68CA                   ___fldiv@aexp 00A9                   ___fldiv@bexp 00A8  
               _color_read_lum 6876                   ___fldiv@sign 00A1                _color_read_Blue 6972  
                i2_ReversePink 5E52                             l51 68C8                             l60 69C4  
                           l45 6710                             l54 691C                             l63 64DA  
                           l48 71BC                             l57 6970                             l66 3866  
                           l76 1952                   ___awdiv@sign 0065                ??_timed_forward 0079  
          ___wmul@multiplicand 0062             i2___lwdiv@dividend 0007                _turnCalibration 45FC  
             _color_read_Green 691E                readColours@vals 006B              ??_Interrupts_init 0060  
                          l200 7220                            l140 7148                            l212 723A  
                          l143 70F6                            l152 7260                            l161 6C9A  
                          l209 7226                            l146 711E                            l218 70F4  
                          l155 726A                            l149 7274                            l158 7248  
                          l600 6C4C                            l433 2438                            l603 6B5C  
                          l612 6E9E                            l621 676A                            l542 6140  
                          l606 6540                            l550 5694                            l630 66B6  
                          l615 6EE2                            l455 288A                            l536 4CA6  
                          l296 7256                            l624 67C4                            l464 289E  
                          l633 60C0                            l713 3E7C                            l529 603A  
                          l618 640C                            l642 479A                            l627 665C  
                          l707 3E52                            l643 461C                            l459 2840  
                          l740 6F4C                            l636 58F4                            l653 477E  
                          l645 4678                            l566 582C                            l582 5760  
                          l734 7202                            l558 55C8                            l574 535E  
                          l654 47D2                            l646 46F2                            l743 6F62  
                          l591 6BAC                            l639 59BC                            l655 47EE  
                          l647 4762                            l648 472A                            l585 6FFE  
                          l737 7196                            l746 7170                            l594 6BFC  
                          l588 701A                            l860 4B30                            l597 6602  
                          l873 4F78                            l977 5A82                            _abs 6EE4  
                          _pad 6142                            _rel 01AE                            wreg 000FE8  
                  i2_TurnDelay 708E                   ___flmul@aexp 0081                   ___flmul@bexp 0082  
                 ___flmul@sign 007C                   ___flmul@temp 0087                   ___flmul@prod 0083  
        __end_ofi2_setMotorPWM 4E14                   ___fltol@exp1 0069                Colour_decider@i 00CA  
                         l1011 5140                           l1020 7054                           l1005 5FB2  
                         l1016 5186                           l1043 5080                           ?_abs 0072  
                         l1300 2C7C                           l1301 2C6A                           l1401 484A  
                         l1330 338A                           l1316 6E14                           l1404 49A6  
                         l1244 6328                           l1341 3448                           l1333 334E  
                         l1237 6320                           l1342 3436                           l1415 493E  
                         l1328 352A                           l1360 2E2A                           l1408 48E2  
                         l1424 6A16                           l1370 3086                           l1274 2A92  
                         l1339 33D0                           l1291 2BAC                           l1283 2D62  
                         l1275 2A80                           l1523 213A                           l1364 318E  
                         l1276 2A46                           l1460 61BE                           l1604 6A68  
              i2_ReverseYellow 5D9C                           l1367 3020                           l1616 54FC  
                         l1624 6DCC                           l1456 6166                           l1560 6874  
                         l1377 3150                           l1369 3098                           l4201 28F2  
                         l1465 41EE                           l1633 6E5A                           l1570 5286  
                         l1490 235A                           l1538 3B86                           l4211 2924  
                         l4203 28FA                           l5011 70F6                           l1627 7280  
                         l1467 41F6                           l1468 423E                           l4301 2AFC  
                         l4221 295A                           l4213 292A                           l4205 290A  
                         l5021 57AC                           l5013 7106                           l5101 4194  
                         l1493 1CEC                           l4303 2B00                           l4311 2B20  
                         l4231 2996                           l4223 296A                           l4215 2938  
                         l4207 2910                           l5023 57B8                           l5015 5762  
                         l5031 60C6                           l1575 6F1C                           l1479 43E4  
                         l5111 4210                           l5103 41A4                           l1495 1B2C  
                         l1584 45FA                           l4313 2B46                           l4321 2B9C  
                         l4305 2B0E                           l4241 29B4                           l4233 29A4  
                         l4225 296C                           l4217 293A                           l4209 2922  
                         l4401 62F4                           l5017 5788                           l5025 57D2  
                         l5041 6128                           l5033 60DE                           l5121 4246  
                         l5113 4216                           l5105 41C4                           l5201 1AC0  
                         l1578 6F24                           l4331 2BF0                           l4323 2BC2  
                         l4315 2B7A                           l4307 2B10                           l4251 29C8  
                         l4243 29B8                           l4235 29A8                           l4219 294A  
                         l4227 2974                           l6011 16FE                           l6003 168A  
                         l4403 630A                           l5027 5800                           l5019 57A0  
                         l5035 60EA                           l5051 5620                           l5043 55CA  
                         l4171 5458                           l4411 6D86                           l5131 42E6  
                         l5123 4250                           l5115 4226                           l5107 41E0  
                         l1587 453E                           l1595 6464                           l5211 1AF4  
                         l4341 2C1A                           l4333 2BFE                           l4325 2BD2  
                         l4317 2B7C                           l4309 2B1A                           l4261 29DC  
                         l4253 29CC                           l4245 29BC                           l4237 29AC  
                         l4229 2984                           l4405 6312                           l4181 714A  
                         l5037 60F6                           l5029 60C2                           l5045 55F0  
                         l5053 563A                           l5061 553C                           l6101 3BA0  
                         l4501 4AF0                           l4173 5462                           l4413 6D94  
                         l5141 43AE                           l5125 4256                           l5133 434A  
                         l5117 4232                           l5109 41FE                           l5301 2080  
                         l5221 1BB4                           l1598 6474                           l4351 2C4C  
                         l4343 2C2A                           l4335 2C00                           l4319 2B8C  
                         l4271 2A2E                           l4263 29E0                           l4255 29D0  
                         l4247 29C0                           l4239 29B0                           l4191 28BE  
                         l6023 1742                           l6007 1696                           l5071 6F26  
                         l4407 6314                           l4183 7168                           l5039 6110  
                         l5055 5668                           l5047 5608                           l5063 5548  
                         l6111 3C14                           l6103 3BA8                           l4503 4B10  
                         l4511 4E28                           l4175 5480                           l4167 5432  
                         l4415 6DA6                           l5143 43B4                           l5135 4366  
                         l5127 42DA                           l5119 423A                           l5311 2132  
                         l5303 2084                           l5231 1C76                           l5223 1BE8  
                         l5215 1B3C                           l5151 195A                           l4601 32C8  
                         l4361 2CA6                           l4353 2C62                           l4337 2C0E  
                         l4329 2BE6                           l4345 2C2C                           l4281 2A72  
                         l4273 2A3E                           l4257 29D4                           l4249 29C4  
                         l4265 29E4                           l4193 28C0                           l6041 187E  
                         l6025 1776                           l6009 16CA                           l5073 6F34  
                         l4409 631A                           l5081 56D4                           l5049 5614  
                         l5065 5554                           l5057 54FE                           l6121 3CF2  
                         l6113 3C42                           l4521 4E98                           l4513 4E48  
                         l4177 54B6                           l4169 5446                           l4417 6DAC  
                         l5145 43C4                           l5137 4384                           l5129 42E0  
                         l5321 2174                           l5313 214C                           l5305 208C  
                         l5241 1D10                           l5225 1C26                           l5217 1B40  
                         l5209 1ADC                           l5161 19AA                           l5153 196A  
                         l6201 4740                           l4611 331A                           l4603 32E2  
                         l4371 2D22                           l4363 2CE0                           l4339 2C16  
                         l4347 2C3A                           l4283 2A74                           l4275 2A54  
                         l4267 29E8                           l4259 29D8                           l4195 28D0  
                         l4187 28A2                           l6043 18BA                           l6051 18FA  
                         l6027 17AA                           l5075 6F46                           l4451 4BA8  
                         l5083 56E0                           l5091 6FE0                           l5059 5524  
                         l5067 556E                           l6131 3DCC                           l6123 3D1C  
                         l6115 3C6C                           l6107 3BBC                           l4531 4F10  
                         l4523 4EA0                           l4515 4E4C                           l4507 4E14  
                         l5139 439E                           l5323 217C                           l5315 215A  
                         l5331 219C                           l5307 2098                           l5251 1D48  
                         l5243 1D1A                           l5227 1C3A                           l5235 1CB8  
                         l5219 1B74                           l5171 19E6                           l5163 19B2  
                         l5155 1978                           l6211 4780                           l6203 4742  
                         l4621 3376                           l4613 332A                           l4605 32F2  
                         l4701 2DD4                           l4381 2D42                           l4373 2D26  
                         l4357 2C8C                           l4365 2CE2                           l4349 2C3E  
                         l4293 2AC4                           l4285 2A7E                           l4277 2A60  
                         l4269 2A12                           l4197 28E0                           l4189 28B0  
                         l6029 17DE                           l6037 1816                           l4461 4C66  
                         l4453 4BBC                           l5085 56EC                           l5077 5696  
                         l5501 65BC                           l5093 6FE4                           l6221 7200  
                         l5069 559C                           l6133 3DFA                           l6125 3D4A  
                         l6117 3C9A                           l6109 3BEA                           l6141 3E5E  
                         l4533 4F22                           l4525 4EB4                           l4517 4E5A  
                         l4509 4E1A                           l5341 2222                           l5333 21AE  
                         l5325 218C                           l5317 216A                           l5309 2112  
                         l5261 1D92                           l5253 1D60                           l5245 1D22  
                         l5237 1CF4                           l5229 1C6E                           l5181 1A2C  
                         l5165 19C2                           l5173 19EA                           l5157 197C  
                         l5149 1954                           l6213 47D4                           l6205 475C  
                         ?_pad 0070                           l4631 33B6                           l4623 3378  
                         l4615 333E                           l4607 3302                           l4551 31BE  
                         l4543 3190                           l4711 2E14                           l4703 2DE2  
                         l4383 2D50                           l4375 2D34                           l4367 2CF2  
                         l4359 2C98                           l4295 2AD4                           l4287 2AA0  
                         l4279 2A64                           l4199 28F0                           l6039 184A  
                         l6063 194A                           l4391 62BE                           l4455 4BC0  
                         l4447 4B32                           l6231 64F0                           l5079 56BC  
                         l5087 5706                           l5503 65D4                           l5095 6FF6  
                         l6215 71E4                           l6223 7172                           l5511 6B44  
                         l6143 3E72                           l6135 3E24                           l6127 3D74  
                         l6119 3CC4                           l6151 5FCA                           l6071 7210  
                         l4471 49E0                           l4463 49A8                           l4527 4EC2  
                         l4535 4F28                           l4519 4E7A                           l5351 229E  
                         l5343 2258                           l5335 21C0                           l5327 2190  
                         l5319 216E                           l5263 1DA6                           l5271 1E9E  
                         l5255 1D72                           l5247 1D28                           l5239 1D04  
                         l5183 1A34                           l5175 1A12                           l5191 1A76  
                         l5167 19D2                           l5159 19A0                           l6207 4762  
                         l4641 33F2                           l4633 33C0                           l4625 3388  
                         l4617 334C                           l4609 3312                           l4561 31F8  
                         l4553 31CE                           l4545 319E                           l4801 3172  
                         l4721 2E5E                           l4713 2E1A                           l4705 2DE4  
                         l4385 2D52                           l4377 2D3A                           l4369 2D02  
                         l4297 2AE2                           l4289 2AB0                           l4393 62D0  
                         l4457 4C06                           l4449 4B50                           l6233 6512  
                         l5089 5734                           l6217 71EC                           l6225 7174  
                         l5505 6B0E                           l6129 3DA2                           l6137 3E52  
                         l6161 6014                           l6153 5FCC                           l6145 5FB4  
                         l6073 721A                           l6081 70C8                           l4481 4A3C  
                         l4473 49EE                           l4465 49AE                           l4537 4F38  
                         l4529 4EF0                           l5097 415E                           l5361 230C  
                         l5353 22A6                           l5345 2260                           l5337 21C4  
                         l5329 2196                           l5281 1F6C                           l5273 1EBC  
                         l5265 1E0A                           l5249 1D3A                           l5257 1D7A  
                         l5193 1A9E                           l5185 1A4C                           l5177 1A22  
                         l5169 19DE                           l5521 38B0                           l5513 3868  
                         l6241 69E0                           l6209 4770                           l6401 23B6  
                         l4651 3464                           l4643 3400                           l4635 33CE  
                         l4627 339A                           l4619 3358                           l4571 3224  
                         l4563 31FE                           l4555 31DE                           l4547 31AC  
                         l4803 3174                           l4731 2EAE                           l4723 2E6A  
                         l4715 2E3A                           l4707 2DF4                           l4379 2D3C  
                         l4299 2AF0                           l4811 6DCE                           l6059 193E  
                         l4395 62D8                           l4459 4C22                           l6235 6528  
                         l6251 676C                           l6219 71F6                           l6227 717C  
                         l5507 6B22                           l6171 602E                           l6163 6016  
                         l6155 5FE2                           l6147 5FC6                           l6075 721C  
                         l6067 7204                           l6083 70D6                           l4491 4AA6  
                         l4483 4A44                           l4475 4A0E                           l4467 49BC  
                         l4539 4F58                           l5099 417E                           l5363 231C  
                         l5355 22B6                           l5339 21CA                           l5347 2264  
                         l5291 201C                           l5283 1F7A                           l5275 1EF0  
                         l5267 1E62                           l5259 1D82                           l5195 1AAE  
                         l5187 1A56                           l5179 1A26                           l5523 38C0  
                         l5515 3890                           l6243 69E8                           l6411 23D6  
                         l6403 23BE                           l4661 34D0                           l4653 3472  
                         l4645 342E                           l4629 33B0                           l4637 33E0  
                         l4581 325E                           l4573 3234                           l4565 3204  
                         l4557 31E0                           l4549 31AE                           l4821 5F48  
                         l4805 317A                           l4741 2EF0                           l4733 2EBA  
                         l4725 2E74                           l4717 2E4A                           l4709 2E04  
                         l4813 6DE0                           l4397 62E0                           l4389 62B4  
                         l6229 64DC                           l6261 6092                           l6253 603C  
                         l5453 726C                           l5461 7262                           l5509 6B2E  
                         l5701 582E                           l6173 6038                           l6165 6020  
                         l6157 5FE6                           l6149 5FC8                           l6077 721E  
                         l6069 720E                           l6085 70DC                           l4493 4AC6  
                         l4485 4A58                           l4477 4A12                           l4469 49DC  
                         l4901 5060                           l5365 2332                           l5357 22E6  
                         l5349 2282                           l5293 2050                           l5285 1F8A  
                         l5277 1F24                           l5269 1E98                           l5197 1AB2  
                         l5541 39C6                           l5533 398C                           l5525 38E0  
                         l5517 389E                           l6245 6A04                           l6237 69C6  
                         l6181 467A                           l6501 26C6                           l6421 23FA  
                         l6413 23DA                           l6405 23C6                           l6341 235C  
                         l4671 351E                           l4663 34EA                           l4655 349C  
                         l4639 33EE                           l4583 3274                           l4575 3244  
                         l4567 3212                           l4559 31E8                           l4823 5F76  
                         l4807 317E                           l4751 2F52                           l4743 2EFC  
                         l4735 2EC6                           l4727 2E8A                           l5711 59DA  
                         l4399 62EE                           l6095 724A                           l6255 6050  
                         l5631 7132                           l5455 7270                           l5463 7266  
                         l5703 58F6                           l6167 6022                           l6159 600A  
                         l5471 6C56                           l6079 70C4                           l4495 4AC8  
                         l4487 4A66                           l4479 4A1E                           l4911 615E  
                         l4903 5070                           l5367 233A                           l5359 22F4  
                         l5295 2064                           l5287 1FBE                           l5279 1F38  
                         l5199 1AB8                           l5551 3A5C                           l5535 399C  
                         l5527 3900                           l5519 38AC                           l6239 69D8  
                         l6191 4700                           l6183 46CC                           l6175 45FC  
                         l6511 270C                           l6503 26CA                           l6431 241E  
                         l6423 2402                           l6415 23E2                           l6407 23CE  
                         l6351 237A                           l6343 2360                           l4673 3520  
                         l4665 3506                           l4649 3458                           l4657 34A0  
                         l4585 3284                           l4593 32A4                           l4577 3246  
                         l4569 3214                           l4825 5F86                           l4817 5F08  
                         l4841 5100                           l4833 5082                           l4761 2FE8  
                         l4753 2F5E                           l4745 2F0C                           l4737 2ED4  
                         l4729 2E96                           l4681 2D64                           l5721 5A00  
                         l5713 59DE                           l5705 59BE                           l6257 6068  
                         l6249 6712                           l5633 7134                           l5625 7120  
                         l5457 7240                           l6097 3B88                           l6169 602C  
                         l5473 6C5E                           l5465 7258                           l5641 68C0  
                         l4497 4ADA                           l4489 4A78                           l4921 6EE4  
                         l4913 6172                           l5289 2018                           l5297 2068  
                         l5537 39B2                           l5545 39D0                           l5529 395C  
                         l5801 686A                           l6193 4708                           l6185 46D0  
                         l6177 45FE                           l6521 2752                           l6513 2710  
                         l6505 26CE                           l6441 248E                           l6433 2446  
                         l6425 2406                           l6417 23EA                           l6409 23D2  
                         l6361 2386                           l6353 237C                           l6345 2364  
                         l4667 350A                           l4659 34BA                           l4595 32B4  
                         l4587 328C                           l4579 324E                           l4827 5FAA  
                         l4819 5F38                           l4851 5184                           l4843 510E  
                         l4835 50B2                           l4771 303E                           l4763 3006  
                         l4755 2F7A                           l4747 2F26                           l4739 2EE0  
                         l4691 2DA2                           l4683 2D72                           l5731 5A36  
                         l5723 5A12                           l5715 59EC                           l5707 59C4  
                         l5491 6BAE                           l6259 607E                           l5483 6B5E  
                         l5635 7136                           l5627 712A                           l5459 7244  
                         l6099 3B9E                           l5475 6C66                           l5467 725C  
                         l5651 691E                           l4499 4AE0                           l4923 6F00  
                         l4915 6186                           l4907 6142                           l4931 5210  
                         l5299 2078                           l5555 3A90                           l5539 39BC  
                         l5547 3A04                           l5571 3B58                           l6195 470A  
                         l6187 46EA                           l6179 461E                           l6531 2798  
                         l6523 2756                           l6515 2714                           l6507 26E2  
                         l6451 24D8                           l6443 249C                           l6435 2460  
                         l6427 2406                           l6419 23F2                           l6371 2390  
                         l6363 2388                           l6355 237E                           l6347 2368  
                         l4669 3518                           l4597 32B4                           l4589 3290  
                         l4829 5FB0                           l4845 5120                           l4837 50C2  
                         l4781 30A8                           l4773 3042                           l4765 3010  
                         l4757 2FA4                           l4749 2F36                           l4693 2DB2  
                         l4685 2D80                           l5901 0F68                           l5733 5A4C  
                         l5725 5A1A                           l5741 5A62                           l5717 59F4  
                         l5709 59D2                           l5493 6BC2                           l5485 6B72  
                         l5629 7130                           l5637 719C                           l5477 6C94  
                         l5469 6C52                           l5653 6968                           l5645 68CA  
                         l4917 618C                           l4909 6152                           l4933 521C  
                         l4925 5188                           l5565 3B16                           l5557 3ABC  
                         l5549 3A28                           l6197 4724                           l6189 46EC  
                         l6541 27DE                           l6533 279C                           l6525 275A  
                         l6509 26F6                           l6517 2728                           l6461 2558  
                         l6453 24EE                           l6445 24B2                           l6437 2468  
                         l6429 241C                           l6381 239A                           l6373 2392  
                         l6365 238A                           l6357 2380                           l6349 236C  
                         l4847 512E                           l4839 50F0                           l4791 310A  
                         l4783 30B4                           l4775 3050                           l4767 301E  
                         l4759 2FDA                           l4695 2DB8                           l4687 2D82  
                         l5751 4806                           l5911 1028                           l5903 0F98  
                         l5743 5A72                           l5735 5A54                           l5727 5A22  
                         l5719 59F8                           l5495 6BCE                           l5487 6B7E  
                         l5671 639E                           l5479 6C96                           l5647 6914  
                         l5639 6876                           l5663 7226                           l4919 61AA  
                         l4855 701C                           l4871 4FD0                           l4863 4F7A  
                         l4943 527E                           l4927 51A8                           l4951 640E  
                         l5559 3AE4                           l5567 3B46                           l6199 4738  
                         l6551 2812                           l6543 27E2                           l6535 27A0  
                         l6519 273C                           l6527 276E                           l6471 25A6  
                         l6463 2560                           l6455 2504                           l6447 24D0  
                         l6439 2478                           l6391 23A4                           l6383 239C  
                         l6375 2394                           l6367 238C                           l6359 2382  
                         l4849 517E                           l4793 311E                           l4785 30C2  
                         l4777 307E                           l4769 3030                           l4697 2DC8  
                         l4689 2D92                           l5761 4884                           l5753 4814  
                         l5921 10BC                           l5913 1044                           l5905 0FA0  
                         l5745 5A7A                           l5737 5A56                           l5729 5A30  
                         l5497 6BE4                           l5489 6B94                           l5841 66D8  
                         l5673 6EA0                           l5681 52C6                           l5657 6972  
                         l5665 7236                           l4857 7034                           l4873 4FD2  
                         l4865 4F92                           l4929 51E8                           l4937 5228  
                         l4961 4472                           l4953 642E                           l6561 2870  
                         l6553 2826                           l6545 27E6                           l6529 2782  
                         l6537 27B4                           l6481 263A                           l6473 25AE  
                         l6465 2568                           l6457 2520                           l6449 24D4  
                         l6393 23A6                           l6385 239E                           l6377 2396  
                         l6369 238E                           l4795 3138                           l4787 30EC  
                         l4699 2DCE                           l5771 48D8                           l5763 488C  
                         l5755 485A                           l5931 1234                           l5923 115E  
                         l5915 109E                           l5907 0FF4                           l5739 5A5C  
                         l5499 65A8                           l5851 6700                           l5843 66E4  
                         l5835 66B8                           l5675 665E                           l5667 6E5C  
                         l5691 5352                           l5683 52D2                           l5659 69BC  
                         l4859 7044                           l4875 4FE2                           l4939 523A  
                         l4963 4480                           l4971 4562                           l4955 43E6  
                         l4947 6E16                           l6555 282A                           l6539 27C8  
                         l6547 27FA                           l6491 2680                           l6483 263E  
                         l6475 2602                           l6467 2570                           l6459 253E  
                         l6563 288A                           l6395 23A8                           l6387 23A0  
                         l6379 2398                           l4797 3154                           l4789 30F0  
                         l5781 494E                           l5773 4914                           l5765 4898  
                         l5757 4870                           l5749 47F4                           l5941 13D6  
                         l5933 1294                           l5925 116E                           l5909 1024  
                         l5693 6BFE                           l5861 670A                           l5853 6702  
                         l5845 66F0                           l5837 66BC                           l5669 6604  
                         l5685 52DE                           l5677 5288                           l4885 500C  
                         l4877 4FE6                           l4869 4FA6                           l4973 459E  
                         l4957 4406                           l4949 6E26                           l6549 280E  
                         l6557 285A                           l6493 2684                           l6485 2642  
                         l6477 2610                           l6469 2588                           l6397 23AE  
                         l6389 23A2                           l4799 3164                           l5791 4996  
                         l5783 4952                           l5775 4920                           l5767 48CA  
                         l5951 144A                           l5935 1310                           l5927 11A6  
                         l5919 10AA                           l5695 6C12                           l5863 670C  
                         l5855 6704                           l5847 66FC                           l5839 66C8  
                         l5871 3600                           l5679 52AE                           l5687 52F8  
                         l4895 5034                           l4887 5016                           l4879 4FF4  
                         l4975 45B2                           l4967 44F2                           l4959 445E  
                         l4991 6A48                           l4983 6A18                           l6663 39E6  
                         l6559 286C                           l6495 2688                           l6479 2624  
                         l6487 2656                           l6399 23B2                           l5785 4976  
                         l5777 492E                           l5769 48CC                           l5961 14BE  
                         l5929 11B8                           l5937 136C                           l5697 6C1E  
                         l5865 670E                           l5857 6706                           l5849 66FE  
                         l5881 37CC                           l5873 3634                           l5689 5326  
                         l4897 5040                           l4889 5020                           l4977 45DA  
                         l4969 452E                           l4985 6A2C                           l4993 6A4C  
                         l6665 3AA6                           l6489 266A                           l6497 269C  
                         l5787 4986                           l5779 494C                           l5963 14FA  
                         l5971 153A                           l5939 13A2                           l5947 13E2  
                         l5891 0ED4                           l5883 0E38                           l5699 6C34  
                         l5859 6708                           l5875 36CA                           l5867 6476  
                         l4899 5050                           l4979 45EA                           l4987 6A38  
                         l6667 3B38                           l5795 6820                           l6499 26B0  
                         l5789 4994                           l5973 157A                           l5949 1416  
                         l5957 1456                           l5893 0F0A                           l5885 0E62  
                         l5877 36FE                           l5869 352C                           l4989 6A3C  
                         l5797 682C                           l5959 148A                           l5983 1592  
                         l5887 0E6E                           l5879 3798                           l5799 684A  
                         l5985 15C6                           l5889 0E9E                           l5995 163E  
                         l5987 15FA                           l5979 1586                           l5899 0F14  
                         l5997 167E                    GreenMove@mL 0080                    GreenMove@mR 0082  
                         STR_1 0E01                           STR_2 0E2E                           STR_5 0E32  
                         u4000 3234                   _BAUD4CONbits 000EE9                           u4001 3230  
                         u4010 3274                           u4011 3270                           u4100 3400  
                         u4020 32B4                           u3300 5446                           u4101 33FC  
                         u4021 32B0                           u3301 5442                           u4110 342E  
                         u4030 332A                           u3310 5458                           u4111 342A  
                         u4031 3326                           u3311 5454                           u4120 3444  
                         u4040 334C                           u4200 2DA2                           u3400 295A  
                         u3320 5480                           u5000 439E                           u4121 3440  
                         u4041 3348                           u4201 2D9E                           u3401 2956  
                         u3321 547C                           u5001 439A                           u4130 3458  
                         u4050 3376                           u4210 2DE2                           u3410 2996  
                         u3330 54B6                           u5010 43AE                           _T2PR 000FBC  
                         u4131 3454                           u4051 3372                           u4211 2DDE  
                         u3411 2992                           u3331 54B2                           u5011 43AA  
                         u4140 3472                           u4060 339A                           u4300 307E  
                         u4220 2DF4                           u3500 2AB0                           u3420 29A4  
                         u3340 28BE                           u5100 1BB4                           u5020 1978  
                         u4141 346E                           u4061 3396                           u4301 307A  
                         u4221 2DF0                           u3501 2AAC                           u3421 29A0  
                         u3341 28BA                           u5101 1BB0                           u5021 1974  
                         u4150 34BA                           u4070 33B0                           u4310 3094  
                         u4230 2E04                           u3510 2AE2                           u3430 2A12  
                         u3350 28D0                           u5110 1BE8                           u5030 19C2  
                         u4151 34B6                           u4071 33AC                           u4311 3090  
                         u4231 2E00                           u3511 2ADE                           u3431 2A0E  
                         u3351 28CC                           u5111 1BE4                           u5031 19BE  
                         u4160 34EA                           u4080 33CE                           u4400 50B2  
                         u4320 30A8                           u4240 2E3A                           u3600 2C2A  
                         u3520 2AF0                           u3440 2A2A                           u3360 28E0  
                         u6000 17DE                           u5200 1F24                           u5120 1C26  
                         u5040 19D2                           u4161 34E6                           u4081 33CA  
                         u4401 50AE                           u4321 30A4                           u4241 2E36  
                         u3601 2C26                           u3521 2AEC                           u3441 2A24  
                         u3361 28DC                           u6001 17DA                           u5201 1F20  
                         u5121 1C22                           u5041 19CE                           u4170 3518  
                         u4090 33EE                           u4410 50F0                           u4330 30C2  
                         u4250 2E4A                           u3610 2C3A                           u3530 2B0E  
                         u3450 2A2C                           u3370 2922                           u6010 1812  
                         u5210 1F6C                           u5130 1CB4                           u5050 1A12  
                         u4171 3514                           u4091 33EA                           u4411 50EC  
                         u4331 30BE                           u4251 2E46                           u3611 2C36  
                         u3531 2B0A                           u3371 291E                           u6011 180E  
                         u5211 1F68                           u5131 1CB0                           u5051 1A0E  
                         u4420 510E                           u4340 310A                           u4260 2FC4  
                         u4180 2D80                           u3700 2D22                           u3620 2C4C  
                         u3540 2B46                           u3460 2A54                           u3380 2938  
                         u6020 184A                           u6100 3C14                           u4500 5030  
                         u5300 229E                           u5220 1F7A                           u5140 1CEC  
                         u5060 1A22                           u4421 510A                           u4341 3106  
                         u4181 2D7C                           u3701 2D1E                           u3621 2C48  
                         u3541 2B42                           u3461 2A50                           u3381 2934  
                         u6021 1846                           u6101 3C10                           u4501 502C  
                         u5301 229A                           u5221 1F76                           u5141 1CE8  
                         u5061 1A1E                           u4430 512E                           u4350 3138  
                         u4270 301E                           u4190 2D92                           u3710 2D34  
                         u3630 2C62                           u3550 2B8C                           u3470 2A72  
                         u3390 294A                           u6030 187E                           u6110 3C6C  
                         u4510 5050                           u5310 2306                           u5230 2018  
                         u5150 1D04                           u5070 1A9E                           u4431 512A  
                         u4351 3134                           u4271 301A                           u4191 2D8E  
                         u3711 2D30                           u3631 2C5E                           u3551 2B88  
                         u3471 2A6E                           u3391 2946                           u6031 187A  
                         u6111 3C68                           u4511 504C                           u5311 2300  
                         u5231 2014                           u5151 1D00                           u5071 1A9A  
                         u4440 517E                           u4360 3172                           u4280 303E  
                         u3720 2D50                           u3640 2C78                           u3560 2BC2  
                         u3480 2A92                           u6040 18BA                           u3800 4B50  
                         u6120 3CC4                           u4520 5060                           u5320 2308  
                         u5240 2064                           u5160 1D3A                           u5080 1AAE  
                         u6200 4700                           u4441 517A                           u4361 316E  
                         u4281 303A                           u4265 2FBA                           u3721 2D4C  
                         u3641 2C74                           u3561 2BBE                           u3481 2A8E  
                         u6041 18B6                           u3801 4B4C                           u6121 3CC0  
                         u4521 505C                           u5241 2060                           u5161 1D36  
                         u5081 1AAA                           u6201 46FC                           u4370 5F38  
                         u4290 3050                           u3650 2C8C                           u3570 2BD2  
                         u3490 2AA0                           u6050 18F6                           u3730 62D0  
                         u3810 4C22                           u6130 3D1C                           u4530 6152  
                         u4450 7034                           u4610 5274                           u5330 231C  
                         u5250 2112                           u5170 1D48                           u5090 1B28  
                         u6210 4738                           u4371 5F34                           u4291 304C  
                         u3651 2C88                           u3571 2BCE                           u3491 2A9C  
                         u6051 18F2                           u3731 62CC                           u3811 4C1E  
                         u6131 3D18                           u4531 614E                           u4451 7030  
                         u4611 526E                           u5331 2318                           u5251 210E  
                         u5171 1D44                           u5091 1B24                           u6211 4734  
                         u4380 5F76                           u3660 2CA6                           u3580 2BFE  
                         u6060 193A                           u3740 62EE                           u6140 3D74  
                         u3820 49BC                           u3900 4E5A                           u4540 61AA  
                         u4460 4F92                           u4620 5276                           u4700 4512  
                         u5260 214C                           u5180 1D72                           u5500 3900  
                         u6220 4770                           u4381 5F72                           u3661 2CA2  
                         u3581 2BFA                           u6061 1936                           u3741 62EA  
                         u6141 3D70                           u3821 49B8                           u3901 4E56  
                         u4541 61A6                           u4461 4F8E                           u4605 524C  
                         u5261 2148                           u5181 1D6E                           u5501 38FC  
                         u6221 476C                           u4390 5FAA                           u3670 2CE0  
                         u3590 2C0E                           u3750 630A                           u6150 3DCC  
                         u6070 70F4                           u3830 49EE                           u3910 4E98  
                         u4550 6F00                           u4470 4FC6                           u4710 452E  
                         u4630 6E5A                           u5270 215A                           u5190 1EBC  
                         u5510 3A24                           u6230 477E                           u4391 5FA6  
                         u3671 2CDC                           u3591 2C0A                           u3751 6306  
                         u6151 3DC8                           u6071 70F0                           u3831 49EA  
                         u3911 4E94                           u4551 6EFC                           u4711 452A  
                         u4631 6E56                           u5271 2156                           u5191 1EB8  
                         u5511 3A20                           u6231 477A                           u3680 2CF2  
                         u5600 5A72                           u4800 5800                           u6160 3E24  
                         u5520 7236                           u3920 4EC2                           u3760 6DCC  
                         u4480 4FF4                           u4560 51CA                           u4720 4582  
                         u4640 642E                           u5280 21AE                           u6240 47AA  
                         u6400 2558                           u3681 2CEE                           u5601 5A6E  
                         u4801 57FC                           u6161 3E20                           u5521 7232  
                         u3841 4A18                           u3921 4EBE                           u3761 6DC8  
                         u4481 4FF0                           u4705 4508                           u4641 642A  
                         u5281 21AA                           u6241 47A4                           u6401 2554  
                         u3690 2D02                           u5610 4806                           u4810 582C  
                         u5530 5326                           u6090 3BB8                           u3850 4A3C  
                         u3930 4EF0                           u4490 5008                           u4570 51E8  
                         u4730 459E                           u4650 4430                           u5290 2282  
                         u6250 47C0                           u6242 47AC                           u6170 46A4  
                         u6410 25A6                           u3691 2CFE                           u5611 4802  
                         u4811 5828                           u5531 5322                           u6091 3BB4  
                         u3851 4A38                           u3931 4EEC                           u4491 5004  
                         u4475 4FBC                           u4571 51E4                           u4731 459A  
                         u5291 227E                           u6251 47BA                           u6171 469E  
                         u6411 25A2                           u5700 4994                           u5620 4814  
                         u4820 6128                           u4900 5760                           u5540 5352  
                         u5460 6C7C                           u3860 4A66                           u3940 4F38  
                         u4580 5210                           u4740 45DA                           u4660 445E  
                         u6260 47D2                           u6252 47C2                           u6180 46BA  
                         u6172 46A6                           u6500 2826                           u6420 2624  
                         u5701 4990                           u5621 4810                           u4821 6124  
                         u4901 575C                           u5541 534E                           u5461 6C74  
                         u3861 4A62                           u3941 4F34                           u4581 520C  
                         u4565 51BE                           u4741 45D6                           u4725 4578  
                         u4661 445A                           u6261 47CE                           u6181 46B4  
                         u6501 2822                           u6421 2620                           u3950 31AC  
                         u5630 4870                           u5550 59D2                           u4830 6140  
                         u4910 701A                           u3870 4AA6                           u4590 523A  
                         u4670 4480                           u4750 6A68                           u5710 686A  
                         u6190 46CC                           u6182 46BC                           u6510 286C  
                         u6430 266A                           u3951 31A8                           u5631 486C  
                         u5551 59CE                           u4831 613C                           u4911 7016  
                         u3871 4AA2                           u4591 5236                           u4671 447C  
                         u4655 4426                           u4751 6A64                           u5711 6866  
                         u6191 46C8                           u6511 2868                           u6431 2666  
                         u3960 31BE                           u5640 48C6                           u5800 116E  
                         u5560 59EC                           u4840 5668                           u3880 4AF0  
                         u4920 4190                           u5480 3890                           u6520 289E  
                         u6440 26B0                           u3961 31BA                           u5641 48C2  
                         u5801 116A                           u5561 59E8                           u4841 5664  
                         u3881 4AEC                           u4921 418A                           u5481 388C  
                         u6521 289A                           u6441 26AC                           u3970 31CE  
                         u5650 4910                           u5810 11B8                           u5570 5A12  
                         u4850 5694                           u3890 4E28                           u4930 4192  
                         u4690 44EE                           u5490 38E0                           u6450 26F6  
                         u3971 31CA                           u5651 490C                           u5811 11B4  
                         u5571 5A0E                           u4851 5690                           u3891 4E24  
                         u4691 44EA                           u5491 38DC                           u6451 26F2  
                         u3980 3212                           u5660 492E                           u5900 157A  
                         u5820 13A2                           u5580 5A30                           u4860 559C  
                         u4780 7106                           u4940 41A4                           u6460 273C  
                         u6380 2446                           u3981 320E                           u5661 492A  
                         u5901 1576                           u5821 139E                           u5741 0E68  
                         u5581 5A2C                           u4861 5598                           u4781 7102  
                         u4941 41A0                           u4685 4494                           u6461 2738  
                         u6381 2442                           u3990 3224                           u5670 493E  
                         u5910 15C6                           u5830 13D6                           u5750 0F68  
                         u5590 5A4C                           u4870 55C8                           u4790 711E  
                         u5478 6C80                           u4950 41E0                           u4686 449E  
                         u6470 2782                           u6390 24D0                           u3991 3220  
                         u5671 493A                           u5911 15C2                           u5831 13D2  
                         u5751 0F64                           u5591 5A48                           u4871 55C4  
                         u4791 711A                           u4951 41DC                           u4687 44AE  
                         u6607 4716                           u6471 277E                           u6391 24CC  
                         u5680 494C                           u5920 15FA                           u5840 1416  
                         u5760 0FF4                           u4880 6F62                           u4960 4210  
                         u6480 27C8                           u5681 4948                           u5921 15F6  
                         u5841 1412                           u5761 0FF0                           u4881 6F5E  
                         u4961 420C                           u6617 474E                           u6481 27C4  
                         u6537 242A                           u5690 4986                           u5930 163A  
                         u5850 144A                           u5770 1044                           u4890 5734  
                         u4970 4226                           u6490 280E                           u5691 4982  
                         u5931 1636                           u5851 1446                           u5771 1040  
                         u4891 5730                           u6707 609E                           u4971 4222  
                         u6627 478C                           u6491 280A                           u6547 2452  
                         u5940 167E                           u5860 148A                           u5780 109E  
                         u4980 4366                           u5941 167A                           u5861 1486  
                         u5781 109A                           u6717 6BF0                           u4981 4362  
                         u6637 47E0                           u6557 2510                           u5950 16CA  
                         u5870 14BE                           u5790 10BC                           u4990 4384  
                         u5951 16C6                           u5871 14BA                           u5791 10B8  
                         u6807 57C4                           u6727 562C                           u6647 52EA  
                         u4991 4380                           u6567 257C                           u5960 16FE  
                         u5880 14FA                           u5961 16FA                           u5881 14F6  
                         u6817 6F3C                           u6737 6FEC                           u6657 6B50  
                         u6577 460A                           u5970 173E                           u5890 1536  
                         u5971 173A                           u5891 1532                           u6747 6C40  
                         u6667 66D0                           u6587 4686                           u5980 1776  
                         u5981 1772                           u6757 65C8                           u6677 6BA0  
                         u6597 46DC                           u5990 17AA                           u5991 17A6  
                         u6767 65F6                           u6687 5560                           u6777 56F8  
                         u6697 605C                           u6787 6534                           u6797 6102  
                _LightBlueMove 665E                           abs@a 0072                           _dbuf 023C  
                         _labs 640E                           _main 235C                           _dtoa 415E  
                         _prec 01AC            __end_ofi2_turnRight 5CD6                           _vals 01CC  
                         pad@i 0077                           pad@p 0074                           fsr1h 000FE2  
           i2___lwdiv@quotient 000B                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 0079                           fsr2l 000FD9  
                         btemp 005B                           _stop 60C2                  ___fpclassifyf 5188  
                         prodh 000FF4                           prodl 000FF3                           start 0074  
              ___fldiv@new_exp 00A2         __end_of_color_read_Red 691E                __end_of_HighISR 0074  
                   i2go_Home@i 002C         __end_of_color_read_lum 68CA                   ___param_bank 000000  
              ReverseYellow@mL 0080                ReverseYellow@mR 0082                __end_of_RedMove 6EA0  
               ?i2_ReversePink 0021                          ??_abs 0074                          ??_pad 0076  
                 ?_readColours 006B                    _turnRight45 6B5E                _RunOneBlockTime 0054  
                   i2_turnLeft 5B4A                  ___fltol@sign1 0068                __end_of___aodiv 4B32  
                        ?_labs 0060                __end_of___fladd 2D64                          ?_main 0001  
                        ?_dtoa 007B                __end_of___aomod 4F7A                __end_of___fldiv 352C  
              __end_of___awdiv 5A84                __end_of___flneg 7056                __end_of___flmul 3190  
              __end_of___flsub 6E16                __end_of___fltol 5082                    colour_rel@B 00C2  
                  colour_rel@G 00BE                          ?_stop 0073                    colour_rel@L 00AE  
                  colour_rel@R 00BA                ___awdiv@divisor 0062                __end_of___lwdiv 632A  
                        i2l302 0060                          i2l603 6CE8                          i2l612 6FA0  
                        i2l542 623C                          i2l550 5C0E                          i2l630 6B0C  
                        i2l615 6FDE                          i2l536 4E12                          i2l713 415C  
                        i2l618 65A6                          i2l627 6ABA                          i2l707 4134  
                        i2l740 7076                          i2l636 5E50                          i2l582 5D9A  
                        i2l558 5CD4                          i2l566 5B48                          i2l574 5430  
                        i2l591 6D84                          i2l743 708C                          i2l639 5F06  
                        i2l585 70A8                          i2l746 71E2                          i2l594 6D36  
                        i2l588 70C2                          i2l597 681E                ___awdiv@counter 0064  
                 vfpfcnvrt@fmt 00F5                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 3E7E        __end_of_sendCharSerial4 723C     __end_of_I2C_2_Master_Start 7276  
   __end_of_I2C_2_Master_Write 724A           __end_ofi2_turnLeft45 6D38                    ?i2_BlueMove 0021  
                 YellowMove@mL 0080                          _flags 00FF                   YellowMove@mR 0082  
                        _fputc 5432                          _fputs 6D86                 delayed_ms@time 0068  
                        labs@a 0060                          pad@fp 0070                          _power 0058  
                        _width 01AA                          _putch 7280                          dtoa@d 007D  
                        dtoa@i 009B                          dtoa@n 0093                          dtoa@p 008F  
                        dtoa@s 009D                          dtoa@w 0091                 ?_LightBlueMove 0080  
                        tablat 000FF5               __end_ofi2___wmul 71E4               ??_Colour_decider 00AE  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 6A18  
               ?___fpclassifyf 0060        __end_of_color_read_Blue 69C6          _I2C_2_Master_RepStart 7258  
             __end_of_BlueMove 640E                     PinkMove@mL 0080                     PinkMove@mR 0082  
              ?_color_read_Red 0064                   i2_delayed_ms 7056                ?_color_read_lum 0064  
              __initialization 623E              i2LightBlueMove@mL 0021              i2LightBlueMove@mR 0023  
      __end_of_turnCalibration 47F0                _reverseOneBlock 6BFE                   __end_of_labs 6476  
                 __end_of_main 28A2                   __end_of_dtoa 43E6                   __end_of_stop 6142  
              _colour_rel$3307 00B2                _colour_rel$3308 00B6                         ??_labs 0064  
                       ??_main 00FD                         ??_dtoa 0085          __end_of_ReverseYellow 58F6  
             __end_of_PinkMove 67C6                         ??_stop 0077                  __activetblptr 000003  
      __end_ofi2_ReverseYellow 5E52              Colour_decider@Hue 00CC              Colour_decider@rel 00AC  
                 ?_setMotorPWM 006D                    i2_turnRight 5C10                         ?_fputc 0060  
                       ?_fputs 0069                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21               ___awdiv@dividend 0060  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i2l1244 639C  
                       i2l1237 6394                         i2l5001 4D2C                         i2l5003 4D30  
                       i2l5005 4D72                         i2l5007 4D8E                         i2l5009 4DD2  
                       i2l4421 71DA                         i2l4431 634C                         i2l4441 6386  
                       i2l4433 6354                         i2l4425 632A                         i2l5401 5C34  
                       i2l4443 6388                         i2l4435 6362                         i2l4427 6332  
                       i2l4419 71BE                         i2l5411 5CA8                         i2l5403 5C4C  
                       i2l4445 638E                         i2l4437 6368                         i2l4429 6344  
                       i2l5405 5C58                         i2l5421 5AD8                         i2l5413 5A84  
                       i2l6301 4108                         i2l4439 637E                         i2l5431 5D12  
                       i2l5407 5C64                         i2l5415 5AA8                         i2l5423 5AF0  
                       i2l6303 4134                         i2l5433 5D1E                         i2l5441 708E  
                       i2l5409 5C7C                         i2l5601 6D6C                         i2l5425 5B1C  
                       i2l5417 5AC0                         i2l5435 5D2A                         i2l5427 5CD6  
                       i2l5371 61C0                         i2l5611 67C6                         i2l5443 7092  
                       i2l5603 6CEA                         i2l5451 7072                         i2l5419 5ACC  
                       i2l6307 413E                         i2l6331 002A                         _RG6PPS 000E88  
                       i2l5429 5CFA                         i2l5437 5D42                         i2l5373 61C4  
                       i2l5381 620C                         i2l5613 67DA                         i2l5445 70A2  
                       i2l5605 6CFE                         i2l5621 6CBC                         i2l6309 4152  
                       i2l6333 002E                         i2l5439 5D6E                         i2l5383 6224  
                       i2l5375 61DC                         i2l5615 67F2                         i2l5391 5B92  
                       i2l5607 6D0A                         i2l5447 7056                         i2l5623 6CD0  
                       i2l6263 3E7E                         i2l6335 0048                         i2l5377 61E8  
                       i2l5393 5B9E                         i2l5385 5B4A                         i2l5609 6D1E  
                       i2l5449 7062                         i2l5617 6C9C                         i2l6281 3F5A  
                       i2l6273 3EAE                         i2l6265 3E92                         i2l6337 004A  
                       i2l6329 001A                         i2l5379 61F4                         i2l5387 5B6E  
                       i2l5395 5BB6                         i2l5619 6CB0                         i2l5811 53A8  
                       i2l6291 4032                         i2l6283 3F86                         i2l6275 3EDC  
                       i2l6267 3E94                         i2l6339 004C                         i2l5397 5BE2  
                       i2l5389 5B86                         i2l5821 6F64                         i2l5813 53B4  
                       i2l5805 5360                         i2l6293 405C                         i2l6285 3FB0  
                       i2l6277 3F04                         i2l6269 3E9C                         i2l5399 5C10  
                       i2l5823 6FA2                         i2l5831 5D9C                         i2l5807 5384  
                       i2l5815 53CC                         i2l6295 4088                         i2l6287 3FDC  
                       i2l6279 3F30                         i2l5825 6542                         i2l5833 5E52  
                       i2l5817 53F8                         i2l5809 539C                         i2l6297 40B2  
                       i2l6289 4006                         i2l5595 6D38                         i2l5827 6A6A  
                       i2l5819 5424                         i2l6299 40DE                         i2l5597 6D4C  
                       i2l5829 6ABC                         i2l5599 6D58                         i2l4995 4CA8  
                       i2l4997 4CC4                         i2l4999 4D18                      ??_HighISR 002E  
     __end_of_color_click_init 6712                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 6604               __end_of___xxtofl 49A8                      ??_RedMove 0084  
                       i2_stop 61C0               i2go_Home@WayBack 0025                  ??_Timer0_init 0060  
              i2_reverseDetect 67C6                ??i2_ReversePink 0025                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00FB                  ??_ReversePink 0084                         ___flge 5082  
                       ___fleq 5F08                      ??___aodiv 0070                      ??___fladd 0068  
                    ??___aomod 0070                         ___wmul 714A              ForwardOneBlock@mL 007A  
            ForwardOneBlock@mR 007C                      ??___fldiv 0099                      ??___awdiv 0064  
                    ??___flneg 0064                      ??___flmul 0078                      ??___flsub 0091  
                    ??___fltol 0064                         _efgtoa 1954                      ??___lwdiv 006A  
                       _floorf 43E6                         _memcpy 6A18              __end_ofi2_RedMove 6FA2  
        __end_ofi2_turnRight45 6D86                         clear_0 627C                         clear_1 6288  
                       clear_2 6294                         clear_3 62A4               ___awdiv@quotient 0066  
                       _motorL 01C3                         _motorR 01BA                         isa$std 000001  
                    ??_go_Home 0088                    ?i2_turnLeft 0014                         pad@buf 0072  
                       dtoa@fp 007B                         _strcpy 6E16              ??i2_LightBlueMove 0025  
                       fputc@c 0060                         fputs@c 006D                         fputs@i 006E  
                 __pdataCOMRAM 0054                         fputs@s 0069                   ?i2_GreenMove 0021  
              ___fpclassifyf@e 0068                ___fpclassifyf@u 006A                ___fpclassifyf@x 0060  
            __end_ofi2___lwdiv 639E                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 007A             Forwardhalfblock@mR 007C                         putch@c 0001  
              ??_LightBlueMove 0084               __end_of_vfprintf 6876                         stop@mL 0073  
                       stop@mR 0075              __end_ofi2_go_Home 415E              ??_initDCmotorsPWM 0062  
                    ??_sprintf 00FD                i2_timed_forward 5360               __end_of_turnLeft 5696  
                   ___flge@ff1 0089                     _YellowMove 6712                     ___flge@ff2 008D  
              ??___fpclassifyf 0064                   ___xxtofl@arg 006A                   ___xxtofl@exp 0069  
                 ___xxtofl@val 0060                     ___fleq@ff1 0091                     ___fleq@ff2 0095  
              fullSpeedBack@mL 0073                fullSpeedBack@mR 0075                     __accesstop 0060  
      __end_of__initialization 62AA        __end_of_reverseOneBlock 6C4E                     ___flneg@f1 0060  
     __end_of_color_read_Green 6972         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0060               ?_color_read_Blue 0064                _Interrupts_init 724A  
               __pcstackCOMRAM 0001               ?_turnCalibration 0080                  _fullSpeedBack 5696  
                 __pidataBANK1 727D                  __end_of_fputc 54FE                  __end_of_fputs 6DCE  
                __end_of_putch 7282              __end_of_GreenMove 6EE4            __end_of_Timer0_init 7204  
            i2_ForwardOneBlock 6C9C            __end_of_ReversePink 59BE                      ?i2___wmul 0001  
           ?i2_ForwardOneBlock 001B               ?i2_ReverseYellow 0021                   ?i2_TurnDelay 0001  
                    ?_BlueMove 0080                        ??_fputc 0064                        ??_fputs 006D  
         Colour_decider@F14357 019E          __end_of_reverseDetect 6604                        ??_putch 0060  
          ??i2_ForwardOneBlock 001F                     __pbssBANK0 00FF                     __pbssBANK1 019E  
                   __pbssBANK2 0200                     __pbssBANK3 0300        __end_ofi2_reverseDetect 6820  
              reverseDetect@mL 007A                reverseDetect@mR 007C                    ?_OrangeMove 0080  
             _Forwardhalfblock 64DC                     _getTMR0val 7172              __end_of_RetryMove 60C2  
                      ?i2_stop 0014                      ?_PinkMove 0080              _color_writetoaddr 7198  
              i2turnRight45@mL 001B                     _delayed_ms 6F26                i2turnRight45@mR 001D  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 00C2             Colour_decider@Cmin 00C6  
               ?_fullSpeedBack 0073                  i2turnRight@mL 0014                  i2turnRight@mR 0016  
         Colour_decider@Cmax_i 00B4                        ?___flge 0089                        ?___fleq 0091  
                 i2_turnLeft45 6CEA             ?_color_writetoaddr 0062                        ?___wmul 0060  
           Colour_decider@vals 00AA                        ?_efgtoa 00BE      __end_ofi2_ForwardOneBlock 6CEA  
                      ?_floorf 00AA                   ?_turnRight45 007A                        ?_memcpy 0060  
            i2timed_forward@mL 0014              i2timed_forward@mR 0016              __end_of_TurnDelay 701C  
        __end_of_timed_forward 5360            ??_color_writetoaddr 0063                        ?_strcpy 0060  
                   ??i2___wmul 0005                  colour_rel@rel 00AC                 go_Home@WayBack 0084  
      __end_ofi2_timed_forward 5432                      ?___xxtofl 0060                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 007E                   ??i2_BlueMove 0025  
                   ??_BlueMove 0084                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0080                     _colour_rel 352C               i2_fullSpeedAhead 5A84  
      __end_of_Interrupts_init 7258         color_writetoaddr@value 0062               ??_color_read_Red 0066  
             main@consecuitive 0198                        _HighISR 0008               ??_color_read_lum 0066  
             ?_reverseOneBlock 007A      __end_of_color_writetoaddr 71BE            i2timed_forward@time 0018  
                      _RedMove 6E5C             _I2C_2_Master_Start 726C                     ??_PinkMove 0084  
                   _initUSART4 7204             _I2C_2_Master_Write 723C                        __Hparam 0000  
                      _WayBack 028C                        __Lparam 0000              color_read_Red@tmp 0069  
                  _Timer0_init 71E4                    RetryMove@mL 007A                    RetryMove@mR 007C  
      sendStringSerial4@string 0061              reverseOneBlock@mL 007A              reverseOneBlock@mR 007C  
        i2go_Home@Time_forward 0027         i2TurnDelay@Turn45Delay 0001                    _ReversePink 58F6  
                      ___aodiv 49A8                        ___fladd 28A2                        ___aomod 4E14  
                      ___fldiv 3190                        ___awdiv 59BE                        ___flneg 701C  
                      ___flmul 2D64                        ___flsub 6DCE                        ___fltol 4F7A  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 62B4            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 010B             __end_ofi2_BlueMove 65A8                   __psmallconst 0E00  
                 turnLeft45@mL 007A                   turnLeft45@mR 007C                        __pcinit 623E  
                      __ramtop 0E00                      ?_turnLeft 0073                        _go_Home 3B88  
                      __ptext0 235C                        __ptext1 45FC                        __ptext2 69C6  
                      __ptext3 6820                        __ptext4 3868                        __ptext5 1954  
                      __ptext6 6E16                        __ptext7 6A18                        __ptext8 640E  
                      __ptext9 43E6                      _T2CONbits 000FBD                     ??___xxtofl 0064  
               main@lost_count 0196                      _T2HLTbits 000FBE                        efgtoa@c 00C4  
                      efgtoa@d 00D2                        efgtoa@e 00D6                        efgtoa@f 00C0  
                      efgtoa@g 00EB                        efgtoa@h 00E0                        efgtoa@i 00DE  
                      efgtoa@l 00E4                        efgtoa@m 00D4                        efgtoa@n 00E9  
                      efgtoa@p 00C9                        efgtoa@t 00CB                        efgtoa@u 00EF  
                      efgtoa@w 00D8                  _RxBufWriteCnt 0053                   ?i2_turnRight 0014  
            color_read_lum@tmp 0069                        main@buf 0132                        _sprintf 69C6  
         ??_I2C_2_Master_Start 0061           ??_I2C_2_Master_Write 0061           end_of_initialization 62AA  
                      floorf@e 00B8                        floorf@m 00B4                        floorf@u 00BA  
                      floorf@x 00AA              ??i2_fullSpeedBack 0018                        memcpy@d 0066  
                      memcpy@n 0064                        memcpy@s 0068               ?i2_reverseDetect 001B  
                      fputc@fp 0062                        fputs@fp 006B            i2___wmul@multiplier 0001  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0080  
              LightBlueMove@mR 0082                ??_fullSpeedBack 0077             ??_color_click_init 0064  
                   _move_count 004E                    ?_delayed_ms 0068              turnCalibration@mL 0080  
            turnCalibration@mR 0082                i2_LightBlueMove 6ABC              __end_of_vfpfcnvrt 3B88  
                   efgtoa@mode 00D0                     efgtoa@sign 00E8                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 0056                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0100  
                   ??_vfprintf 00FB                        strcpy@d 0066                        strcpy@s 0064  
              _initDCmotorsPWM 5FB4                   ??i2_turnLeft 0018                     ??_turnLeft 0077  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0072              __end_of_turnRight 55CA  
                    i2_RedMove 6F64                  i2delayed_ms@i 0004                    ___fladd@grs 006F  
             ?i2_timed_forward 0014                  ___xxtofl@sign 0068                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0071                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 00A4                    ___fldiv@rem 009D  
             fullSpeedAhead@mL 0073               fullSpeedAhead@mR 0075                  ReversePink@mL 0080  
                ReversePink@mR 0082              i2___lwdiv@divisor 0009       color_writetoaddr@address 0063  
                    i2___lwdiv 632A        ??_I2C_2_Master_RepStart 0061                  i2_setMotorPWM 4CA8  
            i2___lwdiv@counter 000D                    ?_colour_rel 00AA               ?_Interrupts_init 0001  
                  ___flmul@grs 007D                      i2_go_Home 3E7E                    _CCP1CONbits 000FAB  
                ?i2_OrangeMove 0021                     main@colour 019A                   _EUSART4RXbuf 0032  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0064  
                  _CCP3CONbits 000F26             __end_ofi2_turnLeft 5C10                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0060                      RedMove@mL 0080  
                    RedMove@mR 0082             ??_color_read_Green 0066                 __end_ofi2_stop 623E  
                   _turnLeft45 6BAE          __end_ofi2_ReversePink 5F08                 __end_of___flge 5188  
               __end_of___fleq 5FB4                 _fullSpeedAhead 5762                    vfpfcnvrt@ap 00F7  
                  vfpfcnvrt@cp 0109                    vfpfcnvrt@fp 00F3                 __end_of___wmul 7172  
                __pidataCOMRAM 7276                 __end_of_efgtoa 235C                 __end_of_floorf 45FC  
               __end_of_memcpy 6A6A                     floorf@F526 0046               i2___wmul@product 0005  
     __end_of_Forwardhalfblock 6542                     ?i2_RedMove 0021                      _GreenMove 6EA0  
               __end_of_strcpy 6E5C            start_initialization 623E                    __end_of_abs 6F26  
                  __end_of_pad 61C0                  _TxBufWriteCnt 0051                 ?i2_setMotorPWM 000E  
                   ?i2___lwdiv 0007          __end_of_LightBlueMove 66B8        __end_ofi2_LightBlueMove 6B0E  
               ??i2_OrangeMove 0025                     ?i2_go_Home 0025                   ??_OrangeMove 0084  
        __end_of___fpclassifyf 5288                       ??i2_stop 0018            color_read_Green@tmp 0069  
      __end_of_initDCmotorsPWM 603C                    vfprintf@fmt 010D         __end_of_fullSpeedAhead 582E  
                     ??___flge 0091                       ??___fleq 0099                      _RetryMove 603C  
                     ??___wmul 0064            go_Home@Time_forward 0086                  ??_readColours 006D  
                     ??_efgtoa 00C5                    __pdataBANK1 01D4                _ForwardOneBlock 6B0E  
                     ??_floorf 00AE                       ??_memcpy 0066       __end_ofi2_fullSpeedAhead 5B4A  
                     ??_strcpy 0064                 i2turnLeft45@mL 001B                 i2turnLeft45@mR 001D  
                    ___fladd@a 0064                      ___fladd@b 0060                  _ReverseYellow 582E  
                    ___fldiv@a 0095                      ___fldiv@b 0091                     ?_GreenMove 0080  
                 OrangeMove@mL 0080                   OrangeMove@mR 0082             __end_of_OrangeMove 665E  
                    ___flmul@a 0074                      ___flmul@b 0070                    __pbssCOMRAM 0032  
                    ___flsub@a 008D                      ___flsub@b 0089                      _TurnDelay 6FE0  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0060  
                 ??_YellowMove 0084                  i2GreenMove@mL 0021                  i2GreenMove@mR 0023  
                     ?_HighISR 0001          Colour_decider@RGB_col 00B6                   i2turnLeft@mL 0014  
                 i2turnLeft@mR 0016                       ?_RedMove 0080                    _efgtoa$2934 00CD  
                ?i2_delayed_ms 0001               ___lwdiv@dividend 0066                      _dtoa$2903 008D  
                 ?_Timer0_init 0001                    ?_turnLeft45 007A                ?_fullSpeedAhead 0073  
                    __pintcode 0008                   ?_ReversePink 0080                     ?_RetryMove 007A  
              timed_forward@mL 0073                       ?___aodiv 0060                timed_forward@mR 0075  
                     ?___fladd 0060                       ?___aomod 0060                       ?___fldiv 0091  
                     ?___awdiv 0060                      __ptext100 5CD6                      __ptext101 4CA8  
                    __ptext102 71BE               ___aodiv@quotient 0072                       ?___flneg 0060  
                    __ptext103 632A                       ?___flmul 0070                       ?___flsub 0089  
                     ?___fltol 0060            _Colour_decider$3309 00B0                       ?___lwdiv 0066  
                     ?_go_Home 0084                  i2_turnRight45 6D38           I2C_2_Master_Read@ack 0062  
               ?_ReverseYellow 0080             __end_of_YellowMove 676C           I2C_2_Master_Read@tmp 0063  
              i2_fullSpeedBack 5CD6                    __smallconst 0E00                    ??i2_RedMove 0025  
            timed_forward@time 0077            __end_of_readColours 64DC              _I2C_2_Master_Idle 70F6  
            _I2C_2_Master_Init 7120              _I2C_2_Master_Read 6C4E              _I2C_2_Master_Stop 7262  
                   ?_TurnDelay 0060                ??i2_setMotorPWM 0010                   _RxBufReadCnt 0052  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 006F             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 006A  
     initDCmotorsPWM@PWMperiod 0060                       ?_sprintf 0111                    ??i2___lwdiv 000B  
             getTMR0val@moving 0060                 colour_rel@vals 00AA                    ??i2_go_Home 0029  
            _sendStringSerial4 70C4            ??_I2C_2_Master_Idle 0060               ?i2_LightBlueMove 0021  
          ??_I2C_2_Master_Init 0060            ??_I2C_2_Master_Read 0061                 ___wmul@product 0064  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0061                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0060                       _PIE0bits 000E29                       _PIE2bits 000E2B  
           ?_sendStringSerial4 0061                       _PIE4bits 000E2D                 ??i2_delayed_ms 0003  
      __end_of_ForwardOneBlock 6B5E                   ??_delayed_ms 006A                    turnRight@mL 0073  
                  turnRight@mR 0075                       _PIR0bits 000E33                       i2u540_40 5B1C  
                     i2u540_41 5B18                       i2u541_40 5B48                       i2u541_41 5B44  
                     i2u542_40 5D6E                       i2u534_40 6224                       i2u630_40 3FB0  
                     i2u542_41 5D6A                       i2u534_41 6220                       i2u630_41 3FAC  
                     i2u543_40 5D9A                       i2u535_40 623C                       i2u631_40 4006  
                     i2u543_41 5D96                       i2u535_41 6238                       i2u631_41 4002  
                     _PIR4bits 000E37                       i2u544_40 70C2                       i2u536_40 5BE2  
                     i2u632_40 405C                       i2u544_41 70BE                       i2u536_41 5BDE  
                     i2u632_41 4058                       i2u377_40 6344                       i2u537_40 5C0E  
                     i2u545_40 708C                       i2u633_40 40B2                       i2u377_41 6340  
                     i2u537_41 5C0A                       i2u545_41 7088                       i2u633_41 40AE  
                     i2u378_40 6362                       i2u538_40 5CA8                       i2u634_40 4108  
                     i2u378_41 635E                       i2u538_41 5CA4                       i2u634_41 4104  
                     i2u379_40 637E                       i2u539_40 5CD4                       i2u627_40 3EAA  
                     i2u379_41 637A                       i2u539_41 5CD0                       i2u627_41 3EA6  
                     i2u476_40 4CC4                       i2u572_40 53F8                       i2u628_40 3F04  
                     i2u476_41 4CC0                       i2u572_41 53F4                       i2u628_41 3F00  
                     i2u477_40 4D8E                       i2u573_40 5424                       i2u629_40 3F5A  
                     i2u637_40 002A                       i2u477_41 4D8A                       i2u573_41 5420  
                     i2u629_41 3F56                       i2u637_41 0026                       i2u690_47 7098  
                     i2u682_47 53BE                       i2u691_47 67E4                       i2u683_47 6CDA  
                     i2u692_47 6810                       i2u684_47 5AE2                       i2u693_47 61FE  
                     i2u685_47 7068                       i2u694_47 5D34                       i2u686_47 6D28  
                     i2u687_47 5BA8                       i2u688_47 6D76                       i2u689_47 5C6E  
             ?_initDCmotorsPWM 0060              ??_sendCharSerial4 0060                   i2BlueMove@mL 0021  
                 i2BlueMove@mR 0023                       _SSP2CON2 000EDA                 _Colour_decider 0E38  
          ??_sendStringSerial4 0063                       _SSP2STAT 000ED8              i2ReverseYellow@mL 0021  
            i2ReverseYellow@mR 0023                      _vfpfcnvrt 3868                 ?i2_turnRight45 001B  
    __end_of_I2C_2_Master_Idle 7120      __end_of_I2C_2_Master_Init 714A      __end_of_I2C_2_Master_Read 6C9C  
         __end_ofi2_OrangeMove 6ABC              ___wmul@multiplier 0060      __end_of_I2C_2_Master_Stop 726C  
                     i2___wmul 71BE                   setMotorPWM@m 006D                  ??i2_GreenMove 0025  
                     _DataFlag 005A    I2C_2_Master_Write@data_byte 0061                    ??_GreenMove 0084  
            ??_color_read_Blue 0066             __end_of_getTMR0val 7198                   _TxBufReadCnt 0050  
                     _BlueMove 639E                      _turnRight 54FE             __end_of_delayed_ms 6F64  
                   vfpfcnvrt@c 0108              ??_turnCalibration 0084                      copy_data0 626A  
    __end_of_sendStringSerial4 70F6                   ??_colour_rel 00AE                  _reverseDetect 65A8  
__end_of_I2C_2_Master_RepStart 7262             color_read_Blue@tmp 0069                       i2stop@mL 0014  
                     i2stop@mR 0016            __end_of_setMotorPWM 4CA8                   ??_initUSART4 0060  
                     _PinkMove 676C                       __Hrparam 0000              ??i2_ReverseYellow 0025  
       __end_of_Colour_decider 1954                      memcpy@tmp 006A                     vfprintf@ap 010F  
                     __Lrparam 0000                     vfprintf@fp 010B          __end_of_fullSpeedBack 5762  
                  ??_RetryMove 007E        __end_ofi2_fullSpeedBack 5D9C           TurnDelay@Turn45Delay 0060  
                  _readColours 6476          i2___wmul@multiplicand 0003                ??_ReverseYellow 0084  
                   ?_vfpfcnvrt 00F3                ___aodiv@divisor 0068                ___aodiv@counter 0070  
           __end_of_colour_rel 3868                     _ANSELDbits 000EA7             ___fpclassifyf@F465 004A  
                   _ANSELFbits 000EB4                  _timed_forward 5288                     sprintf@fmt 0113  
            ?_Forwardhalfblock 007A                       ___xxtofl 47F0                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                  ??i2_TurnDelay 0003                    ??_TurnDelay 0062  
                 _Time_forward 0300                ___lwdiv@divisor 0068             __end_of_initUSART4 7222  
              ___lwdiv@counter 006C                 i2OrangeMove@mL 0021                 i2OrangeMove@mR 0023  
           ??_Forwardhalfblock 007E                     ?_turnRight 0073                       __ptext10 5188  
                     __ptext11 4F7A                       __ptext20 49A8                       __ptext12 701C  
                     __ptext21 70C4                       __ptext13 415E                       __ptext30 7204  
                     __ptext22 7222                       __ptext14 6142                       __ptext31 5FB4  
                     __ptext23 6476                       __ptext15 6D86                       __ptext40 6EA0  
                     __ptext32 3B88                       __ptext24 6876                       __ptext16 5432  
                     __ptext41 639E                       __ptext33 5288                       __ptext25 68CA  
                     __ptext17 7280                       __ptext50 7120                       __ptext42 7172  
                     __ptext34 582E                       __ptext26 691E                       __ptext18 6EE4  
                     __ptext51 6712                       __ptext43 352C                       __ptext35 58F6  
                     __ptext27 6972                       __ptext19 4E14                       __ptext60 6BFE  
                     __ptext52 6B5E                       __ptext44 66B8                       __ptext36 6B0E  
                     __ptext28 7258                       __ptext61 65A8                       __ptext53 54FE  
                     __ptext45 7198                       __ptext37 6E5C                       __ptext29 6C4E  
                     __ptext70 6F26                       __ptext62 5696                       __ptext54 71E4  
                     __ptext46 723C                       __ptext38 6604                       __ptext71 59BE  
                     __ptext63 724A                       __ptext55 603C                       __ptext47 7262  
                     __ptext39 665E                       __ptext72 0E38                       __ptext64 64DC  
                     __ptext56 676C                       __ptext48 726C                       __ptext81 3E7E  
                     __ptext73 47F0                       __ptext65 60C2                       __ptext57 6BAE  
                     __ptext49 70F6                       __ptext90 6ABC                       __ptext82 5360  
                     __ptext74 6DCE                       __ptext66 5762                       __ptext58 55CA  
                     __ptext91 6FA2                       __ptext83 5D9C                       __ptext75 28A2  
                     __ptext67 4B32                       __ptext59 6FE0                       __ptext92 6CEA  
                     __ptext84 5E52                       __ptext76 2D64                       __ptext68 714A  
                     __ptext93 5B4A                       __ptext85 6C9C                       __ptext77 5082  
                     __ptext69 62B4                       __ptext94 6542                       __ptext86 5A84  
                     __ptext78 5F08                       __ptext95 6D38                       __ptext87 7056  
                     __ptext79 3190                       __ptext96 5C10                       __ptext88 6F64  
                     __ptext97 708E                       __ptext89 6A6A                       __ptext98 67C6  
                     __ptext99 61C0                 ?_reverseDetect 007A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA            __end_ofi2_GreenMove 6FE0                     strcpy@dest 0060  
                   turnLeft@mL 0073                     turnLeft@mR 0075             i2fullSpeedAhead@mL 0014  
           i2fullSpeedAhead@mR 0016               ?_ForwardOneBlock 007A                       go_Home@i 008B  
              ?_Colour_decider 00AA                       efgtoa@fp 00BE                       efgtoa@ne 00C7  
                     efgtoa@pp 00CF                       efgtoa@ou 00DA                  ?i2_turnLeft45 001B  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
              ??i2_turnRight45 001F                       _vfprintf 6820                       _run_flag 01D4  
                ??_turnRight45 007E                       _turnLeft 55CA              ?i2_fullSpeedAhead 0014  
             ___aomod@dividend 0060                 ?_timed_forward 0073           i2setMotorPWM@negDuty 0013  
                  delayed_ms@i 006B              ??_reverseOneBlock 007E             ??i2_fullSpeedAhead 0018  
                   _INTCONbits 000FF2           __end_ofi2_delayed_ms 708E           i2setMotorPWM@posDuty 0012  
              main@prev_colour 019C                       memcpy@d1 0060                       memcpy@s1 0062  
          i2ForwardOneBlock@mL 001B                    _setMotorPWM 4B32            i2ForwardOneBlock@mR 001D  
                turnRight45@mL 007A                  turnRight45@mR 007C                       intlevel2 0000  
                    sprintf@ap 0125            __end_ofi2_TurnDelay 70C4               ??_fullSpeedAhead 0077  
                    strcpy@src 0062              i2fullSpeedBack@mL 0014              i2fullSpeedBack@mR 0016  
              i2ReversePink@mL 0021                i2ReversePink@mR 0023                    i2RedMove@mL 0021  
                  i2RedMove@mR 0023                 ??i2_turnLeft45 001F                   ??_turnLeft45 007E  
                   BlueMove@mL 0080                     BlueMove@mR 0082                    efgtoa@nmode 00D1  
             ?i2_fullSpeedBack 0014                ___aomod@divisor 0068               i2delayed_ms@time 0001  
                  ??_vfpfcnvrt 00F9                ___aomod@counter 0070               _color_click_init 66B8  
            ??i2_reverseDetect 001F                       sprintf@f 0127                       sprintf@s 0111  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                    i2_GreenMove 6FA2  
          __end_of_turnRight45 6BAE                 i2setMotorPWM@m 000E                ??_reverseDetect 007E  
                ??i2_turnRight 0018                     i2_BlueMove 6542                    ??_turnRight 0077  
                ___fladd@signs 006C             __end_of_turnLeft45 6BFE                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0071                _sendCharSerial4 7222                   ___fladd@aexp 006D  
                 ___fladd@bexp 006E                   i2_OrangeMove 6A6A              i2reverseDetect@mL 001B  
            i2reverseDetect@mR 001D                   ___aomod@sign 0071              ??i2_timed_forward 001A  
