

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 16:01:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99   000000                     
   100                           ; Generated 06/04/2022 GMT
   101                           ; 
   102                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   006168                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _RunOneBlockTime
   140   006168  07D0               	dw	2000
   141                           
   142                           ;initializer for _Turn45Delay
   143   00616A  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   00616C  001E               	dw	30
   147                           
   148                           ;initializer for _DataFlag
   149   00616E  01                 	db	1
   150   000000                     _TRISEbits	set	3973
   151   000000                     _TMR0H	set	4052
   152   000000                     _LATHbits	set	3968
   153   000000                     _TX4REG	set	3812
   154   000000                     _RC4STAbits	set	3815
   155   000000                     _SP4BRGH	set	3814
   156   000000                     _SSP2CON2bits	set	3802
   157   000000                     _RX4PPS	set	3605
   158   000000                     _SSP2CLKPPS	set	3612
   159   000000                     _SSP2DATPPS	set	3613
   160   000000                     _ANSELDbits	set	3751
   161   000000                     _SSP2ADD	set	3798
   162   000000                     _SSP2CON1bits	set	3801
   163   000000                     _LATAbits	set	3961
   164   000000                     _LATFbits	set	3966
   165   000000                     _LATGbits	set	3967
   166   000000                     _TRISAbits	set	3969
   167   000000                     _TRISGbits	set	3975
   168   000000                     _PORTFbits	set	3982
   169   000000                     _TRISHbits	set	3976
   170   000000                     _CCPR2H	set	4006
   171   000000                     _CCPR1H	set	4010
   172   000000                     _TRISCbits	set	3971
   173   000000                     _TRISDbits	set	3972
   174   000000                     _TRISFbits	set	3974
   175   000000                     _LATDbits	set	3964
   176   000000                     _RC4REG	set	3811
   177   000000                     _SP4BRGL	set	3813
   178   000000                     _TX4STAbits	set	3816
   179   000000                     _BAUD4CONbits	set	3817
   180   000000                     _SSP2CON2	set	3802
   181   000000                     _SSP2STAT	set	3800
   182   000000                     _ANSELFbits	set	3764
   183   000000                     _SSP2BUF	set	3797
   184   000000                     _PIE4bits	set	3629
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187   000000                     _RD5PPS	set	3695
   188   000000                     _RE2PPS	set	3700
   189   000000                     _RD6PPS	set	3696
   190   000000                     _RC7PPS	set	3689
   191   000000                     _CCPR4H	set	3873
   192   000000                     _CCPR3H	set	3877
   193   000000                     _CCP1CONbits	set	4011
   194   000000                     _CCPTMRS0bits	set	4013
   195   000000                     _T2PR	set	4028
   196   000000                     _T2CONbits	set	4029
   197   000000                     _TMR0L	set	4051
   198   000000                     _T0CON0bits	set	4053
   199   000000                     _CCP2CONbits	set	4007
   200   000000                     _CCP3CONbits	set	3878
   201   000000                     _CCP4CONbits	set	3874
   202   000000                     _T0CON1bits	set	4054
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213   000E01  72                 	db	114	;'r'
   214   000E02  65                 	db	101	;'e'
   215   000E03  64                 	db	100	;'d'
   216   000E04  3D                 	db	61	;'='
   217   000E05  25                 	db	37
   218   000E06  66                 	db	102	;'f'
   219   000E07  20                 	db	32
   220   000E08  67                 	db	103	;'g'
   221   000E09  72                 	db	114	;'r'
   222   000E0A  65                 	db	101	;'e'
   223   000E0B  65                 	db	101	;'e'
   224   000E0C  6E                 	db	110	;'n'
   225   000E0D  3D                 	db	61	;'='
   226   000E0E  25                 	db	37
   227   000E0F  66                 	db	102	;'f'
   228   000E10  20                 	db	32
   229   000E11  62                 	db	98	;'b'
   230   000E12  6C                 	db	108	;'l'
   231   000E13  75                 	db	117	;'u'
   232   000E14  65                 	db	101	;'e'
   233   000E15  3D                 	db	61	;'='
   234   000E16  25                 	db	37
   235   000E17  66                 	db	102	;'f'
   236   000E18  20                 	db	32
   237   000E19  6C                 	db	108	;'l'
   238   000E1A  75                 	db	117	;'u'
   239   000E1B  6D                 	db	109	;'m'
   240   000E1C  3D                 	db	61	;'='
   241   000E1D  25                 	db	37
   242   000E1E  64                 	db	100	;'d'
   243   000E1F  20                 	db	32
   244   000E20  63                 	db	99	;'c'
   245   000E21  6F                 	db	111	;'o'
   246   000E22  6C                 	db	108	;'l'
   247   000E23  6F                 	db	111	;'o'
   248   000E24  75                 	db	117	;'u'
   249   000E25  72                 	db	114	;'r'
   250   000E26  31                 	db	49	;'1'
   251   000E27  3D                 	db	61	;'='
   252   000E28  25                 	db	37
   253   000E29  64                 	db	100	;'d'
   254   000E2A  20                 	db	32
   255   000E2B  0D                 	db	13
   256   000E2C  0A                 	db	10
   257   000E2D  00                 	db	0
   258   000E2E                     STR_2:
   259   000E2E  72                 	db	114	;'r'
   260   000E2F  65                 	db	101	;'e'
   261   000E30  64                 	db	100	;'d'
   262   000E31  3D                 	db	61	;'='
   263   000E32  25                 	db	37
   264   000E33  66                 	db	102	;'f'
   265   000E34  20                 	db	32
   266   000E35  67                 	db	103	;'g'
   267   000E36  72                 	db	114	;'r'
   268   000E37  65                 	db	101	;'e'
   269   000E38  65                 	db	101	;'e'
   270   000E39  6E                 	db	110	;'n'
   271   000E3A  3D                 	db	61	;'='
   272   000E3B  25                 	db	37
   273   000E3C  66                 	db	102	;'f'
   274   000E3D  20                 	db	32
   275   000E3E  62                 	db	98	;'b'
   276   000E3F  6C                 	db	108	;'l'
   277   000E40  75                 	db	117	;'u'
   278   000E41  65                 	db	101	;'e'
   279   000E42  3D                 	db	61	;'='
   280   000E43  25                 	db	37
   281   000E44  66                 	db	102	;'f'
   282   000E45  20                 	db	32
   283   000E46  6C                 	db	108	;'l'
   284   000E47  75                 	db	117	;'u'
   285   000E48  6D                 	db	109	;'m'
   286   000E49  3D                 	db	61	;'='
   287   000E4A  25                 	db	37
   288   000E4B  64                 	db	100	;'d'
   289   000E4C  20                 	db	32
   290   000E4D  20                 	db	32
   291   000E4E  0D                 	db	13
   292   000E4F  0A                 	db	10
   293   000E50  00                 	db	0
   294   000E51                     STR_3:
   295   000E51  69                 	db	105	;'i'
   296   000E52  6E                 	db	110	;'n'
   297   000E53  66                 	db	102	;'f'
   298   000E54  00                 	db	0
   299   000E55                     STR_6:
   300   000E55  6E                 	db	110	;'n'
   301   000E56  61                 	db	97	;'a'
   302   000E57  6E                 	db	110	;'n'
   303   000E58  00                 	db	0
   304   000E59  00                 	db	0	; dummy byte at the end
   305   000000                     
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309   005D3C                     __pcinit:
   310                           	callstack 0
   311   005D3C                     start_initialization:
   312                           	callstack 0
   313   005D3C                     __initialization:
   314                           	callstack 0
   315                           
   316                           ; Initialize objects allocated to BANK0 (7 bytes)
   317                           ; load TBLPTR registers with __pidataBANK0
   318   005D3C  0E68               	movlw	low __pidataBANK0
   319   005D3E  6EF6               	movwf	tblptrl,c
   320   005D40  0E61               	movlw	high __pidataBANK0
   321   005D42  6EF7               	movwf	tblptrh,c
   322   005D44  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   323   005D46  6EF8               	movwf	tblptru,c
   324   005D48  EE00  F0F9         	lfsr	0,__pdataBANK0
   325   005D4C  EE10 F007          	lfsr	1,7
   326   005D50                     copy_data0:
   327   005D50  0009               	tblrd		*+
   328   005D52  CFF5 FFEE          	movff	tablat,postinc0
   329   005D56  50E5               	movf	postdec1,w,c
   330   005D58  50E1               	movf	fsr1l,w,c
   331   005D5A  E1FA               	bnz	copy_data0
   332                           
   333                           ; Clear objects allocated to BANK2 (240 bytes)
   334   005D5C  EE02  F000         	lfsr	0,__pbssBANK2
   335   005D60  0EF0               	movlw	240
   336   005D62                     clear_0:
   337   005D62  6AEE               	clrf	postinc0,c
   338   005D64  06E8               	decf	wreg,f,c
   339   005D66  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK1 (104 bytes)
   342   005D68  EE01  F06E         	lfsr	0,__pbssBANK1
   343   005D6C  0E68               	movlw	104
   344   005D6E                     clear_1:
   345   005D6E  6AEE               	clrf	postinc0,c
   346   005D70  06E8               	decf	wreg,f,c
   347   005D72  E1FD               	bnz	clear_1
   348                           
   349                           ; Clear objects allocated to BANK0 (38 bytes)
   350   005D74  EE00  F0D3         	lfsr	0,__pbssBANK0
   351   005D78  0E26               	movlw	38
   352   005D7A                     clear_2:
   353   005D7A  6AEE               	clrf	postinc0,c
   354   005D7C  06E8               	decf	wreg,f,c
   355   005D7E  E1FD               	bnz	clear_2
   356                           
   357                           ; Clear objects allocated to COMRAM (1 bytes)
   358   005D80  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   359   005D82                     end_of_initialization:
   360                           	callstack 0
   361   005D82                     __end_of__initialization:
   362                           	callstack 0
   363   005D82  0100               	movlb	0
   364   005D84  EF98  F011         	goto	_main	;jump to C main() function
   365                           
   366                           	psect	bssCOMRAM
   367   00005F                     __pbssCOMRAM:
   368                           	callstack 0
   369   00005F                     _TxBufWriteCnt:
   370                           	callstack 0
   371   00005F                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374   0000D3                     __pbssBANK0:
   375                           	callstack 0
   376   0000D3                     _EUSART4RXbuf:
   377                           	callstack 0
   378   0000D3                     	ds	20
   379   0000E7                     floorf@F526:
   380                           	callstack 0
   381   0000E7                     	ds	4
   382   0000EB                     ___fpclassifyf@F465:
   383                           	callstack 0
   384   0000EB                     	ds	4
   385   0000EF                     _width:
   386                           	callstack 0
   387   0000EF                     	ds	2
   388   0000F1                     _prec:
   389                           	callstack 0
   390   0000F1                     	ds	2
   391   0000F3                     _lost_flag:
   392                           	callstack 0
   393   0000F3                     	ds	2
   394   0000F5                     _flags:
   395                           	callstack 0
   396   0000F5                     	ds	1
   397   0000F6                     _TxBufReadCnt:
   398                           	callstack 0
   399   0000F6                     	ds	1
   400   0000F7                     _RxBufReadCnt:
   401                           	callstack 0
   402   0000F7                     	ds	1
   403   0000F8                     _RxBufWriteCnt:
   404                           	callstack 0
   405   0000F8                     	ds	1
   406                           
   407                           	psect	dataBANK0
   408   0000F9                     __pdataBANK0:
   409                           	callstack 0
   410   0000F9                     _RunOneBlockTime:
   411                           	callstack 0
   412   0000F9                     	ds	2
   413   0000FB                     _Turn45Delay:
   414                           	callstack 0
   415   0000FB                     	ds	2
   416   0000FD                     _power:
   417                           	callstack 0
   418   0000FD                     	ds	2
   419   0000FF                     _DataFlag:
   420                           	callstack 0
   421   0000FF                     	ds	1
   422                           
   423                           	psect	bssBANK1
   424   00016E                     __pbssBANK1:
   425                           	callstack 0
   426   00016E                     	ds	12
   427   00017A                     _move_count:
   428                           	callstack 0
   429   00017A                     	ds	2
   430   00017C                     _run_flag:
   431                           	callstack 0
   432   00017C                     	ds	2
   433   00017E                     _WayBack:
   434                           	callstack 0
   435   00017E                     	ds	50
   436   0001B0                     _rel:
   437                           	callstack 0
   438   0001B0                     	ds	12
   439   0001BC                     _motorR:
   440                           	callstack 0
   441   0001BC                     	ds	9
   442   0001C5                     _motorL:
   443                           	callstack 0
   444   0001C5                     	ds	9
   445   0001CE                     _vals:
   446                           	callstack 0
   447   0001CE                     	ds	8
   448                           
   449                           	psect	bssBANK2
   450   000200                     __pbssBANK2:
   451                           	callstack 0
   452   000200                     _EUSART4TXbuf:
   453                           	callstack 0
   454   000200                     	ds	60
   455   00023C                     _Time_forward:
   456                           	callstack 0
   457   00023C                     	ds	100
   458   0002A0                     _dbuf:
   459                           	callstack 0
   460   0002A0                     	ds	80
   461                           
   462                           	psect	cstackBANK1
   463   000100                     __pcstackBANK1:
   464                           	callstack 0
   465   000100                     main@buf:
   466                           	callstack 0
   467                           
   468                           ; 100 bytes @ 0x0
   469   000100                     	ds	100
   470   000164                     main@temp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x64
   474   000164                     	ds	2
   475   000166                     main@colour_1291:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x66
   479   000166                     	ds	2
   480   000168                     main@consecuitive:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x68
   484   000168                     	ds	2
   485   00016A                     main@colour:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x6A
   489   00016A                     	ds	2
   490   00016C                     main@prev_colour:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x6C
   494   00016C                     	ds	2
   495                           
   496                           	psect	cstackBANK0
   497   000060                     __pcstackBANK0:
   498                           	callstack 0
   499   000060                     efgtoa@fp:
   500                           	callstack 0
   501   000060                     colour_rel@L:
   502                           	callstack 0
   503   000060                     _Colour_decider$3162:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x0
   507   000060                     	ds	2
   508   000062                     efgtoa@f:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x2
   512   000062                     	ds	2
   513   000064                     Colour_decider@Cmax_i:
   514                           	callstack 0
   515   000064                     _colour_rel$3160:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x4
   519   000064                     	ds	2
   520   000066                     efgtoa@c:
   521                           	callstack 0
   522   000066                     Colour_decider@RGB_col:
   523                           	callstack 0
   524                           
   525                           ; 12 bytes @ 0x6
   526   000066                     	ds	1
   527   000067                     ??_efgtoa:
   528                           
   529                           ; 1 bytes @ 0x7
   530   000067                     	ds	1
   531   000068                     _colour_rel$3161:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x8
   535   000068                     	ds	1
   536   000069                     efgtoa@ne:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x9
   540   000069                     	ds	2
   541   00006B                     efgtoa@p:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xB
   545   00006B                     	ds	1
   546   00006C                     colour_rel@R:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0xC
   550   00006C                     	ds	1
   551   00006D                     efgtoa@t:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xD
   555   00006D                     	ds	2
   556   00006F                     _efgtoa$2790:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xF
   560   00006F                     	ds	1
   561   000070                     colour_rel@G:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x10
   565   000070                     	ds	1
   566   000071                     efgtoa@pp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x11
   570   000071                     	ds	1
   571   000072                     efgtoa@mode:
   572                           	callstack 0
   573   000072                     Colour_decider@Cmax:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x12
   577   000072                     	ds	1
   578   000073                     efgtoa@nmode:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x13
   582   000073                     	ds	1
   583   000074                     efgtoa@d:
   584                           	callstack 0
   585   000074                     colour_rel@B:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x14
   589   000074                     	ds	2
   590   000076                     efgtoa@m:
   591                           	callstack 0
   592   000076                     Colour_decider@Cmin:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x16
   596   000076                     	ds	2
   597   000078                     efgtoa@e:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x18
   601   000078                     	ds	2
   602   00007A                     Colour_decider@i:
   603                           	callstack 0
   604   00007A                     efgtoa@w:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1A
   608   00007A                     	ds	2
   609   00007C                     Colour_decider@Hue:
   610                           	callstack 0
   611   00007C                     efgtoa@ou:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x1C
   615   00007C                     	ds	4
   616   000080                     efgtoa@i:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x20
   620   000080                     	ds	2
   621   000082                     efgtoa@h:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x22
   625   000082                     	ds	4
   626   000086                     efgtoa@l:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x26
   630   000086                     	ds	4
   631   00008A                     efgtoa@sign:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x2A
   635   00008A                     	ds	1
   636   00008B                     efgtoa@n:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x2B
   640   00008B                     	ds	2
   641   00008D                     efgtoa@g:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x2D
   645   00008D                     	ds	4
   646   000091                     efgtoa@u:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x31
   650   000091                     	ds	4
   651   000095                     vfpfcnvrt@fp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x35
   655   000095                     	ds	2
   656   000097                     vfpfcnvrt@fmt:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x37
   660   000097                     	ds	2
   661   000099                     vfpfcnvrt@ap:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x39
   665   000099                     	ds	2
   666   00009B                     ??_vfpfcnvrt:
   667                           
   668                           ; 1 bytes @ 0x3B
   669   00009B                     	ds	2
   670   00009D                     vfpfcnvrt@convarg:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x3D
   674   00009D                     	ds	8
   675   0000A5                     vfpfcnvrt@c:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x45
   679   0000A5                     	ds	1
   680   0000A6                     vfpfcnvrt@cp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x46
   684   0000A6                     	ds	2
   685   0000A8                     ?_vfprintf:
   686                           	callstack 0
   687   0000A8                     vfprintf@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x48
   691   0000A8                     	ds	2
   692   0000AA                     vfprintf@fmt:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4A
   696   0000AA                     	ds	2
   697   0000AC                     vfprintf@ap:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4C
   701   0000AC                     	ds	2
   702   0000AE                     vfprintf@cfmt:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x4E
   706   0000AE                     	ds	2
   707   0000B0                     ?_sprintf:
   708                           	callstack 0
   709   0000B0                     sprintf@s:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x50
   713   0000B0                     	ds	2
   714   0000B2                     sprintf@fmt:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x52
   718   0000B2                     	ds	18
   719   0000C4                     sprintf@ap:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x64
   723   0000C4                     	ds	2
   724   0000C6                     sprintf@f:
   725                           	callstack 0
   726                           
   727                           ; 11 bytes @ 0x66
   728   0000C6                     	ds	11
   729   0000D1                     ??_main:
   730                           
   731                           ; 1 bytes @ 0x71
   732   0000D1                     	ds	2
   733                           
   734                           	psect	cstackCOMRAM
   735   000001                     __pcstackCOMRAM:
   736                           	callstack 0
   737   000001                     ??_I2C_2_Master_Idle:
   738   000001                     ?___fpclassifyf:
   739                           	callstack 0
   740   000001                     ?___wmul:
   741                           	callstack 0
   742   000001                     ?___fladd:
   743                           	callstack 0
   744   000001                     ?_labs:
   745                           	callstack 0
   746   000001                     ?___flneg:
   747                           	callstack 0
   748   000001                     ?___fltol:
   749                           	callstack 0
   750   000001                     ?___xxtofl:
   751                           	callstack 0
   752   000001                     ?___aodiv:
   753                           	callstack 0
   754   000001                     ?___aomod:
   755                           	callstack 0
   756   000001                     sendCharSerial4@charToSend:
   757                           	callstack 0
   758   000001                     initDCmotorsPWM@PWMperiod:
   759                           	callstack 0
   760   000001                     TurnDelay@Turn45Delay:
   761                           	callstack 0
   762   000001                     getTMR0val@moving:
   763                           	callstack 0
   764   000001                     delayed_ms@time:
   765                           	callstack 0
   766   000001                     ___wmul@multiplier:
   767                           	callstack 0
   768   000001                     memcpy@d1:
   769                           	callstack 0
   770   000001                     fputc@c:
   771                           	callstack 0
   772   000001                     strcpy@dest:
   773                           	callstack 0
   774   000001                     ___flneg@f1:
   775                           	callstack 0
   776   000001                     ___fltol@f1:
   777                           	callstack 0
   778   000001                     ___fladd@b:
   779                           	callstack 0
   780   000001                     ___xxtofl@val:
   781                           	callstack 0
   782   000001                     ___fpclassifyf@x:
   783                           	callstack 0
   784   000001                     labs@a:
   785                           	callstack 0
   786   000001                     ___aodiv@dividend:
   787                           	callstack 0
   788   000001                     ___aomod@dividend:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x0
   792   000001                     	ds	1
   793   000002                     ??_I2C_2_Master_Read:
   794   000002                     I2C_2_Master_Write@data_byte:
   795                           	callstack 0
   796   000002                     sendStringSerial4@string:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x1
   800   000002                     	ds	1
   801   000003                     ??_delayed_ms:
   802   000003                     ??_TurnDelay:
   803   000003                     color_writetoaddr@value:
   804                           	callstack 0
   805   000003                     I2C_2_Master_Read@ack:
   806                           	callstack 0
   807   000003                     ___wmul@multiplicand:
   808                           	callstack 0
   809   000003                     memcpy@s1:
   810                           	callstack 0
   811   000003                     fputc@fp:
   812                           	callstack 0
   813   000003                     strcpy@src:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x2
   817   000003                     	ds	1
   818   000004                     color_writetoaddr@address:
   819                           	callstack 0
   820   000004                     I2C_2_Master_Read@tmp:
   821                           	callstack 0
   822   000004                     delayed_ms@i:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x3
   826   000004                     	ds	1
   827   000005                     ??_fputc:
   828   000005                     ??___fpclassifyf:
   829   000005                     ??_labs:
   830   000005                     ??_color_click_init:
   831   000005                     ??___fltol:
   832   000005                     ??___xxtofl:
   833   000005                     ?_color_read_lum:
   834                           	callstack 0
   835   000005                     ?_color_read_Red:
   836                           	callstack 0
   837   000005                     ?_color_read_Green:
   838                           	callstack 0
   839   000005                     ?_color_read_Blue:
   840                           	callstack 0
   841   000005                     ___wmul@product:
   842                           	callstack 0
   843   000005                     memcpy@n:
   844                           	callstack 0
   845   000005                     strcpy@s:
   846                           	callstack 0
   847   000005                     ___fladd@a:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x4
   851   000005                     	ds	2
   852   000007                     ??_color_read_lum:
   853   000007                     ??_color_read_Red:
   854   000007                     ??_color_read_Green:
   855   000007                     ??_color_read_Blue:
   856   000007                     ?___lwdiv:
   857                           	callstack 0
   858   000007                     ___lwdiv@dividend:
   859                           	callstack 0
   860   000007                     memcpy@d:
   861                           	callstack 0
   862   000007                     strcpy@d:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x6
   866   000007                     	ds	2
   867   000009                     ??___fladd:
   868   000009                     ___fltol@sign1:
   869                           	callstack 0
   870   000009                     ___xxtofl@sign:
   871                           	callstack 0
   872   000009                     ___lwdiv@divisor:
   873                           	callstack 0
   874   000009                     ___fpclassifyf@e:
   875                           	callstack 0
   876   000009                     memcpy@s:
   877                           	callstack 0
   878   000009                     ___aodiv@divisor:
   879                           	callstack 0
   880   000009                     ___aomod@divisor:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x8
   884   000009                     	ds	1
   885   00000A                     ___fltol@exp1:
   886                           	callstack 0
   887   00000A                     ___xxtofl@exp:
   888                           	callstack 0
   889   00000A                     color_read_lum@tmp:
   890                           	callstack 0
   891   00000A                     color_read_Red@tmp:
   892                           	callstack 0
   893   00000A                     color_read_Green@tmp:
   894                           	callstack 0
   895   00000A                     color_read_Blue@tmp:
   896                           	callstack 0
   897   00000A                     fputs@s:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x9
   901   00000A                     	ds	1
   902   00000B                     memcpy@tmp:
   903                           	callstack 0
   904   00000B                     ___lwdiv@quotient:
   905                           	callstack 0
   906   00000B                     ___xxtofl@arg:
   907                           	callstack 0
   908   00000B                     ___fpclassifyf@u:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0xA
   912   00000B                     	ds	1
   913   00000C                     readColours@vals:
   914                           	callstack 0
   915   00000C                     fputs@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xB
   919   00000C                     	ds	1
   920   00000D                     ___lwdiv@counter:
   921                           	callstack 0
   922   00000D                     ___fladd@signs:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0xC
   926   00000D                     	ds	1
   927   00000E                     ___fladd@aexp:
   928                           	callstack 0
   929   00000E                     fputs@c:
   930                           	callstack 0
   931   00000E                     setMotorPWM@m:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xD
   935   00000E                     	ds	1
   936   00000F                     ___fladd@bexp:
   937                           	callstack 0
   938   00000F                     fputs@i:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0xE
   942   00000F                     	ds	1
   943   000010                     ??_setMotorPWM:
   944   000010                     ___fladd@grs:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0xF
   948   000010                     	ds	1
   949   000011                     ?___flmul:
   950                           	callstack 0
   951   000011                     ___aodiv@counter:
   952                           	callstack 0
   953   000011                     ___aomod@counter:
   954                           	callstack 0
   955   000011                     pad@fp:
   956                           	callstack 0
   957   000011                     ___flmul@b:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x10
   961   000011                     	ds	1
   962   000012                     setMotorPWM@posDuty:
   963                           	callstack 0
   964   000012                     ___aodiv@sign:
   965                           	callstack 0
   966   000012                     ___aomod@sign:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x11
   970   000012                     	ds	1
   971   000013                     ?_abs:
   972                           	callstack 0
   973   000013                     setMotorPWM@negDuty:
   974                           	callstack 0
   975   000013                     pad@buf:
   976                           	callstack 0
   977   000013                     abs@a:
   978                           	callstack 0
   979   000013                     ___aodiv@quotient:
   980                           	callstack 0
   981                           
   982                           ; 8 bytes @ 0x12
   983   000013                     	ds	1
   984   000014                     stop@mL:
   985                           	callstack 0
   986   000014                     turnLeft@mL:
   987                           	callstack 0
   988   000014                     turnRight@mL:
   989                           	callstack 0
   990   000014                     fullSpeedAhead@mL:
   991                           	callstack 0
   992   000014                     timed_forward@mL:
   993                           	callstack 0
   994   000014                     fullSpeedBack@mL:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x13
   998   000014                     	ds	1
   999   000015                     ??_abs:
  1000   000015                     pad@p:
  1001                           	callstack 0
  1002   000015                     ___flmul@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x14
  1006   000015                     	ds	1
  1007   000016                     stop@mR:
  1008                           	callstack 0
  1009   000016                     turnLeft@mR:
  1010                           	callstack 0
  1011   000016                     turnRight@mR:
  1012                           	callstack 0
  1013   000016                     fullSpeedAhead@mR:
  1014                           	callstack 0
  1015   000016                     timed_forward@mR:
  1016                           	callstack 0
  1017   000016                     fullSpeedBack@mR:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x15
  1021   000016                     	ds	1
  1022   000017                     ??_pad:
  1023                           
  1024                           ; 1 bytes @ 0x16
  1025   000017                     	ds	1
  1026   000018                     ??_fullSpeedAhead:
  1027   000018                     ??_stop:
  1028   000018                     ??_turnLeft:
  1029   000018                     ??_turnRight:
  1030   000018                     ??_fullSpeedBack:
  1031   000018                     timed_forward@time:
  1032                           	callstack 0
  1033   000018                     pad@i:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x17
  1037   000018                     	ds	1
  1038   000019                     ??___flmul:
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041   000019                     	ds	1
  1042   00001A                     ??_timed_forward:
  1043   00001A                     turnRight45@mL:
  1044                           	callstack 0
  1045   00001A                     turnLeft45@mL:
  1046                           	callstack 0
  1047   00001A                     reverseDetect@mL:
  1048                           	callstack 0
  1049   00001A                     reverseOneBlock@mL:
  1050                           	callstack 0
  1051   00001A                     ForwardOneBlock@mL:
  1052                           	callstack 0
  1053   00001A                     Forwardhalfblock@mL:
  1054                           	callstack 0
  1055   00001A                     pad@w:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x19
  1059   00001A                     	ds	2
  1060   00001C                     turnRight45@mR:
  1061                           	callstack 0
  1062   00001C                     turnLeft45@mR:
  1063                           	callstack 0
  1064   00001C                     reverseDetect@mR:
  1065                           	callstack 0
  1066   00001C                     reverseOneBlock@mR:
  1067                           	callstack 0
  1068   00001C                     ForwardOneBlock@mR:
  1069                           	callstack 0
  1070   00001C                     Forwardhalfblock@mR:
  1071                           	callstack 0
  1072   00001C                     dtoa@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1B
  1076   00001C                     	ds	1
  1077   00001D                     ___flmul@sign:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x1C
  1081   00001D                     	ds	1
  1082   00001E                     ??_Forwardhalfblock:
  1083   00001E                     ??_turnRight45:
  1084   00001E                     ??_turnLeft45:
  1085   00001E                     ??_reverseDetect:
  1086   00001E                     ??_reverseOneBlock:
  1087   00001E                     ??_ForwardOneBlock:
  1088   00001E                     ___flmul@grs:
  1089                           	callstack 0
  1090   00001E                     dtoa@d:
  1091                           	callstack 0
  1092                           
  1093                           ; 8 bytes @ 0x1D
  1094   00001E                     	ds	2
  1095   000020                     RedMove@mL:
  1096                           	callstack 0
  1097   000020                     GreenMove@mL:
  1098                           	callstack 0
  1099   000020                     BlueMove@mL:
  1100                           	callstack 0
  1101   000020                     YellowMove@mL:
  1102                           	callstack 0
  1103   000020                     PinkMove@mL:
  1104                           	callstack 0
  1105   000020                     OrangeMove@mL:
  1106                           	callstack 0
  1107   000020                     LightBlueMove@mL:
  1108                           	callstack 0
  1109   000020                     RetryMove@mL:
  1110                           	callstack 0
  1111   000020                     ReverseYellow@mL:
  1112                           	callstack 0
  1113   000020                     ReversePink@mL:
  1114                           	callstack 0
  1115   000020                     turnCalibration@mL:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x1F
  1119   000020                     	ds	2
  1120   000022                     ___flmul@aexp:
  1121                           	callstack 0
  1122   000022                     RedMove@mR:
  1123                           	callstack 0
  1124   000022                     GreenMove@mR:
  1125                           	callstack 0
  1126   000022                     BlueMove@mR:
  1127                           	callstack 0
  1128   000022                     YellowMove@mR:
  1129                           	callstack 0
  1130   000022                     PinkMove@mR:
  1131                           	callstack 0
  1132   000022                     OrangeMove@mR:
  1133                           	callstack 0
  1134   000022                     LightBlueMove@mR:
  1135                           	callstack 0
  1136   000022                     RetryMove@mR:
  1137                           	callstack 0
  1138   000022                     ReverseYellow@mR:
  1139                           	callstack 0
  1140   000022                     ReversePink@mR:
  1141                           	callstack 0
  1142   000022                     turnCalibration@mR:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x21
  1146   000022                     	ds	1
  1147   000023                     ___flmul@bexp:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x22
  1151   000023                     	ds	1
  1152   000024                     ??_turnCalibration:
  1153   000024                     ??_RetryMove:
  1154   000024                     go_Home@WayBack:
  1155                           	callstack 0
  1156   000024                     ___flmul@prod:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x23
  1160   000024                     	ds	2
  1161   000026                     ??_dtoa:
  1162   000026                     go_Home@Time_forward:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x25
  1166   000026                     	ds	2
  1167   000028                     ??_go_Home:
  1168   000028                     ___flmul@temp:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x27
  1172   000028                     	ds	2
  1173   00002A                     ?___flsub:
  1174                           	callstack 0
  1175   00002A                     ___flge@ff1:
  1176                           	callstack 0
  1177   00002A                     ___flsub@b:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x29
  1181   00002A                     	ds	1
  1182   00002B                     go_Home@i:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x2A
  1186   00002B                     	ds	3
  1187   00002E                     _dtoa$2759:
  1188                           	callstack 0
  1189   00002E                     ___flge@ff2:
  1190                           	callstack 0
  1191   00002E                     ___flsub@a:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x2D
  1195   00002E                     	ds	2
  1196   000030                     dtoa@p:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x2F
  1200   000030                     	ds	2
  1201   000032                     ??___flge:
  1202   000032                     ?___fldiv:
  1203                           	callstack 0
  1204   000032                     dtoa@w:
  1205                           	callstack 0
  1206   000032                     ___fleq@ff1:
  1207                           	callstack 0
  1208   000032                     ___fldiv@b:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x31
  1212   000032                     	ds	2
  1213   000034                     dtoa@n:
  1214                           	callstack 0
  1215                           
  1216                           ; 8 bytes @ 0x33
  1217   000034                     	ds	2
  1218   000036                     ___fleq@ff2:
  1219                           	callstack 0
  1220   000036                     ___fldiv@a:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x35
  1224   000036                     	ds	4
  1225   00003A                     ??___fldiv:
  1226   00003A                     ??___fleq:
  1227                           
  1228                           ; 1 bytes @ 0x39
  1229   00003A                     	ds	2
  1230   00003C                     dtoa@i:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x3B
  1234   00003C                     	ds	2
  1235   00003E                     dtoa@s:
  1236                           	callstack 0
  1237   00003E                     ___fldiv@rem:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x3D
  1241   00003E                     	ds	4
  1242   000042                     ___fldiv@sign:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x41
  1246   000042                     	ds	1
  1247   000043                     ___fldiv@new_exp:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x42
  1251   000043                     	ds	2
  1252   000045                     ___fldiv@grs:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x44
  1256   000045                     	ds	4
  1257   000049                     ___fldiv@bexp:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x48
  1261   000049                     	ds	1
  1262   00004A                     ___fldiv@aexp:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x49
  1266   00004A                     	ds	1
  1267   00004B                     ?_Colour_decider:
  1268                           	callstack 0
  1269   00004B                     ?_floorf:
  1270                           	callstack 0
  1271   00004B                     colour_rel@vals:
  1272                           	callstack 0
  1273   00004B                     Colour_decider@vals:
  1274                           	callstack 0
  1275   00004B                     floorf@x:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x4A
  1279   00004B                     	ds	2
  1280   00004D                     colour_rel@rel:
  1281                           	callstack 0
  1282   00004D                     Colour_decider@rel:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x4C
  1286   00004D                     	ds	2
  1287   00004F                     ??_floorf:
  1288   00004F                     ??_Colour_decider:
  1289                           
  1290                           ; 1 bytes @ 0x4E
  1291   00004F                     	ds	6
  1292   000055                     floorf@m:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x54
  1296   000055                     	ds	4
  1297   000059                     floorf@e:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x58
  1301   000059                     	ds	2
  1302   00005B                     floorf@u:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x5A
  1306   00005B                     	ds	4
  1307   00005F                     
  1308                           ; 1 bytes @ 0x5E
  1309 ;;
  1310 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1311 ;;
  1312 ;; *************** function _main *****************
  1313 ;; Defined at:
  1314 ;;		line 30 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  colour          2  106[BANK1 ] int 
  1319 ;;  colour          2  102[BANK1 ] int 
  1320 ;;  temp            2  100[BANK1 ] int 
  1321 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1322 ;;  prev_colour     2  108[BANK1 ] int 
  1323 ;;  consecuitive    2  104[BANK1 ] int 
  1324 ;;  lost_count      2    0        int 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         0       0     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         0       2     110       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:      112 bytes
  1339 ;; Hardware stack levels required when called: 8
  1340 ;; This function calls:
  1341 ;;		_BlueMove
  1342 ;;		_Colour_decider
  1343 ;;		_Forwardhalfblock
  1344 ;;		_GreenMove
  1345 ;;		_I2C_2_Master_Init
  1346 ;;		_Interrupts_init
  1347 ;;		_LightBlueMove
  1348 ;;		_OrangeMove
  1349 ;;		_PinkMove
  1350 ;;		_RedMove
  1351 ;;		_RetryMove
  1352 ;;		_Timer0_init
  1353 ;;		_YellowMove
  1354 ;;		_color_click_init
  1355 ;;		_colour_rel
  1356 ;;		_fullSpeedAhead
  1357 ;;		_getTMR0val
  1358 ;;		_go_Home
  1359 ;;		_initDCmotorsPWM
  1360 ;;		_initUSART4
  1361 ;;		_readColours
  1362 ;;		_sendStringSerial4
  1363 ;;		_sprintf
  1364 ;;		_stop
  1365 ;;		_turnCalibration
  1366 ;; This function is called by:
  1367 ;;		Startup code after reset
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text0
  1372   002330                     __ptext0:
  1373                           	callstack 0
  1374   002330                     _main:
  1375                           	callstack 23
  1376   002330                     
  1377                           ;main.c: 31:     initUSART4();
  1378   002330  EC84  F030         	call	_initUSART4	;wreg free
  1379   002334                     
  1380                           ;main.c: 32:     Interrupts_init();
  1381   002334  ECB9  F030         	call	_Interrupts_init	;wreg free
  1382   002338                     
  1383                           ;main.c: 33:     color_click_init();
  1384   002338  EC0D  F02D         	call	_color_click_init	;wreg free
  1385   00233C                     
  1386                           ;main.c: 34:     I2C_2_Master_Init();
  1387   00233C  EC15  F030         	call	_I2C_2_Master_Init	;wreg free
  1388   002340                     
  1389                           ;main.c: 35:     initDCmotorsPWM(200);
  1390   002340  0E00               	movlw	0
  1391   002342  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1392   002344  0EC8               	movlw	200
  1393   002346  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1394   002348  ECE3  F029         	call	_initDCmotorsPWM	;wreg free
  1395   00234C                     
  1396                           ;main.c: 36:     Timer0_init();
  1397   00234C  EC74  F030         	call	_Timer0_init	;wreg free
  1398   002350                     
  1399                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1400   002350  9287               	bcf	135,1,c	;volatile
  1401   002352                     
  1402                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1403   002352  9881               	bcf	129,4,c	;volatile
  1404   002354                     
  1405                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1406   002354  9E86               	bcf	134,7,c	;volatile
  1407   002356                     
  1408                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1409   002356  8486               	bsf	134,2,c	;volatile
  1410   002358                     
  1411                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1412   002358  010E               	movlb	14	; () banked
  1413   00235A  95B4               	bcf	180,2,b	;volatile
  1414   00235C                     
  1415                           ; BSR set to: 14
  1416                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1417   00235C  8686               	bsf	134,3,c	;volatile
  1418   00235E                     
  1419                           ; BSR set to: 14
  1420                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1421   00235E  97B4               	bcf	180,3,b	;volatile
  1422   002360                     
  1423                           ; BSR set to: 14
  1424                           ;main.c: 46:     LATGbits.LATG1=1;
  1425   002360  827F               	bsf	127,1,c	;volatile
  1426   002362                     
  1427                           ; BSR set to: 14
  1428                           ;main.c: 47:     LATAbits.LATA4=1;
  1429   002362  8879               	bsf	121,4,c	;volatile
  1430   002364                     
  1431                           ; BSR set to: 14
  1432                           ;main.c: 48:     LATFbits.LATF7=1;
  1433   002364  8E7E               	bsf	126,7,c	;volatile
  1434   002366                     
  1435                           ; BSR set to: 14
  1436                           ;main.c: 51:     LATDbits.LATD7=0;
  1437   002366  9E7C               	bcf	124,7,c	;volatile
  1438   002368                     
  1439                           ; BSR set to: 14
  1440                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1441   002368  9E84               	bcf	132,7,c	;volatile
  1442   00236A                     
  1443                           ; BSR set to: 14
  1444                           ;main.c: 53:     LATHbits.LATH3=0;
  1445   00236A  9680               	bcf	128,3,c	;volatile
  1446   00236C                     
  1447                           ; BSR set to: 14
  1448                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1449   00236C  9688               	bcf	136,3,c	;volatile
  1450   00236E                     
  1451                           ; BSR set to: 14
  1452                           ;main.c: 57:     LATHbits.LATH0=0;
  1453   00236E  9080               	bcf	128,0,c	;volatile
  1454   002370                     
  1455                           ; BSR set to: 14
  1456                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1457   002370  9088               	bcf	136,0,c	;volatile
  1458   002372                     
  1459                           ; BSR set to: 14
  1460                           ;main.c: 61:     LATFbits.LATF0=0;
  1461   002372  907E               	bcf	126,0,c	;volatile
  1462   002374                     
  1463                           ; BSR set to: 14
  1464                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1465   002374  9086               	bcf	134,0,c	;volatile
  1466   002376                     
  1467                           ; BSR set to: 14
  1468                           ;main.c: 65:     LATDbits.LATD4=0;
  1469   002376  987C               	bcf	124,4,c	;volatile
  1470   002378                     
  1471                           ; BSR set to: 14
  1472                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1473   002378  9884               	bcf	132,4,c	;volatile
  1474   00237A                     
  1475                           ; BSR set to: 14
  1476                           ;main.c: 69:     LATDbits.LATD3=0;
  1477   00237A  967C               	bcf	124,3,c	;volatile
  1478   00237C                     
  1479                           ; BSR set to: 14
  1480                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1481   00237C  9684               	bcf	132,3,c	;volatile
  1482   00237E                     
  1483                           ; BSR set to: 14
  1484                           ;main.c: 75:     motorL.power=0;
  1485   00237E  0E00               	movlw	0
  1486   002380  0101               	movlb	1	; () banked
  1487   002382  6FC5               	movwf	_motorL& (0+255),b
  1488   002384                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 76:     motorL.direction=1;
  1491   002384  0E01               	movlw	1
  1492   002386  6FC6               	movwf	(_motorL+1)& (0+255),b
  1493   002388                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 77:     motorL.brakemode=1;
  1496   002388  0E01               	movlw	1
  1497   00238A  6FC7               	movwf	(_motorL+2)& (0+255),b
  1498   00238C                     
  1499                           ; BSR set to: 1
  1500                           ;main.c: 78:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1501   00238C  0EAA               	movlw	170
  1502   00238E  6FCA               	movwf	(_motorL+5)& (0+255),b
  1503   002390  0E0F               	movlw	15
  1504   002392  6FCB               	movwf	(_motorL+6)& (0+255),b
  1505   002394                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 79:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1508   002394  0EA6               	movlw	166
  1509   002396  6FCC               	movwf	(_motorL+7)& (0+255),b
  1510   002398  0E0F               	movlw	15
  1511   00239A  6FCD               	movwf	(_motorL+8)& (0+255),b
  1512   00239C                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 80:     motorL.PWMperiod=200;
  1515   00239C  0E00               	movlw	0
  1516   00239E  6FC9               	movwf	(_motorL+4)& (0+255),b
  1517   0023A0  0EC8               	movlw	200
  1518   0023A2  6FC8               	movwf	(_motorL+3)& (0+255),b
  1519   0023A4                     
  1520                           ; BSR set to: 1
  1521                           ;main.c: 81:     motorR.power=0;
  1522   0023A4  0E00               	movlw	0
  1523   0023A6  6FBC               	movwf	_motorR& (0+255),b
  1524   0023A8                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 82:     motorR.direction=1;
  1527   0023A8  0E01               	movlw	1
  1528   0023AA  6FBD               	movwf	(_motorR+1)& (0+255),b
  1529   0023AC                     
  1530                           ; BSR set to: 1
  1531                           ;main.c: 83:     motorR.brakemode=1;
  1532   0023AC  0E01               	movlw	1
  1533   0023AE  6FBE               	movwf	(_motorR+2)& (0+255),b
  1534   0023B0                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 84:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1537   0023B0  0E25               	movlw	37
  1538   0023B2  6FC1               	movwf	(_motorR+5)& (0+255),b
  1539   0023B4  0E0F               	movlw	15
  1540   0023B6  6FC2               	movwf	(_motorR+6)& (0+255),b
  1541   0023B8                     
  1542                           ; BSR set to: 1
  1543                           ;main.c: 85:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1544   0023B8  0E21               	movlw	33
  1545   0023BA  6FC3               	movwf	(_motorR+7)& (0+255),b
  1546   0023BC  0E0F               	movlw	15
  1547   0023BE  6FC4               	movwf	(_motorR+8)& (0+255),b
  1548   0023C0                     
  1549                           ; BSR set to: 1
  1550                           ;main.c: 86:     motorR.PWMperiod=200;
  1551   0023C0  0E00               	movlw	0
  1552   0023C2  6FC0               	movwf	(_motorR+4)& (0+255),b
  1553   0023C4  0EC8               	movlw	200
  1554   0023C6  6FBF               	movwf	(_motorR+3)& (0+255),b
  1555   0023C8                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 88:     int consecuitive=0;
  1558   0023C8  0E00               	movlw	0
  1559   0023CA  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1560   0023CC  0E00               	movlw	0
  1561   0023CE  6F68               	movwf	main@consecuitive& (0+255),b
  1562   0023D0                     
  1563                           ; BSR set to: 1
  1564                           ;main.c: 89:     int prev_colour =0;
  1565   0023D0  0E00               	movlw	0
  1566   0023D2  6F6D               	movwf	(main@prev_colour+1)& (0+255),b
  1567   0023D4  0E00               	movlw	0
  1568   0023D6  6F6C               	movwf	main@prev_colour& (0+255),b
  1569   0023D8                     
  1570                           ; BSR set to: 1
  1571                           ;main.c: 90:     run_flag=1;
  1572   0023D8  0E00               	movlw	0
  1573   0023DA  6F7D               	movwf	(_run_flag+1)& (0+255),b
  1574   0023DC  0E01               	movlw	1
  1575   0023DE  6F7C               	movwf	_run_flag& (0+255),b
  1576   0023E0                     
  1577                           ; BSR set to: 1
  1578                           ;main.c: 91:     move_count=-1;
  1579   0023E0  697A               	setf	_move_count& (0+255),b	;volatile
  1580   0023E2  697B               	setf	(_move_count+1)& (0+255),b	;volatile
  1581   0023E4                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 93:     turnCalibration(&motorL,&motorR);
  1584   0023E4  0EC5               	movlw	low _motorL
  1585   0023E6  6E20               	movwf	turnCalibration@mL^0,c
  1586   0023E8  0E01               	movlw	high _motorL
  1587   0023EA  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1588   0023EC  0EBC               	movlw	low _motorR
  1589   0023EE  6E22               	movwf	turnCalibration@mR^0,c
  1590   0023F0  0E01               	movlw	high _motorR
  1591   0023F2  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1592   0023F4  EC68  F021         	call	_turnCalibration	;wreg free
  1593   0023F8                     
  1594                           ;main.c: 95:     LATFbits.LATF0=0;
  1595   0023F8  907E               	bcf	126,0,c	;volatile
  1596   0023FA                     
  1597                           ;main.c: 96:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1598   0023FA  0E52               	movlw	82
  1599   0023FC  0100               	movlb	0	; () banked
  1600   0023FE  6FD2               	movwf	(??_main+1)& (0+255),b
  1601   002400  0E2B               	movlw	43
  1602   002402  6FD1               	movwf	??_main& (0+255),b
  1603   002404  0E00               	movlw	0
  1604   002406                     u6007:
  1605   002406  2EE8               	decfsz	wreg,f,c
  1606   002408  D7FE               	bra	u6007
  1607   00240A  2FD1               	decfsz	??_main& (0+255),f,b
  1608   00240C  D7FC               	bra	u6007
  1609   00240E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1610   002410  D7FA               	bra	u6007
  1611   002412  F000               	nop	
  1612   002414                     l389:
  1613   002414  B48E               	btfsc	142,2,c	;volatile
  1614   002416  EF0F  F012         	goto	u5801
  1615   00241A  EF11  F012         	goto	u5800
  1616   00241E                     u5801:
  1617   00241E  EF0A  F012         	goto	l389
  1618   002422                     u5800:
  1619   002422                     
  1620                           ;main.c: 99:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1621   002422  0E52               	movlw	82
  1622   002424  0100               	movlb	0	; () banked
  1623   002426  6FD2               	movwf	(??_main+1)& (0+255),b
  1624   002428  0E2B               	movlw	43
  1625   00242A  6FD1               	movwf	??_main& (0+255),b
  1626   00242C  0E00               	movlw	0
  1627   00242E                     u6017:
  1628   00242E  2EE8               	decfsz	wreg,f,c
  1629   002430  D7FE               	bra	u6017
  1630   002432  2FD1               	decfsz	??_main& (0+255),f,b
  1631   002434  D7FC               	bra	u6017
  1632   002436  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1633   002438  D7FA               	bra	u6017
  1634   00243A  F000               	nop	
  1635   00243C                     
  1636                           ;main.c: 100:     T0CON0bits.T0EN=1;
  1637   00243C  8ED5               	bsf	213,7,c	;volatile
  1638                           
  1639                           ;main.c: 101:     while (run_flag)
  1640   00243E  EF48  F014         	goto	l6006
  1641   002442                     l5878:
  1642   002442                     
  1643                           ; BSR set to: 1
  1644                           ;main.c: 104:         fullSpeedAhead(&motorL,&motorR);
  1645   002442  0EC5               	movlw	low _motorL
  1646   002444  6E14               	movwf	fullSpeedAhead@mL^0,c
  1647   002446  0E01               	movlw	high _motorL
  1648   002448  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1649   00244A  0EBC               	movlw	low _motorR
  1650   00244C  6E16               	movwf	fullSpeedAhead@mR^0,c
  1651   00244E  0E01               	movlw	high _motorR
  1652   002450  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1653   002452  EC94  F029         	call	_fullSpeedAhead	;wreg free
  1654   002456                     
  1655                           ;main.c: 106:         readColours(&vals);
  1656   002456  0ECE               	movlw	low _vals
  1657   002458  6E0C               	movwf	readColours@vals^0,c
  1658   00245A  0E01               	movlw	high _vals
  1659   00245C  6E0D               	movwf	(readColours@vals+1)^0,c
  1660   00245E  EC84  F02B         	call	_readColours	;wreg free
  1661   002462                     
  1662                           ;main.c: 109:         colour_rel(&vals, &rel);
  1663   002462  0ECE               	movlw	low _vals
  1664   002464  6E4B               	movwf	colour_rel@vals^0,c
  1665   002466  0E01               	movlw	high _vals
  1666   002468  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1667   00246A  0EB0               	movlw	low _rel
  1668   00246C  6E4D               	movwf	colour_rel@rel^0,c
  1669   00246E  0E01               	movlw	high _rel
  1670   002470  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1671   002472  EC96  F01A         	call	_colour_rel	;wreg free
  1672   002476                     
  1673                           ;main.c: 112:         if (vals.L>=500){
  1674   002476  0101               	movlb	1	; () banked
  1675   002478  BFD5               	btfsc	(_vals+7)& (0+255),7,b
  1676   00247A  EF48  F012         	goto	u5811
  1677   00247E  0EF4               	movlw	244
  1678   002480  5DD4               	subwf	(_vals+6)& (0+255),w,b
  1679   002482  0E01               	movlw	1
  1680   002484  59D5               	subwfb	(_vals+7)& (0+255),w,b
  1681   002486  A0D8               	btfss	status,0,c
  1682   002488  EF48  F012         	goto	u5811
  1683   00248C  EF4A  F012         	goto	u5810
  1684   002490                     u5811:
  1685   002490  EF0D  F014         	goto	l6000
  1686   002494                     u5810:
  1687   002494                     
  1688                           ; BSR set to: 1
  1689                           ;main.c: 113:             move_count++;
  1690   002494  4B7A               	infsnz	_move_count& (0+255),f,b	;volatile
  1691   002496  2B7B               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1692   002498                     
  1693                           ; BSR set to: 1
  1694                           ;main.c: 114:             getTMR0val();
  1695   002498  EC3E  F030         	call	_getTMR0val	;wreg free
  1696   00249C                     
  1697                           ;main.c: 116:             Forwardhalfblock(&motorL,&motorR);
  1698   00249C  0EC5               	movlw	low _motorL
  1699   00249E  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1700   0024A0  0E01               	movlw	high _motorL
  1701   0024A2  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1702   0024A4  0EBC               	movlw	low _motorR
  1703   0024A6  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1704   0024A8  0E01               	movlw	high _motorR
  1705   0024AA  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1706   0024AC  EC3A  F02C         	call	_Forwardhalfblock	;wreg free
  1707   0024B0                     
  1708                           ;main.c: 118:             stop(&motorL, &motorR);
  1709   0024B0  0EC5               	movlw	low _motorL
  1710   0024B2  6E14               	movwf	stop@mL^0,c
  1711   0024B4  0E01               	movlw	high _motorL
  1712   0024B6  6E15               	movwf	(stop@mL+1)^0,c
  1713   0024B8  0EBC               	movlw	low _motorR
  1714   0024BA  6E16               	movwf	stop@mR^0,c
  1715   0024BC  0E01               	movlw	high _motorR
  1716   0024BE  6E17               	movwf	(stop@mR+1)^0,c
  1717   0024C0  EC68  F02A         	call	_stop	;wreg free
  1718   0024C4                     
  1719                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1720   0024C4  0E11               	movlw	17
  1721   0024C6  0100               	movlb	0	; () banked
  1722   0024C8  6FD2               	movwf	(??_main+1)& (0+255),b
  1723   0024CA  0E3C               	movlw	60
  1724   0024CC  6FD1               	movwf	??_main& (0+255),b
  1725   0024CE  0ECB               	movlw	203
  1726   0024D0                     u6027:
  1727   0024D0  2EE8               	decfsz	wreg,f,c
  1728   0024D2  D7FE               	bra	u6027
  1729   0024D4  2FD1               	decfsz	??_main& (0+255),f,b
  1730   0024D6  D7FC               	bra	u6027
  1731   0024D8  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1732   0024DA  D7FA               	bra	u6027
  1733                           
  1734                           ;main.c: 126:             while (consecuitive<4){
  1735   0024DC  EFAE  F012         	goto	l5912
  1736   0024E0                     l5898:
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;main.c: 127:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  1740   0024E0  0E19               	movlw	25
  1741   0024E2  0100               	movlb	0	; () banked
  1742   0024E4  6FD2               	movwf	(??_main+1)& (0+255),b
  1743   0024E6  0E5A               	movlw	90
  1744   0024E8  6FD1               	movwf	??_main& (0+255),b
  1745   0024EA  0EB1               	movlw	177
  1746   0024EC                     u6037:
  1747   0024EC  2EE8               	decfsz	wreg,f,c
  1748   0024EE  D7FE               	bra	u6037
  1749   0024F0  2FD1               	decfsz	??_main& (0+255),f,b
  1750   0024F2  D7FC               	bra	u6037
  1751   0024F4  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1752   0024F6  D7FA               	bra	u6037
  1753   0024F8  D000               	nop2	
  1754   0024FA                     
  1755                           ;main.c: 128:                 int colour = Colour_decider(&vals, &rel);
  1756   0024FA  0ECE               	movlw	low _vals
  1757   0024FC  6E4B               	movwf	Colour_decider@vals^0,c
  1758   0024FE  0E01               	movlw	high _vals
  1759   002500  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1760   002502  0EB0               	movlw	low _rel
  1761   002504  6E4D               	movwf	Colour_decider@rel^0,c
  1762   002506  0E01               	movlw	high _rel
  1763   002508  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1764   00250A  EC2D  F007         	call	_Colour_decider	;wreg free
  1765   00250E  C04B  F16A         	movff	?_Colour_decider,main@colour
  1766   002512  C04C  F16B         	movff	?_Colour_decider+1,main@colour+1
  1767   002516                     
  1768                           ;main.c: 129:                 if (colour==prev_colour){
  1769   002516  0101               	movlb	1	; () banked
  1770   002518  516C               	movf	main@prev_colour& (0+255),w,b
  1771   00251A  196A               	xorwf	main@colour& (0+255),w,b
  1772   00251C  E107               	bnz	u5821
  1773   00251E  516D               	movf	(main@prev_colour+1)& (0+255),w,b
  1774   002520  196B               	xorwf	(main@colour+1)& (0+255),w,b
  1775   002522  A4D8               	btfss	status,2,c
  1776   002524  EF96  F012         	goto	u5821
  1777   002528  EF98  F012         	goto	u5820
  1778   00252C                     u5821:
  1779   00252C  EF9C  F012         	goto	l5906
  1780   002530                     u5820:
  1781   002530                     
  1782                           ; BSR set to: 1
  1783                           ;main.c: 130:                     consecuitive++;
  1784   002530  4B68               	infsnz	main@consecuitive& (0+255),f,b
  1785   002532  2B69               	incf	(main@consecuitive+1)& (0+255),f,b
  1786                           
  1787                           ;main.c: 131:                 }
  1788   002534  EFA0  F012         	goto	l5908
  1789   002538                     l5906:
  1790                           
  1791                           ; BSR set to: 1
  1792                           ;main.c: 133:                     consecuitive=0;
  1793   002538  0E00               	movlw	0
  1794   00253A  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1795   00253C  0E00               	movlw	0
  1796   00253E  6F68               	movwf	main@consecuitive& (0+255),b
  1797   002540                     l5908:
  1798                           
  1799                           ; BSR set to: 1
  1800                           ;main.c: 135:                 prev_colour=colour;
  1801   002540  C16A  F16C         	movff	main@colour,main@prev_colour
  1802   002544  C16B  F16D         	movff	main@colour+1,main@prev_colour+1
  1803   002548                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 136:                 RetryMove(&motorL, &motorR);
  1806   002548  0EC5               	movlw	low _motorL
  1807   00254A  6E20               	movwf	RetryMove@mL^0,c
  1808   00254C  0E01               	movlw	high _motorL
  1809   00254E  6E21               	movwf	(RetryMove@mL+1)^0,c
  1810   002550  0EBC               	movlw	low _motorR
  1811   002552  6E22               	movwf	RetryMove@mR^0,c
  1812   002554  0E01               	movlw	high _motorR
  1813   002556  6E23               	movwf	(RetryMove@mR+1)^0,c
  1814   002558  EC27  F02A         	call	_RetryMove	;wreg free
  1815   00255C                     l5912:
  1816                           
  1817                           ;main.c: 126:             while (consecuitive<4){
  1818   00255C  0101               	movlb	1	; () banked
  1819   00255E  BF69               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1820   002560  EFBB  F012         	goto	u5831
  1821   002564  5169               	movf	(main@consecuitive+1)& (0+255),w,b
  1822   002566  E109               	bnz	u5830
  1823   002568  0E04               	movlw	4
  1824   00256A  5D68               	subwf	main@consecuitive& (0+255),w,b
  1825   00256C  A0D8               	btfss	status,0,c
  1826   00256E  EFBB  F012         	goto	u5831
  1827   002572  EFBD  F012         	goto	u5830
  1828   002576                     u5831:
  1829   002576  EF70  F012         	goto	l5898
  1830   00257A                     u5830:
  1831   00257A                     
  1832                           ; BSR set to: 1
  1833                           ;main.c: 138:             consecuitive=0;
  1834   00257A  0E00               	movlw	0
  1835   00257C  6F69               	movwf	(main@consecuitive+1)& (0+255),b
  1836   00257E  0E00               	movlw	0
  1837   002580  6F68               	movwf	main@consecuitive& (0+255),b
  1838   002582                     
  1839                           ; BSR set to: 1
  1840                           ;main.c: 139:             int temp=TMR0L;
  1841   002582  CFD3 F164          	movff	4051,main@temp	;volatile
  1842   002586  6B65               	clrf	(main@temp+1)& (0+255),b
  1843   002588                     
  1844                           ; BSR set to: 1
  1845                           ;main.c: 142:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1846   002588  0E00               	movlw	low main@buf
  1847   00258A  0100               	movlb	0	; () banked
  1848   00258C  6FB0               	movwf	sprintf@s& (0+255),b
  1849   00258E  0E01               	movlw	high main@buf
  1850   002590  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1851   002592  0E01               	movlw	low STR_1
  1852   002594  6FB2               	movwf	sprintf@fmt& (0+255),b
  1853   002596  0E0E               	movlw	high STR_1
  1854   002598  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1855   00259A  C1B0  F0B4         	movff	_rel,?_sprintf+4
  1856   00259E  C1B1  F0B5         	movff	_rel+1,?_sprintf+5
  1857   0025A2  C1B2  F0B6         	movff	_rel+2,?_sprintf+6
  1858   0025A6  C1B3  F0B7         	movff	_rel+3,?_sprintf+7
  1859   0025AA  C1B4  F0B8         	movff	_rel+4,?_sprintf+8
  1860   0025AE  C1B5  F0B9         	movff	_rel+5,?_sprintf+9
  1861   0025B2  C1B6  F0BA         	movff	_rel+6,?_sprintf+10
  1862   0025B6  C1B7  F0BB         	movff	_rel+7,?_sprintf+11
  1863   0025BA  C1B8  F0BC         	movff	_rel+8,?_sprintf+12
  1864   0025BE  C1B9  F0BD         	movff	_rel+9,?_sprintf+13
  1865   0025C2  C1BA  F0BE         	movff	_rel+10,?_sprintf+14
  1866   0025C6  C1BB  F0BF         	movff	_rel+11,?_sprintf+15
  1867   0025CA  C1D4  F0C0         	movff	_vals+6,?_sprintf+16
  1868   0025CE  C1D5  F0C1         	movff	_vals+7,?_sprintf+17
  1869   0025D2  C16C  F0C2         	movff	main@prev_colour,?_sprintf+18
  1870   0025D6  C16D  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1871   0025DA  EC92  F02C         	call	_sprintf	;wreg free
  1872   0025DE                     
  1873                           ;main.c: 143:             sendStringSerial4(buf);
  1874   0025DE  0E00               	movlw	low main@buf
  1875   0025E0  6E02               	movwf	sendStringSerial4@string^0,c
  1876   0025E2  0E01               	movlw	high main@buf
  1877   0025E4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1878   0025E6  ECFD  F02F         	call	_sendStringSerial4	;wreg free
  1879   0025EA                     
  1880                           ;main.c: 145:             if (prev_colour==1){
  1881   0025EA  0101               	movlb	1	; () banked
  1882   0025EC  056C               	decf	main@prev_colour& (0+255),w,b
  1883   0025EE  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1884   0025F0  A4D8               	btfss	status,2,c
  1885   0025F2  EFFD  F012         	goto	u5841
  1886   0025F6  EFFF  F012         	goto	u5840
  1887   0025FA                     u5841:
  1888   0025FA  EF18  F013         	goto	l5932
  1889   0025FE                     u5840:
  1890   0025FE                     
  1891                           ; BSR set to: 1
  1892                           ;main.c: 146:                 RedMove(&motorL, &motorR);
  1893   0025FE  0EC5               	movlw	low _motorL
  1894   002600  6E20               	movwf	RedMove@mL^0,c
  1895   002602  0E01               	movlw	high _motorL
  1896   002604  6E21               	movwf	(RedMove@mL+1)^0,c
  1897   002606  0EBC               	movlw	low _motorR
  1898   002608  6E22               	movwf	RedMove@mR^0,c
  1899   00260A  0E01               	movlw	high _motorR
  1900   00260C  6E23               	movwf	(RedMove@mR+1)^0,c
  1901   00260E  EC6C  F02F         	call	_RedMove	;wreg free
  1902   002612                     
  1903                           ;main.c: 147:                 TMR0H=0;
  1904   002612  0E00               	movlw	0
  1905   002614  6ED4               	movwf	212,c	;volatile
  1906   002616                     
  1907                           ;main.c: 148:                 TMR0L=0;
  1908   002616  0E00               	movlw	0
  1909   002618  6ED3               	movwf	211,c	;volatile
  1910   00261A                     
  1911                           ;main.c: 149:                 WayBack[move_count]=1;
  1912   00261A  0E7E               	movlw	low _WayBack
  1913   00261C  0101               	movlb	1	; () banked
  1914   00261E  257A               	addwf	_move_count& (0+255),w,b	;volatile
  1915   002620  6ED9               	movwf	fsr2l,c
  1916   002622  0E01               	movlw	high _WayBack
  1917   002624  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1918   002626  6EDA               	movwf	fsr2h,c
  1919   002628  0E01               	movlw	1
  1920   00262A  6EDF               	movwf	indf2,c
  1921                           
  1922                           ;main.c: 150:             }
  1923   00262C  EF48  F014         	goto	l6006
  1924   002630                     l5932:
  1925                           
  1926                           ; BSR set to: 1
  1927   002630  0E02               	movlw	2
  1928   002632  196C               	xorwf	main@prev_colour& (0+255),w,b
  1929   002634  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1930   002636  A4D8               	btfss	status,2,c
  1931   002638  EF20  F013         	goto	u5851
  1932   00263C  EF22  F013         	goto	u5850
  1933   002640                     u5851:
  1934   002640  EF3B  F013         	goto	l5942
  1935   002644                     u5850:
  1936   002644                     
  1937                           ; BSR set to: 1
  1938                           ;main.c: 152:                 OrangeMove(&motorL, &motorR);
  1939   002644  0EC5               	movlw	low _motorL
  1940   002646  6E20               	movwf	OrangeMove@mL^0,c
  1941   002648  0E01               	movlw	high _motorL
  1942   00264A  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1943   00264C  0EBC               	movlw	low _motorR
  1944   00264E  6E22               	movwf	OrangeMove@mR^0,c
  1945   002650  0E01               	movlw	high _motorR
  1946   002652  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1947   002654  ECBB  F02C         	call	_OrangeMove	;wreg free
  1948   002658                     
  1949                           ;main.c: 153:                 TMR0H=0;
  1950   002658  0E00               	movlw	0
  1951   00265A  6ED4               	movwf	212,c	;volatile
  1952   00265C                     
  1953                           ;main.c: 154:                 TMR0L=0;
  1954   00265C  0E00               	movlw	0
  1955   00265E  6ED3               	movwf	211,c	;volatile
  1956   002660                     
  1957                           ;main.c: 155:                 WayBack[move_count]=2;
  1958   002660  0E7E               	movlw	low _WayBack
  1959   002662  0101               	movlb	1	; () banked
  1960   002664  257A               	addwf	_move_count& (0+255),w,b	;volatile
  1961   002666  6ED9               	movwf	fsr2l,c
  1962   002668  0E01               	movlw	high _WayBack
  1963   00266A  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1964   00266C  6EDA               	movwf	fsr2h,c
  1965   00266E  0E02               	movlw	2
  1966   002670  6EDF               	movwf	indf2,c
  1967                           
  1968                           ;main.c: 156:             }
  1969   002672  EF48  F014         	goto	l6006
  1970   002676                     l5942:
  1971                           
  1972                           ; BSR set to: 1
  1973   002676  0E03               	movlw	3
  1974   002678  196C               	xorwf	main@prev_colour& (0+255),w,b
  1975   00267A  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1976   00267C  A4D8               	btfss	status,2,c
  1977   00267E  EF43  F013         	goto	u5861
  1978   002682  EF45  F013         	goto	u5860
  1979   002686                     u5861:
  1980   002686  EF5E  F013         	goto	l5952
  1981   00268A                     u5860:
  1982   00268A                     
  1983                           ; BSR set to: 1
  1984                           ;main.c: 158:                 YellowMove(&motorL, &motorR);
  1985   00268A  0EC5               	movlw	low _motorL
  1986   00268C  6E20               	movwf	YellowMove@mL^0,c
  1987   00268E  0E01               	movlw	high _motorL
  1988   002690  6E21               	movwf	(YellowMove@mL+1)^0,c
  1989   002692  0EBC               	movlw	low _motorR
  1990   002694  6E22               	movwf	YellowMove@mR^0,c
  1991   002696  0E01               	movlw	high _motorR
  1992   002698  6E23               	movwf	(YellowMove@mR+1)^0,c
  1993   00269A  EC36  F02D         	call	_YellowMove	;wreg free
  1994   00269E                     
  1995                           ;main.c: 159:                 TMR0H=0;
  1996   00269E  0E00               	movlw	0
  1997   0026A0  6ED4               	movwf	212,c	;volatile
  1998   0026A2                     
  1999                           ;main.c: 160:                 TMR0L=0;
  2000   0026A2  0E00               	movlw	0
  2001   0026A4  6ED3               	movwf	211,c	;volatile
  2002   0026A6                     
  2003                           ;main.c: 161:                 WayBack[move_count]=3;
  2004   0026A6  0E7E               	movlw	low _WayBack
  2005   0026A8  0101               	movlb	1	; () banked
  2006   0026AA  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2007   0026AC  6ED9               	movwf	fsr2l,c
  2008   0026AE  0E01               	movlw	high _WayBack
  2009   0026B0  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2010   0026B2  6EDA               	movwf	fsr2h,c
  2011   0026B4  0E03               	movlw	3
  2012   0026B6  6EDF               	movwf	indf2,c
  2013                           
  2014                           ;main.c: 162:             }
  2015   0026B8  EF48  F014         	goto	l6006
  2016   0026BC                     l5952:
  2017                           
  2018                           ; BSR set to: 1
  2019   0026BC  0E04               	movlw	4
  2020   0026BE  196C               	xorwf	main@prev_colour& (0+255),w,b
  2021   0026C0  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2022   0026C2  A4D8               	btfss	status,2,c
  2023   0026C4  EF66  F013         	goto	u5871
  2024   0026C8  EF68  F013         	goto	u5870
  2025   0026CC                     u5871:
  2026   0026CC  EF81  F013         	goto	l5962
  2027   0026D0                     u5870:
  2028   0026D0                     
  2029                           ; BSR set to: 1
  2030                           ;main.c: 164:                 BlueMove(&motorL, &motorR);
  2031   0026D0  0EC5               	movlw	low _motorL
  2032   0026D2  6E20               	movwf	BlueMove@mL^0,c
  2033   0026D4  0E01               	movlw	high _motorL
  2034   0026D6  6E21               	movwf	(BlueMove@mL+1)^0,c
  2035   0026D8  0EBC               	movlw	low _motorR
  2036   0026DA  6E22               	movwf	BlueMove@mR^0,c
  2037   0026DC  0E01               	movlw	high _motorR
  2038   0026DE  6E23               	movwf	(BlueMove@mR+1)^0,c
  2039   0026E0  EC51  F02B         	call	_BlueMove	;wreg free
  2040   0026E4                     
  2041                           ;main.c: 165:                 TMR0H=0;
  2042   0026E4  0E00               	movlw	0
  2043   0026E6  6ED4               	movwf	212,c	;volatile
  2044   0026E8                     
  2045                           ;main.c: 166:                 TMR0L=0;
  2046   0026E8  0E00               	movlw	0
  2047   0026EA  6ED3               	movwf	211,c	;volatile
  2048   0026EC                     
  2049                           ;main.c: 167:                 WayBack[move_count]=4;
  2050   0026EC  0E7E               	movlw	low _WayBack
  2051   0026EE  0101               	movlb	1	; () banked
  2052   0026F0  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2053   0026F2  6ED9               	movwf	fsr2l,c
  2054   0026F4  0E01               	movlw	high _WayBack
  2055   0026F6  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2056   0026F8  6EDA               	movwf	fsr2h,c
  2057   0026FA  0E04               	movlw	4
  2058   0026FC  6EDF               	movwf	indf2,c
  2059                           
  2060                           ;main.c: 168:             }
  2061   0026FE  EF48  F014         	goto	l6006
  2062   002702                     l5962:
  2063                           
  2064                           ; BSR set to: 1
  2065   002702  0E05               	movlw	5
  2066   002704  196C               	xorwf	main@prev_colour& (0+255),w,b
  2067   002706  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2068   002708  A4D8               	btfss	status,2,c
  2069   00270A  EF89  F013         	goto	u5881
  2070   00270E  EF8B  F013         	goto	u5880
  2071   002712                     u5881:
  2072   002712  EFA4  F013         	goto	l5972
  2073   002716                     u5880:
  2074   002716                     
  2075                           ; BSR set to: 1
  2076                           ;main.c: 170:                 GreenMove(&motorL, &motorR);
  2077   002716  0EC5               	movlw	low _motorL
  2078   002718  6E20               	movwf	GreenMove@mL^0,c
  2079   00271A  0E01               	movlw	high _motorL
  2080   00271C  6E21               	movwf	(GreenMove@mL+1)^0,c
  2081   00271E  0EBC               	movlw	low _motorR
  2082   002720  6E22               	movwf	GreenMove@mR^0,c
  2083   002722  0E01               	movlw	high _motorR
  2084   002724  6E23               	movwf	(GreenMove@mR+1)^0,c
  2085   002726  EC8B  F02F         	call	_GreenMove	;wreg free
  2086   00272A                     
  2087                           ;main.c: 171:                 TMR0H=0;
  2088   00272A  0E00               	movlw	0
  2089   00272C  6ED4               	movwf	212,c	;volatile
  2090   00272E                     
  2091                           ;main.c: 172:                 TMR0L=0;
  2092   00272E  0E00               	movlw	0
  2093   002730  6ED3               	movwf	211,c	;volatile
  2094   002732                     
  2095                           ;main.c: 173:                 WayBack[move_count]=5;
  2096   002732  0E7E               	movlw	low _WayBack
  2097   002734  0101               	movlb	1	; () banked
  2098   002736  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2099   002738  6ED9               	movwf	fsr2l,c
  2100   00273A  0E01               	movlw	high _WayBack
  2101   00273C  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2102   00273E  6EDA               	movwf	fsr2h,c
  2103   002740  0E05               	movlw	5
  2104   002742  6EDF               	movwf	indf2,c
  2105                           
  2106                           ;main.c: 174:             }
  2107   002744  EF48  F014         	goto	l6006
  2108   002748                     l5972:
  2109                           
  2110                           ; BSR set to: 1
  2111   002748  0E06               	movlw	6
  2112   00274A  196C               	xorwf	main@prev_colour& (0+255),w,b
  2113   00274C  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2114   00274E  A4D8               	btfss	status,2,c
  2115   002750  EFAC  F013         	goto	u5891
  2116   002754  EFAE  F013         	goto	u5890
  2117   002758                     u5891:
  2118   002758  EFC7  F013         	goto	l5982
  2119   00275C                     u5890:
  2120   00275C                     
  2121                           ; BSR set to: 1
  2122                           ;main.c: 176:                 LightBlueMove(&motorL, &motorR);
  2123   00275C  0EC5               	movlw	low _motorL
  2124   00275E  6E20               	movwf	LightBlueMove@mL^0,c
  2125   002760  0E01               	movlw	high _motorL
  2126   002762  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2127   002764  0EBC               	movlw	low _motorR
  2128   002766  6E22               	movwf	LightBlueMove@mR^0,c
  2129   002768  0E01               	movlw	high _motorR
  2130   00276A  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2131   00276C  ECE4  F02C         	call	_LightBlueMove	;wreg free
  2132   002770                     
  2133                           ;main.c: 177:                 TMR0H=0;
  2134   002770  0E00               	movlw	0
  2135   002772  6ED4               	movwf	212,c	;volatile
  2136   002774                     
  2137                           ;main.c: 178:                 TMR0L=0;
  2138   002774  0E00               	movlw	0
  2139   002776  6ED3               	movwf	211,c	;volatile
  2140   002778                     
  2141                           ;main.c: 179:                 WayBack[move_count]=6;
  2142   002778  0E7E               	movlw	low _WayBack
  2143   00277A  0101               	movlb	1	; () banked
  2144   00277C  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2145   00277E  6ED9               	movwf	fsr2l,c
  2146   002780  0E01               	movlw	high _WayBack
  2147   002782  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2148   002784  6EDA               	movwf	fsr2h,c
  2149   002786  0E06               	movlw	6
  2150   002788  6EDF               	movwf	indf2,c
  2151                           
  2152                           ;main.c: 180:             }
  2153   00278A  EF48  F014         	goto	l6006
  2154   00278E                     l5982:
  2155                           
  2156                           ; BSR set to: 1
  2157   00278E  0E07               	movlw	7
  2158   002790  196C               	xorwf	main@prev_colour& (0+255),w,b
  2159   002792  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2160   002794  A4D8               	btfss	status,2,c
  2161   002796  EFCF  F013         	goto	u5901
  2162   00279A  EFD1  F013         	goto	u5900
  2163   00279E                     u5901:
  2164   00279E  EFEA  F013         	goto	l5992
  2165   0027A2                     u5900:
  2166   0027A2                     
  2167                           ; BSR set to: 1
  2168                           ;main.c: 182:                 PinkMove(&motorL, &motorR);
  2169   0027A2  0EC5               	movlw	low _motorL
  2170   0027A4  6E20               	movwf	PinkMove@mL^0,c
  2171   0027A6  0E01               	movlw	high _motorL
  2172   0027A8  6E21               	movwf	(PinkMove@mL+1)^0,c
  2173   0027AA  0EBC               	movlw	low _motorR
  2174   0027AC  6E22               	movwf	PinkMove@mR^0,c
  2175   0027AE  0E01               	movlw	high _motorR
  2176   0027B0  6E23               	movwf	(PinkMove@mR+1)^0,c
  2177   0027B2  EC5F  F02D         	call	_PinkMove	;wreg free
  2178   0027B6                     
  2179                           ;main.c: 183:                 TMR0H=0;
  2180   0027B6  0E00               	movlw	0
  2181   0027B8  6ED4               	movwf	212,c	;volatile
  2182   0027BA                     
  2183                           ;main.c: 184:                 TMR0L=0;
  2184   0027BA  0E00               	movlw	0
  2185   0027BC  6ED3               	movwf	211,c	;volatile
  2186   0027BE                     
  2187                           ;main.c: 185:                 WayBack[move_count]=7;
  2188   0027BE  0E7E               	movlw	low _WayBack
  2189   0027C0  0101               	movlb	1	; () banked
  2190   0027C2  257A               	addwf	_move_count& (0+255),w,b	;volatile
  2191   0027C4  6ED9               	movwf	fsr2l,c
  2192   0027C6  0E01               	movlw	high _WayBack
  2193   0027C8  217B               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2194   0027CA  6EDA               	movwf	fsr2h,c
  2195   0027CC  0E07               	movlw	7
  2196   0027CE  6EDF               	movwf	indf2,c
  2197                           
  2198                           ;main.c: 186:             }
  2199   0027D0  EF48  F014         	goto	l6006
  2200   0027D4                     l5992:
  2201                           
  2202                           ; BSR set to: 1
  2203   0027D4  0E0A               	movlw	10
  2204   0027D6  196C               	xorwf	main@prev_colour& (0+255),w,b
  2205   0027D8  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2206   0027DA  A4D8               	btfss	status,2,c
  2207   0027DC  EFF2  F013         	goto	u5911
  2208   0027E0  EFF4  F013         	goto	u5910
  2209   0027E4                     u5911:
  2210   0027E4  EF00  F014         	goto	l5996
  2211   0027E8                     u5910:
  2212   0027E8                     l5994:
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 188:                 go_Home(WayBack, Time_forward);
  2216   0027E8  0E7E               	movlw	low _WayBack
  2217   0027EA  6E24               	movwf	go_Home@WayBack^0,c
  2218   0027EC  0E01               	movlw	high _WayBack
  2219   0027EE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2220   0027F0  0E3C               	movlw	low _Time_forward
  2221   0027F2  6E26               	movwf	go_Home@Time_forward^0,c
  2222   0027F4  0E02               	movlw	high _Time_forward
  2223   0027F6  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2224   0027F8  ECB0  F01D         	call	_go_Home	;wreg free
  2225                           
  2226                           ;main.c: 189:             }
  2227   0027FC  EF48  F014         	goto	l6006
  2228   002800                     l5996:
  2229                           
  2230                           ; BSR set to: 1
  2231   002800  516C               	movf	main@prev_colour& (0+255),w,b
  2232   002802  116D               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2233   002804  A4D8               	btfss	status,2,c
  2234   002806  EF07  F014         	goto	u5921
  2235   00280A  EF09  F014         	goto	u5920
  2236   00280E                     u5921:
  2237   00280E  EF0B  F014         	goto	l411
  2238   002812                     u5920:
  2239   002812  EFF4  F013         	goto	l5994
  2240   002816                     l411:
  2241                           
  2242                           ; BSR set to: 1
  2243   002816  EF48  F014         	goto	l6006
  2244   00281A                     l6000:
  2245                           
  2246                           ; BSR set to: 1
  2247                           ;main.c: 194:                 int colour = Colour_decider(&vals, &rel);
  2248   00281A  0ECE               	movlw	low _vals
  2249   00281C  6E4B               	movwf	Colour_decider@vals^0,c
  2250   00281E  0E01               	movlw	high _vals
  2251   002820  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2252   002822  0EB0               	movlw	low _rel
  2253   002824  6E4D               	movwf	Colour_decider@rel^0,c
  2254   002826  0E01               	movlw	high _rel
  2255   002828  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2256   00282A  EC2D  F007         	call	_Colour_decider	;wreg free
  2257   00282E  C04B  F166         	movff	?_Colour_decider,main@colour_1291
  2258   002832  C04C  F167         	movff	?_Colour_decider+1,main@colour_1291+1
  2259   002836                     
  2260                           ;main.c: 195:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, 
      +                          rel.G,rel.B,vals.L);
  2261   002836  0E00               	movlw	low main@buf
  2262   002838  0100               	movlb	0	; () banked
  2263   00283A  6FB0               	movwf	sprintf@s& (0+255),b
  2264   00283C  0E01               	movlw	high main@buf
  2265   00283E  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2266   002840  0E2E               	movlw	low STR_2
  2267   002842  6FB2               	movwf	sprintf@fmt& (0+255),b
  2268   002844  0E0E               	movlw	high STR_2
  2269   002846  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2270   002848  C1B0  F0B4         	movff	_rel,?_sprintf+4
  2271   00284C  C1B1  F0B5         	movff	_rel+1,?_sprintf+5
  2272   002850  C1B2  F0B6         	movff	_rel+2,?_sprintf+6
  2273   002854  C1B3  F0B7         	movff	_rel+3,?_sprintf+7
  2274   002858  C1B4  F0B8         	movff	_rel+4,?_sprintf+8
  2275   00285C  C1B5  F0B9         	movff	_rel+5,?_sprintf+9
  2276   002860  C1B6  F0BA         	movff	_rel+6,?_sprintf+10
  2277   002864  C1B7  F0BB         	movff	_rel+7,?_sprintf+11
  2278   002868  C1B8  F0BC         	movff	_rel+8,?_sprintf+12
  2279   00286C  C1B9  F0BD         	movff	_rel+9,?_sprintf+13
  2280   002870  C1BA  F0BE         	movff	_rel+10,?_sprintf+14
  2281   002874  C1BB  F0BF         	movff	_rel+11,?_sprintf+15
  2282   002878  C1D4  F0C0         	movff	_vals+6,?_sprintf+16
  2283   00287C  C1D5  F0C1         	movff	_vals+7,?_sprintf+17
  2284   002880  EC92  F02C         	call	_sprintf	;wreg free
  2285   002884                     
  2286                           ;main.c: 196:                 sendStringSerial4(buf);
  2287   002884  0E00               	movlw	low main@buf
  2288   002886  6E02               	movwf	sendStringSerial4@string^0,c
  2289   002888  0E01               	movlw	high main@buf
  2290   00288A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2291   00288C  ECFD  F02F         	call	_sendStringSerial4	;wreg free
  2292   002890                     l6006:
  2293                           
  2294                           ;main.c: 101:     while (run_flag)
  2295   002890  0101               	movlb	1	; () banked
  2296   002892  517C               	movf	_run_flag& (0+255),w,b
  2297   002894  117D               	iorwf	(_run_flag+1)& (0+255),w,b
  2298   002896  A4D8               	btfss	status,2,c
  2299   002898  EF50  F014         	goto	u5931
  2300   00289C  EF52  F014         	goto	u5930
  2301   0028A0                     u5931:
  2302   0028A0  EF21  F012         	goto	l5878
  2303   0028A4                     u5930:
  2304   0028A4                     
  2305                           ; BSR set to: 1
  2306   0028A4  EF00  F000         	goto	start
  2307   0028A8                     __end_of_main:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function _turnCalibration *****************
  2311 ;; Defined at:
  2312 ;;		line 357 in file "dc_motor.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2315 ;;		 -> motorL(9), 
  2316 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2317 ;;		 -> motorR(9), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;Total ram usage:        6 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 4
  2336 ;; This function calls:
  2337 ;;		_turnLeft45
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text1
  2344   0042D0                     __ptext1:
  2345                           	callstack 0
  2346   0042D0                     _turnCalibration:
  2347                           	callstack 26
  2348   0042D0                     
  2349                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2350   0042D0  807E               	bsf	126,0,c	;volatile
  2351   0042D2                     
  2352                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2353   0042D2  0E52               	movlw	82
  2354   0042D4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2355   0042D6  0E2B               	movlw	43
  2356   0042D8  6E24               	movwf	??_turnCalibration^0,c
  2357   0042DA  0E00               	movlw	0
  2358   0042DC                     u6047:
  2359   0042DC  2EE8               	decfsz	wreg,f,c
  2360   0042DE  D7FE               	bra	u6047
  2361   0042E0  2E24               	decfsz	??_turnCalibration^0,f,c
  2362   0042E2  D7FC               	bra	u6047
  2363   0042E4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2364   0042E6  D7FA               	bra	u6047
  2365   0042E8  D000               	nop2	
  2366                           
  2367                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2368   0042EA  EF2F  F022         	goto	l597
  2369   0042EE                     l598:
  2370                           
  2371                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2372   0042EE  867C               	bsf	124,3,c	;volatile
  2373   0042F0                     
  2374                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2375   0042F0  0EC5               	movlw	low _motorL
  2376   0042F2  6E1A               	movwf	turnLeft45@mL^0,c
  2377   0042F4  0E01               	movlw	high _motorL
  2378   0042F6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2379   0042F8  0EBC               	movlw	low _motorR
  2380   0042FA  6E1C               	movwf	turnLeft45@mR^0,c
  2381   0042FC  0E01               	movlw	high _motorR
  2382   0042FE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2383   004300  EC77  F02E         	call	_turnLeft45	;wreg free
  2384                           
  2385                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2386   004304  0EC5               	movlw	low _motorL
  2387   004306  6E1A               	movwf	turnLeft45@mL^0,c
  2388   004308  0E01               	movlw	high _motorL
  2389   00430A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2390   00430C  0EBC               	movlw	low _motorR
  2391   00430E  6E1C               	movwf	turnLeft45@mR^0,c
  2392   004310  0E01               	movlw	high _motorR
  2393   004312  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2394   004314  EC77  F02E         	call	_turnLeft45	;wreg free
  2395                           
  2396                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2397   004318  0EC5               	movlw	low _motorL
  2398   00431A  6E1A               	movwf	turnLeft45@mL^0,c
  2399   00431C  0E01               	movlw	high _motorL
  2400   00431E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2401   004320  0EBC               	movlw	low _motorR
  2402   004322  6E1C               	movwf	turnLeft45@mR^0,c
  2403   004324  0E01               	movlw	high _motorR
  2404   004326  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2405   004328  EC77  F02E         	call	_turnLeft45	;wreg free
  2406                           
  2407                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2408   00432C  0EC5               	movlw	low _motorL
  2409   00432E  6E1A               	movwf	turnLeft45@mL^0,c
  2410   004330  0E01               	movlw	high _motorL
  2411   004332  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2412   004334  0EBC               	movlw	low _motorR
  2413   004336  6E1C               	movwf	turnLeft45@mR^0,c
  2414   004338  0E01               	movlw	high _motorR
  2415   00433A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2416   00433C  EC77  F02E         	call	_turnLeft45	;wreg free
  2417                           
  2418                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2419   004340  EF14  F022         	goto	l5642
  2420   004344                     l600:
  2421                           
  2422                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2423   004344  887C               	bsf	124,4,c	;volatile
  2424   004346                     
  2425                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2426   004346  0EA3               	movlw	163
  2427   004348  6E25               	movwf	(??_turnCalibration+1)^0,c
  2428   00434A  0E57               	movlw	87
  2429   00434C  6E24               	movwf	??_turnCalibration^0,c
  2430   00434E  0E02               	movlw	2
  2431   004350                     u6057:
  2432   004350  2EE8               	decfsz	wreg,f,c
  2433   004352  D7FE               	bra	u6057
  2434   004354  2E24               	decfsz	??_turnCalibration^0,f,c
  2435   004356  D7FC               	bra	u6057
  2436   004358  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2437   00435A  D7FA               	bra	u6057
  2438   00435C  D000               	nop2	
  2439                           
  2440                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2441   00435E  A48E               	btfss	142,2,c	;volatile
  2442   004360  EFB4  F021         	goto	u5571
  2443   004364  EFB7  F021         	goto	u5570
  2444   004368                     u5571:
  2445   004368  0E01               	movlw	1
  2446   00436A  EFB8  F021         	goto	u5572
  2447   00436E                     u5570:
  2448   00436E  0E00               	movlw	0
  2449   004370                     u5572:
  2450   004370  6E24               	movwf	??_turnCalibration^0,c
  2451   004372  A68E               	btfss	142,3,c	;volatile
  2452   004374  EFBE  F021         	goto	u5581
  2453   004378  EFC1  F021         	goto	u5580
  2454   00437C                     u5581:
  2455   00437C  0E01               	movlw	1
  2456   00437E  EFC2  F021         	goto	u5582
  2457   004382                     u5580:
  2458   004382  0E00               	movlw	0
  2459   004384                     u5582:
  2460   004384  1424               	andwf	??_turnCalibration^0,w,c
  2461   004386  A0E8               	btfss	wreg,0,c
  2462   004388  EFC8  F021         	goto	u5591
  2463   00438C  EFCA  F021         	goto	u5590
  2464   004390                     u5591:
  2465   004390  EFDC  F021         	goto	l601
  2466   004394                     u5590:
  2467   004394                     
  2468                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2469   004394  8680               	bsf	128,3,c	;volatile
  2470                           
  2471                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2472   004396  8E7C               	bsf	124,7,c	;volatile
  2473   004398                     
  2474                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2475   004398  0E52               	movlw	82
  2476   00439A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2477   00439C  0E2B               	movlw	43
  2478   00439E  6E24               	movwf	??_turnCalibration^0,c
  2479   0043A0  0E00               	movlw	0
  2480   0043A2                     u6067:
  2481   0043A2  2EE8               	decfsz	wreg,f,c
  2482   0043A4  D7FE               	bra	u6067
  2483   0043A6  2E24               	decfsz	??_turnCalibration^0,f,c
  2484   0043A8  D7FC               	bra	u6067
  2485   0043AA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2486   0043AC  D7FA               	bra	u6067
  2487   0043AE  D000               	nop2	
  2488   0043B0                     
  2489                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2490   0043B0  9680               	bcf	128,3,c	;volatile
  2491   0043B2                     
  2492                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2493   0043B2  9E7C               	bcf	124,7,c	;volatile
  2494                           
  2495                           ;dc_motor.c: 380:             }
  2496   0043B4  EF14  F022         	goto	l5642
  2497   0043B8                     l601:
  2498   0043B8  B68E               	btfsc	142,3,c	;volatile
  2499   0043BA  EFE1  F021         	goto	u5601
  2500   0043BE  EFE3  F021         	goto	u5600
  2501   0043C2                     u5601:
  2502   0043C2  EFF8  F021         	goto	l603
  2503   0043C6                     u5600:
  2504   0043C6                     
  2505                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2506   0043C6  0E0A               	movlw	10
  2507   0043C8  0100               	movlb	0	; () banked
  2508   0043CA  27FB               	addwf	_Turn45Delay& (0+255),f,b
  2509   0043CC  0E00               	movlw	0
  2510   0043CE  23FC               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2511   0043D0                     
  2512                           ; BSR set to: 0
  2513                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2514   0043D0  8680               	bsf	128,3,c	;volatile
  2515   0043D2                     
  2516                           ; BSR set to: 0
  2517                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2518   0043D2  0E52               	movlw	82
  2519   0043D4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2520   0043D6  0E2B               	movlw	43
  2521   0043D8  6E24               	movwf	??_turnCalibration^0,c
  2522   0043DA  0E00               	movlw	0
  2523   0043DC                     u6077:
  2524   0043DC  2EE8               	decfsz	wreg,f,c
  2525   0043DE  D7FE               	bra	u6077
  2526   0043E0  2E24               	decfsz	??_turnCalibration^0,f,c
  2527   0043E2  D7FC               	bra	u6077
  2528   0043E4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2529   0043E6  D7FA               	bra	u6077
  2530   0043E8  D000               	nop2	
  2531   0043EA                     
  2532                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2533   0043EA  9680               	bcf	128,3,c	;volatile
  2534                           
  2535                           ;dc_motor.c: 387:             }
  2536   0043EC  EF14  F022         	goto	l5642
  2537   0043F0                     l603:
  2538   0043F0  B48E               	btfsc	142,2,c	;volatile
  2539   0043F2  EFFD  F021         	goto	u5611
  2540   0043F6  EFFF  F021         	goto	u5610
  2541   0043FA                     u5611:
  2542   0043FA  EF14  F022         	goto	l602
  2543   0043FE                     u5610:
  2544   0043FE                     
  2545                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2546   0043FE  0100               	movlb	0	; () banked
  2547   004400  0EF6               	movlw	246
  2548   004402  27FB               	addwf	_Turn45Delay& (0+255),f,b
  2549   004404  0EFF               	movlw	255
  2550   004406  23FC               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2551   004408                     
  2552                           ; BSR set to: 0
  2553                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2554   004408  8E7C               	bsf	124,7,c	;volatile
  2555   00440A                     
  2556                           ; BSR set to: 0
  2557                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2558   00440A  0E52               	movlw	82
  2559   00440C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2560   00440E  0E2B               	movlw	43
  2561   004410  6E24               	movwf	??_turnCalibration^0,c
  2562   004412  0E00               	movlw	0
  2563   004414                     u6087:
  2564   004414  2EE8               	decfsz	wreg,f,c
  2565   004416  D7FE               	bra	u6087
  2566   004418  2E24               	decfsz	??_turnCalibration^0,f,c
  2567   00441A  D7FC               	bra	u6087
  2568   00441C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2569   00441E  D7FA               	bra	u6087
  2570   004420  D000               	nop2	
  2571   004422                     
  2572                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2573   004422  9E7C               	bcf	124,7,c	;volatile
  2574   004424  EF14  F022         	goto	l5642
  2575   004428                     l602:
  2576   004428                     l5642:
  2577                           
  2578                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2579   004428  A48E               	btfss	142,2,c	;volatile
  2580   00442A  EF19  F022         	goto	u5621
  2581   00442E  EF1B  F022         	goto	u5620
  2582   004432                     u5621:
  2583   004432  EF22  F022         	goto	l608
  2584   004436                     u5620:
  2585   004436  B68E               	btfsc	142,3,c	;volatile
  2586   004438  EF20  F022         	goto	u5631
  2587   00443C  EF22  F022         	goto	u5630
  2588   004440                     u5631:
  2589   004440  EFA2  F021         	goto	l600
  2590   004444                     u5630:
  2591   004444                     l608:
  2592                           
  2593                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2594   004444  987C               	bcf	124,4,c	;volatile
  2595   004446                     
  2596                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2597   004446  0EA3               	movlw	163
  2598   004448  6E25               	movwf	(??_turnCalibration+1)^0,c
  2599   00444A  0E57               	movlw	87
  2600   00444C  6E24               	movwf	??_turnCalibration^0,c
  2601   00444E  0E02               	movlw	2
  2602   004450                     u6097:
  2603   004450  2EE8               	decfsz	wreg,f,c
  2604   004452  D7FE               	bra	u6097
  2605   004454  2E24               	decfsz	??_turnCalibration^0,f,c
  2606   004456  D7FC               	bra	u6097
  2607   004458  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2608   00445A  D7FA               	bra	u6097
  2609   00445C  D000               	nop2	
  2610   00445E                     l597:
  2611                           
  2612                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2613   00445E  A68E               	btfss	142,3,c	;volatile
  2614   004460  EF34  F022         	goto	u5641
  2615   004464  EF37  F022         	goto	u5640
  2616   004468                     u5641:
  2617   004468  0E01               	movlw	1
  2618   00446A  EF38  F022         	goto	u5642
  2619   00446E                     u5640:
  2620   00446E  0E00               	movlw	0
  2621   004470                     u5642:
  2622   004470  6E24               	movwf	??_turnCalibration^0,c
  2623   004472  A48E               	btfss	142,2,c	;volatile
  2624   004474  EF3E  F022         	goto	u5651
  2625   004478  EF41  F022         	goto	u5650
  2626   00447C                     u5651:
  2627   00447C  0E01               	movlw	1
  2628   00447E  EF42  F022         	goto	u5652
  2629   004482                     u5650:
  2630   004482  0E00               	movlw	0
  2631   004484                     u5652:
  2632   004484  1424               	andwf	??_turnCalibration^0,w,c
  2633   004486  A0E8               	btfss	wreg,0,c
  2634   004488  EF48  F022         	goto	u5661
  2635   00448C  EF4A  F022         	goto	u5660
  2636   004490                     u5661:
  2637   004490  EF77  F021         	goto	l598
  2638   004494                     u5660:
  2639   004494                     
  2640                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2641   004494  967C               	bcf	124,3,c	;volatile
  2642   004496                     
  2643                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2644   004496  0EA3               	movlw	163
  2645   004498  6E25               	movwf	(??_turnCalibration+1)^0,c
  2646   00449A  0E57               	movlw	87
  2647   00449C  6E24               	movwf	??_turnCalibration^0,c
  2648   00449E  0E02               	movlw	2
  2649   0044A0                     u6107:
  2650   0044A0  2EE8               	decfsz	wreg,f,c
  2651   0044A2  D7FE               	bra	u6107
  2652   0044A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2653   0044A6  D7FC               	bra	u6107
  2654   0044A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2655   0044AA  D7FA               	bra	u6107
  2656   0044AC  D000               	nop2	
  2657   0044AE  0012               	return		;funcret
  2658   0044B0                     __end_of_turnCalibration:
  2659                           	callstack 0
  2660                           
  2661 ;; *************** function _sprintf *****************
  2662 ;; Defined at:
  2663 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2666 ;;		 -> main@buf(100), 
  2667 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2668 ;;		 -> STR_2(35), STR_1(45), 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2671 ;;  ap              2  100[BANK0 ] PTR void [1]
  2672 ;;		 -> ?_sprintf(2), 
  2673 ;;  ret             2    0        int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2   80[BANK0 ] int 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2683 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2687 ;;Total ram usage:       33 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 7
  2690 ;; This function calls:
  2691 ;;		_vfprintf
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text2
  2698   005924                     __ptext2:
  2699                           	callstack 0
  2700   005924                     _sprintf:
  2701                           	callstack 23
  2702   005924  0EB4               	movlw	low (?_sprintf+4)
  2703   005926  0100               	movlb	0	; () banked
  2704   005928  6FC4               	movwf	sprintf@ap& (0+255),b
  2705   00592A  0E00               	movlw	high (?_sprintf+4)
  2706   00592C  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2707   00592E  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2708   005932  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2709   005936                     
  2710                           ; BSR set to: 0
  2711   005936  0E00               	movlw	0
  2712   005938  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2713   00593A  0E00               	movlw	0
  2714   00593C  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2715   00593E                     
  2716                           ; BSR set to: 0
  2717   00593E  0E00               	movlw	0
  2718   005940  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2719   005942  0E00               	movlw	0
  2720   005944  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2721   005946                     
  2722                           ; BSR set to: 0
  2723   005946  0EC6               	movlw	low sprintf@f
  2724   005948  6FA8               	movwf	vfprintf@fp& (0+255),b
  2725   00594A  0E00               	movlw	high sprintf@f
  2726   00594C  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2727   00594E  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2728   005952  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2729   005956  0EC4               	movlw	low sprintf@ap
  2730   005958  6FAC               	movwf	vfprintf@ap& (0+255),b
  2731   00595A  0E00               	movlw	high sprintf@ap
  2732   00595C  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2733   00595E  EC67  F02C         	call	_vfprintf	;wreg free
  2734   005962  0100               	movlb	0	; () banked
  2735   005964  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2736   005966  25B0               	addwf	sprintf@s& (0+255),w,b
  2737   005968  6ED9               	movwf	fsr2l,c
  2738   00596A  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2739   00596C  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2740   00596E  6EDA               	movwf	fsr2h,c
  2741   005970  0E00               	movlw	0
  2742   005972  6EDF               	movwf	indf2,c
  2743   005974                     
  2744                           ; BSR set to: 0
  2745   005974  0012               	return		;funcret
  2746   005976                     __end_of_sprintf:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _vfprintf *****************
  2750 ;; Defined at:
  2751 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2754 ;;		 -> sprintf@f(11), 
  2755 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2756 ;;		 -> STR_2(35), STR_1(45), 
  2757 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2758 ;;		 -> sprintf@ap(2), 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2761 ;;		 -> STR_2(35), STR_1(45), 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2   72[BANK0 ] int 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2771 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;Total ram usage:        8 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 6
  2778 ;; This function calls:
  2779 ;;		_vfpfcnvrt
  2780 ;; This function is called by:
  2781 ;;		_sprintf
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text3
  2786   0058CE                     __ptext3:
  2787                           	callstack 0
  2788   0058CE                     _vfprintf:
  2789                           	callstack 23
  2790   0058CE                     
  2791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2792   0058CE  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2793   0058D2  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2796   0058D6  EF7C  F02C         	goto	l5302
  2797   0058DA                     l5300:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2800   0058DA  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2801   0058DE  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2802   0058E2  0EAE               	movlw	low vfprintf@cfmt
  2803   0058E4  0100               	movlb	0	; () banked
  2804   0058E6  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2805   0058E8  0E00               	movlw	high vfprintf@cfmt
  2806   0058EA  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2807   0058EC  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2808   0058F0  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2809   0058F4  EC2D  F01C         	call	_vfpfcnvrt	;wreg free
  2810   0058F8                     l5302:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2813   0058F8  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2814   0058FC  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2815   005900                     	if	0	;tblptru may be non-zero
  2816   005900                     	endif
  2817   005900                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2818   005900  0E00               	movlw	low (__mediumconst shr (0+16))
  2819   005902  6EF8               	movwf	tblptru,c
  2820   005904                     	endif
  2821   005904  0008               	tblrd		*
  2822   005906  50F5               	movf	tablat,w,c
  2823   005908  0900               	iorlw	0
  2824   00590A  A4D8               	btfss	status,2,c
  2825   00590C  EF8A  F02C         	goto	u5191
  2826   005910  EF8C  F02C         	goto	u5190
  2827   005914                     u5191:
  2828   005914  EF6D  F02C         	goto	l5300
  2829   005918                     u5190:
  2830   005918                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2832   005918  0E00               	movlw	0
  2833   00591A  0100               	movlb	0	; () banked
  2834   00591C  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2835   00591E  0E00               	movlw	0
  2836   005920  6FA8               	movwf	?_vfprintf& (0+255),b
  2837   005922                     
  2838                           ; BSR set to: 0
  2839   005922  0012               	return		;funcret
  2840   005924                     __end_of_vfprintf:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _vfpfcnvrt *****************
  2844 ;; Defined at:
  2845 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2848 ;;		 -> sprintf@f(11), 
  2849 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2850 ;;		 -> vfprintf@cfmt(2), 
  2851 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2852 ;;		 -> sprintf@ap(2), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  convarg         8   61[BANK0 ] struct .
  2855 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2856 ;;		 -> STR_2(35), STR_1(45), 
  2857 ;;  i               2    0        int 
  2858 ;;  done            2    0        int 
  2859 ;;  c               1   69[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2869 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2872 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2873 ;;Total ram usage:       19 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 5
  2876 ;; This function calls:
  2877 ;;		_dtoa
  2878 ;;		_efgtoa
  2879 ;;		_fputc
  2880 ;; This function is called by:
  2881 ;;		_vfprintf
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text4
  2886   00385A                     __ptext4:
  2887                           	callstack 0
  2888   00385A                     _vfpfcnvrt:
  2889                           	callstack 23
  2890   00385A                     
  2891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2892   00385A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2893   00385E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2894   003862  CFDE FFF6          	movff	postinc2,tblptrl
  2895   003866  CFDD FFF7          	movff	postdec2,tblptrh
  2896   00386A                     	if	0	;tblptru may be non-zero
  2897   00386A                     	endif
  2898   00386A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2899   00386A  0E00               	movlw	low (__mediumconst shr (0+16))
  2900   00386C  6EF8               	movwf	tblptru,c
  2901   00386E                     	endif
  2902   00386E  0008               	tblrd		*
  2903   003870  50F5               	movf	tablat,w,c
  2904   003872  0A25               	xorlw	37
  2905   003874  A4D8               	btfss	status,2,c
  2906   003876  EF3F  F01C         	goto	u5021
  2907   00387A  EF41  F01C         	goto	u5020
  2908   00387E                     u5021:
  2909   00387E  EF99  F01D         	goto	l5150
  2910   003882                     u5020:
  2911   003882                     
  2912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2913   003882  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2914   003886  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2915   00388A  2ADE               	incf	postinc2,f,c
  2916   00388C  0E00               	movlw	0
  2917   00388E  22DD               	addwfc	postdec2,f,c
  2918   003890                     
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2920   003890  0E00               	movlw	0
  2921   003892  0100               	movlb	0	; () banked
  2922   003894  6FF0               	movwf	(_width+1)& (0+255),b
  2923   003896  0E00               	movlw	0
  2924   003898  6FEF               	movwf	_width& (0+255),b
  2925   00389A  C0EF  F0F5         	movff	_width,_flags
  2926   00389E                     
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2929   00389E  69F1               	setf	_prec& (0+255),b
  2930   0038A0  69F2               	setf	(_prec+1)& (0+255),b
  2931   0038A2                     
  2932                           ; BSR set to: 0
  2933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2934   0038A2  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2935   0038A6  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2936   0038AA  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2937   0038AE  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2938   0038B2                     
  2939                           ; BSR set to: 0
  2940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2941   0038B2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2942   0038B6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2943   0038BA                     	if	0	;tblptru may be non-zero
  2944   0038BA                     	endif
  2945   0038BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2946   0038BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2947   0038BC  6EF8               	movwf	tblptru,c
  2948   0038BE                     	endif
  2949   0038BE  0008               	tblrd		*
  2950   0038C0  50F5               	movf	tablat,w,c
  2951   0038C2  0A64               	xorlw	100
  2952   0038C4  B4D8               	btfsc	status,2,c
  2953   0038C6  EF67  F01C         	goto	u5031
  2954   0038CA  EF69  F01C         	goto	u5030
  2955   0038CE                     u5031:
  2956   0038CE  EF79  F01C         	goto	l5106
  2957   0038D2                     u5030:
  2958   0038D2                     
  2959                           ; BSR set to: 0
  2960   0038D2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2961   0038D6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2962   0038DA                     	if	0	;tblptru may be non-zero
  2963   0038DA                     	endif
  2964   0038DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2965   0038DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2966   0038DC  6EF8               	movwf	tblptru,c
  2967   0038DE                     	endif
  2968   0038DE  0008               	tblrd		*
  2969   0038E0  50F5               	movf	tablat,w,c
  2970   0038E2  0A69               	xorlw	105
  2971   0038E4  A4D8               	btfss	status,2,c
  2972   0038E6  EF77  F01C         	goto	u5041
  2973   0038EA  EF79  F01C         	goto	u5040
  2974   0038EE                     u5041:
  2975   0038EE  EFBC  F01C         	goto	l5112
  2976   0038F2                     u5040:
  2977   0038F2                     l5106:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2981   0038F2  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2982   0038F6  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2983   0038FA  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2984   0038FE  0E02               	movlw	2
  2985   003900  26DE               	addwf	postinc2,f,c
  2986   003902  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2987   003906  0E00               	movlw	0
  2988   003908  22DD               	addwfc	postdec2,f,c
  2989   00390A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2990   00390E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2991   003912  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2992   003916  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2993   00391A  0E00               	movlw	0
  2994   00391C  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2995   00391E  0EFF               	movlw	-1
  2996   003920  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2997   003922  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2998   003924  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2999   003926  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3000   003928  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3001   00392A  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3002                           
  3003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3004   00392C  0E01               	movlw	1
  3005   00392E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3006   003930  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3007   003932  0E00               	movlw	0
  3008   003934  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3009   003936  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3010   003938  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3011   00393C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3012   003940  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3013   003944  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3014   003948                     
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3017   003948  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3018   00394C  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3019   003950  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3020   003954  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3021   003958  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3022   00395C  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3023   003960  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3024   003964  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3025   003968  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3026   00396C  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3027   003970  EC20  F01F         	call	_dtoa	;wreg free
  3028   003974  EFAF  F01D         	goto	l1495
  3029   003978                     l5112:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3033   003978  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3034   00397C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3035   003980  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3036   003984  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3037   003988                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3040   003988  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3041   00398C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3042   003990                     	if	0	;tblptru may be non-zero
  3043   003990                     	endif
  3044   003990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3045   003990  0E00               	movlw	low (__mediumconst shr (0+16))
  3046   003992  6EF8               	movwf	tblptru,c
  3047   003994                     	endif
  3048   003994  0008               	tblrd		*
  3049   003996  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3052   00399A  EFDB  F01C         	goto	l5124
  3053   00399E                     l5116:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3057   00399E  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3058   0039A0  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3061   0039A2  EFF4  F01C         	goto	l5126
  3062   0039A6                     l5118:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3066   0039A6  0E6C               	movlw	108
  3067   0039A8  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3070   0039AA  EFF4  F01C         	goto	l5126
  3071   0039AE                     l5120:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3075   0039AE  0E00               	movlw	0
  3076   0039B0  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3079   0039B2  EFF4  F01C         	goto	l5126
  3080   0039B6                     l5124:
  3081                           
  3082                           ; BSR set to: 0
  3083   0039B6  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3084   0039B8  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3085   0039BA  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3086                           
  3087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3088                           ; Switch size 1, requested type "simple"
  3089                           ; Number of cases is 1, Range of values is 0 to 0
  3090                           ; switch strategies available:
  3091                           ; Name         Instructions Cycles
  3092                           ; simple_byte            4     3 (average)
  3093                           ;	Chosen strategy is simple_byte
  3094   0039BC  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3095   0039BE  0A00               	xorlw	0	; case 0
  3096   0039C0  B4D8               	btfsc	status,2,c
  3097   0039C2  EFE5  F01C         	goto	l6148
  3098   0039C6  EFD7  F01C         	goto	l5120
  3099   0039CA                     l6148:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ; Switch size 1, requested type "simple"
  3103                           ; Number of cases is 3, Range of values is 76 to 108
  3104                           ; switch strategies available:
  3105                           ; Name         Instructions Cycles
  3106                           ; simple_byte           10     6 (average)
  3107                           ;	Chosen strategy is simple_byte
  3108   0039CA  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3109   0039CC  0A4C               	xorlw	76	; case 76
  3110   0039CE  B4D8               	btfsc	status,2,c
  3111   0039D0  EFCF  F01C         	goto	l5116
  3112   0039D4  0A2A               	xorlw	42	; case 102
  3113   0039D6  B4D8               	btfsc	status,2,c
  3114   0039D8  EFD3  F01C         	goto	l5118
  3115   0039DC  0A0A               	xorlw	10	; case 108
  3116   0039DE  B4D8               	btfsc	status,2,c
  3117   0039E0  EFCF  F01C         	goto	l5116
  3118   0039E4  EFD7  F01C         	goto	l5120
  3119   0039E8                     l5126:
  3120                           
  3121                           ; BSR set to: 0
  3122   0039E8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3123   0039EC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3124   0039F0                     	if	0	;tblptru may be non-zero
  3125   0039F0                     	endif
  3126   0039F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3127   0039F0  0E00               	movlw	low (__mediumconst shr (0+16))
  3128   0039F2  6EF8               	movwf	tblptru,c
  3129   0039F4                     	endif
  3130   0039F4  0008               	tblrd		*
  3131   0039F6  50F5               	movf	tablat,w,c
  3132   0039F8  0A66               	xorlw	102
  3133   0039FA  A4D8               	btfss	status,2,c
  3134   0039FC  EF02  F01D         	goto	u5051
  3135   003A00  EF04  F01D         	goto	u5050
  3136   003A04                     u5051:
  3137   003A04  EF90  F01D         	goto	l5146
  3138   003A08                     u5050:
  3139   003A08  EF3A  F01D         	goto	l5134
  3140   003A0C                     l5128:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3144   003A0C  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3145   003A10  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3146   003A14  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3147   003A18  0E04               	movlw	4
  3148   003A1A  26DE               	addwf	postinc2,f,c
  3149   003A1C  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3150   003A20  0E00               	movlw	0
  3151   003A22  22DD               	addwfc	postdec2,f,c
  3152   003A24  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3153   003A28  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3154   003A2C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3155   003A30  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3156   003A34  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3157   003A38  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3160   003A3C  EF4F  F01D         	goto	l5136
  3161   003A40                     l5130:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3165   003A40  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3166   003A44  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3167   003A48  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3168   003A4C  0E04               	movlw	4
  3169   003A4E  26DE               	addwf	postinc2,f,c
  3170   003A50  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3171   003A54  0E00               	movlw	0
  3172   003A56  22DD               	addwfc	postdec2,f,c
  3173   003A58  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3174   003A5C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3175   003A60  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3176   003A64  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3177   003A68  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3178   003A6C  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3181   003A70  EF4F  F01D         	goto	l5136
  3182   003A74                     l5134:
  3183                           
  3184                           ; BSR set to: 0
  3185   003A74  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3186   003A76  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3187   003A78  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3188                           
  3189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3190                           ; Switch size 1, requested type "simple"
  3191                           ; Number of cases is 1, Range of values is 0 to 0
  3192                           ; switch strategies available:
  3193                           ; Name         Instructions Cycles
  3194                           ; simple_byte            4     3 (average)
  3195                           ;	Chosen strategy is simple_byte
  3196   003A7A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3197   003A7C  0A00               	xorlw	0	; case 0
  3198   003A7E  B4D8               	btfsc	status,2,c
  3199   003A80  EF44  F01D         	goto	l6150
  3200   003A84  EF4F  F01D         	goto	l5136
  3201   003A88                     l6150:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ; Switch size 1, requested type "simple"
  3205                           ; Number of cases is 2, Range of values is 76 to 108
  3206                           ; switch strategies available:
  3207                           ; Name         Instructions Cycles
  3208                           ; simple_byte            7     4 (average)
  3209                           ;	Chosen strategy is simple_byte
  3210   003A88  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3211   003A8A  0A4C               	xorlw	76	; case 76
  3212   003A8C  B4D8               	btfsc	status,2,c
  3213   003A8E  EF20  F01D         	goto	l5130
  3214   003A92  0A20               	xorlw	32	; case 108
  3215   003A94  B4D8               	btfsc	status,2,c
  3216   003A96  EF06  F01D         	goto	l5128
  3217   003A9A  EF4F  F01D         	goto	l5136
  3218   003A9E                     l5136:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3222   003A9E  0E01               	movlw	1
  3223   003AA0  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3224   003AA2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3225   003AA4  0E00               	movlw	0
  3226   003AA6  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3227   003AA8  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3228   003AAA  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3229   003AAE  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3230   003AB2  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3231   003AB6  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3234   003ABA  EF78  F01D         	goto	l5144
  3235   003ABE                     l5138:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3239   003ABE  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3240   003AC2  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3241   003AC6  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3242   003ACA  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3243   003ACE  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3244   003AD2  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3245   003AD6  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3246   003ADA  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3247   003ADE                     	if	0	;tblptru may be non-zero
  3248   003ADE                     	endif
  3249   003ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3250   003ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  3251   003AE0  6EF8               	movwf	tblptru,c
  3252   003AE2                     	endif
  3253   003AE2  0008               	tblrd		*
  3254   003AE4  CFF5 F066          	movff	tablat,efgtoa@c
  3255   003AE8  EC9B  F00C         	call	_efgtoa	;wreg free
  3256   003AEC  EFAF  F01D         	goto	l1495
  3257   003AF0                     l5144:
  3258                           
  3259                           ; BSR set to: 0
  3260   003AF0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3261   003AF4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3262   003AF8                     	if	0	;tblptru may be non-zero
  3263   003AF8                     	endif
  3264   003AF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3265   003AF8  0E00               	movlw	low (__mediumconst shr (0+16))
  3266   003AFA  6EF8               	movwf	tblptru,c
  3267   003AFC                     	endif
  3268   003AFC  0008               	tblrd		*
  3269   003AFE  50F5               	movf	tablat,w,c
  3270   003B00  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3271   003B02  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3272                           
  3273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3274                           ; Switch size 1, requested type "simple"
  3275                           ; Number of cases is 1, Range of values is 0 to 0
  3276                           ; switch strategies available:
  3277                           ; Name         Instructions Cycles
  3278                           ; simple_byte            4     3 (average)
  3279                           ;	Chosen strategy is simple_byte
  3280   003B04  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3281   003B06  0A00               	xorlw	0	; case 0
  3282   003B08  B4D8               	btfsc	status,2,c
  3283   003B0A  EF89  F01D         	goto	l6152
  3284   003B0E  EF90  F01D         	goto	l5146
  3285   003B12                     l6152:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ; Switch size 1, requested type "simple"
  3289                           ; Number of cases is 1, Range of values is 102 to 102
  3290                           ; switch strategies available:
  3291                           ; Name         Instructions Cycles
  3292                           ; simple_byte            4     3 (average)
  3293                           ;	Chosen strategy is simple_byte
  3294   003B12  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3295   003B14  0A66               	xorlw	102	; case 102
  3296   003B16  B4D8               	btfsc	status,2,c
  3297   003B18  EF5F  F01D         	goto	l5138
  3298   003B1C  EF90  F01D         	goto	l5146
  3299   003B20                     l5146:
  3300                           
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3302   003B20  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3303   003B24  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3304   003B28  2ADE               	incf	postinc2,f,c
  3305   003B2A  0E00               	movlw	0
  3306   003B2C  22DD               	addwfc	postdec2,f,c
  3307   003B2E  EFAF  F01D         	goto	l1495
  3308   003B32                     l5150:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3311   003B32  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3312   003B36  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3313   003B3A  CFDE FFF6          	movff	postinc2,tblptrl
  3314   003B3E  CFDD FFF7          	movff	postdec2,tblptrh
  3315   003B42                     	if	0	;tblptru may be non-zero
  3316   003B42                     	endif
  3317   003B42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3318   003B42  0E00               	movlw	low (__mediumconst shr (0+16))
  3319   003B44  6EF8               	movwf	tblptru,c
  3320   003B46                     	endif
  3321   003B46  0008               	tblrd		*
  3322   003B48  50F5               	movf	tablat,w,c
  3323   003B4A  6E01               	movwf	fputc@c^0,c
  3324   003B4C  6A02               	clrf	(fputc@c+1)^0,c
  3325   003B4E  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3326   003B52  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3327   003B56  ECE2  F026         	call	_fputc	;wreg free
  3328   003B5A  EF90  F01D         	goto	l5146
  3329   003B5E                     l1495:
  3330   003B5E  0012               	return		;funcret
  3331   003B60                     __end_of_vfpfcnvrt:
  3332                           	callstack 0
  3333                           
  3334 ;; *************** function _efgtoa *****************
  3335 ;; Defined at:
  3336 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3339 ;;		 -> sprintf@f(11), 
  3340 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3341 ;;  c               1    6[BANK0 ] unsigned char 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  u               4   49[BANK0 ] struct flui
  3344 ;;  g               4   45[BANK0 ] struct flui
  3345 ;;  l               4   38[BANK0 ] struct flui
  3346 ;;  h               4   34[BANK0 ] struct flui
  3347 ;;  ou              4   28[BANK0 ] struct flui
  3348 ;;  n               2   43[BANK0 ] int 
  3349 ;;  i               2   32[BANK0 ] int 
  3350 ;;  w               2   26[BANK0 ] int 
  3351 ;;  e               2   24[BANK0 ] int 
  3352 ;;  m               2   22[BANK0 ] int 
  3353 ;;  d               2   20[BANK0 ] int 
  3354 ;;  t               2   13[BANK0 ] int 
  3355 ;;  p               2   11[BANK0 ] int 
  3356 ;;  ne              2    9[BANK0 ] int 
  3357 ;;  sign            1   42[BANK0 ] unsigned char 
  3358 ;;  nmode           1   19[BANK0 ] unsigned char 
  3359 ;;  mode            1   18[BANK0 ] unsigned char 
  3360 ;;  pp              1   17[BANK0 ] unsigned char 
  3361 ;;  esign           1    0        unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3371 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;Total ram usage:       53 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 4
  3378 ;; This function calls:
  3379 ;;		___fladd
  3380 ;;		___fldiv
  3381 ;;		___fleq
  3382 ;;		___flge
  3383 ;;		___flmul
  3384 ;;		___flneg
  3385 ;;		___flsub
  3386 ;;		___fltol
  3387 ;;		___fpclassifyf
  3388 ;;		_floorf
  3389 ;;		_labs
  3390 ;;		_memcpy
  3391 ;;		_pad
  3392 ;;		_strcpy
  3393 ;; This function is called by:
  3394 ;;		_vfpfcnvrt
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text5
  3399   001936                     __ptext5:
  3400                           	callstack 0
  3401   001936                     _efgtoa:
  3402                           	callstack 23
  3403   001936                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3405   001936  0E00               	movlw	0
  3406   001938  0100               	movlb	0	; () banked
  3407   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  3408   00193C                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3411   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3412   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3413   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3414   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3415   00194C                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3418   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3419   00194E  EFAD  F00C         	goto	u4670
  3420   001952  EFAB  F00C         	goto	u4671
  3421   001956                     u4671:
  3422   001956  EFC1  F00C         	goto	l4816
  3423   00195A                     u4670:
  3424   00195A                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3427   00195A  0E01               	movlw	1
  3428   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  3429   00195E                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3432   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3433   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3434   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3435   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3436   00196E  ECAA  F02F         	call	___flneg	;wreg free
  3437   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  3438   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3439   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3440   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3441   001982                     l4816:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3444   001982  0E00               	movlw	0
  3445   001984  0100               	movlb	0	; () banked
  3446   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3447   001988  0E00               	movlw	0
  3448   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  3449   00198C                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3452   00198C  C0EF  F07A         	movff	_width,efgtoa@w
  3453   001990  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  3454   001994                     
  3455                           ; BSR set to: 0
  3456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3457   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  3458   001996  B4D8               	btfsc	status,2,c
  3459   001998  EFD0  F00C         	goto	u4681
  3460   00199C  EFD2  F00C         	goto	u4680
  3461   0019A0                     u4681:
  3462   0019A0  EFE6  F00C         	goto	l4830
  3463   0019A4                     u4680:
  3464   0019A4                     
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3467   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  3468   0019A6  A4D8               	btfss	status,2,c
  3469   0019A8  EFD8  F00C         	goto	u4691
  3470   0019AC  EFDA  F00C         	goto	u4690
  3471   0019B0                     u4691:
  3472   0019B0  EFE0  F00C         	goto	l4826
  3473   0019B4                     u4690:
  3474   0019B4                     
  3475                           ; BSR set to: 0
  3476   0019B4  0E00               	movlw	0
  3477   0019B6  6F70               	movwf	(_efgtoa$2790+1)& (0+255),b
  3478   0019B8  0E2B               	movlw	43
  3479   0019BA  6F6F               	movwf	_efgtoa$2790& (0+255),b
  3480   0019BC  EFE4  F00C         	goto	l4828
  3481   0019C0                     l4826:
  3482                           
  3483                           ; BSR set to: 0
  3484   0019C0  0E00               	movlw	0
  3485   0019C2  6F70               	movwf	(_efgtoa$2790+1)& (0+255),b
  3486   0019C4  0E2D               	movlw	45
  3487   0019C6  6F6F               	movwf	_efgtoa$2790& (0+255),b
  3488   0019C8                     l4828:
  3489                           
  3490                           ; BSR set to: 0
  3491   0019C8  C06F  F08A         	movff	_efgtoa$2790,efgtoa@sign
  3492   0019CC                     l4830:
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3496   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3497   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3498   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3499   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3500   0019DC  EC63  F026         	call	___fpclassifyf	;wreg free
  3501   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  3502   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3503   0019E4  A4D8               	btfss	status,2,c
  3504   0019E6  EFF7  F00C         	goto	u4701
  3505   0019EA  EFF9  F00C         	goto	u4700
  3506   0019EE                     u4701:
  3507   0019EE  EF2C  F00D         	goto	l4848
  3508   0019F2                     u4700:
  3509   0019F2                     
  3510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3511   0019F2  0100               	movlb	0	; () banked
  3512   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3513   0019F6  B4D8               	btfsc	status,2,c
  3514   0019F8  EF00  F00D         	goto	u4711
  3515   0019FC  EF02  F00D         	goto	u4710
  3516   001A00                     u4711:
  3517   001A00  EF0B  F00D         	goto	l4840
  3518   001A04                     u4710:
  3519   001A04                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3522   001A04  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3523   001A08                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3526   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3527   001A0A  A0D8               	btfss	status,0,c
  3528   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3529   001A0E                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3532   001A0E  0E00               	movlw	0
  3533   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3534   001A12  0E01               	movlw	1
  3535   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3536   001A16                     l4840:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3540   001A16  0EA0               	movlw	low _dbuf
  3541   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3542   001A1A  6E01               	movwf	strcpy@dest^0,c
  3543   001A1C  0E02               	movlw	high _dbuf
  3544   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3545   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3546   001A22  0E51               	movlw	low STR_3
  3547   001A24  6E03               	movwf	strcpy@src^0,c
  3548   001A26  0E0E               	movlw	high STR_3
  3549   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3550   001A2A  ECE7  F02E         	call	_strcpy	;wreg free
  3551   001A2E                     l4842:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3554   001A2E  0100               	movlb	0	; () banked
  3555   001A30  0EFD               	movlw	253
  3556   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3557   001A34  0EFF               	movlw	255
  3558   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3559   001A38                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3562   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3563   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3564   001A40  0EA0               	movlw	low _dbuf
  3565   001A42  6E13               	movwf	pad@buf^0,c
  3566   001A44  0E02               	movlw	high _dbuf
  3567   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3568   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3569   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3570   001A50  ECA7  F02A         	call	_pad	;wreg free
  3571   001A54  EF97  F011         	goto	l1447
  3572   001A58                     l4848:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3575   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3576   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3577   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3578   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3579   001A68  EC63  F026         	call	___fpclassifyf	;wreg free
  3580   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3581   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3582   001A70  A4D8               	btfss	status,2,c
  3583   001A72  EF3D  F00D         	goto	u4721
  3584   001A76  EF3F  F00D         	goto	u4720
  3585   001A7A                     u4721:
  3586   001A7A  EF5F  F00D         	goto	l4866
  3587   001A7E                     u4720:
  3588   001A7E                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3590   001A7E  0100               	movlb	0	; () banked
  3591   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3592   001A82  B4D8               	btfsc	status,2,c
  3593   001A84  EF46  F00D         	goto	u4731
  3594   001A88  EF48  F00D         	goto	u4730
  3595   001A8C                     u4731:
  3596   001A8C  EF51  F00D         	goto	l4858
  3597   001A90                     u4730:
  3598   001A90                     
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3601   001A90  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3602   001A94                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3605   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3606   001A96  A0D8               	btfss	status,0,c
  3607   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3608   001A9A                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3611   001A9A  0E00               	movlw	0
  3612   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3613   001A9E  0E01               	movlw	1
  3614   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3615   001AA2                     l4858:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3619   001AA2  0EA0               	movlw	low _dbuf
  3620   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3621   001AA6  6E01               	movwf	strcpy@dest^0,c
  3622   001AA8  0E02               	movlw	high _dbuf
  3623   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3624   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3625   001AAE  0E55               	movlw	low STR_6
  3626   001AB0  6E03               	movwf	strcpy@src^0,c
  3627   001AB2  0E0E               	movlw	high STR_6
  3628   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3629   001AB6  ECE7  F02E         	call	_strcpy	;wreg free
  3630   001ABA  EF17  F00D         	goto	l4842
  3631   001ABE                     l4866:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3634   001ABE  0E00               	movlw	0
  3635   001AC0  0100               	movlb	0	; () banked
  3636   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3637   001AC4  0E00               	movlw	0
  3638   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3639   001AC8  0E80               	movlw	128
  3640   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3641   001ACC  0E3F               	movlw	63
  3642   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3645   001AD0  0E00               	movlw	0
  3646   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3647   001AD4  0E00               	movlw	0
  3648   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3649   001AD8                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3652   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3653   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3654   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3655   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3656   001AE8  0E00               	movlw	0
  3657   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3658   001AEC  0E00               	movlw	0
  3659   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3660   001AF0  0E00               	movlw	0
  3661   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3662   001AF4  0E00               	movlw	0
  3663   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3664   001AF8  EC52  F028         	call	___fleq	;wreg free
  3665   001AFC  B0D8               	btfsc	status,0,c
  3666   001AFE  EF83  F00D         	goto	u4741
  3667   001B02  EF85  F00D         	goto	u4740
  3668   001B06                     u4741:
  3669   001B06  EF64  F00E         	goto	l1450
  3670   001B0A                     u4740:
  3671   001B0A  EF92  F00D         	goto	l4874
  3672   001B0E                     l1452:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3675   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3676   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3677   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3678   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3679   001B1E                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3681   001B1E  0100               	movlb	0	; () banked
  3682   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3683   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3684   001B24                     l4874:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3687   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3688   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3689   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3690   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3691   001B34  0E00               	movlw	0
  3692   001B36  6E15               	movwf	___flmul@a^0,c
  3693   001B38  0E00               	movlw	0
  3694   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3695   001B3C  0E20               	movlw	32
  3696   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3697   001B40  0E41               	movlw	65
  3698   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3699   001B44  ECB4  F016         	call	___flmul	;wreg free
  3700   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3701   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3702   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3703   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3704   001B58  0100               	movlb	0	; () banked
  3705   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3706   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3707   001B5E  6E01               	movwf	labs@a^0,c
  3708   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3709   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3710   001B64  6E02               	movwf	(labs@a+1)^0,c
  3711   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3712   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3713   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3714   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3715   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3716   001B70  6E04               	movwf	(labs@a+3)^0,c
  3717   001B72  EC1E  F02B         	call	_labs	;wreg free
  3718   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3719   001B78  EFC9  F00D         	goto	u4751
  3720   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3721   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3722   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3723   001B82  E109               	bnz	u4750
  3724   001B84  0E02               	movlw	2
  3725   001B86  5C01               	subwf	?_labs^0,w,c
  3726   001B88  A0D8               	btfss	status,0,c
  3727   001B8A  EFC9  F00D         	goto	u4751
  3728   001B8E  EFCB  F00D         	goto	u4750
  3729   001B92                     u4751:
  3730   001B92  EF87  F00D         	goto	l1452
  3731   001B96                     u4750:
  3732   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3733   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3734   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3735   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3736   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3737   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3738   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3739   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3740   001BB6  ECE1  F025         	call	___flge	;wreg free
  3741   001BBA  A0D8               	btfss	status,0,c
  3742   001BBC  EFE2  F00D         	goto	u4761
  3743   001BC0  EFE4  F00D         	goto	u4760
  3744   001BC4                     u4761:
  3745   001BC4  EF87  F00D         	goto	l1452
  3746   001BC8                     u4760:
  3747   001BC8                     
  3748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3749   001BC8  0100               	movlb	0	; () banked
  3750   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3751   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3752   001BCE  6E01               	movwf	labs@a^0,c
  3753   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3754   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3755   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3756   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3757   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3758   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3759   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3760   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3761   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3762   001BE2  EC1E  F02B         	call	_labs	;wreg free
  3763   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3764   001BE8  EF03  F00E         	goto	u4770
  3765   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3766   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3767   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3768   001BF2  E107               	bnz	u4771
  3769   001BF4  0E02               	movlw	2
  3770   001BF6  5C01               	subwf	?_labs^0,w,c
  3771   001BF8  B0D8               	btfsc	status,0,c
  3772   001BFA  EF01  F00E         	goto	u4771
  3773   001BFE  EF03  F00E         	goto	u4770
  3774   001C02                     u4771:
  3775   001C02  EF4B  F00E         	goto	l4892
  3776   001C06                     u4770:
  3777   001C06                     l4882:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3780   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3781   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3782   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3783   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3786   001C16  EF64  F00E         	goto	l1450
  3787   001C1A                     l4884:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3790   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3791   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3792   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3793   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3794   001C2A  0E00               	movlw	0
  3795   001C2C  6E36               	movwf	___fldiv@a^0,c
  3796   001C2E  0E00               	movlw	0
  3797   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3798   001C32  0E20               	movlw	32
  3799   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3800   001C36  0E41               	movlw	65
  3801   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3802   001C3A  ECC9  F018         	call	___fldiv	;wreg free
  3803   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3804   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3805   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3806   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3807   001C4E                     
  3808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3809   001C4E  0100               	movlb	0	; () banked
  3810   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3811   001C52  A0D8               	btfss	status,0,c
  3812   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3813   001C56                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3816   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3817   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3818   001C5A  6E01               	movwf	labs@a^0,c
  3819   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3820   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3821   001C60  6E02               	movwf	(labs@a+1)^0,c
  3822   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3823   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3824   001C66  6E03               	movwf	(labs@a+2)^0,c
  3825   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3826   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3827   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3828   001C6E  EC1E  F02B         	call	_labs	;wreg free
  3829   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3830   001C74  EF49  F00E         	goto	u4780
  3831   001C78  5004               	movf	(?_labs+3)^0,w,c
  3832   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3833   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3834   001C7E  E107               	bnz	u4781
  3835   001C80  0E02               	movlw	2
  3836   001C82  5C01               	subwf	?_labs^0,w,c
  3837   001C84  B0D8               	btfsc	status,0,c
  3838   001C86  EF47  F00E         	goto	u4781
  3839   001C8A  EF49  F00E         	goto	u4780
  3840   001C8E                     u4781:
  3841   001C8E  EF4B  F00E         	goto	l4892
  3842   001C92                     u4780:
  3843   001C92  EF03  F00E         	goto	l4882
  3844   001C96                     l4892:
  3845                           
  3846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3847   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3848   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3849   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3850   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3851   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3852   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3853   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3854   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3855   001CB6  ECE1  F025         	call	___flge	;wreg free
  3856   001CBA  A0D8               	btfss	status,0,c
  3857   001CBC  EF62  F00E         	goto	u4791
  3858   001CC0  EF64  F00E         	goto	u4790
  3859   001CC4                     u4791:
  3860   001CC4  EF0D  F00E         	goto	l4884
  3861   001CC8                     u4790:
  3862   001CC8                     l1450:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3865   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3868   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3869   001CD0                     
  3870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3871   001CD0  0100               	movlb	0	; () banked
  3872   001CD2  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3873   001CD4  EF6E  F00E         	goto	u4801
  3874   001CD8  EF70  F00E         	goto	u4800
  3875   001CDC                     u4801:
  3876   001CDC  EF76  F00E         	goto	l4898
  3877   001CE0                     u4800:
  3878   001CE0                     
  3879                           ; BSR set to: 0
  3880   001CE0  C0F1  F06B         	movff	_prec,efgtoa@p
  3881   001CE4  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3882   001CE8  EF7A  F00E         	goto	l4900
  3883   001CEC                     l4898:
  3884                           
  3885                           ; BSR set to: 0
  3886   001CEC  0E00               	movlw	0
  3887   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3888   001CF0  0E06               	movlw	6
  3889   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3890   001CF4                     l4900:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3894   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3895   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3896   001CFC                     
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3899   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3900   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3901   001D00                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3904   001D00  0E66               	movlw	102
  3905   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3906   001D04  A4D8               	btfss	status,2,c
  3907   001D06  EF87  F00E         	goto	u4811
  3908   001D0A  EF89  F00E         	goto	u4810
  3909   001D0E                     u4811:
  3910   001D0E  EFA9  F00E         	goto	l4914
  3911   001D12                     u4810:
  3912   001D12                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3915   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3916   001D14  EF90  F00E         	goto	u4820
  3917   001D18  EF8E  F00E         	goto	u4821
  3918   001D1C                     u4821:
  3919   001D1C  EF9C  F00E         	goto	l4910
  3920   001D20                     u4820:
  3921   001D20                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3924   001D20  0E00               	movlw	0
  3925   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3926   001D24  0E00               	movlw	0
  3927   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3928   001D28  0E80               	movlw	128
  3929   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3930   001D2C  0E3F               	movlw	63
  3931   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3932                           
  3933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3934   001D30  0E00               	movlw	0
  3935   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3936   001D34  0E00               	movlw	0
  3937   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3938   001D38                     l4910:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3942   001D38  0E67               	movlw	103
  3943   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3944   001D3C  B4D8               	btfsc	status,2,c
  3945   001D3E  EFA3  F00E         	goto	u4831
  3946   001D42  EFA5  F00E         	goto	u4830
  3947   001D46                     u4831:
  3948   001D46  EFA9  F00E         	goto	l4914
  3949   001D4A                     u4830:
  3950   001D4A                     
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3953   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3954   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3955   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3956   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3957   001D52                     l4914:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3961   001D52  0E00               	movlw	0
  3962   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3963   001D56  0E00               	movlw	0
  3964   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3965   001D5A                     
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3968   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3969   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3970   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3971   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3972   001D6A                     
  3973                           ; BSR set to: 0
  3974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3975   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3976   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3977   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3978   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3981   001D7A  EF3A  F00F         	goto	l4928
  3982   001D7E                     l4920:
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3986   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3987   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3988   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3989   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3990   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3991   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3992   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3993   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3994   001D9E  ECC9  F018         	call	___fldiv	;wreg free
  3995   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3996   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3997   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3998   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3999   001DB2  EC5F  F020         	call	_floorf	;wreg free
  4000   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  4001   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4002   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4003   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4006   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  4007   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4008   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4009   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4010   001DD6  EC5E  F025         	call	___fltol	;wreg free
  4011   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  4012   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4013   001DE2                     
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4015   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  4016   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4017   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4018   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4019   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  4020   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4021   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4022   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4023   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  4024   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4025   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4026   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4027   001E12  ECB4  F016         	call	___flmul	;wreg free
  4028   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  4029   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4030   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4031   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4032   001E26  ECC4  F02E         	call	___flsub	;wreg free
  4033   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  4034   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4035   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4036   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4037   001E3A                     
  4038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4039   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  4040   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4041   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4042   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4043   001E4A  0E00               	movlw	0
  4044   001E4C  6E36               	movwf	___fldiv@a^0,c
  4045   001E4E  0E00               	movlw	0
  4046   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  4047   001E52  0E20               	movlw	32
  4048   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  4049   001E56  0E41               	movlw	65
  4050   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  4051   001E5A  ECC9  F018         	call	___fldiv	;wreg free
  4052   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  4053   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4054   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4055   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4056   001E6E                     
  4057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4058   001E6E  0100               	movlb	0	; () banked
  4059   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4060   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4061   001E74                     l4928:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4065   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  4066   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  4067   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4068   001E7A  0A80               	xorlw	128
  4069   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  4070   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4071   001E80  0A80               	xorlw	128
  4072   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  4073   001E84  A0D8               	btfss	status,0,c
  4074   001E86  EF47  F00F         	goto	u4841
  4075   001E8A  EF49  F00F         	goto	u4840
  4076   001E8E                     u4841:
  4077   001E8E  EFBF  F00E         	goto	l4920
  4078   001E92                     u4840:
  4079   001E92                     
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4082   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  4083   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4084   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4085   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4086   001EA2  0E00               	movlw	0
  4087   001EA4  6E15               	movwf	___flmul@a^0,c
  4088   001EA6  0E00               	movlw	0
  4089   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  4090   001EAA  0EA0               	movlw	160
  4091   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  4092   001EAE  0E40               	movlw	64
  4093   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  4094   001EB2  ECB4  F016         	call	___flmul	;wreg free
  4095   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  4096   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4097   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4098   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4099   001EC6                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4101   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4102   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4103   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4104   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4105   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4106   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4107   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4108   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4109   001EE6  ECE1  F025         	call	___flge	;wreg free
  4110   001EEA  B0D8               	btfsc	status,0,c
  4111   001EEC  EF7A  F00F         	goto	u4851
  4112   001EF0  EF7C  F00F         	goto	u4850
  4113   001EF4                     u4851:
  4114   001EF4  EF87  F00F         	goto	l4936
  4115   001EF8                     u4850:
  4116   001EF8                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4118   001EF8  0E00               	movlw	0
  4119   001EFA  0100               	movlb	0	; () banked
  4120   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  4121   001EFE  0E00               	movlw	0
  4122   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4123   001F02  0E00               	movlw	0
  4124   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4125   001F06  0E00               	movlw	0
  4126   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4129   001F0A  EFB0  F00F         	goto	l4942
  4130   001F0E                     l4936:
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4133   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4134   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4135   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4136   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4137   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4138   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4139   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4140   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4141   001F2E  EC52  F028         	call	___fleq	;wreg free
  4142   001F32  A0D8               	btfss	status,0,c
  4143   001F34  EF9E  F00F         	goto	u4861
  4144   001F38  EFA0  F00F         	goto	u4860
  4145   001F3C                     u4861:
  4146   001F3C  EFB0  F00F         	goto	l4942
  4147   001F40                     u4860:
  4148   001F40  0100               	movlb	0	; () banked
  4149   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  4150   001F44  EFA6  F00F         	goto	u4871
  4151   001F48  EFA8  F00F         	goto	u4870
  4152   001F4C                     u4871:
  4153   001F4C  EFB0  F00F         	goto	l4942
  4154   001F50                     u4870:
  4155   001F50                     
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4158   001F50  0E00               	movlw	0
  4159   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  4160   001F54  0E00               	movlw	0
  4161   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4162   001F58  0E00               	movlw	0
  4163   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4164   001F5C  0E00               	movlw	0
  4165   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4166   001F60                     l4942:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4169   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  4170   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4171   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4172   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4173   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  4174   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4175   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4176   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4177   001F80  EC54  F014         	call	___fladd	;wreg free
  4178   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  4179   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4180   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4181   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4182   001F94                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4184   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4185   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4186   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4187   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4188   001FA4  0E00               	movlw	0
  4189   001FA6  6E15               	movwf	___flmul@a^0,c
  4190   001FA8  0E00               	movlw	0
  4191   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  4192   001FAC  0E20               	movlw	32
  4193   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  4194   001FB0  0E41               	movlw	65
  4195   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  4196   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4197   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4198   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4199   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4200   001FC4  ECB4  F016         	call	___flmul	;wreg free
  4201   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  4202   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4203   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4204   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4205   001FD8  ECE1  F025         	call	___flge	;wreg free
  4206   001FDC  A0D8               	btfss	status,0,c
  4207   001FDE  EFF3  F00F         	goto	u4881
  4208   001FE2  EFF5  F00F         	goto	u4880
  4209   001FE6                     u4881:
  4210   001FE6  EF1E  F010         	goto	l4954
  4211   001FEA                     u4880:
  4212   001FEA                     
  4213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4214   001FEA  0100               	movlb	0	; () banked
  4215   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4216   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4217   001FF0                     
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4220   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4221   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4222   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4223   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4224   002000  0E00               	movlw	0
  4225   002002  6E15               	movwf	___flmul@a^0,c
  4226   002004  0E00               	movlw	0
  4227   002006  6E16               	movwf	(___flmul@a+1)^0,c
  4228   002008  0E20               	movlw	32
  4229   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  4230   00200C  0E41               	movlw	65
  4231   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  4232   002010  ECB4  F016         	call	___flmul	;wreg free
  4233   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  4234   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4235   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4236   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4237   002024                     
  4238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4239   002024  0E66               	movlw	102
  4240   002026  0100               	movlb	0	; () banked
  4241   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4242   00202A  A4D8               	btfss	status,2,c
  4243   00202C  EF1A  F010         	goto	u4891
  4244   002030  EF1C  F010         	goto	u4890
  4245   002034                     u4891:
  4246   002034  EF1E  F010         	goto	l4954
  4247   002038                     u4890:
  4248   002038                     
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4251   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4252   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4253   00203C                     l4954:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4256   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4257   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4258   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4259   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4260   00204C                     
  4261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4262   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4263   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4264   002054                     
  4265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4266   002054  0E00               	movlw	0
  4267   002056  0100               	movlb	0	; () banked
  4268   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  4269   00205A                     
  4270                           ; BSR set to: 0
  4271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4272   00205A  0E00               	movlw	0
  4273   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4274   00205E  0E00               	movlw	0
  4275   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  4276   002062                     
  4277                           ; BSR set to: 0
  4278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4279   002062  0E00               	movlw	0
  4280   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4281   002066  0E00               	movlw	0
  4282   002068  6F80               	movwf	efgtoa@i& (0+255),b
  4283                           
  4284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4285   00206A  EF1C  F011         	goto	l5004
  4286   00206E                     l4964:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4290   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  4291   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4292   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4293   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4294   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  4295   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4296   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4297   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4298   00208E  ECC9  F018         	call	___fldiv	;wreg free
  4299   002092  C032  F04B         	movff	?___fldiv,floorf@x
  4300   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4301   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4302   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4303   0020A2  EC5F  F020         	call	_floorf	;wreg free
  4304   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  4305   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4306   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4307   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4308                           
  4309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4310   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  4311   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4312   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4313   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4314   0020C6  EC5E  F025         	call	___fltol	;wreg free
  4315   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  4316   0020CC  EF73  F010         	goto	u4900
  4317   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  4318   0020D2  E107               	bnz	u4901
  4319   0020D4  0E0A               	movlw	10
  4320   0020D6  5C01               	subwf	?___fltol^0,w,c
  4321   0020D8  B0D8               	btfsc	status,0,c
  4322   0020DA  EF71  F010         	goto	u4901
  4323   0020DE  EF73  F010         	goto	u4900
  4324   0020E2                     u4901:
  4325   0020E2  EF83  F010         	goto	l4968
  4326   0020E6                     u4900:
  4327   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  4328   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4329   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4330   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4331   0020F6  EC5E  F025         	call	___fltol	;wreg free
  4332   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  4333   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4334   002102  EF88  F010         	goto	l1480
  4335   002106                     l4968:
  4336   002106  0E00               	movlw	0
  4337   002108  0100               	movlb	0	; () banked
  4338   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4339   00210C  0E09               	movlw	9
  4340   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  4341   002110                     l1480:
  4342                           
  4343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4344   002110  0100               	movlb	0	; () banked
  4345   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  4346   002114  A4D8               	btfss	status,2,c
  4347   002116  EF8F  F010         	goto	u4911
  4348   00211A  EF91  F010         	goto	u4910
  4349   00211E                     u4911:
  4350   00211E  EFB9  F010         	goto	l4988
  4351   002122                     u4910:
  4352   002122                     
  4353                           ; BSR set to: 0
  4354   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4355   002124  EF98  F010         	goto	u4920
  4356   002128  EF96  F010         	goto	u4921
  4357   00212C                     u4921:
  4358   00212C  EFB9  F010         	goto	l4988
  4359   002130                     u4920:
  4360   002130                     
  4361                           ; BSR set to: 0
  4362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4363   002130  0EA0               	movlw	low _dbuf
  4364   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  4365   002134  6ED9               	movwf	fsr2l,c
  4366   002136  0E02               	movlw	high _dbuf
  4367   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4368   00213A  6EDA               	movwf	fsr2h,c
  4369   00213C  0E2E               	movlw	46
  4370   00213E  6EDF               	movwf	indf2,c
  4371   002140                     
  4372                           ; BSR set to: 0
  4373   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4374   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4375   002144                     
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4378   002144  077A               	decf	efgtoa@w& (0+255),f,b
  4379   002146  A0D8               	btfss	status,0,c
  4380   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4381   00214A                     
  4382                           ; BSR set to: 0
  4383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4384   00214A  0E01               	movlw	1
  4385   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  4386   00214E  EFB9  F010         	goto	l4988
  4387   002152                     l4980:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4391   002152  0EA0               	movlw	low _dbuf
  4392   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  4393   002156  6ED9               	movwf	fsr2l,c
  4394   002158  0E02               	movlw	high _dbuf
  4395   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4396   00215C  6EDA               	movwf	fsr2h,c
  4397   00215E  0E30               	movlw	48
  4398   002160  6EDF               	movwf	indf2,c
  4399   002162                     
  4400                           ; BSR set to: 0
  4401   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4402   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4403   002166                     
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4406   002166  077A               	decf	efgtoa@w& (0+255),f,b
  4407   002168  A0D8               	btfss	status,0,c
  4408   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4409   00216C                     
  4410                           ; BSR set to: 0
  4411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4412   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  4413   00216E  A0D8               	btfss	status,0,c
  4414   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4415   002172                     l4988:
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4419   002172  516D               	movf	efgtoa@t& (0+255),w,b
  4420   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4421   002176  A4D8               	btfss	status,2,c
  4422   002178  EFC0  F010         	goto	u4931
  4423   00217C  EFC2  F010         	goto	u4930
  4424   002180                     u4931:
  4425   002180  EFA9  F010         	goto	l4980
  4426   002184                     u4930:
  4427   002184                     
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4430   002184  0EA0               	movlw	low _dbuf
  4431   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  4432   002188  6ED9               	movwf	fsr2l,c
  4433   00218A  0E02               	movlw	high _dbuf
  4434   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4435   00218E  6EDA               	movwf	fsr2h,c
  4436   002190  5174               	movf	efgtoa@d& (0+255),w,b
  4437   002192  0F30               	addlw	48
  4438   002194  6EDF               	movwf	indf2,c
  4439   002196                     
  4440                           ; BSR set to: 0
  4441   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4442   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4443   00219A                     
  4444                           ; BSR set to: 0
  4445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4446   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  4447   00219C  A0D8               	btfss	status,0,c
  4448   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4449   0021A0                     
  4450                           ; BSR set to: 0
  4451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4452   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  4453   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4454   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4455   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4456   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  4457   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4458   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4459   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4460   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  4461   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4462   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4463   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4464   0021D0  ECB4  F016         	call	___flmul	;wreg free
  4465   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  4466   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4467   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4468   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4469   0021E4  ECC4  F02E         	call	___flsub	;wreg free
  4470   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  4471   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4472   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4473   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4474   0021F8                     
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4476   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  4477   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4478   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4479   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4480   002208  0E00               	movlw	0
  4481   00220A  6E36               	movwf	___fldiv@a^0,c
  4482   00220C  0E00               	movlw	0
  4483   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  4484   002210  0E20               	movlw	32
  4485   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  4486   002214  0E41               	movlw	65
  4487   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  4488   002218  ECC9  F018         	call	___fldiv	;wreg free
  4489   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  4490   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4491   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4492   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4493   00222C                     
  4494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4495   00222C  0100               	movlb	0	; () banked
  4496   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  4497   002230  A0D8               	btfss	status,0,c
  4498   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4499   002234                     
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4502   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4503   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4504   002238                     l5004:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4508   002238  5176               	movf	efgtoa@m& (0+255),w,b
  4509   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4510   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4511   00223E  0A80               	xorlw	128
  4512   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4513   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4514   002244  0A80               	xorlw	128
  4515   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4516   002248  B0D8               	btfsc	status,0,c
  4517   00224A  EF29  F011         	goto	u4941
  4518   00224E  EF2B  F011         	goto	u4940
  4519   002252                     u4941:
  4520   002252  EF39  F011         	goto	l5008
  4521   002256                     u4940:
  4522   002256                     
  4523                           ; BSR set to: 0
  4524   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4525   002258  EF37  F011         	goto	u4951
  4526   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4527   00225E  E109               	bnz	u4950
  4528   002260  0E4B               	movlw	75
  4529   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4530   002264  A0D8               	btfss	status,0,c
  4531   002266  EF37  F011         	goto	u4951
  4532   00226A  EF39  F011         	goto	u4950
  4533   00226E                     u4951:
  4534   00226E  EF37  F010         	goto	l4964
  4535   002272                     u4950:
  4536   002272                     l5008:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4540   002272  0E00               	movlw	0
  4541   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4542   002276  0E4F               	movlw	79
  4543   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4544   00227A                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4547   00227A  0EA0               	movlw	low _dbuf
  4548   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4549   00227E  6ED9               	movwf	fsr2l,c
  4550   002280  0E02               	movlw	high _dbuf
  4551   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4552   002284  6EDA               	movwf	fsr2h,c
  4553   002286  0E00               	movlw	0
  4554   002288  6EDF               	movwf	indf2,c
  4555   00228A                     
  4556                           ; BSR set to: 0
  4557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4558   00228A  0EA0               	movlw	low _dbuf
  4559   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4560   00228E  0E02               	movlw	high _dbuf
  4561   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4562   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4563   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4564   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4565   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4566   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4567   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4568   00229E  6E01               	movwf	memcpy@d1^0,c
  4569   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4570   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4571   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4572   0022A6  0EA0               	movlw	low _dbuf
  4573   0022A8  6E03               	movwf	memcpy@s1^0,c
  4574   0022AA  0E02               	movlw	high _dbuf
  4575   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4576   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4577   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4578   0022B6  EC88  F02D         	call	_memcpy	;wreg free
  4579   0022BA                     
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4581   0022BA  0100               	movlb	0	; () banked
  4582   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4583   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4584   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4585   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4586   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4587   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4588   0022C8                     
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4591   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4592   0022CA  A4D8               	btfss	status,2,c
  4593   0022CC  EF6A  F011         	goto	u4961
  4594   0022D0  EF6D  F011         	goto	u4960
  4595   0022D4                     u4961:
  4596   0022D4  0E01               	movlw	1
  4597   0022D6  EF6E  F011         	goto	u4970
  4598   0022DA                     u4960:
  4599   0022DA  0E00               	movlw	0
  4600   0022DC                     u4970:
  4601   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4602   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4603   0022E0                     
  4604                           ; BSR set to: 0
  4605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4606   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4607   0022E2  B4D8               	btfsc	status,2,c
  4608   0022E4  EF76  F011         	goto	u4981
  4609   0022E8  EF78  F011         	goto	u4980
  4610   0022EC                     u4981:
  4611   0022EC  EF83  F011         	goto	l5022
  4612   0022F0                     u4980:
  4613   0022F0                     
  4614                           ; BSR set to: 0
  4615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4616   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4617   0022F2  A0D8               	btfss	status,0,c
  4618   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4619   0022F6  0EA0               	movlw	low _dbuf
  4620   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4621   0022FA  6ED9               	movwf	fsr2l,c
  4622   0022FC  0E02               	movlw	high _dbuf
  4623   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4624   002300  6EDA               	movwf	fsr2h,c
  4625   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4626   002306                     l5022:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4630   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4631   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4632   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4633   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4634   00230E                     
  4635                           ; BSR set to: 0
  4636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4637   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4638   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4639   002316  0EA0               	movlw	low _dbuf
  4640   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4641   00231A  6E13               	movwf	pad@buf^0,c
  4642   00231C  0E02               	movlw	high _dbuf
  4643   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4644   002320  6E14               	movwf	(pad@buf+1)^0,c
  4645   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4646   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4647   00232A  ECA7  F02A         	call	_pad	;wreg free
  4648   00232E                     l1447:
  4649   00232E  0012               	return		;funcret
  4650   002330                     __end_of_efgtoa:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _strcpy *****************
  4654 ;; Defined at:
  4655 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4658 ;;		 -> dbuf(80), 
  4659 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4660 ;;		 -> STR_6(4), STR_3(4), 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  d               2    6[COMRAM] PTR unsigned char 
  4663 ;;		 -> dbuf(80), 
  4664 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4665 ;;		 -> STR_6(4), STR_3(4), 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2    0[COMRAM] PTR unsigned char 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;Total ram usage:        8 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_efgtoa
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text6
  4689   005DCE                     __ptext6:
  4690                           	callstack 0
  4691   005DCE                     _strcpy:
  4692                           	callstack 26
  4693   005DCE  C003  F005         	movff	strcpy@src,strcpy@s
  4694   005DD2  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4695   005DD6  C001  F007         	movff	strcpy@dest,strcpy@d
  4696   005DDA  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4697   005DDE                     l4628:
  4698   005DDE  C005  FFF6         	movff	strcpy@s,tblptrl
  4699   005DE2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4700   005DE6  4A05               	infsnz	strcpy@s^0,f,c
  4701   005DE8  2A06               	incf	(strcpy@s+1)^0,f,c
  4702   005DEA                     	if	0	;tblptru may be non-zero
  4703   005DEA                     	endif
  4704   005DEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4705   005DEA  0E00               	movlw	low (__mediumconst shr (0+16))
  4706   005DEC  6EF8               	movwf	tblptru,c
  4707   005DEE                     	endif
  4708   005DEE  C007  FFD9         	movff	strcpy@d,fsr2l
  4709   005DF2  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4710   005DF6  4A07               	infsnz	strcpy@d^0,f,c
  4711   005DF8  2A08               	incf	(strcpy@d+1)^0,f,c
  4712   005DFA  0008               	tblrd		*
  4713   005DFC  CFF5 FFDF          	movff	tablat,indf2
  4714   005E00  50DF               	movf	indf2,w,c
  4715   005E02  A4D8               	btfss	status,2,c
  4716   005E04  EF06  F02F         	goto	u4311
  4717   005E08  EF08  F02F         	goto	u4310
  4718   005E0C                     u4311:
  4719   005E0C  EFEF  F02E         	goto	l4628
  4720   005E10                     u4310:
  4721   005E10  0012               	return		;funcret
  4722   005E12                     __end_of_strcpy:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _memcpy *****************
  4726 ;; Defined at:
  4727 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  d1              2    0[COMRAM] PTR void 
  4730 ;;		 -> dbuf(80), 
  4731 ;;  s1              2    2[COMRAM] PTR const void 
  4732 ;;		 -> dbuf(80), 
  4733 ;;  n               2    4[COMRAM] unsigned int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4736 ;;		 -> dbuf(80), 
  4737 ;;  d               2    6[COMRAM] PTR unsigned char 
  4738 ;;		 -> dbuf(80), 
  4739 ;;  tmp             1   10[COMRAM] unsigned char 
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  2    0[COMRAM] PTR void 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4749 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;Total ram usage:       11 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_efgtoa
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text7
  4763   005B10                     __ptext7:
  4764                           	callstack 0
  4765   005B10                     _memcpy:
  4766                           	callstack 26
  4767   005B10  C003  F009         	movff	memcpy@s1,memcpy@s
  4768   005B14  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4769   005B18  C001  F007         	movff	memcpy@d1,memcpy@d
  4770   005B1C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4771   005B20  EFA2  F02D         	goto	l4672
  4772   005B24                     l4664:
  4773   005B24  C009  FFD9         	movff	memcpy@s,fsr2l
  4774   005B28  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4775   005B2C  50DF               	movf	indf2,w,c
  4776   005B2E  6E0B               	movwf	memcpy@tmp^0,c
  4777   005B30  4A09               	infsnz	memcpy@s^0,f,c
  4778   005B32  2A0A               	incf	(memcpy@s+1)^0,f,c
  4779   005B34  C007  FFD9         	movff	memcpy@d,fsr2l
  4780   005B38  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4781   005B3C  C00B  FFDF         	movff	memcpy@tmp,indf2
  4782   005B40  4A07               	infsnz	memcpy@d^0,f,c
  4783   005B42  2A08               	incf	(memcpy@d+1)^0,f,c
  4784   005B44                     l4672:
  4785   005B44  0605               	decf	memcpy@n^0,f,c
  4786   005B46  A0D8               	btfss	status,0,c
  4787   005B48  0606               	decf	(memcpy@n+1)^0,f,c
  4788   005B4A  2805               	incf	memcpy@n^0,w,c
  4789   005B4C  E106               	bnz	u4431
  4790   005B4E  2806               	incf	(memcpy@n+1)^0,w,c
  4791   005B50  A4D8               	btfss	status,2,c
  4792   005B52  EFAD  F02D         	goto	u4431
  4793   005B56  EFAF  F02D         	goto	u4430
  4794   005B5A                     u4431:
  4795   005B5A  EF92  F02D         	goto	l4664
  4796   005B5E                     u4430:
  4797   005B5E  0012               	return		;funcret
  4798   005B60                     __end_of_memcpy:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function _labs *****************
  4802 ;; Defined at:
  4803 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  a               4    0[COMRAM] long 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  4    0[COMRAM] long 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;Total ram usage:        8 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_efgtoa
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text8
  4831   00563C                     __ptext8:
  4832                           	callstack 0
  4833   00563C                     _labs:
  4834                           	callstack 26
  4835   00563C  BE04               	btfsc	(labs@a+3)^0,7,c
  4836   00563E  EF2D  F02B         	goto	u4320
  4837   005642  5004               	movf	(labs@a+3)^0,w,c
  4838   005644  1003               	iorwf	(labs@a+2)^0,w,c
  4839   005646  1002               	iorwf	(labs@a+1)^0,w,c
  4840   005648  E106               	bnz	u4321
  4841   00564A  0401               	decf	labs@a^0,w,c
  4842   00564C  B0D8               	btfsc	status,0,c
  4843   00564E  EF2B  F02B         	goto	u4321
  4844   005652  EF2D  F02B         	goto	u4320
  4845   005656                     u4321:
  4846   005656  EF48  F02B         	goto	l1552
  4847   00565A                     u4320:
  4848   00565A  C001  F005         	movff	labs@a,??_labs
  4849   00565E  C002  F006         	movff	labs@a+1,??_labs+1
  4850   005662  C003  F007         	movff	labs@a+2,??_labs+2
  4851   005666  C004  F008         	movff	labs@a+3,??_labs+3
  4852   00566A  1E05               	comf	??_labs^0,f,c
  4853   00566C  1E06               	comf	(??_labs+1)^0,f,c
  4854   00566E  1E07               	comf	(??_labs+2)^0,f,c
  4855   005670  1E08               	comf	(??_labs+3)^0,f,c
  4856   005672  2A05               	incf	??_labs^0,f,c
  4857   005674  0E00               	movlw	0
  4858   005676  2206               	addwfc	(??_labs+1)^0,f,c
  4859   005678  2207               	addwfc	(??_labs+2)^0,f,c
  4860   00567A  2208               	addwfc	(??_labs+3)^0,f,c
  4861   00567C  C005  F001         	movff	??_labs,?_labs
  4862   005680  C006  F002         	movff	??_labs+1,?_labs+1
  4863   005684  C007  F003         	movff	??_labs+2,?_labs+2
  4864   005688  C008  F004         	movff	??_labs+3,?_labs+3
  4865   00568C  EF50  F02B         	goto	l1555
  4866   005690                     l1552:
  4867   005690  C001  F001         	movff	labs@a,?_labs
  4868   005694  C002  F002         	movff	labs@a+1,?_labs+1
  4869   005698  C003  F003         	movff	labs@a+2,?_labs+2
  4870   00569C  C004  F004         	movff	labs@a+3,?_labs+3
  4871   0056A0                     l1555:
  4872   0056A0  0012               	return		;funcret
  4873   0056A2                     __end_of_labs:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function _floorf *****************
  4877 ;; Defined at:
  4878 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  x               4   74[COMRAM] float 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  u               4   90[COMRAM] struct .
  4883 ;;  m               4   84[COMRAM] unsigned long 
  4884 ;;  e               2   88[COMRAM] int 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  4   74[COMRAM] float 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;Total ram usage:       20 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_efgtoa
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text9
  4908   0040BE                     __ptext9:
  4909                           	callstack 0
  4910   0040BE                     _floorf:
  4911                           	callstack 26
  4912   0040BE  C0E7  F05B         	movff	floorf@F526,floorf@u
  4913   0040C2  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  4914   0040C6  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  4915   0040CA  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  4916   0040CE  C04B  F05B         	movff	floorf@x,floorf@u
  4917   0040D2  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4918   0040D6  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4919   0040DA  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4920   0040DE  0E81               	movlw	129
  4921   0040E0  6E4F               	movwf	??_floorf^0,c
  4922   0040E2  0EFF               	movlw	255
  4923   0040E4  6E50               	movwf	(??_floorf+1)^0,c
  4924   0040E6  C05B  F051         	movff	floorf@u,??_floorf+2
  4925   0040EA  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4926   0040EE  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4927   0040F2  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4928   0040F6  0E18               	movlw	24
  4929   0040F8  EF83  F020         	goto	u4330
  4930   0040FC                     u4335:
  4931   0040FC  90D8               	bcf	status,0,c
  4932   0040FE  3254               	rrcf	(??_floorf+5)^0,f,c
  4933   004100  3253               	rrcf	(??_floorf+4)^0,f,c
  4934   004102  3252               	rrcf	(??_floorf+3)^0,f,c
  4935   004104  3251               	rrcf	(??_floorf+2)^0,f,c
  4936   004106                     u4330:
  4937   004106  2EE8               	decfsz	wreg,f,c
  4938   004108  EF7E  F020         	goto	u4335
  4939   00410C  5051               	movf	(??_floorf+2)^0,w,c
  4940   00410E  244F               	addwf	??_floorf^0,w,c
  4941   004110  6E59               	movwf	floorf@e^0,c
  4942   004112  0E00               	movlw	0
  4943   004114  2050               	addwfc	(??_floorf+1)^0,w,c
  4944   004116  6E5A               	movwf	(floorf@e+1)^0,c
  4945   004118  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4946   00411A  EF98  F020         	goto	u4341
  4947   00411E  505A               	movf	(floorf@e+1)^0,w,c
  4948   004120  E109               	bnz	u4340
  4949   004122  0E17               	movlw	23
  4950   004124  5C59               	subwf	floorf@e^0,w,c
  4951   004126  A0D8               	btfss	status,0,c
  4952   004128  EF98  F020         	goto	u4341
  4953   00412C  EF9A  F020         	goto	u4340
  4954   004130                     u4341:
  4955   004130  EFA4  F020         	goto	l4640
  4956   004134                     u4340:
  4957   004134                     l4638:
  4958   004134  C04B  F04B         	movff	floorf@x,?_floorf
  4959   004138  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4960   00413C  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4961   004140  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4962   004144  EF67  F021         	goto	l1541
  4963   004148                     l4640:
  4964   004148  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4965   00414A  EFA9  F020         	goto	u4351
  4966   00414E  EFAB  F020         	goto	u4350
  4967   004152                     u4351:
  4968   004152  EF1B  F021         	goto	l4650
  4969   004156                     u4350:
  4970   004156  C059  F04F         	movff	floorf@e,??_floorf
  4971   00415A  0EFF               	movlw	255
  4972   00415C  6E50               	movwf	(??_floorf+1)^0,c
  4973   00415E  0EFF               	movlw	255
  4974   004160  6E51               	movwf	(??_floorf+2)^0,c
  4975   004162  0E7F               	movlw	127
  4976   004164  6E52               	movwf	(??_floorf+3)^0,c
  4977   004166  0E00               	movlw	0
  4978   004168  6E53               	movwf	(??_floorf+4)^0,c
  4979   00416A                     u4365:
  4980   00416A  664F               	tstfsz	??_floorf^0,c
  4981   00416C  EFBA  F020         	goto	u4366
  4982   004170  EFC2  F020         	goto	u4367
  4983   004174                     u4366:
  4984   004174  3453               	rlcf	(??_floorf+4)^0,w,c
  4985   004176  3253               	rrcf	(??_floorf+4)^0,f,c
  4986   004178  3252               	rrcf	(??_floorf+3)^0,f,c
  4987   00417A  3251               	rrcf	(??_floorf+2)^0,f,c
  4988   00417C  3250               	rrcf	(??_floorf+1)^0,f,c
  4989   00417E  2E4F               	decfsz	??_floorf^0,f,c
  4990   004180  EFB5  F020         	goto	u4365
  4991   004184                     u4367:
  4992   004184  C050  F055         	movff	??_floorf+1,floorf@m
  4993   004188  C051  F056         	movff	??_floorf+2,floorf@m+1
  4994   00418C  C052  F057         	movff	??_floorf+3,floorf@m+2
  4995   004190  C053  F058         	movff	??_floorf+4,floorf@m+3
  4996   004194  5055               	movf	floorf@m^0,w,c
  4997   004196  145B               	andwf	floorf@u^0,w,c
  4998   004198  6E4F               	movwf	??_floorf^0,c
  4999   00419A  5056               	movf	(floorf@m+1)^0,w,c
  5000   00419C  145C               	andwf	(floorf@u+1)^0,w,c
  5001   00419E  6E50               	movwf	(??_floorf+1)^0,c
  5002   0041A0  5057               	movf	(floorf@m+2)^0,w,c
  5003   0041A2  145D               	andwf	(floorf@u+2)^0,w,c
  5004   0041A4  6E51               	movwf	(??_floorf+2)^0,c
  5005   0041A6  5058               	movf	(floorf@m+3)^0,w,c
  5006   0041A8  145E               	andwf	(floorf@u+3)^0,w,c
  5007   0041AA  6E52               	movwf	(??_floorf+3)^0,c
  5008   0041AC  504F               	movf	??_floorf^0,w,c
  5009   0041AE  1050               	iorwf	(??_floorf+1)^0,w,c
  5010   0041B0  1051               	iorwf	(??_floorf+2)^0,w,c
  5011   0041B2  1052               	iorwf	(??_floorf+3)^0,w,c
  5012   0041B4  A4D8               	btfss	status,2,c
  5013   0041B6  EFDF  F020         	goto	u4371
  5014   0041BA  EFE1  F020         	goto	u4370
  5015   0041BE                     u4371:
  5016   0041BE  EFE3  F020         	goto	l4646
  5017   0041C2                     u4370:
  5018   0041C2  EF9A  F020         	goto	l4638
  5019   0041C6                     l4646:
  5020   0041C6  C05B  F04F         	movff	floorf@u,??_floorf
  5021   0041CA  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5022   0041CE  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5023   0041D2  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5024   0041D6  0E20               	movlw	32
  5025   0041D8  EFF3  F020         	goto	u4380
  5026   0041DC                     u4385:
  5027   0041DC  90D8               	bcf	status,0,c
  5028   0041DE  3252               	rrcf	(??_floorf+3)^0,f,c
  5029   0041E0  3251               	rrcf	(??_floorf+2)^0,f,c
  5030   0041E2  3250               	rrcf	(??_floorf+1)^0,f,c
  5031   0041E4  324F               	rrcf	??_floorf^0,f,c
  5032   0041E6                     u4380:
  5033   0041E6  2EE8               	decfsz	wreg,f,c
  5034   0041E8  EFEE  F020         	goto	u4385
  5035   0041EC  504F               	movf	??_floorf^0,w,c
  5036   0041EE  1050               	iorwf	(??_floorf+1)^0,w,c
  5037   0041F0  1051               	iorwf	(??_floorf+2)^0,w,c
  5038   0041F2  1052               	iorwf	(??_floorf+3)^0,w,c
  5039   0041F4  B4D8               	btfsc	status,2,c
  5040   0041F6  EFFF  F020         	goto	u4391
  5041   0041FA  EF01  F021         	goto	u4390
  5042   0041FE                     u4391:
  5043   0041FE  EF09  F021         	goto	l1544
  5044   004202                     u4390:
  5045   004202  5055               	movf	floorf@m^0,w,c
  5046   004204  265B               	addwf	floorf@u^0,f,c
  5047   004206  5056               	movf	(floorf@m+1)^0,w,c
  5048   004208  225C               	addwfc	(floorf@u+1)^0,f,c
  5049   00420A  5057               	movf	(floorf@m+2)^0,w,c
  5050   00420C  225D               	addwfc	(floorf@u+2)^0,f,c
  5051   00420E  5058               	movf	(floorf@m+3)^0,w,c
  5052   004210  225E               	addwfc	(floorf@u+3)^0,f,c
  5053   004212                     l1544:
  5054   004212  1C55               	comf	floorf@m^0,w,c
  5055   004214  6E4F               	movwf	??_floorf^0,c
  5056   004216  1C56               	comf	(floorf@m+1)^0,w,c
  5057   004218  6E50               	movwf	(??_floorf+1)^0,c
  5058   00421A  1C57               	comf	(floorf@m+2)^0,w,c
  5059   00421C  6E51               	movwf	(??_floorf+2)^0,c
  5060   00421E  1C58               	comf	(floorf@m+3)^0,w,c
  5061   004220  6E52               	movwf	(??_floorf+3)^0,c
  5062   004222  504F               	movf	??_floorf^0,w,c
  5063   004224  165B               	andwf	floorf@u^0,f,c
  5064   004226  5050               	movf	(??_floorf+1)^0,w,c
  5065   004228  165C               	andwf	(floorf@u+1)^0,f,c
  5066   00422A  5051               	movf	(??_floorf+2)^0,w,c
  5067   00422C  165D               	andwf	(floorf@u+2)^0,f,c
  5068   00422E  5052               	movf	(??_floorf+3)^0,w,c
  5069   004230  165E               	andwf	(floorf@u+3)^0,f,c
  5070   004232  EF5F  F021         	goto	l4658
  5071   004236                     l4650:
  5072   004236  C05B  F04F         	movff	floorf@u,??_floorf
  5073   00423A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5074   00423E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5075   004242  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5076   004246  0E20               	movlw	32
  5077   004248  EF2B  F021         	goto	u4400
  5078   00424C                     u4405:
  5079   00424C  90D8               	bcf	status,0,c
  5080   00424E  3252               	rrcf	(??_floorf+3)^0,f,c
  5081   004250  3251               	rrcf	(??_floorf+2)^0,f,c
  5082   004252  3250               	rrcf	(??_floorf+1)^0,f,c
  5083   004254  324F               	rrcf	??_floorf^0,f,c
  5084   004256                     u4400:
  5085   004256  2EE8               	decfsz	wreg,f,c
  5086   004258  EF26  F021         	goto	u4405
  5087   00425C  504F               	movf	??_floorf^0,w,c
  5088   00425E  1050               	iorwf	(??_floorf+1)^0,w,c
  5089   004260  1051               	iorwf	(??_floorf+2)^0,w,c
  5090   004262  1052               	iorwf	(??_floorf+3)^0,w,c
  5091   004264  A4D8               	btfss	status,2,c
  5092   004266  EF37  F021         	goto	u4411
  5093   00426A  EF39  F021         	goto	u4410
  5094   00426E                     u4411:
  5095   00426E  EF43  F021         	goto	l4654
  5096   004272                     u4410:
  5097   004272  0E00               	movlw	0
  5098   004274  6E5B               	movwf	floorf@u^0,c
  5099   004276  0E00               	movlw	0
  5100   004278  6E5C               	movwf	(floorf@u+1)^0,c
  5101   00427A  0E00               	movlw	0
  5102   00427C  6E5D               	movwf	(floorf@u+2)^0,c
  5103   00427E  0E00               	movlw	0
  5104   004280  6E5E               	movwf	(floorf@u+3)^0,c
  5105   004282  EF5F  F021         	goto	l4658
  5106   004286                     l4654:
  5107   004286  90D8               	bcf	status,0,c
  5108   004288  345B               	rlcf	floorf@u^0,w,c
  5109   00428A  6E4F               	movwf	??_floorf^0,c
  5110   00428C  345C               	rlcf	(floorf@u+1)^0,w,c
  5111   00428E  6E50               	movwf	(??_floorf+1)^0,c
  5112   004290  345D               	rlcf	(floorf@u+2)^0,w,c
  5113   004292  6E51               	movwf	(??_floorf+2)^0,c
  5114   004294  345E               	rlcf	(floorf@u+3)^0,w,c
  5115   004296  6E52               	movwf	(??_floorf+3)^0,c
  5116   004298  504F               	movf	??_floorf^0,w,c
  5117   00429A  1050               	iorwf	(??_floorf+1)^0,w,c
  5118   00429C  1051               	iorwf	(??_floorf+2)^0,w,c
  5119   00429E  1052               	iorwf	(??_floorf+3)^0,w,c
  5120   0042A0  B4D8               	btfsc	status,2,c
  5121   0042A2  EF55  F021         	goto	u4421
  5122   0042A6  EF57  F021         	goto	u4420
  5123   0042AA                     u4421:
  5124   0042AA  EF5F  F021         	goto	l4658
  5125   0042AE                     u4420:
  5126   0042AE  0E00               	movlw	0
  5127   0042B0  6E5B               	movwf	floorf@u^0,c
  5128   0042B2  0E00               	movlw	0
  5129   0042B4  6E5C               	movwf	(floorf@u+1)^0,c
  5130   0042B6  0E80               	movlw	128
  5131   0042B8  6E5D               	movwf	(floorf@u+2)^0,c
  5132   0042BA  0EBF               	movlw	191
  5133   0042BC  6E5E               	movwf	(floorf@u+3)^0,c
  5134   0042BE                     l4658:
  5135   0042BE  C05B  F04B         	movff	floorf@u,?_floorf
  5136   0042C2  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5137   0042C6  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5138   0042CA  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5139   0042CE                     l1541:
  5140   0042CE  0012               	return		;funcret
  5141   0042D0                     __end_of_floorf:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function ___fpclassifyf *****************
  5145 ;; Defined at:
  5146 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  x               4    0[COMRAM] float 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  u               4   10[COMRAM] struct .
  5151 ;;  e               2    8[COMRAM] int 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[COMRAM] int 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;Total ram usage:       14 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_efgtoa
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text10
  5175   004CC6                     __ptext10:
  5176                           	callstack 0
  5177   004CC6                     ___fpclassifyf:
  5178                           	callstack 26
  5179   004CC6  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5180   004CCA  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5181   004CCE  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5182   004CD2  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5183   004CD6  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5184   004CDA  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5185   004CDE  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5186   004CE2  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5187   004CE6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5188   004CEA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5189   004CEE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5190   004CF2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5191   004CF6  0E18               	movlw	24
  5192   004CF8  EF83  F026         	goto	u4240
  5193   004CFC                     u4245:
  5194   004CFC  90D8               	bcf	status,0,c
  5195   004CFE  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5196   004D00  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5197   004D02  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5198   004D04  3205               	rrcf	??___fpclassifyf^0,f,c
  5199   004D06                     u4240:
  5200   004D06  2EE8               	decfsz	wreg,f,c
  5201   004D08  EF7E  F026         	goto	u4245
  5202   004D0C  5005               	movf	??___fpclassifyf^0,w,c
  5203   004D0E  6E09               	movwf	___fpclassifyf@e^0,c
  5204   004D10  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5205   004D12  5009               	movf	___fpclassifyf@e^0,w,c
  5206   004D14  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5207   004D16  A4D8               	btfss	status,2,c
  5208   004D18  EF90  F026         	goto	u4251
  5209   004D1C  EF92  F026         	goto	u4250
  5210   004D20                     u4251:
  5211   004D20  EFB2  F026         	goto	l4616
  5212   004D24                     u4250:
  5213   004D24  90D8               	bcf	status,0,c
  5214   004D26  340B               	rlcf	___fpclassifyf@u^0,w,c
  5215   004D28  6E05               	movwf	??___fpclassifyf^0,c
  5216   004D2A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5217   004D2C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5218   004D2E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5219   004D30  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5220   004D32  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5221   004D34  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5222   004D36  5005               	movf	??___fpclassifyf^0,w,c
  5223   004D38  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5224   004D3A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5225   004D3C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5226   004D3E  A4D8               	btfss	status,2,c
  5227   004D40  EFA4  F026         	goto	u4261
  5228   004D44  EFA6  F026         	goto	u4260
  5229   004D48                     u4261:
  5230   004D48  EFAC  F026         	goto	l4612
  5231   004D4C                     u4260:
  5232   004D4C  0E00               	movlw	0
  5233   004D4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5234   004D50  0E02               	movlw	2
  5235   004D52  6E01               	movwf	?___fpclassifyf^0,c
  5236   004D54  EFE1  F026         	goto	l1527
  5237   004D58                     l4612:
  5238   004D58  0E00               	movlw	0
  5239   004D5A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5240   004D5C  0E03               	movlw	3
  5241   004D5E  6E01               	movwf	?___fpclassifyf^0,c
  5242   004D60  EFE1  F026         	goto	l1527
  5243   004D64                     l4616:
  5244   004D64  2809               	incf	___fpclassifyf@e^0,w,c
  5245   004D66  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5246   004D68  A4D8               	btfss	status,2,c
  5247   004D6A  EFB9  F026         	goto	u4271
  5248   004D6E  EFBB  F026         	goto	u4270
  5249   004D72                     u4271:
  5250   004D72  EFDD  F026         	goto	l4622
  5251   004D76                     u4270:
  5252   004D76  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5253   004D7A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5254   004D7E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5255   004D82  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5256   004D86  0E09               	movlw	9
  5257   004D88                     u4285:
  5258   004D88  90D8               	bcf	status,0,c
  5259   004D8A  3605               	rlcf	??___fpclassifyf^0,f,c
  5260   004D8C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5261   004D8E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5262   004D90  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5263   004D92  2EE8               	decfsz	wreg,f,c
  5264   004D94  EFC4  F026         	goto	u4285
  5265   004D98  5005               	movf	??___fpclassifyf^0,w,c
  5266   004D9A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5267   004D9C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5268   004D9E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5269   004DA0  B4D8               	btfsc	status,2,c
  5270   004DA2  EFD5  F026         	goto	u4291
  5271   004DA6  EFD8  F026         	goto	u4290
  5272   004DAA                     u4291:
  5273   004DAA  0E01               	movlw	1
  5274   004DAC  EFD9  F026         	goto	u4300
  5275   004DB0                     u4290:
  5276   004DB0  0E00               	movlw	0
  5277   004DB2                     u4300:
  5278   004DB2  6E01               	movwf	?___fpclassifyf^0,c
  5279   004DB4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5280   004DB6  EFE1  F026         	goto	l1527
  5281   004DBA                     l4622:
  5282   004DBA  0E00               	movlw	0
  5283   004DBC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5284   004DBE  0E04               	movlw	4
  5285   004DC0  6E01               	movwf	?___fpclassifyf^0,c
  5286   004DC2                     l1527:
  5287   004DC2  0012               	return		;funcret
  5288   004DC4                     __end_of___fpclassifyf:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function ___fltol *****************
  5292 ;; Defined at:
  5293 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;  f1              4    0[COMRAM] int 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  exp1            1    9[COMRAM] unsigned char 
  5298 ;;  sign1           1    8[COMRAM] unsigned char 
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  4    0[COMRAM] long 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5312 ;;Total ram usage:       10 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_reverseOneBlock
  5318 ;;		_ForwardOneBlock
  5319 ;;		_Forwardhalfblock
  5320 ;;		_efgtoa
  5321 ;;		_Backhalfblock
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text11
  5326   004ABC                     __ptext11:
  5327                           	callstack 0
  5328   004ABC                     ___fltol:
  5329                           	callstack 26
  5330   004ABC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5331   004ABE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5332   004AC0  6E0A               	movwf	___fltol@exp1^0,c
  5333   004AC2  500A               	movf	___fltol@exp1^0,w,c
  5334   004AC4  A4D8               	btfss	status,2,c
  5335   004AC6  EF67  F025         	goto	u4141
  5336   004ACA  EF69  F025         	goto	u4140
  5337   004ACE                     u4141:
  5338   004ACE  EF73  F025         	goto	l4548
  5339   004AD2                     u4140:
  5340   004AD2                     l4544:
  5341   004AD2  0E00               	movlw	0
  5342   004AD4  6E01               	movwf	?___fltol^0,c
  5343   004AD6  0E00               	movlw	0
  5344   004AD8  6E02               	movwf	(?___fltol+1)^0,c
  5345   004ADA  0E00               	movlw	0
  5346   004ADC  6E03               	movwf	(?___fltol+2)^0,c
  5347   004ADE  0E00               	movlw	0
  5348   004AE0  6E04               	movwf	(?___fltol+3)^0,c
  5349   004AE2  EFE0  F025         	goto	l1000
  5350   004AE6                     l4548:
  5351   004AE6  C001  F005         	movff	___fltol@f1,??___fltol
  5352   004AEA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5353   004AEE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5354   004AF2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5355   004AF6  0E20               	movlw	32
  5356   004AF8  EF83  F025         	goto	u4150
  5357   004AFC                     u4155:
  5358   004AFC  90D8               	bcf	status,0,c
  5359   004AFE  3208               	rrcf	(??___fltol+3)^0,f,c
  5360   004B00  3207               	rrcf	(??___fltol+2)^0,f,c
  5361   004B02  3206               	rrcf	(??___fltol+1)^0,f,c
  5362   004B04  3205               	rrcf	??___fltol^0,f,c
  5363   004B06                     u4150:
  5364   004B06  2EE8               	decfsz	wreg,f,c
  5365   004B08  EF7E  F025         	goto	u4155
  5366   004B0C  5005               	movf	??___fltol^0,w,c
  5367   004B0E  6E09               	movwf	___fltol@sign1^0,c
  5368   004B10  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5369   004B12  0EFF               	movlw	255
  5370   004B14  1601               	andwf	___fltol@f1^0,f,c
  5371   004B16  0EFF               	movlw	255
  5372   004B18  1602               	andwf	(___fltol@f1+1)^0,f,c
  5373   004B1A  0EFF               	movlw	255
  5374   004B1C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5375   004B1E  0E00               	movlw	0
  5376   004B20  1604               	andwf	(___fltol@f1+3)^0,f,c
  5377   004B22  0E96               	movlw	150
  5378   004B24  5E0A               	subwf	___fltol@exp1^0,f,c
  5379   004B26  BE0A               	btfsc	___fltol@exp1^0,7,c
  5380   004B28  EF9A  F025         	goto	u4160
  5381   004B2C  EF98  F025         	goto	u4161
  5382   004B30                     u4161:
  5383   004B30  EFB0  F025         	goto	l4568
  5384   004B34                     u4160:
  5385   004B34  500A               	movf	___fltol@exp1^0,w,c
  5386   004B36  0A80               	xorlw	128
  5387   004B38  0F97               	addlw	151
  5388   004B3A  B0D8               	btfsc	status,0,c
  5389   004B3C  EFA2  F025         	goto	u4171
  5390   004B40  EFA4  F025         	goto	u4170
  5391   004B44                     u4171:
  5392   004B44  EFA6  F025         	goto	l4564
  5393   004B48                     u4170:
  5394   004B48  EF69  F025         	goto	l4544
  5395   004B4C                     l4564:
  5396   004B4C  90D8               	bcf	status,0,c
  5397   004B4E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5398   004B50  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5399   004B52  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5400   004B54  3201               	rrcf	___fltol@f1^0,f,c
  5401   004B56  3E0A               	incfsz	___fltol@exp1^0,f,c
  5402   004B58  EFA6  F025         	goto	l4564
  5403   004B5C  EFC8  F025         	goto	l4578
  5404   004B60                     l4568:
  5405   004B60  0E1F               	movlw	31
  5406   004B62  640A               	cpfsgt	___fltol@exp1^0,c
  5407   004B64  EFB6  F025         	goto	u4181
  5408   004B68  EFB8  F025         	goto	u4180
  5409   004B6C                     u4181:
  5410   004B6C  EFC0  F025         	goto	l4576
  5411   004B70                     u4180:
  5412   004B70  EF69  F025         	goto	l4544
  5413   004B74                     l4574:
  5414   004B74  90D8               	bcf	status,0,c
  5415   004B76  3601               	rlcf	___fltol@f1^0,f,c
  5416   004B78  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5417   004B7A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5418   004B7C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5419   004B7E  060A               	decf	___fltol@exp1^0,f,c
  5420   004B80                     l4576:
  5421   004B80  500A               	movf	___fltol@exp1^0,w,c
  5422   004B82  A4D8               	btfss	status,2,c
  5423   004B84  EFC6  F025         	goto	u4191
  5424   004B88  EFC8  F025         	goto	u4190
  5425   004B8C                     u4191:
  5426   004B8C  EFBA  F025         	goto	l4574
  5427   004B90                     u4190:
  5428   004B90                     l4578:
  5429   004B90  5009               	movf	___fltol@sign1^0,w,c
  5430   004B92  B4D8               	btfsc	status,2,c
  5431   004B94  EFCE  F025         	goto	u4201
  5432   004B98  EFD0  F025         	goto	u4200
  5433   004B9C                     u4201:
  5434   004B9C  EFD8  F025         	goto	l4582
  5435   004BA0                     u4200:
  5436   004BA0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5437   004BA2  1E03               	comf	(___fltol@f1+2)^0,f,c
  5438   004BA4  1E02               	comf	(___fltol@f1+1)^0,f,c
  5439   004BA6  6C01               	negf	___fltol@f1^0,c
  5440   004BA8  0E00               	movlw	0
  5441   004BAA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5442   004BAC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5443   004BAE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5444   004BB0                     l4582:
  5445   004BB0  C001  F001         	movff	___fltol@f1,?___fltol
  5446   004BB4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5447   004BB8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5448   004BBC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5449   004BC0                     l1000:
  5450   004BC0  0012               	return		;funcret
  5451   004BC2                     __end_of___fltol:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function ___flneg *****************
  5455 ;; Defined at:
  5456 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  f1              4    0[COMRAM] long 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;		None
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  4    0[COMRAM] long 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;Total ram usage:        4 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		_efgtoa
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           	psect	text12
  5484   005F54                     __ptext12:
  5485                           	callstack 0
  5486   005F54                     ___flneg:
  5487                           	callstack 26
  5488   005F54  5001               	movf	___flneg@f1^0,w,c
  5489   005F56  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5490   005F58  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5491   005F5A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5492   005F5C  B4D8               	btfsc	status,2,c
  5493   005F5E  EFB3  F02F         	goto	u4131
  5494   005F62  EFB5  F02F         	goto	u4130
  5495   005F66                     u4131:
  5496   005F66  EFBD  F02F         	goto	l4538
  5497   005F6A                     u4130:
  5498   005F6A  0E00               	movlw	0
  5499   005F6C  1A01               	xorwf	___flneg@f1^0,f,c
  5500   005F6E  0E00               	movlw	0
  5501   005F70  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5502   005F72  0E00               	movlw	0
  5503   005F74  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5504   005F76  0E80               	movlw	128
  5505   005F78  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5506   005F7A                     l4538:
  5507   005F7A  C001  F001         	movff	___flneg@f1,?___flneg
  5508   005F7E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5509   005F82  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5510   005F86  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5511   005F8A  0012               	return		;funcret
  5512   005F8C                     __end_of___flneg:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _dtoa *****************
  5516 ;; Defined at:
  5517 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5520 ;;		 -> sprintf@f(11), 
  5521 ;;  d               8   29[COMRAM] long long 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  n               8   51[COMRAM] long long 
  5524 ;;  i               2   59[COMRAM] int 
  5525 ;;  w               2   49[COMRAM] int 
  5526 ;;  p               2   47[COMRAM] int 
  5527 ;;  s               1   61[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5537 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;Total ram usage:       35 bytes
  5542 ;; Hardware stack levels used: 1
  5543 ;; Hardware stack levels required when called: 4
  5544 ;; This function calls:
  5545 ;;		___aodiv
  5546 ;;		___aomod
  5547 ;;		_abs
  5548 ;;		_pad
  5549 ;; This function is called by:
  5550 ;;		_vfpfcnvrt
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text13
  5555   003E40                     __ptext13:
  5556                           	callstack 0
  5557   003E40                     _dtoa:
  5558                           	callstack 23
  5559   003E40                     
  5560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5561   003E40  C01E  F034         	movff	dtoa@d,dtoa@n
  5562   003E44  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5563   003E48  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5564   003E4C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5565   003E50  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5566   003E54  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5567   003E58  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5568   003E5C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5569   003E60                     
  5570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5571   003E60  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5572   003E62  EF35  F01F         	goto	u4571
  5573   003E66  EF38  F01F         	goto	u4570
  5574   003E6A                     u4571:
  5575   003E6A  0E01               	movlw	1
  5576   003E6C  EF39  F01F         	goto	u4580
  5577   003E70                     u4570:
  5578   003E70  0E00               	movlw	0
  5579   003E72                     u4580:
  5580   003E72  6E3E               	movwf	dtoa@s^0,c
  5581   003E74                     
  5582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5583   003E74  503E               	movf	dtoa@s^0,w,c
  5584   003E76  B4D8               	btfsc	status,2,c
  5585   003E78  EF40  F01F         	goto	u4591
  5586   003E7C  EF42  F01F         	goto	u4590
  5587   003E80                     u4591:
  5588   003E80  EF52  F01F         	goto	l4762
  5589   003E84                     u4590:
  5590   003E84                     
  5591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5592   003E84  1E3B               	comf	(dtoa@n+7)^0,f,c
  5593   003E86  1E3A               	comf	(dtoa@n+6)^0,f,c
  5594   003E88  1E39               	comf	(dtoa@n+5)^0,f,c
  5595   003E8A  1E38               	comf	(dtoa@n+4)^0,f,c
  5596   003E8C  1E37               	comf	(dtoa@n+3)^0,f,c
  5597   003E8E  1E36               	comf	(dtoa@n+2)^0,f,c
  5598   003E90  1E35               	comf	(dtoa@n+1)^0,f,c
  5599   003E92  6C34               	negf	dtoa@n^0,c
  5600   003E94  0E00               	movlw	0
  5601   003E96  2235               	addwfc	(dtoa@n+1)^0,f,c
  5602   003E98  2236               	addwfc	(dtoa@n+2)^0,f,c
  5603   003E9A  2237               	addwfc	(dtoa@n+3)^0,f,c
  5604   003E9C  2238               	addwfc	(dtoa@n+4)^0,f,c
  5605   003E9E  2239               	addwfc	(dtoa@n+5)^0,f,c
  5606   003EA0  223A               	addwfc	(dtoa@n+6)^0,f,c
  5607   003EA2  223B               	addwfc	(dtoa@n+7)^0,f,c
  5608   003EA4                     l4762:
  5609                           
  5610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5611   003EA4  0100               	movlb	0	; () banked
  5612   003EA6  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5613   003EA8  EF60  F01F         	goto	u4600
  5614   003EAC  51F2               	movf	(_prec+1)& (0+255),w,b
  5615   003EAE  E106               	bnz	u4601
  5616   003EB0  05F1               	decf	_prec& (0+255),w,b
  5617   003EB2  B0D8               	btfsc	status,0,c
  5618   003EB4  EF5E  F01F         	goto	u4601
  5619   003EB8  EF60  F01F         	goto	u4600
  5620   003EBC                     u4601:
  5621   003EBC  EF66  F01F         	goto	l1422
  5622   003EC0                     u4600:
  5623   003EC0                     
  5624                           ; BSR set to: 0
  5625   003EC0  0E00               	movlw	0
  5626   003EC2  6E31               	movwf	(dtoa@p+1)^0,c
  5627   003EC4  0E01               	movlw	1
  5628   003EC6  6E30               	movwf	dtoa@p^0,c
  5629   003EC8  EF6A  F01F         	goto	l1424
  5630   003ECC                     l1422:
  5631                           
  5632                           ; BSR set to: 0
  5633   003ECC  C0F1  F030         	movff	_prec,dtoa@p
  5634   003ED0  C0F2  F031         	movff	_prec+1,dtoa@p+1
  5635   003ED4                     l1424:
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5639   003ED4  C0EF  F032         	movff	_width,dtoa@w
  5640   003ED8  C0F0  F033         	movff	_width+1,dtoa@w+1
  5641   003EDC                     
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5644   003EDC  503E               	movf	dtoa@s^0,w,c
  5645   003EDE  B4D8               	btfsc	status,2,c
  5646   003EE0  EF74  F01F         	goto	u4611
  5647   003EE4  EF76  F01F         	goto	u4610
  5648   003EE8                     u4611:
  5649   003EE8  EF8D  F01F         	goto	l1425
  5650   003EEC                     u4610:
  5651   003EEC                     
  5652                           ; BSR set to: 0
  5653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5654   003EEC  0632               	decf	dtoa@w^0,f,c
  5655   003EEE  A0D8               	btfss	status,0,c
  5656   003EF0  0633               	decf	(dtoa@w+1)^0,f,c
  5657   003EF2                     
  5658                           ; BSR set to: 0
  5659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5660   003EF2  503E               	movf	dtoa@s^0,w,c
  5661   003EF4  A4D8               	btfss	status,2,c
  5662   003EF6  EF7F  F01F         	goto	u4621
  5663   003EFA  EF81  F01F         	goto	u4620
  5664   003EFE                     u4621:
  5665   003EFE  EF87  F01F         	goto	l4774
  5666   003F02                     u4620:
  5667   003F02                     
  5668                           ; BSR set to: 0
  5669   003F02  0E00               	movlw	0
  5670   003F04  6E2F               	movwf	(_dtoa$2759+1)^0,c
  5671   003F06  0E2B               	movlw	43
  5672   003F08  6E2E               	movwf	_dtoa$2759^0,c
  5673   003F0A  EF8B  F01F         	goto	l4776
  5674   003F0E                     l4774:
  5675                           
  5676                           ; BSR set to: 0
  5677   003F0E  0E00               	movlw	0
  5678   003F10  6E2F               	movwf	(_dtoa$2759+1)^0,c
  5679   003F12  0E2D               	movlw	45
  5680   003F14  6E2E               	movwf	_dtoa$2759^0,c
  5681   003F16                     l4776:
  5682                           
  5683                           ; BSR set to: 0
  5684   003F16  C02E  F03E         	movff	_dtoa$2759,dtoa@s
  5685   003F1A                     l1425:
  5686                           
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5689   003F1A  0E00               	movlw	0
  5690   003F1C  6E3D               	movwf	(dtoa@i+1)^0,c
  5691   003F1E  0E4F               	movlw	79
  5692   003F20  6E3C               	movwf	dtoa@i^0,c
  5693   003F22                     
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5696   003F22  0E00               	movlw	0
  5697   003F24  0102               	movlb	2	; () banked
  5698   003F26  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5701   003F28  EF12  F020         	goto	l4790
  5702   003F2C                     l4780:
  5703                           
  5704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5705   003F2C  063C               	decf	dtoa@i^0,f,c
  5706   003F2E  A0D8               	btfss	status,0,c
  5707   003F30  063D               	decf	(dtoa@i+1)^0,f,c
  5708   003F32                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5710   003F32  0EA0               	movlw	low _dbuf
  5711   003F34  243C               	addwf	dtoa@i^0,w,c
  5712   003F36  6ED9               	movwf	fsr2l,c
  5713   003F38  0E02               	movlw	high _dbuf
  5714   003F3A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5715   003F3C  6EDA               	movwf	fsr2h,c
  5716   003F3E  C034  F001         	movff	dtoa@n,___aomod@dividend
  5717   003F42  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5718   003F46  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5719   003F4A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5720   003F4E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5721   003F52  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5722   003F56  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5723   003F5A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5724   003F5E  0E0A               	movlw	10
  5725   003F60  6E09               	movwf	___aomod@divisor^0,c
  5726   003F62  0E00               	movlw	0
  5727   003F64  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5728   003F66  0E00               	movlw	0
  5729   003F68  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5730   003F6A  0E00               	movlw	0
  5731   003F6C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5732   003F6E  0E00               	movlw	0
  5733   003F70  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5734   003F72  0E00               	movlw	0
  5735   003F74  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5736   003F76  0E00               	movlw	0
  5737   003F78  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5738   003F7A  0E00               	movlw	0
  5739   003F7C  6E10               	movwf	(___aomod@divisor+7)^0,c
  5740   003F7E  ECAC  F024         	call	___aomod	;wreg free
  5741   003F82  C001  F026         	movff	?___aomod,??_dtoa
  5742   003F86  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5743   003F8A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5744   003F8E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5745   003F92  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5746   003F96  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5747   003F9A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5748   003F9E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5749   003FA2  C026  F013         	movff	??_dtoa,abs@a
  5750   003FA6  C027  F014         	movff	??_dtoa+1,abs@a+1
  5751   003FAA  EC4C  F02F         	call	_abs	;wreg free
  5752   003FAE  5013               	movf	?_abs^0,w,c
  5753   003FB0  0F30               	addlw	48
  5754   003FB2  6EDF               	movwf	indf2,c
  5755   003FB4                     
  5756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5757   003FB4  0630               	decf	dtoa@p^0,f,c
  5758   003FB6  A0D8               	btfss	status,0,c
  5759   003FB8  0631               	decf	(dtoa@p+1)^0,f,c
  5760   003FBA                     
  5761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5762   003FBA  0632               	decf	dtoa@w^0,f,c
  5763   003FBC  A0D8               	btfss	status,0,c
  5764   003FBE  0633               	decf	(dtoa@w+1)^0,f,c
  5765   003FC0                     
  5766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5767   003FC0  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5768   003FC4  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5769   003FC8  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5770   003FCC  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5771   003FD0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5772   003FD4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5773   003FD8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5774   003FDC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5775   003FE0  0E0A               	movlw	10
  5776   003FE2  6E09               	movwf	___aodiv@divisor^0,c
  5777   003FE4  0E00               	movlw	0
  5778   003FE6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5779   003FE8  0E00               	movlw	0
  5780   003FEA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5781   003FEC  0E00               	movlw	0
  5782   003FEE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5783   003FF0  0E00               	movlw	0
  5784   003FF2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5785   003FF4  0E00               	movlw	0
  5786   003FF6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5787   003FF8  0E00               	movlw	0
  5788   003FFA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5789   003FFC  0E00               	movlw	0
  5790   003FFE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5791   004000  EC32  F023         	call	___aodiv	;wreg free
  5792   004004  C001  F034         	movff	?___aodiv,dtoa@n
  5793   004008  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5794   00400C  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5795   004010  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5796   004014  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5797   004018  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5798   00401C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5799   004020  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5800   004024                     l4790:
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5803   004024  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5804   004026  EF1D  F020         	goto	u4631
  5805   00402A  503D               	movf	(dtoa@i+1)^0,w,c
  5806   00402C  E108               	bnz	u4630
  5807   00402E  043C               	decf	dtoa@i^0,w,c
  5808   004030  A0D8               	btfss	status,0,c
  5809   004032  EF1D  F020         	goto	u4631
  5810   004036  EF1F  F020         	goto	u4630
  5811   00403A                     u4631:
  5812   00403A  EF3B  F020         	goto	l4796
  5813   00403E                     u4630:
  5814   00403E  5034               	movf	dtoa@n^0,w,c
  5815   004040  1035               	iorwf	(dtoa@n+1)^0,w,c
  5816   004042  1036               	iorwf	(dtoa@n+2)^0,w,c
  5817   004044  1037               	iorwf	(dtoa@n+3)^0,w,c
  5818   004046  1038               	iorwf	(dtoa@n+4)^0,w,c
  5819   004048  1039               	iorwf	(dtoa@n+5)^0,w,c
  5820   00404A  103A               	iorwf	(dtoa@n+6)^0,w,c
  5821   00404C  103B               	iorwf	(dtoa@n+7)^0,w,c
  5822   00404E  A4D8               	btfss	status,2,c
  5823   004050  EF2C  F020         	goto	u4641
  5824   004054  EF2E  F020         	goto	u4640
  5825   004058                     u4641:
  5826   004058  EF96  F01F         	goto	l4780
  5827   00405C                     u4640:
  5828   00405C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5829   00405E  EF3B  F020         	goto	u4650
  5830   004062  5031               	movf	(dtoa@p+1)^0,w,c
  5831   004064  E106               	bnz	u4651
  5832   004066  0430               	decf	dtoa@p^0,w,c
  5833   004068  B0D8               	btfsc	status,0,c
  5834   00406A  EF39  F020         	goto	u4651
  5835   00406E  EF3B  F020         	goto	u4650
  5836   004072                     u4651:
  5837   004072  EF96  F01F         	goto	l4780
  5838   004076                     u4650:
  5839   004076                     l4796:
  5840                           
  5841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5842   004076  503E               	movf	dtoa@s^0,w,c
  5843   004078  B4D8               	btfsc	status,2,c
  5844   00407A  EF41  F020         	goto	u4661
  5845   00407E  EF43  F020         	goto	u4660
  5846   004082                     u4661:
  5847   004082  EF4E  F020         	goto	l4802
  5848   004086                     u4660:
  5849   004086                     
  5850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5851   004086  063C               	decf	dtoa@i^0,f,c
  5852   004088  A0D8               	btfss	status,0,c
  5853   00408A  063D               	decf	(dtoa@i+1)^0,f,c
  5854   00408C                     
  5855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5856   00408C  0EA0               	movlw	low _dbuf
  5857   00408E  243C               	addwf	dtoa@i^0,w,c
  5858   004090  6ED9               	movwf	fsr2l,c
  5859   004092  0E02               	movlw	high _dbuf
  5860   004094  203D               	addwfc	(dtoa@i+1)^0,w,c
  5861   004096  6EDA               	movwf	fsr2h,c
  5862   004098  C03E  FFDF         	movff	dtoa@s,indf2
  5863   00409C                     l4802:
  5864                           
  5865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5866   00409C  C01C  F011         	movff	dtoa@fp,pad@fp
  5867   0040A0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5868   0040A4  0EA0               	movlw	low _dbuf
  5869   0040A6  243C               	addwf	dtoa@i^0,w,c
  5870   0040A8  6E13               	movwf	pad@buf^0,c
  5871   0040AA  0E02               	movlw	high _dbuf
  5872   0040AC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5873   0040AE  6E14               	movwf	(pad@buf+1)^0,c
  5874   0040B0  C032  F015         	movff	dtoa@w,pad@p
  5875   0040B4  C033  F016         	movff	dtoa@w+1,pad@p+1
  5876   0040B8  ECA7  F02A         	call	_pad	;wreg free
  5877   0040BC  0012               	return		;funcret
  5878   0040BE                     __end_of_dtoa:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _pad *****************
  5882 ;; Defined at:
  5883 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5886 ;;		 -> sprintf@f(11), 
  5887 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5888 ;;		 -> dbuf(80), 
  5889 ;;  p               2   20[COMRAM] int 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  w               2   25[COMRAM] int 
  5892 ;;  i               2   23[COMRAM] int 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      void 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5902 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5905 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5906 ;;Total ram usage:       11 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 3
  5909 ;; This function calls:
  5910 ;;		_fputc
  5911 ;;		_fputs
  5912 ;; This function is called by:
  5913 ;;		_dtoa
  5914 ;;		_efgtoa
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text14
  5919   00554E                     __ptext14:
  5920                           	callstack 0
  5921   00554E                     _pad:
  5922                           	callstack 23
  5923   00554E                     
  5924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5925   00554E  BE16               	btfsc	(pad@p+1)^0,7,c
  5926   005550  EFAC  F02A         	goto	u4211
  5927   005554  EFAE  F02A         	goto	u4210
  5928   005558                     u4211:
  5929   005558  EFB4  F02A         	goto	l4590
  5930   00555C                     u4210:
  5931   00555C  C015  F01A         	movff	pad@p,pad@w
  5932   005560  C016  F01B         	movff	pad@p+1,pad@w+1
  5933   005564  EFB8  F02A         	goto	l1413
  5934   005568                     l4590:
  5935   005568  0E00               	movlw	0
  5936   00556A  6E1B               	movwf	(pad@w+1)^0,c
  5937   00556C  0E00               	movlw	0
  5938   00556E  6E1A               	movwf	pad@w^0,c
  5939   005570                     l1413:
  5940                           
  5941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5942   005570  0E00               	movlw	0
  5943   005572  6E19               	movwf	(pad@i+1)^0,c
  5944   005574  0E00               	movlw	0
  5945   005576  6E18               	movwf	pad@i^0,c
  5946                           
  5947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5948   005578  EFCA  F02A         	goto	l4596
  5949   00557C                     l4592:
  5950                           
  5951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5952   00557C  0E00               	movlw	0
  5953   00557E  6E02               	movwf	(fputc@c+1)^0,c
  5954   005580  0E20               	movlw	32
  5955   005582  6E01               	movwf	fputc@c^0,c
  5956   005584  C011  F003         	movff	pad@fp,fputc@fp
  5957   005588  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5958   00558C  ECE2  F026         	call	_fputc	;wreg free
  5959   005590                     
  5960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5961   005590  4A18               	infsnz	pad@i^0,f,c
  5962   005592  2A19               	incf	(pad@i+1)^0,f,c
  5963   005594                     l4596:
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5966   005594  501A               	movf	pad@w^0,w,c
  5967   005596  5C18               	subwf	pad@i^0,w,c
  5968   005598  5019               	movf	(pad@i+1)^0,w,c
  5969   00559A  0A80               	xorlw	128
  5970   00559C  6E17               	movwf	??_pad^0,c
  5971   00559E  501B               	movf	(pad@w+1)^0,w,c
  5972   0055A0  0A80               	xorlw	128
  5973   0055A2  5817               	subwfb	??_pad^0,w,c
  5974   0055A4  A0D8               	btfss	status,0,c
  5975   0055A6  EFD7  F02A         	goto	u4221
  5976   0055AA  EFD9  F02A         	goto	u4220
  5977   0055AE                     u4221:
  5978   0055AE  EFBE  F02A         	goto	l4592
  5979   0055B2                     u4220:
  5980   0055B2                     
  5981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5982   0055B2  C013  F00A         	movff	pad@buf,fputs@s
  5983   0055B6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5984   0055BA  C011  F00C         	movff	pad@fp,fputs@fp
  5985   0055BE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5986   0055C2  EC09  F02F         	call	_fputs	;wreg free
  5987   0055C6  0012               	return		;funcret
  5988   0055C8                     __end_of_pad:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _fputs *****************
  5992 ;; Defined at:
  5993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5996 ;;		 -> dbuf(80), 
  5997 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5998 ;;		 -> sprintf@f(11), 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  i               2   14[COMRAM] int 
  6001 ;;  c               1   13[COMRAM] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  2    9[COMRAM] int 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;Total ram usage:        7 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 2
  6018 ;; This function calls:
  6019 ;;		_fputc
  6020 ;; This function is called by:
  6021 ;;		_pad
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text15
  6026   005E12                     __ptext15:
  6027                           	callstack 0
  6028   005E12                     _fputs:
  6029                           	callstack 23
  6030   005E12  0E00               	movlw	0
  6031   005E14  6E10               	movwf	(fputs@i+1)^0,c
  6032   005E16  0E00               	movlw	0
  6033   005E18  6E0F               	movwf	fputs@i^0,c
  6034   005E1A  EF1A  F02F         	goto	l4124
  6035   005E1E                     l4120:
  6036   005E1E  C00E  F001         	movff	fputs@c,fputc@c
  6037   005E22  6A02               	clrf	(fputc@c+1)^0,c
  6038   005E24  C00C  F003         	movff	fputs@fp,fputc@fp
  6039   005E28  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6040   005E2C  ECE2  F026         	call	_fputc	;wreg free
  6041   005E30  4A0F               	infsnz	fputs@i^0,f,c
  6042   005E32  2A10               	incf	(fputs@i+1)^0,f,c
  6043   005E34                     l4124:
  6044   005E34  500F               	movf	fputs@i^0,w,c
  6045   005E36  240A               	addwf	fputs@s^0,w,c
  6046   005E38  6ED9               	movwf	fsr2l,c
  6047   005E3A  5010               	movf	(fputs@i+1)^0,w,c
  6048   005E3C  200B               	addwfc	(fputs@s+1)^0,w,c
  6049   005E3E  6EDA               	movwf	fsr2h,c
  6050   005E40  50DF               	movf	indf2,w,c
  6051   005E42  6E0E               	movwf	fputs@c^0,c
  6052   005E44  500E               	movf	fputs@c^0,w,c
  6053   005E46  A4D8               	btfss	status,2,c
  6054   005E48  EF28  F02F         	goto	u3471
  6055   005E4C  EF2A  F02F         	goto	u3470
  6056   005E50                     u3471:
  6057   005E50  EF0F  F02F         	goto	l4120
  6058   005E54                     u3470:
  6059   005E54  0012               	return		;funcret
  6060   005E56                     __end_of_fputs:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _fputc *****************
  6064 ;; Defined at:
  6065 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  c               2    0[COMRAM] int 
  6068 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6069 ;;		 -> sprintf@f(11), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  2    0[COMRAM] int 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;Total ram usage:        9 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 1
  6088 ;; This function calls:
  6089 ;;		_putch
  6090 ;; This function is called by:
  6091 ;;		_pad
  6092 ;;		_vfpfcnvrt
  6093 ;;		_fputs
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text16
  6098   004DC4                     __ptext16:
  6099                           	callstack 0
  6100   004DC4                     _fputc:
  6101                           	callstack 26
  6102   004DC4  5003               	movf	fputc@fp^0,w,c
  6103   004DC6  1004               	iorwf	(fputc@fp+1)^0,w,c
  6104   004DC8  B4D8               	btfsc	status,2,c
  6105   004DCA  EFE9  F026         	goto	u3011
  6106   004DCE  EFEB  F026         	goto	u3010
  6107   004DD2                     u3011:
  6108   004DD2  EFF4  F026         	goto	l3878
  6109   004DD6                     u3010:
  6110   004DD6  5003               	movf	fputc@fp^0,w,c
  6111   004DD8  1004               	iorwf	(fputc@fp+1)^0,w,c
  6112   004DDA  A4D8               	btfss	status,2,c
  6113   004DDC  EFF2  F026         	goto	u3021
  6114   004DE0  EFF4  F026         	goto	u3020
  6115   004DE4                     u3021:
  6116   004DE4  EFF9  F026         	goto	l3880
  6117   004DE8                     u3020:
  6118   004DE8                     l3878:
  6119   004DE8  5001               	movf	fputc@c^0,w,c
  6120   004DEA  ECB8  F030         	call	_putch
  6121   004DEE  EF46  F027         	goto	l1573
  6122   004DF2                     l3880:
  6123   004DF2  EE20 F009          	lfsr	2,9
  6124   004DF6  5003               	movf	fputc@fp^0,w,c
  6125   004DF8  26D9               	addwf	fsr2l,f,c
  6126   004DFA  5004               	movf	(fputc@fp+1)^0,w,c
  6127   004DFC  22DA               	addwfc	fsr2h,f,c
  6128   004DFE  50DE               	movf	postinc2,w,c
  6129   004E00  10DE               	iorwf	postinc2,w,c
  6130   004E02  B4D8               	btfsc	status,2,c
  6131   004E04  EF06  F027         	goto	u3031
  6132   004E08  EF08  F027         	goto	u3030
  6133   004E0C                     u3031:
  6134   004E0C  EF23  F027         	goto	l3884
  6135   004E10                     u3030:
  6136   004E10  EE20 F009          	lfsr	2,9
  6137   004E14  5003               	movf	fputc@fp^0,w,c
  6138   004E16  26D9               	addwf	fsr2l,f,c
  6139   004E18  5004               	movf	(fputc@fp+1)^0,w,c
  6140   004E1A  22DA               	addwfc	fsr2h,f,c
  6141   004E1C  EE10 F003          	lfsr	1,3
  6142   004E20  5003               	movf	fputc@fp^0,w,c
  6143   004E22  26E1               	addwf	fsr1l,f,c
  6144   004E24  5004               	movf	(fputc@fp+1)^0,w,c
  6145   004E26  22E2               	addwfc	fsr1h,f,c
  6146   004E28  50DE               	movf	postinc2,w,c
  6147   004E2A  5CE6               	subwf	postinc1,w,c
  6148   004E2C  50E6               	movf	postinc1,w,c
  6149   004E2E  0A80               	xorlw	128
  6150   004E30  6E09               	movwf	(??_fputc+4)^0,c
  6151   004E32  50DE               	movf	postinc2,w,c
  6152   004E34  0A80               	xorlw	128
  6153   004E36  5809               	subwfb	(??_fputc+4)^0,w,c
  6154   004E38  B0D8               	btfsc	status,0,c
  6155   004E3A  EF21  F027         	goto	u3041
  6156   004E3E  EF23  F027         	goto	u3040
  6157   004E42                     u3041:
  6158   004E42  EF46  F027         	goto	l1573
  6159   004E46                     u3040:
  6160   004E46                     l3884:
  6161   004E46  EE20 F003          	lfsr	2,3
  6162   004E4A  5003               	movf	fputc@fp^0,w,c
  6163   004E4C  26D9               	addwf	fsr2l,f,c
  6164   004E4E  5004               	movf	(fputc@fp+1)^0,w,c
  6165   004E50  22DA               	addwfc	fsr2h,f,c
  6166   004E52  CFDE F005          	movff	postinc2,??_fputc
  6167   004E56  CFDD F006          	movff	postdec2,??_fputc+1
  6168   004E5A  C003  FFD9         	movff	fputc@fp,fsr2l
  6169   004E5E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6170   004E62  CFDE F007          	movff	postinc2,??_fputc+2
  6171   004E66  CFDD F008          	movff	postdec2,??_fputc+3
  6172   004E6A  5005               	movf	??_fputc^0,w,c
  6173   004E6C  2407               	addwf	(??_fputc+2)^0,w,c
  6174   004E6E  6ED9               	movwf	fsr2l,c
  6175   004E70  5006               	movf	(??_fputc+1)^0,w,c
  6176   004E72  2008               	addwfc	(??_fputc+3)^0,w,c
  6177   004E74  6EDA               	movwf	fsr2h,c
  6178   004E76  C001  FFDF         	movff	fputc@c,indf2
  6179   004E7A  EE20 F003          	lfsr	2,3
  6180   004E7E  5003               	movf	fputc@fp^0,w,c
  6181   004E80  26D9               	addwf	fsr2l,f,c
  6182   004E82  5004               	movf	(fputc@fp+1)^0,w,c
  6183   004E84  22DA               	addwfc	fsr2h,f,c
  6184   004E86  2ADE               	incf	postinc2,f,c
  6185   004E88  0E00               	movlw	0
  6186   004E8A  22DD               	addwfc	postdec2,f,c
  6187   004E8C                     l1573:
  6188   004E8C  0012               	return		;funcret
  6189   004E8E                     __end_of_fputc:
  6190                           	callstack 0
  6191                           
  6192 ;; *************** function _putch *****************
  6193 ;; Defined at:
  6194 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  c               1    wreg     unsigned char 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  c               1    0[COMRAM] unsigned char 
  6199 ;; Return value:  Size  Location     Type
  6200 ;;                  1    wreg      void 
  6201 ;; Registers used:
  6202 ;;		wreg
  6203 ;; Tracked objects:
  6204 ;;		On entry : 0/0
  6205 ;;		On exit  : 0/0
  6206 ;;		Unchanged: 0/0
  6207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6212 ;;Total ram usage:        0 bytes
  6213 ;; Hardware stack levels used: 1
  6214 ;; This function calls:
  6215 ;;		Nothing
  6216 ;; This function is called by:
  6217 ;;		_fputc
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text17
  6222   006170                     __ptext17:
  6223                           	callstack 0
  6224   006170                     _putch:
  6225                           	callstack 26
  6226   006170  0012               	return		;funcret
  6227   006172                     __end_of_putch:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _abs *****************
  6231 ;; Defined at:
  6232 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  a               2   18[COMRAM] int 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  2   18[COMRAM] int 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;Total ram usage:        4 bytes
  6251 ;; Hardware stack levels used: 1
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_dtoa
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text18
  6260   005E98                     __ptext18:
  6261                           	callstack 0
  6262   005E98                     _abs:
  6263                           	callstack 26
  6264   005E98  BE14               	btfsc	(abs@a+1)^0,7,c
  6265   005E9A  EF59  F02F         	goto	u4230
  6266   005E9E  5014               	movf	(abs@a+1)^0,w,c
  6267   005EA0  E106               	bnz	u4231
  6268   005EA2  0413               	decf	abs@a^0,w,c
  6269   005EA4  B0D8               	btfsc	status,0,c
  6270   005EA6  EF57  F02F         	goto	u4231
  6271   005EAA  EF59  F02F         	goto	u4230
  6272   005EAE                     u4231:
  6273   005EAE  EF67  F02F         	goto	l1532
  6274   005EB2                     u4230:
  6275   005EB2  C013  F015         	movff	abs@a,??_abs
  6276   005EB6  C014  F016         	movff	abs@a+1,??_abs+1
  6277   005EBA  1E15               	comf	??_abs^0,f,c
  6278   005EBC  1E16               	comf	(??_abs+1)^0,f,c
  6279   005EBE  4A15               	infsnz	??_abs^0,f,c
  6280   005EC0  2A16               	incf	(??_abs+1)^0,f,c
  6281   005EC2  C015  F013         	movff	??_abs,?_abs
  6282   005EC6  C016  F014         	movff	??_abs+1,?_abs+1
  6283   005ECA  EF6B  F02F         	goto	l1535
  6284   005ECE                     l1532:
  6285   005ECE  C013  F013         	movff	abs@a,?_abs
  6286   005ED2  C014  F014         	movff	abs@a+1,?_abs+1
  6287   005ED6                     l1535:
  6288   005ED6  0012               	return		;funcret
  6289   005ED8                     __end_of_abs:
  6290                           	callstack 0
  6291                           
  6292 ;; *************** function ___aomod *****************
  6293 ;; Defined at:
  6294 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  dividend        8    0[COMRAM] long long 
  6297 ;;  divisor         8    8[COMRAM] long long 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  sign            1   17[COMRAM] unsigned char 
  6300 ;;  counter         1   16[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  8    0[COMRAM] long long 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6310 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;Total ram usage:       18 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_dtoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text19
  6324   004958                     __ptext19:
  6325                           	callstack 0
  6326   004958                     ___aomod:
  6327                           	callstack 26
  6328   004958  0E00               	movlw	0
  6329   00495A  6E12               	movwf	___aomod@sign^0,c
  6330   00495C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6331   00495E  EFB5  F024         	goto	u3570
  6332   004962  EFB3  F024         	goto	u3571
  6333   004966                     u3571:
  6334   004966  EFC7  F024         	goto	l4194
  6335   00496A                     u3570:
  6336   00496A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6337   00496C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6338   00496E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6339   004970  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6340   004972  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6341   004974  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6342   004976  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6343   004978  6C01               	negf	___aomod@dividend^0,c
  6344   00497A  0E00               	movlw	0
  6345   00497C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6346   00497E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6347   004980  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6348   004982  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6349   004984  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6350   004986  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6351   004988  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6352   00498A  0E01               	movlw	1
  6353   00498C  6E12               	movwf	___aomod@sign^0,c
  6354   00498E                     l4194:
  6355   00498E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6356   004990  EFCE  F024         	goto	u3580
  6357   004994  EFCC  F024         	goto	u3581
  6358   004998                     u3581:
  6359   004998  EFDE  F024         	goto	l4198
  6360   00499C                     u3580:
  6361   00499C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6362   00499E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6363   0049A0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6364   0049A2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6365   0049A4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6366   0049A6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6367   0049A8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6368   0049AA  6C09               	negf	___aomod@divisor^0,c
  6369   0049AC  0E00               	movlw	0
  6370   0049AE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6371   0049B0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6372   0049B2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6373   0049B4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6374   0049B6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6375   0049B8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6376   0049BA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6377   0049BC                     l4198:
  6378   0049BC  5009               	movf	___aomod@divisor^0,w,c
  6379   0049BE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6380   0049C0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6381   0049C2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6382   0049C4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6383   0049C6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6384   0049C8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6385   0049CA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6386   0049CC  B4D8               	btfsc	status,2,c
  6387   0049CE  EFEB  F024         	goto	u3591
  6388   0049D2  EFED  F024         	goto	u3590
  6389   0049D6                     u3591:
  6390   0049D6  EF35  F025         	goto	l4214
  6391   0049DA                     u3590:
  6392   0049DA  0E01               	movlw	1
  6393   0049DC  6E11               	movwf	___aomod@counter^0,c
  6394   0049DE  EFFB  F024         	goto	l4204
  6395   0049E2                     l4202:
  6396   0049E2  90D8               	bcf	status,0,c
  6397   0049E4  3609               	rlcf	___aomod@divisor^0,f,c
  6398   0049E6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6399   0049E8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6400   0049EA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6401   0049EC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6402   0049EE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6403   0049F0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6404   0049F2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6405   0049F4  2A11               	incf	___aomod@counter^0,f,c
  6406   0049F6                     l4204:
  6407   0049F6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6408   0049F8  EF00  F025         	goto	u3601
  6409   0049FC  EF02  F025         	goto	u3600
  6410   004A00                     u3601:
  6411   004A00  EFF1  F024         	goto	l4202
  6412   004A04                     u3600:
  6413   004A04                     l4206:
  6414   004A04  5009               	movf	___aomod@divisor^0,w,c
  6415   004A06  5C01               	subwf	___aomod@dividend^0,w,c
  6416   004A08  500A               	movf	(___aomod@divisor+1)^0,w,c
  6417   004A0A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6418   004A0C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6419   004A0E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6420   004A10  500C               	movf	(___aomod@divisor+3)^0,w,c
  6421   004A12  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6422   004A14  500D               	movf	(___aomod@divisor+4)^0,w,c
  6423   004A16  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6424   004A18  500E               	movf	(___aomod@divisor+5)^0,w,c
  6425   004A1A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6426   004A1C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6427   004A1E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6428   004A20  5010               	movf	(___aomod@divisor+7)^0,w,c
  6429   004A22  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6430   004A24  A0D8               	btfss	status,0,c
  6431   004A26  EF17  F025         	goto	u3611
  6432   004A2A  EF19  F025         	goto	u3610
  6433   004A2E                     u3611:
  6434   004A2E  EF29  F025         	goto	l4210
  6435   004A32                     u3610:
  6436   004A32  5009               	movf	___aomod@divisor^0,w,c
  6437   004A34  5E01               	subwf	___aomod@dividend^0,f,c
  6438   004A36  500A               	movf	(___aomod@divisor+1)^0,w,c
  6439   004A38  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6440   004A3A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6441   004A3C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6442   004A3E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6443   004A40  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6444   004A42  500D               	movf	(___aomod@divisor+4)^0,w,c
  6445   004A44  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6446   004A46  500E               	movf	(___aomod@divisor+5)^0,w,c
  6447   004A48  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6448   004A4A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6449   004A4C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6450   004A4E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6451   004A50  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6452   004A52                     l4210:
  6453   004A52  90D8               	bcf	status,0,c
  6454   004A54  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6455   004A56  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6456   004A58  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6457   004A5A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6458   004A5C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6459   004A5E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6460   004A60  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6461   004A62  3209               	rrcf	___aomod@divisor^0,f,c
  6462   004A64  2E11               	decfsz	___aomod@counter^0,f,c
  6463   004A66  EF02  F025         	goto	l4206
  6464   004A6A                     l4214:
  6465   004A6A  5012               	movf	___aomod@sign^0,w,c
  6466   004A6C  B4D8               	btfsc	status,2,c
  6467   004A6E  EF3B  F025         	goto	u3621
  6468   004A72  EF3D  F025         	goto	u3620
  6469   004A76                     u3621:
  6470   004A76  EF4D  F025         	goto	l4218
  6471   004A7A                     u3620:
  6472   004A7A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6473   004A7C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6474   004A7E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6475   004A80  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6476   004A82  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6477   004A84  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6478   004A86  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6479   004A88  6C01               	negf	___aomod@dividend^0,c
  6480   004A8A  0E00               	movlw	0
  6481   004A8C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6482   004A8E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6483   004A90  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6484   004A92  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6485   004A94  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6486   004A96  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6487   004A98  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6488   004A9A                     l4218:
  6489   004A9A  C001  F001         	movff	___aomod@dividend,?___aomod
  6490   004A9E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6491   004AA2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6492   004AA6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6493   004AAA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6494   004AAE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6495   004AB2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6496   004AB6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6497   004ABA  0012               	return		;funcret
  6498   004ABC                     __end_of___aomod:
  6499                           	callstack 0
  6500                           
  6501 ;; *************** function ___aodiv *****************
  6502 ;; Defined at:
  6503 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  dividend        8    0[COMRAM] long long 
  6506 ;;  divisor         8    8[COMRAM] long long 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  quotient        8   18[COMRAM] long long 
  6509 ;;  sign            1   17[COMRAM] unsigned char 
  6510 ;;  counter         1   16[COMRAM] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  8    0[COMRAM] long long 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6520 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6524 ;;Total ram usage:       26 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_dtoa
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text20
  6534   004664                     __ptext20:
  6535                           	callstack 0
  6536   004664                     ___aodiv:
  6537                           	callstack 26
  6538   004664  0E00               	movlw	0
  6539   004666  6E12               	movwf	___aodiv@sign^0,c
  6540   004668  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6541   00466A  EF3B  F023         	goto	u3500
  6542   00466E  EF39  F023         	goto	u3501
  6543   004672                     u3501:
  6544   004672  EF4D  F023         	goto	l4150
  6545   004676                     u3500:
  6546   004676  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6547   004678  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6548   00467A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6549   00467C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6550   00467E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6551   004680  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6552   004682  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6553   004684  6C09               	negf	___aodiv@divisor^0,c
  6554   004686  0E00               	movlw	0
  6555   004688  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6556   00468A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6557   00468C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6558   00468E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6559   004690  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6560   004692  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6561   004694  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6562   004696  0E01               	movlw	1
  6563   004698  6E12               	movwf	___aodiv@sign^0,c
  6564   00469A                     l4150:
  6565   00469A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6566   00469C  EF54  F023         	goto	u3510
  6567   0046A0  EF52  F023         	goto	u3511
  6568   0046A4                     u3511:
  6569   0046A4  EF66  F023         	goto	l4156
  6570   0046A8                     u3510:
  6571   0046A8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6572   0046AA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6573   0046AC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6574   0046AE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6575   0046B0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6576   0046B2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6577   0046B4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6578   0046B6  6C01               	negf	___aodiv@dividend^0,c
  6579   0046B8  0E00               	movlw	0
  6580   0046BA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6581   0046BC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6582   0046BE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6583   0046C0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6584   0046C2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6585   0046C4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6586   0046C6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6587   0046C8  0E01               	movlw	1
  6588   0046CA  1A12               	xorwf	___aodiv@sign^0,f,c
  6589   0046CC                     l4156:
  6590   0046CC  EE20  F013         	lfsr	2,___aodiv@quotient
  6591   0046D0  0E07               	movlw	7
  6592   0046D2                     u3521:
  6593   0046D2  6ADE               	clrf	postinc2,c
  6594   0046D4  06E8               	decf	wreg,f,c
  6595   0046D6  E2FD               	bc	u3521
  6596   0046D8  5009               	movf	___aodiv@divisor^0,w,c
  6597   0046DA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6598   0046DC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6599   0046DE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6600   0046E0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6601   0046E2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6602   0046E4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6603   0046E6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6604   0046E8  B4D8               	btfsc	status,2,c
  6605   0046EA  EF79  F023         	goto	u3531
  6606   0046EE  EF7B  F023         	goto	u3530
  6607   0046F2                     u3531:
  6608   0046F2  EFCD  F023         	goto	l4178
  6609   0046F6                     u3530:
  6610   0046F6  0E01               	movlw	1
  6611   0046F8  6E11               	movwf	___aodiv@counter^0,c
  6612   0046FA  EF89  F023         	goto	l4164
  6613   0046FE                     l4162:
  6614   0046FE  90D8               	bcf	status,0,c
  6615   004700  3609               	rlcf	___aodiv@divisor^0,f,c
  6616   004702  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6617   004704  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6618   004706  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6619   004708  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6620   00470A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6621   00470C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6622   00470E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6623   004710  2A11               	incf	___aodiv@counter^0,f,c
  6624   004712                     l4164:
  6625   004712  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6626   004714  EF8E  F023         	goto	u3541
  6627   004718  EF90  F023         	goto	u3540
  6628   00471C                     u3541:
  6629   00471C  EF7F  F023         	goto	l4162
  6630   004720                     u3540:
  6631   004720                     l4166:
  6632   004720  90D8               	bcf	status,0,c
  6633   004722  3613               	rlcf	___aodiv@quotient^0,f,c
  6634   004724  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6635   004726  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6636   004728  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6637   00472A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6638   00472C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6639   00472E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6640   004730  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6641   004732  5009               	movf	___aodiv@divisor^0,w,c
  6642   004734  5C01               	subwf	___aodiv@dividend^0,w,c
  6643   004736  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6644   004738  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6645   00473A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6646   00473C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6647   00473E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6648   004740  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6649   004742  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6650   004744  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6651   004746  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6652   004748  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6653   00474A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6654   00474C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6655   00474E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6656   004750  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6657   004752  A0D8               	btfss	status,0,c
  6658   004754  EFAE  F023         	goto	u3551
  6659   004758  EFB0  F023         	goto	u3550
  6660   00475C                     u3551:
  6661   00475C  EFC1  F023         	goto	l4174
  6662   004760                     u3550:
  6663   004760  5009               	movf	___aodiv@divisor^0,w,c
  6664   004762  5E01               	subwf	___aodiv@dividend^0,f,c
  6665   004764  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6666   004766  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6667   004768  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6668   00476A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6669   00476C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6670   00476E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6671   004770  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6672   004772  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6673   004774  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6674   004776  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6675   004778  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6676   00477A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6677   00477C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6678   00477E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6679   004780  8013               	bsf	___aodiv@quotient^0,0,c
  6680   004782                     l4174:
  6681   004782  90D8               	bcf	status,0,c
  6682   004784  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6683   004786  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6684   004788  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6685   00478A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6686   00478C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6687   00478E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6688   004790  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6689   004792  3209               	rrcf	___aodiv@divisor^0,f,c
  6690   004794  2E11               	decfsz	___aodiv@counter^0,f,c
  6691   004796  EF90  F023         	goto	l4166
  6692   00479A                     l4178:
  6693   00479A  5012               	movf	___aodiv@sign^0,w,c
  6694   00479C  B4D8               	btfsc	status,2,c
  6695   00479E  EFD3  F023         	goto	u3561
  6696   0047A2  EFD5  F023         	goto	u3560
  6697   0047A6                     u3561:
  6698   0047A6  EFE5  F023         	goto	l4182
  6699   0047AA                     u3560:
  6700   0047AA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6701   0047AC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6702   0047AE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6703   0047B0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6704   0047B2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6705   0047B4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6706   0047B6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6707   0047B8  6C13               	negf	___aodiv@quotient^0,c
  6708   0047BA  0E00               	movlw	0
  6709   0047BC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6710   0047BE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6711   0047C0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6712   0047C2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6713   0047C4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6714   0047C6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6715   0047C8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6716   0047CA                     l4182:
  6717   0047CA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6718   0047CE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6719   0047D2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6720   0047D6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6721   0047DA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6722   0047DE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6723   0047E2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6724   0047E6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6725   0047EA  0012               	return		;funcret
  6726   0047EC                     __end_of___aodiv:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _sendStringSerial4 *****************
  6730 ;; Defined at:
  6731 ;;		line 33 in file "serial.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  string          2    1[COMRAM] PTR unsigned char 
  6734 ;;		 -> main@buf(100), 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  1    wreg      void 
  6739 ;; Registers used:
  6740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;Total ram usage:        2 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; Hardware stack levels required when called: 1
  6753 ;; This function calls:
  6754 ;;		_sendCharSerial4
  6755 ;; This function is called by:
  6756 ;;		_main
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text21
  6761   005FFA                     __ptext21:
  6762                           	callstack 0
  6763   005FFA                     _sendStringSerial4:
  6764                           	callstack 29
  6765   005FFA                     
  6766                           ;serial.c: 34:     while (*string!=0){
  6767   005FFA  EF08  F030         	goto	l5558
  6768   005FFE                     l5554:
  6769                           
  6770                           ;serial.c: 35:         sendCharSerial4(*string++);
  6771   005FFE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6772   006002  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6773   006006  50DF               	movf	indf2,w,c
  6774   006008  EC93  F030         	call	_sendCharSerial4
  6775   00600C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6776   00600E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6777   006010                     l5558:
  6778                           
  6779                           ;serial.c: 34:     while (*string!=0){
  6780   006010  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6781   006014  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6782   006018  50DF               	movf	indf2,w,c
  6783   00601A  A4D8               	btfss	status,2,c
  6784   00601C  EF12  F030         	goto	u5531
  6785   006020  EF14  F030         	goto	u5530
  6786   006024                     u5531:
  6787   006024  EFFF  F02F         	goto	l5554
  6788   006028                     u5530:
  6789   006028  0012               	return		;funcret
  6790   00602A                     __end_of_sendStringSerial4:
  6791                           	callstack 0
  6792                           
  6793 ;; *************** function _sendCharSerial4 *****************
  6794 ;; Defined at:
  6795 ;;		line 26 in file "serial.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  charToSend      1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  charToSend      1    0[COMRAM] unsigned char 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;Total ram usage:        1 bytes
  6814 ;; Hardware stack levels used: 1
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_sendStringSerial4
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text22
  6823   006126                     __ptext22:
  6824                           	callstack 0
  6825   006126                     _sendCharSerial4:
  6826                           	callstack 29
  6827                           
  6828                           ;incstack = 0
  6829                           ;sendCharSerial4@charToSend stored from wreg
  6830   006126  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6831   006128                     l209:
  6832   006128  010E               	movlb	14	; () banked
  6833   00612A  A537               	btfss	55,2,b	;volatile
  6834   00612C  EF9A  F030         	goto	u5061
  6835   006130  EF9C  F030         	goto	u5060
  6836   006134                     u5061:
  6837   006134  EF94  F030         	goto	l209
  6838   006138                     u5060:
  6839   006138                     
  6840                           ; BSR set to: 14
  6841                           ;serial.c: 28:     TX4REG = charToSend;
  6842   006138  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6843   00613C                     
  6844                           ; BSR set to: 14
  6845   00613C  0012               	return		;funcret
  6846   00613E                     __end_of_sendCharSerial4:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _readColours *****************
  6850 ;; Defined at:
  6851 ;;		line 105 in file "color.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  vals            2   11[COMRAM] PTR struct RGB
  6854 ;;		 -> vals(8), 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;                  1    wreg      void 
  6859 ;; Registers used:
  6860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;Total ram usage:        2 bytes
  6871 ;; Hardware stack levels used: 1
  6872 ;; Hardware stack levels required when called: 3
  6873 ;; This function calls:
  6874 ;;		_color_read_Blue
  6875 ;;		_color_read_Green
  6876 ;;		_color_read_Red
  6877 ;;		_color_read_lum
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text23
  6884   005708                     __ptext23:
  6885                           	callstack 0
  6886   005708                     _readColours:
  6887                           	callstack 27
  6888   005708                     
  6889                           ;color.c: 107:     vals ->R = color_read_Red();
  6890   005708  ECD8  F02D         	call	_color_read_Red	;wreg free
  6891   00570C  C00C  FFD9         	movff	readColours@vals,fsr2l
  6892   005710  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6893   005714  C005  FFDE         	movff	?_color_read_Red,postinc2
  6894   005718  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6895                           
  6896                           ;color.c: 108:     vals ->B = color_read_Blue();
  6897   00571C  EC28  F02E         	call	_color_read_Blue	;wreg free
  6898   005720  EE20 F004          	lfsr	2,4
  6899   005724  500C               	movf	readColours@vals^0,w,c
  6900   005726  26D9               	addwf	fsr2l,f,c
  6901   005728  500D               	movf	(readColours@vals+1)^0,w,c
  6902   00572A  22DA               	addwfc	fsr2h,f,c
  6903   00572C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6904   005730  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6905                           
  6906                           ;color.c: 109:     vals ->G = color_read_Green();
  6907   005734  EC00  F02E         	call	_color_read_Green	;wreg free
  6908   005738  EE20 F002          	lfsr	2,2
  6909   00573C  500C               	movf	readColours@vals^0,w,c
  6910   00573E  26D9               	addwf	fsr2l,f,c
  6911   005740  500D               	movf	(readColours@vals+1)^0,w,c
  6912   005742  22DA               	addwfc	fsr2h,f,c
  6913   005744  C005  FFDE         	movff	?_color_read_Green,postinc2
  6914   005748  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6915                           
  6916                           ;color.c: 110:     vals ->L = color_read_lum();
  6917   00574C  ECB0  F02D         	call	_color_read_lum	;wreg free
  6918   005750  EE20 F006          	lfsr	2,6
  6919   005754  500C               	movf	readColours@vals^0,w,c
  6920   005756  26D9               	addwf	fsr2l,f,c
  6921   005758  500D               	movf	(readColours@vals+1)^0,w,c
  6922   00575A  22DA               	addwfc	fsr2h,f,c
  6923   00575C  C005  FFDE         	movff	?_color_read_lum,postinc2
  6924   005760  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6925   005764  0012               	return		;funcret
  6926   005766                     __end_of_readColours:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _color_read_lum *****************
  6930 ;; Defined at:
  6931 ;;		line 49 in file "color.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;  tmp             2    9[COMRAM] unsigned int 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  2    4[COMRAM] unsigned int 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;Total ram usage:        7 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 2
  6952 ;; This function calls:
  6953 ;;		_I2C_2_Master_Read
  6954 ;;		_I2C_2_Master_RepStart
  6955 ;;		_I2C_2_Master_Start
  6956 ;;		_I2C_2_Master_Stop
  6957 ;;		_I2C_2_Master_Write
  6958 ;; This function is called by:
  6959 ;;		_readColours
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text24
  6964   005B60                     __ptext24:
  6965                           	callstack 0
  6966   005B60                     _color_read_lum:
  6967                           	callstack 27
  6968   005B60                     
  6969                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6970   005B60  ECAF  F030         	call	_I2C_2_Master_Start	;wreg free
  6971                           
  6972                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6973   005B64  0E52               	movlw	82
  6974   005B66  EC9F  F030         	call	_I2C_2_Master_Write
  6975                           
  6976                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6977   005B6A  0EB4               	movlw	180
  6978   005B6C  EC9F  F030         	call	_I2C_2_Master_Write
  6979                           
  6980                           ;color.c: 55:  I2C_2_Master_RepStart();
  6981   005B70  ECA5  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6982                           
  6983                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6984   005B74  0E53               	movlw	83
  6985   005B76  EC9F  F030         	call	_I2C_2_Master_Write
  6986                           
  6987                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6988   005B7A  0E01               	movlw	1
  6989   005B7C  EC2B  F02F         	call	_I2C_2_Master_Read
  6990   005B80  6E07               	movwf	??_color_read_lum^0,c
  6991   005B82  5007               	movf	??_color_read_lum^0,w,c
  6992   005B84  6E0A               	movwf	color_read_lum@tmp^0,c
  6993   005B86  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6994                           
  6995                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6996   005B88  0E00               	movlw	0
  6997   005B8A  EC2B  F02F         	call	_I2C_2_Master_Read
  6998   005B8E  6E07               	movwf	??_color_read_lum^0,c
  6999   005B90  5007               	movf	??_color_read_lum^0,w,c
  7000   005B92  6E09               	movwf	(??_color_read_lum+2)^0,c
  7001   005B94  6A08               	clrf	(??_color_read_lum+1)^0,c
  7002   005B96  500A               	movf	color_read_lum@tmp^0,w,c
  7003   005B98  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  7004   005B9A  6E0A               	movwf	color_read_lum@tmp^0,c
  7005   005B9C  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7006   005B9E  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7007   005BA0  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7008                           
  7009                           ;color.c: 59:  I2C_2_Master_Stop();
  7010   005BA2  ECAA  F030         	call	_I2C_2_Master_Stop	;wreg free
  7011   005BA6                     
  7012                           ;color.c: 60:  return tmp;
  7013   005BA6  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7014   005BAA  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7015   005BAE  0012               	return		;funcret
  7016   005BB0                     __end_of_color_read_lum:
  7017                           	callstack 0
  7018                           
  7019 ;; *************** function _color_read_Red *****************
  7020 ;; Defined at:
  7021 ;;		line 63 in file "color.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;		None
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  tmp             2    9[COMRAM] unsigned int 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2    4[COMRAM] unsigned int 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;Total ram usage:        7 bytes
  7040 ;; Hardware stack levels used: 1
  7041 ;; Hardware stack levels required when called: 2
  7042 ;; This function calls:
  7043 ;;		_I2C_2_Master_Read
  7044 ;;		_I2C_2_Master_RepStart
  7045 ;;		_I2C_2_Master_Start
  7046 ;;		_I2C_2_Master_Stop
  7047 ;;		_I2C_2_Master_Write
  7048 ;; This function is called by:
  7049 ;;		_readColours
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           	psect	text25
  7054   005BB0                     __ptext25:
  7055                           	callstack 0
  7056   005BB0                     _color_read_Red:
  7057                           	callstack 27
  7058   005BB0                     
  7059                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7060   005BB0  ECAF  F030         	call	_I2C_2_Master_Start	;wreg free
  7061                           
  7062                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7063   005BB4  0E52               	movlw	82
  7064   005BB6  EC9F  F030         	call	_I2C_2_Master_Write
  7065                           
  7066                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7067   005BBA  0EB6               	movlw	182
  7068   005BBC  EC9F  F030         	call	_I2C_2_Master_Write
  7069                           
  7070                           ;color.c: 69:  I2C_2_Master_RepStart();
  7071   005BC0  ECA5  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7072                           
  7073                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7074   005BC4  0E53               	movlw	83
  7075   005BC6  EC9F  F030         	call	_I2C_2_Master_Write
  7076                           
  7077                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7078   005BCA  0E01               	movlw	1
  7079   005BCC  EC2B  F02F         	call	_I2C_2_Master_Read
  7080   005BD0  6E07               	movwf	??_color_read_Red^0,c
  7081   005BD2  5007               	movf	??_color_read_Red^0,w,c
  7082   005BD4  6E0A               	movwf	color_read_Red@tmp^0,c
  7083   005BD6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7084                           
  7085                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7086   005BD8  0E00               	movlw	0
  7087   005BDA  EC2B  F02F         	call	_I2C_2_Master_Read
  7088   005BDE  6E07               	movwf	??_color_read_Red^0,c
  7089   005BE0  5007               	movf	??_color_read_Red^0,w,c
  7090   005BE2  6E09               	movwf	(??_color_read_Red+2)^0,c
  7091   005BE4  6A08               	clrf	(??_color_read_Red+1)^0,c
  7092   005BE6  500A               	movf	color_read_Red@tmp^0,w,c
  7093   005BE8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7094   005BEA  6E0A               	movwf	color_read_Red@tmp^0,c
  7095   005BEC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7096   005BEE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7097   005BF0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7098                           
  7099                           ;color.c: 73:  I2C_2_Master_Stop();
  7100   005BF2  ECAA  F030         	call	_I2C_2_Master_Stop	;wreg free
  7101   005BF6                     
  7102                           ;color.c: 74:  return tmp;
  7103   005BF6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7104   005BFA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7105   005BFE  0012               	return		;funcret
  7106   005C00                     __end_of_color_read_Red:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function _color_read_Green *****************
  7110 ;; Defined at:
  7111 ;;		line 76 in file "color.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;		None
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  tmp             2    9[COMRAM] unsigned int 
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  2    4[COMRAM] unsigned int 
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;Total ram usage:        7 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 2
  7132 ;; This function calls:
  7133 ;;		_I2C_2_Master_Read
  7134 ;;		_I2C_2_Master_RepStart
  7135 ;;		_I2C_2_Master_Start
  7136 ;;		_I2C_2_Master_Stop
  7137 ;;		_I2C_2_Master_Write
  7138 ;; This function is called by:
  7139 ;;		_readColours
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text26
  7144   005C00                     __ptext26:
  7145                           	callstack 0
  7146   005C00                     _color_read_Green:
  7147                           	callstack 27
  7148   005C00                     
  7149                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7150   005C00  ECAF  F030         	call	_I2C_2_Master_Start	;wreg free
  7151                           
  7152                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7153   005C04  0E52               	movlw	82
  7154   005C06  EC9F  F030         	call	_I2C_2_Master_Write
  7155                           
  7156                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7157   005C0A  0EB8               	movlw	184
  7158   005C0C  EC9F  F030         	call	_I2C_2_Master_Write
  7159                           
  7160                           ;color.c: 82:  I2C_2_Master_RepStart();
  7161   005C10  ECA5  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7162                           
  7163                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7164   005C14  0E53               	movlw	83
  7165   005C16  EC9F  F030         	call	_I2C_2_Master_Write
  7166                           
  7167                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7168   005C1A  0E01               	movlw	1
  7169   005C1C  EC2B  F02F         	call	_I2C_2_Master_Read
  7170   005C20  6E07               	movwf	??_color_read_Green^0,c
  7171   005C22  5007               	movf	??_color_read_Green^0,w,c
  7172   005C24  6E0A               	movwf	color_read_Green@tmp^0,c
  7173   005C26  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7174                           
  7175                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7176   005C28  0E00               	movlw	0
  7177   005C2A  EC2B  F02F         	call	_I2C_2_Master_Read
  7178   005C2E  6E07               	movwf	??_color_read_Green^0,c
  7179   005C30  5007               	movf	??_color_read_Green^0,w,c
  7180   005C32  6E09               	movwf	(??_color_read_Green+2)^0,c
  7181   005C34  6A08               	clrf	(??_color_read_Green+1)^0,c
  7182   005C36  500A               	movf	color_read_Green@tmp^0,w,c
  7183   005C38  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7184   005C3A  6E0A               	movwf	color_read_Green@tmp^0,c
  7185   005C3C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7186   005C3E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7187   005C40  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7188                           
  7189                           ;color.c: 86:  I2C_2_Master_Stop();
  7190   005C42  ECAA  F030         	call	_I2C_2_Master_Stop	;wreg free
  7191   005C46                     
  7192                           ;color.c: 87:  return tmp;
  7193   005C46  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7194   005C4A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7195   005C4E  0012               	return		;funcret
  7196   005C50                     __end_of_color_read_Green:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _color_read_Blue *****************
  7200 ;; Defined at:
  7201 ;;		line 90 in file "color.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  tmp             2    9[COMRAM] unsigned int 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  2    4[COMRAM] unsigned int 
  7208 ;; Registers used:
  7209 ;;		wreg, status,2, status,0, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;Total ram usage:        7 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 2
  7222 ;; This function calls:
  7223 ;;		_I2C_2_Master_Read
  7224 ;;		_I2C_2_Master_RepStart
  7225 ;;		_I2C_2_Master_Start
  7226 ;;		_I2C_2_Master_Stop
  7227 ;;		_I2C_2_Master_Write
  7228 ;; This function is called by:
  7229 ;;		_readColours
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text27
  7234   005C50                     __ptext27:
  7235                           	callstack 0
  7236   005C50                     _color_read_Blue:
  7237                           	callstack 27
  7238   005C50                     
  7239                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7240   005C50  ECAF  F030         	call	_I2C_2_Master_Start	;wreg free
  7241                           
  7242                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7243   005C54  0E52               	movlw	82
  7244   005C56  EC9F  F030         	call	_I2C_2_Master_Write
  7245                           
  7246                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7247   005C5A  0EBA               	movlw	186
  7248   005C5C  EC9F  F030         	call	_I2C_2_Master_Write
  7249                           
  7250                           ;color.c: 96:  I2C_2_Master_RepStart();
  7251   005C60  ECA5  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7252                           
  7253                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7254   005C64  0E53               	movlw	83
  7255   005C66  EC9F  F030         	call	_I2C_2_Master_Write
  7256                           
  7257                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7258   005C6A  0E01               	movlw	1
  7259   005C6C  EC2B  F02F         	call	_I2C_2_Master_Read
  7260   005C70  6E07               	movwf	??_color_read_Blue^0,c
  7261   005C72  5007               	movf	??_color_read_Blue^0,w,c
  7262   005C74  6E0A               	movwf	color_read_Blue@tmp^0,c
  7263   005C76  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7264                           
  7265                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7266   005C78  0E00               	movlw	0
  7267   005C7A  EC2B  F02F         	call	_I2C_2_Master_Read
  7268   005C7E  6E07               	movwf	??_color_read_Blue^0,c
  7269   005C80  5007               	movf	??_color_read_Blue^0,w,c
  7270   005C82  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7271   005C84  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7272   005C86  500A               	movf	color_read_Blue@tmp^0,w,c
  7273   005C88  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7274   005C8A  6E0A               	movwf	color_read_Blue@tmp^0,c
  7275   005C8C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7276   005C8E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7277   005C90  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7278                           
  7279                           ;color.c: 100:  I2C_2_Master_Stop();
  7280   005C92  ECAA  F030         	call	_I2C_2_Master_Stop	;wreg free
  7281   005C96                     
  7282                           ;color.c: 101:  return tmp;
  7283   005C96  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7284   005C9A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7285   005C9E  0012               	return		;funcret
  7286   005CA0                     __end_of_color_read_Blue:
  7287                           	callstack 0
  7288                           
  7289 ;; *************** function _I2C_2_Master_RepStart *****************
  7290 ;; Defined at:
  7291 ;;		line 33 in file "i2c.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;Total ram usage:        0 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 1
  7312 ;; This function calls:
  7313 ;;		_I2C_2_Master_Idle
  7314 ;; This function is called by:
  7315 ;;		_color_read_lum
  7316 ;;		_color_read_Red
  7317 ;;		_color_read_Green
  7318 ;;		_color_read_Blue
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text28
  7323   00614A                     __ptext28:
  7324                           	callstack 0
  7325   00614A                     _I2C_2_Master_RepStart:
  7326                           	callstack 27
  7327   00614A                     
  7328                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7329   00614A  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  7330   00614E                     
  7331                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7332   00614E  010E               	movlb	14	; () banked
  7333   006150  83DA               	bsf	218,1,b	;volatile
  7334   006152                     
  7335                           ; BSR set to: 14
  7336   006152  0012               	return		;funcret
  7337   006154                     __end_of_I2C_2_Master_RepStart:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _I2C_2_Master_Read *****************
  7341 ;; Defined at:
  7342 ;;		line 51 in file "i2c.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  ack             1    wreg     unsigned char 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  ack             1    2[COMRAM] unsigned char 
  7347 ;;  tmp             1    3[COMRAM] unsigned char 
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  1    wreg      unsigned char 
  7350 ;; Registers used:
  7351 ;;		wreg, status,2, status,0, cstack
  7352 ;; Tracked objects:
  7353 ;;		On entry : 0/0
  7354 ;;		On exit  : 0/0
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;Total ram usage:        3 bytes
  7362 ;; Hardware stack levels used: 1
  7363 ;; Hardware stack levels required when called: 1
  7364 ;; This function calls:
  7365 ;;		_I2C_2_Master_Idle
  7366 ;; This function is called by:
  7367 ;;		_color_read_lum
  7368 ;;		_color_read_Red
  7369 ;;		_color_read_Green
  7370 ;;		_color_read_Blue
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text29
  7375   005E56                     __ptext29:
  7376                           	callstack 0
  7377   005E56                     _I2C_2_Master_Read:
  7378                           	callstack 27
  7379                           
  7380                           ; BSR set to: 14
  7381                           ;incstack = 0
  7382                           ;I2C_2_Master_Read@ack stored from wreg
  7383   005E56  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7384   005E58                     
  7385                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7386   005E58  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  7387   005E5C                     
  7388                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7389   005E5C  010E               	movlb	14	; () banked
  7390   005E5E  87DA               	bsf	218,3,b	;volatile
  7391                           
  7392                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7393   005E60  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  7394   005E64                     
  7395                           ;i2c.c: 57:   tmp = SSP2BUF;
  7396   005E64  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7397                           
  7398                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7399   005E68  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  7400   005E6C                     
  7401                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7402   005E6C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7403   005E6E  B4D8               	btfsc	status,2,c
  7404   005E70  EF3C  F02F         	goto	u4991
  7405   005E74  EF40  F02F         	goto	u4990
  7406   005E78                     u4991:
  7407   005E78  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7408   005E7A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7409   005E7C  EF41  F02F         	goto	u5008
  7410   005E80                     u4990:
  7411   005E80  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7412   005E82                     u5008:
  7413   005E82  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7414   005E84  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7415   005E86  010E               	movlb	14	; () banked
  7416   005E88  51DA               	movf	218,w,b	;volatile
  7417   005E8A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7418   005E8C  0BDF               	andlw	-33
  7419   005E8E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7420   005E90  6FDA               	movwf	218,b	;volatile
  7421   005E92                     
  7422                           ; BSR set to: 14
  7423                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7424   005E92  89DA               	bsf	218,4,b	;volatile
  7425   005E94                     
  7426                           ; BSR set to: 14
  7427                           ;i2c.c: 61:   return tmp;
  7428   005E94  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7429   005E96                     
  7430                           ; BSR set to: 14
  7431   005E96  0012               	return		;funcret
  7432   005E98                     __end_of_I2C_2_Master_Read:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _initUSART4 *****************
  7436 ;; Defined at:
  7437 ;;		line 4 in file "serial.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text30
  7465   006108                     __ptext30:
  7466                           	callstack 0
  7467   006108                     _initUSART4:
  7468                           	callstack 30
  7469   006108                     
  7470                           ;serial.c: 5:     RC0PPS = 0x12;
  7471   006108  0E12               	movlw	18
  7472   00610A  010E               	movlb	14	; () banked
  7473   00610C  6F62               	movwf	98,b	;volatile
  7474                           
  7475                           ;serial.c: 6:     RX4PPS = 0x11;
  7476   00610E  0E11               	movlw	17
  7477   006110  6F15               	movwf	21,b	;volatile
  7478   006112                     
  7479                           ; BSR set to: 14
  7480                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7481   006112  97E9               	bcf	233,3,b	;volatile
  7482   006114                     
  7483                           ; BSR set to: 14
  7484                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7485   006114  95E8               	bcf	232,2,b	;volatile
  7486                           
  7487                           ;serial.c: 9:     SP4BRGL = 51;
  7488   006116  0E33               	movlw	51
  7489   006118  6FE5               	movwf	229,b	;volatile
  7490                           
  7491                           ;serial.c: 10:     SP4BRGH = 0;
  7492   00611A  0E00               	movlw	0
  7493   00611C  6FE6               	movwf	230,b	;volatile
  7494   00611E                     
  7495                           ; BSR set to: 14
  7496                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7497   00611E  89E7               	bsf	231,4,b	;volatile
  7498   006120                     
  7499                           ; BSR set to: 14
  7500                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7501   006120  8BE8               	bsf	232,5,b	;volatile
  7502   006122                     
  7503                           ; BSR set to: 14
  7504                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7505   006122  8FE7               	bsf	231,7,b	;volatile
  7506   006124                     
  7507                           ; BSR set to: 14
  7508   006124  0012               	return		;funcret
  7509   006126                     __end_of_initUSART4:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _initDCmotorsPWM *****************
  7513 ;; Defined at:
  7514 ;;		line 6 in file "dc_motor.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;Total ram usage:        2 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text31
  7542   0053C6                     __ptext31:
  7543                           	callstack 0
  7544   0053C6                     _initDCmotorsPWM:
  7545                           	callstack 30
  7546   0053C6                     
  7547                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7548   0053C6  0E05               	movlw	5
  7549   0053C8  010E               	movlb	14	; () banked
  7550   0053CA  6F74               	movwf	116,b	;volatile
  7551                           
  7552                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7553   0053CC  0E06               	movlw	6
  7554   0053CE  6F76               	movwf	118,b	;volatile
  7555                           
  7556                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7557   0053D0  0E07               	movlw	7
  7558   0053D2  6F69               	movwf	105,b	;volatile
  7559                           
  7560                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7561   0053D4  0E08               	movlw	8
  7562   0053D6  6F88               	movwf	136,b	;volatile
  7563   0053D8                     
  7564                           ; BSR set to: 14
  7565                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7566   0053D8  9485               	bcf	133,2,c	;volatile
  7567   0053DA                     
  7568                           ; BSR set to: 14
  7569                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7570   0053DA  9885               	bcf	133,4,c	;volatile
  7571   0053DC                     
  7572                           ; BSR set to: 14
  7573                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7574   0053DC  9E83               	bcf	131,7,c	;volatile
  7575   0053DE                     
  7576                           ; BSR set to: 14
  7577                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7578   0053DE  9C87               	bcf	135,6,c	;volatile
  7579                           
  7580                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7581   0053E0  50BD               	movf	189,w,c	;volatile
  7582   0053E2  0B8F               	andlw	-113
  7583   0053E4  0930               	iorlw	48
  7584   0053E6  6EBD               	movwf	189,c	;volatile
  7585                           
  7586                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7587   0053E8  0EE0               	movlw	-32
  7588   0053EA  16BE               	andwf	190,f,c	;volatile
  7589                           
  7590                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7591   0053EC  50BF               	movf	191,w,c	;volatile
  7592   0053EE  0BF0               	andlw	-16
  7593   0053F0  0901               	iorlw	1
  7594   0053F2  6EBF               	movwf	191,c	;volatile
  7595   0053F4                     
  7596                           ; BSR set to: 14
  7597                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7598   0053F4  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7599   0053F8                     
  7600                           ; BSR set to: 14
  7601                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7602   0053F8  8EBD               	bsf	189,7,c	;volatile
  7603                           
  7604                           ;dc_motor.c: 34:     CCPR1H=0;
  7605   0053FA  0E00               	movlw	0
  7606   0053FC  6EAA               	movwf	170,c	;volatile
  7607                           
  7608                           ;dc_motor.c: 35:     CCPR2H=0;
  7609   0053FE  0E00               	movlw	0
  7610   005400  6EA6               	movwf	166,c	;volatile
  7611                           
  7612                           ;dc_motor.c: 36:     CCPR3H=0;
  7613   005402  0E00               	movlw	0
  7614   005404  010F               	movlb	15	; () banked
  7615   005406  6F25               	movwf	37,b	;volatile
  7616                           
  7617                           ;dc_motor.c: 37:     CCPR4H=0;
  7618   005408  0E00               	movlw	0
  7619   00540A  6F21               	movwf	33,b	;volatile
  7620                           
  7621                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7622   00540C  0EFC               	movlw	-4
  7623   00540E  16AD               	andwf	173,f,c	;volatile
  7624                           
  7625                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7626   005410  0EF3               	movlw	-13
  7627   005412  16AD               	andwf	173,f,c	;volatile
  7628                           
  7629                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7630   005414  0ECF               	movlw	-49
  7631   005416  16AD               	andwf	173,f,c	;volatile
  7632                           
  7633                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7634   005418  0E3F               	movlw	-193
  7635   00541A  16AD               	andwf	173,f,c	;volatile
  7636   00541C                     
  7637                           ; BSR set to: 15
  7638                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7639   00541C  88AB               	bsf	171,4,c	;volatile
  7640                           
  7641                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7642   00541E  50AB               	movf	171,w,c	;volatile
  7643   005420  0BF0               	andlw	-16
  7644   005422  090C               	iorlw	12
  7645   005424  6EAB               	movwf	171,c	;volatile
  7646   005426                     
  7647                           ; BSR set to: 15
  7648                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7649   005426  8EAB               	bsf	171,7,c	;volatile
  7650   005428                     
  7651                           ; BSR set to: 15
  7652                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7653   005428  88A7               	bsf	167,4,c	;volatile
  7654                           
  7655                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7656   00542A  50A7               	movf	167,w,c	;volatile
  7657   00542C  0BF0               	andlw	-16
  7658   00542E  090C               	iorlw	12
  7659   005430  6EA7               	movwf	167,c	;volatile
  7660   005432                     
  7661                           ; BSR set to: 15
  7662                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7663   005432  8EA7               	bsf	167,7,c	;volatile
  7664   005434                     
  7665                           ; BSR set to: 15
  7666                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7667   005434  8926               	bsf	38,4,b	;volatile
  7668                           
  7669                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7670   005436  5126               	movf	38,w,b	;volatile
  7671   005438  0BF0               	andlw	-16
  7672   00543A  090C               	iorlw	12
  7673   00543C  6F26               	movwf	38,b	;volatile
  7674   00543E                     
  7675                           ; BSR set to: 15
  7676                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7677   00543E  8F26               	bsf	38,7,b	;volatile
  7678   005440                     
  7679                           ; BSR set to: 15
  7680                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7681   005440  8922               	bsf	34,4,b	;volatile
  7682                           
  7683                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7684   005442  5122               	movf	34,w,b	;volatile
  7685   005444  0BF0               	andlw	-16
  7686   005446  090C               	iorlw	12
  7687   005448  6F22               	movwf	34,b	;volatile
  7688   00544A                     
  7689                           ; BSR set to: 15
  7690                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7691   00544A  8F22               	bsf	34,7,b	;volatile
  7692   00544C                     
  7693                           ; BSR set to: 15
  7694   00544C  0012               	return		;funcret
  7695   00544E                     __end_of_initDCmotorsPWM:
  7696                           	callstack 0
  7697                           
  7698 ;; *************** function _go_Home *****************
  7699 ;; Defined at:
  7700 ;;		line 4 in file "Memory.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7703 ;;		 -> WayBack(50), 
  7704 ;;  Time_forward    2   37[COMRAM] PTR int 
  7705 ;;		 -> Time_forward(100), 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  i               2   42[COMRAM] int 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;Total ram usage:        9 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 5
  7724 ;; This function calls:
  7725 ;;		_BlueMove
  7726 ;;		_GreenMove
  7727 ;;		_LightBlueMove
  7728 ;;		_OrangeMove
  7729 ;;		_RedMove
  7730 ;;		_ReversePink
  7731 ;;		_ReverseYellow
  7732 ;;		_reverseDetect
  7733 ;;		_stop
  7734 ;;		_timed_forward
  7735 ;; This function is called by:
  7736 ;;		_main
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text32
  7741   003B60                     __ptext32:
  7742                           	callstack 0
  7743   003B60                     _go_Home:
  7744                           	callstack 25
  7745   003B60                     
  7746                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7747   003B60  0EC5               	movlw	low _motorL
  7748   003B62  6E20               	movwf	BlueMove@mL^0,c
  7749   003B64  0E01               	movlw	high _motorL
  7750   003B66  6E21               	movwf	(BlueMove@mL+1)^0,c
  7751   003B68  0EBC               	movlw	low _motorR
  7752   003B6A  6E22               	movwf	BlueMove@mR^0,c
  7753   003B6C  0E01               	movlw	high _motorR
  7754   003B6E  6E23               	movwf	(BlueMove@mR+1)^0,c
  7755   003B70  EC51  F02B         	call	_BlueMove	;wreg free
  7756   003B74                     
  7757                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7758   003B74  9ED5               	bcf	213,7,c	;volatile
  7759   003B76                     
  7760                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7761   003B76  C17A  F02B         	movff	_move_count,go_Home@i	;volatile
  7762   003B7A  C17B  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7763   003B7E                     l5694:
  7764   003B7E  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7765   003B80  EFC6  F01D         	goto	u5670
  7766   003B84  EFC4  F01D         	goto	u5671
  7767   003B88                     u5671:
  7768   003B88  EFC8  F01D         	goto	l5698
  7769   003B8C                     u5670:
  7770   003B8C  EF1F  F01F         	goto	l668
  7771   003B90                     l5698:
  7772                           
  7773                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7774   003B90  0EC5               	movlw	low _motorL
  7775   003B92  6E14               	movwf	timed_forward@mL^0,c
  7776   003B94  0E01               	movlw	high _motorL
  7777   003B96  6E15               	movwf	(timed_forward@mL+1)^0,c
  7778   003B98  0EBC               	movlw	low _motorR
  7779   003B9A  6E16               	movwf	timed_forward@mR^0,c
  7780   003B9C  0E01               	movlw	high _motorR
  7781   003B9E  6E17               	movwf	(timed_forward@mR+1)^0,c
  7782   003BA0  90D8               	bcf	status,0,c
  7783   003BA2  342B               	rlcf	go_Home@i^0,w,c
  7784   003BA4  6ED9               	movwf	fsr2l,c
  7785   003BA6  342C               	rlcf	(go_Home@i+1)^0,w,c
  7786   003BA8  6EDA               	movwf	fsr2h,c
  7787   003BAA  5026               	movf	go_Home@Time_forward^0,w,c
  7788   003BAC  26D9               	addwf	fsr2l,f,c
  7789   003BAE  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7790   003BB0  22DA               	addwfc	fsr2h,f,c
  7791   003BB2  CFDE F018          	movff	postinc2,timed_forward@time
  7792   003BB6  CFDD F019          	movff	postdec2,timed_forward@time+1
  7793   003BBA  ECFD  F027         	call	_timed_forward	;wreg free
  7794   003BBE                     
  7795                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7796   003BBE  502B               	movf	go_Home@i^0,w,c
  7797   003BC0  2424               	addwf	go_Home@WayBack^0,w,c
  7798   003BC2  6E28               	movwf	??_go_Home^0,c
  7799   003BC4  502C               	movf	(go_Home@i+1)^0,w,c
  7800   003BC6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7801   003BC8  6E29               	movwf	(??_go_Home+1)^0,c
  7802   003BCA  0EFF               	movlw	255
  7803   003BCC  2428               	addwf	??_go_Home^0,w,c
  7804   003BCE  6ED9               	movwf	fsr2l,c
  7805   003BD0  0EFF               	movlw	255
  7806   003BD2  2029               	addwfc	(??_go_Home+1)^0,w,c
  7807   003BD4  6EDA               	movwf	fsr2h,c
  7808   003BD6  04DE               	decf	postinc2,w,c
  7809   003BD8  A4D8               	btfss	status,2,c
  7810   003BDA  EFF1  F01D         	goto	u5681
  7811   003BDE  EFF3  F01D         	goto	u5680
  7812   003BE2                     u5681:
  7813   003BE2  EF09  F01E         	goto	l5704
  7814   003BE6                     u5680:
  7815   003BE6                     
  7816                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7817   003BE6  0EC5               	movlw	low _motorL
  7818   003BE8  6E1A               	movwf	reverseDetect@mL^0,c
  7819   003BEA  0E01               	movlw	high _motorL
  7820   003BEC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7821   003BEE  0EBC               	movlw	low _motorR
  7822   003BF0  6E1C               	movwf	reverseDetect@mR^0,c
  7823   003BF2  0E01               	movlw	high _motorR
  7824   003BF4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7825   003BF6  EC0D  F02C         	call	_reverseDetect	;wreg free
  7826                           
  7827                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7828   003BFA  0EC5               	movlw	low _motorL
  7829   003BFC  6E20               	movwf	GreenMove@mL^0,c
  7830   003BFE  0E01               	movlw	high _motorL
  7831   003C00  6E21               	movwf	(GreenMove@mL+1)^0,c
  7832   003C02  0EBC               	movlw	low _motorR
  7833   003C04  6E22               	movwf	GreenMove@mR^0,c
  7834   003C06  0E01               	movlw	high _motorR
  7835   003C08  6E23               	movwf	(GreenMove@mR+1)^0,c
  7836   003C0A  EC8B  F02F         	call	_GreenMove	;wreg free
  7837                           
  7838                           ;Memory.c: 14:         }
  7839   003C0E  EF0B  F01F         	goto	l656
  7840   003C12                     l5704:
  7841   003C12  502B               	movf	go_Home@i^0,w,c
  7842   003C14  2424               	addwf	go_Home@WayBack^0,w,c
  7843   003C16  6E28               	movwf	??_go_Home^0,c
  7844   003C18  502C               	movf	(go_Home@i+1)^0,w,c
  7845   003C1A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7846   003C1C  6E29               	movwf	(??_go_Home+1)^0,c
  7847   003C1E  0EFF               	movlw	255
  7848   003C20  2428               	addwf	??_go_Home^0,w,c
  7849   003C22  6ED9               	movwf	fsr2l,c
  7850   003C24  0EFF               	movlw	255
  7851   003C26  2029               	addwfc	(??_go_Home+1)^0,w,c
  7852   003C28  6EDA               	movwf	fsr2h,c
  7853   003C2A  0E02               	movlw	2
  7854   003C2C  18DE               	xorwf	postinc2,w,c
  7855   003C2E  A4D8               	btfss	status,2,c
  7856   003C30  EF1C  F01E         	goto	u5691
  7857   003C34  EF1E  F01E         	goto	u5690
  7858   003C38                     u5691:
  7859   003C38  EF34  F01E         	goto	l5708
  7860   003C3C                     u5690:
  7861   003C3C                     
  7862                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7863   003C3C  0EC5               	movlw	low _motorL
  7864   003C3E  6E1A               	movwf	reverseDetect@mL^0,c
  7865   003C40  0E01               	movlw	high _motorL
  7866   003C42  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7867   003C44  0EBC               	movlw	low _motorR
  7868   003C46  6E1C               	movwf	reverseDetect@mR^0,c
  7869   003C48  0E01               	movlw	high _motorR
  7870   003C4A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7871   003C4C  EC0D  F02C         	call	_reverseDetect	;wreg free
  7872                           
  7873                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7874   003C50  0EC5               	movlw	low _motorL
  7875   003C52  6E20               	movwf	LightBlueMove@mL^0,c
  7876   003C54  0E01               	movlw	high _motorL
  7877   003C56  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7878   003C58  0EBC               	movlw	low _motorR
  7879   003C5A  6E22               	movwf	LightBlueMove@mR^0,c
  7880   003C5C  0E01               	movlw	high _motorR
  7881   003C5E  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7882   003C60  ECE4  F02C         	call	_LightBlueMove	;wreg free
  7883                           
  7884                           ;Memory.c: 18:         }
  7885   003C64  EF0B  F01F         	goto	l656
  7886   003C68                     l5708:
  7887   003C68  502B               	movf	go_Home@i^0,w,c
  7888   003C6A  2424               	addwf	go_Home@WayBack^0,w,c
  7889   003C6C  6E28               	movwf	??_go_Home^0,c
  7890   003C6E  502C               	movf	(go_Home@i+1)^0,w,c
  7891   003C70  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7892   003C72  6E29               	movwf	(??_go_Home+1)^0,c
  7893   003C74  0EFF               	movlw	255
  7894   003C76  2428               	addwf	??_go_Home^0,w,c
  7895   003C78  6ED9               	movwf	fsr2l,c
  7896   003C7A  0EFF               	movlw	255
  7897   003C7C  2029               	addwfc	(??_go_Home+1)^0,w,c
  7898   003C7E  6EDA               	movwf	fsr2h,c
  7899   003C80  0E03               	movlw	3
  7900   003C82  18DE               	xorwf	postinc2,w,c
  7901   003C84  A4D8               	btfss	status,2,c
  7902   003C86  EF47  F01E         	goto	u5701
  7903   003C8A  EF49  F01E         	goto	u5700
  7904   003C8E                     u5701:
  7905   003C8E  EF5F  F01E         	goto	l5712
  7906   003C92                     u5700:
  7907   003C92                     
  7908                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7909   003C92  0EC5               	movlw	low _motorL
  7910   003C94  6E1A               	movwf	reverseDetect@mL^0,c
  7911   003C96  0E01               	movlw	high _motorL
  7912   003C98  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7913   003C9A  0EBC               	movlw	low _motorR
  7914   003C9C  6E1C               	movwf	reverseDetect@mR^0,c
  7915   003C9E  0E01               	movlw	high _motorR
  7916   003CA0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7917   003CA2  EC0D  F02C         	call	_reverseDetect	;wreg free
  7918                           
  7919                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7920   003CA6  0EC5               	movlw	low _motorL
  7921   003CA8  6E20               	movwf	ReverseYellow@mL^0,c
  7922   003CAA  0E01               	movlw	high _motorL
  7923   003CAC  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7924   003CAE  0EBC               	movlw	low _motorR
  7925   003CB0  6E22               	movwf	ReverseYellow@mR^0,c
  7926   003CB2  0E01               	movlw	high _motorR
  7927   003CB4  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7928   003CB6  EC47  F027         	call	_ReverseYellow	;wreg free
  7929                           
  7930                           ;Memory.c: 22:         }
  7931   003CBA  EF0B  F01F         	goto	l656
  7932   003CBE                     l5712:
  7933   003CBE  502B               	movf	go_Home@i^0,w,c
  7934   003CC0  2424               	addwf	go_Home@WayBack^0,w,c
  7935   003CC2  6E28               	movwf	??_go_Home^0,c
  7936   003CC4  502C               	movf	(go_Home@i+1)^0,w,c
  7937   003CC6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7938   003CC8  6E29               	movwf	(??_go_Home+1)^0,c
  7939   003CCA  0EFF               	movlw	255
  7940   003CCC  2428               	addwf	??_go_Home^0,w,c
  7941   003CCE  6ED9               	movwf	fsr2l,c
  7942   003CD0  0EFF               	movlw	255
  7943   003CD2  2029               	addwfc	(??_go_Home+1)^0,w,c
  7944   003CD4  6EDA               	movwf	fsr2h,c
  7945   003CD6  0E04               	movlw	4
  7946   003CD8  18DE               	xorwf	postinc2,w,c
  7947   003CDA  A4D8               	btfss	status,2,c
  7948   003CDC  EF72  F01E         	goto	u5711
  7949   003CE0  EF74  F01E         	goto	u5710
  7950   003CE4                     u5711:
  7951   003CE4  EF8A  F01E         	goto	l5716
  7952   003CE8                     u5710:
  7953   003CE8                     
  7954                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7955   003CE8  0EC5               	movlw	low _motorL
  7956   003CEA  6E1A               	movwf	reverseDetect@mL^0,c
  7957   003CEC  0E01               	movlw	high _motorL
  7958   003CEE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7959   003CF0  0EBC               	movlw	low _motorR
  7960   003CF2  6E1C               	movwf	reverseDetect@mR^0,c
  7961   003CF4  0E01               	movlw	high _motorR
  7962   003CF6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7963   003CF8  EC0D  F02C         	call	_reverseDetect	;wreg free
  7964                           
  7965                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7966   003CFC  0EC5               	movlw	low _motorL
  7967   003CFE  6E20               	movwf	BlueMove@mL^0,c
  7968   003D00  0E01               	movlw	high _motorL
  7969   003D02  6E21               	movwf	(BlueMove@mL+1)^0,c
  7970   003D04  0EBC               	movlw	low _motorR
  7971   003D06  6E22               	movwf	BlueMove@mR^0,c
  7972   003D08  0E01               	movlw	high _motorR
  7973   003D0A  6E23               	movwf	(BlueMove@mR+1)^0,c
  7974   003D0C  EC51  F02B         	call	_BlueMove	;wreg free
  7975                           
  7976                           ;Memory.c: 26:         }
  7977   003D10  EF0B  F01F         	goto	l656
  7978   003D14                     l5716:
  7979   003D14  502B               	movf	go_Home@i^0,w,c
  7980   003D16  2424               	addwf	go_Home@WayBack^0,w,c
  7981   003D18  6E28               	movwf	??_go_Home^0,c
  7982   003D1A  502C               	movf	(go_Home@i+1)^0,w,c
  7983   003D1C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7984   003D1E  6E29               	movwf	(??_go_Home+1)^0,c
  7985   003D20  0EFF               	movlw	255
  7986   003D22  2428               	addwf	??_go_Home^0,w,c
  7987   003D24  6ED9               	movwf	fsr2l,c
  7988   003D26  0EFF               	movlw	255
  7989   003D28  2029               	addwfc	(??_go_Home+1)^0,w,c
  7990   003D2A  6EDA               	movwf	fsr2h,c
  7991   003D2C  0E05               	movlw	5
  7992   003D2E  18DE               	xorwf	postinc2,w,c
  7993   003D30  A4D8               	btfss	status,2,c
  7994   003D32  EF9D  F01E         	goto	u5721
  7995   003D36  EF9F  F01E         	goto	u5720
  7996   003D3A                     u5721:
  7997   003D3A  EFB5  F01E         	goto	l5720
  7998   003D3E                     u5720:
  7999   003D3E                     
  8000                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  8001   003D3E  0EC5               	movlw	low _motorL
  8002   003D40  6E1A               	movwf	reverseDetect@mL^0,c
  8003   003D42  0E01               	movlw	high _motorL
  8004   003D44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8005   003D46  0EBC               	movlw	low _motorR
  8006   003D48  6E1C               	movwf	reverseDetect@mR^0,c
  8007   003D4A  0E01               	movlw	high _motorR
  8008   003D4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8009   003D4E  EC0D  F02C         	call	_reverseDetect	;wreg free
  8010                           
  8011                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8012   003D52  0EC5               	movlw	low _motorL
  8013   003D54  6E20               	movwf	RedMove@mL^0,c
  8014   003D56  0E01               	movlw	high _motorL
  8015   003D58  6E21               	movwf	(RedMove@mL+1)^0,c
  8016   003D5A  0EBC               	movlw	low _motorR
  8017   003D5C  6E22               	movwf	RedMove@mR^0,c
  8018   003D5E  0E01               	movlw	high _motorR
  8019   003D60  6E23               	movwf	(RedMove@mR+1)^0,c
  8020   003D62  EC6C  F02F         	call	_RedMove	;wreg free
  8021                           
  8022                           ;Memory.c: 30:         }
  8023   003D66  EF0B  F01F         	goto	l656
  8024   003D6A                     l5720:
  8025   003D6A  502B               	movf	go_Home@i^0,w,c
  8026   003D6C  2424               	addwf	go_Home@WayBack^0,w,c
  8027   003D6E  6E28               	movwf	??_go_Home^0,c
  8028   003D70  502C               	movf	(go_Home@i+1)^0,w,c
  8029   003D72  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8030   003D74  6E29               	movwf	(??_go_Home+1)^0,c
  8031   003D76  0EFF               	movlw	255
  8032   003D78  2428               	addwf	??_go_Home^0,w,c
  8033   003D7A  6ED9               	movwf	fsr2l,c
  8034   003D7C  0EFF               	movlw	255
  8035   003D7E  2029               	addwfc	(??_go_Home+1)^0,w,c
  8036   003D80  6EDA               	movwf	fsr2h,c
  8037   003D82  0E06               	movlw	6
  8038   003D84  18DE               	xorwf	postinc2,w,c
  8039   003D86  A4D8               	btfss	status,2,c
  8040   003D88  EFC8  F01E         	goto	u5731
  8041   003D8C  EFCA  F01E         	goto	u5730
  8042   003D90                     u5731:
  8043   003D90  EFE0  F01E         	goto	l5724
  8044   003D94                     u5730:
  8045   003D94                     
  8046                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  8047   003D94  0EC5               	movlw	low _motorL
  8048   003D96  6E1A               	movwf	reverseDetect@mL^0,c
  8049   003D98  0E01               	movlw	high _motorL
  8050   003D9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8051   003D9C  0EBC               	movlw	low _motorR
  8052   003D9E  6E1C               	movwf	reverseDetect@mR^0,c
  8053   003DA0  0E01               	movlw	high _motorR
  8054   003DA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8055   003DA4  EC0D  F02C         	call	_reverseDetect	;wreg free
  8056                           
  8057                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8058   003DA8  0EC5               	movlw	low _motorL
  8059   003DAA  6E20               	movwf	OrangeMove@mL^0,c
  8060   003DAC  0E01               	movlw	high _motorL
  8061   003DAE  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8062   003DB0  0EBC               	movlw	low _motorR
  8063   003DB2  6E22               	movwf	OrangeMove@mR^0,c
  8064   003DB4  0E01               	movlw	high _motorR
  8065   003DB6  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8066   003DB8  ECBB  F02C         	call	_OrangeMove	;wreg free
  8067                           
  8068                           ;Memory.c: 34:         }
  8069   003DBC  EF0B  F01F         	goto	l656
  8070   003DC0                     l5724:
  8071   003DC0  502B               	movf	go_Home@i^0,w,c
  8072   003DC2  2424               	addwf	go_Home@WayBack^0,w,c
  8073   003DC4  6E28               	movwf	??_go_Home^0,c
  8074   003DC6  502C               	movf	(go_Home@i+1)^0,w,c
  8075   003DC8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8076   003DCA  6E29               	movwf	(??_go_Home+1)^0,c
  8077   003DCC  0EFF               	movlw	255
  8078   003DCE  2428               	addwf	??_go_Home^0,w,c
  8079   003DD0  6ED9               	movwf	fsr2l,c
  8080   003DD2  0EFF               	movlw	255
  8081   003DD4  2029               	addwfc	(??_go_Home+1)^0,w,c
  8082   003DD6  6EDA               	movwf	fsr2h,c
  8083   003DD8  0E07               	movlw	7
  8084   003DDA  18DE               	xorwf	postinc2,w,c
  8085   003DDC  A4D8               	btfss	status,2,c
  8086   003DDE  EFF3  F01E         	goto	u5741
  8087   003DE2  EFF5  F01E         	goto	u5740
  8088   003DE6                     u5741:
  8089   003DE6  EF0B  F01F         	goto	l662
  8090   003DEA                     u5740:
  8091   003DEA                     
  8092                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  8093   003DEA  0EC5               	movlw	low _motorL
  8094   003DEC  6E1A               	movwf	reverseDetect@mL^0,c
  8095   003DEE  0E01               	movlw	high _motorL
  8096   003DF0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8097   003DF2  0EBC               	movlw	low _motorR
  8098   003DF4  6E1C               	movwf	reverseDetect@mR^0,c
  8099   003DF6  0E01               	movlw	high _motorR
  8100   003DF8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8101   003DFA  EC0D  F02C         	call	_reverseDetect	;wreg free
  8102                           
  8103                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8104   003DFE  0EC5               	movlw	low _motorL
  8105   003E00  6E20               	movwf	ReversePink@mL^0,c
  8106   003E02  0E01               	movlw	high _motorL
  8107   003E04  6E21               	movwf	(ReversePink@mL+1)^0,c
  8108   003E06  0EBC               	movlw	low _motorR
  8109   003E08  6E22               	movwf	ReversePink@mR^0,c
  8110   003E0A  0E01               	movlw	high _motorR
  8111   003E0C  6E23               	movwf	(ReversePink@mR+1)^0,c
  8112   003E0E  ECA2  F027         	call	_ReversePink	;wreg free
  8113   003E12  EF0B  F01F         	goto	l656
  8114   003E16                     l662:
  8115   003E16                     l656:
  8116                           
  8117                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8118   003E16  0EC5               	movlw	low _motorL
  8119   003E18  6E14               	movwf	stop@mL^0,c
  8120   003E1A  0E01               	movlw	high _motorL
  8121   003E1C  6E15               	movwf	(stop@mL+1)^0,c
  8122   003E1E  0EBC               	movlw	low _motorR
  8123   003E20  6E16               	movwf	stop@mR^0,c
  8124   003E22  0E01               	movlw	high _motorR
  8125   003E24  6E17               	movwf	(stop@mR+1)^0,c
  8126   003E26  EC68  F02A         	call	_stop	;wreg free
  8127   003E2A                     
  8128                           ;Memory.c: 40:         run_flag=0;
  8129   003E2A  0E00               	movlw	0
  8130   003E2C  0101               	movlb	1	; () banked
  8131   003E2E  6F7D               	movwf	(_run_flag+1)& (0+255),b
  8132   003E30  0E00               	movlw	0
  8133   003E32  6F7C               	movwf	_run_flag& (0+255),b
  8134   003E34                     
  8135                           ; BSR set to: 1
  8136                           ;Memory.c: 42:   }
  8137   003E34  062B               	decf	go_Home@i^0,f,c
  8138   003E36  A0D8               	btfss	status,0,c
  8139   003E38  062C               	decf	(go_Home@i+1)^0,f,c
  8140   003E3A  EFBF  F01D         	goto	l5694
  8141   003E3E                     l668:
  8142   003E3E  0012               	return		;funcret
  8143   003E40                     __end_of_go_Home:
  8144                           	callstack 0
  8145                           
  8146 ;; *************** function _timed_forward *****************
  8147 ;; Defined at:
  8148 ;;		line 165 in file "dc_motor.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8151 ;;		 -> motorL(9), 
  8152 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8153 ;;		 -> motorR(9), 
  8154 ;;  time            2   23[COMRAM] int 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8166 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;Total ram usage:        8 bytes
  8171 ;; Hardware stack levels used: 1
  8172 ;; Hardware stack levels required when called: 2
  8173 ;; This function calls:
  8174 ;;		_delayed_ms
  8175 ;;		_setMotorPWM
  8176 ;; This function is called by:
  8177 ;;		_go_Home
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text33
  8182   004FFA                     __ptext33:
  8183                           	callstack 0
  8184   004FFA                     _timed_forward:
  8185                           	callstack 27
  8186   004FFA                     
  8187                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8188   004FFA  EE20 F001          	lfsr	2,1
  8189   004FFE  5014               	movf	timed_forward@mL^0,w,c
  8190   005000  26D9               	addwf	fsr2l,f,c
  8191   005002  5015               	movf	(timed_forward@mL+1)^0,w,c
  8192   005004  22DA               	addwfc	fsr2h,f,c
  8193   005006  0E01               	movlw	1
  8194   005008  6EDF               	movwf	indf2,c
  8195                           
  8196                           ;dc_motor.c: 169:     mR->direction =1;
  8197   00500A  EE20 F001          	lfsr	2,1
  8198   00500E  5016               	movf	timed_forward@mR^0,w,c
  8199   005010  26D9               	addwf	fsr2l,f,c
  8200   005012  5017               	movf	(timed_forward@mR+1)^0,w,c
  8201   005014  22DA               	addwfc	fsr2h,f,c
  8202   005016  0E01               	movlw	1
  8203   005018  6EDF               	movwf	indf2,c
  8204                           
  8205                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8206   00501A  EF33  F028         	goto	l5236
  8207   00501E                     l5228:
  8208                           
  8209                           ;dc_motor.c: 172:         mL->power+=10;
  8210   00501E  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8211   005022  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8212   005026  0E0A               	movlw	10
  8213   005028  26DF               	addwf	indf2,f,c
  8214                           
  8215                           ;dc_motor.c: 173:         mR->power+=10;
  8216   00502A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8217   00502E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8218   005032  0E0A               	movlw	10
  8219   005034  26DF               	addwf	indf2,f,c
  8220   005036                     
  8221                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8222   005036  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8223   00503A  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8224   00503E  ECF6  F023         	call	_setMotorPWM	;wreg free
  8225   005042                     
  8226                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8227   005042  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8228   005046  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8229   00504A  ECF6  F023         	call	_setMotorPWM	;wreg free
  8230   00504E                     
  8231                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8232   00504E  0E02               	movlw	2
  8233   005050  6E1B               	movwf	(??_timed_forward+1)^0,c
  8234   005052  0EA0               	movlw	160
  8235   005054  6E1A               	movwf	??_timed_forward^0,c
  8236   005056  0E92               	movlw	146
  8237   005058                     u6117:
  8238   005058  2EE8               	decfsz	wreg,f,c
  8239   00505A  D7FE               	bra	u6117
  8240   00505C  2E1A               	decfsz	??_timed_forward^0,f,c
  8241   00505E  D7FC               	bra	u6117
  8242   005060  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8243   005062  D7FA               	bra	u6117
  8244   005064  D000               	nop2	
  8245   005066                     l5236:
  8246   005066  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8247   00506A  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8248   00506E  0E1E               	movlw	30
  8249   005070  60DF               	cpfslt	indf2,c
  8250   005072  EF3D  F028         	goto	u5071
  8251   005076  EF3F  F028         	goto	u5070
  8252   00507A                     u5071:
  8253   00507A  EF4B  F028         	goto	l5240
  8254   00507E                     u5070:
  8255   00507E  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8256   005082  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8257   005086  0E1D               	movlw	29
  8258   005088  64DF               	cpfsgt	indf2,c
  8259   00508A  EF49  F028         	goto	u5081
  8260   00508E  EF4B  F028         	goto	u5080
  8261   005092                     u5081:
  8262   005092  EF0F  F028         	goto	l5228
  8263   005096                     u5080:
  8264   005096                     l5240:
  8265                           
  8266                           ;dc_motor.c: 181:     delayed_ms(time);
  8267   005096  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8268   00509A  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8269   00509E  ECC6  F02F         	call	_delayed_ms	;wreg free
  8270   0050A2  0012               	return		;funcret
  8271   0050A4                     __end_of_timed_forward:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function _delayed_ms *****************
  8275 ;; Defined at:
  8276 ;;		line 39 in file "timers.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  time            2    0[COMRAM] int 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  i               2    3[COMRAM] unsigned int 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8293 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;Total ram usage:        5 bytes
  8295 ;; Hardware stack levels used: 1
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_timed_forward
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           	psect	text34
  8304   005F8C                     __ptext34:
  8305                           	callstack 0
  8306   005F8C                     _delayed_ms:
  8307                           	callstack 28
  8308   005F8C                     
  8309                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8310   005F8C  0E00               	movlw	0
  8311   005F8E  6E05               	movwf	(delayed_ms@i+1)^0,c
  8312   005F90  0E00               	movlw	0
  8313   005F92  6E04               	movwf	delayed_ms@i^0,c
  8314   005F94  EFD6  F02F         	goto	l697
  8315   005F98                     l5060:
  8316                           
  8317                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8318   005F98  0E15               	movlw	21
  8319   005F9A  6E03               	movwf	??_delayed_ms^0,c
  8320   005F9C  0EC6               	movlw	198
  8321   005F9E                     u6127:
  8322   005F9E  2EE8               	decfsz	wreg,f,c
  8323   005FA0  D7FE               	bra	u6127
  8324   005FA2  2E03               	decfsz	??_delayed_ms^0,f,c
  8325   005FA4  D7FC               	bra	u6127
  8326   005FA6  D000               	nop2	
  8327   005FA8                     
  8328                           ;timers.c: 42:     }
  8329   005FA8  4A04               	infsnz	delayed_ms@i^0,f,c
  8330   005FAA  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8331   005FAC                     l697:
  8332   005FAC  5001               	movf	delayed_ms@time^0,w,c
  8333   005FAE  5C04               	subwf	delayed_ms@i^0,w,c
  8334   005FB0  5002               	movf	(delayed_ms@time+1)^0,w,c
  8335   005FB2  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8336   005FB4  A0D8               	btfss	status,0,c
  8337   005FB6  EFDF  F02F         	goto	u5011
  8338   005FBA  EFE1  F02F         	goto	u5010
  8339   005FBE                     u5011:
  8340   005FBE  EFCC  F02F         	goto	l5060
  8341   005FC2                     u5010:
  8342   005FC2  0012               	return		;funcret
  8343   005FC4                     __end_of_delayed_ms:
  8344                           	callstack 0
  8345                           
  8346 ;; *************** function _ReverseYellow *****************
  8347 ;; Defined at:
  8348 ;;		line 334 in file "dc_motor.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8351 ;;		 -> motorL(9), 
  8352 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8353 ;;		 -> motorR(9), 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      void 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;Total ram usage:        4 bytes
  8370 ;; Hardware stack levels used: 1
  8371 ;; Hardware stack levels required when called: 4
  8372 ;; This function calls:
  8373 ;;		_ForwardOneBlock
  8374 ;;		_reverseDetect
  8375 ;;		_turnRight45
  8376 ;; This function is called by:
  8377 ;;		_go_Home
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text35
  8382   004E8E                     __ptext35:
  8383                           	callstack 0
  8384   004E8E                     _ReverseYellow:
  8385                           	callstack 25
  8386   004E8E                     
  8387                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8388   004E8E  0EC5               	movlw	low _motorL
  8389   004E90  6E1A               	movwf	reverseDetect@mL^0,c
  8390   004E92  0E01               	movlw	high _motorL
  8391   004E94  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8392   004E96  0EBC               	movlw	low _motorR
  8393   004E98  6E1C               	movwf	reverseDetect@mR^0,c
  8394   004E9A  0E01               	movlw	high _motorR
  8395   004E9C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8396   004E9E  EC0D  F02C         	call	_reverseDetect	;wreg free
  8397                           
  8398                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8399   004EA2  0EC5               	movlw	low _motorL
  8400   004EA4  6E1A               	movwf	turnRight45@mL^0,c
  8401   004EA6  0E01               	movlw	high _motorL
  8402   004EA8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8403   004EAA  0EBC               	movlw	low _motorR
  8404   004EAC  6E1C               	movwf	turnRight45@mR^0,c
  8405   004EAE  0E01               	movlw	high _motorR
  8406   004EB0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8407   004EB2  EC50  F02E         	call	_turnRight45	;wreg free
  8408                           
  8409                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8410   004EB6  0EC5               	movlw	low _motorL
  8411   004EB8  6E1A               	movwf	turnRight45@mL^0,c
  8412   004EBA  0E01               	movlw	high _motorL
  8413   004EBC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8414   004EBE  0EBC               	movlw	low _motorR
  8415   004EC0  6E1C               	movwf	turnRight45@mR^0,c
  8416   004EC2  0E01               	movlw	high _motorR
  8417   004EC4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8418   004EC6  EC50  F02E         	call	_turnRight45	;wreg free
  8419                           
  8420                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8421   004ECA  0EC5               	movlw	low _motorL
  8422   004ECC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8423   004ECE  0E01               	movlw	high _motorL
  8424   004ED0  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8425   004ED2  0EBC               	movlw	low _motorR
  8426   004ED4  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8427   004ED6  0E01               	movlw	high _motorR
  8428   004ED8  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8429   004EDA  ECB3  F02B         	call	_ForwardOneBlock	;wreg free
  8430                           
  8431                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8432   004EDE  0EC5               	movlw	low _motorL
  8433   004EE0  6E1A               	movwf	reverseDetect@mL^0,c
  8434   004EE2  0E01               	movlw	high _motorL
  8435   004EE4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8436   004EE6  0EBC               	movlw	low _motorR
  8437   004EE8  6E1C               	movwf	reverseDetect@mR^0,c
  8438   004EEA  0E01               	movlw	high _motorR
  8439   004EEC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8440   004EEE  EC0D  F02C         	call	_reverseDetect	;wreg free
  8441                           
  8442                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8443   004EF2  0EC5               	movlw	low _motorL
  8444   004EF4  6E1A               	movwf	turnRight45@mL^0,c
  8445   004EF6  0E01               	movlw	high _motorL
  8446   004EF8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8447   004EFA  0EBC               	movlw	low _motorR
  8448   004EFC  6E1C               	movwf	turnRight45@mR^0,c
  8449   004EFE  0E01               	movlw	high _motorR
  8450   004F00  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8451   004F02  EC50  F02E         	call	_turnRight45	;wreg free
  8452                           
  8453                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8454   004F06  0EC5               	movlw	low _motorL
  8455   004F08  6E1A               	movwf	turnRight45@mL^0,c
  8456   004F0A  0E01               	movlw	high _motorL
  8457   004F0C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8458   004F0E  0EBC               	movlw	low _motorR
  8459   004F10  6E1C               	movwf	turnRight45@mR^0,c
  8460   004F12  0E01               	movlw	high _motorR
  8461   004F14  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8462   004F16  EC50  F02E         	call	_turnRight45	;wreg free
  8463                           
  8464                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8465   004F1A  0EC5               	movlw	low _motorL
  8466   004F1C  6E1A               	movwf	turnRight45@mL^0,c
  8467   004F1E  0E01               	movlw	high _motorL
  8468   004F20  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8469   004F22  0EBC               	movlw	low _motorR
  8470   004F24  6E1C               	movwf	turnRight45@mR^0,c
  8471   004F26  0E01               	movlw	high _motorR
  8472   004F28  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8473   004F2A  EC50  F02E         	call	_turnRight45	;wreg free
  8474                           
  8475                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8476   004F2E  0EC5               	movlw	low _motorL
  8477   004F30  6E1A               	movwf	turnRight45@mL^0,c
  8478   004F32  0E01               	movlw	high _motorL
  8479   004F34  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8480   004F36  0EBC               	movlw	low _motorR
  8481   004F38  6E1C               	movwf	turnRight45@mR^0,c
  8482   004F3A  0E01               	movlw	high _motorR
  8483   004F3C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8484   004F3E  EC50  F02E         	call	_turnRight45	;wreg free
  8485   004F42  0012               	return		;funcret
  8486   004F44                     __end_of_ReverseYellow:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _ReversePink *****************
  8490 ;; Defined at:
  8491 ;;		line 345 in file "dc_motor.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8494 ;;		 -> motorL(9), 
  8495 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8496 ;;		 -> motorR(9), 
  8497 ;; Auto vars:     Size  Location     Type
  8498 ;;		None
  8499 ;; Return value:  Size  Location     Type
  8500 ;;                  1    wreg      void 
  8501 ;; Registers used:
  8502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8503 ;; Tracked objects:
  8504 ;;		On entry : 0/0
  8505 ;;		On exit  : 0/0
  8506 ;;		Unchanged: 0/0
  8507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;Total ram usage:        4 bytes
  8513 ;; Hardware stack levels used: 1
  8514 ;; Hardware stack levels required when called: 4
  8515 ;; This function calls:
  8516 ;;		_ForwardOneBlock
  8517 ;;		_reverseDetect
  8518 ;;		_turnLeft45
  8519 ;; This function is called by:
  8520 ;;		_go_Home
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text36
  8525   004F44                     __ptext36:
  8526                           	callstack 0
  8527   004F44                     _ReversePink:
  8528                           	callstack 25
  8529   004F44                     
  8530                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8531   004F44  0EC5               	movlw	low _motorL
  8532   004F46  6E1A               	movwf	reverseDetect@mL^0,c
  8533   004F48  0E01               	movlw	high _motorL
  8534   004F4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8535   004F4C  0EBC               	movlw	low _motorR
  8536   004F4E  6E1C               	movwf	reverseDetect@mR^0,c
  8537   004F50  0E01               	movlw	high _motorR
  8538   004F52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8539   004F54  EC0D  F02C         	call	_reverseDetect	;wreg free
  8540                           
  8541                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8542   004F58  0EC5               	movlw	low _motorL
  8543   004F5A  6E1A               	movwf	turnLeft45@mL^0,c
  8544   004F5C  0E01               	movlw	high _motorL
  8545   004F5E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8546   004F60  0EBC               	movlw	low _motorR
  8547   004F62  6E1C               	movwf	turnLeft45@mR^0,c
  8548   004F64  0E01               	movlw	high _motorR
  8549   004F66  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8550   004F68  EC77  F02E         	call	_turnLeft45	;wreg free
  8551                           
  8552                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8553   004F6C  0EC5               	movlw	low _motorL
  8554   004F6E  6E1A               	movwf	turnLeft45@mL^0,c
  8555   004F70  0E01               	movlw	high _motorL
  8556   004F72  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8557   004F74  0EBC               	movlw	low _motorR
  8558   004F76  6E1C               	movwf	turnLeft45@mR^0,c
  8559   004F78  0E01               	movlw	high _motorR
  8560   004F7A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8561   004F7C  EC77  F02E         	call	_turnLeft45	;wreg free
  8562                           
  8563                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8564   004F80  0EC5               	movlw	low _motorL
  8565   004F82  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8566   004F84  0E01               	movlw	high _motorL
  8567   004F86  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8568   004F88  0EBC               	movlw	low _motorR
  8569   004F8A  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8570   004F8C  0E01               	movlw	high _motorR
  8571   004F8E  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8572   004F90  ECB3  F02B         	call	_ForwardOneBlock	;wreg free
  8573                           
  8574                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8575   004F94  0EC5               	movlw	low _motorL
  8576   004F96  6E1A               	movwf	reverseDetect@mL^0,c
  8577   004F98  0E01               	movlw	high _motorL
  8578   004F9A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8579   004F9C  0EBC               	movlw	low _motorR
  8580   004F9E  6E1C               	movwf	reverseDetect@mR^0,c
  8581   004FA0  0E01               	movlw	high _motorR
  8582   004FA2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8583   004FA4  EC0D  F02C         	call	_reverseDetect	;wreg free
  8584                           
  8585                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8586   004FA8  0EC5               	movlw	low _motorL
  8587   004FAA  6E1A               	movwf	turnLeft45@mL^0,c
  8588   004FAC  0E01               	movlw	high _motorL
  8589   004FAE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8590   004FB0  0EBC               	movlw	low _motorR
  8591   004FB2  6E1C               	movwf	turnLeft45@mR^0,c
  8592   004FB4  0E01               	movlw	high _motorR
  8593   004FB6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8594   004FB8  EC77  F02E         	call	_turnLeft45	;wreg free
  8595                           
  8596                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8597   004FBC  0EC5               	movlw	low _motorL
  8598   004FBE  6E1A               	movwf	turnLeft45@mL^0,c
  8599   004FC0  0E01               	movlw	high _motorL
  8600   004FC2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8601   004FC4  0EBC               	movlw	low _motorR
  8602   004FC6  6E1C               	movwf	turnLeft45@mR^0,c
  8603   004FC8  0E01               	movlw	high _motorR
  8604   004FCA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8605   004FCC  EC77  F02E         	call	_turnLeft45	;wreg free
  8606                           
  8607                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8608   004FD0  0EC5               	movlw	low _motorL
  8609   004FD2  6E1A               	movwf	turnLeft45@mL^0,c
  8610   004FD4  0E01               	movlw	high _motorL
  8611   004FD6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8612   004FD8  0EBC               	movlw	low _motorR
  8613   004FDA  6E1C               	movwf	turnLeft45@mR^0,c
  8614   004FDC  0E01               	movlw	high _motorR
  8615   004FDE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8616   004FE0  EC77  F02E         	call	_turnLeft45	;wreg free
  8617                           
  8618                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8619   004FE4  0EC5               	movlw	low _motorL
  8620   004FE6  6E1A               	movwf	turnLeft45@mL^0,c
  8621   004FE8  0E01               	movlw	high _motorL
  8622   004FEA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8623   004FEC  0EBC               	movlw	low _motorR
  8624   004FEE  6E1C               	movwf	turnLeft45@mR^0,c
  8625   004FF0  0E01               	movlw	high _motorR
  8626   004FF2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8627   004FF4  EC77  F02E         	call	_turnLeft45	;wreg free
  8628   004FF8  0012               	return		;funcret
  8629   004FFA                     __end_of_ReversePink:
  8630                           	callstack 0
  8631                           
  8632 ;; *************** function _ForwardOneBlock *****************
  8633 ;; Defined at:
  8634 ;;		line 238 in file "dc_motor.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8637 ;;		 -> motorL(9), 
  8638 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8639 ;;		 -> motorR(9), 
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      void 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;Total ram usage:        6 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; Hardware stack levels required when called: 3
  8658 ;; This function calls:
  8659 ;;		_fullSpeedAhead
  8660 ;;		_stop
  8661 ;; This function is called by:
  8662 ;;		_ReverseYellow
  8663 ;;		_ReversePink
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text37
  8668   005766                     __ptext37:
  8669                           	callstack 0
  8670   005766                     _ForwardOneBlock:
  8671                           	callstack 25
  8672   005766                     
  8673                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8674   005766  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8675   00576A  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8676   00576E  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8677   005772  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8678   005776  EC94  F029         	call	_fullSpeedAhead	;wreg free
  8679   00577A                     
  8680                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8681   00577A  0EA3               	movlw	163
  8682   00577C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8683   00577E  0E57               	movlw	87
  8684   005780  6E1E               	movwf	??_ForwardOneBlock^0,c
  8685   005782  0E02               	movlw	2
  8686   005784                     u6137:
  8687   005784  2EE8               	decfsz	wreg,f,c
  8688   005786  D7FE               	bra	u6137
  8689   005788  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8690   00578A  D7FC               	bra	u6137
  8691   00578C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8692   00578E  D7FA               	bra	u6137
  8693   005790  D000               	nop2	
  8694   005792                     
  8695                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8696   005792  0EC5               	movlw	low _motorL
  8697   005794  6E14               	movwf	stop@mL^0,c
  8698   005796  0E01               	movlw	high _motorL
  8699   005798  6E15               	movwf	(stop@mL+1)^0,c
  8700   00579A  0EBC               	movlw	low _motorR
  8701   00579C  6E16               	movwf	stop@mR^0,c
  8702   00579E  0E01               	movlw	high _motorR
  8703   0057A0  6E17               	movwf	(stop@mR+1)^0,c
  8704   0057A2  EC68  F02A         	call	_stop	;wreg free
  8705                           
  8706                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8707   0057A6  0E05               	movlw	5
  8708   0057A8  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8709   0057AA  0E0F               	movlw	15
  8710   0057AC  6E1E               	movwf	??_ForwardOneBlock^0,c
  8711   0057AE  0EF1               	movlw	241
  8712   0057B0                     u6147:
  8713   0057B0  2EE8               	decfsz	wreg,f,c
  8714   0057B2  D7FE               	bra	u6147
  8715   0057B4  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8716   0057B6  D7FC               	bra	u6147
  8717   0057B8  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8718   0057BA  D7FA               	bra	u6147
  8719   0057BC  F000               	nop	
  8720   0057BE  0012               	return		;funcret
  8721   0057C0                     __end_of_ForwardOneBlock:
  8722                           	callstack 0
  8723                           
  8724 ;; *************** function _RedMove *****************
  8725 ;; Defined at:
  8726 ;;		line 262 in file "dc_motor.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8729 ;;		 -> motorL(9), 
  8730 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8731 ;;		 -> motorR(9), 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;Total ram usage:        4 bytes
  8748 ;; Hardware stack levels used: 1
  8749 ;; Hardware stack levels required when called: 4
  8750 ;; This function calls:
  8751 ;;		_reverseDetect
  8752 ;;		_turnRight45
  8753 ;; This function is called by:
  8754 ;;		_main
  8755 ;;		_go_Home
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text38
  8760   005ED8                     __ptext38:
  8761                           	callstack 0
  8762   005ED8                     _RedMove:
  8763                           	callstack 25
  8764   005ED8                     
  8765                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8766   005ED8  0EC5               	movlw	low _motorL
  8767   005EDA  6E1A               	movwf	reverseDetect@mL^0,c
  8768   005EDC  0E01               	movlw	high _motorL
  8769   005EDE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8770   005EE0  0EBC               	movlw	low _motorR
  8771   005EE2  6E1C               	movwf	reverseDetect@mR^0,c
  8772   005EE4  0E01               	movlw	high _motorR
  8773   005EE6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8774   005EE8  EC0D  F02C         	call	_reverseDetect	;wreg free
  8775                           
  8776                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8777   005EEC  0EC5               	movlw	low _motorL
  8778   005EEE  6E1A               	movwf	turnRight45@mL^0,c
  8779   005EF0  0E01               	movlw	high _motorL
  8780   005EF2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8781   005EF4  0EBC               	movlw	low _motorR
  8782   005EF6  6E1C               	movwf	turnRight45@mR^0,c
  8783   005EF8  0E01               	movlw	high _motorR
  8784   005EFA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8785   005EFC  EC50  F02E         	call	_turnRight45	;wreg free
  8786                           
  8787                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8788   005F00  0EC5               	movlw	low _motorL
  8789   005F02  6E1A               	movwf	turnRight45@mL^0,c
  8790   005F04  0E01               	movlw	high _motorL
  8791   005F06  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8792   005F08  0EBC               	movlw	low _motorR
  8793   005F0A  6E1C               	movwf	turnRight45@mR^0,c
  8794   005F0C  0E01               	movlw	high _motorR
  8795   005F0E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8796   005F10  EC50  F02E         	call	_turnRight45	;wreg free
  8797   005F14  0012               	return		;funcret
  8798   005F16                     __end_of_RedMove:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _OrangeMove *****************
  8802 ;; Defined at:
  8803 ;;		line 308 in file "dc_motor.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8806 ;;		 -> motorL(9), 
  8807 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8808 ;;		 -> motorR(9), 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:        4 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 4
  8827 ;; This function calls:
  8828 ;;		_reverseDetect
  8829 ;;		_turnRight45
  8830 ;; This function is called by:
  8831 ;;		_main
  8832 ;;		_go_Home
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text39
  8837   005976                     __ptext39:
  8838                           	callstack 0
  8839   005976                     _OrangeMove:
  8840                           	callstack 25
  8841   005976                     
  8842                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8843   005976  0EC5               	movlw	low _motorL
  8844   005978  6E1A               	movwf	reverseDetect@mL^0,c
  8845   00597A  0E01               	movlw	high _motorL
  8846   00597C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8847   00597E  0EBC               	movlw	low _motorR
  8848   005980  6E1C               	movwf	reverseDetect@mR^0,c
  8849   005982  0E01               	movlw	high _motorR
  8850   005984  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8851   005986  EC0D  F02C         	call	_reverseDetect	;wreg free
  8852                           
  8853                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8854   00598A  0EC5               	movlw	low _motorL
  8855   00598C  6E1A               	movwf	turnRight45@mL^0,c
  8856   00598E  0E01               	movlw	high _motorL
  8857   005990  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8858   005992  0EBC               	movlw	low _motorR
  8859   005994  6E1C               	movwf	turnRight45@mR^0,c
  8860   005996  0E01               	movlw	high _motorR
  8861   005998  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8862   00599A  EC50  F02E         	call	_turnRight45	;wreg free
  8863                           
  8864                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8865   00599E  0EC5               	movlw	low _motorL
  8866   0059A0  6E1A               	movwf	turnRight45@mL^0,c
  8867   0059A2  0E01               	movlw	high _motorL
  8868   0059A4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8869   0059A6  0EBC               	movlw	low _motorR
  8870   0059A8  6E1C               	movwf	turnRight45@mR^0,c
  8871   0059AA  0E01               	movlw	high _motorR
  8872   0059AC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8873   0059AE  EC50  F02E         	call	_turnRight45	;wreg free
  8874                           
  8875                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8876   0059B2  0EC5               	movlw	low _motorL
  8877   0059B4  6E1A               	movwf	turnRight45@mL^0,c
  8878   0059B6  0E01               	movlw	high _motorL
  8879   0059B8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8880   0059BA  0EBC               	movlw	low _motorR
  8881   0059BC  6E1C               	movwf	turnRight45@mR^0,c
  8882   0059BE  0E01               	movlw	high _motorR
  8883   0059C0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8884   0059C2  EC50  F02E         	call	_turnRight45	;wreg free
  8885   0059C6  0012               	return		;funcret
  8886   0059C8                     __end_of_OrangeMove:
  8887                           	callstack 0
  8888                           
  8889 ;; *************** function _LightBlueMove *****************
  8890 ;; Defined at:
  8891 ;;		line 317 in file "dc_motor.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8894 ;;		 -> motorL(9), 
  8895 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8896 ;;		 -> motorR(9), 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;		None
  8899 ;; Return value:  Size  Location     Type
  8900 ;;                  1    wreg      void 
  8901 ;; Registers used:
  8902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8903 ;; Tracked objects:
  8904 ;;		On entry : 0/0
  8905 ;;		On exit  : 0/0
  8906 ;;		Unchanged: 0/0
  8907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;Total ram usage:        4 bytes
  8913 ;; Hardware stack levels used: 1
  8914 ;; Hardware stack levels required when called: 4
  8915 ;; This function calls:
  8916 ;;		_reverseDetect
  8917 ;;		_turnLeft45
  8918 ;; This function is called by:
  8919 ;;		_main
  8920 ;;		_go_Home
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text40
  8925   0059C8                     __ptext40:
  8926                           	callstack 0
  8927   0059C8                     _LightBlueMove:
  8928                           	callstack 25
  8929   0059C8                     
  8930                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  8931   0059C8  0EC5               	movlw	low _motorL
  8932   0059CA  6E1A               	movwf	reverseDetect@mL^0,c
  8933   0059CC  0E01               	movlw	high _motorL
  8934   0059CE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8935   0059D0  0EBC               	movlw	low _motorR
  8936   0059D2  6E1C               	movwf	reverseDetect@mR^0,c
  8937   0059D4  0E01               	movlw	high _motorR
  8938   0059D6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8939   0059D8  EC0D  F02C         	call	_reverseDetect	;wreg free
  8940                           
  8941                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  8942   0059DC  0EC5               	movlw	low _motorL
  8943   0059DE  6E1A               	movwf	turnLeft45@mL^0,c
  8944   0059E0  0E01               	movlw	high _motorL
  8945   0059E2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8946   0059E4  0EBC               	movlw	low _motorR
  8947   0059E6  6E1C               	movwf	turnLeft45@mR^0,c
  8948   0059E8  0E01               	movlw	high _motorR
  8949   0059EA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8950   0059EC  EC77  F02E         	call	_turnLeft45	;wreg free
  8951                           
  8952                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8953   0059F0  0EC5               	movlw	low _motorL
  8954   0059F2  6E1A               	movwf	turnLeft45@mL^0,c
  8955   0059F4  0E01               	movlw	high _motorL
  8956   0059F6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8957   0059F8  0EBC               	movlw	low _motorR
  8958   0059FA  6E1C               	movwf	turnLeft45@mR^0,c
  8959   0059FC  0E01               	movlw	high _motorR
  8960   0059FE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8961   005A00  EC77  F02E         	call	_turnLeft45	;wreg free
  8962                           
  8963                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8964   005A04  0EC5               	movlw	low _motorL
  8965   005A06  6E1A               	movwf	turnLeft45@mL^0,c
  8966   005A08  0E01               	movlw	high _motorL
  8967   005A0A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8968   005A0C  0EBC               	movlw	low _motorR
  8969   005A0E  6E1C               	movwf	turnLeft45@mR^0,c
  8970   005A10  0E01               	movlw	high _motorR
  8971   005A12  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8972   005A14  EC77  F02E         	call	_turnLeft45	;wreg free
  8973   005A18  0012               	return		;funcret
  8974   005A1A                     __end_of_LightBlueMove:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _GreenMove *****************
  8978 ;; Defined at:
  8979 ;;		line 270 in file "dc_motor.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8982 ;;		 -> motorL(9), 
  8983 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8984 ;;		 -> motorR(9), 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;Total ram usage:        4 bytes
  9001 ;; Hardware stack levels used: 1
  9002 ;; Hardware stack levels required when called: 4
  9003 ;; This function calls:
  9004 ;;		_reverseDetect
  9005 ;;		_turnLeft45
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;;		_go_Home
  9009 ;; This function uses a non-reentrant model
  9010 ;;
  9011                           
  9012                           	psect	text41
  9013   005F16                     __ptext41:
  9014                           	callstack 0
  9015   005F16                     _GreenMove:
  9016                           	callstack 25
  9017   005F16                     
  9018                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9019   005F16  0EC5               	movlw	low _motorL
  9020   005F18  6E1A               	movwf	reverseDetect@mL^0,c
  9021   005F1A  0E01               	movlw	high _motorL
  9022   005F1C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9023   005F1E  0EBC               	movlw	low _motorR
  9024   005F20  6E1C               	movwf	reverseDetect@mR^0,c
  9025   005F22  0E01               	movlw	high _motorR
  9026   005F24  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9027   005F26  EC0D  F02C         	call	_reverseDetect	;wreg free
  9028                           
  9029                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9030   005F2A  0EC5               	movlw	low _motorL
  9031   005F2C  6E1A               	movwf	turnLeft45@mL^0,c
  9032   005F2E  0E01               	movlw	high _motorL
  9033   005F30  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9034   005F32  0EBC               	movlw	low _motorR
  9035   005F34  6E1C               	movwf	turnLeft45@mR^0,c
  9036   005F36  0E01               	movlw	high _motorR
  9037   005F38  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9038   005F3A  EC77  F02E         	call	_turnLeft45	;wreg free
  9039                           
  9040                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9041   005F3E  0EC5               	movlw	low _motorL
  9042   005F40  6E1A               	movwf	turnLeft45@mL^0,c
  9043   005F42  0E01               	movlw	high _motorL
  9044   005F44  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9045   005F46  0EBC               	movlw	low _motorR
  9046   005F48  6E1C               	movwf	turnLeft45@mR^0,c
  9047   005F4A  0E01               	movlw	high _motorR
  9048   005F4C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9049   005F4E  EC77  F02E         	call	_turnLeft45	;wreg free
  9050   005F52  0012               	return		;funcret
  9051   005F54                     __end_of_GreenMove:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function _BlueMove *****************
  9055 ;; Defined at:
  9056 ;;		line 278 in file "dc_motor.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9059 ;;		 -> motorL(9), 
  9060 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9061 ;;		 -> motorR(9), 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;Total ram usage:        4 bytes
  9078 ;; Hardware stack levels used: 1
  9079 ;; Hardware stack levels required when called: 4
  9080 ;; This function calls:
  9081 ;;		_reverseDetect
  9082 ;;		_turnRight45
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;;		_go_Home
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text42
  9090   0056A2                     __ptext42:
  9091                           	callstack 0
  9092   0056A2                     _BlueMove:
  9093                           	callstack 25
  9094   0056A2                     
  9095                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9096   0056A2  0EC5               	movlw	low _motorL
  9097   0056A4  6E1A               	movwf	reverseDetect@mL^0,c
  9098   0056A6  0E01               	movlw	high _motorL
  9099   0056A8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9100   0056AA  0EBC               	movlw	low _motorR
  9101   0056AC  6E1C               	movwf	reverseDetect@mR^0,c
  9102   0056AE  0E01               	movlw	high _motorR
  9103   0056B0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9104   0056B2  EC0D  F02C         	call	_reverseDetect	;wreg free
  9105                           
  9106                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9107   0056B6  0EC5               	movlw	low _motorL
  9108   0056B8  6E1A               	movwf	turnRight45@mL^0,c
  9109   0056BA  0E01               	movlw	high _motorL
  9110   0056BC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9111   0056BE  0EBC               	movlw	low _motorR
  9112   0056C0  6E1C               	movwf	turnRight45@mR^0,c
  9113   0056C2  0E01               	movlw	high _motorR
  9114   0056C4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9115   0056C6  EC50  F02E         	call	_turnRight45	;wreg free
  9116                           
  9117                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9118   0056CA  0EC5               	movlw	low _motorL
  9119   0056CC  6E1A               	movwf	turnRight45@mL^0,c
  9120   0056CE  0E01               	movlw	high _motorL
  9121   0056D0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9122   0056D2  0EBC               	movlw	low _motorR
  9123   0056D4  6E1C               	movwf	turnRight45@mR^0,c
  9124   0056D6  0E01               	movlw	high _motorR
  9125   0056D8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9126   0056DA  EC50  F02E         	call	_turnRight45	;wreg free
  9127                           
  9128                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9129   0056DE  0EC5               	movlw	low _motorL
  9130   0056E0  6E1A               	movwf	turnRight45@mL^0,c
  9131   0056E2  0E01               	movlw	high _motorL
  9132   0056E4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9133   0056E6  0EBC               	movlw	low _motorR
  9134   0056E8  6E1C               	movwf	turnRight45@mR^0,c
  9135   0056EA  0E01               	movlw	high _motorR
  9136   0056EC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9137   0056EE  EC50  F02E         	call	_turnRight45	;wreg free
  9138                           
  9139                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9140   0056F2  0EC5               	movlw	low _motorL
  9141   0056F4  6E1A               	movwf	turnRight45@mL^0,c
  9142   0056F6  0E01               	movlw	high _motorL
  9143   0056F8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9144   0056FA  0EBC               	movlw	low _motorR
  9145   0056FC  6E1C               	movwf	turnRight45@mR^0,c
  9146   0056FE  0E01               	movlw	high _motorR
  9147   005700  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9148   005702  EC50  F02E         	call	_turnRight45	;wreg free
  9149   005706  0012               	return		;funcret
  9150   005708                     __end_of_BlueMove:
  9151                           	callstack 0
  9152                           
  9153 ;; *************** function _getTMR0val *****************
  9154 ;; Defined at:
  9155 ;;		line 28 in file "timers.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  moving          2    0[COMRAM] int 
  9160 ;;  temp            2    0        unsigned int 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;Total ram usage:        2 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_main
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text43
  9184   00607C                     __ptext43:
  9185                           	callstack 0
  9186   00607C                     _getTMR0val:
  9187                           	callstack 30
  9188   00607C  50D3               	movf	211,w,c	;volatile
  9189   00607E                     
  9190                           ;timers.c: 32:     int moving=TMR0H<<8;
  9191   00607E  50D4               	movf	212,w,c	;volatile
  9192   006080  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9193   006082  6A01               	clrf	getTMR0val@moving^0,c
  9194   006084                     
  9195                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9196   006084  90D8               	bcf	status,0,c
  9197   006086  0101               	movlb	1	; () banked
  9198   006088  357A               	rlcf	_move_count& (0+255),w,b	;volatile
  9199   00608A  6ED9               	movwf	fsr2l,c
  9200   00608C  357B               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9201   00608E  6EDA               	movwf	fsr2h,c
  9202   006090  0E3C               	movlw	low _Time_forward
  9203   006092  26D9               	addwf	fsr2l,f,c
  9204   006094  0E02               	movlw	high _Time_forward
  9205   006096  22DA               	addwfc	fsr2h,f,c
  9206   006098  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9207   00609C  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9208   0060A0                     
  9209                           ; BSR set to: 1
  9210   0060A0  0012               	return		;funcret
  9211   0060A2                     __end_of_getTMR0val:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _colour_rel *****************
  9215 ;; Defined at:
  9216 ;;		line 114 in file "color.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  vals            2   74[COMRAM] PTR struct RGB
  9219 ;;		 -> vals(8), 
  9220 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9221 ;;		 -> rel(12), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;  B               4   20[BANK0 ] float 
  9224 ;;  G               4   16[BANK0 ] float 
  9225 ;;  R               4   12[BANK0 ] float 
  9226 ;;  L               4    0[BANK0 ] float 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      void 
  9229 ;; Registers used:
  9230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 0/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9237 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9239 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9240 ;;Total ram usage:       28 bytes
  9241 ;; Hardware stack levels used: 1
  9242 ;; Hardware stack levels required when called: 1
  9243 ;; This function calls:
  9244 ;;		___fladd
  9245 ;;		___fldiv
  9246 ;;		___xxtofl
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text44
  9253   00352C                     __ptext44:
  9254                           	callstack 0
  9255   00352C                     _colour_rel:
  9256                           	callstack 29
  9257   00352C                     
  9258                           ;color.c: 115:     float R = vals->R;
  9259   00352C  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9260   003530  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9261   003534  CFDE F001          	movff	postinc2,___xxtofl@val
  9262   003538  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9263   00353C  0E00               	movlw	0
  9264   00353E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9265   003540  0EFF               	movlw	-1
  9266   003542  6E03               	movwf	(___xxtofl@val+2)^0,c
  9267   003544  6E04               	movwf	(___xxtofl@val+3)^0,c
  9268   003546  0E01               	movlw	1
  9269   003548  EC58  F022         	call	___xxtofl
  9270   00354C  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9271   003550  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9272   003554  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9273   003558  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9274                           
  9275                           ;color.c: 116:     float G = vals->G;
  9276   00355C  EE20 F002          	lfsr	2,2
  9277   003560  504B               	movf	colour_rel@vals^0,w,c
  9278   003562  26D9               	addwf	fsr2l,f,c
  9279   003564  504C               	movf	(colour_rel@vals+1)^0,w,c
  9280   003566  22DA               	addwfc	fsr2h,f,c
  9281   003568  CFDE F001          	movff	postinc2,___xxtofl@val
  9282   00356C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9283   003570  0E00               	movlw	0
  9284   003572  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9285   003574  0EFF               	movlw	-1
  9286   003576  6E03               	movwf	(___xxtofl@val+2)^0,c
  9287   003578  6E04               	movwf	(___xxtofl@val+3)^0,c
  9288   00357A  0E01               	movlw	1
  9289   00357C  EC58  F022         	call	___xxtofl
  9290   003580  C001  F070         	movff	?___xxtofl,colour_rel@G
  9291   003584  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9292   003588  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9293   00358C  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9294                           
  9295                           ;color.c: 117:     float B = vals->B;
  9296   003590  EE20 F004          	lfsr	2,4
  9297   003594  504B               	movf	colour_rel@vals^0,w,c
  9298   003596  26D9               	addwf	fsr2l,f,c
  9299   003598  504C               	movf	(colour_rel@vals+1)^0,w,c
  9300   00359A  22DA               	addwfc	fsr2h,f,c
  9301   00359C  CFDE F001          	movff	postinc2,___xxtofl@val
  9302   0035A0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9303   0035A4  0E00               	movlw	0
  9304   0035A6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9305   0035A8  0EFF               	movlw	-1
  9306   0035AA  6E03               	movwf	(___xxtofl@val+2)^0,c
  9307   0035AC  6E04               	movwf	(___xxtofl@val+3)^0,c
  9308   0035AE  0E01               	movlw	1
  9309   0035B0  EC58  F022         	call	___xxtofl
  9310   0035B4  C001  F074         	movff	?___xxtofl,colour_rel@B
  9311   0035B8  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9312   0035BC  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9313   0035C0  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9314                           
  9315                           ;color.c: 118:     float L = vals->L;
  9316   0035C4  EE20 F006          	lfsr	2,6
  9317   0035C8  504B               	movf	colour_rel@vals^0,w,c
  9318   0035CA  26D9               	addwf	fsr2l,f,c
  9319   0035CC  504C               	movf	(colour_rel@vals+1)^0,w,c
  9320   0035CE  22DA               	addwfc	fsr2h,f,c
  9321   0035D0  CFDE F001          	movff	postinc2,___xxtofl@val
  9322   0035D4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9323   0035D8  0E00               	movlw	0
  9324   0035DA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9325   0035DC  0EFF               	movlw	-1
  9326   0035DE  6E03               	movwf	(___xxtofl@val+2)^0,c
  9327   0035E0  6E04               	movwf	(___xxtofl@val+3)^0,c
  9328   0035E2  0E01               	movlw	1
  9329   0035E4  EC58  F022         	call	___xxtofl
  9330   0035E8  C001  F060         	movff	?___xxtofl,colour_rel@L
  9331   0035EC  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9332   0035F0  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9333   0035F4  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9334   0035F8                     
  9335                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9336   0035F8  C070  F005         	movff	colour_rel@G,___fladd@a
  9337   0035FC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9338   003600  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9339   003604  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9340   003608  C06C  F001         	movff	colour_rel@R,___fladd@b
  9341   00360C  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9342   003610  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9343   003614  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9344   003618  EC54  F014         	call	___fladd	;wreg free
  9345   00361C  C001  F064         	movff	?___fladd,_colour_rel$3160
  9346   003620  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9347   003624  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9348   003628  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9349   00362C                     
  9350                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9351   00362C  C074  F005         	movff	colour_rel@B,___fladd@a
  9352   003630  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9353   003634  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9354   003638  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9355   00363C  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9356   003640  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9357   003644  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9358   003648  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9359   00364C  EC54  F014         	call	___fladd	;wreg free
  9360   003650  C001  F068         	movff	?___fladd,_colour_rel$3161
  9361   003654  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9362   003658  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9363   00365C  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9364                           
  9365                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9366   003660  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9367   003664  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9368   003668  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9369   00366C  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9370   003670  C060  F005         	movff	colour_rel@L,___fladd@a
  9371   003674  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9372   003678  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9373   00367C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9374   003680  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9375   003684  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9376   003688  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9377   00368C  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9378   003690  EC54  F014         	call	___fladd	;wreg free
  9379   003694  C001  F036         	movff	?___fladd,___fldiv@a
  9380   003698  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9381   00369C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9382   0036A0  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9383   0036A4  ECC9  F018         	call	___fldiv	;wreg free
  9384   0036A8  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9385   0036AC  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9386   0036B0  C032  FFDE         	movff	?___fldiv,postinc2
  9387   0036B4  C033  FFDE         	movff	?___fldiv+1,postinc2
  9388   0036B8  C034  FFDE         	movff	?___fldiv+2,postinc2
  9389   0036BC  C035  FFDE         	movff	?___fldiv+3,postinc2
  9390   0036C0                     
  9391                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9392   0036C0  C070  F005         	movff	colour_rel@G,___fladd@a
  9393   0036C4  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9394   0036C8  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9395   0036CC  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9396   0036D0  C06C  F001         	movff	colour_rel@R,___fladd@b
  9397   0036D4  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9398   0036D8  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9399   0036DC  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9400   0036E0  EC54  F014         	call	___fladd	;wreg free
  9401   0036E4  C001  F064         	movff	?___fladd,_colour_rel$3160
  9402   0036E8  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9403   0036EC  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9404   0036F0  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9405   0036F4                     
  9406                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9407   0036F4  C074  F005         	movff	colour_rel@B,___fladd@a
  9408   0036F8  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9409   0036FC  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9410   003700  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9411   003704  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9412   003708  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9413   00370C  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9414   003710  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9415   003714  EC54  F014         	call	___fladd	;wreg free
  9416   003718  C001  F068         	movff	?___fladd,_colour_rel$3161
  9417   00371C  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9418   003720  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9419   003724  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9420                           
  9421                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9422   003728  C074  F032         	movff	colour_rel@B,___fldiv@b
  9423   00372C  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9424   003730  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9425   003734  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9426   003738  C060  F005         	movff	colour_rel@L,___fladd@a
  9427   00373C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9428   003740  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9429   003744  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9430   003748  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9431   00374C  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9432   003750  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9433   003754  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9434   003758  EC54  F014         	call	___fladd	;wreg free
  9435   00375C  C001  F036         	movff	?___fladd,___fldiv@a
  9436   003760  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9437   003764  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9438   003768  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9439   00376C  ECC9  F018         	call	___fldiv	;wreg free
  9440   003770  EE20 F008          	lfsr	2,8
  9441   003774  504D               	movf	colour_rel@rel^0,w,c
  9442   003776  26D9               	addwf	fsr2l,f,c
  9443   003778  504E               	movf	(colour_rel@rel+1)^0,w,c
  9444   00377A  22DA               	addwfc	fsr2h,f,c
  9445   00377C  C032  FFDE         	movff	?___fldiv,postinc2
  9446   003780  C033  FFDE         	movff	?___fldiv+1,postinc2
  9447   003784  C034  FFDE         	movff	?___fldiv+2,postinc2
  9448   003788  C035  FFDE         	movff	?___fldiv+3,postinc2
  9449   00378C                     
  9450                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9451   00378C  C070  F005         	movff	colour_rel@G,___fladd@a
  9452   003790  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9453   003794  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9454   003798  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9455   00379C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9456   0037A0  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9457   0037A4  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9458   0037A8  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9459   0037AC  EC54  F014         	call	___fladd	;wreg free
  9460   0037B0  C001  F064         	movff	?___fladd,_colour_rel$3160
  9461   0037B4  C002  F065         	movff	?___fladd+1,_colour_rel$3160+1
  9462   0037B8  C003  F066         	movff	?___fladd+2,_colour_rel$3160+2
  9463   0037BC  C004  F067         	movff	?___fladd+3,_colour_rel$3160+3
  9464   0037C0                     
  9465                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9466   0037C0  C074  F005         	movff	colour_rel@B,___fladd@a
  9467   0037C4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9468   0037C8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9469   0037CC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9470   0037D0  C064  F001         	movff	_colour_rel$3160,___fladd@b
  9471   0037D4  C065  F002         	movff	_colour_rel$3160+1,___fladd@b+1
  9472   0037D8  C066  F003         	movff	_colour_rel$3160+2,___fladd@b+2
  9473   0037DC  C067  F004         	movff	_colour_rel$3160+3,___fladd@b+3
  9474   0037E0  EC54  F014         	call	___fladd	;wreg free
  9475   0037E4  C001  F068         	movff	?___fladd,_colour_rel$3161
  9476   0037E8  C002  F069         	movff	?___fladd+1,_colour_rel$3161+1
  9477   0037EC  C003  F06A         	movff	?___fladd+2,_colour_rel$3161+2
  9478   0037F0  C004  F06B         	movff	?___fladd+3,_colour_rel$3161+3
  9479                           
  9480                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9481   0037F4  C070  F032         	movff	colour_rel@G,___fldiv@b
  9482   0037F8  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9483   0037FC  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9484   003800  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9485   003804  C060  F005         	movff	colour_rel@L,___fladd@a
  9486   003808  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9487   00380C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9488   003810  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9489   003814  C068  F001         	movff	_colour_rel$3161,___fladd@b
  9490   003818  C069  F002         	movff	_colour_rel$3161+1,___fladd@b+1
  9491   00381C  C06A  F003         	movff	_colour_rel$3161+2,___fladd@b+2
  9492   003820  C06B  F004         	movff	_colour_rel$3161+3,___fladd@b+3
  9493   003824  EC54  F014         	call	___fladd	;wreg free
  9494   003828  C001  F036         	movff	?___fladd,___fldiv@a
  9495   00382C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9496   003830  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9497   003834  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9498   003838  ECC9  F018         	call	___fldiv	;wreg free
  9499   00383C  EE20 F004          	lfsr	2,4
  9500   003840  504D               	movf	colour_rel@rel^0,w,c
  9501   003842  26D9               	addwf	fsr2l,f,c
  9502   003844  504E               	movf	(colour_rel@rel+1)^0,w,c
  9503   003846  22DA               	addwfc	fsr2h,f,c
  9504   003848  C032  FFDE         	movff	?___fldiv,postinc2
  9505   00384C  C033  FFDE         	movff	?___fldiv+1,postinc2
  9506   003850  C034  FFDE         	movff	?___fldiv+2,postinc2
  9507   003854  C035  FFDE         	movff	?___fldiv+3,postinc2
  9508   003858  0012               	return		;funcret
  9509   00385A                     __end_of_colour_rel:
  9510                           	callstack 0
  9511                           
  9512 ;; *************** function _color_click_init *****************
  9513 ;; Defined at:
  9514 ;;		line 7 in file "color.c"
  9515 ;; Parameters:    Size  Location     Type
  9516 ;;		None
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;		None
  9519 ;; Return value:  Size  Location     Type
  9520 ;;                  1    wreg      void 
  9521 ;; Registers used:
  9522 ;;		wreg, status,2, status,0, cstack
  9523 ;; Tracked objects:
  9524 ;;		On entry : 0/0
  9525 ;;		On exit  : 0/0
  9526 ;;		Unchanged: 0/0
  9527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9532 ;;Total ram usage:        1 bytes
  9533 ;; Hardware stack levels used: 1
  9534 ;; Hardware stack levels required when called: 3
  9535 ;; This function calls:
  9536 ;;		_I2C_2_Master_Init
  9537 ;;		_color_writetoaddr
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text45
  9544   005A1A                     __ptext45:
  9545                           	callstack 0
  9546   005A1A                     _color_click_init:
  9547                           	callstack 27
  9548   005A1A                     
  9549                           ;color.c: 10:     I2C_2_Master_Init();
  9550   005A1A  EC15  F030         	call	_I2C_2_Master_Init	;wreg free
  9551   005A1E                     
  9552                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9553   005A1E  0E01               	movlw	1
  9554   005A20  6E03               	movwf	color_writetoaddr@value^0,c
  9555   005A22  0E00               	movlw	0
  9556   005A24  EC64  F030         	call	_color_writetoaddr
  9557   005A28                     
  9558                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9559   005A28  0E3F               	movlw	63
  9560   005A2A  6E05               	movwf	??_color_click_init^0,c
  9561   005A2C  0E55               	movlw	85
  9562   005A2E                     u6157:
  9563   005A2E  2EE8               	decfsz	wreg,f,c
  9564   005A30  D7FE               	bra	u6157
  9565   005A32  2E05               	decfsz	??_color_click_init^0,f,c
  9566   005A34  D7FC               	bra	u6157
  9567   005A36  F000               	nop	
  9568   005A38                     
  9569                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9570   005A38  0E03               	movlw	3
  9571   005A3A  6E03               	movwf	color_writetoaddr@value^0,c
  9572   005A3C  0E00               	movlw	0
  9573   005A3E  EC64  F030         	call	_color_writetoaddr
  9574   005A42                     
  9575                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9576   005A42  0ED5               	movlw	213
  9577   005A44  6E03               	movwf	color_writetoaddr@value^0,c
  9578   005A46  0E01               	movlw	1
  9579   005A48  EC64  F030         	call	_color_writetoaddr
  9580   005A4C                     
  9581                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9582   005A4C  0E00               	movlw	0
  9583   005A4E  6E03               	movwf	color_writetoaddr@value^0,c
  9584   005A50  0E0F               	movlw	15
  9585   005A52  EC64  F030         	call	_color_writetoaddr
  9586   005A56                     
  9587                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9588   005A56  9287               	bcf	135,1,c	;volatile
  9589   005A58                     
  9590                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9591   005A58  9881               	bcf	129,4,c	;volatile
  9592   005A5A                     
  9593                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9594   005A5A  9E86               	bcf	134,7,c	;volatile
  9595   005A5C                     
  9596                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9597   005A5C  9684               	bcf	132,3,c	;volatile
  9598   005A5E                     
  9599                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9600   005A5E  9884               	bcf	132,4,c	;volatile
  9601   005A60                     
  9602                           ;color.c: 28:     LATGbits.LATG1=0;
  9603   005A60  927F               	bcf	127,1,c	;volatile
  9604   005A62                     
  9605                           ;color.c: 29:     LATFbits.LATF7=0;
  9606   005A62  9E7E               	bcf	126,7,c	;volatile
  9607   005A64                     
  9608                           ;color.c: 30:     LATAbits.LATA4=0;
  9609   005A64  9879               	bcf	121,4,c	;volatile
  9610   005A66                     
  9611                           ;color.c: 32:     LATDbits.LATD3=0;
  9612   005A66  967C               	bcf	124,3,c	;volatile
  9613   005A68                     
  9614                           ;color.c: 33:     LATDbits.LATD4=0;
  9615   005A68  987C               	bcf	124,4,c	;volatile
  9616   005A6A  0012               	return		;funcret
  9617   005A6C                     __end_of_color_click_init:
  9618                           	callstack 0
  9619                           
  9620 ;; *************** function _color_writetoaddr *****************
  9621 ;; Defined at:
  9622 ;;		line 41 in file "color.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  address         1    wreg     unsigned char 
  9625 ;;  value           1    2[COMRAM] unsigned char 
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;  address         1    3[COMRAM] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      void 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9637 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9641 ;;Total ram usage:        2 bytes
  9642 ;; Hardware stack levels used: 1
  9643 ;; Hardware stack levels required when called: 2
  9644 ;; This function calls:
  9645 ;;		_I2C_2_Master_Start
  9646 ;;		_I2C_2_Master_Stop
  9647 ;;		_I2C_2_Master_Write
  9648 ;; This function is called by:
  9649 ;;		_color_click_init
  9650 ;; This function uses a non-reentrant model
  9651 ;;
  9652                           
  9653                           	psect	text46
  9654   0060C8                     __ptext46:
  9655                           	callstack 0
  9656   0060C8                     _color_writetoaddr:
  9657                           	callstack 27
  9658                           
  9659                           ;incstack = 0
  9660                           ;color_writetoaddr@address stored from wreg
  9661   0060C8  6E04               	movwf	color_writetoaddr@address^0,c
  9662   0060CA                     
  9663                           ;color.c: 42:     I2C_2_Master_Start();
  9664   0060CA  ECAF  F030         	call	_I2C_2_Master_Start	;wreg free
  9665                           
  9666                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9667   0060CE  0E52               	movlw	82
  9668   0060D0  EC9F  F030         	call	_I2C_2_Master_Write
  9669                           
  9670                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9671   0060D4  5004               	movf	color_writetoaddr@address^0,w,c
  9672   0060D6  0980               	iorlw	128
  9673   0060D8  EC9F  F030         	call	_I2C_2_Master_Write
  9674                           
  9675                           ;color.c: 45:     I2C_2_Master_Write(value);
  9676   0060DC  5003               	movf	color_writetoaddr@value^0,w,c
  9677   0060DE  EC9F  F030         	call	_I2C_2_Master_Write
  9678                           
  9679                           ;color.c: 46:     I2C_2_Master_Stop();
  9680   0060E2  ECAA  F030         	call	_I2C_2_Master_Stop	;wreg free
  9681   0060E6  0012               	return		;funcret
  9682   0060E8                     __end_of_color_writetoaddr:
  9683                           	callstack 0
  9684                           
  9685 ;; *************** function _I2C_2_Master_Write *****************
  9686 ;; Defined at:
  9687 ;;		line 45 in file "i2c.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  data_byte       1    wreg     unsigned char 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  data_byte       1    1[COMRAM] unsigned char 
  9692 ;; Return value:  Size  Location     Type
  9693 ;;                  1    wreg      void 
  9694 ;; Registers used:
  9695 ;;		wreg, status,2, status,0, cstack
  9696 ;; Tracked objects:
  9697 ;;		On entry : 0/0
  9698 ;;		On exit  : 0/0
  9699 ;;		Unchanged: 0/0
  9700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;Total ram usage:        1 bytes
  9706 ;; Hardware stack levels used: 1
  9707 ;; Hardware stack levels required when called: 1
  9708 ;; This function calls:
  9709 ;;		_I2C_2_Master_Idle
  9710 ;; This function is called by:
  9711 ;;		_color_writetoaddr
  9712 ;;		_color_read_lum
  9713 ;;		_color_read_Red
  9714 ;;		_color_read_Green
  9715 ;;		_color_read_Blue
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           	psect	text47
  9720   00613E                     __ptext47:
  9721                           	callstack 0
  9722   00613E                     _I2C_2_Master_Write:
  9723                           	callstack 27
  9724                           
  9725                           ;incstack = 0
  9726                           ;I2C_2_Master_Write@data_byte stored from wreg
  9727   00613E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9728   006140                     
  9729                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9730   006140  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  9731   006144                     
  9732                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9733   006144  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9734   006148  0012               	return		;funcret
  9735   00614A                     __end_of_I2C_2_Master_Write:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function _I2C_2_Master_Stop *****************
  9739 ;; Defined at:
  9740 ;;		line 39 in file "i2c.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 1
  9761 ;; This function calls:
  9762 ;;		_I2C_2_Master_Idle
  9763 ;; This function is called by:
  9764 ;;		_color_writetoaddr
  9765 ;;		_color_read_lum
  9766 ;;		_color_read_Red
  9767 ;;		_color_read_Green
  9768 ;;		_color_read_Blue
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text48
  9773   006154                     __ptext48:
  9774                           	callstack 0
  9775   006154                     _I2C_2_Master_Stop:
  9776                           	callstack 27
  9777   006154                     
  9778                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9779   006154  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  9780   006158                     
  9781                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9782   006158  010E               	movlb	14	; () banked
  9783   00615A  85DA               	bsf	218,2,b	;volatile
  9784   00615C                     
  9785                           ; BSR set to: 14
  9786   00615C  0012               	return		;funcret
  9787   00615E                     __end_of_I2C_2_Master_Stop:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function _I2C_2_Master_Start *****************
  9791 ;; Defined at:
  9792 ;;		line 27 in file "i2c.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;		None
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      void 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0, cstack
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;Total ram usage:        0 bytes
  9811 ;; Hardware stack levels used: 1
  9812 ;; Hardware stack levels required when called: 1
  9813 ;; This function calls:
  9814 ;;		_I2C_2_Master_Idle
  9815 ;; This function is called by:
  9816 ;;		_color_writetoaddr
  9817 ;;		_color_read_lum
  9818 ;;		_color_read_Red
  9819 ;;		_color_read_Green
  9820 ;;		_color_read_Blue
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text49
  9825   00615E                     __ptext49:
  9826                           	callstack 0
  9827   00615E                     _I2C_2_Master_Start:
  9828                           	callstack 27
  9829   00615E                     
  9830                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9831   00615E  EC2A  F030         	call	_I2C_2_Master_Idle	;wreg free
  9832   006162                     
  9833                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9834   006162  010E               	movlb	14	; () banked
  9835   006164  81DA               	bsf	218,0,b	;volatile
  9836   006166                     
  9837                           ; BSR set to: 14
  9838   006166  0012               	return		;funcret
  9839   006168                     __end_of_I2C_2_Master_Start:
  9840                           	callstack 0
  9841                           
  9842 ;; *************** function _I2C_2_Master_Idle *****************
  9843 ;; Defined at:
  9844 ;;		line 22 in file "i2c.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9862 ;;Total ram usage:        1 bytes
  9863 ;; Hardware stack levels used: 1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_I2C_2_Master_Start
  9868 ;;		_I2C_2_Master_RepStart
  9869 ;;		_I2C_2_Master_Stop
  9870 ;;		_I2C_2_Master_Write
  9871 ;;		_I2C_2_Master_Read
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text50
  9876   006054                     __ptext50:
  9877                           	callstack 0
  9878   006054                     _I2C_2_Master_Idle:
  9879                           	callstack 27
  9880   006054                     l143:
  9881   006054  010E               	movlb	14	; () banked
  9882   006056  B5D8               	btfsc	216,2,b	;volatile
  9883   006058  EF30  F030         	goto	u4441
  9884   00605C  EF32  F030         	goto	u4440
  9885   006060                     u4441:
  9886   006060  EF2A  F030         	goto	l143
  9887   006064                     u4440:
  9888   006064                     
  9889                           ; BSR set to: 14
  9890   006064  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9891   006068  0E1F               	movlw	31
  9892   00606A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9893   00606C  A4D8               	btfss	status,2,c
  9894   00606E  EF3B  F030         	goto	u4451
  9895   006072  EF3D  F030         	goto	u4450
  9896   006076                     u4451:
  9897   006076  EF2A  F030         	goto	l143
  9898   00607A                     u4450:
  9899   00607A                     
  9900                           ; BSR set to: 14
  9901   00607A  0012               	return		;funcret
  9902   00607C                     __end_of_I2C_2_Master_Idle:
  9903                           	callstack 0
  9904                           
  9905 ;; *************** function _I2C_2_Master_Init *****************
  9906 ;; Defined at:
  9907 ;;		line 4 in file "i2c.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;		None
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9925 ;;Total ram usage:        0 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_color_click_init
  9931 ;;		_main
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text51
  9936   00602A                     __ptext51:
  9937                           	callstack 0
  9938   00602A                     _I2C_2_Master_Init:
  9939                           	callstack 29
  9940   00602A                     
  9941                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9942   00602A  010E               	movlb	14	; () banked
  9943   00602C  51D9               	movf	217,w,b	;volatile
  9944   00602E  0BF0               	andlw	-16
  9945   006030  0908               	iorlw	8
  9946   006032  6FD9               	movwf	217,b	;volatile
  9947   006034                     
  9948                           ; BSR set to: 14
  9949                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9950   006034  8BD9               	bsf	217,5,b	;volatile
  9951                           
  9952                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9953   006036  0E9F               	movlw	159
  9954   006038  6FD6               	movwf	214,b	;volatile
  9955   00603A                     
  9956                           ; BSR set to: 14
  9957                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9958   00603A  8A84               	bsf	132,5,c	;volatile
  9959   00603C                     
  9960                           ; BSR set to: 14
  9961                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9962   00603C  8C84               	bsf	132,6,c	;volatile
  9963   00603E                     
  9964                           ; BSR set to: 14
  9965                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9966   00603E  9BA7               	bcf	167,5,b	;volatile
  9967   006040                     
  9968                           ; BSR set to: 14
  9969                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9970   006040  9DA7               	bcf	167,6,b	;volatile
  9971                           
  9972                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9973   006042  0E1D               	movlw	29
  9974   006044  6F1D               	movwf	29,b	;volatile
  9975                           
  9976                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9977   006046  0E1E               	movlw	30
  9978   006048  6F1C               	movwf	28,b	;volatile
  9979                           
  9980                           ;i2c.c: 18:   RD5PPS=0x1C;
  9981   00604A  0E1C               	movlw	28
  9982   00604C  6F6F               	movwf	111,b	;volatile
  9983                           
  9984                           ;i2c.c: 19:   RD6PPS=0x1B;
  9985   00604E  0E1B               	movlw	27
  9986   006050  6F70               	movwf	112,b	;volatile
  9987   006052                     
  9988                           ; BSR set to: 14
  9989   006052  0012               	return		;funcret
  9990   006054                     __end_of_I2C_2_Master_Init:
  9991                           	callstack 0
  9992                           
  9993 ;; *************** function _YellowMove *****************
  9994 ;; Defined at:
  9995 ;;		line 288 in file "dc_motor.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9998 ;;		 -> motorL(9), 
  9999 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10000 ;;		 -> motorR(9), 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;		None
 10003 ;; Return value:  Size  Location     Type
 10004 ;;                  1    wreg      void 
 10005 ;; Registers used:
 10006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10007 ;; Tracked objects:
 10008 ;;		On entry : 0/0
 10009 ;;		On exit  : 0/0
 10010 ;;		Unchanged: 0/0
 10011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;Total ram usage:        4 bytes
 10017 ;; Hardware stack levels used: 1
 10018 ;; Hardware stack levels required when called: 4
 10019 ;; This function calls:
 10020 ;;		_reverseDetect
 10021 ;;		_reverseOneBlock
 10022 ;;		_turnRight45
 10023 ;; This function is called by:
 10024 ;;		_main
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text52
 10029   005A6C                     __ptext52:
 10030                           	callstack 0
 10031   005A6C                     _YellowMove:
 10032                           	callstack 26
 10033   005A6C                     
 10034                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10035   005A6C  0EC5               	movlw	low _motorL
 10036   005A6E  6E1A               	movwf	reverseDetect@mL^0,c
 10037   005A70  0E01               	movlw	high _motorL
 10038   005A72  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10039   005A74  0EBC               	movlw	low _motorR
 10040   005A76  6E1C               	movwf	reverseDetect@mR^0,c
 10041   005A78  0E01               	movlw	high _motorR
 10042   005A7A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10043   005A7C  EC0D  F02C         	call	_reverseDetect	;wreg free
 10044                           
 10045                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10046   005A80  0EC5               	movlw	low _motorL
 10047   005A82  6E1A               	movwf	reverseOneBlock@mL^0,c
 10048   005A84  0E01               	movlw	high _motorL
 10049   005A86  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10050   005A88  0EBC               	movlw	low _motorR
 10051   005A8A  6E1C               	movwf	reverseOneBlock@mR^0,c
 10052   005A8C  0E01               	movlw	high _motorR
 10053   005A8E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10054   005A90  ECE0  F02B         	call	_reverseOneBlock	;wreg free
 10055                           
 10056                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10057   005A94  0EC5               	movlw	low _motorL
 10058   005A96  6E1A               	movwf	turnRight45@mL^0,c
 10059   005A98  0E01               	movlw	high _motorL
 10060   005A9A  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10061   005A9C  0EBC               	movlw	low _motorR
 10062   005A9E  6E1C               	movwf	turnRight45@mR^0,c
 10063   005AA0  0E01               	movlw	high _motorR
 10064   005AA2  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10065   005AA4  EC50  F02E         	call	_turnRight45	;wreg free
 10066                           
 10067                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10068   005AA8  0EC5               	movlw	low _motorL
 10069   005AAA  6E1A               	movwf	turnRight45@mL^0,c
 10070   005AAC  0E01               	movlw	high _motorL
 10071   005AAE  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10072   005AB0  0EBC               	movlw	low _motorR
 10073   005AB2  6E1C               	movwf	turnRight45@mR^0,c
 10074   005AB4  0E01               	movlw	high _motorR
 10075   005AB6  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10076   005AB8  EC50  F02E         	call	_turnRight45	;wreg free
 10077   005ABC  0012               	return		;funcret
 10078   005ABE                     __end_of_YellowMove:
 10079                           	callstack 0
 10080                           
 10081 ;; *************** function _turnRight45 *****************
 10082 ;; Defined at:
 10083 ;;		line 211 in file "dc_motor.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10086 ;;		 -> motorL(9), 
 10087 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10088 ;;		 -> motorR(9), 
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;		None
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10100 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10103 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10104 ;;Total ram usage:        6 bytes
 10105 ;; Hardware stack levels used: 1
 10106 ;; Hardware stack levels required when called: 3
 10107 ;; This function calls:
 10108 ;;		_TurnDelay
 10109 ;;		_stop
 10110 ;;		_turnRight
 10111 ;; This function is called by:
 10112 ;;		_RedMove
 10113 ;;		_BlueMove
 10114 ;;		_YellowMove
 10115 ;;		_OrangeMove
 10116 ;;		_ReverseYellow
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text53
 10121   005CA0                     __ptext53:
 10122                           	callstack 0
 10123   005CA0                     _turnRight45:
 10124                           	callstack 25
 10125   005CA0                     
 10126                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10127   005CA0  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10128   005CA4  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10129   005CA8  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10130   005CAC  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10131   005CB0  ECA7  F028         	call	_turnRight	;wreg free
 10132   005CB4                     
 10133                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10134   005CB4  C0FB  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10135   005CB8  C0FC  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10136   005CBC  ECE2  F02F         	call	_TurnDelay	;wreg free
 10137   005CC0                     
 10138                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10139   005CC0  0EC5               	movlw	low _motorL
 10140   005CC2  6E14               	movwf	stop@mL^0,c
 10141   005CC4  0E01               	movlw	high _motorL
 10142   005CC6  6E15               	movwf	(stop@mL+1)^0,c
 10143   005CC8  0EBC               	movlw	low _motorR
 10144   005CCA  6E16               	movwf	stop@mR^0,c
 10145   005CCC  0E01               	movlw	high _motorR
 10146   005CCE  6E17               	movwf	(stop@mR+1)^0,c
 10147   005CD0  EC68  F02A         	call	_stop	;wreg free
 10148   005CD4                     
 10149                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10150   005CD4  0E05               	movlw	5
 10151   005CD6  6E1F               	movwf	(??_turnRight45+1)^0,c
 10152   005CD8  0E0F               	movlw	15
 10153   005CDA  6E1E               	movwf	??_turnRight45^0,c
 10154   005CDC  0EF1               	movlw	241
 10155   005CDE                     u6167:
 10156   005CDE  2EE8               	decfsz	wreg,f,c
 10157   005CE0  D7FE               	bra	u6167
 10158   005CE2  2E1E               	decfsz	??_turnRight45^0,f,c
 10159   005CE4  D7FC               	bra	u6167
 10160   005CE6  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10161   005CE8  D7FA               	bra	u6167
 10162   005CEA  F000               	nop	
 10163   005CEC  0012               	return		;funcret
 10164   005CEE                     __end_of_turnRight45:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function _turnRight *****************
 10168 ;; Defined at:
 10169 ;;		line 129 in file "dc_motor.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10172 ;;		 -> motorL(9), 
 10173 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10174 ;;		 -> motorR(9), 
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10190 ;;Total ram usage:        6 bytes
 10191 ;; Hardware stack levels used: 1
 10192 ;; Hardware stack levels required when called: 2
 10193 ;; This function calls:
 10194 ;;		_setMotorPWM
 10195 ;; This function is called by:
 10196 ;;		_turnRight45
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           	psect	text54
 10201   00514E                     __ptext54:
 10202                           	callstack 0
 10203   00514E                     _turnRight:
 10204                           	callstack 25
 10205   00514E                     
 10206                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10207   00514E  EE20 F001          	lfsr	2,1
 10208   005152  5014               	movf	turnRight@mL^0,w,c
 10209   005154  26D9               	addwf	fsr2l,f,c
 10210   005156  5015               	movf	(turnRight@mL+1)^0,w,c
 10211   005158  22DA               	addwfc	fsr2h,f,c
 10212   00515A  0E01               	movlw	1
 10213   00515C  6EDF               	movwf	indf2,c
 10214                           
 10215                           ;dc_motor.c: 132:     mR->direction =0;
 10216   00515E  EE20 F001          	lfsr	2,1
 10217   005162  5016               	movf	turnRight@mR^0,w,c
 10218   005164  26D9               	addwf	fsr2l,f,c
 10219   005166  5017               	movf	(turnRight@mR+1)^0,w,c
 10220   005168  22DA               	addwfc	fsr2h,f,c
 10221   00516A  0E00               	movlw	0
 10222   00516C  6EDF               	movwf	indf2,c
 10223                           
 10224                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10225   00516E  EFDD  F028         	goto	l4730
 10226   005172                     l4722:
 10227                           
 10228                           ;dc_motor.c: 136:         mL->power+=10;
 10229   005172  C014  FFD9         	movff	turnRight@mL,fsr2l
 10230   005176  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10231   00517A  0E0A               	movlw	10
 10232   00517C  26DF               	addwf	indf2,f,c
 10233                           
 10234                           ;dc_motor.c: 137:         mR->power+=10;
 10235   00517E  C016  FFD9         	movff	turnRight@mR,fsr2l
 10236   005182  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10237   005186  0E0A               	movlw	10
 10238   005188  26DF               	addwf	indf2,f,c
 10239   00518A                     
 10240                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10241   00518A  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10242   00518E  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10243   005192  ECF6  F023         	call	_setMotorPWM	;wreg free
 10244   005196                     
 10245                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10246   005196  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10247   00519A  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10248   00519E  ECF6  F023         	call	_setMotorPWM	;wreg free
 10249   0051A2                     
 10250                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10251   0051A2  0E02               	movlw	2
 10252   0051A4  6E19               	movwf	(??_turnRight+1)^0,c
 10253   0051A6  0EA0               	movlw	160
 10254   0051A8  6E18               	movwf	??_turnRight^0,c
 10255   0051AA  0E92               	movlw	146
 10256   0051AC                     u6177:
 10257   0051AC  2EE8               	decfsz	wreg,f,c
 10258   0051AE  D7FE               	bra	u6177
 10259   0051B0  2E18               	decfsz	??_turnRight^0,f,c
 10260   0051B2  D7FC               	bra	u6177
 10261   0051B4  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10262   0051B6  D7FA               	bra	u6177
 10263   0051B8  D000               	nop2	
 10264   0051BA                     l4730:
 10265   0051BA  C014  FFD9         	movff	turnRight@mL,fsr2l
 10266   0051BE  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10267   0051C2  0E1E               	movlw	30
 10268   0051C4  60DF               	cpfslt	indf2,c
 10269   0051C6  EFE7  F028         	goto	u4521
 10270   0051CA  EFE9  F028         	goto	u4520
 10271   0051CE                     u4521:
 10272   0051CE  EFF5  F028         	goto	l513
 10273   0051D2                     u4520:
 10274   0051D2  C016  FFD9         	movff	turnRight@mR,fsr2l
 10275   0051D6  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10276   0051DA  0E1D               	movlw	29
 10277   0051DC  64DF               	cpfsgt	indf2,c
 10278   0051DE  EFF3  F028         	goto	u4531
 10279   0051E2  EFF5  F028         	goto	u4530
 10280   0051E6                     u4531:
 10281   0051E6  EFB9  F028         	goto	l4722
 10282   0051EA                     u4530:
 10283   0051EA                     l513:
 10284   0051EA  0012               	return		;funcret
 10285   0051EC                     __end_of_turnRight:
 10286                           	callstack 0
 10287                           
 10288 ;; *************** function _Timer0_init *****************
 10289 ;; Defined at:
 10290 ;;		line 8 in file "timers.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used: 1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text55
 10318   0060E8                     __ptext55:
 10319                           	callstack 0
 10320   0060E8                     _Timer0_init:
 10321                           	callstack 30
 10322   0060E8                     
 10323                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10324   0060E8  50D6               	movf	214,w,c	;volatile
 10325   0060EA  0B1F               	andlw	-225
 10326   0060EC  0940               	iorlw	64
 10327   0060EE  6ED6               	movwf	214,c	;volatile
 10328   0060F0                     
 10329                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10330   0060F0  88D6               	bsf	214,4,c	;volatile
 10331                           
 10332                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10333   0060F2  50D6               	movf	214,w,c	;volatile
 10334   0060F4  0BF0               	andlw	-16
 10335   0060F6  090E               	iorlw	14
 10336   0060F8  6ED6               	movwf	214,c	;volatile
 10337   0060FA                     
 10338                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10339   0060FA  88D5               	bsf	213,4,c	;volatile
 10340                           
 10341                           ;timers.c: 16:     TMR0H=0;
 10342   0060FC  0E00               	movlw	0
 10343   0060FE  6ED4               	movwf	212,c	;volatile
 10344                           
 10345                           ;timers.c: 17:     TMR0L=0;
 10346   006100  0E00               	movlw	0
 10347   006102  6ED3               	movwf	211,c	;volatile
 10348   006104                     
 10349                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10350   006104  9ED5               	bcf	213,7,c	;volatile
 10351   006106  0012               	return		;funcret
 10352   006108                     __end_of_Timer0_init:
 10353                           	callstack 0
 10354                           
 10355 ;; *************** function _RetryMove *****************
 10356 ;; Defined at:
 10357 ;;		line 325 in file "dc_motor.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10360 ;;		 -> motorL(9), 
 10361 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10362 ;;		 -> motorR(9), 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;Total ram usage:        6 bytes
 10379 ;; Hardware stack levels used: 1
 10380 ;; Hardware stack levels required when called: 4
 10381 ;; This function calls:
 10382 ;;		_fullSpeedAhead
 10383 ;;		_reverseDetect
 10384 ;;		_stop
 10385 ;; This function is called by:
 10386 ;;		_main
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           	psect	text56
 10391   00544E                     __ptext56:
 10392                           	callstack 0
 10393   00544E                     _RetryMove:
 10394                           	callstack 26
 10395   00544E                     
 10396                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
 10397   00544E  0EC5               	movlw	low _motorL
 10398   005450  6E1A               	movwf	reverseDetect@mL^0,c
 10399   005452  0E01               	movlw	high _motorL
 10400   005454  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10401   005456  0EBC               	movlw	low _motorR
 10402   005458  6E1C               	movwf	reverseDetect@mR^0,c
 10403   00545A  0E01               	movlw	high _motorR
 10404   00545C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10405   00545E  EC0D  F02C         	call	_reverseDetect	;wreg free
 10406   005462                     
 10407                           ;dc_motor.c: 327:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10408   005462  0E05               	movlw	5
 10409   005464  6E25               	movwf	(??_RetryMove+1)^0,c
 10410   005466  0E0F               	movlw	15
 10411   005468  6E24               	movwf	??_RetryMove^0,c
 10412   00546A  0EF1               	movlw	241
 10413   00546C                     u6187:
 10414   00546C  2EE8               	decfsz	wreg,f,c
 10415   00546E  D7FE               	bra	u6187
 10416   005470  2E24               	decfsz	??_RetryMove^0,f,c
 10417   005472  D7FC               	bra	u6187
 10418   005474  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10419   005476  D7FA               	bra	u6187
 10420   005478  F000               	nop	
 10421   00547A                     
 10422                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10423   00547A  0EC5               	movlw	low _motorL
 10424   00547C  6E14               	movwf	stop@mL^0,c
 10425   00547E  0E01               	movlw	high _motorL
 10426   005480  6E15               	movwf	(stop@mL+1)^0,c
 10427   005482  0EBC               	movlw	low _motorR
 10428   005484  6E16               	movwf	stop@mR^0,c
 10429   005486  0E01               	movlw	high _motorR
 10430   005488  6E17               	movwf	(stop@mR+1)^0,c
 10431   00548A  EC68  F02A         	call	_stop	;wreg free
 10432   00548E                     
 10433                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10434   00548E  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10435   005492  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10436   005496  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10437   00549A  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10438   00549E  EC94  F029         	call	_fullSpeedAhead	;wreg free
 10439   0054A2                     
 10440                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10441   0054A2  0E29               	movlw	41
 10442   0054A4  6E25               	movwf	(??_RetryMove+1)^0,c
 10443   0054A6  0E96               	movlw	150
 10444   0054A8  6E24               	movwf	??_RetryMove^0,c
 10445   0054AA  0E7F               	movlw	127
 10446   0054AC                     u6197:
 10447   0054AC  2EE8               	decfsz	wreg,f,c
 10448   0054AE  D7FE               	bra	u6197
 10449   0054B0  2E24               	decfsz	??_RetryMove^0,f,c
 10450   0054B2  D7FC               	bra	u6197
 10451   0054B4  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10452   0054B6  D7FA               	bra	u6197
 10453   0054B8  F000               	nop	
 10454                           
 10455                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10456   0054BA  0EC5               	movlw	low _motorL
 10457   0054BC  6E14               	movwf	stop@mL^0,c
 10458   0054BE  0E01               	movlw	high _motorL
 10459   0054C0  6E15               	movwf	(stop@mL+1)^0,c
 10460   0054C2  0EBC               	movlw	low _motorR
 10461   0054C4  6E16               	movwf	stop@mR^0,c
 10462   0054C6  0E01               	movlw	high _motorR
 10463   0054C8  6E17               	movwf	(stop@mR+1)^0,c
 10464   0054CA  EC68  F02A         	call	_stop	;wreg free
 10465   0054CE  0012               	return		;funcret
 10466   0054D0                     __end_of_RetryMove:
 10467                           	callstack 0
 10468                           
 10469 ;; *************** function _PinkMove *****************
 10470 ;; Defined at:
 10471 ;;		line 298 in file "dc_motor.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10474 ;;		 -> motorL(9), 
 10475 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10476 ;;		 -> motorR(9), 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;		None
 10479 ;; Return value:  Size  Location     Type
 10480 ;;                  1    wreg      void 
 10481 ;; Registers used:
 10482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;Total ram usage:        4 bytes
 10493 ;; Hardware stack levels used: 1
 10494 ;; Hardware stack levels required when called: 4
 10495 ;; This function calls:
 10496 ;;		_reverseDetect
 10497 ;;		_reverseOneBlock
 10498 ;;		_turnLeft45
 10499 ;; This function is called by:
 10500 ;;		_main
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text57
 10505   005ABE                     __ptext57:
 10506                           	callstack 0
 10507   005ABE                     _PinkMove:
 10508                           	callstack 26
 10509   005ABE                     
 10510                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10511   005ABE  0EC5               	movlw	low _motorL
 10512   005AC0  6E1A               	movwf	reverseDetect@mL^0,c
 10513   005AC2  0E01               	movlw	high _motorL
 10514   005AC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10515   005AC6  0EBC               	movlw	low _motorR
 10516   005AC8  6E1C               	movwf	reverseDetect@mR^0,c
 10517   005ACA  0E01               	movlw	high _motorR
 10518   005ACC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10519   005ACE  EC0D  F02C         	call	_reverseDetect	;wreg free
 10520                           
 10521                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10522   005AD2  0EC5               	movlw	low _motorL
 10523   005AD4  6E1A               	movwf	reverseOneBlock@mL^0,c
 10524   005AD6  0E01               	movlw	high _motorL
 10525   005AD8  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10526   005ADA  0EBC               	movlw	low _motorR
 10527   005ADC  6E1C               	movwf	reverseOneBlock@mR^0,c
 10528   005ADE  0E01               	movlw	high _motorR
 10529   005AE0  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10530   005AE2  ECE0  F02B         	call	_reverseOneBlock	;wreg free
 10531                           
 10532                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10533   005AE6  0EC5               	movlw	low _motorL
 10534   005AE8  6E1A               	movwf	turnLeft45@mL^0,c
 10535   005AEA  0E01               	movlw	high _motorL
 10536   005AEC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10537   005AEE  0EBC               	movlw	low _motorR
 10538   005AF0  6E1C               	movwf	turnLeft45@mR^0,c
 10539   005AF2  0E01               	movlw	high _motorR
 10540   005AF4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10541   005AF6  EC77  F02E         	call	_turnLeft45	;wreg free
 10542                           
 10543                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10544   005AFA  0EC5               	movlw	low _motorL
 10545   005AFC  6E1A               	movwf	turnLeft45@mL^0,c
 10546   005AFE  0E01               	movlw	high _motorL
 10547   005B00  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10548   005B02  0EBC               	movlw	low _motorR
 10549   005B04  6E1C               	movwf	turnLeft45@mR^0,c
 10550   005B06  0E01               	movlw	high _motorR
 10551   005B08  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10552   005B0A  EC77  F02E         	call	_turnLeft45	;wreg free
 10553   005B0E  0012               	return		;funcret
 10554   005B10                     __end_of_PinkMove:
 10555                           	callstack 0
 10556                           
 10557 ;; *************** function _turnLeft45 *****************
 10558 ;; Defined at:
 10559 ;;		line 218 in file "dc_motor.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10562 ;;		 -> motorL(9), 
 10563 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10564 ;;		 -> motorR(9), 
 10565 ;; Auto vars:     Size  Location     Type
 10566 ;;		None
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      void 
 10569 ;; Registers used:
 10570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10571 ;; Tracked objects:
 10572 ;;		On entry : 0/0
 10573 ;;		On exit  : 0/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10580 ;;Total ram usage:        6 bytes
 10581 ;; Hardware stack levels used: 1
 10582 ;; Hardware stack levels required when called: 3
 10583 ;; This function calls:
 10584 ;;		_TurnDelay
 10585 ;;		_stop
 10586 ;;		_turnLeft
 10587 ;; This function is called by:
 10588 ;;		_GreenMove
 10589 ;;		_PinkMove
 10590 ;;		_LightBlueMove
 10591 ;;		_ReversePink
 10592 ;;		_turnCalibration
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           	psect	text58
 10597   005CEE                     __ptext58:
 10598                           	callstack 0
 10599   005CEE                     _turnLeft45:
 10600                           	callstack 26
 10601   005CEE                     
 10602                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10603   005CEE  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10604   005CF2  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10605   005CF6  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10606   005CFA  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10607   005CFE  ECF6  F028         	call	_turnLeft	;wreg free
 10608   005D02                     
 10609                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10610   005D02  C0FB  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10611   005D06  C0FC  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10612   005D0A  ECE2  F02F         	call	_TurnDelay	;wreg free
 10613   005D0E                     
 10614                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10615   005D0E  0EC5               	movlw	low _motorL
 10616   005D10  6E14               	movwf	stop@mL^0,c
 10617   005D12  0E01               	movlw	high _motorL
 10618   005D14  6E15               	movwf	(stop@mL+1)^0,c
 10619   005D16  0EBC               	movlw	low _motorR
 10620   005D18  6E16               	movwf	stop@mR^0,c
 10621   005D1A  0E01               	movlw	high _motorR
 10622   005D1C  6E17               	movwf	(stop@mR+1)^0,c
 10623   005D1E  EC68  F02A         	call	_stop	;wreg free
 10624   005D22                     
 10625                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10626   005D22  0E05               	movlw	5
 10627   005D24  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10628   005D26  0E0F               	movlw	15
 10629   005D28  6E1E               	movwf	??_turnLeft45^0,c
 10630   005D2A  0EF1               	movlw	241
 10631   005D2C                     u6207:
 10632   005D2C  2EE8               	decfsz	wreg,f,c
 10633   005D2E  D7FE               	bra	u6207
 10634   005D30  2E1E               	decfsz	??_turnLeft45^0,f,c
 10635   005D32  D7FC               	bra	u6207
 10636   005D34  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10637   005D36  D7FA               	bra	u6207
 10638   005D38  F000               	nop	
 10639   005D3A  0012               	return		;funcret
 10640   005D3C                     __end_of_turnLeft45:
 10641                           	callstack 0
 10642                           
 10643 ;; *************** function _turnLeft *****************
 10644 ;; Defined at:
 10645 ;;		line 111 in file "dc_motor.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10648 ;;		 -> motorL(9), 
 10649 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10650 ;;		 -> motorR(9), 
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;Total ram usage:        6 bytes
 10667 ;; Hardware stack levels used: 1
 10668 ;; Hardware stack levels required when called: 2
 10669 ;; This function calls:
 10670 ;;		_setMotorPWM
 10671 ;; This function is called by:
 10672 ;;		_turnLeft45
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text59
 10677   0051EC                     __ptext59:
 10678                           	callstack 0
 10679   0051EC                     _turnLeft:
 10680                           	callstack 26
 10681   0051EC                     
 10682                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10683   0051EC  EE20 F001          	lfsr	2,1
 10684   0051F0  5014               	movf	turnLeft@mL^0,w,c
 10685   0051F2  26D9               	addwf	fsr2l,f,c
 10686   0051F4  5015               	movf	(turnLeft@mL+1)^0,w,c
 10687   0051F6  22DA               	addwfc	fsr2h,f,c
 10688   0051F8  0E00               	movlw	0
 10689   0051FA  6EDF               	movwf	indf2,c
 10690                           
 10691                           ;dc_motor.c: 114:     mR->direction =1;
 10692   0051FC  EE20 F001          	lfsr	2,1
 10693   005200  5016               	movf	turnLeft@mR^0,w,c
 10694   005202  26D9               	addwf	fsr2l,f,c
 10695   005204  5017               	movf	(turnLeft@mR+1)^0,w,c
 10696   005206  22DA               	addwfc	fsr2h,f,c
 10697   005208  0E01               	movlw	1
 10698   00520A  6EDF               	movwf	indf2,c
 10699                           
 10700                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10701   00520C  EF2C  F029         	goto	l4716
 10702   005210                     l4708:
 10703                           
 10704                           ;dc_motor.c: 118:         mL->power+=10;
 10705   005210  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10706   005214  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10707   005218  0E0A               	movlw	10
 10708   00521A  26DF               	addwf	indf2,f,c
 10709                           
 10710                           ;dc_motor.c: 119:         mR->power+=10;
 10711   00521C  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10712   005220  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10713   005224  0E0A               	movlw	10
 10714   005226  26DF               	addwf	indf2,f,c
 10715   005228                     
 10716                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10717   005228  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10718   00522C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10719   005230  ECF6  F023         	call	_setMotorPWM	;wreg free
 10720   005234                     
 10721                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10722   005234  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10723   005238  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10724   00523C  ECF6  F023         	call	_setMotorPWM	;wreg free
 10725   005240                     
 10726                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10727   005240  0E02               	movlw	2
 10728   005242  6E19               	movwf	(??_turnLeft+1)^0,c
 10729   005244  0EA0               	movlw	160
 10730   005246  6E18               	movwf	??_turnLeft^0,c
 10731   005248  0E92               	movlw	146
 10732   00524A                     u6217:
 10733   00524A  2EE8               	decfsz	wreg,f,c
 10734   00524C  D7FE               	bra	u6217
 10735   00524E  2E18               	decfsz	??_turnLeft^0,f,c
 10736   005250  D7FC               	bra	u6217
 10737   005252  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10738   005254  D7FA               	bra	u6217
 10739   005256  D000               	nop2	
 10740   005258                     l4716:
 10741   005258  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10742   00525C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10743   005260  0E1E               	movlw	30
 10744   005262  60DF               	cpfslt	indf2,c
 10745   005264  EF36  F029         	goto	u4501
 10746   005268  EF38  F029         	goto	u4500
 10747   00526C                     u4501:
 10748   00526C  EF44  F029         	goto	l505
 10749   005270                     u4500:
 10750   005270  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10751   005274  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10752   005278  0E1D               	movlw	29
 10753   00527A  64DF               	cpfsgt	indf2,c
 10754   00527C  EF42  F029         	goto	u4511
 10755   005280  EF44  F029         	goto	u4510
 10756   005284                     u4511:
 10757   005284  EF08  F029         	goto	l4708
 10758   005288                     u4510:
 10759   005288                     l505:
 10760   005288  0012               	return		;funcret
 10761   00528A                     __end_of_turnLeft:
 10762                           	callstack 0
 10763                           
 10764 ;; *************** function _TurnDelay *****************
 10765 ;; Defined at:
 10766 ;;		line 204 in file "dc_motor.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  Turn45Delay     2    0[COMRAM] int 
 10769 ;; Auto vars:     Size  Location     Type
 10770 ;;		None
 10771 ;; Return value:  Size  Location     Type
 10772 ;;                  1    wreg      void 
 10773 ;; Registers used:
 10774 ;;		wreg, status,2, status,0
 10775 ;; Tracked objects:
 10776 ;;		On entry : 0/0
 10777 ;;		On exit  : 0/0
 10778 ;;		Unchanged: 0/0
 10779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10783 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10784 ;;Total ram usage:        3 bytes
 10785 ;; Hardware stack levels used: 1
 10786 ;; This function calls:
 10787 ;;		Nothing
 10788 ;; This function is called by:
 10789 ;;		_turnRight45
 10790 ;;		_turnLeft45
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text60
 10795   005FC4                     __ptext60:
 10796                           	callstack 0
 10797   005FC4                     _TurnDelay:
 10798                           	callstack 28
 10799   005FC4                     
 10800                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10801   005FC4  EFEF  F02F         	goto	l540
 10802   005FC8                     l4750:
 10803                           
 10804                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10805   005FC8  0E15               	movlw	21
 10806   005FCA  6E03               	movwf	??_TurnDelay^0,c
 10807   005FCC  0EC6               	movlw	198
 10808   005FCE                     u6227:
 10809   005FCE  2EE8               	decfsz	wreg,f,c
 10810   005FD0  D7FE               	bra	u6227
 10811   005FD2  2E03               	decfsz	??_TurnDelay^0,f,c
 10812   005FD4  D7FC               	bra	u6227
 10813   005FD6  D000               	nop2	
 10814   005FD8                     
 10815                           ;dc_motor.c: 207:         Turn45Delay--;
 10816   005FD8  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10817   005FDA  A0D8               	btfss	status,0,c
 10818   005FDC  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10819   005FDE                     l540:
 10820                           
 10821                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10822   005FDE  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10823   005FE0  EFFC  F02F         	goto	u4560
 10824   005FE4  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10825   005FE6  E106               	bnz	u4561
 10826   005FE8  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10827   005FEA  B0D8               	btfsc	status,0,c
 10828   005FEC  EFFA  F02F         	goto	u4561
 10829   005FF0  EFFC  F02F         	goto	u4560
 10830   005FF4                     u4561:
 10831   005FF4  EFE4  F02F         	goto	l4750
 10832   005FF8                     u4560:
 10833   005FF8  0012               	return		;funcret
 10834   005FFA                     __end_of_TurnDelay:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _reverseOneBlock *****************
 10838 ;; Defined at:
 10839 ;;		line 232 in file "dc_motor.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10842 ;;		 -> motorL(9), 
 10843 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10844 ;;		 -> motorR(9), 
 10845 ;; Auto vars:     Size  Location     Type
 10846 ;;		None
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      void 
 10849 ;; Registers used:
 10850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 0/0
 10853 ;;		On exit  : 0/0
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10860 ;;Total ram usage:        6 bytes
 10861 ;; Hardware stack levels used: 1
 10862 ;; Hardware stack levels required when called: 3
 10863 ;; This function calls:
 10864 ;;		_fullSpeedBack
 10865 ;;		_stop
 10866 ;; This function is called by:
 10867 ;;		_YellowMove
 10868 ;;		_PinkMove
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text61
 10873   0057C0                     __ptext61:
 10874                           	callstack 0
 10875   0057C0                     _reverseOneBlock:
 10876                           	callstack 26
 10877   0057C0                     
 10878                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10879   0057C0  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10880   0057C4  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10881   0057C8  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10882   0057CC  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10883   0057D0  EC45  F029         	call	_fullSpeedBack	;wreg free
 10884   0057D4                     
 10885                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10886   0057D4  0EA3               	movlw	163
 10887   0057D6  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10888   0057D8  0E57               	movlw	87
 10889   0057DA  6E1E               	movwf	??_reverseOneBlock^0,c
 10890   0057DC  0E02               	movlw	2
 10891   0057DE                     u6237:
 10892   0057DE  2EE8               	decfsz	wreg,f,c
 10893   0057E0  D7FE               	bra	u6237
 10894   0057E2  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10895   0057E4  D7FC               	bra	u6237
 10896   0057E6  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10897   0057E8  D7FA               	bra	u6237
 10898   0057EA  D000               	nop2	
 10899   0057EC                     
 10900                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10901   0057EC  0EC5               	movlw	low _motorL
 10902   0057EE  6E14               	movwf	stop@mL^0,c
 10903   0057F0  0E01               	movlw	high _motorL
 10904   0057F2  6E15               	movwf	(stop@mL+1)^0,c
 10905   0057F4  0EBC               	movlw	low _motorR
 10906   0057F6  6E16               	movwf	stop@mR^0,c
 10907   0057F8  0E01               	movlw	high _motorR
 10908   0057FA  6E17               	movwf	(stop@mR+1)^0,c
 10909   0057FC  EC68  F02A         	call	_stop	;wreg free
 10910                           
 10911                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10912   005800  0E05               	movlw	5
 10913   005802  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10914   005804  0E0F               	movlw	15
 10915   005806  6E1E               	movwf	??_reverseOneBlock^0,c
 10916   005808  0EF1               	movlw	241
 10917   00580A                     u6247:
 10918   00580A  2EE8               	decfsz	wreg,f,c
 10919   00580C  D7FE               	bra	u6247
 10920   00580E  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10921   005810  D7FC               	bra	u6247
 10922   005812  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10923   005814  D7FA               	bra	u6247
 10924   005816  F000               	nop	
 10925   005818  0012               	return		;funcret
 10926   00581A                     __end_of_reverseOneBlock:
 10927                           	callstack 0
 10928                           
 10929 ;; *************** function _reverseDetect *****************
 10930 ;; Defined at:
 10931 ;;		line 225 in file "dc_motor.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10934 ;;		 -> motorL(9), 
 10935 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10936 ;;		 -> motorR(9), 
 10937 ;; Auto vars:     Size  Location     Type
 10938 ;;		None
 10939 ;; Return value:  Size  Location     Type
 10940 ;;                  1    wreg      void 
 10941 ;; Registers used:
 10942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10943 ;; Tracked objects:
 10944 ;;		On entry : 0/0
 10945 ;;		On exit  : 0/0
 10946 ;;		Unchanged: 0/0
 10947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;Total ram usage:        6 bytes
 10953 ;; Hardware stack levels used: 1
 10954 ;; Hardware stack levels required when called: 3
 10955 ;; This function calls:
 10956 ;;		_fullSpeedBack
 10957 ;;		_stop
 10958 ;; This function is called by:
 10959 ;;		_RedMove
 10960 ;;		_GreenMove
 10961 ;;		_BlueMove
 10962 ;;		_YellowMove
 10963 ;;		_PinkMove
 10964 ;;		_OrangeMove
 10965 ;;		_LightBlueMove
 10966 ;;		_RetryMove
 10967 ;;		_ReverseYellow
 10968 ;;		_ReversePink
 10969 ;;		_go_Home
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text62
 10974   00581A                     __ptext62:
 10975                           	callstack 0
 10976   00581A                     _reverseDetect:
 10977                           	callstack 26
 10978   00581A                     
 10979                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 10980   00581A  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10981   00581E  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10982   005822  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10983   005826  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10984   00582A  EC45  F029         	call	_fullSpeedBack	;wreg free
 10985   00582E                     
 10986                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10987   00582E  0E11               	movlw	17
 10988   005830  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10989   005832  0E3C               	movlw	60
 10990   005834  6E1E               	movwf	??_reverseDetect^0,c
 10991   005836  0ECB               	movlw	203
 10992   005838                     u6257:
 10993   005838  2EE8               	decfsz	wreg,f,c
 10994   00583A  D7FE               	bra	u6257
 10995   00583C  2E1E               	decfsz	??_reverseDetect^0,f,c
 10996   00583E  D7FC               	bra	u6257
 10997   005840  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10998   005842  D7FA               	bra	u6257
 10999   005844  F000               	nop	
 11000   005846                     
 11001                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11002   005846  0EC5               	movlw	low _motorL
 11003   005848  6E14               	movwf	stop@mL^0,c
 11004   00584A  0E01               	movlw	high _motorL
 11005   00584C  6E15               	movwf	(stop@mL+1)^0,c
 11006   00584E  0EBC               	movlw	low _motorR
 11007   005850  6E16               	movwf	stop@mR^0,c
 11008   005852  0E01               	movlw	high _motorR
 11009   005854  6E17               	movwf	(stop@mR+1)^0,c
 11010   005856  EC68  F02A         	call	_stop	;wreg free
 11011                           
 11012                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11013   00585A  0E05               	movlw	5
 11014   00585C  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11015   00585E  0E0F               	movlw	15
 11016   005860  6E1E               	movwf	??_reverseDetect^0,c
 11017   005862  0EF1               	movlw	241
 11018   005864                     u6267:
 11019   005864  2EE8               	decfsz	wreg,f,c
 11020   005866  D7FE               	bra	u6267
 11021   005868  2E1E               	decfsz	??_reverseDetect^0,f,c
 11022   00586A  D7FC               	bra	u6267
 11023   00586C  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11024   00586E  D7FA               	bra	u6267
 11025   005870  F000               	nop	
 11026   005872  0012               	return		;funcret
 11027   005874                     __end_of_reverseDetect:
 11028                           	callstack 0
 11029                           
 11030 ;; *************** function _fullSpeedBack *****************
 11031 ;; Defined at:
 11032 ;;		line 185 in file "dc_motor.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11035 ;;		 -> motorL(9), 
 11036 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11037 ;;		 -> motorR(9), 
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;Total ram usage:        6 bytes
 11054 ;; Hardware stack levels used: 1
 11055 ;; Hardware stack levels required when called: 2
 11056 ;; This function calls:
 11057 ;;		_setMotorPWM
 11058 ;; This function is called by:
 11059 ;;		_reverseDetect
 11060 ;;		_reverseOneBlock
 11061 ;;		_Backhalfblock
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text63
 11066   00528A                     __ptext63:
 11067                           	callstack 0
 11068   00528A                     _fullSpeedBack:
 11069                           	callstack 26
 11070   00528A                     
 11071                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11072   00528A  EE20 F001          	lfsr	2,1
 11073   00528E  5014               	movf	fullSpeedBack@mL^0,w,c
 11074   005290  26D9               	addwf	fsr2l,f,c
 11075   005292  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11076   005294  22DA               	addwfc	fsr2h,f,c
 11077   005296  0E00               	movlw	0
 11078   005298  6EDF               	movwf	indf2,c
 11079                           
 11080                           ;dc_motor.c: 189:     mR->direction =0;
 11081   00529A  EE20 F001          	lfsr	2,1
 11082   00529E  5016               	movf	fullSpeedBack@mR^0,w,c
 11083   0052A0  26D9               	addwf	fsr2l,f,c
 11084   0052A2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11085   0052A4  22DA               	addwfc	fsr2h,f,c
 11086   0052A6  0E00               	movlw	0
 11087   0052A8  6EDF               	movwf	indf2,c
 11088                           
 11089                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11090   0052AA  EF7B  F029         	goto	l4744
 11091   0052AE                     l4736:
 11092                           
 11093                           ;dc_motor.c: 192:         mL->power+=10;
 11094   0052AE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11095   0052B2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11096   0052B6  0E0A               	movlw	10
 11097   0052B8  26DF               	addwf	indf2,f,c
 11098                           
 11099                           ;dc_motor.c: 193:         mR->power+=10;
 11100   0052BA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11101   0052BE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11102   0052C2  0E0A               	movlw	10
 11103   0052C4  26DF               	addwf	indf2,f,c
 11104   0052C6                     
 11105                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11106   0052C6  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11107   0052CA  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11108   0052CE  ECF6  F023         	call	_setMotorPWM	;wreg free
 11109   0052D2                     
 11110                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11111   0052D2  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11112   0052D6  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11113   0052DA  ECF6  F023         	call	_setMotorPWM	;wreg free
 11114   0052DE                     
 11115                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11116   0052DE  0E02               	movlw	2
 11117   0052E0  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11118   0052E2  0EA0               	movlw	160
 11119   0052E4  6E18               	movwf	??_fullSpeedBack^0,c
 11120   0052E6  0E92               	movlw	146
 11121   0052E8                     u6277:
 11122   0052E8  2EE8               	decfsz	wreg,f,c
 11123   0052EA  D7FE               	bra	u6277
 11124   0052EC  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11125   0052EE  D7FC               	bra	u6277
 11126   0052F0  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11127   0052F2  D7FA               	bra	u6277
 11128   0052F4  D000               	nop2	
 11129   0052F6                     l4744:
 11130   0052F6  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11131   0052FA  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11132   0052FE  0E1E               	movlw	30
 11133   005300  60DF               	cpfslt	indf2,c
 11134   005302  EF85  F029         	goto	u4541
 11135   005306  EF87  F029         	goto	u4540
 11136   00530A                     u4541:
 11137   00530A  EF93  F029         	goto	l537
 11138   00530E                     u4540:
 11139   00530E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11140   005312  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11141   005316  0E1D               	movlw	29
 11142   005318  64DF               	cpfsgt	indf2,c
 11143   00531A  EF91  F029         	goto	u4551
 11144   00531E  EF93  F029         	goto	u4550
 11145   005322                     u4551:
 11146   005322  EF57  F029         	goto	l4736
 11147   005326                     u4550:
 11148   005326                     l537:
 11149   005326  0012               	return		;funcret
 11150   005328                     __end_of_fullSpeedBack:
 11151                           	callstack 0
 11152                           
 11153 ;; *************** function _Interrupts_init *****************
 11154 ;; Defined at:
 11155 ;;		line 9 in file "interrupts.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;		None
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;		None
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		None
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11173 ;;Total ram usage:        0 bytes
 11174 ;; Hardware stack levels used: 1
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_main
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text64
 11183   006172                     __ptext64:
 11184                           	callstack 0
 11185   006172                     _Interrupts_init:
 11186                           	callstack 30
 11187   006172  0012               	return		;funcret
 11188   006174                     __end_of_Interrupts_init:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _Forwardhalfblock *****************
 11192 ;; Defined at:
 11193 ;;		line 245 in file "dc_motor.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11196 ;;		 -> motorL(9), 
 11197 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11198 ;;		 -> motorR(9), 
 11199 ;; Auto vars:     Size  Location     Type
 11200 ;;		None
 11201 ;; Return value:  Size  Location     Type
 11202 ;;                  1    wreg      void 
 11203 ;; Registers used:
 11204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11205 ;; Tracked objects:
 11206 ;;		On entry : 0/0
 11207 ;;		On exit  : 0/0
 11208 ;;		Unchanged: 0/0
 11209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;Total ram usage:        6 bytes
 11215 ;; Hardware stack levels used: 1
 11216 ;; Hardware stack levels required when called: 3
 11217 ;; This function calls:
 11218 ;;		_fullSpeedAhead
 11219 ;;		_stop
 11220 ;; This function is called by:
 11221 ;;		_main
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text65
 11226   005874                     __ptext65:
 11227                           	callstack 0
 11228   005874                     _Forwardhalfblock:
 11229                           	callstack 27
 11230   005874                     
 11231                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11232   005874  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11233   005878  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11234   00587C  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11235   005880  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11236   005884  EC94  F029         	call	_fullSpeedAhead	;wreg free
 11237   005888                     
 11238                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11239   005888  0E52               	movlw	82
 11240   00588A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11241   00588C  0E2B               	movlw	43
 11242   00588E  6E1E               	movwf	??_Forwardhalfblock^0,c
 11243   005890  0E00               	movlw	0
 11244   005892                     u6287:
 11245   005892  2EE8               	decfsz	wreg,f,c
 11246   005894  D7FE               	bra	u6287
 11247   005896  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11248   005898  D7FC               	bra	u6287
 11249   00589A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11250   00589C  D7FA               	bra	u6287
 11251   00589E  D000               	nop2	
 11252   0058A0                     
 11253                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11254   0058A0  0EC5               	movlw	low _motorL
 11255   0058A2  6E14               	movwf	stop@mL^0,c
 11256   0058A4  0E01               	movlw	high _motorL
 11257   0058A6  6E15               	movwf	(stop@mL+1)^0,c
 11258   0058A8  0EBC               	movlw	low _motorR
 11259   0058AA  6E16               	movwf	stop@mR^0,c
 11260   0058AC  0E01               	movlw	high _motorR
 11261   0058AE  6E17               	movwf	(stop@mR+1)^0,c
 11262   0058B0  EC68  F02A         	call	_stop	;wreg free
 11263                           
 11264                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11265   0058B4  0E05               	movlw	5
 11266   0058B6  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11267   0058B8  0E0F               	movlw	15
 11268   0058BA  6E1E               	movwf	??_Forwardhalfblock^0,c
 11269   0058BC  0EF1               	movlw	241
 11270   0058BE                     u6297:
 11271   0058BE  2EE8               	decfsz	wreg,f,c
 11272   0058C0  D7FE               	bra	u6297
 11273   0058C2  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11274   0058C4  D7FC               	bra	u6297
 11275   0058C6  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11276   0058C8  D7FA               	bra	u6297
 11277   0058CA  F000               	nop	
 11278   0058CC  0012               	return		;funcret
 11279   0058CE                     __end_of_Forwardhalfblock:
 11280                           	callstack 0
 11281                           
 11282 ;; *************** function _stop *****************
 11283 ;; Defined at:
 11284 ;;		line 93 in file "dc_motor.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11287 ;;		 -> motorL(9), 
 11288 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11289 ;;		 -> motorR(9), 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11305 ;;Total ram usage:        6 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 2
 11308 ;; This function calls:
 11309 ;;		_setMotorPWM
 11310 ;; This function is called by:
 11311 ;;		_main
 11312 ;;		_turnRight45
 11313 ;;		_turnLeft45
 11314 ;;		_reverseDetect
 11315 ;;		_reverseOneBlock
 11316 ;;		_ForwardOneBlock
 11317 ;;		_Forwardhalfblock
 11318 ;;		_RetryMove
 11319 ;;		_go_Home
 11320 ;;		_Backhalfblock
 11321 ;; This function uses a non-reentrant model
 11322 ;;
 11323                           
 11324                           	psect	text66
 11325   0054D0                     __ptext66:
 11326                           	callstack 0
 11327   0054D0                     _stop:
 11328                           	callstack 26
 11329   0054D0                     
 11330                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11331   0054D0  EF8E  F02A         	goto	l4702
 11332   0054D4                     l4694:
 11333                           
 11334                           ;dc_motor.c: 97:         mL->power-=10;
 11335   0054D4  C014  FFD9         	movff	stop@mL,fsr2l
 11336   0054D8  C015  FFDA         	movff	stop@mL+1,fsr2h
 11337   0054DC  0E0A               	movlw	10
 11338   0054DE  5EDF               	subwf	indf2,f,c
 11339                           
 11340                           ;dc_motor.c: 98:         mR->power-=10;
 11341   0054E0  C016  FFD9         	movff	stop@mR,fsr2l
 11342   0054E4  C017  FFDA         	movff	stop@mR+1,fsr2h
 11343   0054E8  0E0A               	movlw	10
 11344   0054EA  5EDF               	subwf	indf2,f,c
 11345   0054EC                     
 11346                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11347   0054EC  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11348   0054F0  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11349   0054F4  ECF6  F023         	call	_setMotorPWM	;wreg free
 11350   0054F8                     
 11351                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11352   0054F8  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11353   0054FC  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11354   005500  ECF6  F023         	call	_setMotorPWM	;wreg free
 11355   005504                     
 11356                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11357   005504  0E02               	movlw	2
 11358   005506  6E19               	movwf	(??_stop+1)^0,c
 11359   005508  0EA0               	movlw	160
 11360   00550A  6E18               	movwf	??_stop^0,c
 11361   00550C  0E92               	movlw	146
 11362   00550E                     u6307:
 11363   00550E  2EE8               	decfsz	wreg,f,c
 11364   005510  D7FE               	bra	u6307
 11365   005512  2E18               	decfsz	??_stop^0,f,c
 11366   005514  D7FC               	bra	u6307
 11367   005516  2E19               	decfsz	(??_stop+1)^0,f,c
 11368   005518  D7FA               	bra	u6307
 11369   00551A  D000               	nop2	
 11370   00551C                     l4702:
 11371                           
 11372                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11373   00551C  C014  FFD9         	movff	stop@mL,fsr2l
 11374   005520  C015  FFDA         	movff	stop@mL+1,fsr2h
 11375   005524  50DF               	movf	indf2,w,c
 11376   005526  A4D8               	btfss	status,2,c
 11377   005528  EF98  F02A         	goto	u4481
 11378   00552C  EF9A  F02A         	goto	u4480
 11379   005530                     u4481:
 11380   005530  EF6A  F02A         	goto	l4694
 11381   005534                     u4480:
 11382   005534  C016  FFD9         	movff	stop@mR,fsr2l
 11383   005538  C017  FFDA         	movff	stop@mR+1,fsr2h
 11384   00553C  50DF               	movf	indf2,w,c
 11385   00553E  A4D8               	btfss	status,2,c
 11386   005540  EFA4  F02A         	goto	u4491
 11387   005544  EFA6  F02A         	goto	u4490
 11388   005548                     u4491:
 11389   005548  EF6A  F02A         	goto	l4694
 11390   00554C                     u4490:
 11391   00554C  0012               	return		;funcret
 11392   00554E                     __end_of_stop:
 11393                           	callstack 0
 11394                           
 11395 ;; *************** function _fullSpeedAhead *****************
 11396 ;; Defined at:
 11397 ;;		line 147 in file "dc_motor.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11400 ;;		 -> motorL(9), 
 11401 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11402 ;;		 -> motorR(9), 
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11418 ;;Total ram usage:        6 bytes
 11419 ;; Hardware stack levels used: 1
 11420 ;; Hardware stack levels required when called: 2
 11421 ;; This function calls:
 11422 ;;		_setMotorPWM
 11423 ;; This function is called by:
 11424 ;;		_main
 11425 ;;		_ForwardOneBlock
 11426 ;;		_Forwardhalfblock
 11427 ;;		_RetryMove
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text67
 11432   005328                     __ptext67:
 11433                           	callstack 0
 11434   005328                     _fullSpeedAhead:
 11435                           	callstack 25
 11436   005328                     
 11437                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11438   005328  EE20 F001          	lfsr	2,1
 11439   00532C  5014               	movf	fullSpeedAhead@mL^0,w,c
 11440   00532E  26D9               	addwf	fsr2l,f,c
 11441   005330  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11442   005332  22DA               	addwfc	fsr2h,f,c
 11443   005334  0E01               	movlw	1
 11444   005336  6EDF               	movwf	indf2,c
 11445                           
 11446                           ;dc_motor.c: 151:     mR->direction =1;
 11447   005338  EE20 F001          	lfsr	2,1
 11448   00533C  5016               	movf	fullSpeedAhead@mR^0,w,c
 11449   00533E  26D9               	addwf	fsr2l,f,c
 11450   005340  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11451   005342  22DA               	addwfc	fsr2h,f,c
 11452   005344  0E01               	movlw	1
 11453   005346  6EDF               	movwf	indf2,c
 11454                           
 11455                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11456   005348  EFCA  F029         	goto	l4688
 11457   00534C                     l4680:
 11458                           
 11459                           ;dc_motor.c: 154:         mL->power+=10;
 11460   00534C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11461   005350  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11462   005354  0E0A               	movlw	10
 11463   005356  26DF               	addwf	indf2,f,c
 11464                           
 11465                           ;dc_motor.c: 155:         mR->power+=10;
 11466   005358  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11467   00535C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11468   005360  0E0A               	movlw	10
 11469   005362  26DF               	addwf	indf2,f,c
 11470   005364                     
 11471                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11472   005364  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11473   005368  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11474   00536C  ECF6  F023         	call	_setMotorPWM	;wreg free
 11475   005370                     
 11476                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11477   005370  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11478   005374  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11479   005378  ECF6  F023         	call	_setMotorPWM	;wreg free
 11480   00537C                     
 11481                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11482   00537C  0E02               	movlw	2
 11483   00537E  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11484   005380  0EA0               	movlw	160
 11485   005382  6E18               	movwf	??_fullSpeedAhead^0,c
 11486   005384  0E92               	movlw	146
 11487   005386                     u6317:
 11488   005386  2EE8               	decfsz	wreg,f,c
 11489   005388  D7FE               	bra	u6317
 11490   00538A  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11491   00538C  D7FC               	bra	u6317
 11492   00538E  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11493   005390  D7FA               	bra	u6317
 11494   005392  D000               	nop2	
 11495   005394                     l4688:
 11496   005394  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11497   005398  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11498   00539C  0E1E               	movlw	30
 11499   00539E  60DF               	cpfslt	indf2,c
 11500   0053A0  EFD4  F029         	goto	u4461
 11501   0053A4  EFD6  F029         	goto	u4460
 11502   0053A8                     u4461:
 11503   0053A8  EFE2  F029         	goto	l521
 11504   0053AC                     u4460:
 11505   0053AC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11506   0053B0  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11507   0053B4  0E1D               	movlw	29
 11508   0053B6  64DF               	cpfsgt	indf2,c
 11509   0053B8  EFE0  F029         	goto	u4471
 11510   0053BC  EFE2  F029         	goto	u4470
 11511   0053C0                     u4471:
 11512   0053C0  EFA6  F029         	goto	l4680
 11513   0053C4                     u4470:
 11514   0053C4                     l521:
 11515   0053C4  0012               	return		;funcret
 11516   0053C6                     __end_of_fullSpeedAhead:
 11517                           	callstack 0
 11518                           
 11519 ;; *************** function _setMotorPWM *****************
 11520 ;; Defined at:
 11521 ;;		line 68 in file "dc_motor.c"
 11522 ;; Parameters:    Size  Location     Type
 11523 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11524 ;;		 -> motorR(9), motorL(9), 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;  negDuty         1   18[COMRAM] unsigned char 
 11527 ;;  posDuty         1   17[COMRAM] unsigned char 
 11528 ;; Return value:  Size  Location     Type
 11529 ;;                  1    wreg      void 
 11530 ;; Registers used:
 11531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11532 ;; Tracked objects:
 11533 ;;		On entry : 0/0
 11534 ;;		On exit  : 0/0
 11535 ;;		Unchanged: 0/0
 11536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11541 ;;Total ram usage:        6 bytes
 11542 ;; Hardware stack levels used: 1
 11543 ;; Hardware stack levels required when called: 1
 11544 ;; This function calls:
 11545 ;;		___lwdiv
 11546 ;;		___wmul
 11547 ;; This function is called by:
 11548 ;;		_stop
 11549 ;;		_turnLeft
 11550 ;;		_turnRight
 11551 ;;		_fullSpeedAhead
 11552 ;;		_timed_forward
 11553 ;;		_fullSpeedBack
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           
 11557                           	psect	text68
 11558   0047EC                     __ptext68:
 11559                           	callstack 0
 11560   0047EC                     _setMotorPWM:
 11561                           	callstack 26
 11562   0047EC                     
 11563                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11564   0047EC  EE20 F002          	lfsr	2,2
 11565   0047F0  500E               	movf	setMotorPWM@m^0,w,c
 11566   0047F2  26D9               	addwf	fsr2l,f,c
 11567   0047F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11568   0047F6  22DA               	addwfc	fsr2h,f,c
 11569   0047F8  50DF               	movf	indf2,w,c
 11570   0047FA  B4D8               	btfsc	status,2,c
 11571   0047FC  EF02  F024         	goto	u3481
 11572   004800  EF04  F024         	goto	u3480
 11573   004804                     u3481:
 11574   004804  EF38  F024         	goto	l4132
 11575   004808                     u3480:
 11576   004808                     
 11577                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11578   004808  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11579   00480C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11580   004810  50DF               	movf	indf2,w,c
 11581   004812  6E10               	movwf	??_setMotorPWM^0,c
 11582   004814  5010               	movf	??_setMotorPWM^0,w,c
 11583   004816  6E01               	movwf	___wmul@multiplier^0,c
 11584   004818  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11585   00481A  EE20 F003          	lfsr	2,3
 11586   00481E  500E               	movf	setMotorPWM@m^0,w,c
 11587   004820  26D9               	addwf	fsr2l,f,c
 11588   004822  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11589   004824  22DA               	addwfc	fsr2h,f,c
 11590   004826  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11591   00482A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11592   00482E  EC51  F030         	call	___wmul	;wreg free
 11593   004832  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11594   004836  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11595   00483A  0E00               	movlw	0
 11596   00483C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11597   00483E  0E64               	movlw	100
 11598   004840  6E09               	movwf	___lwdiv@divisor^0,c
 11599   004842  ECE4  F02A         	call	___lwdiv	;wreg free
 11600   004846  EE20 F003          	lfsr	2,3
 11601   00484A  500E               	movf	setMotorPWM@m^0,w,c
 11602   00484C  26D9               	addwf	fsr2l,f,c
 11603   00484E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11604   004850  22DA               	addwfc	fsr2h,f,c
 11605   004852  50DF               	movf	indf2,w,c
 11606   004854  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11607   004856  5007               	movf	?___lwdiv^0,w,c
 11608   004858  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11609   00485A  6E12               	movwf	setMotorPWM@posDuty^0,c
 11610   00485C                     
 11611                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11612   00485C  EE20 F003          	lfsr	2,3
 11613   004860  500E               	movf	setMotorPWM@m^0,w,c
 11614   004862  26D9               	addwf	fsr2l,f,c
 11615   004864  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11616   004866  22DA               	addwfc	fsr2h,f,c
 11617   004868  50DF               	movf	indf2,w,c
 11618   00486A  6E13               	movwf	setMotorPWM@negDuty^0,c
 11619                           
 11620                           ;dc_motor.c: 75:     }
 11621   00486C  EF5B  F024         	goto	l4136
 11622   004870                     l4132:
 11623                           
 11624                           ;dc_motor.c: 77:         posDuty=0;
 11625   004870  0E00               	movlw	0
 11626   004872  6E12               	movwf	setMotorPWM@posDuty^0,c
 11627   004874                     
 11628                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11629   004874  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11630   004878  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11631   00487C  50DF               	movf	indf2,w,c
 11632   00487E  6E10               	movwf	??_setMotorPWM^0,c
 11633   004880  5010               	movf	??_setMotorPWM^0,w,c
 11634   004882  6E01               	movwf	___wmul@multiplier^0,c
 11635   004884  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11636   004886  EE20 F003          	lfsr	2,3
 11637   00488A  500E               	movf	setMotorPWM@m^0,w,c
 11638   00488C  26D9               	addwf	fsr2l,f,c
 11639   00488E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11640   004890  22DA               	addwfc	fsr2h,f,c
 11641   004892  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11642   004896  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11643   00489A  EC51  F030         	call	___wmul	;wreg free
 11644   00489E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11645   0048A2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11646   0048A6  0E00               	movlw	0
 11647   0048A8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11648   0048AA  0E64               	movlw	100
 11649   0048AC  6E09               	movwf	___lwdiv@divisor^0,c
 11650   0048AE  ECE4  F02A         	call	___lwdiv	;wreg free
 11651   0048B2  5007               	movf	?___lwdiv^0,w,c
 11652   0048B4  6E13               	movwf	setMotorPWM@negDuty^0,c
 11653   0048B6                     l4136:
 11654                           
 11655                           ;dc_motor.c: 81:     if (m->direction) {
 11656   0048B6  EE20 F001          	lfsr	2,1
 11657   0048BA  500E               	movf	setMotorPWM@m^0,w,c
 11658   0048BC  26D9               	addwf	fsr2l,f,c
 11659   0048BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11660   0048C0  22DA               	addwfc	fsr2h,f,c
 11661   0048C2  50DF               	movf	indf2,w,c
 11662   0048C4  B4D8               	btfsc	status,2,c
 11663   0048C6  EF67  F024         	goto	u3491
 11664   0048CA  EF69  F024         	goto	u3490
 11665   0048CE                     u3491:
 11666   0048CE  EF8B  F024         	goto	l4140
 11667   0048D2                     u3490:
 11668   0048D2                     
 11669                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11670   0048D2  EE20 F005          	lfsr	2,5
 11671   0048D6  500E               	movf	setMotorPWM@m^0,w,c
 11672   0048D8  26D9               	addwf	fsr2l,f,c
 11673   0048DA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11674   0048DC  22DA               	addwfc	fsr2h,f,c
 11675   0048DE  CFDE F010          	movff	postinc2,??_setMotorPWM
 11676   0048E2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11677   0048E6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11678   0048EA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11679   0048EE  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11680                           
 11681                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11682   0048F2  EE20 F007          	lfsr	2,7
 11683   0048F6  500E               	movf	setMotorPWM@m^0,w,c
 11684   0048F8  26D9               	addwf	fsr2l,f,c
 11685   0048FA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11686   0048FC  22DA               	addwfc	fsr2h,f,c
 11687   0048FE  CFDE F010          	movff	postinc2,??_setMotorPWM
 11688   004902  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11689   004906  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11690   00490A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11691   00490E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11692                           
 11693                           ;dc_motor.c: 86:     } else {
 11694   004912  EFAB  F024         	goto	l491
 11695   004916                     l4140:
 11696                           
 11697                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11698   004916  EE20 F005          	lfsr	2,5
 11699   00491A  500E               	movf	setMotorPWM@m^0,w,c
 11700   00491C  26D9               	addwf	fsr2l,f,c
 11701   00491E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11702   004920  22DA               	addwfc	fsr2h,f,c
 11703   004922  CFDE F010          	movff	postinc2,??_setMotorPWM
 11704   004926  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11705   00492A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11706   00492E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11707   004932  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11708                           
 11709                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11710   004936  EE20 F007          	lfsr	2,7
 11711   00493A  500E               	movf	setMotorPWM@m^0,w,c
 11712   00493C  26D9               	addwf	fsr2l,f,c
 11713   00493E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11714   004940  22DA               	addwfc	fsr2h,f,c
 11715   004942  CFDE F010          	movff	postinc2,??_setMotorPWM
 11716   004946  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11717   00494A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11718   00494E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11719   004952  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11720   004956                     l491:
 11721   004956  0012               	return		;funcret
 11722   004958                     __end_of_setMotorPWM:
 11723                           	callstack 0
 11724                           
 11725 ;; *************** function ___wmul *****************
 11726 ;; Defined at:
 11727 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11728 ;; Parameters:    Size  Location     Type
 11729 ;;  multiplier      2    0[COMRAM] unsigned int 
 11730 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;  product         2    4[COMRAM] unsigned int 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;                  2    0[COMRAM] unsigned int 
 11735 ;; Registers used:
 11736 ;;		wreg, status,2, status,0, prodl, prodh
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11746 ;;Total ram usage:        6 bytes
 11747 ;; Hardware stack levels used: 1
 11748 ;; This function calls:
 11749 ;;		Nothing
 11750 ;; This function is called by:
 11751 ;;		_setMotorPWM
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text69
 11756   0060A2                     __ptext69:
 11757                           	callstack 0
 11758   0060A2                     ___wmul:
 11759                           	callstack 26
 11760   0060A2  5001               	movf	___wmul@multiplier^0,w,c
 11761   0060A4  0203               	mulwf	___wmul@multiplicand^0,c
 11762   0060A6  CFF3 F005          	movff	prodl,___wmul@product
 11763   0060AA  CFF4 F006          	movff	prodh,___wmul@product+1
 11764   0060AE  5001               	movf	___wmul@multiplier^0,w,c
 11765   0060B0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11766   0060B2  50F3               	movf	243,w,c
 11767   0060B4  2606               	addwf	(___wmul@product+1)^0,f,c
 11768   0060B6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11769   0060B8  0203               	mulwf	___wmul@multiplicand^0,c
 11770   0060BA  50F3               	movf	243,w,c
 11771   0060BC  2606               	addwf	(___wmul@product+1)^0,f,c
 11772   0060BE  C005  F001         	movff	___wmul@product,?___wmul
 11773   0060C2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11774   0060C6  0012               	return		;funcret
 11775   0060C8                     __end_of___wmul:
 11776                           	callstack 0
 11777                           
 11778 ;; *************** function ___lwdiv *****************
 11779 ;; Defined at:
 11780 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  dividend        2    6[COMRAM] unsigned int 
 11783 ;;  divisor         2    8[COMRAM] unsigned int 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  quotient        2   10[COMRAM] unsigned int 
 11786 ;;  counter         1   12[COMRAM] unsigned char 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  2    6[COMRAM] unsigned int 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;Total ram usage:        7 bytes
 11801 ;; Hardware stack levels used: 1
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_setMotorPWM
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text70
 11810   0055C8                     __ptext70:
 11811                           	callstack 0
 11812   0055C8                     ___lwdiv:
 11813                           	callstack 26
 11814   0055C8  0E00               	movlw	0
 11815   0055CA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11816   0055CC  0E00               	movlw	0
 11817   0055CE  6E0B               	movwf	___lwdiv@quotient^0,c
 11818   0055D0  5009               	movf	___lwdiv@divisor^0,w,c
 11819   0055D2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11820   0055D4  B4D8               	btfsc	status,2,c
 11821   0055D6  EFEF  F02A         	goto	u3441
 11822   0055DA  EFF1  F02A         	goto	u3440
 11823   0055DE                     u3441:
 11824   0055DE  EF19  F02B         	goto	l1194
 11825   0055E2                     u3440:
 11826   0055E2  0E01               	movlw	1
 11827   0055E4  6E0D               	movwf	___lwdiv@counter^0,c
 11828   0055E6  EFF9  F02A         	goto	l4104
 11829   0055EA                     l4102:
 11830   0055EA  90D8               	bcf	status,0,c
 11831   0055EC  3609               	rlcf	___lwdiv@divisor^0,f,c
 11832   0055EE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11833   0055F0  2A0D               	incf	___lwdiv@counter^0,f,c
 11834   0055F2                     l4104:
 11835   0055F2  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11836   0055F4  EFFE  F02A         	goto	u3451
 11837   0055F8  EF00  F02B         	goto	u3450
 11838   0055FC                     u3451:
 11839   0055FC  EFF5  F02A         	goto	l4102
 11840   005600                     u3450:
 11841   005600                     l4106:
 11842   005600  90D8               	bcf	status,0,c
 11843   005602  360B               	rlcf	___lwdiv@quotient^0,f,c
 11844   005604  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11845   005606  5009               	movf	___lwdiv@divisor^0,w,c
 11846   005608  5C07               	subwf	___lwdiv@dividend^0,w,c
 11847   00560A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11848   00560C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11849   00560E  A0D8               	btfss	status,0,c
 11850   005610  EF0C  F02B         	goto	u3461
 11851   005614  EF0E  F02B         	goto	u3460
 11852   005618                     u3461:
 11853   005618  EF13  F02B         	goto	l4114
 11854   00561C                     u3460:
 11855   00561C  5009               	movf	___lwdiv@divisor^0,w,c
 11856   00561E  5E07               	subwf	___lwdiv@dividend^0,f,c
 11857   005620  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11858   005622  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11859   005624  800B               	bsf	___lwdiv@quotient^0,0,c
 11860   005626                     l4114:
 11861   005626  90D8               	bcf	status,0,c
 11862   005628  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11863   00562A  3209               	rrcf	___lwdiv@divisor^0,f,c
 11864   00562C  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11865   00562E  EF00  F02B         	goto	l4106
 11866   005632                     l1194:
 11867   005632  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11868   005636  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11869   00563A  0012               	return		;funcret
 11870   00563C                     __end_of___lwdiv:
 11871                           	callstack 0
 11872                           
 11873 ;; *************** function _Colour_decider *****************
 11874 ;; Defined at:
 11875 ;;		line 125 in file "color.c"
 11876 ;; Parameters:    Size  Location     Type
 11877 ;;  vals            2   74[COMRAM] PTR struct RGB
 11878 ;;		 -> vals(8), 
 11879 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11880 ;;		 -> rel(12), 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  RGB_col        12    6[BANK0 ] float [3]
 11883 ;;  Hue             4   28[BANK0 ] float 
 11884 ;;  Cmin            4   22[BANK0 ] float 
 11885 ;;  Cmax            4   18[BANK0 ] float 
 11886 ;;  i               2   26[BANK0 ] int 
 11887 ;;  Cmax_i          2    4[BANK0 ] int 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  2   74[COMRAM] int 
 11890 ;; Registers used:
 11891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;Total ram usage:       38 bytes
 11902 ;; Hardware stack levels used: 1
 11903 ;; Hardware stack levels required when called: 2
 11904 ;; This function calls:
 11905 ;;		___fladd
 11906 ;;		___fldiv
 11907 ;;		___fleq
 11908 ;;		___flge
 11909 ;;		___flmul
 11910 ;;		___flsub
 11911 ;;		___xxtofl
 11912 ;; This function is called by:
 11913 ;;		_main
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           	psect	text71
 11918   000E5A                     __ptext71:
 11919                           	callstack 0
 11920   000E5A                     _Colour_decider:
 11921                           	callstack 28
 11922   000E5A                     
 11923                           ;color.c: 126:     float Cmax = 0;
 11924   000E5A  0E00               	movlw	0
 11925   000E5C  0100               	movlb	0	; () banked
 11926   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11927   000E60  0E00               	movlw	0
 11928   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11929   000E64  0E00               	movlw	0
 11930   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11931   000E68  0E00               	movlw	0
 11932   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11933                           
 11934                           ;color.c: 127:     float Cmin= 100000;
 11935   000E6C  0E00               	movlw	0
 11936   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11937   000E70  0E50               	movlw	80
 11938   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11939   000E74  0EC3               	movlw	195
 11940   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11941   000E78  0E47               	movlw	71
 11942   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11943                           
 11944                           ;color.c: 128:     int Cmax_i =4;
 11945   000E7C  0E00               	movlw	0
 11946   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11947   000E80  0E04               	movlw	4
 11948   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11949   000E84                     
 11950                           ; BSR set to: 0
 11951                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11952   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11953   000E88  0E0B               	movlw	11
 11954   000E8A                     u5201:
 11955   000E8A  6ADE               	clrf	postinc2,c
 11956   000E8C  06E8               	decf	wreg,f,c
 11957   000E8E  E2FD               	bc	u5201
 11958   000E90                     
 11959                           ; BSR set to: 0
 11960   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11961   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11962   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 11963   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11964   000EA0  0E00               	movlw	0
 11965   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11966   000EA4  0EFF               	movlw	-1
 11967   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 11968   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 11969   000EAA  0E01               	movlw	1
 11970   000EAC  EC58  F022         	call	___xxtofl
 11971   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11972   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11973   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11974   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11975   000EC0  EE20 F002          	lfsr	2,2
 11976   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 11977   000EC6  26D9               	addwf	fsr2l,f,c
 11978   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11979   000ECA  22DA               	addwfc	fsr2h,f,c
 11980   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 11981   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11982   000ED4  0E00               	movlw	0
 11983   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11984   000ED8  0EFF               	movlw	-1
 11985   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 11986   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 11987   000EDE  0E01               	movlw	1
 11988   000EE0  EC58  F022         	call	___xxtofl
 11989   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 11990   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 11991   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 11992   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 11993   000EF4  EE20 F004          	lfsr	2,4
 11994   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 11995   000EFA  26D9               	addwf	fsr2l,f,c
 11996   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11997   000EFE  22DA               	addwfc	fsr2h,f,c
 11998   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 11999   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12000   000F08  0E00               	movlw	0
 12001   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12002   000F0C  0EFF               	movlw	-1
 12003   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 12004   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 12005   000F12  0E01               	movlw	1
 12006   000F14  EC58  F022         	call	___xxtofl
 12007   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12008   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12009   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12010   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12011   000F28                     
 12012                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12013   000F28  0E00               	movlw	0
 12014   000F2A  0100               	movlb	0	; () banked
 12015   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12016   000F2E  0E00               	movlw	0
 12017   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 12018   000F32                     l5372:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12022   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12023   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12024   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12025   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12026   000F42  0E66               	movlw	low Colour_decider@RGB_col
 12027   000F44  6E4F               	movwf	??_Colour_decider^0,c
 12028   000F46  0E00               	movlw	high Colour_decider@RGB_col
 12029   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 12030   000F4A  90D8               	bcf	status,0,c
 12031   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12032   000F4E  6ED9               	movwf	fsr2l,c
 12033   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12034   000F52  6EDA               	movwf	fsr2h,c
 12035   000F54  90D8               	bcf	status,0,c
 12036   000F56  36D9               	rlcf	fsr2l,f,c
 12037   000F58  36DA               	rlcf	fsr2h,f,c
 12038   000F5A  504F               	movf	??_Colour_decider^0,w,c
 12039   000F5C  26D9               	addwf	fsr2l,f,c
 12040   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12041   000F60  22DA               	addwfc	fsr2h,f,c
 12042   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 12043   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12044   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 12045   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 12046   000F72  ECE1  F025         	call	___flge	;wreg free
 12047   000F76  B0D8               	btfsc	status,0,c
 12048   000F78  EFC0  F007         	goto	u5211
 12049   000F7C  EFC2  F007         	goto	u5210
 12050   000F80                     u5211:
 12051   000F80  EFDF  F007         	goto	l5378
 12052   000F84                     u5210:
 12053   000F84                     
 12054                           ;color.c: 137:             Cmax=RGB_col[i];
 12055   000F84  0E66               	movlw	low Colour_decider@RGB_col
 12056   000F86  6E4F               	movwf	??_Colour_decider^0,c
 12057   000F88  0E00               	movlw	high Colour_decider@RGB_col
 12058   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 12059   000F8C  90D8               	bcf	status,0,c
 12060   000F8E  0100               	movlb	0	; () banked
 12061   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12062   000F92  6ED9               	movwf	fsr2l,c
 12063   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12064   000F96  6EDA               	movwf	fsr2h,c
 12065   000F98  90D8               	bcf	status,0,c
 12066   000F9A  36D9               	rlcf	fsr2l,f,c
 12067   000F9C  36DA               	rlcf	fsr2h,f,c
 12068   000F9E  504F               	movf	??_Colour_decider^0,w,c
 12069   000FA0  26D9               	addwf	fsr2l,f,c
 12070   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 12071   000FA4  22DA               	addwfc	fsr2h,f,c
 12072   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12073   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12074   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12075   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12076   000FB6                     
 12077                           ; BSR set to: 0
 12078                           ;color.c: 138:             Cmax_i=i;
 12079   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12080   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12081   000FBE                     l5378:
 12082                           
 12083                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12084   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 12085   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 12086   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 12087   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 12088   000FC6  90D8               	bcf	status,0,c
 12089   000FC8  0100               	movlb	0	; () banked
 12090   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12091   000FCC  6ED9               	movwf	fsr2l,c
 12092   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12093   000FD0  6EDA               	movwf	fsr2h,c
 12094   000FD2  90D8               	bcf	status,0,c
 12095   000FD4  36D9               	rlcf	fsr2l,f,c
 12096   000FD6  36DA               	rlcf	fsr2h,f,c
 12097   000FD8  504F               	movf	??_Colour_decider^0,w,c
 12098   000FDA  26D9               	addwf	fsr2l,f,c
 12099   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 12100   000FDE  22DA               	addwfc	fsr2h,f,c
 12101   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 12102   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12103   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12104   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12105   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12106   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12107   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12108   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12109   001000  ECE1  F025         	call	___flge	;wreg free
 12110   001004  B0D8               	btfsc	status,0,c
 12111   001006  EF07  F008         	goto	u5221
 12112   00100A  EF09  F008         	goto	u5220
 12113   00100E                     u5221:
 12114   00100E  EF22  F008         	goto	l5382
 12115   001012                     u5220:
 12116   001012  0E66               	movlw	low Colour_decider@RGB_col
 12117   001014  6E4F               	movwf	??_Colour_decider^0,c
 12118   001016  0E00               	movlw	high Colour_decider@RGB_col
 12119   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 12120   00101A  90D8               	bcf	status,0,c
 12121   00101C  0100               	movlb	0	; () banked
 12122   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12123   001020  6ED9               	movwf	fsr2l,c
 12124   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12125   001024  6EDA               	movwf	fsr2h,c
 12126   001026  90D8               	bcf	status,0,c
 12127   001028  36D9               	rlcf	fsr2l,f,c
 12128   00102A  36DA               	rlcf	fsr2h,f,c
 12129   00102C  504F               	movf	??_Colour_decider^0,w,c
 12130   00102E  26D9               	addwf	fsr2l,f,c
 12131   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 12132   001032  22DA               	addwfc	fsr2h,f,c
 12133   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12134   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12135   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12136   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12137   001044                     l5382:
 12138                           
 12139                           ;color.c: 141:     }
 12140   001044  0100               	movlb	0	; () banked
 12141   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12142   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12143   00104A                     
 12144                           ; BSR set to: 0
 12145   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12146   00104C  EF31  F008         	goto	u5231
 12147   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12148   001052  E109               	bnz	u5230
 12149   001054  0E03               	movlw	3
 12150   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12151   001058  A0D8               	btfss	status,0,c
 12152   00105A  EF31  F008         	goto	u5231
 12153   00105E  EF33  F008         	goto	u5230
 12154   001062                     u5231:
 12155   001062  EF99  F007         	goto	l5372
 12156   001066                     u5230:
 12157   001066                     
 12158                           ; BSR set to: 0
 12159                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12160   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12161   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12162   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12163   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12164   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12165   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12166   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12167   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12168   001086  ECC4  F02E         	call	___flsub	;wreg free
 12169   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 12170   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12171   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12172   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12173   00109A  0E00               	movlw	0
 12174   00109C  6E36               	movwf	___fleq@ff2^0,c
 12175   00109E  0E00               	movlw	0
 12176   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 12177   0010A2  0E00               	movlw	0
 12178   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 12179   0010A6  0E00               	movlw	0
 12180   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 12181   0010AA  EC52  F028         	call	___fleq	;wreg free
 12182   0010AE  A0D8               	btfss	status,0,c
 12183   0010B0  EF5C  F008         	goto	u5241
 12184   0010B4  EF5E  F008         	goto	u5240
 12185   0010B8                     u5241:
 12186   0010B8  EF64  F008         	goto	l5392
 12187   0010BC                     u5240:
 12188   0010BC                     l5388:
 12189   0010BC  0E00               	movlw	0
 12190   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12191   0010C0  0E00               	movlw	0
 12192   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 12193   0010C4  EF9A  F00C         	goto	l76
 12194   0010C8                     l5392:
 12195                           
 12196                           ;color.c: 146:     if (Cmax_i==0){
 12197   0010C8  0100               	movlb	0	; () banked
 12198   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12199   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12200   0010CE  A4D8               	btfss	status,2,c
 12201   0010D0  EF6C  F008         	goto	u5251
 12202   0010D4  EF6E  F008         	goto	u5250
 12203   0010D8                     u5251:
 12204   0010D8  EFE2  F008         	goto	l5400
 12205   0010DC                     u5250:
 12206   0010DC                     
 12207                           ; BSR set to: 0
 12208                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12209   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12210   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12211   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12212   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12213   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12214   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12215   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12216   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12217   0010FC  ECC4  F02E         	call	___flsub	;wreg free
 12218   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 12219   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12220   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12221   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12222   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12223   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12224   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12225   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12226   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12227   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12228   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12229   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12230   001130  ECC4  F02E         	call	___flsub	;wreg free
 12231   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 12232   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12233   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12234   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12235   001144  ECC9  F018         	call	___fldiv	;wreg free
 12236   001148  C032  F011         	movff	?___fldiv,___flmul@b
 12237   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12238   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12239   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12240   001158  0E00               	movlw	0
 12241   00115A  6E15               	movwf	___flmul@a^0,c
 12242   00115C  0E00               	movlw	0
 12243   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 12244   001160  0E70               	movlw	112
 12245   001162  6E17               	movwf	(___flmul@a+2)^0,c
 12246   001164  0E42               	movlw	66
 12247   001166  6E18               	movwf	(___flmul@a+3)^0,c
 12248   001168  ECB4  F016         	call	___flmul	;wreg free
 12249   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12250   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12251   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12252   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12253   00117C                     
 12254                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12255   00117C  0100               	movlb	0	; () banked
 12256   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12257   001180  EFC6  F008         	goto	u5260
 12258   001184  EFC4  F008         	goto	u5261
 12259   001188                     u5261:
 12260   001188  EFC1  F009         	goto	l5410
 12261   00118C                     u5260:
 12262   00118C                     
 12263                           ; BSR set to: 0
 12264   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12265   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12266   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12267   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12268   00119C  0E00               	movlw	0
 12269   00119E  6E05               	movwf	___fladd@a^0,c
 12270   0011A0  0E00               	movlw	0
 12271   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 12272   0011A4  0EB4               	movlw	180
 12273   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 12274   0011A8  0E43               	movlw	67
 12275   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 12276   0011AC  EC54  F014         	call	___fladd	;wreg free
 12277   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12278   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12279   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12280   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12281   0011C0  EFC1  F009         	goto	l5410
 12282   0011C4                     l5400:
 12283                           
 12284                           ; BSR set to: 0
 12285   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12286   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12287   0011C8  A4D8               	btfss	status,2,c
 12288   0011CA  EFE9  F008         	goto	u5271
 12289   0011CE  EFEB  F008         	goto	u5270
 12290   0011D2                     u5271:
 12291   0011D2  EF57  F009         	goto	l5406
 12292   0011D6                     u5270:
 12293   0011D6                     
 12294                           ; BSR set to: 0
 12295                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12296   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12297   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12298   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12299   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12300   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12301   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12302   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12303   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12304   0011F6  ECC4  F02E         	call	___flsub	;wreg free
 12305   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 12306   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12307   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12308   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12309   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12310   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12311   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12312   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12313   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12314   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12315   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12316   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12317   00122A  ECC4  F02E         	call	___flsub	;wreg free
 12318   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 12319   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12320   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12321   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12322   00123E  ECC9  F018         	call	___fldiv	;wreg free
 12323   001242  C032  F060         	movff	?___fldiv,_Colour_decider$3162
 12324   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$3162+1
 12325   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3162+2
 12326   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3162+3
 12327   001252                     
 12328                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12329   001252  0E00               	movlw	0
 12330   001254  6E05               	movwf	___fladd@a^0,c
 12331   001256  0E00               	movlw	0
 12332   001258  6E06               	movwf	(___fladd@a+1)^0,c
 12333   00125A  0E00               	movlw	0
 12334   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 12335   00125E  0E40               	movlw	64
 12336   001260  6E08               	movwf	(___fladd@a+3)^0,c
 12337   001262  C060  F001         	movff	_Colour_decider$3162,___fladd@b
 12338   001266  C061  F002         	movff	_Colour_decider$3162+1,___fladd@b+1
 12339   00126A  C062  F003         	movff	_Colour_decider$3162+2,___fladd@b+2
 12340   00126E  C063  F004         	movff	_Colour_decider$3162+3,___fladd@b+3
 12341   001272  EC54  F014         	call	___fladd	;wreg free
 12342   001276  C001  F011         	movff	?___fladd,___flmul@b
 12343   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12344   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12345   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12346   001286  0E00               	movlw	0
 12347   001288  6E15               	movwf	___flmul@a^0,c
 12348   00128A  0E00               	movlw	0
 12349   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 12350   00128E  0E70               	movlw	112
 12351   001290  6E17               	movwf	(___flmul@a+2)^0,c
 12352   001292  0E42               	movlw	66
 12353   001294  6E18               	movwf	(___flmul@a+3)^0,c
 12354   001296  ECB4  F016         	call	___flmul	;wreg free
 12355   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12356   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12357   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12358   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12359                           
 12360                           ;color.c: 155:     }
 12361   0012AA  EFC1  F009         	goto	l5410
 12362   0012AE                     l5406:
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12366   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12367   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12368   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12369   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12370   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12371   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12372   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12373   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12374   0012CE  ECC4  F02E         	call	___flsub	;wreg free
 12375   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 12376   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12377   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12378   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12379   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12380   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12381   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12382   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12383   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12384   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12385   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12386   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12387   001302  ECC4  F02E         	call	___flsub	;wreg free
 12388   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 12389   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12390   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12391   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12392   001316  ECC9  F018         	call	___fldiv	;wreg free
 12393   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$3162
 12394   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3162+1
 12395   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$3162+2
 12396   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$3162+3
 12397   00132A                     
 12398                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12399   00132A  0E00               	movlw	0
 12400   00132C  6E05               	movwf	___fladd@a^0,c
 12401   00132E  0E00               	movlw	0
 12402   001330  6E06               	movwf	(___fladd@a+1)^0,c
 12403   001332  0E80               	movlw	128
 12404   001334  6E07               	movwf	(___fladd@a+2)^0,c
 12405   001336  0E40               	movlw	64
 12406   001338  6E08               	movwf	(___fladd@a+3)^0,c
 12407   00133A  C060  F001         	movff	_Colour_decider$3162,___fladd@b
 12408   00133E  C061  F002         	movff	_Colour_decider$3162+1,___fladd@b+1
 12409   001342  C062  F003         	movff	_Colour_decider$3162+2,___fladd@b+2
 12410   001346  C063  F004         	movff	_Colour_decider$3162+3,___fladd@b+3
 12411   00134A  EC54  F014         	call	___fladd	;wreg free
 12412   00134E  C001  F011         	movff	?___fladd,___flmul@b
 12413   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12414   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12415   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12416   00135E  0E00               	movlw	0
 12417   001360  6E15               	movwf	___flmul@a^0,c
 12418   001362  0E00               	movlw	0
 12419   001364  6E16               	movwf	(___flmul@a+1)^0,c
 12420   001366  0E70               	movlw	112
 12421   001368  6E17               	movwf	(___flmul@a+2)^0,c
 12422   00136A  0E42               	movlw	66
 12423   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 12424   00136E  ECB4  F016         	call	___flmul	;wreg free
 12425   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12426   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12427   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12428   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12429   001382                     l5410:
 12430                           
 12431                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12432   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12433   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12434   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12435   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12436   001392  0E00               	movlw	0
 12437   001394  6E2E               	movwf	___flge@ff2^0,c
 12438   001396  0E00               	movlw	0
 12439   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 12440   00139A  0EA5               	movlw	165
 12441   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 12442   00139E  0E43               	movlw	67
 12443   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 12444   0013A2  ECE1  F025         	call	___flge	;wreg free
 12445   0013A6  A0D8               	btfss	status,0,c
 12446   0013A8  EFD8  F009         	goto	u5281
 12447   0013AC  EFDA  F009         	goto	u5280
 12448   0013B0                     u5281:
 12449   0013B0  EFF9  F009         	goto	l5420
 12450   0013B4                     u5280:
 12451   0013B4  0E00               	movlw	0
 12452   0013B6  6E2A               	movwf	___flge@ff1^0,c
 12453   0013B8  0E00               	movlw	0
 12454   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12455   0013BC  0EB4               	movlw	180
 12456   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12457   0013C0  0E43               	movlw	67
 12458   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12459   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12460   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12461   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12462   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12463   0013D4  ECE1  F025         	call	___flge	;wreg free
 12464   0013D8  A0D8               	btfss	status,0,c
 12465   0013DA  EFF1  F009         	goto	u5291
 12466   0013DE  EFF3  F009         	goto	u5290
 12467   0013E2                     u5291:
 12468   0013E2  EFF9  F009         	goto	l5420
 12469   0013E6                     u5290:
 12470   0013E6                     
 12471                           ;color.c: 164:         return 1;
 12472   0013E6  0E00               	movlw	0
 12473   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12474   0013EA  0E01               	movlw	1
 12475   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 12476   0013EE  EF9A  F00C         	goto	l76
 12477   0013F2                     l5420:
 12478   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12479   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12480   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12481   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12482   001402  0E00               	movlw	0
 12483   001404  6E2E               	movwf	___flge@ff2^0,c
 12484   001406  0E00               	movlw	0
 12485   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 12486   00140A  0EA0               	movlw	160
 12487   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 12488   00140E  0E40               	movlw	64
 12489   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 12490   001412  ECE1  F025         	call	___flge	;wreg free
 12491   001416  A0D8               	btfss	status,0,c
 12492   001418  EF10  F00A         	goto	u5301
 12493   00141C  EF12  F00A         	goto	u5300
 12494   001420                     u5301:
 12495   001420  EF31  F00A         	goto	l5430
 12496   001424                     u5300:
 12497   001424  0E00               	movlw	0
 12498   001426  6E2A               	movwf	___flge@ff1^0,c
 12499   001428  0E00               	movlw	0
 12500   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 12501   00142C  0E40               	movlw	64
 12502   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 12503   001430  0E41               	movlw	65
 12504   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 12505   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12506   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12507   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12508   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12509   001444  ECE1  F025         	call	___flge	;wreg free
 12510   001448  A0D8               	btfss	status,0,c
 12511   00144A  EF29  F00A         	goto	u5311
 12512   00144E  EF2B  F00A         	goto	u5310
 12513   001452                     u5311:
 12514   001452  EF31  F00A         	goto	l5430
 12515   001456                     u5310:
 12516   001456                     
 12517                           ;color.c: 168:         return 2;
 12518   001456  0E00               	movlw	0
 12519   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12520   00145A  0E02               	movlw	2
 12521   00145C  6E4B               	movwf	?_Colour_decider^0,c
 12522   00145E  EF9A  F00C         	goto	l76
 12523   001462                     l5430:
 12524   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12525   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12526   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12527   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12528   001472  0E00               	movlw	0
 12529   001474  6E2E               	movwf	___flge@ff2^0,c
 12530   001476  0E00               	movlw	0
 12531   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 12532   00147A  0EA0               	movlw	160
 12533   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 12534   00147E  0E41               	movlw	65
 12535   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 12536   001482  ECE1  F025         	call	___flge	;wreg free
 12537   001486  A0D8               	btfss	status,0,c
 12538   001488  EF48  F00A         	goto	u5321
 12539   00148C  EF4A  F00A         	goto	u5320
 12540   001490                     u5321:
 12541   001490  EFCA  F00A         	goto	l5456
 12542   001494                     u5320:
 12543   001494  0E00               	movlw	0
 12544   001496  6E2A               	movwf	___flge@ff1^0,c
 12545   001498  0E00               	movlw	0
 12546   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 12547   00149C  0EE8               	movlw	232
 12548   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 12549   0014A0  0E41               	movlw	65
 12550   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12551   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12552   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12553   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12554   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12555   0014B4  ECE1  F025         	call	___flge	;wreg free
 12556   0014B8  A0D8               	btfss	status,0,c
 12557   0014BA  EF61  F00A         	goto	u5331
 12558   0014BE  EF63  F00A         	goto	u5330
 12559   0014C2                     u5331:
 12560   0014C2  EFCA  F00A         	goto	l5456
 12561   0014C6                     u5330:
 12562   0014C6                     
 12563                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12564   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12565   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12566   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 12567   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12568   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12569   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12570   0014DE  0ECD               	movlw	205
 12571   0014E0  6E2E               	movwf	___flge@ff2^0,c
 12572   0014E2  0ECC               	movlw	204
 12573   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 12574   0014E6  0E4C               	movlw	76
 12575   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 12576   0014EA  0E3E               	movlw	62
 12577   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 12578   0014EE  ECE1  F025         	call	___flge	;wreg free
 12579   0014F2  A0D8               	btfss	status,0,c
 12580   0014F4  EF7E  F00A         	goto	u5341
 12581   0014F8  EF80  F00A         	goto	u5340
 12582   0014FC                     u5341:
 12583   0014FC  EF9F  F00A         	goto	l5444
 12584   001500                     u5340:
 12585   001500  0E00               	movlw	0
 12586   001502  6E2A               	movwf	___flge@ff1^0,c
 12587   001504  0E00               	movlw	0
 12588   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 12589   001508  0E80               	movlw	128
 12590   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12591   00150C  0E3E               	movlw	62
 12592   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12593   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12594   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12595   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 12596   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12597   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 12598   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 12599   001528  ECE1  F025         	call	___flge	;wreg free
 12600   00152C  A0D8               	btfss	status,0,c
 12601   00152E  EF9B  F00A         	goto	u5351
 12602   001532  EF9D  F00A         	goto	u5350
 12603   001536                     u5351:
 12604   001536  EF9F  F00A         	goto	l5444
 12605   00153A                     u5350:
 12606   00153A  EF5E  F008         	goto	l5388
 12607   00153E                     l5444:
 12608   00153E  EE20 F008          	lfsr	2,8
 12609   001542  504D               	movf	Colour_decider@rel^0,w,c
 12610   001544  26D9               	addwf	fsr2l,f,c
 12611   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12612   001548  22DA               	addwfc	fsr2h,f,c
 12613   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 12614   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12615   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12616   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12617   00155A  0E29               	movlw	41
 12618   00155C  6E2E               	movwf	___flge@ff2^0,c
 12619   00155E  0E5C               	movlw	92
 12620   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 12621   001562  0E0F               	movlw	15
 12622   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 12623   001566  0E3E               	movlw	62
 12624   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 12625   00156A  ECE1  F025         	call	___flge	;wreg free
 12626   00156E  A0D8               	btfss	status,0,c
 12627   001570  EFBC  F00A         	goto	u5361
 12628   001574  EFBE  F00A         	goto	u5360
 12629   001578                     u5361:
 12630   001578  EFC4  F00A         	goto	l5452
 12631   00157C                     u5360:
 12632   00157C                     l5446:
 12633                           
 12634                           ;color.c: 179:             return 4;
 12635   00157C  0E00               	movlw	0
 12636   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12637   001580  0E04               	movlw	4
 12638   001582  6E4B               	movwf	?_Colour_decider^0,c
 12639   001584  EF9A  F00C         	goto	l76
 12640   001588                     l5452:
 12641                           
 12642                           ;color.c: 182:             return 3;
 12643   001588  0E00               	movlw	0
 12644   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12645   00158C  0E03               	movlw	3
 12646   00158E  6E4B               	movwf	?_Colour_decider^0,c
 12647   001590  EF9A  F00C         	goto	l76
 12648   001594                     l5456:
 12649   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12650   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12651   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12652   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12653   0015A4  0E00               	movlw	0
 12654   0015A6  6E2E               	movwf	___flge@ff2^0,c
 12655   0015A8  0E00               	movlw	0
 12656   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12657   0015AC  0E34               	movlw	52
 12658   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 12659   0015B0  0E42               	movlw	66
 12660   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 12661   0015B4  ECE1  F025         	call	___flge	;wreg free
 12662   0015B8  A0D8               	btfss	status,0,c
 12663   0015BA  EFE1  F00A         	goto	u5371
 12664   0015BE  EFE3  F00A         	goto	u5370
 12665   0015C2                     u5371:
 12666   0015C2  EF48  F00B         	goto	l5480
 12667   0015C6                     u5370:
 12668   0015C6  0E00               	movlw	0
 12669   0015C8  6E2A               	movwf	___flge@ff1^0,c
 12670   0015CA  0E00               	movlw	0
 12671   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12672   0015CE  0EA0               	movlw	160
 12673   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 12674   0015D2  0E42               	movlw	66
 12675   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 12676   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12677   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12678   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12679   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12680   0015E6  ECE1  F025         	call	___flge	;wreg free
 12681   0015EA  A0D8               	btfss	status,0,c
 12682   0015EC  EFFA  F00A         	goto	u5381
 12683   0015F0  EFFC  F00A         	goto	u5380
 12684   0015F4                     u5381:
 12685   0015F4  EF48  F00B         	goto	l5480
 12686   0015F8                     u5380:
 12687   0015F8                     
 12688                           ;color.c: 188:         if(0.15<=rel->B){
 12689   0015F8  EE20 F008          	lfsr	2,8
 12690   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 12691   0015FE  26D9               	addwf	fsr2l,f,c
 12692   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12693   001602  22DA               	addwfc	fsr2h,f,c
 12694   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 12695   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12696   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12697   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12698   001614  0E9A               	movlw	154
 12699   001616  6E2E               	movwf	___flge@ff2^0,c
 12700   001618  0E99               	movlw	153
 12701   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12702   00161C  0E19               	movlw	25
 12703   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 12704   001620  0E3E               	movlw	62
 12705   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 12706   001624  ECE1  F025         	call	___flge	;wreg free
 12707   001628  A0D8               	btfss	status,0,c
 12708   00162A  EF19  F00B         	goto	u5391
 12709   00162E  EF1B  F00B         	goto	u5390
 12710   001632                     u5391:
 12711   001632  EF1D  F00B         	goto	l5468
 12712   001636                     u5390:
 12713   001636  EFBE  F00A         	goto	l5446
 12714   00163A                     l5468:
 12715   00163A  EE20 F008          	lfsr	2,8
 12716   00163E  504D               	movf	Colour_decider@rel^0,w,c
 12717   001640  26D9               	addwf	fsr2l,f,c
 12718   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12719   001644  22DA               	addwfc	fsr2h,f,c
 12720   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 12721   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12722   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12723   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12724   001656  0E8F               	movlw	143
 12725   001658  6E2E               	movwf	___flge@ff2^0,c
 12726   00165A  0EC2               	movlw	194
 12727   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12728   00165E  0EF5               	movlw	245
 12729   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 12730   001662  0E3D               	movlw	61
 12731   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 12732   001666  ECE1  F025         	call	___flge	;wreg free
 12733   00166A  A0D8               	btfss	status,0,c
 12734   00166C  EF3A  F00B         	goto	u5401
 12735   001670  EF3C  F00B         	goto	u5400
 12736   001674                     u5401:
 12737   001674  EF42  F00B         	goto	l5476
 12738   001678                     u5400:
 12739   001678                     l5470:
 12740                           
 12741                           ;color.c: 192:             return 6;
 12742   001678  0E00               	movlw	0
 12743   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12744   00167C  0E06               	movlw	6
 12745   00167E  6E4B               	movwf	?_Colour_decider^0,c
 12746   001680  EF9A  F00C         	goto	l76
 12747   001684                     l5476:
 12748                           
 12749                           ;color.c: 195:             return 5;
 12750   001684  0E00               	movlw	0
 12751   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12752   001688  0E05               	movlw	5
 12753   00168A  6E4B               	movwf	?_Colour_decider^0,c
 12754   00168C  EF9A  F00C         	goto	l76
 12755   001690                     l5480:
 12756   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12757   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12758   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12759   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12760   0016A0  0E00               	movlw	0
 12761   0016A2  6E2E               	movwf	___flge@ff2^0,c
 12762   0016A4  0E00               	movlw	0
 12763   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12764   0016A8  0EA2               	movlw	162
 12765   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 12766   0016AC  0E42               	movlw	66
 12767   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 12768   0016B0  ECE1  F025         	call	___flge	;wreg free
 12769   0016B4  A0D8               	btfss	status,0,c
 12770   0016B6  EF5F  F00B         	goto	u5411
 12771   0016BA  EF61  F00B         	goto	u5410
 12772   0016BE                     u5411:
 12773   0016BE  EF9B  F00B         	goto	l5496
 12774   0016C2                     u5410:
 12775   0016C2  0E00               	movlw	0
 12776   0016C4  6E2A               	movwf	___flge@ff1^0,c
 12777   0016C6  0E00               	movlw	0
 12778   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 12779   0016CA  0EE6               	movlw	230
 12780   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 12781   0016CE  0E42               	movlw	66
 12782   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12783   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12784   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12785   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12786   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12787   0016E2  ECE1  F025         	call	___flge	;wreg free
 12788   0016E6  A0D8               	btfss	status,0,c
 12789   0016E8  EF78  F00B         	goto	u5421
 12790   0016EC  EF7A  F00B         	goto	u5420
 12791   0016F0                     u5421:
 12792   0016F0  EF9B  F00B         	goto	l5496
 12793   0016F4                     u5420:
 12794   0016F4                     
 12795                           ;color.c: 201:         if(0.15<=rel->B){
 12796   0016F4  EE20 F008          	lfsr	2,8
 12797   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 12798   0016FA  26D9               	addwf	fsr2l,f,c
 12799   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12800   0016FE  22DA               	addwfc	fsr2h,f,c
 12801   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 12802   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12803   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12804   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12805   001710  0E9A               	movlw	154
 12806   001712  6E2E               	movwf	___flge@ff2^0,c
 12807   001714  0E99               	movlw	153
 12808   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 12809   001718  0E19               	movlw	25
 12810   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 12811   00171C  0E3E               	movlw	62
 12812   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 12813   001720  ECE1  F025         	call	___flge	;wreg free
 12814   001724  A0D8               	btfss	status,0,c
 12815   001726  EF97  F00B         	goto	u5431
 12816   00172A  EF99  F00B         	goto	u5430
 12817   00172E                     u5431:
 12818   00172E  EF3C  F00B         	goto	l5470
 12819   001732                     u5430:
 12820   001732  EFBE  F00A         	goto	l5446
 12821   001736                     l5496:
 12822   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12823   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12824   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12825   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12826   001746  0E00               	movlw	0
 12827   001748  6E2E               	movwf	___flge@ff2^0,c
 12828   00174A  0E00               	movlw	0
 12829   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12830   00174E  0EF0               	movlw	240
 12831   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 12832   001752  0E41               	movlw	65
 12833   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 12834   001756  ECE1  F025         	call	___flge	;wreg free
 12835   00175A  A0D8               	btfss	status,0,c
 12836   00175C  EFB2  F00B         	goto	u5441
 12837   001760  EFB4  F00B         	goto	u5440
 12838   001764                     u5441:
 12839   001764  EFCD  F00B         	goto	l5500
 12840   001768                     u5440:
 12841   001768  0E00               	movlw	0
 12842   00176A  6E2A               	movwf	___flge@ff1^0,c
 12843   00176C  0E00               	movlw	0
 12844   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12845   001770  0E68               	movlw	104
 12846   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 12847   001774  0E42               	movlw	66
 12848   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 12849   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12850   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12851   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12852   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12853   001788  ECE1  F025         	call	___flge	;wreg free
 12854   00178C  B0D8               	btfsc	status,0,c
 12855   00178E  EFCB  F00B         	goto	u5451
 12856   001792  EFCD  F00B         	goto	u5450
 12857   001796                     u5451:
 12858   001796  EFBE  F00A         	goto	l5446
 12859   00179A                     u5450:
 12860   00179A                     l5500:
 12861   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12862   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12863   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12864   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12865   0017AA  0E00               	movlw	0
 12866   0017AC  6E2E               	movwf	___flge@ff2^0,c
 12867   0017AE  0E00               	movlw	0
 12868   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 12869   0017B2  0EF0               	movlw	240
 12870   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 12871   0017B6  0E42               	movlw	66
 12872   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 12873   0017BA  ECE1  F025         	call	___flge	;wreg free
 12874   0017BE  A0D8               	btfss	status,0,c
 12875   0017C0  EFE4  F00B         	goto	u5461
 12876   0017C4  EFE6  F00B         	goto	u5460
 12877   0017C8                     u5461:
 12878   0017C8  EF01  F00C         	goto	l5510
 12879   0017CC                     u5460:
 12880   0017CC  0E00               	movlw	0
 12881   0017CE  6E2A               	movwf	___flge@ff1^0,c
 12882   0017D0  0E00               	movlw	0
 12883   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12884   0017D4  0E5C               	movlw	92
 12885   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12886   0017D8  0E43               	movlw	67
 12887   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12888   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12889   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12890   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12891   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12892   0017EC  ECE1  F025         	call	___flge	;wreg free
 12893   0017F0  A0D8               	btfss	status,0,c
 12894   0017F2  EFFD  F00B         	goto	u5471
 12895   0017F6  EFFF  F00B         	goto	u5470
 12896   0017FA                     u5471:
 12897   0017FA  EF01  F00C         	goto	l5510
 12898   0017FE                     u5470:
 12899   0017FE  EFBE  F00A         	goto	l5446
 12900   001802                     l5510:
 12901   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12902   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12903   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12904   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12905   001812  0E00               	movlw	0
 12906   001814  6E2E               	movwf	___flge@ff2^0,c
 12907   001816  0E00               	movlw	0
 12908   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 12909   00181A  0E60               	movlw	96
 12910   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 12911   00181E  0E41               	movlw	65
 12912   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 12913   001822  ECE1  F025         	call	___flge	;wreg free
 12914   001826  A0D8               	btfss	status,0,c
 12915   001828  EF18  F00C         	goto	u5481
 12916   00182C  EF1A  F00C         	goto	u5480
 12917   001830                     u5481:
 12918   001830  EF96  F00C         	goto	l5536
 12919   001834                     u5480:
 12920   001834  0E00               	movlw	0
 12921   001836  6E2A               	movwf	___flge@ff1^0,c
 12922   001838  0E00               	movlw	0
 12923   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 12924   00183C  0E98               	movlw	152
 12925   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 12926   001840  0E41               	movlw	65
 12927   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 12928   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12929   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12930   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12931   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12932   001854  ECE1  F025         	call	___flge	;wreg free
 12933   001858  A0D8               	btfss	status,0,c
 12934   00185A  EF31  F00C         	goto	u5491
 12935   00185E  EF33  F00C         	goto	u5490
 12936   001862                     u5491:
 12937   001862  EF96  F00C         	goto	l5536
 12938   001866                     u5490:
 12939   001866                     
 12940                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 12941   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12942   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12943   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 12944   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12945   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12946   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12947   00187E  0ECD               	movlw	205
 12948   001880  6E2E               	movwf	___flge@ff2^0,c
 12949   001882  0ECC               	movlw	204
 12950   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 12951   001886  0E4C               	movlw	76
 12952   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 12953   00188A  0E3E               	movlw	62
 12954   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 12955   00188E  ECE1  F025         	call	___flge	;wreg free
 12956   001892  A0D8               	btfss	status,0,c
 12957   001894  EF4E  F00C         	goto	u5501
 12958   001898  EF50  F00C         	goto	u5500
 12959   00189C                     u5501:
 12960   00189C  EF6F  F00C         	goto	l5524
 12961   0018A0                     u5500:
 12962   0018A0  0E1F               	movlw	31
 12963   0018A2  6E2A               	movwf	___flge@ff1^0,c
 12964   0018A4  0E85               	movlw	133
 12965   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 12966   0018A8  0E6B               	movlw	107
 12967   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 12968   0018AC  0E3E               	movlw	62
 12969   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 12970   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12971   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12972   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 12973   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12974   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 12975   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 12976   0018C8  ECE1  F025         	call	___flge	;wreg free
 12977   0018CC  A0D8               	btfss	status,0,c
 12978   0018CE  EF6B  F00C         	goto	u5511
 12979   0018D2  EF6D  F00C         	goto	u5510
 12980   0018D6                     u5511:
 12981   0018D6  EF6F  F00C         	goto	l5524
 12982   0018DA                     u5510:
 12983   0018DA  EF5E  F008         	goto	l5388
 12984   0018DE                     l5524:
 12985   0018DE  EE20 F008          	lfsr	2,8
 12986   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 12987   0018E4  26D9               	addwf	fsr2l,f,c
 12988   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12989   0018E8  22DA               	addwfc	fsr2h,f,c
 12990   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 12991   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12992   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12993   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12994   0018FA  0E9A               	movlw	154
 12995   0018FC  6E2E               	movwf	___flge@ff2^0,c
 12996   0018FE  0E99               	movlw	153
 12997   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 12998   001902  0E19               	movlw	25
 12999   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 13000   001906  0E3E               	movlw	62
 13001   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 13002   00190A  ECE1  F025         	call	___flge	;wreg free
 13003   00190E  A0D8               	btfss	status,0,c
 13004   001910  EF8C  F00C         	goto	u5521
 13005   001914  EF8E  F00C         	goto	u5520
 13006   001918                     u5521:
 13007   001918  EF90  F00C         	goto	l5532
 13008   00191C                     u5520:
 13009   00191C  EFBE  F00A         	goto	l5446
 13010   001920                     l5532:
 13011                           
 13012                           ;color.c: 223:             return 7;
 13013   001920  0E00               	movlw	0
 13014   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13015   001924  0E07               	movlw	7
 13016   001926  6E4B               	movwf	?_Colour_decider^0,c
 13017   001928  EF9A  F00C         	goto	l76
 13018   00192C                     l5536:
 13019                           
 13020                           ;color.c: 227:         return 10;
 13021   00192C  0E00               	movlw	0
 13022   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13023   001930  0E0A               	movlw	10
 13024   001932  6E4B               	movwf	?_Colour_decider^0,c
 13025   001934                     l76:
 13026   001934  0012               	return		;funcret
 13027   001936                     __end_of_Colour_decider:
 13028                           	callstack 0
 13029                           
 13030 ;; *************** function ___xxtofl *****************
 13031 ;; Defined at:
 13032 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;  sign            1    wreg     unsigned char 
 13035 ;;  val             4    0[COMRAM] long 
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;  sign            1    8[COMRAM] unsigned char 
 13038 ;;  arg             4   10[COMRAM] unsigned long 
 13039 ;;  exp             1    9[COMRAM] unsigned char 
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  4    0[COMRAM] unsigned char 
 13042 ;; Registers used:
 13043 ;;		wreg, status,2, status,0
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/0
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13050 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13052 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13053 ;;Total ram usage:       14 bytes
 13054 ;; Hardware stack levels used: 1
 13055 ;; This function calls:
 13056 ;;		Nothing
 13057 ;; This function is called by:
 13058 ;;		_colour_rel
 13059 ;;		_Colour_decider
 13060 ;;		_reverseOneBlock
 13061 ;;		_ForwardOneBlock
 13062 ;;		_Forwardhalfblock
 13063 ;;		_Backhalfblock
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text72
 13068   0044B0                     __ptext72:
 13069                           	callstack 0
 13070   0044B0                     ___xxtofl:
 13071                           	callstack 29
 13072                           
 13073                           ;incstack = 0
 13074                           ;___xxtofl@sign stored from wreg
 13075   0044B0  6E09               	movwf	___xxtofl@sign^0,c
 13076   0044B2  5009               	movf	___xxtofl@sign^0,w,c
 13077   0044B4  B4D8               	btfsc	status,2,c
 13078   0044B6  EF5F  F022         	goto	u5091
 13079   0044BA  EF61  F022         	goto	u5090
 13080   0044BE                     u5091:
 13081   0044BE  EF83  F022         	goto	l1358
 13082   0044C2                     u5090:
 13083   0044C2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13084   0044C4  EF68  F022         	goto	u5100
 13085   0044C8  EF66  F022         	goto	u5101
 13086   0044CC                     u5101:
 13087   0044CC  EF83  F022         	goto	l1358
 13088   0044D0                     u5100:
 13089   0044D0  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13090   0044D4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13091   0044D8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13092   0044DC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13093   0044E0  1E05               	comf	??___xxtofl^0,f,c
 13094   0044E2  1E06               	comf	(??___xxtofl+1)^0,f,c
 13095   0044E4  1E07               	comf	(??___xxtofl+2)^0,f,c
 13096   0044E6  1E08               	comf	(??___xxtofl+3)^0,f,c
 13097   0044E8  2A05               	incf	??___xxtofl^0,f,c
 13098   0044EA  0E00               	movlw	0
 13099   0044EC  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13100   0044EE  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13101   0044F0  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13102   0044F2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13103   0044F6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13104   0044FA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13105   0044FE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13106   004502  EF8B  F022         	goto	l5258
 13107   004506                     l1358:
 13108   004506  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13109   00450A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13110   00450E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13111   004512  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13112   004516                     l5258:
 13113   004516  5001               	movf	___xxtofl@val^0,w,c
 13114   004518  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13115   00451A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13116   00451C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13117   00451E  A4D8               	btfss	status,2,c
 13118   004520  EF94  F022         	goto	u5111
 13119   004524  EF96  F022         	goto	u5110
 13120   004528                     u5111:
 13121   004528  EFA0  F022         	goto	l5264
 13122   00452C                     u5110:
 13123   00452C  0E00               	movlw	0
 13124   00452E  6E01               	movwf	?___xxtofl^0,c
 13125   004530  0E00               	movlw	0
 13126   004532  6E02               	movwf	(?___xxtofl+1)^0,c
 13127   004534  0E00               	movlw	0
 13128   004536  6E03               	movwf	(?___xxtofl+2)^0,c
 13129   004538  0E00               	movlw	0
 13130   00453A  6E04               	movwf	(?___xxtofl+3)^0,c
 13131   00453C  EF31  F023         	goto	l1361
 13132   004540                     l5264:
 13133   004540  0E96               	movlw	150
 13134   004542  6E0A               	movwf	___xxtofl@exp^0,c
 13135   004544  EFAA  F022         	goto	l5268
 13136   004548                     l5266:
 13137   004548  2A0A               	incf	___xxtofl@exp^0,f,c
 13138   00454A  90D8               	bcf	status,0,c
 13139   00454C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13140   00454E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13141   004550  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13142   004552  320B               	rrcf	___xxtofl@arg^0,f,c
 13143   004554                     l5268:
 13144   004554  0E00               	movlw	0
 13145   004556  140B               	andwf	___xxtofl@arg^0,w,c
 13146   004558  6E05               	movwf	??___xxtofl^0,c
 13147   00455A  0E00               	movlw	0
 13148   00455C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13149   00455E  6E06               	movwf	(??___xxtofl+1)^0,c
 13150   004560  0E00               	movlw	0
 13151   004562  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13152   004564  6E07               	movwf	(??___xxtofl+2)^0,c
 13153   004566  0EFE               	movlw	254
 13154   004568  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13155   00456A  6E08               	movwf	(??___xxtofl+3)^0,c
 13156   00456C  5005               	movf	??___xxtofl^0,w,c
 13157   00456E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13158   004570  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13159   004572  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13160   004574  A4D8               	btfss	status,2,c
 13161   004576  EFBF  F022         	goto	u5121
 13162   00457A  EFC1  F022         	goto	u5120
 13163   00457E                     u5121:
 13164   00457E  EFA4  F022         	goto	l5266
 13165   004582                     u5120:
 13166   004582  EFCF  F022         	goto	l1365
 13167   004586                     l5270:
 13168   004586  2A0A               	incf	___xxtofl@exp^0,f,c
 13169   004588  0E01               	movlw	1
 13170   00458A  260B               	addwf	___xxtofl@arg^0,f,c
 13171   00458C  0E00               	movlw	0
 13172   00458E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13173   004590  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13174   004592  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13175   004594  90D8               	bcf	status,0,c
 13176   004596  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13177   004598  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13178   00459A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13179   00459C  320B               	rrcf	___xxtofl@arg^0,f,c
 13180   00459E                     l1365:
 13181   00459E  0E00               	movlw	0
 13182   0045A0  140B               	andwf	___xxtofl@arg^0,w,c
 13183   0045A2  6E05               	movwf	??___xxtofl^0,c
 13184   0045A4  0E00               	movlw	0
 13185   0045A6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13186   0045A8  6E06               	movwf	(??___xxtofl+1)^0,c
 13187   0045AA  0E00               	movlw	0
 13188   0045AC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13189   0045AE  6E07               	movwf	(??___xxtofl+2)^0,c
 13190   0045B0  0EFF               	movlw	255
 13191   0045B2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13192   0045B4  6E08               	movwf	(??___xxtofl+3)^0,c
 13193   0045B6  5005               	movf	??___xxtofl^0,w,c
 13194   0045B8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13195   0045BA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13196   0045BC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13197   0045BE  A4D8               	btfss	status,2,c
 13198   0045C0  EFE4  F022         	goto	u5131
 13199   0045C4  EFE6  F022         	goto	u5130
 13200   0045C8                     u5131:
 13201   0045C8  EFC3  F022         	goto	l5270
 13202   0045CC                     u5130:
 13203   0045CC  EFEE  F022         	goto	l5278
 13204   0045D0                     l5276:
 13205   0045D0  060A               	decf	___xxtofl@exp^0,f,c
 13206   0045D2  90D8               	bcf	status,0,c
 13207   0045D4  360B               	rlcf	___xxtofl@arg^0,f,c
 13208   0045D6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13209   0045D8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13210   0045DA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13211   0045DC                     l5278:
 13212   0045DC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13213   0045DE  EFF3  F022         	goto	u5141
 13214   0045E2  EFF5  F022         	goto	u5140
 13215   0045E6                     u5141:
 13216   0045E6  EFFD  F022         	goto	l1372
 13217   0045EA                     u5140:
 13218   0045EA  0E02               	movlw	2
 13219   0045EC  600A               	cpfslt	___xxtofl@exp^0,c
 13220   0045EE  EFFB  F022         	goto	u5151
 13221   0045F2  EFFD  F022         	goto	u5150
 13222   0045F6                     u5151:
 13223   0045F6  EFE8  F022         	goto	l5276
 13224   0045FA                     u5150:
 13225   0045FA                     l1372:
 13226   0045FA  B00A               	btfsc	___xxtofl@exp^0,0,c
 13227   0045FC  EF02  F023         	goto	u5161
 13228   004600  EF04  F023         	goto	u5160
 13229   004604                     u5161:
 13230   004604  EF05  F023         	goto	l5284
 13231   004608                     u5160:
 13232   004608  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13233   00460A                     l5284:
 13234   00460A  90D8               	bcf	status,0,c
 13235   00460C  320A               	rrcf	___xxtofl@exp^0,f,c
 13236   00460E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13237   004612  6A06               	clrf	(??___xxtofl+1)^0,c
 13238   004614  6A07               	clrf	(??___xxtofl+2)^0,c
 13239   004616  6A08               	clrf	(??___xxtofl+3)^0,c
 13240   004618  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13241   00461C  6A07               	clrf	(??___xxtofl+2)^0,c
 13242   00461E  6A06               	clrf	(??___xxtofl+1)^0,c
 13243   004620  6A05               	clrf	??___xxtofl^0,c
 13244   004622  5005               	movf	??___xxtofl^0,w,c
 13245   004624  120B               	iorwf	___xxtofl@arg^0,f,c
 13246   004626  5006               	movf	(??___xxtofl+1)^0,w,c
 13247   004628  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13248   00462A  5007               	movf	(??___xxtofl+2)^0,w,c
 13249   00462C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13250   00462E  5008               	movf	(??___xxtofl+3)^0,w,c
 13251   004630  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13252   004632  5009               	movf	___xxtofl@sign^0,w,c
 13253   004634  B4D8               	btfsc	status,2,c
 13254   004636  EF1F  F023         	goto	u5171
 13255   00463A  EF21  F023         	goto	u5170
 13256   00463E                     u5171:
 13257   00463E  EF29  F023         	goto	l5294
 13258   004642                     u5170:
 13259   004642  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13260   004644  EF28  F023         	goto	u5180
 13261   004648  EF26  F023         	goto	u5181
 13262   00464C                     u5181:
 13263   00464C  EF29  F023         	goto	l5294
 13264   004650                     u5180:
 13265   004650  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13266   004652                     l5294:
 13267   004652  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13268   004656  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13269   00465A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13270   00465E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13271   004662                     l1361:
 13272   004662  0012               	return		;funcret
 13273   004664                     __end_of___xxtofl:
 13274                           	callstack 0
 13275                           
 13276 ;; *************** function ___flsub *****************
 13277 ;; Defined at:
 13278 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  b               4   41[COMRAM] unsigned char 
 13281 ;;  a               4   45[COMRAM] unsigned char 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;		None
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  4   41[COMRAM] unsigned char 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2, status,0, cstack
 13288 ;; Tracked objects:
 13289 ;;		On entry : 0/0
 13290 ;;		On exit  : 0/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13293 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13296 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13297 ;;Total ram usage:        8 bytes
 13298 ;; Hardware stack levels used: 1
 13299 ;; Hardware stack levels required when called: 1
 13300 ;; This function calls:
 13301 ;;		___fladd
 13302 ;; This function is called by:
 13303 ;;		_Colour_decider
 13304 ;;		_efgtoa
 13305 ;; This function uses a non-reentrant model
 13306 ;;
 13307                           
 13308                           	psect	text73
 13309   005D88                     __ptext73:
 13310                           	callstack 0
 13311   005D88                     ___flsub:
 13312                           	callstack 25
 13313   005D88  0E00               	movlw	0
 13314   005D8A  1A2E               	xorwf	___flsub@a^0,f,c
 13315   005D8C  0E00               	movlw	0
 13316   005D8E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13317   005D90  0E00               	movlw	0
 13318   005D92  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13319   005D94  0E80               	movlw	128
 13320   005D96  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13321   005D98  C02A  F001         	movff	___flsub@b,___fladd@b
 13322   005D9C  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13323   005DA0  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13324   005DA4  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13325   005DA8  C02E  F005         	movff	___flsub@a,___fladd@a
 13326   005DAC  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13327   005DB0  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13328   005DB4  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13329   005DB8  EC54  F014         	call	___fladd	;wreg free
 13330   005DBC  C001  F02A         	movff	?___fladd,?___flsub
 13331   005DC0  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13332   005DC4  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13333   005DC8  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13334   005DCC  0012               	return		;funcret
 13335   005DCE                     __end_of___flsub:
 13336                           	callstack 0
 13337                           
 13338 ;; *************** function ___fladd *****************
 13339 ;; Defined at:
 13340 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  b               4    0[COMRAM] unsigned char 
 13343 ;;  a               4    4[COMRAM] unsigned char 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  grs             1   15[COMRAM] unsigned char 
 13346 ;;  bexp            1   14[COMRAM] unsigned char 
 13347 ;;  aexp            1   13[COMRAM] unsigned char 
 13348 ;;  signs           1   12[COMRAM] unsigned char 
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  4    0[COMRAM] unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2, status,0
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13361 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13362 ;;Total ram usage:       16 bytes
 13363 ;; Hardware stack levels used: 1
 13364 ;; This function calls:
 13365 ;;		Nothing
 13366 ;; This function is called by:
 13367 ;;		_colour_rel
 13368 ;;		_Colour_decider
 13369 ;;		___flsub
 13370 ;;		_efgtoa
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text74
 13375   0028A8                     __ptext74:
 13376                           	callstack 0
 13377   0028A8                     ___fladd:
 13378                           	callstack 25
 13379   0028A8  5004               	movf	(___fladd@b+3)^0,w,c
 13380   0028AA  0B80               	andlw	128
 13381   0028AC  6E0D               	movwf	___fladd@signs^0,c
 13382   0028AE  5004               	movf	(___fladd@b+3)^0,w,c
 13383   0028B0  2404               	addwf	(___fladd@b+3)^0,w,c
 13384   0028B2  6E0F               	movwf	___fladd@bexp^0,c
 13385   0028B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13386   0028B6  EF5F  F014         	goto	u3051
 13387   0028BA  EF61  F014         	goto	u3050
 13388   0028BE                     u3051:
 13389   0028BE  EF62  F014         	goto	l3900
 13390   0028C2                     u3050:
 13391   0028C2  800F               	bsf	___fladd@bexp^0,0,c
 13392   0028C4                     l3900:
 13393   0028C4  500F               	movf	___fladd@bexp^0,w,c
 13394   0028C6  B4D8               	btfsc	status,2,c
 13395   0028C8  EF68  F014         	goto	u3061
 13396   0028CC  EF6A  F014         	goto	u3060
 13397   0028D0                     u3061:
 13398   0028D0  EF7F  F014         	goto	l3910
 13399   0028D4                     u3060:
 13400   0028D4  280F               	incf	___fladd@bexp^0,w,c
 13401   0028D6  A4D8               	btfss	status,2,c
 13402   0028D8  EF70  F014         	goto	u3071
 13403   0028DC  EF72  F014         	goto	u3070
 13404   0028E0                     u3071:
 13405   0028E0  EF7A  F014         	goto	l3906
 13406   0028E4                     u3070:
 13407   0028E4  0E00               	movlw	0
 13408   0028E6  6E01               	movwf	___fladd@b^0,c
 13409   0028E8  0E00               	movlw	0
 13410   0028EA  6E02               	movwf	(___fladd@b+1)^0,c
 13411   0028EC  0E00               	movlw	0
 13412   0028EE  6E03               	movwf	(___fladd@b+2)^0,c
 13413   0028F0  0E00               	movlw	0
 13414   0028F2  6E04               	movwf	(___fladd@b+3)^0,c
 13415   0028F4                     l3906:
 13416   0028F4  8E03               	bsf	(___fladd@b+2)^0,7,c
 13417   0028F6  0E00               	movlw	0
 13418   0028F8  6E04               	movwf	(___fladd@b+3)^0,c
 13419   0028FA  EF87  F014         	goto	l3912
 13420   0028FE                     l3910:
 13421   0028FE  0E00               	movlw	0
 13422   002900  6E01               	movwf	___fladd@b^0,c
 13423   002902  0E00               	movlw	0
 13424   002904  6E02               	movwf	(___fladd@b+1)^0,c
 13425   002906  0E00               	movlw	0
 13426   002908  6E03               	movwf	(___fladd@b+2)^0,c
 13427   00290A  0E00               	movlw	0
 13428   00290C  6E04               	movwf	(___fladd@b+3)^0,c
 13429   00290E                     l3912:
 13430   00290E  5008               	movf	(___fladd@a+3)^0,w,c
 13431   002910  0B80               	andlw	128
 13432   002912  6E0E               	movwf	___fladd@aexp^0,c
 13433   002914  500D               	movf	___fladd@signs^0,w,c
 13434   002916  180E               	xorwf	___fladd@aexp^0,w,c
 13435   002918  B4D8               	btfsc	status,2,c
 13436   00291A  EF91  F014         	goto	u3081
 13437   00291E  EF93  F014         	goto	u3080
 13438   002922                     u3081:
 13439   002922  EF94  F014         	goto	l3918
 13440   002926                     u3080:
 13441   002926  8C0D               	bsf	___fladd@signs^0,6,c
 13442   002928                     l3918:
 13443   002928  5008               	movf	(___fladd@a+3)^0,w,c
 13444   00292A  2408               	addwf	(___fladd@a+3)^0,w,c
 13445   00292C  6E0E               	movwf	___fladd@aexp^0,c
 13446   00292E  AE07               	btfss	(___fladd@a+2)^0,7,c
 13447   002930  EF9C  F014         	goto	u3091
 13448   002934  EF9E  F014         	goto	u3090
 13449   002938                     u3091:
 13450   002938  EF9F  F014         	goto	l3924
 13451   00293C                     u3090:
 13452   00293C  800E               	bsf	___fladd@aexp^0,0,c
 13453   00293E                     l3924:
 13454   00293E  500E               	movf	___fladd@aexp^0,w,c
 13455   002940  B4D8               	btfsc	status,2,c
 13456   002942  EFA5  F014         	goto	u3101
 13457   002946  EFA7  F014         	goto	u3100
 13458   00294A                     u3101:
 13459   00294A  EFBC  F014         	goto	l3934
 13460   00294E                     u3100:
 13461   00294E  280E               	incf	___fladd@aexp^0,w,c
 13462   002950  A4D8               	btfss	status,2,c
 13463   002952  EFAD  F014         	goto	u3111
 13464   002956  EFAF  F014         	goto	u3110
 13465   00295A                     u3111:
 13466   00295A  EFB7  F014         	goto	l3930
 13467   00295E                     u3110:
 13468   00295E  0E00               	movlw	0
 13469   002960  6E05               	movwf	___fladd@a^0,c
 13470   002962  0E00               	movlw	0
 13471   002964  6E06               	movwf	(___fladd@a+1)^0,c
 13472   002966  0E00               	movlw	0
 13473   002968  6E07               	movwf	(___fladd@a+2)^0,c
 13474   00296A  0E00               	movlw	0
 13475   00296C  6E08               	movwf	(___fladd@a+3)^0,c
 13476   00296E                     l3930:
 13477   00296E  8E07               	bsf	(___fladd@a+2)^0,7,c
 13478   002970  0E00               	movlw	0
 13479   002972  6E08               	movwf	(___fladd@a+3)^0,c
 13480   002974  EFC4  F014         	goto	l3936
 13481   002978                     l3934:
 13482   002978  0E00               	movlw	0
 13483   00297A  6E05               	movwf	___fladd@a^0,c
 13484   00297C  0E00               	movlw	0
 13485   00297E  6E06               	movwf	(___fladd@a+1)^0,c
 13486   002980  0E00               	movlw	0
 13487   002982  6E07               	movwf	(___fladd@a+2)^0,c
 13488   002984  0E00               	movlw	0
 13489   002986  6E08               	movwf	(___fladd@a+3)^0,c
 13490   002988                     l3936:
 13491   002988  500F               	movf	___fladd@bexp^0,w,c
 13492   00298A  5C0E               	subwf	___fladd@aexp^0,w,c
 13493   00298C  B0D8               	btfsc	status,0,c
 13494   00298E  EFCB  F014         	goto	u3121
 13495   002992  EFCD  F014         	goto	u3120
 13496   002996                     u3121:
 13497   002996  EFF4  F014         	goto	l3972
 13498   00299A                     u3120:
 13499   00299A  AC0D               	btfss	___fladd@signs^0,6,c
 13500   00299C  EFD2  F014         	goto	u3131
 13501   0029A0  EFD4  F014         	goto	u3130
 13502   0029A4                     u3131:
 13503   0029A4  EFD6  F014         	goto	l3942
 13504   0029A8                     u3130:
 13505   0029A8  0E80               	movlw	128
 13506   0029AA  1A0D               	xorwf	___fladd@signs^0,f,c
 13507   0029AC                     l3942:
 13508   0029AC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13509   0029B0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13510   0029B4  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13511   0029B8  C001  F010         	movff	___fladd@b,___fladd@grs
 13512   0029BC  C005  F001         	movff	___fladd@a,___fladd@b
 13513   0029C0  C010  F005         	movff	___fladd@grs,___fladd@a
 13514   0029C4  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13515   0029C8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13516   0029CC  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13517   0029D0  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13518   0029D4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13519   0029D8  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13520   0029DC  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13521   0029E0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13522   0029E4  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13523   0029E8                     l3972:
 13524   0029E8  0E00               	movlw	0
 13525   0029EA  6E10               	movwf	___fladd@grs^0,c
 13526   0029EC  500F               	movf	___fladd@bexp^0,w,c
 13527   0029EE  C00E  F009         	movff	___fladd@aexp,??___fladd
 13528   0029F2  6A0A               	clrf	(??___fladd+1)^0,c
 13529   0029F4  5E09               	subwf	??___fladd^0,f,c
 13530   0029F6  0E00               	movlw	0
 13531   0029F8  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13532   0029FA  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13533   0029FC  EF09  F015         	goto	u3141
 13534   002A00  500A               	movf	(??___fladd+1)^0,w,c
 13535   002A02  E109               	bnz	u3140
 13536   002A04  0E1A               	movlw	26
 13537   002A06  5C09               	subwf	??___fladd^0,w,c
 13538   002A08  A0D8               	btfss	status,0,c
 13539   002A0A  EF09  F015         	goto	u3141
 13540   002A0E  EF0B  F015         	goto	u3140
 13541   002A12                     u3141:
 13542   002A12  EF42  F015         	goto	l1232
 13543   002A16                     u3140:
 13544   002A16  5001               	movf	___fladd@b^0,w,c
 13545   002A18  1002               	iorwf	(___fladd@b+1)^0,w,c
 13546   002A1A  1003               	iorwf	(___fladd@b+2)^0,w,c
 13547   002A1C  1004               	iorwf	(___fladd@b+3)^0,w,c
 13548   002A1E  A4D8               	btfss	status,2,c
 13549   002A20  EF14  F015         	goto	u3151
 13550   002A24  EF17  F015         	goto	u3150
 13551   002A28                     u3151:
 13552   002A28  0E01               	movlw	1
 13553   002A2A  EF18  F015         	goto	u3160
 13554   002A2E                     u3150:
 13555   002A2E  0E00               	movlw	0
 13556   002A30                     u3160:
 13557   002A30  6E10               	movwf	___fladd@grs^0,c
 13558   002A32  0E00               	movlw	0
 13559   002A34  6E01               	movwf	___fladd@b^0,c
 13560   002A36  0E00               	movlw	0
 13561   002A38  6E02               	movwf	(___fladd@b+1)^0,c
 13562   002A3A  0E00               	movlw	0
 13563   002A3C  6E03               	movwf	(___fladd@b+2)^0,c
 13564   002A3E  0E00               	movlw	0
 13565   002A40  6E04               	movwf	(___fladd@b+3)^0,c
 13566   002A42  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13567   002A46  EF4B  F015         	goto	l1231
 13568   002A4A                     l1233:
 13569   002A4A  A010               	btfss	___fladd@grs^0,0,c
 13570   002A4C  EF2A  F015         	goto	u3171
 13571   002A50  EF2C  F015         	goto	u3170
 13572   002A54                     u3171:
 13573   002A54  EF32  F015         	goto	l3984
 13574   002A58                     u3170:
 13575   002A58  90D8               	bcf	status,0,c
 13576   002A5A  3010               	rrcf	___fladd@grs^0,w,c
 13577   002A5C  0901               	iorlw	1
 13578   002A5E  6E10               	movwf	___fladd@grs^0,c
 13579   002A60  EF34  F015         	goto	l3986
 13580   002A64                     l3984:
 13581   002A64  90D8               	bcf	status,0,c
 13582   002A66  3210               	rrcf	___fladd@grs^0,f,c
 13583   002A68                     l3986:
 13584   002A68  A001               	btfss	___fladd@b^0,0,c
 13585   002A6A  EF39  F015         	goto	u3181
 13586   002A6E  EF3B  F015         	goto	u3180
 13587   002A72                     u3181:
 13588   002A72  EF3C  F015         	goto	l3990
 13589   002A76                     u3180:
 13590   002A76  8E10               	bsf	___fladd@grs^0,7,c
 13591   002A78                     l3990:
 13592   002A78  3404               	rlcf	(___fladd@b+3)^0,w,c
 13593   002A7A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13594   002A7C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13595   002A7E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13596   002A80  3201               	rrcf	___fladd@b^0,f,c
 13597   002A82  2A0F               	incf	___fladd@bexp^0,f,c
 13598   002A84                     l1232:
 13599   002A84  500E               	movf	___fladd@aexp^0,w,c
 13600   002A86  5C0F               	subwf	___fladd@bexp^0,w,c
 13601   002A88  A0D8               	btfss	status,0,c
 13602   002A8A  EF49  F015         	goto	u3191
 13603   002A8E  EF4B  F015         	goto	u3190
 13604   002A92                     u3191:
 13605   002A92  EF25  F015         	goto	l1233
 13606   002A96                     u3190:
 13607   002A96                     l1231:
 13608   002A96  BC0D               	btfsc	___fladd@signs^0,6,c
 13609   002A98  EF50  F015         	goto	u3201
 13610   002A9C  EF52  F015         	goto	u3200
 13611   002AA0                     u3201:
 13612   002AA0  EF92  F015         	goto	l4018
 13613   002AA4                     u3200:
 13614   002AA4  500F               	movf	___fladd@bexp^0,w,c
 13615   002AA6  A4D8               	btfss	status,2,c
 13616   002AA8  EF58  F015         	goto	u3211
 13617   002AAC  EF5A  F015         	goto	u3210
 13618   002AB0                     u3211:
 13619   002AB0  EF64  F015         	goto	l4000
 13620   002AB4                     u3210:
 13621   002AB4  0E00               	movlw	0
 13622   002AB6  6E01               	movwf	?___fladd^0,c
 13623   002AB8  0E00               	movlw	0
 13624   002ABA  6E02               	movwf	(?___fladd+1)^0,c
 13625   002ABC  0E00               	movlw	0
 13626   002ABE  6E03               	movwf	(?___fladd+2)^0,c
 13627   002AC0  0E00               	movlw	0
 13628   002AC2  6E04               	movwf	(?___fladd+3)^0,c
 13629   002AC4  EFB3  F016         	goto	l1240
 13630   002AC8                     l4000:
 13631   002AC8  5005               	movf	___fladd@a^0,w,c
 13632   002ACA  2601               	addwf	___fladd@b^0,f,c
 13633   002ACC  5006               	movf	(___fladd@a+1)^0,w,c
 13634   002ACE  2202               	addwfc	(___fladd@b+1)^0,f,c
 13635   002AD0  5007               	movf	(___fladd@a+2)^0,w,c
 13636   002AD2  2203               	addwfc	(___fladd@b+2)^0,f,c
 13637   002AD4  5008               	movf	(___fladd@a+3)^0,w,c
 13638   002AD6  2204               	addwfc	(___fladd@b+3)^0,f,c
 13639   002AD8  A004               	btfss	(___fladd@b+3)^0,0,c
 13640   002ADA  EF71  F015         	goto	u3221
 13641   002ADE  EF73  F015         	goto	u3220
 13642   002AE2                     u3221:
 13643   002AE2  EF1F  F016         	goto	l4054
 13644   002AE6                     u3220:
 13645   002AE6  A010               	btfss	___fladd@grs^0,0,c
 13646   002AE8  EF78  F015         	goto	u3231
 13647   002AEC  EF7A  F015         	goto	u3230
 13648   002AF0                     u3231:
 13649   002AF0  EF80  F015         	goto	l4008
 13650   002AF4                     u3230:
 13651   002AF4  90D8               	bcf	status,0,c
 13652   002AF6  3010               	rrcf	___fladd@grs^0,w,c
 13653   002AF8  0901               	iorlw	1
 13654   002AFA  6E10               	movwf	___fladd@grs^0,c
 13655   002AFC  EF82  F015         	goto	l4010
 13656   002B00                     l4008:
 13657   002B00  90D8               	bcf	status,0,c
 13658   002B02  3210               	rrcf	___fladd@grs^0,f,c
 13659   002B04                     l4010:
 13660   002B04  A001               	btfss	___fladd@b^0,0,c
 13661   002B06  EF87  F015         	goto	u3241
 13662   002B0A  EF89  F015         	goto	u3240
 13663   002B0E                     u3241:
 13664   002B0E  EF8A  F015         	goto	l4014
 13665   002B12                     u3240:
 13666   002B12  8E10               	bsf	___fladd@grs^0,7,c
 13667   002B14                     l4014:
 13668   002B14  3404               	rlcf	(___fladd@b+3)^0,w,c
 13669   002B16  3204               	rrcf	(___fladd@b+3)^0,f,c
 13670   002B18  3203               	rrcf	(___fladd@b+2)^0,f,c
 13671   002B1A  3202               	rrcf	(___fladd@b+1)^0,f,c
 13672   002B1C  3201               	rrcf	___fladd@b^0,f,c
 13673   002B1E  2A0F               	incf	___fladd@bexp^0,f,c
 13674   002B20  EF1F  F016         	goto	l4054
 13675   002B24                     l4018:
 13676   002B24  5005               	movf	___fladd@a^0,w,c
 13677   002B26  5C01               	subwf	___fladd@b^0,w,c
 13678   002B28  5006               	movf	(___fladd@a+1)^0,w,c
 13679   002B2A  5802               	subwfb	(___fladd@b+1)^0,w,c
 13680   002B2C  5007               	movf	(___fladd@a+2)^0,w,c
 13681   002B2E  5803               	subwfb	(___fladd@b+2)^0,w,c
 13682   002B30  5004               	movf	(___fladd@b+3)^0,w,c
 13683   002B32  0A80               	xorlw	128
 13684   002B34  6E09               	movwf	??___fladd^0,c
 13685   002B36  5008               	movf	(___fladd@a+3)^0,w,c
 13686   002B38  0A80               	xorlw	128
 13687   002B3A  5809               	subwfb	??___fladd^0,w,c
 13688   002B3C  B0D8               	btfsc	status,0,c
 13689   002B3E  EFA3  F015         	goto	u3251
 13690   002B42  EFA5  F015         	goto	u3250
 13691   002B46                     u3251:
 13692   002B46  EFD0  F015         	goto	l4028
 13693   002B4A                     u3250:
 13694   002B4A  5001               	movf	___fladd@b^0,w,c
 13695   002B4C  5C05               	subwf	___fladd@a^0,w,c
 13696   002B4E  6E09               	movwf	??___fladd^0,c
 13697   002B50  5002               	movf	(___fladd@b+1)^0,w,c
 13698   002B52  5806               	subwfb	(___fladd@a+1)^0,w,c
 13699   002B54  6E0A               	movwf	(??___fladd+1)^0,c
 13700   002B56  5003               	movf	(___fladd@b+2)^0,w,c
 13701   002B58  5807               	subwfb	(___fladd@a+2)^0,w,c
 13702   002B5A  6E0B               	movwf	(??___fladd+2)^0,c
 13703   002B5C  5004               	movf	(___fladd@b+3)^0,w,c
 13704   002B5E  5808               	subwfb	(___fladd@a+3)^0,w,c
 13705   002B60  6E0C               	movwf	(??___fladd+3)^0,c
 13706   002B62  0EFF               	movlw	255
 13707   002B64  2409               	addwf	??___fladd^0,w,c
 13708   002B66  6E01               	movwf	___fladd@b^0,c
 13709   002B68  0EFF               	movlw	255
 13710   002B6A  200A               	addwfc	(??___fladd+1)^0,w,c
 13711   002B6C  6E02               	movwf	(___fladd@b+1)^0,c
 13712   002B6E  0EFF               	movlw	255
 13713   002B70  200B               	addwfc	(??___fladd+2)^0,w,c
 13714   002B72  6E03               	movwf	(___fladd@b+2)^0,c
 13715   002B74  0EFF               	movlw	255
 13716   002B76  200C               	addwfc	(??___fladd+3)^0,w,c
 13717   002B78  6E04               	movwf	(___fladd@b+3)^0,c
 13718   002B7A  0E80               	movlw	128
 13719   002B7C  1A0D               	xorwf	___fladd@signs^0,f,c
 13720   002B7E  6C10               	negf	___fladd@grs^0,c
 13721   002B80  5010               	movf	___fladd@grs^0,w,c
 13722   002B82  A4D8               	btfss	status,2,c
 13723   002B84  EFC6  F015         	goto	u3261
 13724   002B88  EFC8  F015         	goto	u3260
 13725   002B8C                     u3261:
 13726   002B8C  EFD8  F015         	goto	l1248
 13727   002B90                     u3260:
 13728   002B90  0E01               	movlw	1
 13729   002B92  2601               	addwf	___fladd@b^0,f,c
 13730   002B94  0E00               	movlw	0
 13731   002B96  2202               	addwfc	(___fladd@b+1)^0,f,c
 13732   002B98  2203               	addwfc	(___fladd@b+2)^0,f,c
 13733   002B9A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13734   002B9C  EFD8  F015         	goto	l1248
 13735   002BA0                     l4028:
 13736   002BA0  5005               	movf	___fladd@a^0,w,c
 13737   002BA2  5E01               	subwf	___fladd@b^0,f,c
 13738   002BA4  5006               	movf	(___fladd@a+1)^0,w,c
 13739   002BA6  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13740   002BA8  5007               	movf	(___fladd@a+2)^0,w,c
 13741   002BAA  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13742   002BAC  5008               	movf	(___fladd@a+3)^0,w,c
 13743   002BAE  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13744   002BB0                     l1248:
 13745   002BB0  5001               	movf	___fladd@b^0,w,c
 13746   002BB2  1002               	iorwf	(___fladd@b+1)^0,w,c
 13747   002BB4  1003               	iorwf	(___fladd@b+2)^0,w,c
 13748   002BB6  1004               	iorwf	(___fladd@b+3)^0,w,c
 13749   002BB8  A4D8               	btfss	status,2,c
 13750   002BBA  EFE1  F015         	goto	u3271
 13751   002BBE  EFE3  F015         	goto	u3270
 13752   002BC2                     u3271:
 13753   002BC2  EF18  F016         	goto	l4052
 13754   002BC6                     u3270:
 13755   002BC6  5010               	movf	___fladd@grs^0,w,c
 13756   002BC8  A4D8               	btfss	status,2,c
 13757   002BCA  EFE9  F015         	goto	u3281
 13758   002BCE  EFEB  F015         	goto	u3280
 13759   002BD2                     u3281:
 13760   002BD2  EF18  F016         	goto	l4052
 13761   002BD6                     u3280:
 13762   002BD6  0E00               	movlw	0
 13763   002BD8  6E01               	movwf	?___fladd^0,c
 13764   002BDA  0E00               	movlw	0
 13765   002BDC  6E02               	movwf	(?___fladd+1)^0,c
 13766   002BDE  0E00               	movlw	0
 13767   002BE0  6E03               	movwf	(?___fladd+2)^0,c
 13768   002BE2  0E00               	movlw	0
 13769   002BE4  6E04               	movwf	(?___fladd+3)^0,c
 13770   002BE6  EFB3  F016         	goto	l1240
 13771   002BEA                     l4036:
 13772   002BEA  90D8               	bcf	status,0,c
 13773   002BEC  3601               	rlcf	___fladd@b^0,f,c
 13774   002BEE  3602               	rlcf	(___fladd@b+1)^0,f,c
 13775   002BF0  3603               	rlcf	(___fladd@b+2)^0,f,c
 13776   002BF2  3604               	rlcf	(___fladd@b+3)^0,f,c
 13777   002BF4  AE10               	btfss	___fladd@grs^0,7,c
 13778   002BF6  EFFF  F015         	goto	u3291
 13779   002BFA  EF01  F016         	goto	u3290
 13780   002BFE                     u3291:
 13781   002BFE  EF02  F016         	goto	l4042
 13782   002C02                     u3290:
 13783   002C02  8001               	bsf	___fladd@b^0,0,c
 13784   002C04                     l4042:
 13785   002C04  A010               	btfss	___fladd@grs^0,0,c
 13786   002C06  EF07  F016         	goto	u3301
 13787   002C0A  EF09  F016         	goto	u3300
 13788   002C0E                     u3301:
 13789   002C0E  EF0D  F016         	goto	l4046
 13790   002C12                     u3300:
 13791   002C12  80D8               	bsf	status,0,c
 13792   002C14  3610               	rlcf	___fladd@grs^0,f,c
 13793   002C16  EF0F  F016         	goto	l4048
 13794   002C1A                     l4046:
 13795   002C1A  90D8               	bcf	status,0,c
 13796   002C1C  3610               	rlcf	___fladd@grs^0,f,c
 13797   002C1E                     l4048:
 13798   002C1E  500F               	movf	___fladd@bexp^0,w,c
 13799   002C20  B4D8               	btfsc	status,2,c
 13800   002C22  EF15  F016         	goto	u3311
 13801   002C26  EF17  F016         	goto	u3310
 13802   002C2A                     u3311:
 13803   002C2A  EF18  F016         	goto	l4052
 13804   002C2E                     u3310:
 13805   002C2E  060F               	decf	___fladd@bexp^0,f,c
 13806   002C30                     l4052:
 13807   002C30  AE03               	btfss	(___fladd@b+2)^0,7,c
 13808   002C32  EF1D  F016         	goto	u3321
 13809   002C36  EF1F  F016         	goto	u3320
 13810   002C3A                     u3321:
 13811   002C3A  EFF5  F015         	goto	l4036
 13812   002C3E                     u3320:
 13813   002C3E                     l4054:
 13814   002C3E  0E00               	movlw	0
 13815   002C40  6E0E               	movwf	___fladd@aexp^0,c
 13816   002C42  AE10               	btfss	___fladd@grs^0,7,c
 13817   002C44  EF26  F016         	goto	u3331
 13818   002C48  EF28  F016         	goto	u3330
 13819   002C4C                     u3331:
 13820   002C4C  EF40  F016         	goto	l1257
 13821   002C50                     u3330:
 13822   002C50  C010  F009         	movff	___fladd@grs,??___fladd
 13823   002C54  0E7F               	movlw	127
 13824   002C56  1609               	andwf	??___fladd^0,f,c
 13825   002C58  B4D8               	btfsc	status,2,c
 13826   002C5A  EF31  F016         	goto	u3341
 13827   002C5E  EF33  F016         	goto	u3340
 13828   002C62                     u3341:
 13829   002C62  EF37  F016         	goto	l1258
 13830   002C66                     u3340:
 13831   002C66                     l4060:
 13832   002C66  0E01               	movlw	1
 13833   002C68  6E0E               	movwf	___fladd@aexp^0,c
 13834   002C6A  EF40  F016         	goto	l1257
 13835   002C6E                     l1258:
 13836   002C6E  A001               	btfss	___fladd@b^0,0,c
 13837   002C70  EF3C  F016         	goto	u3351
 13838   002C74  EF3E  F016         	goto	u3350
 13839   002C78                     u3351:
 13840   002C78  EF40  F016         	goto	l1257
 13841   002C7C                     u3350:
 13842   002C7C  EF33  F016         	goto	l4060
 13843   002C80                     l1257:
 13844   002C80  500E               	movf	___fladd@aexp^0,w,c
 13845   002C82  B4D8               	btfsc	status,2,c
 13846   002C84  EF46  F016         	goto	u3361
 13847   002C88  EF48  F016         	goto	u3360
 13848   002C8C                     u3361:
 13849   002C8C  EF73  F016         	goto	l4072
 13850   002C90                     u3360:
 13851   002C90  0E01               	movlw	1
 13852   002C92  2601               	addwf	___fladd@b^0,f,c
 13853   002C94  0E00               	movlw	0
 13854   002C96  2202               	addwfc	(___fladd@b+1)^0,f,c
 13855   002C98  2203               	addwfc	(___fladd@b+2)^0,f,c
 13856   002C9A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13857   002C9C  A004               	btfss	(___fladd@b+3)^0,0,c
 13858   002C9E  EF53  F016         	goto	u3371
 13859   002CA2  EF55  F016         	goto	u3370
 13860   002CA6                     u3371:
 13861   002CA6  EF73  F016         	goto	l4072
 13862   002CAA                     u3370:
 13863   002CAA  C001  F009         	movff	___fladd@b,??___fladd
 13864   002CAE  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13865   002CB2  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13866   002CB6  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13867   002CBA  340C               	rlcf	(??___fladd+3)^0,w,c
 13868   002CBC  320C               	rrcf	(??___fladd+3)^0,f,c
 13869   002CBE  320B               	rrcf	(??___fladd+2)^0,f,c
 13870   002CC0  320A               	rrcf	(??___fladd+1)^0,f,c
 13871   002CC2  3209               	rrcf	??___fladd^0,f,c
 13872   002CC4  C009  F001         	movff	??___fladd,___fladd@b
 13873   002CC8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13874   002CCC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13875   002CD0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13876   002CD4  280F               	incf	___fladd@bexp^0,w,c
 13877   002CD6  B4D8               	btfsc	status,2,c
 13878   002CD8  EF70  F016         	goto	u3381
 13879   002CDC  EF72  F016         	goto	u3380
 13880   002CE0                     u3381:
 13881   002CE0  EF73  F016         	goto	l4072
 13882   002CE4                     u3380:
 13883   002CE4  2A0F               	incf	___fladd@bexp^0,f,c
 13884   002CE6                     l4072:
 13885   002CE6  280F               	incf	___fladd@bexp^0,w,c
 13886   002CE8  B4D8               	btfsc	status,2,c
 13887   002CEA  EF79  F016         	goto	u3391
 13888   002CEE  EF7B  F016         	goto	u3390
 13889   002CF2                     u3391:
 13890   002CF2  EF83  F016         	goto	l4076
 13891   002CF6                     u3390:
 13892   002CF6  500F               	movf	___fladd@bexp^0,w,c
 13893   002CF8  A4D8               	btfss	status,2,c
 13894   002CFA  EF81  F016         	goto	u3401
 13895   002CFE  EF83  F016         	goto	u3400
 13896   002D02                     u3401:
 13897   002D02  EF95  F016         	goto	l4080
 13898   002D06                     u3400:
 13899   002D06                     l4076:
 13900   002D06  0E00               	movlw	0
 13901   002D08  6E01               	movwf	___fladd@b^0,c
 13902   002D0A  0E00               	movlw	0
 13903   002D0C  6E02               	movwf	(___fladd@b+1)^0,c
 13904   002D0E  0E00               	movlw	0
 13905   002D10  6E03               	movwf	(___fladd@b+2)^0,c
 13906   002D12  0E00               	movlw	0
 13907   002D14  6E04               	movwf	(___fladd@b+3)^0,c
 13908   002D16  500F               	movf	___fladd@bexp^0,w,c
 13909   002D18  A4D8               	btfss	status,2,c
 13910   002D1A  EF91  F016         	goto	u3411
 13911   002D1E  EF93  F016         	goto	u3410
 13912   002D22                     u3411:
 13913   002D22  EF95  F016         	goto	l4080
 13914   002D26                     u3410:
 13915   002D26  0E00               	movlw	0
 13916   002D28  6E0D               	movwf	___fladd@signs^0,c
 13917   002D2A                     l4080:
 13918   002D2A  A00F               	btfss	___fladd@bexp^0,0,c
 13919   002D2C  EF9A  F016         	goto	u3421
 13920   002D30  EF9C  F016         	goto	u3420
 13921   002D34                     u3421:
 13922   002D34  EF9F  F016         	goto	l4084
 13923   002D38                     u3420:
 13924   002D38  8E03               	bsf	(___fladd@b+2)^0,7,c
 13925   002D3A  EFA0  F016         	goto	l4086
 13926   002D3E                     l4084:
 13927   002D3E  9E03               	bcf	(___fladd@b+2)^0,7,c
 13928   002D40                     l4086:
 13929   002D40  90D8               	bcf	status,0,c
 13930   002D42  300F               	rrcf	___fladd@bexp^0,w,c
 13931   002D44  6E04               	movwf	(___fladd@b+3)^0,c
 13932   002D46  AE0D               	btfss	___fladd@signs^0,7,c
 13933   002D48  EFA8  F016         	goto	u3431
 13934   002D4C  EFAA  F016         	goto	u3430
 13935   002D50                     u3431:
 13936   002D50  EFAB  F016         	goto	l4092
 13937   002D54                     u3430:
 13938   002D54  8E04               	bsf	(___fladd@b+3)^0,7,c
 13939   002D56                     l4092:
 13940   002D56  C001  F001         	movff	___fladd@b,?___fladd
 13941   002D5A  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13942   002D5E  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13943   002D62  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13944   002D66                     l1240:
 13945   002D66  0012               	return		;funcret
 13946   002D68                     __end_of___fladd:
 13947                           	callstack 0
 13948                           
 13949 ;; *************** function ___flmul *****************
 13950 ;; Defined at:
 13951 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;  b               4   16[COMRAM] unsigned char 
 13954 ;;  a               4   20[COMRAM] unsigned char 
 13955 ;; Auto vars:     Size  Location     Type
 13956 ;;  prod            4   35[COMRAM] struct .
 13957 ;;  grs             4   29[COMRAM] unsigned long 
 13958 ;;  temp            2   39[COMRAM] struct .
 13959 ;;  bexp            1   34[COMRAM] unsigned char 
 13960 ;;  aexp            1   33[COMRAM] unsigned char 
 13961 ;;  sign            1   28[COMRAM] unsigned char 
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  4   16[COMRAM] unsigned char 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0, prodl, prodh
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13971 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13972 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13975 ;;Total ram usage:       25 bytes
 13976 ;; Hardware stack levels used: 1
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_Colour_decider
 13981 ;;		_reverseOneBlock
 13982 ;;		_ForwardOneBlock
 13983 ;;		_Forwardhalfblock
 13984 ;;		_efgtoa
 13985 ;;		_Backhalfblock
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text75
 13990   002D68                     __ptext75:
 13991                           	callstack 0
 13992   002D68                     ___flmul:
 13993                           	callstack 26
 13994   002D68  5014               	movf	(___flmul@b+3)^0,w,c
 13995   002D6A  0B80               	andlw	128
 13996   002D6C  6E1D               	movwf	___flmul@sign^0,c
 13997   002D6E  5014               	movf	(___flmul@b+3)^0,w,c
 13998   002D70  2414               	addwf	(___flmul@b+3)^0,w,c
 13999   002D72  6E23               	movwf	___flmul@bexp^0,c
 14000   002D74  AE13               	btfss	(___flmul@b+2)^0,7,c
 14001   002D76  EFBF  F016         	goto	u3861
 14002   002D7A  EFC1  F016         	goto	u3860
 14003   002D7E                     u3861:
 14004   002D7E  EFC2  F016         	goto	l4366
 14005   002D82                     u3860:
 14006   002D82  8023               	bsf	___flmul@bexp^0,0,c
 14007   002D84                     l4366:
 14008   002D84  5023               	movf	___flmul@bexp^0,w,c
 14009   002D86  B4D8               	btfsc	status,2,c
 14010   002D88  EFC8  F016         	goto	u3871
 14011   002D8C  EFCA  F016         	goto	u3870
 14012   002D90                     u3871:
 14013   002D90  EFDD  F016         	goto	l4374
 14014   002D94                     u3870:
 14015   002D94  2823               	incf	___flmul@bexp^0,w,c
 14016   002D96  A4D8               	btfss	status,2,c
 14017   002D98  EFD0  F016         	goto	u3881
 14018   002D9C  EFD2  F016         	goto	u3880
 14019   002DA0                     u3881:
 14020   002DA0  EFDA  F016         	goto	l4372
 14021   002DA4                     u3880:
 14022   002DA4  0E00               	movlw	0
 14023   002DA6  6E11               	movwf	___flmul@b^0,c
 14024   002DA8  0E00               	movlw	0
 14025   002DAA  6E12               	movwf	(___flmul@b+1)^0,c
 14026   002DAC  0E00               	movlw	0
 14027   002DAE  6E13               	movwf	(___flmul@b+2)^0,c
 14028   002DB0  0E00               	movlw	0
 14029   002DB2  6E14               	movwf	(___flmul@b+3)^0,c
 14030   002DB4                     l4372:
 14031   002DB4  8E13               	bsf	(___flmul@b+2)^0,7,c
 14032   002DB6  EFE5  F016         	goto	l4376
 14033   002DBA                     l4374:
 14034   002DBA  0E00               	movlw	0
 14035   002DBC  6E11               	movwf	___flmul@b^0,c
 14036   002DBE  0E00               	movlw	0
 14037   002DC0  6E12               	movwf	(___flmul@b+1)^0,c
 14038   002DC2  0E00               	movlw	0
 14039   002DC4  6E13               	movwf	(___flmul@b+2)^0,c
 14040   002DC6  0E00               	movlw	0
 14041   002DC8  6E14               	movwf	(___flmul@b+3)^0,c
 14042   002DCA                     l4376:
 14043   002DCA  5018               	movf	(___flmul@a+3)^0,w,c
 14044   002DCC  0B80               	andlw	128
 14045   002DCE  1A1D               	xorwf	___flmul@sign^0,f,c
 14046   002DD0  5018               	movf	(___flmul@a+3)^0,w,c
 14047   002DD2  2418               	addwf	(___flmul@a+3)^0,w,c
 14048   002DD4  6E22               	movwf	___flmul@aexp^0,c
 14049   002DD6  AE17               	btfss	(___flmul@a+2)^0,7,c
 14050   002DD8  EFF0  F016         	goto	u3891
 14051   002DDC  EFF2  F016         	goto	u3890
 14052   002DE0                     u3891:
 14053   002DE0  EFF3  F016         	goto	l4384
 14054   002DE4                     u3890:
 14055   002DE4  8022               	bsf	___flmul@aexp^0,0,c
 14056   002DE6                     l4384:
 14057   002DE6  5022               	movf	___flmul@aexp^0,w,c
 14058   002DE8  B4D8               	btfsc	status,2,c
 14059   002DEA  EFF9  F016         	goto	u3901
 14060   002DEE  EFFB  F016         	goto	u3900
 14061   002DF2                     u3901:
 14062   002DF2  EF0E  F017         	goto	l4392
 14063   002DF6                     u3900:
 14064   002DF6  2822               	incf	___flmul@aexp^0,w,c
 14065   002DF8  A4D8               	btfss	status,2,c
 14066   002DFA  EF01  F017         	goto	u3911
 14067   002DFE  EF03  F017         	goto	u3910
 14068   002E02                     u3911:
 14069   002E02  EF0B  F017         	goto	l4390
 14070   002E06                     u3910:
 14071   002E06  0E00               	movlw	0
 14072   002E08  6E15               	movwf	___flmul@a^0,c
 14073   002E0A  0E00               	movlw	0
 14074   002E0C  6E16               	movwf	(___flmul@a+1)^0,c
 14075   002E0E  0E00               	movlw	0
 14076   002E10  6E17               	movwf	(___flmul@a+2)^0,c
 14077   002E12  0E00               	movlw	0
 14078   002E14  6E18               	movwf	(___flmul@a+3)^0,c
 14079   002E16                     l4390:
 14080   002E16  8E17               	bsf	(___flmul@a+2)^0,7,c
 14081   002E18  EF16  F017         	goto	l1317
 14082   002E1C                     l4392:
 14083   002E1C  0E00               	movlw	0
 14084   002E1E  6E15               	movwf	___flmul@a^0,c
 14085   002E20  0E00               	movlw	0
 14086   002E22  6E16               	movwf	(___flmul@a+1)^0,c
 14087   002E24  0E00               	movlw	0
 14088   002E26  6E17               	movwf	(___flmul@a+2)^0,c
 14089   002E28  0E00               	movlw	0
 14090   002E2A  6E18               	movwf	(___flmul@a+3)^0,c
 14091   002E2C                     l1317:
 14092   002E2C  5022               	movf	___flmul@aexp^0,w,c
 14093   002E2E  B4D8               	btfsc	status,2,c
 14094   002E30  EF1C  F017         	goto	u3921
 14095   002E34  EF1E  F017         	goto	u3920
 14096   002E38                     u3921:
 14097   002E38  EF26  F017         	goto	l4396
 14098   002E3C                     u3920:
 14099   002E3C  5023               	movf	___flmul@bexp^0,w,c
 14100   002E3E  A4D8               	btfss	status,2,c
 14101   002E40  EF24  F017         	goto	u3931
 14102   002E44  EF26  F017         	goto	u3930
 14103   002E48                     u3931:
 14104   002E48  EF30  F017         	goto	l4400
 14105   002E4C                     u3930:
 14106   002E4C                     l4396:
 14107   002E4C  0E00               	movlw	0
 14108   002E4E  6E11               	movwf	?___flmul^0,c
 14109   002E50  0E00               	movlw	0
 14110   002E52  6E12               	movwf	(?___flmul+1)^0,c
 14111   002E54  0E00               	movlw	0
 14112   002E56  6E13               	movwf	(?___flmul+2)^0,c
 14113   002E58  0E00               	movlw	0
 14114   002E5A  6E14               	movwf	(?___flmul+3)^0,c
 14115   002E5C  EFC8  F018         	goto	l1321
 14116   002E60                     l4400:
 14117   002E60  5017               	movf	(___flmul@a+2)^0,w,c
 14118   002E62  0211               	mulwf	___flmul@b^0,c
 14119   002E64  CFF3 F028          	movff	prodl,___flmul@temp
 14120   002E68  CFF4 F029          	movff	prodh,___flmul@temp+1
 14121   002E6C  5028               	movf	___flmul@temp^0,w,c
 14122   002E6E  6E1E               	movwf	___flmul@grs^0,c
 14123   002E70  6A1F               	clrf	(___flmul@grs+1)^0,c
 14124   002E72  6A20               	clrf	(___flmul@grs+2)^0,c
 14125   002E74  6A21               	clrf	(___flmul@grs+3)^0,c
 14126   002E76  5029               	movf	(___flmul@temp+1)^0,w,c
 14127   002E78  6E24               	movwf	___flmul@prod^0,c
 14128   002E7A  6A25               	clrf	(___flmul@prod+1)^0,c
 14129   002E7C  6A26               	clrf	(___flmul@prod+2)^0,c
 14130   002E7E  6A27               	clrf	(___flmul@prod+3)^0,c
 14131   002E80  5016               	movf	(___flmul@a+1)^0,w,c
 14132   002E82  0212               	mulwf	(___flmul@b+1)^0,c
 14133   002E84  CFF3 F028          	movff	prodl,___flmul@temp
 14134   002E88  CFF4 F029          	movff	prodh,___flmul@temp+1
 14135   002E8C  5028               	movf	___flmul@temp^0,w,c
 14136   002E8E  261E               	addwf	___flmul@grs^0,f,c
 14137   002E90  0E00               	movlw	0
 14138   002E92  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14139   002E94  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14140   002E96  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14141   002E98  5029               	movf	(___flmul@temp+1)^0,w,c
 14142   002E9A  2624               	addwf	___flmul@prod^0,f,c
 14143   002E9C  0E00               	movlw	0
 14144   002E9E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14145   002EA0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14146   002EA2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14147   002EA4  5015               	movf	___flmul@a^0,w,c
 14148   002EA6  0213               	mulwf	(___flmul@b+2)^0,c
 14149   002EA8  CFF3 F028          	movff	prodl,___flmul@temp
 14150   002EAC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14151   002EB0  5028               	movf	___flmul@temp^0,w,c
 14152   002EB2  261E               	addwf	___flmul@grs^0,f,c
 14153   002EB4  0E00               	movlw	0
 14154   002EB6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14155   002EB8  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14156   002EBA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14157   002EBC  5029               	movf	(___flmul@temp+1)^0,w,c
 14158   002EBE  2624               	addwf	___flmul@prod^0,f,c
 14159   002EC0  0E00               	movlw	0
 14160   002EC2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14161   002EC4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14162   002EC6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14163   002EC8  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14164   002ECC  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14165   002ED0  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14166   002ED4  6A1E               	clrf	___flmul@grs^0,c
 14167   002ED6  5015               	movf	___flmul@a^0,w,c
 14168   002ED8  0212               	mulwf	(___flmul@b+1)^0,c
 14169   002EDA  CFF3 F028          	movff	prodl,___flmul@temp
 14170   002EDE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14171   002EE2  5028               	movf	___flmul@temp^0,w,c
 14172   002EE4  261E               	addwf	___flmul@grs^0,f,c
 14173   002EE6  5029               	movf	(___flmul@temp+1)^0,w,c
 14174   002EE8  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14175   002EEA  0E00               	movlw	0
 14176   002EEC  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14177   002EEE  0E00               	movlw	0
 14178   002EF0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14179   002EF2  5016               	movf	(___flmul@a+1)^0,w,c
 14180   002EF4  0211               	mulwf	___flmul@b^0,c
 14181   002EF6  CFF3 F028          	movff	prodl,___flmul@temp
 14182   002EFA  CFF4 F029          	movff	prodh,___flmul@temp+1
 14183   002EFE  5028               	movf	___flmul@temp^0,w,c
 14184   002F00  261E               	addwf	___flmul@grs^0,f,c
 14185   002F02  5029               	movf	(___flmul@temp+1)^0,w,c
 14186   002F04  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14187   002F06  0E00               	movlw	0
 14188   002F08  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14189   002F0A  0E00               	movlw	0
 14190   002F0C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14191   002F0E  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14192   002F12  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14193   002F16  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14194   002F1A  6A1E               	clrf	___flmul@grs^0,c
 14195   002F1C  5015               	movf	___flmul@a^0,w,c
 14196   002F1E  0211               	mulwf	___flmul@b^0,c
 14197   002F20  CFF3 F028          	movff	prodl,___flmul@temp
 14198   002F24  CFF4 F029          	movff	prodh,___flmul@temp+1
 14199   002F28  5028               	movf	___flmul@temp^0,w,c
 14200   002F2A  261E               	addwf	___flmul@grs^0,f,c
 14201   002F2C  5029               	movf	(___flmul@temp+1)^0,w,c
 14202   002F2E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14203   002F30  0E00               	movlw	0
 14204   002F32  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14205   002F34  0E00               	movlw	0
 14206   002F36  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14207   002F38  5017               	movf	(___flmul@a+2)^0,w,c
 14208   002F3A  0212               	mulwf	(___flmul@b+1)^0,c
 14209   002F3C  CFF3 F028          	movff	prodl,___flmul@temp
 14210   002F40  CFF4 F029          	movff	prodh,___flmul@temp+1
 14211   002F44  5028               	movf	___flmul@temp^0,w,c
 14212   002F46  2624               	addwf	___flmul@prod^0,f,c
 14213   002F48  5029               	movf	(___flmul@temp+1)^0,w,c
 14214   002F4A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14215   002F4C  0E00               	movlw	0
 14216   002F4E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14217   002F50  0E00               	movlw	0
 14218   002F52  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14219   002F54  5016               	movf	(___flmul@a+1)^0,w,c
 14220   002F56  0213               	mulwf	(___flmul@b+2)^0,c
 14221   002F58  CFF3 F028          	movff	prodl,___flmul@temp
 14222   002F5C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14223   002F60  5028               	movf	___flmul@temp^0,w,c
 14224   002F62  2624               	addwf	___flmul@prod^0,f,c
 14225   002F64  5029               	movf	(___flmul@temp+1)^0,w,c
 14226   002F66  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14227   002F68  0E00               	movlw	0
 14228   002F6A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14229   002F6C  0E00               	movlw	0
 14230   002F6E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14231   002F70  5017               	movf	(___flmul@a+2)^0,w,c
 14232   002F72  0213               	mulwf	(___flmul@b+2)^0,c
 14233   002F74  CFF3 F028          	movff	prodl,___flmul@temp
 14234   002F78  CFF4 F029          	movff	prodh,___flmul@temp+1
 14235   002F7C  5028               	movf	___flmul@temp^0,w,c
 14236   002F7E  6E19               	movwf	??___flmul^0,c
 14237   002F80  5029               	movf	(___flmul@temp+1)^0,w,c
 14238   002F82  6E1A               	movwf	(??___flmul+1)^0,c
 14239   002F84  6A1B               	clrf	(??___flmul+2)^0,c
 14240   002F86  6A1C               	clrf	(??___flmul+3)^0,c
 14241   002F88  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14242   002F8C  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14243   002F90  C019  F01A         	movff	??___flmul,??___flmul+1
 14244   002F94  6A19               	clrf	??___flmul^0,c
 14245   002F96  5019               	movf	??___flmul^0,w,c
 14246   002F98  2624               	addwf	___flmul@prod^0,f,c
 14247   002F9A  501A               	movf	(??___flmul+1)^0,w,c
 14248   002F9C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14249   002F9E  501B               	movf	(??___flmul+2)^0,w,c
 14250   002FA0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14251   002FA2  501C               	movf	(??___flmul+3)^0,w,c
 14252   002FA4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14253   002FA6  C01E  F019         	movff	___flmul@grs,??___flmul
 14254   002FAA  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14255   002FAE  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14256   002FB2  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14257   002FB6  0E19               	movlw	25
 14258   002FB8  EFE3  F017         	goto	u3940
 14259   002FBC                     u3945:
 14260   002FBC  90D8               	bcf	status,0,c
 14261   002FBE  321C               	rrcf	(??___flmul+3)^0,f,c
 14262   002FC0  321B               	rrcf	(??___flmul+2)^0,f,c
 14263   002FC2  321A               	rrcf	(??___flmul+1)^0,f,c
 14264   002FC4  3219               	rrcf	??___flmul^0,f,c
 14265   002FC6                     u3940:
 14266   002FC6  2EE8               	decfsz	wreg,f,c
 14267   002FC8  EFDE  F017         	goto	u3945
 14268   002FCC  5019               	movf	??___flmul^0,w,c
 14269   002FCE  2624               	addwf	___flmul@prod^0,f,c
 14270   002FD0  501A               	movf	(??___flmul+1)^0,w,c
 14271   002FD2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14272   002FD4  501B               	movf	(??___flmul+2)^0,w,c
 14273   002FD6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14274   002FD8  501C               	movf	(??___flmul+3)^0,w,c
 14275   002FDA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14276   002FDC  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14277   002FE0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14278   002FE4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14279   002FE8  6A1E               	clrf	___flmul@grs^0,c
 14280   002FEA  5022               	movf	___flmul@aexp^0,w,c
 14281   002FEC  C023  F019         	movff	___flmul@bexp,??___flmul
 14282   002FF0  6A1A               	clrf	(??___flmul+1)^0,c
 14283   002FF2  2619               	addwf	??___flmul^0,f,c
 14284   002FF4  0E00               	movlw	0
 14285   002FF6  221A               	addwfc	(??___flmul+1)^0,f,c
 14286   002FF8  0E82               	movlw	130
 14287   002FFA  2419               	addwf	??___flmul^0,w,c
 14288   002FFC  6E28               	movwf	___flmul@temp^0,c
 14289   002FFE  0EFF               	movlw	255
 14290   003000  201A               	addwfc	(??___flmul+1)^0,w,c
 14291   003002  6E29               	movwf	(___flmul@temp+1)^0,c
 14292   003004  EF19  F018         	goto	l4448
 14293   003008                     l4442:
 14294   003008  90D8               	bcf	status,0,c
 14295   00300A  3624               	rlcf	___flmul@prod^0,f,c
 14296   00300C  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14297   00300E  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14298   003010  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14299   003012  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14300   003014  EF0E  F018         	goto	u3951
 14301   003018  EF10  F018         	goto	u3950
 14302   00301C                     u3951:
 14303   00301C  EF11  F018         	goto	l1324
 14304   003020                     u3950:
 14305   003020  8024               	bsf	___flmul@prod^0,0,c
 14306   003022                     l1324:
 14307   003022  90D8               	bcf	status,0,c
 14308   003024  361E               	rlcf	___flmul@grs^0,f,c
 14309   003026  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14310   003028  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14311   00302A  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14312   00302C  0628               	decf	___flmul@temp^0,f,c
 14313   00302E  A0D8               	btfss	status,0,c
 14314   003030  0629               	decf	(___flmul@temp+1)^0,f,c
 14315   003032                     l4448:
 14316   003032  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14317   003034  EF1E  F018         	goto	u3961
 14318   003038  EF20  F018         	goto	u3960
 14319   00303C                     u3961:
 14320   00303C  EF04  F018         	goto	l4442
 14321   003040                     u3960:
 14322   003040  0E00               	movlw	0
 14323   003042  6E22               	movwf	___flmul@aexp^0,c
 14324   003044  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14325   003046  EF27  F018         	goto	u3971
 14326   00304A  EF29  F018         	goto	u3970
 14327   00304E                     u3971:
 14328   00304E  EF4D  F018         	goto	l1326
 14329   003052                     u3970:
 14330   003052  0EFF               	movlw	255
 14331   003054  141E               	andwf	___flmul@grs^0,w,c
 14332   003056  6E19               	movwf	??___flmul^0,c
 14333   003058  0EFF               	movlw	255
 14334   00305A  141F               	andwf	(___flmul@grs+1)^0,w,c
 14335   00305C  6E1A               	movwf	(??___flmul+1)^0,c
 14336   00305E  0EFF               	movlw	255
 14337   003060  1420               	andwf	(___flmul@grs+2)^0,w,c
 14338   003062  6E1B               	movwf	(??___flmul+2)^0,c
 14339   003064  0E7F               	movlw	127
 14340   003066  1421               	andwf	(___flmul@grs+3)^0,w,c
 14341   003068  6E1C               	movwf	(??___flmul+3)^0,c
 14342   00306A  5019               	movf	??___flmul^0,w,c
 14343   00306C  101A               	iorwf	(??___flmul+1)^0,w,c
 14344   00306E  101B               	iorwf	(??___flmul+2)^0,w,c
 14345   003070  101C               	iorwf	(??___flmul+3)^0,w,c
 14346   003072  B4D8               	btfsc	status,2,c
 14347   003074  EF3E  F018         	goto	u3981
 14348   003078  EF40  F018         	goto	u3980
 14349   00307C                     u3981:
 14350   00307C  EF44  F018         	goto	l1327
 14351   003080                     u3980:
 14352   003080                     l4456:
 14353   003080  0E01               	movlw	1
 14354   003082  6E22               	movwf	___flmul@aexp^0,c
 14355   003084  EF4D  F018         	goto	l1326
 14356   003088                     l1327:
 14357   003088  A024               	btfss	___flmul@prod^0,0,c
 14358   00308A  EF49  F018         	goto	u3991
 14359   00308E  EF4B  F018         	goto	u3990
 14360   003092                     u3991:
 14361   003092  EF4D  F018         	goto	l1326
 14362   003096                     u3990:
 14363   003096  EF40  F018         	goto	l4456
 14364   00309A                     l1326:
 14365   00309A  5022               	movf	___flmul@aexp^0,w,c
 14366   00309C  B4D8               	btfsc	status,2,c
 14367   00309E  EF53  F018         	goto	u4001
 14368   0030A2  EF55  F018         	goto	u4000
 14369   0030A6                     u4001:
 14370   0030A6  EF79  F018         	goto	l4468
 14371   0030AA                     u4000:
 14372   0030AA  0E01               	movlw	1
 14373   0030AC  2624               	addwf	___flmul@prod^0,f,c
 14374   0030AE  0E00               	movlw	0
 14375   0030B0  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14376   0030B2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14377   0030B4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14378   0030B6  A027               	btfss	(___flmul@prod+3)^0,0,c
 14379   0030B8  EF60  F018         	goto	u4011
 14380   0030BC  EF62  F018         	goto	u4010
 14381   0030C0                     u4011:
 14382   0030C0  EF79  F018         	goto	l4468
 14383   0030C4                     u4010:
 14384   0030C4  C024  F019         	movff	___flmul@prod,??___flmul
 14385   0030C8  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14386   0030CC  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14387   0030D0  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14388   0030D4  341C               	rlcf	(??___flmul+3)^0,w,c
 14389   0030D6  321C               	rrcf	(??___flmul+3)^0,f,c
 14390   0030D8  321B               	rrcf	(??___flmul+2)^0,f,c
 14391   0030DA  321A               	rrcf	(??___flmul+1)^0,f,c
 14392   0030DC  3219               	rrcf	??___flmul^0,f,c
 14393   0030DE  C019  F024         	movff	??___flmul,___flmul@prod
 14394   0030E2  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14395   0030E6  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14396   0030EA  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14397   0030EE  4A28               	infsnz	___flmul@temp^0,f,c
 14398   0030F0  2A29               	incf	(___flmul@temp+1)^0,f,c
 14399   0030F2                     l4468:
 14400   0030F2  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14401   0030F4  EF84  F018         	goto	u4021
 14402   0030F8  5029               	movf	(___flmul@temp+1)^0,w,c
 14403   0030FA  E108               	bnz	u4020
 14404   0030FC  2828               	incf	___flmul@temp^0,w,c
 14405   0030FE  A0D8               	btfss	status,0,c
 14406   003100  EF84  F018         	goto	u4021
 14407   003104  EF86  F018         	goto	u4020
 14408   003108                     u4021:
 14409   003108  EF90  F018         	goto	l4472
 14410   00310C                     u4020:
 14411   00310C  0E00               	movlw	0
 14412   00310E  6E24               	movwf	___flmul@prod^0,c
 14413   003110  0E00               	movlw	0
 14414   003112  6E25               	movwf	(___flmul@prod+1)^0,c
 14415   003114  0E80               	movlw	128
 14416   003116  6E26               	movwf	(___flmul@prod+2)^0,c
 14417   003118  0E7F               	movlw	127
 14418   00311A  6E27               	movwf	(___flmul@prod+3)^0,c
 14419   00311C  EFBE  F018         	goto	l4484
 14420   003120                     l4472:
 14421   003120  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14422   003122  EF9D  F018         	goto	u4030
 14423   003126  5029               	movf	(___flmul@temp+1)^0,w,c
 14424   003128  E106               	bnz	u4031
 14425   00312A  0428               	decf	___flmul@temp^0,w,c
 14426   00312C  B0D8               	btfsc	status,0,c
 14427   00312E  EF9B  F018         	goto	u4031
 14428   003132  EF9D  F018         	goto	u4030
 14429   003136                     u4031:
 14430   003136  EFA9  F018         	goto	l1334
 14431   00313A                     u4030:
 14432   00313A  0E00               	movlw	0
 14433   00313C  6E24               	movwf	___flmul@prod^0,c
 14434   00313E  0E00               	movlw	0
 14435   003140  6E25               	movwf	(___flmul@prod+1)^0,c
 14436   003142  0E00               	movlw	0
 14437   003144  6E26               	movwf	(___flmul@prod+2)^0,c
 14438   003146  0E00               	movlw	0
 14439   003148  6E27               	movwf	(___flmul@prod+3)^0,c
 14440   00314A  0E00               	movlw	0
 14441   00314C  6E1D               	movwf	___flmul@sign^0,c
 14442   00314E  EFBE  F018         	goto	l4484
 14443   003152                     l1334:
 14444   003152  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14445   003156  0EFF               	movlw	255
 14446   003158  1624               	andwf	___flmul@prod^0,f,c
 14447   00315A  0EFF               	movlw	255
 14448   00315C  1625               	andwf	(___flmul@prod+1)^0,f,c
 14449   00315E  0E7F               	movlw	127
 14450   003160  1626               	andwf	(___flmul@prod+2)^0,f,c
 14451   003162  0E00               	movlw	0
 14452   003164  1627               	andwf	(___flmul@prod+3)^0,f,c
 14453   003166  A023               	btfss	___flmul@bexp^0,0,c
 14454   003168  EFB8  F018         	goto	u4041
 14455   00316C  EFBA  F018         	goto	u4040
 14456   003170                     u4041:
 14457   003170  EFBB  F018         	goto	l4482
 14458   003174                     u4040:
 14459   003174  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14460   003176                     l4482:
 14461   003176  90D8               	bcf	status,0,c
 14462   003178  3023               	rrcf	___flmul@bexp^0,w,c
 14463   00317A  6E27               	movwf	(___flmul@prod+3)^0,c
 14464   00317C                     l4484:
 14465   00317C  501D               	movf	___flmul@sign^0,w,c
 14466   00317E  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14467   003180  C024  F011         	movff	___flmul@prod,?___flmul
 14468   003184  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14469   003188  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14470   00318C  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14471   003190                     l1321:
 14472   003190  0012               	return		;funcret
 14473   003192                     __end_of___flmul:
 14474                           	callstack 0
 14475                           
 14476 ;; *************** function ___flge *****************
 14477 ;; Defined at:
 14478 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14479 ;; Parameters:    Size  Location     Type
 14480 ;;  ff1             4   41[COMRAM] unsigned char 
 14481 ;;  ff2             4   45[COMRAM] unsigned char 
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;		None
 14484 ;; Return value:  Size  Location     Type
 14485 ;;		None               void
 14486 ;; Registers used:
 14487 ;;		wreg, status,2, status,0
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14493 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14495 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14496 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14497 ;;Total ram usage:       12 bytes
 14498 ;; Hardware stack levels used: 1
 14499 ;; This function calls:
 14500 ;;		Nothing
 14501 ;; This function is called by:
 14502 ;;		_Colour_decider
 14503 ;;		_efgtoa
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           	psect	text76
 14508   004BC2                     __ptext76:
 14509                           	callstack 0
 14510   004BC2                     ___flge:
 14511                           	callstack 26
 14512   004BC2  0E00               	movlw	0
 14513   004BC4  142A               	andwf	___flge@ff1^0,w,c
 14514   004BC6  6E32               	movwf	??___flge^0,c
 14515   004BC8  0E00               	movlw	0
 14516   004BCA  142B               	andwf	(___flge@ff1+1)^0,w,c
 14517   004BCC  6E33               	movwf	(??___flge+1)^0,c
 14518   004BCE  0E80               	movlw	128
 14519   004BD0  142C               	andwf	(___flge@ff1+2)^0,w,c
 14520   004BD2  6E34               	movwf	(??___flge+2)^0,c
 14521   004BD4  0E7F               	movlw	127
 14522   004BD6  142D               	andwf	(___flge@ff1+3)^0,w,c
 14523   004BD8  6E35               	movwf	(??___flge+3)^0,c
 14524   004BDA  5032               	movf	??___flge^0,w,c
 14525   004BDC  1033               	iorwf	(??___flge+1)^0,w,c
 14526   004BDE  1034               	iorwf	(??___flge+2)^0,w,c
 14527   004BE0  1035               	iorwf	(??___flge+3)^0,w,c
 14528   004BE2  A4D8               	btfss	status,2,c
 14529   004BE4  EFF6  F025         	goto	u4081
 14530   004BE8  EFF8  F025         	goto	u4080
 14531   004BEC                     u4081:
 14532   004BEC  EF00  F026         	goto	l4516
 14533   004BF0                     u4080:
 14534   004BF0  0E00               	movlw	0
 14535   004BF2  6E2A               	movwf	___flge@ff1^0,c
 14536   004BF4  0E00               	movlw	0
 14537   004BF6  6E2B               	movwf	(___flge@ff1+1)^0,c
 14538   004BF8  0E00               	movlw	0
 14539   004BFA  6E2C               	movwf	(___flge@ff1+2)^0,c
 14540   004BFC  0E00               	movlw	0
 14541   004BFE  6E2D               	movwf	(___flge@ff1+3)^0,c
 14542   004C00                     l4516:
 14543   004C00  0E00               	movlw	0
 14544   004C02  142E               	andwf	___flge@ff2^0,w,c
 14545   004C04  6E32               	movwf	??___flge^0,c
 14546   004C06  0E00               	movlw	0
 14547   004C08  142F               	andwf	(___flge@ff2+1)^0,w,c
 14548   004C0A  6E33               	movwf	(??___flge+1)^0,c
 14549   004C0C  0E80               	movlw	128
 14550   004C0E  1430               	andwf	(___flge@ff2+2)^0,w,c
 14551   004C10  6E34               	movwf	(??___flge+2)^0,c
 14552   004C12  0E7F               	movlw	127
 14553   004C14  1431               	andwf	(___flge@ff2+3)^0,w,c
 14554   004C16  6E35               	movwf	(??___flge+3)^0,c
 14555   004C18  5032               	movf	??___flge^0,w,c
 14556   004C1A  1033               	iorwf	(??___flge+1)^0,w,c
 14557   004C1C  1034               	iorwf	(??___flge+2)^0,w,c
 14558   004C1E  1035               	iorwf	(??___flge+3)^0,w,c
 14559   004C20  A4D8               	btfss	status,2,c
 14560   004C22  EF15  F026         	goto	u4091
 14561   004C26  EF17  F026         	goto	u4090
 14562   004C2A                     u4091:
 14563   004C2A  EF1F  F026         	goto	l4520
 14564   004C2E                     u4090:
 14565   004C2E  0E00               	movlw	0
 14566   004C30  6E2E               	movwf	___flge@ff2^0,c
 14567   004C32  0E00               	movlw	0
 14568   004C34  6E2F               	movwf	(___flge@ff2+1)^0,c
 14569   004C36  0E00               	movlw	0
 14570   004C38  6E30               	movwf	(___flge@ff2+2)^0,c
 14571   004C3A  0E00               	movlw	0
 14572   004C3C  6E31               	movwf	(___flge@ff2+3)^0,c
 14573   004C3E                     l4520:
 14574   004C3E  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14575   004C40  EF24  F026         	goto	u4101
 14576   004C44  EF26  F026         	goto	u4100
 14577   004C48                     u4101:
 14578   004C48  EF2F  F026         	goto	l4524
 14579   004C4C                     u4100:
 14580   004C4C  6C2A               	negf	___flge@ff1^0,c
 14581   004C4E  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14582   004C50  B0D8               	btfsc	status,0,c
 14583   004C52  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14584   004C54  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14585   004C56  B0D8               	btfsc	status,0,c
 14586   004C58  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14587   004C5A  0E80               	movlw	128
 14588   004C5C  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14589   004C5E                     l4524:
 14590   004C5E  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14591   004C60  EF34  F026         	goto	u4111
 14592   004C64  EF36  F026         	goto	u4110
 14593   004C68                     u4111:
 14594   004C68  EF3F  F026         	goto	l968
 14595   004C6C                     u4110:
 14596   004C6C  6C2E               	negf	___flge@ff2^0,c
 14597   004C6E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14598   004C70  B0D8               	btfsc	status,0,c
 14599   004C72  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14600   004C74  1E30               	comf	(___flge@ff2+2)^0,f,c
 14601   004C76  B0D8               	btfsc	status,0,c
 14602   004C78  2A30               	incf	(___flge@ff2+2)^0,f,c
 14603   004C7A  0E80               	movlw	128
 14604   004C7C  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14605   004C7E                     l968:
 14606   004C7E  0E00               	movlw	0
 14607   004C80  1A2A               	xorwf	___flge@ff1^0,f,c
 14608   004C82  0E00               	movlw	0
 14609   004C84  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14610   004C86  0E00               	movlw	0
 14611   004C88  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14612   004C8A  0E80               	movlw	128
 14613   004C8C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14614   004C8E  0E00               	movlw	0
 14615   004C90  1A2E               	xorwf	___flge@ff2^0,f,c
 14616   004C92  0E00               	movlw	0
 14617   004C94  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14618   004C96  0E00               	movlw	0
 14619   004C98  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14620   004C9A  0E80               	movlw	128
 14621   004C9C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14622   004C9E  502E               	movf	___flge@ff2^0,w,c
 14623   004CA0  5C2A               	subwf	___flge@ff1^0,w,c
 14624   004CA2  502F               	movf	(___flge@ff2+1)^0,w,c
 14625   004CA4  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14626   004CA6  5030               	movf	(___flge@ff2+2)^0,w,c
 14627   004CA8  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14628   004CAA  5031               	movf	(___flge@ff2+3)^0,w,c
 14629   004CAC  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14630   004CAE  B0D8               	btfsc	status,0,c
 14631   004CB0  EF5C  F026         	goto	u4121
 14632   004CB4  EF5E  F026         	goto	u4120
 14633   004CB8                     u4121:
 14634   004CB8  EF61  F026         	goto	l4530
 14635   004CBC                     u4120:
 14636   004CBC  90D8               	bcf	status,0,c
 14637   004CBE  EF62  F026         	goto	l973
 14638   004CC2                     l4530:
 14639   004CC2  80D8               	bsf	status,0,c
 14640   004CC4                     l973:
 14641   004CC4  0012               	return		;funcret
 14642   004CC6                     __end_of___flge:
 14643                           	callstack 0
 14644                           
 14645 ;; *************** function ___fleq *****************
 14646 ;; Defined at:
 14647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;  ff1             4   49[COMRAM] unsigned char 
 14650 ;;  ff2             4   53[COMRAM] unsigned char 
 14651 ;; Auto vars:     Size  Location     Type
 14652 ;;		None
 14653 ;; Return value:  Size  Location     Type
 14654 ;;		None               void
 14655 ;; Registers used:
 14656 ;;		wreg, status,2, status,0
 14657 ;; Tracked objects:
 14658 ;;		On entry : 0/0
 14659 ;;		On exit  : 0/0
 14660 ;;		Unchanged: 0/0
 14661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14662 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14665 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14666 ;;Total ram usage:       12 bytes
 14667 ;; Hardware stack levels used: 1
 14668 ;; This function calls:
 14669 ;;		Nothing
 14670 ;; This function is called by:
 14671 ;;		_Colour_decider
 14672 ;;		_efgtoa
 14673 ;; This function uses a non-reentrant model
 14674 ;;
 14675                           
 14676                           	psect	text77
 14677   0050A4                     __ptext77:
 14678                           	callstack 0
 14679   0050A4                     ___fleq:
 14680                           	callstack 26
 14681   0050A4  0E00               	movlw	0
 14682   0050A6  1432               	andwf	___fleq@ff1^0,w,c
 14683   0050A8  6E3A               	movwf	??___fleq^0,c
 14684   0050AA  0E00               	movlw	0
 14685   0050AC  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14686   0050AE  6E3B               	movwf	(??___fleq+1)^0,c
 14687   0050B0  0E80               	movlw	128
 14688   0050B2  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14689   0050B4  6E3C               	movwf	(??___fleq+2)^0,c
 14690   0050B6  0E7F               	movlw	127
 14691   0050B8  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14692   0050BA  6E3D               	movwf	(??___fleq+3)^0,c
 14693   0050BC  503A               	movf	??___fleq^0,w,c
 14694   0050BE  103B               	iorwf	(??___fleq+1)^0,w,c
 14695   0050C0  103C               	iorwf	(??___fleq+2)^0,w,c
 14696   0050C2  103D               	iorwf	(??___fleq+3)^0,w,c
 14697   0050C4  A4D8               	btfss	status,2,c
 14698   0050C6  EF67  F028         	goto	u4051
 14699   0050CA  EF69  F028         	goto	u4050
 14700   0050CE                     u4051:
 14701   0050CE  EF71  F028         	goto	l4500
 14702   0050D2                     u4050:
 14703   0050D2  0E00               	movlw	0
 14704   0050D4  6E32               	movwf	___fleq@ff1^0,c
 14705   0050D6  0E00               	movlw	0
 14706   0050D8  6E33               	movwf	(___fleq@ff1+1)^0,c
 14707   0050DA  0E00               	movlw	0
 14708   0050DC  6E34               	movwf	(___fleq@ff1+2)^0,c
 14709   0050DE  0E00               	movlw	0
 14710   0050E0  6E35               	movwf	(___fleq@ff1+3)^0,c
 14711   0050E2                     l4500:
 14712   0050E2  0E00               	movlw	0
 14713   0050E4  1436               	andwf	___fleq@ff2^0,w,c
 14714   0050E6  6E3A               	movwf	??___fleq^0,c
 14715   0050E8  0E00               	movlw	0
 14716   0050EA  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14717   0050EC  6E3B               	movwf	(??___fleq+1)^0,c
 14718   0050EE  0E80               	movlw	128
 14719   0050F0  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14720   0050F2  6E3C               	movwf	(??___fleq+2)^0,c
 14721   0050F4  0E7F               	movlw	127
 14722   0050F6  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14723   0050F8  6E3D               	movwf	(??___fleq+3)^0,c
 14724   0050FA  503A               	movf	??___fleq^0,w,c
 14725   0050FC  103B               	iorwf	(??___fleq+1)^0,w,c
 14726   0050FE  103C               	iorwf	(??___fleq+2)^0,w,c
 14727   005100  103D               	iorwf	(??___fleq+3)^0,w,c
 14728   005102  A4D8               	btfss	status,2,c
 14729   005104  EF86  F028         	goto	u4061
 14730   005108  EF88  F028         	goto	u4060
 14731   00510C                     u4061:
 14732   00510C  EF90  F028         	goto	l4504
 14733   005110                     u4060:
 14734   005110  0E00               	movlw	0
 14735   005112  6E36               	movwf	___fleq@ff2^0,c
 14736   005114  0E00               	movlw	0
 14737   005116  6E37               	movwf	(___fleq@ff2+1)^0,c
 14738   005118  0E00               	movlw	0
 14739   00511A  6E38               	movwf	(___fleq@ff2+2)^0,c
 14740   00511C  0E00               	movlw	0
 14741   00511E  6E39               	movwf	(___fleq@ff2+3)^0,c
 14742   005120                     l4504:
 14743   005120  5036               	movf	___fleq@ff2^0,w,c
 14744   005122  1832               	xorwf	___fleq@ff1^0,w,c
 14745   005124  E10F               	bnz	u4070
 14746   005126  5037               	movf	(___fleq@ff2+1)^0,w,c
 14747   005128  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14748   00512A  E10C               	bnz	u4070
 14749   00512C  5038               	movf	(___fleq@ff2+2)^0,w,c
 14750   00512E  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14751   005130  E109               	bnz	u4070
 14752   005132  5039               	movf	(___fleq@ff2+3)^0,w,c
 14753   005134  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14754   005136  B4D8               	btfsc	status,2,c
 14755   005138  EFA0  F028         	goto	u4071
 14756   00513C  EFA2  F028         	goto	u4070
 14757   005140                     u4071:
 14758   005140  EFA5  F028         	goto	l4508
 14759   005144                     u4070:
 14760   005144  90D8               	bcf	status,0,c
 14761   005146  EFA6  F028         	goto	l962
 14762   00514A                     l4508:
 14763   00514A  80D8               	bsf	status,0,c
 14764   00514C                     l962:
 14765   00514C  0012               	return		;funcret
 14766   00514E                     __end_of___fleq:
 14767                           	callstack 0
 14768                           
 14769 ;; *************** function ___fldiv *****************
 14770 ;; Defined at:
 14771 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14772 ;; Parameters:    Size  Location     Type
 14773 ;;  b               4   49[COMRAM] unsigned char 
 14774 ;;  a               4   53[COMRAM] unsigned char 
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;  grs             4   68[COMRAM] unsigned long 
 14777 ;;  rem             4   61[COMRAM] unsigned long 
 14778 ;;  new_exp         2   66[COMRAM] short 
 14779 ;;  aexp            1   73[COMRAM] unsigned char 
 14780 ;;  bexp            1   72[COMRAM] unsigned char 
 14781 ;;  sign            1   65[COMRAM] unsigned char 
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  4   49[COMRAM] unsigned char 
 14784 ;; Registers used:
 14785 ;;		wreg, status,2, status,0
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14792 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14794 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14795 ;;Total ram usage:       25 bytes
 14796 ;; Hardware stack levels used: 1
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_colour_rel
 14801 ;;		_Colour_decider
 14802 ;;		_efgtoa
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text78
 14807   003192                     __ptext78:
 14808                           	callstack 0
 14809   003192                     ___fldiv:
 14810                           	callstack 26
 14811   003192  5035               	movf	(___fldiv@b+3)^0,w,c
 14812   003194  0B80               	andlw	128
 14813   003196  6E42               	movwf	___fldiv@sign^0,c
 14814   003198  5035               	movf	(___fldiv@b+3)^0,w,c
 14815   00319A  2435               	addwf	(___fldiv@b+3)^0,w,c
 14816   00319C  6E49               	movwf	___fldiv@bexp^0,c
 14817   00319E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14818   0031A0  EFD4  F018         	goto	u3631
 14819   0031A4  EFD6  F018         	goto	u3630
 14820   0031A8                     u3631:
 14821   0031A8  EFD7  F018         	goto	l4228
 14822   0031AC                     u3630:
 14823   0031AC  8049               	bsf	___fldiv@bexp^0,0,c
 14824   0031AE                     l4228:
 14825   0031AE  5049               	movf	___fldiv@bexp^0,w,c
 14826   0031B0  B4D8               	btfsc	status,2,c
 14827   0031B2  EFDD  F018         	goto	u3641
 14828   0031B6  EFDF  F018         	goto	u3640
 14829   0031BA                     u3641:
 14830   0031BA  EFF4  F018         	goto	l4238
 14831   0031BE                     u3640:
 14832   0031BE  2849               	incf	___fldiv@bexp^0,w,c
 14833   0031C0  A4D8               	btfss	status,2,c
 14834   0031C2  EFE5  F018         	goto	u3651
 14835   0031C6  EFE7  F018         	goto	u3650
 14836   0031CA                     u3651:
 14837   0031CA  EFEF  F018         	goto	l4234
 14838   0031CE                     u3650:
 14839   0031CE  0E00               	movlw	0
 14840   0031D0  6E32               	movwf	___fldiv@b^0,c
 14841   0031D2  0E00               	movlw	0
 14842   0031D4  6E33               	movwf	(___fldiv@b+1)^0,c
 14843   0031D6  0E00               	movlw	0
 14844   0031D8  6E34               	movwf	(___fldiv@b+2)^0,c
 14845   0031DA  0E00               	movlw	0
 14846   0031DC  6E35               	movwf	(___fldiv@b+3)^0,c
 14847   0031DE                     l4234:
 14848   0031DE  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14849   0031E0  0E00               	movlw	0
 14850   0031E2  6E35               	movwf	(___fldiv@b+3)^0,c
 14851   0031E4  EFFC  F018         	goto	l4240
 14852   0031E8                     l4238:
 14853   0031E8  0E00               	movlw	0
 14854   0031EA  6E32               	movwf	___fldiv@b^0,c
 14855   0031EC  0E00               	movlw	0
 14856   0031EE  6E33               	movwf	(___fldiv@b+1)^0,c
 14857   0031F0  0E00               	movlw	0
 14858   0031F2  6E34               	movwf	(___fldiv@b+2)^0,c
 14859   0031F4  0E00               	movlw	0
 14860   0031F6  6E35               	movwf	(___fldiv@b+3)^0,c
 14861   0031F8                     l4240:
 14862   0031F8  5039               	movf	(___fldiv@a+3)^0,w,c
 14863   0031FA  0B80               	andlw	128
 14864   0031FC  1A42               	xorwf	___fldiv@sign^0,f,c
 14865   0031FE  5039               	movf	(___fldiv@a+3)^0,w,c
 14866   003200  2439               	addwf	(___fldiv@a+3)^0,w,c
 14867   003202  6E4A               	movwf	___fldiv@aexp^0,c
 14868   003204  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14869   003206  EF07  F019         	goto	u3661
 14870   00320A  EF09  F019         	goto	u3660
 14871   00320E                     u3661:
 14872   00320E  EF0A  F019         	goto	l4248
 14873   003212                     u3660:
 14874   003212  804A               	bsf	___fldiv@aexp^0,0,c
 14875   003214                     l4248:
 14876   003214  504A               	movf	___fldiv@aexp^0,w,c
 14877   003216  B4D8               	btfsc	status,2,c
 14878   003218  EF10  F019         	goto	u3671
 14879   00321C  EF12  F019         	goto	u3670
 14880   003220                     u3671:
 14881   003220  EF27  F019         	goto	l4258
 14882   003224                     u3670:
 14883   003224  284A               	incf	___fldiv@aexp^0,w,c
 14884   003226  A4D8               	btfss	status,2,c
 14885   003228  EF18  F019         	goto	u3681
 14886   00322C  EF1A  F019         	goto	u3680
 14887   003230                     u3681:
 14888   003230  EF22  F019         	goto	l4254
 14889   003234                     u3680:
 14890   003234  0E00               	movlw	0
 14891   003236  6E36               	movwf	___fldiv@a^0,c
 14892   003238  0E00               	movlw	0
 14893   00323A  6E37               	movwf	(___fldiv@a+1)^0,c
 14894   00323C  0E00               	movlw	0
 14895   00323E  6E38               	movwf	(___fldiv@a+2)^0,c
 14896   003240  0E00               	movlw	0
 14897   003242  6E39               	movwf	(___fldiv@a+3)^0,c
 14898   003244                     l4254:
 14899   003244  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14900   003246  0E00               	movlw	0
 14901   003248  6E39               	movwf	(___fldiv@a+3)^0,c
 14902   00324A  EF2F  F019         	goto	l4260
 14903   00324E                     l4258:
 14904   00324E  0E00               	movlw	0
 14905   003250  6E36               	movwf	___fldiv@a^0,c
 14906   003252  0E00               	movlw	0
 14907   003254  6E37               	movwf	(___fldiv@a+1)^0,c
 14908   003256  0E00               	movlw	0
 14909   003258  6E38               	movwf	(___fldiv@a+2)^0,c
 14910   00325A  0E00               	movlw	0
 14911   00325C  6E39               	movwf	(___fldiv@a+3)^0,c
 14912   00325E                     l4260:
 14913   00325E  5036               	movf	___fldiv@a^0,w,c
 14914   003260  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14915   003262  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14916   003264  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14917   003266  A4D8               	btfss	status,2,c
 14918   003268  EF38  F019         	goto	u3691
 14919   00326C  EF3A  F019         	goto	u3690
 14920   003270                     u3691:
 14921   003270  EF52  F019         	goto	l4272
 14922   003274                     u3690:
 14923   003274  0E00               	movlw	0
 14924   003276  6E32               	movwf	___fldiv@b^0,c
 14925   003278  0E00               	movlw	0
 14926   00327A  6E33               	movwf	(___fldiv@b+1)^0,c
 14927   00327C  0E00               	movlw	0
 14928   00327E  6E34               	movwf	(___fldiv@b+2)^0,c
 14929   003280  0E00               	movlw	0
 14930   003282  6E35               	movwf	(___fldiv@b+3)^0,c
 14931   003284  0E80               	movlw	128
 14932   003286  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14933   003288  0E7F               	movlw	127
 14934   00328A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14935   00328C                     l4266:
 14936   00328C  5042               	movf	___fldiv@sign^0,w,c
 14937   00328E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14938   003290  C032  F032         	movff	___fldiv@b,?___fldiv
 14939   003294  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14940   003298  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14941   00329C  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14942   0032A0  EF95  F01A         	goto	l1285
 14943   0032A4                     l4272:
 14944   0032A4  5049               	movf	___fldiv@bexp^0,w,c
 14945   0032A6  A4D8               	btfss	status,2,c
 14946   0032A8  EF58  F019         	goto	u3701
 14947   0032AC  EF5A  F019         	goto	u3700
 14948   0032B0                     u3701:
 14949   0032B0  EF64  F019         	goto	l4280
 14950   0032B4                     u3700:
 14951   0032B4  0E00               	movlw	0
 14952   0032B6  6E32               	movwf	?___fldiv^0,c
 14953   0032B8  0E00               	movlw	0
 14954   0032BA  6E33               	movwf	(?___fldiv+1)^0,c
 14955   0032BC  0E00               	movlw	0
 14956   0032BE  6E34               	movwf	(?___fldiv+2)^0,c
 14957   0032C0  0E00               	movlw	0
 14958   0032C2  6E35               	movwf	(?___fldiv+3)^0,c
 14959   0032C4  EF95  F01A         	goto	l1285
 14960   0032C8                     l4280:
 14961   0032C8  504A               	movf	___fldiv@aexp^0,w,c
 14962   0032CA  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14963   0032CE  6A3B               	clrf	(??___fldiv+1)^0,c
 14964   0032D0  5E3A               	subwf	??___fldiv^0,f,c
 14965   0032D2  0E00               	movlw	0
 14966   0032D4  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14967   0032D6  0E7F               	movlw	127
 14968   0032D8  243A               	addwf	??___fldiv^0,w,c
 14969   0032DA  6E43               	movwf	___fldiv@new_exp^0,c
 14970   0032DC  0E00               	movlw	0
 14971   0032DE  203B               	addwfc	(??___fldiv+1)^0,w,c
 14972   0032E0  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14973   0032E2  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14974   0032E6  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14975   0032EA  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14976   0032EE  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14977   0032F2  0E00               	movlw	0
 14978   0032F4  6E32               	movwf	___fldiv@b^0,c
 14979   0032F6  0E00               	movlw	0
 14980   0032F8  6E33               	movwf	(___fldiv@b+1)^0,c
 14981   0032FA  0E00               	movlw	0
 14982   0032FC  6E34               	movwf	(___fldiv@b+2)^0,c
 14983   0032FE  0E00               	movlw	0
 14984   003300  6E35               	movwf	(___fldiv@b+3)^0,c
 14985   003302  0E00               	movlw	0
 14986   003304  6E45               	movwf	___fldiv@grs^0,c
 14987   003306  0E00               	movlw	0
 14988   003308  6E46               	movwf	(___fldiv@grs+1)^0,c
 14989   00330A  0E00               	movlw	0
 14990   00330C  6E47               	movwf	(___fldiv@grs+2)^0,c
 14991   00330E  0E00               	movlw	0
 14992   003310  6E48               	movwf	(___fldiv@grs+3)^0,c
 14993   003312  0E00               	movlw	0
 14994   003314  6E4A               	movwf	___fldiv@aexp^0,c
 14995   003316  EFC5  F019         	goto	l1287
 14996   00331A                     l4290:
 14997   00331A  504A               	movf	___fldiv@aexp^0,w,c
 14998   00331C  B4D8               	btfsc	status,2,c
 14999   00331E  EF93  F019         	goto	u3711
 15000   003322  EF95  F019         	goto	u3710
 15001   003326                     u3711:
 15002   003326  EFAC  F019         	goto	l4298
 15003   00332A                     u3710:
 15004   00332A  90D8               	bcf	status,0,c
 15005   00332C  363E               	rlcf	___fldiv@rem^0,f,c
 15006   00332E  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15007   003330  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15008   003332  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15009   003334  90D8               	bcf	status,0,c
 15010   003336  3632               	rlcf	___fldiv@b^0,f,c
 15011   003338  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15012   00333A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15013   00333C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15014   00333E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15015   003340  EFA4  F019         	goto	u3721
 15016   003344  EFA6  F019         	goto	u3720
 15017   003348                     u3721:
 15018   003348  EFA7  F019         	goto	l1290
 15019   00334C                     u3720:
 15020   00334C  8032               	bsf	___fldiv@b^0,0,c
 15021   00334E                     l1290:
 15022   00334E  90D8               	bcf	status,0,c
 15023   003350  3645               	rlcf	___fldiv@grs^0,f,c
 15024   003352  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15025   003354  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15026   003356  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15027   003358                     l4298:
 15028   003358  5036               	movf	___fldiv@a^0,w,c
 15029   00335A  5C3E               	subwf	___fldiv@rem^0,w,c
 15030   00335C  5037               	movf	(___fldiv@a+1)^0,w,c
 15031   00335E  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15032   003360  5038               	movf	(___fldiv@a+2)^0,w,c
 15033   003362  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15034   003364  5039               	movf	(___fldiv@a+3)^0,w,c
 15035   003366  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15036   003368  A0D8               	btfss	status,0,c
 15037   00336A  EFB9  F019         	goto	u3731
 15038   00336E  EFBB  F019         	goto	u3730
 15039   003372                     u3731:
 15040   003372  EFC4  F019         	goto	l4304
 15041   003376                     u3730:
 15042   003376  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15043   003378  5036               	movf	___fldiv@a^0,w,c
 15044   00337A  5E3E               	subwf	___fldiv@rem^0,f,c
 15045   00337C  5037               	movf	(___fldiv@a+1)^0,w,c
 15046   00337E  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15047   003380  5038               	movf	(___fldiv@a+2)^0,w,c
 15048   003382  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15049   003384  5039               	movf	(___fldiv@a+3)^0,w,c
 15050   003386  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15051   003388                     l4304:
 15052   003388  2A4A               	incf	___fldiv@aexp^0,f,c
 15053   00338A                     l1287:
 15054   00338A  0E19               	movlw	25
 15055   00338C  644A               	cpfsgt	___fldiv@aexp^0,c
 15056   00338E  EFCB  F019         	goto	u3741
 15057   003392  EFCD  F019         	goto	u3740
 15058   003396                     u3741:
 15059   003396  EF8D  F019         	goto	l4290
 15060   00339A                     u3740:
 15061   00339A  503E               	movf	___fldiv@rem^0,w,c
 15062   00339C  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15063   00339E  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15064   0033A0  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15065   0033A2  B4D8               	btfsc	status,2,c
 15066   0033A4  EFD6  F019         	goto	u3751
 15067   0033A8  EFD8  F019         	goto	u3750
 15068   0033AC                     u3751:
 15069   0033AC  EFF0  F019         	goto	l4316
 15070   0033B0                     u3750:
 15071   0033B0  8045               	bsf	___fldiv@grs^0,0,c
 15072   0033B2  EFF0  F019         	goto	l4316
 15073   0033B6                     l4310:
 15074   0033B6  90D8               	bcf	status,0,c
 15075   0033B8  3632               	rlcf	___fldiv@b^0,f,c
 15076   0033BA  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15077   0033BC  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15078   0033BE  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15079   0033C0  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15080   0033C2  EFE5  F019         	goto	u3761
 15081   0033C6  EFE7  F019         	goto	u3760
 15082   0033CA                     u3761:
 15083   0033CA  EFE8  F019         	goto	l1296
 15084   0033CE                     u3760:
 15085   0033CE  8032               	bsf	___fldiv@b^0,0,c
 15086   0033D0                     l1296:
 15087   0033D0  90D8               	bcf	status,0,c
 15088   0033D2  3645               	rlcf	___fldiv@grs^0,f,c
 15089   0033D4  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15090   0033D6  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15091   0033D8  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15092   0033DA  0643               	decf	___fldiv@new_exp^0,f,c
 15093   0033DC  A0D8               	btfss	status,0,c
 15094   0033DE  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15095   0033E0                     l4316:
 15096   0033E0  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15097   0033E2  EFF5  F019         	goto	u3771
 15098   0033E6  EFF7  F019         	goto	u3770
 15099   0033EA                     u3771:
 15100   0033EA  EFDB  F019         	goto	l4310
 15101   0033EE                     u3770:
 15102   0033EE  0E00               	movlw	0
 15103   0033F0  6E4A               	movwf	___fldiv@aexp^0,c
 15104   0033F2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15105   0033F4  EFFE  F019         	goto	u3781
 15106   0033F8  EF00  F01A         	goto	u3780
 15107   0033FC                     u3781:
 15108   0033FC  EF24  F01A         	goto	l1298
 15109   003400                     u3780:
 15110   003400  0EFF               	movlw	255
 15111   003402  1445               	andwf	___fldiv@grs^0,w,c
 15112   003404  6E3A               	movwf	??___fldiv^0,c
 15113   003406  0EFF               	movlw	255
 15114   003408  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15115   00340A  6E3B               	movwf	(??___fldiv+1)^0,c
 15116   00340C  0EFF               	movlw	255
 15117   00340E  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15118   003410  6E3C               	movwf	(??___fldiv+2)^0,c
 15119   003412  0E7F               	movlw	127
 15120   003414  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15121   003416  6E3D               	movwf	(??___fldiv+3)^0,c
 15122   003418  503A               	movf	??___fldiv^0,w,c
 15123   00341A  103B               	iorwf	(??___fldiv+1)^0,w,c
 15124   00341C  103C               	iorwf	(??___fldiv+2)^0,w,c
 15125   00341E  103D               	iorwf	(??___fldiv+3)^0,w,c
 15126   003420  B4D8               	btfsc	status,2,c
 15127   003422  EF15  F01A         	goto	u3791
 15128   003426  EF17  F01A         	goto	u3790
 15129   00342A                     u3791:
 15130   00342A  EF1B  F01A         	goto	l1299
 15131   00342E                     u3790:
 15132   00342E                     l4324:
 15133   00342E  0E01               	movlw	1
 15134   003430  6E4A               	movwf	___fldiv@aexp^0,c
 15135   003432  EF24  F01A         	goto	l1298
 15136   003436                     l1299:
 15137   003436  A032               	btfss	___fldiv@b^0,0,c
 15138   003438  EF20  F01A         	goto	u3801
 15139   00343C  EF22  F01A         	goto	u3800
 15140   003440                     u3801:
 15141   003440  EF24  F01A         	goto	l1298
 15142   003444                     u3800:
 15143   003444  EF17  F01A         	goto	l4324
 15144   003448                     l1298:
 15145   003448  504A               	movf	___fldiv@aexp^0,w,c
 15146   00344A  B4D8               	btfsc	status,2,c
 15147   00344C  EF2A  F01A         	goto	u3811
 15148   003450  EF2C  F01A         	goto	u3810
 15149   003454                     u3811:
 15150   003454  EF50  F01A         	goto	l4336
 15151   003458                     u3810:
 15152   003458  0E01               	movlw	1
 15153   00345A  2632               	addwf	___fldiv@b^0,f,c
 15154   00345C  0E00               	movlw	0
 15155   00345E  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15156   003460  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15157   003462  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15158   003464  A035               	btfss	(___fldiv@b+3)^0,0,c
 15159   003466  EF37  F01A         	goto	u3821
 15160   00346A  EF39  F01A         	goto	u3820
 15161   00346E                     u3821:
 15162   00346E  EF50  F01A         	goto	l4336
 15163   003472                     u3820:
 15164   003472  C032  F03A         	movff	___fldiv@b,??___fldiv
 15165   003476  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15166   00347A  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15167   00347E  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15168   003482  343D               	rlcf	(??___fldiv+3)^0,w,c
 15169   003484  323D               	rrcf	(??___fldiv+3)^0,f,c
 15170   003486  323C               	rrcf	(??___fldiv+2)^0,f,c
 15171   003488  323B               	rrcf	(??___fldiv+1)^0,f,c
 15172   00348A  323A               	rrcf	??___fldiv^0,f,c
 15173   00348C  C03A  F032         	movff	??___fldiv,___fldiv@b
 15174   003490  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15175   003494  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15176   003498  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15177   00349C  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15178   00349E  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15179   0034A0                     l4336:
 15180   0034A0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15181   0034A2  EF5B  F01A         	goto	u3831
 15182   0034A6  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15183   0034A8  E108               	bnz	u3830
 15184   0034AA  2843               	incf	___fldiv@new_exp^0,w,c
 15185   0034AC  A0D8               	btfss	status,0,c
 15186   0034AE  EF5B  F01A         	goto	u3831
 15187   0034B2  EF5D  F01A         	goto	u3830
 15188   0034B6                     u3831:
 15189   0034B6  EF68  F01A         	goto	l4340
 15190   0034BA                     u3830:
 15191   0034BA  0E00               	movlw	0
 15192   0034BC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15193   0034BE  6843               	setf	___fldiv@new_exp^0,c
 15194   0034C0  0E00               	movlw	0
 15195   0034C2  6E32               	movwf	___fldiv@b^0,c
 15196   0034C4  0E00               	movlw	0
 15197   0034C6  6E33               	movwf	(___fldiv@b+1)^0,c
 15198   0034C8  0E00               	movlw	0
 15199   0034CA  6E34               	movwf	(___fldiv@b+2)^0,c
 15200   0034CC  0E00               	movlw	0
 15201   0034CE  6E35               	movwf	(___fldiv@b+3)^0,c
 15202   0034D0                     l4340:
 15203   0034D0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15204   0034D2  EF75  F01A         	goto	u3840
 15205   0034D6  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15206   0034D8  E106               	bnz	u3841
 15207   0034DA  0443               	decf	___fldiv@new_exp^0,w,c
 15208   0034DC  B0D8               	btfsc	status,0,c
 15209   0034DE  EF73  F01A         	goto	u3841
 15210   0034E2  EF75  F01A         	goto	u3840
 15211   0034E6                     u3841:
 15212   0034E6  EF83  F01A         	goto	l4344
 15213   0034EA                     u3840:
 15214   0034EA  0E00               	movlw	0
 15215   0034EC  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15216   0034EE  0E00               	movlw	0
 15217   0034F0  6E43               	movwf	___fldiv@new_exp^0,c
 15218   0034F2  0E00               	movlw	0
 15219   0034F4  6E32               	movwf	___fldiv@b^0,c
 15220   0034F6  0E00               	movlw	0
 15221   0034F8  6E33               	movwf	(___fldiv@b+1)^0,c
 15222   0034FA  0E00               	movlw	0
 15223   0034FC  6E34               	movwf	(___fldiv@b+2)^0,c
 15224   0034FE  0E00               	movlw	0
 15225   003500  6E35               	movwf	(___fldiv@b+3)^0,c
 15226   003502  0E00               	movlw	0
 15227   003504  6E42               	movwf	___fldiv@sign^0,c
 15228   003506                     l4344:
 15229   003506  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15230   00350A  A049               	btfss	___fldiv@bexp^0,0,c
 15231   00350C  EF8A  F01A         	goto	u3851
 15232   003510  EF8C  F01A         	goto	u3850
 15233   003514                     u3851:
 15234   003514  EF8F  F01A         	goto	l4350
 15235   003518                     u3850:
 15236   003518  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15237   00351A  EF90  F01A         	goto	l4352
 15238   00351E                     l4350:
 15239   00351E  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15240   003520                     l4352:
 15241   003520  90D8               	bcf	status,0,c
 15242   003522  3049               	rrcf	___fldiv@bexp^0,w,c
 15243   003524  6E35               	movwf	(___fldiv@b+3)^0,c
 15244   003526  EF46  F019         	goto	l4266
 15245   00352A                     l1285:
 15246   00352A  0012               	return		;funcret
 15247   00352C                     __end_of___fldiv:
 15248                           	callstack 0
 15249                           
 15250                           	psect	rparam
 15251   000000                     
 15252                           	psect	idloc
 15253                           
 15254                           ;Config register IDLOC0 @ 0x200000
 15255                           ;	unspecified, using default values
 15256   200000                     	org	2097152
 15257   200000  0FFF               	dw	4095
 15258                           
 15259                           ;Config register IDLOC1 @ 0x200002
 15260                           ;	unspecified, using default values
 15261   200002                     	org	2097154
 15262   200002  0FFF               	dw	4095
 15263                           
 15264                           ;Config register IDLOC2 @ 0x200004
 15265                           ;	unspecified, using default values
 15266   200004                     	org	2097156
 15267   200004  0FFF               	dw	4095
 15268                           
 15269                           ;Config register IDLOC3 @ 0x200006
 15270                           ;	unspecified, using default values
 15271   200006                     	org	2097158
 15272   200006  0FFF               	dw	4095
 15273                           
 15274                           ;Config register IDLOC4 @ 0x200008
 15275                           ;	unspecified, using default values
 15276   200008                     	org	2097160
 15277   200008  0FFF               	dw	4095
 15278                           
 15279                           ;Config register IDLOC5 @ 0x20000A
 15280                           ;	unspecified, using default values
 15281   20000A                     	org	2097162
 15282   20000A  0FFF               	dw	4095
 15283                           
 15284                           ;Config register IDLOC6 @ 0x20000C
 15285                           ;	unspecified, using default values
 15286   20000C                     	org	2097164
 15287   20000C  0FFF               	dw	4095
 15288                           
 15289                           ;Config register IDLOC7 @ 0x20000E
 15290                           ;	unspecified, using default values
 15291   20000E                     	org	2097166
 15292   20000E  0FFF               	dw	4095
 15293                           
 15294                           	psect	config
 15295                           
 15296                           ;Config register CONFIG1L @ 0x300000
 15297                           ;	External Oscillator mode Selection bits
 15298                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15299                           ;	Power-up default value for COSC bits
 15300                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15301   300000                     	org	3145728
 15302   300000  AA                 	db	170
 15303                           
 15304                           ;Config register CONFIG1H @ 0x300001
 15305                           ;	unspecified, using default values
 15306                           ;	Clock Out Enable bit
 15307                           ;	CLKOUTEN = 0x1, unprogrammed default
 15308                           ;	Clock Switch Enable bit
 15309                           ;	CSWEN = 0x1, unprogrammed default
 15310                           ;	Fail-Safe Clock Monitor Enable bit
 15311                           ;	FCMEN = 0x1, unprogrammed default
 15312   300001                     	org	3145729
 15313   300001  FF                 	db	255
 15314                           
 15315                           ;Config register CONFIG2L @ 0x300002
 15316                           ;	unspecified, using default values
 15317                           ;	Master Clear Enable bit
 15318                           ;	MCLRE = 0x1, unprogrammed default
 15319                           ;	Power-up Timer Enable bit
 15320                           ;	PWRTE = 0x1, unprogrammed default
 15321                           ;	Low-power BOR enable bit
 15322                           ;	LPBOREN = 0x1, unprogrammed default
 15323                           ;	Brown-out Reset Enable bits
 15324                           ;	BOREN = 0x3, unprogrammed default
 15325   300002                     	org	3145730
 15326   300002  FF                 	db	255
 15327                           
 15328                           ;Config register CONFIG2H @ 0x300003
 15329                           ;	unspecified, using default values
 15330                           ;	Brown Out Reset Voltage selection bits
 15331                           ;	BORV = 0x3, unprogrammed default
 15332                           ;	ZCD Disable bit
 15333                           ;	ZCD = 0x1, unprogrammed default
 15334                           ;	PPSLOCK bit One-Way Set Enable bit
 15335                           ;	PPS1WAY = 0x1, unprogrammed default
 15336                           ;	Stack Full/Underflow Reset Enable bit
 15337                           ;	STVREN = 0x1, unprogrammed default
 15338                           ;	Debugger Enable bit
 15339                           ;	DEBUG = 0x1, unprogrammed default
 15340                           ;	Extended Instruction Set Enable bit
 15341                           ;	XINST = 0x1, unprogrammed default
 15342   300003                     	org	3145731
 15343   300003  FF                 	db	255
 15344                           
 15345                           ;Config register CONFIG3L @ 0x300004
 15346                           ;	WDT Period Select bits
 15347                           ;	WDTCPS = 0x1F, unprogrammed default
 15348                           ;	WDT operating mode
 15349                           ;	WDTE = OFF, WDT Disabled
 15350   300004                     	org	3145732
 15351   300004  9F                 	db	159
 15352                           
 15353                           ;Config register CONFIG3H @ 0x300005
 15354                           ;	unspecified, using default values
 15355                           ;	WDT Window Select bits
 15356                           ;	WDTCWS = 0x7, unprogrammed default
 15357                           ;	WDT input clock selector
 15358                           ;	WDTCCS = 0x7, unprogrammed default
 15359   300005                     	org	3145733
 15360   300005  FF                 	db	255
 15361                           
 15362                           ;Config register CONFIG4L @ 0x300006
 15363                           ;	unspecified, using default values
 15364                           ;	Write Protection Block 0
 15365                           ;	WRT0 = 0x1, unprogrammed default
 15366                           ;	Write Protection Block 1
 15367                           ;	WRT1 = 0x1, unprogrammed default
 15368                           ;	Write Protection Block 2
 15369                           ;	WRT2 = 0x1, unprogrammed default
 15370                           ;	Write Protection Block 3
 15371                           ;	WRT3 = 0x1, unprogrammed default
 15372                           ;	Write Protection Block 3
 15373                           ;	WRT4 = 0x1, unprogrammed default
 15374                           ;	Write Protection Block 3
 15375                           ;	WRT5 = 0x1, unprogrammed default
 15376                           ;	Write Protection Block 3
 15377                           ;	WRT6 = 0x1, unprogrammed default
 15378                           ;	Write Protection Block 3
 15379                           ;	WRT7 = 0x1, unprogrammed default
 15380   300006                     	org	3145734
 15381   300006  FF                 	db	255
 15382                           
 15383                           ;Config register CONFIG4H @ 0x300007
 15384                           ;	unspecified, using default values
 15385                           ;	Configuration Register Write Protection bit
 15386                           ;	WRTC = 0x1, unprogrammed default
 15387                           ;	Boot Block Write Protection bit
 15388                           ;	WRTB = 0x1, unprogrammed default
 15389                           ;	Data EEPROM Write Protection bit
 15390                           ;	WRTD = 0x1, unprogrammed default
 15391                           ;	Scanner Enable bit
 15392                           ;	SCANE = 0x1, unprogrammed default
 15393                           ;	Low Voltage Programming Enable bit
 15394                           ;	LVP = 0x1, unprogrammed default
 15395   300007                     	org	3145735
 15396   300007  FF                 	db	255
 15397                           
 15398                           ;Config register CONFIG5L @ 0x300008
 15399                           ;	unspecified, using default values
 15400                           ;	UserNVM Program Memory Code Protection bit
 15401                           ;	CP = 0x1, unprogrammed default
 15402                           ;	DataNVM Memory Code Protection bit
 15403                           ;	CPD = 0x1, unprogrammed default
 15404   300008                     	org	3145736
 15405   300008  FF                 	db	255
 15406                           
 15407                           ;Config register CONFIG5H @ 0x300009
 15408                           ;	unspecified, using default values
 15409   300009                     	org	3145737
 15410   300009  FF                 	db	255
 15411                           
 15412                           ;Config register CONFIG6L @ 0x30000A
 15413                           ;	unspecified, using default values
 15414                           ;	Table Read Protection Block 0
 15415                           ;	EBTR0 = 0x1, unprogrammed default
 15416                           ;	Table Read Protection Block 1
 15417                           ;	EBTR1 = 0x1, unprogrammed default
 15418                           ;	Table Read Protection Block 2
 15419                           ;	EBTR2 = 0x1, unprogrammed default
 15420                           ;	Table Read Protection Block 3
 15421                           ;	EBTR3 = 0x1, unprogrammed default
 15422                           ;	Table Read Protection Block 4
 15423                           ;	EBTR4 = 0x1, unprogrammed default
 15424                           ;	Table Read Protection Block 5
 15425                           ;	EBTR5 = 0x1, unprogrammed default
 15426                           ;	Table Read Protection Block 6
 15427                           ;	EBTR6 = 0x1, unprogrammed default
 15428                           ;	Table Read Protection Block 7
 15429                           ;	EBTR7 = 0x1, unprogrammed default
 15430   30000A                     	org	3145738
 15431   30000A  FF                 	db	255
 15432                           
 15433                           ;Config register CONFIG6H @ 0x30000B
 15434                           ;	unspecified, using default values
 15435                           ;	Boot Block Table Read Protection bit
 15436                           ;	EBTRB = 0x1, unprogrammed default
 15437   30000B                     	org	3145739
 15438   30000B  FF                 	db	255
 15439                           tosu	equ	0xFFF
 15440                           tosh	equ	0xFFE
 15441                           tosl	equ	0xFFD
 15442                           stkptr	equ	0xFFC
 15443                           pclatu	equ	0xFFB
 15444                           pclath	equ	0xFFA
 15445                           pcl	equ	0xFF9
 15446                           tblptru	equ	0xFF8
 15447                           tblptrh	equ	0xFF7
 15448                           tblptrl	equ	0xFF6
 15449                           tablat	equ	0xFF5
 15450                           prodh	equ	0xFF4
 15451                           prodl	equ	0xFF3
 15452                           indf0	equ	0xFEF
 15453                           postinc0	equ	0xFEE
 15454                           postdec0	equ	0xFED
 15455                           preinc0	equ	0xFEC
 15456                           plusw0	equ	0xFEB
 15457                           fsr0h	equ	0xFEA
 15458                           fsr0l	equ	0xFE9
 15459                           wreg	equ	0xFE8
 15460                           indf1	equ	0xFE7
 15461                           postinc1	equ	0xFE6
 15462                           postdec1	equ	0xFE5
 15463                           preinc1	equ	0xFE4
 15464                           plusw1	equ	0xFE3
 15465                           fsr1h	equ	0xFE2
 15466                           fsr1l	equ	0xFE1
 15467                           bsr	equ	0xFE0
 15468                           indf2	equ	0xFDF
 15469                           postinc2	equ	0xFDE
 15470                           postdec2	equ	0xFDD
 15471                           preinc2	equ	0xFDC
 15472                           plusw2	equ	0xFDB
 15473                           fsr2h	equ	0xFDA
 15474                           fsr2l	equ	0xFD9
 15475                           status	equ	0xFD8

Data Sizes:
    Strings     88
    Constant    0
    Data        7
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    115     160
    BANK1           256    110     214
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[35]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[35]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[35]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2731$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[35]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2647$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2647$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  412277
                                            113 BANK0      2     2      0
                                              0 BANK1    110   110      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   36181
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159707
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24299
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6E      D6       7       83.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhllh      13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlllh      E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhllll      1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      60        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 16:01:29 2023

               _color_read_Red 5BB0                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B60                   ___fldiv@sign 0042                _color_read_Blue 5C50  
                           l51 5BAE                             l60 5C9E                             l45 5A6A  
                           l54 5BFE                             l63 5764                             l48 60E6  
                           l57 5C4E                             l66 3858                             l76 1934  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 42D0  
             _color_read_Green 5C00                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6124                            l140 6052                            l212 613C  
                          l143 6054                            l152 6152                            l161 5E96  
                          l209 6128                            l146 607A                            l218 6028  
                          l155 615C                            l411 2816                            l149 6166  
                          l158 6148                            l256 6172                            l600 4344  
                          l521 53C4                            l505 5288                            l513 51EA  
                          l601 43B8                            l610 44AE                            l602 4428  
                          l603 43F0                            l419 28A4                            l540 5FDE  
                          l700 5FC2                            l703 60C6                            l543 5FF8  
                          l552 5872                            l608 4444                            l561 58CC  
                          l537 5326                            l529 50A2                            l609 4494  
                          l546 5CEC                            l570 5F52                            l491 4956  
                          l555 5818                            l484 544C                            l549 5D3A  
                          l573 5706                            l389 2414                            l582 59C6  
                          l558 57BE                            l662 3E16                            l830 4ABA  
                          l567 5F14                            l591 4F42                            l576 5ABC  
                          l656 3E16                            l497 554C                            l585 5A18  
                          l817 47EA                            l594 4FF8                            l579 5B0E  
                          l691 6106                            l588 54CE                            l668 3E3E  
                          l597 445E                            l694 60A0                            l598 42EE  
                          l697 5FAC                            l962 514C                            l973 4CC4  
                          l968 4C7E                            l977 5F8A                            _abs 5E98  
                          _pad 554E                            _rel 01B0                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
                         l1000 4BC0                Colour_decider@i 007A                           l1201 563A  
                         ?_abs 0013                           l1231 2A96                           l1240 2D66  
                         l1232 2A84                           l1321 3190                           l1233 2A4A  
                         l1324 3022                           l1317 2E2C                           l1413 5570  
                         l1334 3152                           l1326 309A                           l1422 3ECC  
                         l1327 3088                           l1248 2BB0                           l4000 2AC8  
                         l1424 3ED4                           l1257 2C80                           l1273 5DCC  
                         l1361 4662                           l1417 55C6                           l1425 3F1A  
                         l1290 334E                           l1258 2C6E                           l4010 2B04  
                         l4002 2AD8                           l1194 5632                           l1450 1CC8  
                         l4020 2B4A                           l4012 2B12                           l4004 2AE6  
                         l1372 45FA                           l4100 55E2                           l1532 5ECE  
                         l1436 40BC                           l1452 1B0E                           l1285 352A  
                         l1365 459E                           l1541 42CE                           l1517 5922  
                         l1381 5974                           l4030 2BC6                           l4022 2B7E  
                         l4014 2B14                           l4006 2AF4                           l1358 4506  
                         l4110 561C                           l4102 55EA                           l1287 338A  
                         l1535 5ED6                           l1527 4DC2                           l1447 232E  
                         l1296 33D0                           l4040 2C02                           l4032 2BD6  
                         l4024 2B80                           l4016 2B1E                           l4008 2B00  
                         l4112 5624                           l4104 55F2                           l4200 49DA  
                         l4120 5E1E                           l1544 4212                           l1552 5690  
                         l5000 222C                           l1480 2110                           l1561 5B5E  
                         l1298 3448                           l4050 2C2E                           l4042 2C04  
                         l4026 2B90                           l4018 2B24                           l4114 5626  
                         l4106 5600                           l4130 485C                           l4210 4A52  
                         l4202 49E2                           l4122 5E30                           l5010 227A  
                         l5002 2234                           l1299 3436                           l1555 56A0  
                         l4300 3376                           l4060 2C66                           l4044 2C12  
                         l4036 2BEA                           l4052 2C30                           l4028 2BA0  
                         l4116 562C                           l4108 5606                           l4140 4916  
                         l4132 4870                           l4212 4A64                           l4204 49F6  
                         l4124 5E34                           l5020 22F0                           l5012 228A  
                         l5004 2238                           l5100 38A2                           l1573 4E8C  
                         l1581 5E54                           l4310 33B6                           l4302 3378  
                         l4230 31BE                           l4222 3192                           l4070 2CE4  
                         l4046 2C1A                           l4038 2BF4                           l4054 2C3E  
                         l4134 4874                           l4126 47EC                           l5030 6162  
                         l4150 469A                           l4142 4664                           l4206 4A04  
                         l4214 4A6A                           l4118 5E12                           l1590 5E10  
                         l5022 2306                           l5014 22BA                           l5006 2256  
                         l5102 38B2                           l1495 3B5E                           l4320 33F2  
                         l4312 33C0                           l4304 3388                           l4240 31F8  
                         l4232 31CE                           l4224 319E                           l4400 2E60  
                         l4080 2D2A                           l4064 2C90                           l4072 2CE6  
                         l4056 2C42                           l4048 2C1E                           l4136 48B6  
                         l4128 4808                           l5032 6140                           l5040 614A  
                         l5200 5C00                           l4160 46F6                           l4152 46A8  
                         l4144 4668                           l4216 4A7A                           l4208 4A32  
                         l1584 6170                           l5024 230E                           l5016 22C8  
                         l5008 2272                           l5120 39AE                           l5112 3978  
                         l5104 38D2                           l6000 281A                           l4330 3464  
                         l4322 3400                           l4314 33CE                           l4306 339A  
                         l4250 3224                           l4242 31FE                           l4234 31DE  
                         l4226 31AC                           l4410 2EB0                           l4402 2E6C  
                         l4090 2D54                           l4082 2D38                           l4074 2CF6  
                         l4066 2C9C                           l4058 2C50                           l4138 48D2  
                         l5034 6144                           l5050 5E6C                           l5042 614E  
                         l5202 5C46                           l4170 4760                           l4162 46FE  
                         l4154 46C8                           l4146 4676                           l4218 4A9A  
                         l5018 22E0                           l5130 3A40                           l5114 3988  
                         l5106 38F2                           l6002 2836                           l4340 34D0  
                         l4332 3472                           l4324 342E                           l4308 33B0  
                         l4316 33E0                           l4260 325E                           l4252 3234  
                         l4244 3204                           l4236 31E0                           l4228 31AE  
                         l4500 50E2                           l4420 2EF2                           l4412 2EBC  
                         l4404 2E76                           l4092 2D56                           l4084 2D3E  
                         l4076 2D06                           l4068 2CAA                           l5028 615E  
                         l5036 6154                           l5220 56A2                           l5060 5F98  
                         l5052 5E92                           l5044 5E58                           l5212 6128  
                         l4180 47AA                           l4172 4780                           l4164 4712  
                         l4156 46CC                           l4148 4696                           l5116 399E  
                         l5124 39B6                           l5108 3948                           l5300 58DA  
                         l6004 2884                           l4350 351E                           l4342 34EA  
                         l4334 349C                           l4318 33EE                           l4262 3274  
                         l4254 3244                           l4246 3212                           l4238 31E8  
                         l4502 5110                           l4430 2F54                           l4422 2EFE  
                         l4414 2EC8                           l4406 2E8C                           l4086 2D40  
                         l4078 2D26                           l5070 5CD4                           l5038 6158  
                         l5310 5A1E                           l5222 5F16                           l5062 5FA8  
                         l5230 5036                           l5054 5E94                           l5046 5E5C  
                         l5206 5C50                           l5214 6138                           l4182 47CA  
                         l4174 4782                           l4166 4720                           l4158 46D8  
                         l4190 496A                           l5134 3A74                           l5118 39A6  
                         l5126 39E8                           l5150 3B32                           l5302 58F8  
                         l6006 2890                           l4352 3520                           l4344 3506  
                         l4328 3458                           l4336 34A0                           l4280 32C8  
                         l4264 3284                           l4272 32A4                           l4256 3246  
                         l4248 3214                           l4504 5120                           l4520 4C3E  
                         l4512 4BC2                           l4440 2FEA                           l4432 2F60  
                         l4424 2F0E                           l4416 2ED6                           l4408 2E98  
                         l4360 2D68                           l4088 2D46                           l5400 11C4  
                         l4096 55C8                           l5080 581A                           l5072 5CEE  
                         l5064 5CA0                           l5320 5A56                           l5312 5A28  
                         l5224 59C8                           l5216 5ED8                           l5240 5096  
                         l5232 5042                           l5048 5E64                           l5208 5C96  
                         l4176 4794                           l4168 4732                           l4192 498A  
                         l4600 5E98                           l5144 3AF0                           l5136 3A9E  
                         l5128 3A0C                           l5304 5918                           l4346 350A  
                         l4338 34BA                           l4290 331A                           l4282 32E2  
                         l4274 32B4                           l4266 328C                           l4258 324E  
                         l4506 5144                           l4530 4CC2                           l4522 4C4C  
                         l4514 4BF0                           l4450 3040                           l4442 3008  
                         l4434 2F7C                           l4426 2F28                           l4418 2EE2  
                         l4370 2DA4                           l4362 2D74                           l5402 11D6  
                         l5410 1382                           l4098 55D0                           l5082 582E  
                         l5242 57C0                           l5074 5D02                           l5066 5CB4  
                         l5330 5A60                           l5322 5A58                           l5314 5A38  
                         l5218 5976                           l5090 5792                           l5250 4F44  
                         l5058 5F8C                           l5234 504E                           l5226 4FFA  
                         l4178 479A                           l4194 498E                           l4186 4958  
                         l4602 5EB2                           l4610 4D4C                           l5138 3ABE  
                         l5146 3B20                           l4348 3518                           l4292 332A  
                         l4284 32F2                           l4276 32B4                           l4268 3290  
                         l4508 514A                           l4524 4C5E                           l4516 4C00  
                         l4460 30AA                           l4452 3044                           l4444 3012  
                         l4436 2FA6                           l4428 2F38                           l4380 2DD6  
                         l4372 2DB4                           l4364 2D82                           l3900 28C4  
                         l5260 452C                           l5252 44B2                           l5500 179A  
                         l5412 13B4                           l5420 13F2                           l5404 1252  
                         l4700 5504                           l5084 5846                           l5244 57D4  
                         l5076 5D0E                           l5068 5CC0                           l5180 603C  
                         l5332 5A62                           l5324 5A5A                           l5316 5A42  
                         l5308 5A1A                           l5228 501E                           l5236 5066  
                         l5340 5708                           l4196 499C                           l4188 495C  
                         l4612 4D58                           l4604 4CC6                           l5092 385A  
                         l4294 333E                           l4286 3302                           l4526 4C6C  
                         l4518 4C2E                           l4470 310C                           l4462 30B6  
                         l4454 3052                           l4446 3020                           l4438 2FDC  
                         l4390 2E16                           l4382 2DE4                           l4374 2DBA  
                         l4366 2D84                           l3902 28D4                           l3910 28FE  
                         l5270 4586                           l5254 44C2                           l5502 17CC  
                         l5510 1802                           l5422 1424                           l5430 1462  
                         l5414 13E6                           l5406 12AE                           l4702 551C  
                         l5246 57EC                           l4710 5228                           l5078 5D22  
                         l5182 603E                           l5174 602A                           l5334 5A64  
                         l5326 5A5C                           l5318 5A4C                           l5350 36F4  
                         l5342 352C                           l5086 5766                           l5238 507E  
                         l5190 5BA6                           l4198 49BC                           l4534 5F54  
                         l4550 4B10                           l4542 4ABC                           l4622 4DBA  
                         l4606 4CE6                           l4630 563C                           l6150 3A88  
                         l5094 3882                           ?_pad 0011                           l4296 334C  
                         l4288 3312                           l4528 4CBC                           l4480 3174  
                         l4472 3120                           l4464 30C4                           l4456 3080  
                         l4448 3032                           l4392 2E1C                           l4384 2DE6  
                         l4376 2DCA                           l4368 2D94                           l3920 292E  
                         l3912 290E                           l3904 28E4                           l5280 45EA  
                         l5272 4588                           l5264 4540                           l5256 44D0  
                         l5512 1834                           l5432 1494                           l5424 1456  
                         l5408 132A                           l5360 0E90                           l4704 5534  
                         l4712 5234                           l4720 514E                           l5184 6040  
                         l5176 6034                           l5336 5A66                           l5328 5A5E  
                         l5352 378C                           l5344 35F8                           l5088 577A  
                         l5248 4E8E                           l5600 544A                           l4800 408C  
                         l4536 5F6A                           l4552 4B12                           l4544 4AD2  
                         l4608 4D24                           l4616 4D64                           l4640 4148  
                         l4632 565A                           l6152 3B12                           l5096 3890  
                         l4298 3358                           l4482 3176                           l4474 313A  
                         l4466 30EE                           l4394 2E3C                           l4386 2DF6  
                         l4378 2DD0                           l3930 296E                           l3922 293C  
                         l3914 2914                           l3906 28F4                           l4490 5D88  
                         l5290 4642                           l5282 4608                           l5274 4594  
                         l5266 4548                           l5258 4516                           l5514 1866  
                         l5434 14C6                           l5362 0EC0                           l4714 5240  
                         l4706 51EC                           l5602 60E8                           l4722 5172  
                         l4730 51BA                           l5178 603A                           l5186 60CA  
                         l5338 5A68                           l5354 37C0                           l5346 362C  
                         l5194 5BB0                           l4802 409C                           l4538 5F7A  
                         l4554 4B22                           l4618 4D76                           l4642 4156  
                         l4650 4236                           l4634 40BE                           l4626 5DCE  
                         l4810 194C                           l5098 389E                           l5610 42D0  
                         l4476 3156                           l4484 317C                           l4468 30F2  
                         l4396 2E4C                           l4388 2E06                           l3940 29A8  
                         l3932 2970                           l3924 293E                           l3916 2926  
                         l3908 28F6                           l4492 5D98                           l5292 4650  
                         l5284 460A                           l5276 45D0                           l5268 4554  
                         l5532 1920                           l5516 18A0                           l5524 18DE  
                         l5460 15F8                           l5452 1588                           l5436 1500  
                         l5444 153E                           l5380 1012                           l5372 0F32  
                         l5364 0EF4                           l5356 0E5A                           l4740 52D2  
                         l4708 5210                           l4716 5258                           l5604 60F0  
                         l4732 51D2                           l4724 518A                           l5348 36C0  
                         l5700 3BBE                           l5540 6108                           l5196 5BF6  
                         l5188 5B60                           l4580 4BA0                           l4564 4B4C  
                         l4556 4B26                           l4548 4AE6                           l4652 4272  
                         l4636 40DE                           l4628 5DDE                           l4900 1CF4  
                         l4820 1994                           l4812 195A                           l6148 39CA  
                         l5620 4398                           l5612 42D2                           l4486 3180  
                         l4478 3166                           l3950 29BC                           l3942 29AC  
                         l3926 294E                           l3934 2978                           l3918 2928  
                         l5294 4652                           l5286 460E                           l5278 45DC  
                         l5470 1678                           l5446 157C                           l5382 1044  
                         l5374 0F84                           l5366 0F28                           l5358 0E84  
                         l4742 52DE                           l4734 528A                           l4750 5FC8  
                         l4718 5270                           l5606 60FA                           l4726 5196  
                         l5710 3C92                           l5702 3BE6                           l5550 6122  
                         l5542 6112                           l4590 5568                           l4582 4BB0  
                         l4574 4B74                           l4566 4B56                           l4558 4B34  
                         l4654 4286                           l4646 41C6                           l4638 4134  
                         l4670 5B40                           l4662 5B10                           l4910 1D38  
                         l4902 1CFC                           l4822 19A4                           l4830 19CC  
                         l4814 195E                           l4806 1936                           l5630 43D2  
                         l5622 43B0                           l5614 42F0                           l4496 50A4  
                         l3960 29D0                           l3952 29C0                           l3944 29B0  
                         l3936 2988                           l3928 295E                           l5288 4632  
                         l5536 192C                           l5480 1690                           l5456 1594  
                         l5392 10C8                           l5384 104A                           l5376 0FB6  
                         l4680 534C                           l4736 52AE                           l4744 52F6  
                         l4752 5FD8                           l5608 6104                           l4728 51A2  
                         l5720 3D6A                           l5712 3CBE                           l5704 3C12  
                         l5544 6114                           l5552 5FFA                           l3880 4DF2  
                         l4592 557C                           l4760 3E84                           l4576 4B80  
                         l4568 4B60                           l4656 42AE                           l4648 4202  
                         l4664 5B24                           l4672 5B44                           l4920 1D7E  
                         l4912 1D4A                           l4904 1D00                           l4840 1A16  
                         l4832 19F2                           l4824 19B4                           l4816 1982  
                         l4808 193C                           l5640 4422                           l5632 43EA  
                         l5624 43B2                           l5616 4346                           l5800 235C  
                         l4498 50D2                           l3970 29E4                           l3962 29D4  
                         l3954 29C4                           l3946 29B4                           l3938 299A  
                         l5482 16C2                           l5458 15C6                           l5394 10DC  
                         l5386 1066                           l5378 0FBE                           l3890 60BE  
                         l4690 53AC                           l4682 5364                           l4746 530E  
                         l4738 52C6                           l4674 6054                           l5650 607C  
                         l5730 3E34                           l5722 3D94                           l5714 3CE8  
                         l5706 3C3C                           l5546 611E                           l5554 5FFE  
                         l3882 4E10                           l3874 4DC4                           l4594 5590  
                         l4586 554E                           l4770 3EF2                           l4762 3EA4  
                         l4754 3E40                           l4578 4B90                           l4658 42BE  
                         l4666 5B30                           l4930 1E92                           l4922 1DE2  
                         l4906 1D12                           l4914 1D52                           l4850 1A7E  
                         l4842 1A2E                           l4834 1A04                           l4826 19C0  
                         l4818 198C                           l5298 58CE                           l5634 43FE  
                         l5626 43C6                           l5618 4394                           l5642 4428  
                         l5810 2366                           l5802 235E                           l3980 2A42  
                         l3964 29D8                           l3956 29C8                           l3948 29B8  
                         l3972 29E8                           l5484 16F4                           l5476 1684  
                         l5468 163A                           l5396 117C                           l5388 10BC  
                         l4684 5370                           l4692 54D0                           l5660 58A0  
                         l4748 5FC4                           l4676 6064                           l5652 607E  
                         l5724 3DC0                           l5716 3D14                           l5708 3C68  
                         l5580 53DE                           l5572 53C6                           l5548 6120  
                         l5556 600C                           l3884 4E46                           l3876 4DD6  
                         l4596 5594                           l4588 555C                           l4780 3F2C  
                         l4772 3F02                           l4764 3EC0                           l4756 3E60  
                         l4668 5B34                           l4940 1F50                           l4932 1EC6  
                         l4924 1E3A                           l4916 1D5A                           l4908 1D20  
                         l4852 1A90                           l4844 1A38                           l4836 1A08  
                         l4828 19C8                           l5644 4436                           l5636 4408  
                         l5628 43D0                           l5900 24FA                           l5820 2370  
                         l5812 2368                           l5804 2360                           l3990 2A78  
                         l3982 2A58                           l3974 29EC                           l3966 29DC  
                         l3958 29CC                           l3894 28A8                           l5398 118C  
                         l4686 537C                           l4678 5328                           l4694 54D4  
                         l5670 54A2                           l5662 544E                           l5654 6084  
                         l5726 3DEA                           l5718 3D3E                           l5590 5428  
                         l5582 53F4                           l5574 53D8                           l5558 6010  
                         l3878 4DE8                           l4598 55B2                           l4782 3F32  
                         l4790 4024                           l4774 3F0E                           l4766 3EDC  
                         l4758 3E74                           l4950 2024                           l4942 1F60  
                         l4934 1EF8                           l4926 1E6E                           l4918 1D6A  
                         l4854 1A94                           l4838 1A0E                           l5646 4446  
                         l5638 440A                           l5910 2548                           l5902 2516  
                         l5830 237A                           l5822 2372                           l5814 236A  
                         l5806 2362                           l3992 2A82                           l3984 2A64  
                         l3976 2A16                           l3968 29E0                           l3896 28B4  
                         l5496 1736                           l3888 60A2                           l4688 5394  
                         l4696 54EC                           l5656 5874                           l5664 5462  
                         l5728 3E2A                           l5592 5432                           l5584 53F8  
                         l5576 53DA                           l4792 403E                           l4784 3FB4  
                         l4776 3F16                           l4768 3EEC                           l4960 205A  
                         l4952 2038                           l4944 1F94                           l4936 1F0E  
                         l4928 1E74                           l4880 1BC8                           l4872 1B1E  
                         l4856 1A9A                           l4848 1A58                           l5680 5962  
                         l5672 5924                           l5648 4496                           l5920 25DE  
                         l5904 2530                           l5912 255C                           l5840 238C  
                         l5832 237C                           l5824 2374                           l5816 236C  
                         l5808 2364                           l3994 2AA4                           l3986 2A68  
                         l3978 2A32                           l3898 28C2                           l5498 1768  
                         l4698 54F8                           l5658 5888                           l5666 547A  
                         l5690 3B74                           l5594 5434                           l5586 541C  
                         l5578 53DC                           l4794 405C                           l4786 3FBA  
                         l4778 3F22                           l4970 2122                           l4962 2062  
                         l4946 1FEA                           l4954 203C                           l4938 1F40  
                         l4882 1C06                           l4874 1B24                           l4858 1AA2  
                         l4866 1ABE                           l5674 5936                           l5930 261A  
                         l5922 25EA                           l5914 257A                           l5906 2538  
                         l5850 23AC                           l5842 2394                           l5834 237E  
                         l5826 2376                           l5818 236E                           l3996 2AB4  
                         l3988 2A76                           l5668 548E                           l5684 5A6C  
                         l5692 3B76                           l5596 543E                           l5588 5426  
                         l4796 4076                           l4788 3FC0                           l4980 2152  
                         l4972 2130                           l4964 206E                           l4956 204C  
                         l4948 1FF0                           l4884 1C1A                           l4892 1C96  
                         l4876 1B58                           l4868 1AD8                           l5676 593E  
                         l5940 2660                           l5924 25FE                           l5932 2630  
                         l5916 2582                           l5908 2540                           l5860 23D0  
                         l5852 23B0                           l5844 239C                           l5836 2384  
                         l5828 2378                           l5780 2334                           l5686 5ABE  
                         l5694 3B7E                           l5598 5440                           l4798 4086  
                         l4990 2184                           l4982 2162                           l4974 2140  
                         l4966 20E6                           l4958 2054                           l4894 1CD0  
                         l4886 1C4E                           l4878 1B96                           l5678 5946  
                         l5950 26A6                           l5934 2644                           l5942 2676  
                         l5926 2612                           l5918 2588                           l5870 23F8  
                         l5862 23D8                           l5854 23B8                           l5846 23A4  
                         l5838 2388                           l5790 2350                           l5782 2338  
                         l5688 3B60                           l4992 2196                           l4984 2166  
                         l4976 2144                           l4968 2106                           l4896 1CE0  
                         l4888 1C56                           l5960 26EC                           l5944 268A  
                         l5952 26BC                           l5936 2658                           l5928 2616  
                         l5880 2442                           l5872 23FA                           l5864 23E0  
                         l5856 23C0                           l5848 23A8                           l5792 2352  
                         l5784 233C                           l5698 3B90                           l4994 219A  
                         l4986 216C                           l4978 214A                           l4898 1CEC  
                         l5970 2732                           l5954 26D0                           l5962 2702  
                         l5946 269E                           l5938 265C                           l5890 2498  
                         l5882 2456                           l5874 2422                           l5866 23E4  
                         l5858 23C8                           l5794 2354                           l5786 2340  
                         l5778 2330                           l4996 21A0                           l4988 2172  
                         l5980 2778                           l5964 2716                           l5972 2748  
                         l5956 26E4                           l5948 26A2                           l5892 249C  
                         l5884 2462                           l5876 243C                           l5868 23E4  
                         l5796 2356                           l5788 234C                           l4998 21F8  
                         l5990 27BE                           l5974 275C                           l5982 278E  
                         l5966 272A                           l5958 26E8                           l5894 24B0  
                         l5886 2476                           l5878 2442                           l5798 2358  
                         l5984 27A2                           l5992 27D4                           l5976 2770  
                         l5968 272E                           l5896 24C4                           l5888 2494  
                         l5994 27E8                           l5986 27B6                           l5978 2774  
                         l5898 24E0                           l5996 2800                           l5988 27BA  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E2E                           STR_3 0E51                           STR_6 0E55  
                         u3010 4DD6                           u3011 4DD2                           u3100 294E  
                         u3020 4DE8                           u3101 294A                           u3021 4DE4  
                         u3110 295E                           u3030 4E10                           u3111 295A  
                         u3031 4E0C                           u4000 30AA                           u3200 2AA4  
                         u3120 299A                           u3040 4E46                   _BAUD4CONbits 000EE9  
                         u4001 30A6                           u3201 2AA0                           u3121 2996  
                         u3041 4E42                           u4010 30C4                           u3210 2AB4  
                         u3130 29A8                           u3050 28C2                           u4011 30C0  
                         u3211 2AB0                           u3131 29A4                           u3051 28BE  
                         u4100 4C4C                           u4020 310C                           u3300 2C12  
                         u3220 2AE6                           u3140 2A16                           u3060 28D4  
                         u4101 4C48                           u4021 3108                           u3301 2C0E  
                         u3221 2AE2                           u3141 2A12                           u3061 28D0  
                         u4110 4C6C                           u4030 313A                           u3310 2C2E  
                         u3230 2AF4                           u3150 2A2E                           u3070 28E4  
                         u4111 4C68                           u4031 3136                           u3311 2C2A  
                         u3231 2AF0                           u3151 2A28                           u3071 28E0  
                         u4120 4CBC                           u4040 3174                           u3400 2D06  
                         u3320 2C3E                           u3240 2B12                           u3160 2A30  
                         u3080 2926                           u4200 4BA0                           u4121 4CB8  
                         u4041 3170                           u3401 2D02                           u3321 2C3A  
                         u3241 2B0E                           u3081 2922                           u4201 4B9C  
                         u4050 50D2                           u3410 2D26                           u3330 2C50  
                         u3250 2B4A                           u3170 2A58                           u3090 293C  
                         u5010 5FC2                           u4210 555C                           u4130 5F6A  
                         _T2PR 000FBC                           u4051 50CE                           u3411 2D22  
                         u3331 2C4C                           u3251 2B46                           u3171 2A54  
                         u3091 2938                           u5011 5FBE                           u4211 5558  
                         u4131 5F66                           u4060 5110                           u3420 2D38  
                         u3340 2C66                           u3260 2B90                           u3180 2A76  
                         u5100 44D0                           u3500 4676                           u4220 55B2  
                         u4140 4AD2                           u4300 4DB2                           u5020 3882  
                         u4061 510C                           u3421 2D34                           u3341 2C62  
                         u3261 2B8C                           u3181 2A72                           u5101 44CC  
                         u3501 4672                           u4221 55AE                           u4141 4ACE  
                         u5021 387E                           u4070 5144                           u3430 2D54  
                         u3350 2C7C                           u3270 2BC6                           u3190 2A96  
                         u5110 452C                           u3510 46A8                           u4230 5EB2  
                         u4150 4B06                           u4310 5E10                           u5030 38D2  
                         u4071 5140                           u3431 2D50                           u3351 2C78  
                         u3271 2BC2                           u3191 2A92                           u5111 4528  
                         u3511 46A4                           u4231 5EAE                           u4311 5E0C  
                         u5031 38CE                           u4080 4BF0                           u3360 2C90  
                         u3280 2BD6                           u5120 4582                           u3440 55E2  
                         u5008 5E82                           u3600 4A04                           u4160 4B34  
                         u4240 4D06                           u4400 4256                           u4320 565A  
                         u5040 38F2                           u4081 4BEC                           u3361 2C8C  
                         u3281 2BD2                           u5121 457E                           u5201 0E8A  
                         u3441 55DE                           u3521 46D2                           u3601 4A00  
                         u4161 4B30                           u4321 5656                           u5041 38EE  
                         u4090 4C2E                           u3370 2CAA                           u3290 2C02  
                         u5130 45CC                           u5210 0F84                           u3450 5600  
                         u3530 46F6                           u3610 4A32                           u4170 4B48  
                         u4250 4D24                           u4410 4272                           u4330 4106  
                         u5050 3A08                           u4091 4C2A                           u3371 2CA6  
                         u3291 2BFE                           u5131 45C8                           u5211 0F80  
                         u3451 55FC                           u3531 46F2                           u3611 4A2E  
                         u4171 4B44                           u4155 4AFC                           u4251 4D20  
                         u4411 426E                           u5051 3A04                           u3700 32B4  
                         u3380 2CE4                           u5140 45EA                           u5300 1424  
                         u5220 1012                           u3460 561C                           u4500 5270  
                         u5060 6138                           u3540 4720                           u3620 4A7A  
                         u4180 4B70                           u4260 4D4C                           u4420 42AE  
                         u4340 4134                           u3701 32B0                           u3381 2CE0  
                         u5141 45E6                           u5301 1420                           u5221 100E  
                         u3461 5618                           u4501 526C                           u5061 6134  
                         u3541 471C                           u3621 4A76                           u4181 4B6C  
                         u4261 4D48                           u4245 4CFC                           u4421 42AA  
                         u4405 424C                           u4341 4130                           u3710 332A  
                         u3630 31AC                           u3390 2CF6                           u5150 45FA  
                         u5310 1456                           u5230 1066                           u4510 5288  
                         u5070 507E                           u3550 4760                           u3470 5E54  
                         u4190 4B90                           u4270 4D76                           u4350 4156  
                         u4430 5B5E                           u3711 3326                           u3631 31A8  
                         u3391 2CF2                           u5151 45F6                           u5311 1452  
                         u5231 1062                           u4511 5284                           u5071 507A  
                         u3551 475C                           u3471 5E50                           u4191 4B8C  
                         u4271 4D72                           u4351 4152                           u4335 40FC  
                         u4431 5B5A                           u6007 2406                           u3800 3444  
                         u3720 334C                           u3640 31BE                           u5160 4608  
                         u5400 1678                           u5320 1494                           u5240 10BC  
                         u3480 4808                           u4520 51D2                           u4440 6064  
                         u5080 5096                           u3560 47AA                           u4600 3EC0  
                         u3801 3440                           u3721 3348                           u3641 31BA  
                         u5161 4604                           u5401 1674                           u5321 1490  
                         u5241 10B8                           u3481 4804                           u4521 51CE  
                         u4441 6060                           u5081 5092                           u3561 47A6  
                         u4601 3EBC                           u6017 242E                           u3810 3458  
                         u3730 3376                           u3650 31CE                           u5170 4642  
                         u5090 44C2                           u5410 16C2                           u5330 14C6  
                         u5250 10DC                           u3490 48D2                           u4530 51EA  
                         u4450 607A                           u3570 496A                           u4610 3EEC  
                         u4290 4DB0                           u4370 41C2                           u3811 3454  
                         u3731 3372                           u3651 31CA                           u5171 463E  
                         u5091 44BE                           u5411 16BE                           u5331 14C2  
                         u5251 10D8                           u3491 48CE                           u4531 51E6  
                         u4451 6076                           u3571 4966                           u4611 3EE8  
                         u4291 4DAA                           u4371 41BE                           u6107 44A0  
                         u6027 24D0                           u3820 3472                           u3740 339A  
                         u3660 3212                           u3900 2DF6                           u5180 4650  
                         u5500 18A0                           u5420 16F4                           u5340 1500  
                         u5260 118C                           u4460 53AC                           u4540 530E  
                         u3580 499C                           u4620 3F02                           u4380 41E6  
                         u4700 19F2                           u3821 346E                           u3741 3396  
                         u3661 320E                           u3901 2DF2                           u5181 464C  
                         u5501 189C                           u5421 16F0                           u5341 14FC  
                         u5261 1188                           u4461 53A8                           u4541 530A  
                         u6117 5058                           u3581 4998                           u4621 3EFE  
                         u4285 4D88                           u4365 416A                           u4701 19EE  
                         u6037 24EC                           u3830 34BA                           u3750 33B0  
                         u3670 3224                           u3910 2E06                           u5510 18DA  
                         u5430 1732                           u5350 153A                           u5270 11D6  
                         u4470 53C4                           u4550 5326                           u3590 49DA  
                         u4630 403E                           u4390 4202                           u4366 4174  
                         u4710 1A04                           u5190 5918                           u3831 34B6  
                         u3751 33AC                           u3671 3220                           u3911 2E02  
                         u5511 18D6                           u5431 172E                           u5351 1536  
                         u5271 11D2                           u4471 53C0                           u4551 5322  
                         u6207 5D2C                           u6127 5F9E                           u3591 49D6  
                         u4631 403A                           u4391 41FE                           u4367 4184  
                         u4711 1A00                           u5191 5914                           u6047 42DC  
                         u3840 34EA                           u3760 33CE                           u3680 3234  
                         u3920 2E3C                           u5520 191C                           u5440 1768  
                         u5360 157C                           u5280 13B4                           u4480 5534  
                         u4560 5FF8                           u4640 405C                           u4800 1CE0  
                         u4720 1A7E                           u5600 43C6                           u3841 34E6  
                         u3761 33CA                           u3681 3230                           u3921 2E38  
                         u5521 1918                           u5441 1764                           u5361 1578  
                         u5281 13B0                           u4481 5530                           u4561 5FF4  
                         u6217 524A                           u6137 5784                           u4641 4058  
                         u4385 41DC                           u4801 1CDC                           u4721 1A7A  
                         u5601 43C2                           u6057 4350                           u3850 3518  
                         u3770 33EE                           u3690 3274                           u3930 2E4C  
                         u5450 179A                           u5370 15C6                           u5290 13E6  
                         u4490 554C                           u5530 6028                           u4650 4076  
                         u4570 3E70                           u4810 1D12                           u4730 1A90  
                         u5610 43FE                           u3851 3514                           u3771 33EA  
                         u3691 3270                           u3931 2E48                           u5451 1796  
                         u5371 15C2                           u5291 13E2                           u4491 5548  
                         u6307 550E                           u6227 5FCE                           u6147 57B0  
                         u5531 6024                           u4651 4072                           u4571 3E6A  
                         u4811 1D0E                           u4731 1A8C                           u5611 43FA  
                         u6067 43A2                           u3780 3400                           u3940 2FC6  
                         u3860 2D82                           u5460 17CC                           u5380 15F8  
                         u5700 3C92                           u4660 4086                           u4580 3E72  
                         u4900 20E6                           u4820 1D20                           u4740 1B0A  
                         u5620 4436                           u3781 33FC                           u3861 2D7E  
                         u5461 17C8                           u5381 15F4                           u6317 5386  
                         u6237 57DE                           u6157 5A2E                           u5701 3C8E  
                         u4661 4082                           u4901 20E2                           u4821 1D1C  
                         u4741 1B06                           u5621 4432                           u6077 43DC  
                         u3790 342E                           u3950 3020                           u3870 2D94  
                         u5470 17FE                           u5390 1636                           u5710 3CE8  
                         u4590 3E84                           u4910 2122                           u4830 1D4A  
                         u4750 1B96                           u4670 195A                           u5630 4444  
                         u3791 342A                           u3951 301C                           u3871 2D90  
                         u5471 17FA                           u5391 1632                           u6247 580A  
                         u6167 5CDE                           u5711 3CE4                           u4591 3E80  
                         u4911 211E                           u4831 1D46                           u4751 1B92  
                         u4671 1956                           u5631 4440                           u6087 4414  
                         u3960 3040                           u3880 2DA4                           u5480 1834  
                         u5720 3D3E                           u4920 2130                           u4840 1E92  
                         u4760 1BC8                           u4680 19A4                           u5640 446E  
                         u5800 2422                           u3961 303C                           u3945 2FBC  
                         u3881 2DA0                           u5481 1830                           u6257 5838  
                         u6177 51AC                           u5721 3D3A                           u4921 212C  
                         u4841 1E8E                           u4761 1BC4                           u4681 19A0  
                         u5641 4468                           u6097 4450                           u5801 241E  
                         u3970 3052                           u3890 2DE4                           u5490 1866  
                         u5730 3D94                           u4930 2184                           u4850 1EF8  
                         u4770 1C06                           u4690 19B4                           u5650 4482  
                         u5642 4470                           u5570 436E                           u5810 2494  
                         u3971 304E                           u3891 2DE0                           u5491 1862  
                         u6267 5864                           u6187 546C                           u5731 3D90  
                         u4931 2180                           u4851 1EF4                           u4771 1C02  
                         u4691 19B0                           u5651 447C                           u5571 4368  
                         u5811 2490                           u3980 3080                           u5740 3DEA  
                         u4940 2256                           u4860 1F40                           u4780 1C92  
                         u5660 4494                           u5652 4484                           u5580 4382  
                         u5572 4370                           u5900 27A2                           u5820 2530  
                         u3981 307C                           u6277 52E8                           u6197 54AC  
                         u5741 3DE6                           u4941 2252                           u4861 1F3C  
                         u4781 1C8E                           u5661 4490                           u5581 437C  
                         u5901 279E                           u5821 252C                           u3990 3096  
                         u5670 3B8C                           u4950 2272                           u4870 1F50  
                         u4790 1CC8                           u5590 4394                           u5582 4384  
                         u5910 27E8                           u5830 257A                           u3991 3092  
                         u6287 5892                           u5671 3B88                           u4951 226E  
                         u4871 1F4C                           u4791 1CC4                           u5591 4390  
                         u5911 27E4                           u5831 2576                           u5680 3BE6  
                         u4960 22DA                           u4880 1FEA                           u5920 2812  
                         u5840 25FE                           u6297 58BE                           u5681 3BE2  
                         u4961 22D4                           u4881 1FE6                           u5921 280E  
                         u5841 25FA                           u5690 3C3C                           u4970 22DC  
                         u4890 2038                           u5930 28A4                           u5850 2644  
                         u5691 3C38                           u4891 2034                           u5931 28A0  
                         u5851 2640                           u4980 22F0                           u5860 268A  
                         u4981 22EC                           u5861 2686                           u4990 5E80  
                         u5870 26D0                           u4991 5E78                           u5871 26CC  
                         u5880 2716                           u5881 2712                           u5890 275C  
                         u5891 2758                  _LightBlueMove 59C8                           abs@a 0013  
                         _dbuf 02A0                           _labs 563C                           _main 2330  
                         _dtoa 3E40                           _prec 00F1                           _vals 01CE  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 54D0  
                ___fpclassifyf 4CC6                           prodh 000FF4                           prodl 000FF3  
                         start 0000                ___fldiv@new_exp 0043         __end_of_color_read_Red 5C00  
       __end_of_color_read_lum 5BB0                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F16                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5CA0  
              _RunOneBlockTime 00F9                  ___fltol@sign1 0009                __end_of___aodiv 47EC  
                        ?_labs 0001                __end_of___fladd 2D68                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4ABC                __end_of___fldiv 352C  
              __end_of___flneg 5F8C                __end_of___flmul 3192                __end_of___flsub 5DCE  
              __end_of___fltol 4BC2                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 563C                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3E40        __end_of_sendCharSerial4 613E  
   __end_of_I2C_2_Master_Start 6168     __end_of_I2C_2_Master_Write 614A                   YellowMove@mL 0020  
                        _flags 00F5                   YellowMove@mR 0022                          _fputc 4DC4  
                        _fputs 5E12                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00FD                          _width 00EF  
                        _putch 6170                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          status 000FD8                __end_of_sprintf 5976  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 5CA0          _I2C_2_Master_RepStart 614A  
             __end_of_BlueMove 5708                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 5D3C  
      __end_of_turnCalibration 44B0                _reverseOneBlock 57C0                   __end_of_labs 56A2  
                 __end_of_main 28A8                   __end_of_dtoa 40BE                   __end_of_stop 554E  
              _colour_rel$3160 0064                _colour_rel$3161 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 4F44  
             __end_of_PinkMove 5B10                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         _RG6PPS 000E88  
     __end_of_color_click_init 5A6C                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 5976               __end_of___xxtofl 4664                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE  
                ??_ReversePink 0024                         ___flge 4BC2                         ___fleq 50A4  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 60A2              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 003A                      ??___flneg 0005                      ??___flmul 0019  
                    ??___flsub 0032                      ??___fltol 0005                         _efgtoa 1936  
                    ??___lwdiv 000B                         _floorf 40BE                         _memcpy 5B10  
                       clear_0 5D62                         clear_1 5D6E                         clear_2 5D7A  
                       _motorL 01C5                         _motorR 01BC                         isa$std 000001  
                    ??_go_Home 0028                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5DCE                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 5924  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 005F               __end_of_turnLeft 528A                     ___flge@ff1 002A  
                   _YellowMove 5A6C                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 5D82  
      __end_of_reverseOneBlock 581A                     ___flneg@f1 0001       __end_of_color_read_Green 5C50  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 6172                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 528A                   __pidataBANK0 6168  
                __end_of_fputc 4E8E                  __end_of_fputs 5E56                  __end_of_putch 6172  
            __end_of_GreenMove 5F54            __end_of_Timer0_init 6108            __end_of_ReversePink 4FFA  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14357 016E          __end_of_reverseDetect 5874                        ??_putch 0001  
                   __pbssBANK0 00D3                     __pbssBANK1 016E                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 5874                     _getTMR0val 607C              __end_of_RetryMove 54D0  
                    ?_PinkMove 0020              _color_writetoaddr 60C8                     _delayed_ms 5F8C  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001              __end_of_TurnDelay 5FFA  
        __end_of_timed_forward 50A4            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 352C        __end_of_Interrupts_init 6174  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 0168  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 60E8  
                      _RedMove 5ED8             _I2C_2_Master_Start 615E                     ??_PinkMove 0024  
                   _initUSART4 6108             _I2C_2_Master_Write 613E                        __Hparam 0000  
                      _WayBack 017E                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 60E8                    RetryMove@mL 0020                    RetryMove@mR 0022  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4F44                        ___aodiv 4664                        ___fladd 28A8  
                      ___aomod 4958                        ___fldiv 3192                        ___flneg 5F54  
                      ___flmul 2D68                        ___flsub 5D88                        ___fltol 4ABC  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 55C8            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 5D3C                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3B60                        __ptext0 2330  
                      __ptext1 42D0                        __ptext2 5924                        __ptext3 58CE  
                      __ptext4 385A                        __ptext5 1936                        __ptext6 5DCE  
                      __ptext7 5B10                        __ptext8 563C                        __ptext9 40BE  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F8  
            color_read_lum@tmp 000A                        main@buf 0100                        _sprintf 5924  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5D82  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 017A                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3B60                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00FB                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 53C6  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 51EC                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 016A  
                 _EUSART4RXbuf 00D3                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5CEE  
               __end_of___flge 4CC6                 __end_of___fleq 514E                 _fullSpeedAhead 5328  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 60C8                 __end_of_efgtoa 2330                 __end_of_floorf 42D0  
               __end_of_memcpy 5B60                     floorf@F526 00E7       __end_of_Forwardhalfblock 58CE  
                    _GreenMove 5F16                 __end_of_strcpy 5E12            start_initialization 5D3C  
                  __end_of_abs 5ED8                    __end_of_pad 55C8                  _TxBufWriteCnt 005F  
        __end_of_LightBlueMove 5A1A                   ??_OrangeMove 0024          __end_of___fpclassifyf 4DC4  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 544E                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 53C6                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 544E                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F9  
              _ForwardOneBlock 5766                       ??_floorf 004F                       ??_memcpy 0007  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4E8E                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 59C8                      ___flmul@a 0015                      ___flmul@b 0011  
                  __pbssCOMRAM 005F                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5FC4                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
             ___aodiv@dividend 0001                   ??_YellowMove 0024          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2790 006F               ___lwdiv@dividend 0007  
                    _dtoa$2759 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3162 0060  
                     ?___lwdiv 0007                main@colour_1291 0166                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 5ABE  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              timed_forward@time 0018  
          __end_of_readColours 5766              _I2C_2_Master_Idle 6054              _I2C_2_Master_Init 602A  
            _I2C_2_Master_Read 5E56              _I2C_2_Master_Stop 6154                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F7             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 5FFA  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 57C0                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 00F3  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E5A            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 385A      __end_of_I2C_2_Master_Idle 607C  
    __end_of_I2C_2_Master_Init 6054      __end_of_I2C_2_Master_Read 5E98              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 615E                   setMotorPWM@m 000E                       _DataFlag 00FF  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024              ??_color_read_Blue 0007  
           __end_of_getTMR0val 60A2                   _TxBufReadCnt 00F6                       _BlueMove 56A2  
                    _turnRight 514E             __end_of_delayed_ms 5FC4                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 5D50      __end_of_sendStringSerial4 602A  
                 ??_colour_rel 004F                  _reverseDetect 581A  __end_of_I2C_2_Master_RepStart 6154  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 4958                   ??_initUSART4 0001  
                     _PinkMove 5ABE                       __Hrparam 0000         __end_of_Colour_decider 1936  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 5328                    ??_RetryMove 0024  
         TurnDelay@Turn45Delay 0001                    _readColours 5708                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 385A                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00EB  
                   _ANSELFbits 000EB4                  _timed_forward 4FFA                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 44B0                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 6126                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4CC6  
                     __ptext11 4ABC                       __ptext20 4664                       __ptext12 5F54  
                     __ptext21 5FFA                       __ptext13 3E40                       __ptext30 6108  
                     __ptext22 6126                       __ptext14 554E                       __ptext31 53C6  
                     __ptext23 5708                       __ptext15 5E12                       __ptext40 59C8  
                     __ptext32 3B60                       __ptext24 5B60                       __ptext16 4DC4  
                     __ptext41 5F16                       __ptext33 4FFA                       __ptext25 5BB0  
                     __ptext17 6170                       __ptext50 6054                       __ptext42 56A2  
                     __ptext34 5F8C                       __ptext26 5C00                       __ptext18 5E98  
                     __ptext51 602A                       __ptext43 607C                       __ptext35 4E8E  
                     __ptext27 5C50                       __ptext19 4958                       __ptext60 5FC4  
                     __ptext52 5A6C                       __ptext44 352C                       __ptext36 4F44  
                     __ptext28 614A                       __ptext61 57C0                       __ptext53 5CA0  
                     __ptext45 5A1A                       __ptext37 5766                       __ptext29 5E56  
                     __ptext70 55C8                       __ptext62 581A                       __ptext54 514E  
                     __ptext46 60C8                       __ptext38 5ED8                       __ptext71 0E5A  
                     __ptext63 528A                       __ptext55 60E8                       __ptext47 613E  
                     __ptext39 5976                       __ptext72 44B0                       __ptext64 6172  
                     __ptext56 544E                       __ptext48 6154                       __ptext73 5D88  
                     __ptext65 5874                       __ptext57 5ABE                       __ptext49 615E  
                     __ptext74 28A8                       __ptext66 54D0                       __ptext58 5CEE  
                     __ptext75 2D68                       __ptext67 5328                       __ptext59 51EC  
                     __ptext76 4BC2                       __ptext68 47EC                       __ptext77 50A4  
                     __ptext69 60A2                       __ptext78 3192                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       _vfprintf 58CE  
                     _run_flag 017C                  ??_turnRight45 001E                       main@temp 0164  
                     _turnLeft 51EC               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                main@prev_colour 016C  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 47EC  
                turnRight45@mL 001A                  turnRight45@mR 001C                      sprintf@ap 00C4  
             ??_fullSpeedAhead 0018                      strcpy@src 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5A1A                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5CEE  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5D3C                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 6126                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
