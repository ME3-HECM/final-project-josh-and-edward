

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 11:31:22 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   003FC0                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _high_threshold
   116   003FC0  03E8               	dw	1000
   117                           
   118                           ;initializer for _DataFlag
   119   003FC2  01                 	db	1
   120   000000                     _TX4REG	set	3812
   121   000000                     _RC4STAbits	set	3815
   122   000000                     _SP4BRGH	set	3814
   123   000000                     _SSP2CON2bits	set	3802
   124   000000                     _INT1PPS	set	3569
   125   000000                     _RX4PPS	set	3605
   126   000000                     _SSP2CLKPPS	set	3612
   127   000000                     _SSP2DATPPS	set	3613
   128   000000                     _ANSELDbits	set	3751
   129   000000                     _SSP2ADD	set	3798
   130   000000                     _SSP2CON1bits	set	3801
   131   000000                     _RC4REG	set	3811
   132   000000                     _SP4BRGL	set	3813
   133   000000                     _TX4STAbits	set	3816
   134   000000                     _BAUD4CONbits	set	3817
   135   000000                     _SSP2CON2	set	3802
   136   000000                     _TRISDbits	set	3972
   137   000000                     _SSP2STAT	set	3800
   138   000000                     _TRISFbits	set	3974
   139   000000                     _TRISGbits	set	3975
   140   000000                     _INTCONbits	set	4082
   141   000000                     _SSP2BUF	set	3797
   142   000000                     _IPR0bits	set	3615
   143   000000                     _PIE0bits	set	3625
   144   000000                     _PIE4bits	set	3629
   145   000000                     _PIR4bits	set	3639
   146   000000                     _RC0PPS	set	3682
   147   000000                     _RD5PPS	set	3695
   148   000000                     _ANSELBbits	set	3738
   149   000000                     _RD6PPS	set	3696
   150   000000                     _LATAbits	set	3961
   151   000000                     _LATDbits	set	3964
   152   000000                     _TRISBbits	set	3970
   153   000000                     _PIR0bits	set	3635
   154   000000                     _PIE2bits	set	3627
   155   000000                     _LATFbits	set	3966
   156   000000                     _LATGbits	set	3967
   157   000000                     _TRISAbits	set	3969
   158                           
   159                           	psect	smallconst
   160   000E00                     __psmallconst:
   161                           	callstack 0
   162   000E00  00                 	db	0
   163   000E01                     STR_1:
   164                           
   165                           ; BSR set to: 14
   166   000E01  72                 	db	114	;'r'
   167   000E02  65                 	db	101	;'e'
   168   000E03  64                 	db	100	;'d'
   169   000E04  3D                 	db	61	;'='
   170   000E05  25                 	db	37
   171   000E06  66                 	db	102	;'f'
   172   000E07  20                 	db	32
   173   000E08  67                 	db	103	;'g'
   174   000E09  72                 	db	114	;'r'
   175   000E0A  65                 	db	101	;'e'
   176   000E0B  65                 	db	101	;'e'
   177   000E0C  6E                 	db	110	;'n'
   178   000E0D  3D                 	db	61	;'='
   179   000E0E  25                 	db	37
   180   000E0F  66                 	db	102	;'f'
   181   000E10  20                 	db	32
   182   000E11  62                 	db	98	;'b'
   183   000E12  6C                 	db	108	;'l'
   184   000E13  75                 	db	117	;'u'
   185   000E14  65                 	db	101	;'e'
   186   000E15  3D                 	db	61	;'='
   187   000E16  25                 	db	37
   188   000E17  66                 	db	102	;'f'
   189   000E18  20                 	db	32
   190   000E19  6C                 	db	108	;'l'
   191   000E1A  75                 	db	117	;'u'
   192   000E1B  6D                 	db	109	;'m'
   193   000E1C  3D                 	db	61	;'='
   194   000E1D  25                 	db	37
   195   000E1E  64                 	db	100	;'d'
   196   000E1F  0D                 	db	13
   197   000E20  0A                 	db	10
   198   000E21  00                 	db	0
   199   000E22                     STR_2:
   200                           
   201                           ; BSR set to: 14
   202   000E22  69                 	db	105	;'i'
   203   000E23  6E                 	db	110	;'n'
   204   000E24  66                 	db	102	;'f'
   205   000E25  00                 	db	0
   206   000E26                     STR_5:
   207                           
   208                           ; BSR set to: 14
   209   000E26  6E                 	db	110	;'n'
   210   000E27  61                 	db	97	;'a'
   211   000E28  6E                 	db	110	;'n'
   212   000E29  00                 	db	0
   213   000E2A  00                 	db	0	; dummy byte at the end
   214   000000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218   003BC6                     __pcinit:
   219                           	callstack 0
   220   003BC6                     start_initialization:
   221                           	callstack 0
   222   003BC6                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Initialize objects allocated to BANK0 (3 bytes)
   226                           ; load TBLPTR registers with __pidataBANK0
   227   003BC6  0EC0               	movlw	low __pidataBANK0
   228   003BC8  6EF6               	movwf	tblptrl,c
   229   003BCA  0E3F               	movlw	high __pidataBANK0
   230   003BCC  6EF7               	movwf	tblptrh,c
   231   003BCE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   232   003BD0  6EF8               	movwf	tblptru,c
   233   003BD2  0009               	tblrd		*+	;fetch initializer
   234   003BD4  CFF5 F0F9          	movff	tablat,__pdataBANK0
   235   003BD8  0009               	tblrd		*+	;fetch initializer
   236   003BDA  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
   237   003BDE  0009               	tblrd		*+	;fetch initializer
   238   003BE0  CFF5 F0FB          	movff	tablat,__pdataBANK0+2
   239                           
   240                           ; Clear objects allocated to BANK1 (176 bytes)
   241   003BE4  EE01  F000         	lfsr	0,__pbssBANK1
   242   003BE8  0EB0               	movlw	176
   243   003BEA                     clear_0:
   244   003BEA  6AEE               	clrf	postinc0,c
   245   003BEC  06E8               	decf	wreg,f,c
   246   003BEE  E1FD               	bnz	clear_0
   247                           
   248                           ; Clear objects allocated to BANK0 (20 bytes)
   249   003BF0  EE00  F0E5         	lfsr	0,__pbssBANK0
   250   003BF4  0E14               	movlw	20
   251   003BF6                     clear_1:
   252   003BF6  6AEE               	clrf	postinc0,c
   253   003BF8  06E8               	decf	wreg,f,c
   254   003BFA  E1FD               	bnz	clear_1
   255                           
   256                           ; Clear objects allocated to COMRAM (7 bytes)
   257   003BFC  EE00  F056         	lfsr	0,__pbssCOMRAM
   258   003C00  0E07               	movlw	7
   259   003C02                     clear_2:
   260   003C02  6AEE               	clrf	postinc0,c
   261   003C04  06E8               	decf	wreg,f,c
   262   003C06  E1FD               	bnz	clear_2
   263   003C08                     end_of_initialization:
   264                           	callstack 0
   265   003C08                     __end_of__initialization:
   266                           	callstack 0
   267   003C08  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268   003C0A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269   003C0C  0100               	movlb	0
   270   003C0E  EF35  F019         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMRAM
   273   000056                     __pbssCOMRAM:
   274                           	callstack 0
   275   000056                     _prec:
   276                           	callstack 0
   277   000056                     	ds	2
   278   000058                     _flags:
   279                           	callstack 0
   280   000058                     	ds	1
   281   000059                     _TxBufReadCnt:
   282                           	callstack 0
   283   000059                     	ds	1
   284   00005A                     _TxBufWriteCnt:
   285                           	callstack 0
   286   00005A                     	ds	1
   287   00005B                     _RxBufReadCnt:
   288                           	callstack 0
   289   00005B                     	ds	1
   290   00005C                     _RxBufWriteCnt:
   291                           	callstack 0
   292   00005C                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295   0000E5                     __pbssBANK0:
   296                           	callstack 0
   297   0000E5                     floorf@F526:
   298                           	callstack 0
   299   0000E5                     	ds	4
   300   0000E9                     ___fpclassifyf@F465:
   301                           	callstack 0
   302   0000E9                     	ds	4
   303   0000ED                     _width:
   304                           	callstack 0
   305   0000ED                     	ds	2
   306   0000EF                     _low_threshold:
   307                           	callstack 0
   308   0000EF                     	ds	2
   309   0000F1                     _vals:
   310                           	callstack 0
   311   0000F1                     	ds	8
   312                           
   313                           	psect	dataBANK0
   314   0000F9                     __pdataBANK0:
   315                           	callstack 0
   316   0000F9                     _high_threshold:
   317                           	callstack 0
   318   0000F9                     	ds	2
   319   0000FB                     _DataFlag:
   320                           	callstack 0
   321   0000FB                     	ds	1
   322                           
   323                           	psect	bssBANK1
   324   000100                     __pbssBANK1:
   325                           	callstack 0
   326   000100                     _EUSART4TXbuf:
   327                           	callstack 0
   328   000100                     	ds	60
   329   00013C                     _EUSART4RXbuf:
   330                           	callstack 0
   331   00013C                     	ds	20
   332   000150                     _dbuf:
   333                           	callstack 0
   334   000150                     	ds	80
   335   0001A0                     _rel:
   336                           	callstack 0
   337   0001A0                     	ds	16
   338                           
   339                           	psect	cstackBANK0
   340   000060                     __pcstackBANK0:
   341                           	callstack 0
   342   000060                     efgtoa@ne:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x0
   346   000060                     	ds	2
   347   000062                     efgtoa@p:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x2
   351   000062                     	ds	2
   352   000064                     efgtoa@t:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x4
   356   000064                     	ds	2
   357   000066                     _efgtoa$1698:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x6
   361   000066                     	ds	2
   362   000068                     efgtoa@pp:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x8
   366   000068                     	ds	1
   367   000069                     efgtoa@mode:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x9
   371   000069                     	ds	1
   372   00006A                     efgtoa@nmode:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xA
   376   00006A                     	ds	1
   377   00006B                     efgtoa@d:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xB
   381   00006B                     	ds	2
   382   00006D                     efgtoa@m:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xD
   386   00006D                     	ds	2
   387   00006F                     efgtoa@e:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0xF
   391   00006F                     	ds	2
   392   000071                     efgtoa@w:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x11
   396   000071                     	ds	2
   397   000073                     efgtoa@ou:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x13
   401   000073                     	ds	4
   402   000077                     efgtoa@i:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x17
   406   000077                     	ds	2
   407   000079                     efgtoa@h:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x19
   411   000079                     	ds	4
   412   00007D                     efgtoa@l:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x1D
   416   00007D                     	ds	4
   417   000081                     efgtoa@sign:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x21
   421   000081                     	ds	1
   422   000082                     efgtoa@n:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x22
   426   000082                     	ds	2
   427   000084                     efgtoa@g:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x24
   431   000084                     	ds	4
   432   000088                     efgtoa@u:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x28
   436   000088                     	ds	4
   437   00008C                     ?_vfprintf:
   438                           	callstack 0
   439   00008C                     vfprintf@fp:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x2C
   443   00008C                     	ds	2
   444   00008E                     vfprintf@fmt:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x2E
   448   00008E                     	ds	2
   449   000090                     vfprintf@ap:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x30
   453   000090                     	ds	2
   454   000092                     ?_sprintf:
   455                           	callstack 0
   456   000092                     sprintf@s:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x32
   460   000092                     	ds	2
   461   000094                     sprintf@fmt:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x34
   465   000094                     	ds	16
   466   0000A4                     sprintf@ap:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x44
   470   0000A4                     	ds	2
   471   0000A6                     sprintf@f:
   472                           	callstack 0
   473                           
   474                           ; 11 bytes @ 0x46
   475   0000A6                     	ds	11
   476   0000B1                     ??_main:
   477                           
   478                           ; 1 bytes @ 0x51
   479   0000B1                     	ds	2
   480   0000B3                     main@buf:
   481                           	callstack 0
   482                           
   483                           ; 50 bytes @ 0x53
   484   0000B3                     	ds	50
   485                           
   486                           	psect	cstackCOMRAM
   487   000001                     __pcstackCOMRAM:
   488                           	callstack 0
   489   000001                     ??i2_I2C_2_Master_Idle:
   490   000001                     
   491                           ; 1 bytes @ 0x0
   492   000001                     	ds	1
   493   000002                     i2I2C_2_Master_Write@data_byte:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x1
   497   000002                     	ds	1
   498   000003                     ??_I2C_2_Master_Idle:
   499   000003                     ?___fpclassifyf:
   500                           	callstack 0
   501   000003                     ?___fladd:
   502                           	callstack 0
   503   000003                     ?___fldiv:
   504                           	callstack 0
   505   000003                     ?___flmul:
   506                           	callstack 0
   507   000003                     ?_labs:
   508                           	callstack 0
   509   000003                     ?___flneg:
   510                           	callstack 0
   511   000003                     ?___fltol:
   512                           	callstack 0
   513   000003                     ?___xxtofl:
   514                           	callstack 0
   515   000003                     ?___aodiv:
   516                           	callstack 0
   517   000003                     ?___aomod:
   518                           	callstack 0
   519   000003                     putCharToTxBuf@byte:
   520                           	callstack 0
   521   000003                     memcpy@d1:
   522                           	callstack 0
   523   000003                     fputc@c:
   524                           	callstack 0
   525   000003                     strcpy@dest:
   526                           	callstack 0
   527   000003                     ___fleq@ff1:
   528                           	callstack 0
   529   000003                     ___flneg@f1:
   530                           	callstack 0
   531   000003                     ___fltol@f1:
   532                           	callstack 0
   533   000003                     ___fladd@b:
   534                           	callstack 0
   535   000003                     ___fldiv@b:
   536                           	callstack 0
   537   000003                     ___flmul@b:
   538                           	callstack 0
   539   000003                     ___xxtofl@val:
   540                           	callstack 0
   541   000003                     ___fpclassifyf@x:
   542                           	callstack 0
   543   000003                     labs@a:
   544                           	callstack 0
   545   000003                     ___aodiv@dividend:
   546                           	callstack 0
   547   000003                     ___aomod@dividend:
   548                           	callstack 0
   549                           
   550                           ; 8 bytes @ 0x2
   551   000003                     	ds	1
   552   000004                     ??_I2C_2_Master_Read:
   553   000004                     I2C_2_Master_Write@data_byte:
   554                           	callstack 0
   555   000004                     TxBufferedString@string:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x3
   559   000004                     	ds	1
   560   000005                     color_writetoaddr@value:
   561                           	callstack 0
   562   000005                     I2C_2_Master_Read@ack:
   563                           	callstack 0
   564   000005                     memcpy@s1:
   565                           	callstack 0
   566   000005                     fputc@fp:
   567                           	callstack 0
   568   000005                     strcpy@src:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x4
   572   000005                     	ds	1
   573   000006                     color_writetoaddr@address:
   574                           	callstack 0
   575   000006                     I2C_2_Master_Read@tmp:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x5
   579   000006                     	ds	1
   580   000007                     ??_colour_interrupt_init:
   581   000007                     ??_fputc:
   582   000007                     ??___fpclassifyf:
   583   000007                     ??_labs:
   584   000007                     ??_color_click_init:
   585   000007                     ??___fltol:
   586   000007                     ??___xxtofl:
   587   000007                     ?_color_read_lum:
   588                           	callstack 0
   589   000007                     ?_color_read_Red:
   590                           	callstack 0
   591   000007                     ?_color_read_Green:
   592                           	callstack 0
   593   000007                     ?_color_read_Blue:
   594                           	callstack 0
   595   000007                     memcpy@n:
   596                           	callstack 0
   597   000007                     strcpy@s:
   598                           	callstack 0
   599   000007                     ___fleq@ff2:
   600                           	callstack 0
   601   000007                     ___fladd@a:
   602                           	callstack 0
   603   000007                     ___fldiv@a:
   604                           	callstack 0
   605   000007                     ___flmul@a:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x6
   609   000007                     	ds	1
   610   000008                     
   611                           ; 1 bytes @ 0x7
   612   000008                     	ds	1
   613   000009                     ??_color_read_lum:
   614   000009                     ??_color_read_Red:
   615   000009                     ??_color_read_Green:
   616   000009                     ??_color_read_Blue:
   617   000009                     memcpy@d:
   618                           	callstack 0
   619   000009                     strcpy@d:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x8
   623   000009                     	ds	2
   624   00000B                     ??___fladd:
   625   00000B                     ??___fldiv:
   626   00000B                     ??___flmul:
   627   00000B                     ??___fleq:
   628   00000B                     ___fltol@sign1:
   629                           	callstack 0
   630   00000B                     ___xxtofl@sign:
   631                           	callstack 0
   632   00000B                     ___fpclassifyf@e:
   633                           	callstack 0
   634   00000B                     memcpy@s:
   635                           	callstack 0
   636   00000B                     ___aodiv@divisor:
   637                           	callstack 0
   638   00000B                     ___aomod@divisor:
   639                           	callstack 0
   640                           
   641                           ; 8 bytes @ 0xA
   642   00000B                     	ds	1
   643   00000C                     ___fltol@exp1:
   644                           	callstack 0
   645   00000C                     ___xxtofl@exp:
   646                           	callstack 0
   647   00000C                     color_read_lum@tmp:
   648                           	callstack 0
   649   00000C                     color_read_Red@tmp:
   650                           	callstack 0
   651   00000C                     color_read_Green@tmp:
   652                           	callstack 0
   653   00000C                     color_read_Blue@tmp:
   654                           	callstack 0
   655   00000C                     fputs@s:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xB
   659   00000C                     	ds	1
   660   00000D                     memcpy@tmp:
   661                           	callstack 0
   662   00000D                     ___xxtofl@arg:
   663                           	callstack 0
   664   00000D                     ___fpclassifyf@u:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0xC
   668   00000D                     	ds	1
   669   00000E                     readColours@vals:
   670                           	callstack 0
   671   00000E                     fputs@fp:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xD
   675   00000E                     	ds	1
   676   00000F                     ___fladd@signs:
   677                           	callstack 0
   678   00000F                     ___flmul@sign:
   679                           	callstack 0
   680   00000F                     ___fldiv@rem:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0xE
   684   00000F                     	ds	1
   685   000010                     ___fladd@aexp:
   686                           	callstack 0
   687   000010                     fputs@c:
   688                           	callstack 0
   689   000010                     ___flmul@grs:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0xF
   693   000010                     	ds	1
   694   000011                     ___fladd@bexp:
   695                           	callstack 0
   696   000011                     fputs@i:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x10
   700   000011                     	ds	1
   701   000012                     ___fladd@grs:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x11
   705   000012                     	ds	1
   706   000013                     ___aodiv@counter:
   707                           	callstack 0
   708   000013                     ___aomod@counter:
   709                           	callstack 0
   710   000013                     ___fldiv@sign:
   711                           	callstack 0
   712   000013                     pad@fp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x12
   716   000013                     	ds	1
   717   000014                     ___aodiv@sign:
   718                           	callstack 0
   719   000014                     ___aomod@sign:
   720                           	callstack 0
   721   000014                     ___flmul@aexp:
   722                           	callstack 0
   723   000014                     ___fldiv@new_exp:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x13
   727   000014                     	ds	1
   728   000015                     ?_abs:
   729                           	callstack 0
   730   000015                     ___flmul@bexp:
   731                           	callstack 0
   732   000015                     pad@buf:
   733                           	callstack 0
   734   000015                     abs@a:
   735                           	callstack 0
   736   000015                     ___aodiv@quotient:
   737                           	callstack 0
   738                           
   739                           ; 8 bytes @ 0x14
   740   000015                     	ds	1
   741   000016                     ___fldiv@grs:
   742                           	callstack 0
   743   000016                     ___flmul@prod:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x15
   747   000016                     	ds	1
   748   000017                     ??_abs:
   749   000017                     pad@p:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x16
   753   000017                     	ds	2
   754   000019                     ??_pad:
   755                           
   756                           ; 1 bytes @ 0x18
   757   000019                     	ds	1
   758   00001A                     ___fldiv@bexp:
   759                           	callstack 0
   760   00001A                     ___flmul@temp:
   761                           	callstack 0
   762   00001A                     pad@i:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x19
   766   00001A                     	ds	1
   767   00001B                     ___fldiv@aexp:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x1A
   771   00001B                     	ds	1
   772   00001C                     ?___flsub:
   773                           	callstack 0
   774   00001C                     ?_floorf:
   775                           	callstack 0
   776   00001C                     colour_rel@vals:
   777                           	callstack 0
   778   00001C                     pad@w:
   779                           	callstack 0
   780   00001C                     ___flge@ff1:
   781                           	callstack 0
   782   00001C                     ___flsub@b:
   783                           	callstack 0
   784   00001C                     floorf@x:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x1B
   788   00001C                     	ds	2
   789   00001E                     colour_rel@rel:
   790                           	callstack 0
   791   00001E                     dtoa@fp:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x1D
   795   00001E                     	ds	2
   796   000020                     ??_floorf:
   797   000020                     colour_rel@R:
   798                           	callstack 0
   799   000020                     ___flge@ff2:
   800                           	callstack 0
   801   000020                     ___flsub@a:
   802                           	callstack 0
   803   000020                     dtoa@d:
   804                           	callstack 0
   805                           
   806                           ; 8 bytes @ 0x1F
   807   000020                     	ds	4
   808   000024                     ??___flge:
   809   000024                     colour_rel@G:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x23
   813   000024                     	ds	2
   814   000026                     floorf@m:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x25
   818   000026                     	ds	2
   819   000028                     ??_dtoa:
   820   000028                     colour_rel@B:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x27
   824   000028                     	ds	2
   825   00002A                     floorf@e:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x29
   829   00002A                     	ds	2
   830   00002C                     colour_rel@L:
   831                           	callstack 0
   832   00002C                     floorf@u:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x2B
   836   00002C                     	ds	4
   837   000030                     _dtoa$1667:
   838                           	callstack 0
   839   000030                     efgtoa@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x2F
   843   000030                     	ds	2
   844   000032                     dtoa@p:
   845                           	callstack 0
   846   000032                     efgtoa@f:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x31
   850   000032                     	ds	2
   851   000034                     dtoa@w:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x33
   855   000034                     	ds	2
   856   000036                     efgtoa@c:
   857                           	callstack 0
   858   000036                     dtoa@n:
   859                           	callstack 0
   860                           
   861                           ; 8 bytes @ 0x35
   862   000036                     	ds	1
   863   000037                     ??_efgtoa:
   864                           
   865                           ; 1 bytes @ 0x36
   866   000037                     	ds	7
   867   00003E                     dtoa@i:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x3D
   871   00003E                     	ds	2
   872   000040                     dtoa@s:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x3F
   876   000040                     	ds	1
   877   000041                     vfpfcnvrt@fp:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x40
   881   000041                     	ds	2
   882   000043                     vfpfcnvrt@fmt:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x42
   886   000043                     	ds	2
   887   000045                     vfpfcnvrt@ap:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x44
   891   000045                     	ds	2
   892   000047                     ??_vfpfcnvrt:
   893                           
   894                           ; 1 bytes @ 0x46
   895   000047                     	ds	2
   896   000049                     vfpfcnvrt@convarg:
   897                           	callstack 0
   898                           
   899                           ; 8 bytes @ 0x48
   900   000049                     	ds	8
   901   000051                     vfpfcnvrt@c:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x50
   905   000051                     	ds	1
   906   000052                     vfpfcnvrt@cp:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x51
   910   000052                     	ds	2
   911   000054                     vfprintf@cfmt:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x53
   915   000054                     	ds	2
   916   000056                     
   917                           ; 1 bytes @ 0x55
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 28 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  buf            50   83[BANK0 ] unsigned char [50]
   928 ;;  ADC             2    0        unsigned int 
   929 ;;  frac_part       2    0        unsigned int 
   930 ;;  int_part        2    0        unsigned int 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   941 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;Total ram usage:       52 bytes
   945 ;; Hardware stack levels required when called: 12
   946 ;; This function calls:
   947 ;;		_I2C_2_Master_Init
   948 ;;		_Interrupts_init
   949 ;;		_TxBufferedString
   950 ;;		_color_click_init
   951 ;;		_color_writetoaddr
   952 ;;		_colour_rel
   953 ;;		_initUSART4
   954 ;;		_readColours
   955 ;;		_sendTxBuf
   956 ;;		_sprintf
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text0
   963   00326A                     __ptext0:
   964                           	callstack 0
   965   00326A                     _main:
   966                           	callstack 19
   967   00326A                     
   968                           ;main.c: 29:     initUSART4();
   969   00326A  EC8A  F01F         	call	_initUSART4	;wreg free
   970   00326E                     
   971                           ;main.c: 30:     Interrupts_init();
   972   00326E  EC3E  F01F         	call	_Interrupts_init	;wreg free
   973   003272                     
   974                           ;main.c: 31:     color_click_init();
   975   003272  ECCD  F01E         	call	_color_click_init	;wreg free
   976                           
   977                           ;main.c: 32:     I2C_2_Master_Init();
   978   003276  EC14  F01F         	call	_I2C_2_Master_Init	;wreg free
   979   00327A                     
   980                           ;main.c: 33:     char buf[50];;main.c: 34:     unsigned int int_part;;main.c: 35:     un
      +                          signed int frac_part;;main.c: 36:     unsigned int ADC;;main.c: 45:     color_writetoadd
      +                          r(0x00, 0x01);
   981   00327A  0E01               	movlw	1
   982   00327C  6E05               	movwf	color_writetoaddr@value^0,c
   983   00327E  0E00               	movlw	0
   984   003280  EC7A  F01F         	call	_color_writetoaddr
   985   003284                     
   986                           ;main.c: 55:     TRISGbits.TRISG1=0;
   987   003284  9287               	bcf	135,1,c	;volatile
   988   003286                     
   989                           ;main.c: 56:     TRISAbits.TRISA4=0;
   990   003286  9881               	bcf	129,4,c	;volatile
   991   003288                     
   992                           ;main.c: 57:     TRISFbits.TRISF7=0;
   993   003288  9E86               	bcf	134,7,c	;volatile
   994   00328A                     
   995                           ;main.c: 58:     TRISDbits.TRISD7=0;
   996   00328A  9E84               	bcf	132,7,c	;volatile
   997   00328C                     
   998                           ;main.c: 60:     LATDbits.LATD7=1;
   999   00328C  8E7C               	bsf	124,7,c	;volatile
  1000   00328E                     
  1001                           ;main.c: 62:     LATGbits.LATG1=0;
  1002   00328E  927F               	bcf	127,1,c	;volatile
  1003   003290                     
  1004                           ;main.c: 63:     LATAbits.LATA4=0;
  1005   003290  9879               	bcf	121,4,c	;volatile
  1006   003292                     
  1007                           ;main.c: 65:     LATFbits.LATF7=0;
  1008   003292  9E7E               	bcf	126,7,c	;volatile
  1009   003294                     
  1010                           ;main.c: 67:     LATGbits.LATG1=1;
  1011   003294  827F               	bsf	127,1,c	;volatile
  1012   003296                     
  1013                           ;main.c: 68:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1014   003296  0E52               	movlw	82
  1015   003298  0100               	movlb	0	; () banked
  1016   00329A  6FB2               	movwf	(??_main+1)& (0+255),b
  1017   00329C  0E2B               	movlw	43
  1018   00329E  6FB1               	movwf	??_main& (0+255),b
  1019   0032A0  0E00               	movlw	0
  1020   0032A2                     u4317:
  1021   0032A2  2EE8               	decfsz	wreg,f,c
  1022   0032A4  D7FE               	bra	u4317
  1023   0032A6  2FB1               	decfsz	??_main& (0+255),f,b
  1024   0032A8  D7FC               	bra	u4317
  1025   0032AA  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1026   0032AC  D7FA               	bra	u4317
  1027   0032AE  F000               	nop	
  1028   0032B0                     
  1029                           ;main.c: 69:     LATAbits.LATA4=1;
  1030   0032B0  8879               	bsf	121,4,c	;volatile
  1031   0032B2                     
  1032                           ;main.c: 70:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1033   0032B2  0E52               	movlw	82
  1034   0032B4  0100               	movlb	0	; () banked
  1035   0032B6  6FB2               	movwf	(??_main+1)& (0+255),b
  1036   0032B8  0E2B               	movlw	43
  1037   0032BA  6FB1               	movwf	??_main& (0+255),b
  1038   0032BC  0E00               	movlw	0
  1039   0032BE                     u4327:
  1040   0032BE  2EE8               	decfsz	wreg,f,c
  1041   0032C0  D7FE               	bra	u4327
  1042   0032C2  2FB1               	decfsz	??_main& (0+255),f,b
  1043   0032C4  D7FC               	bra	u4327
  1044   0032C6  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1045   0032C8  D7FA               	bra	u4327
  1046   0032CA  F000               	nop	
  1047   0032CC                     
  1048                           ;main.c: 71:     LATFbits.LATF7=1;
  1049   0032CC  8E7E               	bsf	126,7,c	;volatile
  1050   0032CE                     
  1051                           ;main.c: 72:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1052   0032CE  0E52               	movlw	82
  1053   0032D0  0100               	movlb	0	; () banked
  1054   0032D2  6FB2               	movwf	(??_main+1)& (0+255),b
  1055   0032D4  0E2B               	movlw	43
  1056   0032D6  6FB1               	movwf	??_main& (0+255),b
  1057   0032D8  0E00               	movlw	0
  1058   0032DA                     u4337:
  1059   0032DA  2EE8               	decfsz	wreg,f,c
  1060   0032DC  D7FE               	bra	u4337
  1061   0032DE  2FB1               	decfsz	??_main& (0+255),f,b
  1062   0032E0  D7FC               	bra	u4337
  1063   0032E2  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1064   0032E4  D7FA               	bra	u4337
  1065   0032E6  F000               	nop	
  1066   0032E8                     l4398:
  1067                           
  1068                           ;main.c: 76:     {;main.c: 84:     readColours(&vals);
  1069   0032E8  0EF1               	movlw	low _vals
  1070   0032EA  6E0E               	movwf	readColours@vals^0,c
  1071   0032EC  0E00               	movlw	high _vals
  1072   0032EE  6E0F               	movwf	(readColours@vals+1)^0,c
  1073   0032F0  EC70  F01C         	call	_readColours	;wreg free
  1074   0032F4                     
  1075                           ;main.c: 85:     colour_rel(&vals, &rel);
  1076   0032F4  0EF1               	movlw	low _vals
  1077   0032F6  6E1C               	movwf	colour_rel@vals^0,c
  1078   0032F8  0E00               	movlw	high _vals
  1079   0032FA  6E1D               	movwf	(colour_rel@vals+1)^0,c
  1080   0032FC  0EA0               	movlw	low _rel
  1081   0032FE  6E1E               	movwf	colour_rel@rel^0,c
  1082   003300  0E01               	movlw	high _rel
  1083   003302  6E1F               	movwf	(colour_rel@rel+1)^0,c
  1084   003304  ECFA  F016         	call	_colour_rel	;wreg free
  1085   003308                     
  1086                           ;main.c: 87:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
  1087   003308  0EB3               	movlw	low main@buf
  1088   00330A  0100               	movlb	0	; () banked
  1089   00330C  6F92               	movwf	sprintf@s& (0+255),b
  1090   00330E  0E00               	movlw	high main@buf
  1091   003310  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1092   003312  0E01               	movlw	low STR_1
  1093   003314  6F94               	movwf	sprintf@fmt& (0+255),b
  1094   003316  0E0E               	movlw	high STR_1
  1095   003318  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1096   00331A  C1A0  F096         	movff	_rel,?_sprintf+4
  1097   00331E  C1A1  F097         	movff	_rel+1,?_sprintf+5
  1098   003322  C1A2  F098         	movff	_rel+2,?_sprintf+6
  1099   003326  C1A3  F099         	movff	_rel+3,?_sprintf+7
  1100   00332A  C1A4  F09A         	movff	_rel+4,?_sprintf+8
  1101   00332E  C1A5  F09B         	movff	_rel+5,?_sprintf+9
  1102   003332  C1A6  F09C         	movff	_rel+6,?_sprintf+10
  1103   003336  C1A7  F09D         	movff	_rel+7,?_sprintf+11
  1104   00333A  C1A8  F09E         	movff	_rel+8,?_sprintf+12
  1105   00333E  C1A9  F09F         	movff	_rel+9,?_sprintf+13
  1106   003342  C1AA  F0A0         	movff	_rel+10,?_sprintf+14
  1107   003346  C1AB  F0A1         	movff	_rel+11,?_sprintf+15
  1108   00334A  C0F7  F0A2         	movff	_vals+6,?_sprintf+16
  1109   00334E  C0F8  F0A3         	movff	_vals+7,?_sprintf+17
  1110   003352  ECC9  F01C         	call	_sprintf	;wreg free
  1111   003356                     
  1112                           ;main.c: 89:     TxBufferedString(buf);
  1113   003356  0EB3               	movlw	low main@buf
  1114   003358  6E04               	movwf	TxBufferedString@string^0,c
  1115   00335A  0E00               	movlw	high main@buf
  1116   00335C  6E05               	movwf	(TxBufferedString@string+1)^0,c
  1117   00335E  ECE7  F01E         	call	_TxBufferedString	;wreg free
  1118                           
  1119                           ;main.c: 94:         while (DataFlag){
  1120   003362  EFB5  F019         	goto	l4408
  1121   003366                     l4406:
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;main.c: 95:             sendTxBuf();
  1125   003366  ECFF  F01E         	call	_sendTxBuf	;wreg free
  1126   00336A                     l4408:
  1127                           
  1128                           ;main.c: 94:         while (DataFlag){
  1129   00336A  0100               	movlb	0	; () banked
  1130   00336C  51FB               	movf	_DataFlag& (0+255),w,b	;volatile
  1131   00336E  A4D8               	btfss	status,2,c
  1132   003370  EFBC  F019         	goto	u4301
  1133   003374  EFBE  F019         	goto	u4300
  1134   003378                     u4301:
  1135   003378  EFB3  F019         	goto	l4406
  1136   00337C                     u4300:
  1137   00337C  EF74  F019         	goto	l4398
  1138   003380  EF14  F000         	goto	start
  1139   003384                     __end_of_main:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _sprintf *****************
  1143 ;; Defined at:
  1144 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  s               2   50[BANK0 ] PTR unsigned char 
  1147 ;;		 -> main@buf(50), 
  1148 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1149 ;;		 -> STR_1(33), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  f              11   70[BANK0 ] struct _IO_FILE
  1152 ;;  ap              2   68[BANK0 ] PTR void [1]
  1153 ;;		 -> ?_sprintf(2), 
  1154 ;;  ret             2    0        int 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  2   50[BANK0 ] int 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1164 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;Total ram usage:       31 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 11
  1171 ;; This function calls:
  1172 ;;		_vfprintf
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text1
  1179   003992                     __ptext1:
  1180                           	callstack 0
  1181   003992                     _sprintf:
  1182                           	callstack 19
  1183   003992  0E96               	movlw	low (?_sprintf+4)
  1184   003994  0100               	movlb	0	; () banked
  1185   003996  6FA4               	movwf	sprintf@ap& (0+255),b
  1186   003998  0E00               	movlw	high (?_sprintf+4)
  1187   00399A  6FA5               	movwf	(sprintf@ap+1)& (0+255),b
  1188   00399C  C092  F0A6         	movff	sprintf@s,sprintf@f
  1189   0039A0  C093  F0A7         	movff	sprintf@s+1,sprintf@f+1
  1190   0039A4                     
  1191                           ; BSR set to: 0
  1192   0039A4  0E00               	movlw	0
  1193   0039A6  6FAA               	movwf	(sprintf@f+4)& (0+255),b
  1194   0039A8  0E00               	movlw	0
  1195   0039AA  6FA9               	movwf	(sprintf@f+3)& (0+255),b
  1196   0039AC                     
  1197                           ; BSR set to: 0
  1198   0039AC  0E00               	movlw	0
  1199   0039AE  6FB0               	movwf	(sprintf@f+10)& (0+255),b
  1200   0039B0  0E00               	movlw	0
  1201   0039B2  6FAF               	movwf	(sprintf@f+9)& (0+255),b
  1202   0039B4                     
  1203                           ; BSR set to: 0
  1204   0039B4  0EA6               	movlw	low sprintf@f
  1205   0039B6  6F8C               	movwf	vfprintf@fp& (0+255),b
  1206   0039B8  0E00               	movlw	high sprintf@f
  1207   0039BA  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1208   0039BC  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1209   0039C0  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1210   0039C4  0EA4               	movlw	low sprintf@ap
  1211   0039C6  6F90               	movwf	vfprintf@ap& (0+255),b
  1212   0039C8  0E00               	movlw	high sprintf@ap
  1213   0039CA  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1214   0039CC  EC9F  F01C         	call	_vfprintf	;wreg free
  1215   0039D0  0100               	movlb	0	; () banked
  1216   0039D2  51A9               	movf	(sprintf@f+3)& (0+255),w,b
  1217   0039D4  2592               	addwf	sprintf@s& (0+255),w,b
  1218   0039D6  6ED9               	movwf	fsr2l,c
  1219   0039D8  51AA               	movf	(sprintf@f+4)& (0+255),w,b
  1220   0039DA  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1221   0039DC  6EDA               	movwf	fsr2h,c
  1222   0039DE  0E00               	movlw	0
  1223   0039E0  6EDF               	movwf	indf2,c
  1224   0039E2                     
  1225                           ; BSR set to: 0
  1226   0039E2  0012               	return		;funcret
  1227   0039E4                     __end_of_sprintf:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _vfprintf *****************
  1231 ;; Defined at:
  1232 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1235 ;;		 -> sprintf@f(11), 
  1236 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1237 ;;		 -> STR_1(33), 
  1238 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1239 ;;		 -> sprintf@ap(2), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1242 ;;		 -> STR_1(33), 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  2   44[BANK0 ] int 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;Total ram usage:        8 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 10
  1259 ;; This function calls:
  1260 ;;		_vfpfcnvrt
  1261 ;; This function is called by:
  1262 ;;		_sprintf
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text2
  1267   00393E                     __ptext2:
  1268                           	callstack 0
  1269   00393E                     _vfprintf:
  1270                           	callstack 19
  1271   00393E                     
  1272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1273   00393E  C08E  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1274   003942  C08F  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1277   003946  EFB3  F01C         	goto	l4054
  1278   00394A                     l4052:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1281   00394A  C08C  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1282   00394E  C08D  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1283   003952  0E54               	movlw	low vfprintf@cfmt
  1284   003954  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1285   003956  0E00               	movlw	high vfprintf@cfmt
  1286   003958  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1287   00395A  C090  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1288   00395E  C091  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1289   003962  EC56  F012         	call	_vfpfcnvrt	;wreg free
  1290   003966                     l4054:
  1291                           
  1292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1293   003966  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1294   00396A  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1295   00396E                     	if	0	;tblptru may be non-zero
  1296   00396E                     	endif
  1297   00396E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1298   00396E  0E00               	movlw	low (__mediumconst shr (0+16))
  1299   003970  6EF8               	movwf	tblptru,c
  1300   003972                     	endif
  1301   003972  0008               	tblrd		*
  1302   003974  50F5               	movf	tablat,w,c
  1303   003976  0900               	iorlw	0
  1304   003978  A4D8               	btfss	status,2,c
  1305   00397A  EFC1  F01C         	goto	u4201
  1306   00397E  EFC3  F01C         	goto	u4200
  1307   003982                     u4201:
  1308   003982  EFA5  F01C         	goto	l4052
  1309   003986                     u4200:
  1310   003986                     
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1312   003986  0E00               	movlw	0
  1313   003988  0100               	movlb	0	; () banked
  1314   00398A  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1315   00398C  0E00               	movlw	0
  1316   00398E  6F8C               	movwf	?_vfprintf& (0+255),b
  1317   003990                     
  1318                           ; BSR set to: 0
  1319   003990  0012               	return		;funcret
  1320   003992                     __end_of_vfprintf:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _vfpfcnvrt *****************
  1324 ;; Defined at:
  1325 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1328 ;;		 -> sprintf@f(11), 
  1329 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1330 ;;		 -> vfprintf@cfmt(2), 
  1331 ;;  ap              2   68[COMRAM] PTR PTR void 
  1332 ;;		 -> sprintf@ap(2), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  convarg         8   72[COMRAM] struct .
  1335 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1336 ;;		 -> STR_1(33), 
  1337 ;;  i               2    0        int 
  1338 ;;  done            2    0        int 
  1339 ;;  c               1   80[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1349 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;Total ram usage:       19 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 9
  1356 ;; This function calls:
  1357 ;;		_dtoa
  1358 ;;		_efgtoa
  1359 ;;		_fputc
  1360 ;; This function is called by:
  1361 ;;		_vfprintf
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text3
  1366   0024AC                     __ptext3:
  1367                           	callstack 0
  1368   0024AC                     _vfpfcnvrt:
  1369                           	callstack 19
  1370   0024AC                     
  1371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1372   0024AC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1373   0024B0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1374   0024B4  CFDE FFF6          	movff	postinc2,tblptrl
  1375   0024B8  CFDD FFF7          	movff	postdec2,tblptrh
  1376   0024BC                     	if	0	;tblptru may be non-zero
  1377   0024BC                     	endif
  1378   0024BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1379   0024BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1380   0024BE  6EF8               	movwf	tblptru,c
  1381   0024C0                     	endif
  1382   0024C0  0008               	tblrd		*
  1383   0024C2  50F5               	movf	tablat,w,c
  1384   0024C4  0A25               	xorlw	37
  1385   0024C6  A4D8               	btfss	status,2,c
  1386   0024C8  EF68  F012         	goto	u4011
  1387   0024CC  EF6A  F012         	goto	u4010
  1388   0024D0                     u4011:
  1389   0024D0  EFC2  F013         	goto	l3908
  1390   0024D4                     u4010:
  1391   0024D4                     
  1392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1393   0024D4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394   0024D8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395   0024DC  2ADE               	incf	postinc2,f,c
  1396   0024DE  0E00               	movlw	0
  1397   0024E0  22DD               	addwfc	postdec2,f,c
  1398   0024E2                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1400   0024E2  0E00               	movlw	0
  1401   0024E4  0100               	movlb	0	; () banked
  1402   0024E6  6FEE               	movwf	(_width+1)& (0+255),b
  1403   0024E8  0E00               	movlw	0
  1404   0024EA  6FED               	movwf	_width& (0+255),b
  1405   0024EC  C0ED  F058         	movff	_width,_flags
  1406   0024F0                     
  1407                           ; BSR set to: 0
  1408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1409   0024F0  6856               	setf	_prec^0,c
  1410   0024F2  6857               	setf	(_prec+1)^0,c
  1411   0024F4                     
  1412                           ; BSR set to: 0
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1414   0024F4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1415   0024F8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1416   0024FC  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1417   002500  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1418   002504                     
  1419                           ; BSR set to: 0
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1421   002504  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1422   002508  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1423   00250C                     	if	0	;tblptru may be non-zero
  1424   00250C                     	endif
  1425   00250C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1426   00250C  0E00               	movlw	low (__mediumconst shr (0+16))
  1427   00250E  6EF8               	movwf	tblptru,c
  1428   002510                     	endif
  1429   002510  0008               	tblrd		*
  1430   002512  50F5               	movf	tablat,w,c
  1431   002514  0A64               	xorlw	100
  1432   002516  B4D8               	btfsc	status,2,c
  1433   002518  EF90  F012         	goto	u4021
  1434   00251C  EF92  F012         	goto	u4020
  1435   002520                     u4021:
  1436   002520  EFA2  F012         	goto	l3864
  1437   002524                     u4020:
  1438   002524                     
  1439                           ; BSR set to: 0
  1440   002524  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1441   002528  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1442   00252C                     	if	0	;tblptru may be non-zero
  1443   00252C                     	endif
  1444   00252C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1445   00252C  0E00               	movlw	low (__mediumconst shr (0+16))
  1446   00252E  6EF8               	movwf	tblptru,c
  1447   002530                     	endif
  1448   002530  0008               	tblrd		*
  1449   002532  50F5               	movf	tablat,w,c
  1450   002534  0A69               	xorlw	105
  1451   002536  A4D8               	btfss	status,2,c
  1452   002538  EFA0  F012         	goto	u4031
  1453   00253C  EFA2  F012         	goto	u4030
  1454   002540                     u4031:
  1455   002540  EFE5  F012         	goto	l3870
  1456   002544                     u4030:
  1457   002544                     l3864:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1461   002544  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1462   002548  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1463   00254C  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1464   002550  0E02               	movlw	2
  1465   002552  26DE               	addwf	postinc2,f,c
  1466   002554  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1467   002558  0E00               	movlw	0
  1468   00255A  22DD               	addwfc	postdec2,f,c
  1469   00255C  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1470   002560  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1471   002564  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1472   002568  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1473   00256C  0E00               	movlw	0
  1474   00256E  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1475   002570  0EFF               	movlw	-1
  1476   002572  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1477   002574  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1478   002576  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1479   002578  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1480   00257A  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1481   00257C  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1484   00257E  0E01               	movlw	1
  1485   002580  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1486   002582  6E47               	movwf	??_vfpfcnvrt^0,c
  1487   002584  0E00               	movlw	0
  1488   002586  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1489   002588  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1490   00258A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1491   00258E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1492   002592  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1493   002596  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1494   00259A                     
  1495                           ; BSR set to: 0
  1496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1497   00259A  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1498   00259E  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1499   0025A2  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1500   0025A6  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1501   0025AA  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1502   0025AE  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1503   0025B2  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1504   0025B6  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1505   0025BA  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1506   0025BE  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1507   0025C2  ECD9  F013         	call	_dtoa	;wreg free
  1508   0025C6  EFD8  F013         	goto	l1121
  1509   0025CA                     l3870:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1513   0025CA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1514   0025CE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1515   0025D2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1516   0025D6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1517   0025DA                     
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1520   0025DA  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1521   0025DE  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1522   0025E2                     	if	0	;tblptru may be non-zero
  1523   0025E2                     	endif
  1524   0025E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1525   0025E2  0E00               	movlw	low (__mediumconst shr (0+16))
  1526   0025E4  6EF8               	movwf	tblptru,c
  1527   0025E6                     	endif
  1528   0025E6  0008               	tblrd		*
  1529   0025E8  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1532   0025EC  EF04  F013         	goto	l3882
  1533   0025F0                     l3874:
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1537   0025F0  4A52               	infsnz	vfpfcnvrt@cp^0,f,c
  1538   0025F2  2A53               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1541   0025F4  EF1D  F013         	goto	l3884
  1542   0025F8                     l3876:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1546   0025F8  0E6C               	movlw	108
  1547   0025FA  6E51               	movwf	vfpfcnvrt@c^0,c
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1550   0025FC  EF1D  F013         	goto	l3884
  1551   002600                     l3878:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1555   002600  0E00               	movlw	0
  1556   002602  6E51               	movwf	vfpfcnvrt@c^0,c
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1559   002604  EF1D  F013         	goto	l3884
  1560   002608                     l3882:
  1561                           
  1562                           ; BSR set to: 0
  1563   002608  5051               	movf	vfpfcnvrt@c^0,w,c
  1564   00260A  6E47               	movwf	??_vfpfcnvrt^0,c
  1565   00260C  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1566                           
  1567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1568                           ; Switch size 1, requested type "simple"
  1569                           ; Number of cases is 1, Range of values is 0 to 0
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte            4     3 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574   00260E  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1575   002610  0A00               	xorlw	0	; case 0
  1576   002612  B4D8               	btfsc	status,2,c
  1577   002614  EF0E  F013         	goto	l4530
  1578   002618  EF00  F013         	goto	l3878
  1579   00261C                     l4530:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ; Switch size 1, requested type "simple"
  1583                           ; Number of cases is 3, Range of values is 76 to 108
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte           10     6 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588   00261C  5047               	movf	??_vfpfcnvrt^0,w,c
  1589   00261E  0A4C               	xorlw	76	; case 76
  1590   002620  B4D8               	btfsc	status,2,c
  1591   002622  EFF8  F012         	goto	l3874
  1592   002626  0A2A               	xorlw	42	; case 102
  1593   002628  B4D8               	btfsc	status,2,c
  1594   00262A  EFFC  F012         	goto	l3876
  1595   00262E  0A0A               	xorlw	10	; case 108
  1596   002630  B4D8               	btfsc	status,2,c
  1597   002632  EFF8  F012         	goto	l3874
  1598   002636  EF00  F013         	goto	l3878
  1599   00263A                     l3884:
  1600                           
  1601                           ; BSR set to: 0
  1602   00263A  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1603   00263E  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1604   002642                     	if	0	;tblptru may be non-zero
  1605   002642                     	endif
  1606   002642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1607   002642  0E00               	movlw	low (__mediumconst shr (0+16))
  1608   002644  6EF8               	movwf	tblptru,c
  1609   002646                     	endif
  1610   002646  0008               	tblrd		*
  1611   002648  50F5               	movf	tablat,w,c
  1612   00264A  0A66               	xorlw	102
  1613   00264C  A4D8               	btfss	status,2,c
  1614   00264E  EF2B  F013         	goto	u4041
  1615   002652  EF2D  F013         	goto	u4040
  1616   002656                     u4041:
  1617   002656  EFB9  F013         	goto	l3904
  1618   00265A                     u4040:
  1619   00265A  EF63  F013         	goto	l3892
  1620   00265E                     l3886:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1624   00265E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1625   002662  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1626   002666  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1627   00266A  0E04               	movlw	4
  1628   00266C  26DE               	addwf	postinc2,f,c
  1629   00266E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1630   002672  0E00               	movlw	0
  1631   002674  22DD               	addwfc	postdec2,f,c
  1632   002676  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1633   00267A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1634   00267E  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1635   002682  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg+1
  1636   002686  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg+2
  1637   00268A  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+3
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1640   00268E  EF78  F013         	goto	l3894
  1641   002692                     l3888:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1645   002692  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1646   002696  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1647   00269A  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1648   00269E  0E04               	movlw	4
  1649   0026A0  26DE               	addwf	postinc2,f,c
  1650   0026A2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1651   0026A6  0E00               	movlw	0
  1652   0026A8  22DD               	addwfc	postdec2,f,c
  1653   0026AA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1654   0026AE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1655   0026B2  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1656   0026B6  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg+1
  1657   0026BA  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg+2
  1658   0026BE  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+3
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1661   0026C2  EF78  F013         	goto	l3894
  1662   0026C6                     l3892:
  1663                           
  1664                           ; BSR set to: 0
  1665   0026C6  5051               	movf	vfpfcnvrt@c^0,w,c
  1666   0026C8  6E47               	movwf	??_vfpfcnvrt^0,c
  1667   0026CA  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1668                           
  1669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1670                           ; Switch size 1, requested type "simple"
  1671                           ; Number of cases is 1, Range of values is 0 to 0
  1672                           ; switch strategies available:
  1673                           ; Name         Instructions Cycles
  1674                           ; simple_byte            4     3 (average)
  1675                           ;	Chosen strategy is simple_byte
  1676   0026CC  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1677   0026CE  0A00               	xorlw	0	; case 0
  1678   0026D0  B4D8               	btfsc	status,2,c
  1679   0026D2  EF6D  F013         	goto	l4532
  1680   0026D6  EF78  F013         	goto	l3894
  1681   0026DA                     l4532:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 2, Range of values is 76 to 108
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte            7     4 (average)
  1689                           ;	Chosen strategy is simple_byte
  1690   0026DA  5047               	movf	??_vfpfcnvrt^0,w,c
  1691   0026DC  0A4C               	xorlw	76	; case 76
  1692   0026DE  B4D8               	btfsc	status,2,c
  1693   0026E0  EF49  F013         	goto	l3888
  1694   0026E4  0A20               	xorlw	32	; case 108
  1695   0026E6  B4D8               	btfsc	status,2,c
  1696   0026E8  EF2F  F013         	goto	l3886
  1697   0026EC  EF78  F013         	goto	l3894
  1698   0026F0                     l3894:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1702   0026F0  0E01               	movlw	1
  1703   0026F2  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1704   0026F4  6E47               	movwf	??_vfpfcnvrt^0,c
  1705   0026F6  0E00               	movlw	0
  1706   0026F8  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1707   0026FA  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1708   0026FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1709   002700  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1710   002704  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1711   002708  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1714   00270C  EFA1  F013         	goto	l3902
  1715   002710                     l3896:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1719   002710  C041  F030         	movff	vfpfcnvrt@fp,efgtoa@fp
  1720   002714  C042  F031         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1721   002718  C049  F032         	movff	vfpfcnvrt@convarg,efgtoa@f
  1722   00271C  C04A  F033         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1723   002720  C04B  F034         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1724   002724  C04C  F035         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1725   002728  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1726   00272C  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1727   002730                     	if	0	;tblptru may be non-zero
  1728   002730                     	endif
  1729   002730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1730   002730  0E00               	movlw	low (__mediumconst shr (0+16))
  1731   002732  6EF8               	movwf	tblptru,c
  1732   002734                     	endif
  1733   002734  0008               	tblrd		*
  1734   002736  CFF5 F036          	movff	tablat,efgtoa@c
  1735   00273A  EC16  F007         	call	_efgtoa	;wreg free
  1736   00273E  EFD8  F013         	goto	l1121
  1737   002742                     l3902:
  1738                           
  1739                           ; BSR set to: 0
  1740   002742  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1741   002746  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1742   00274A                     	if	0	;tblptru may be non-zero
  1743   00274A                     	endif
  1744   00274A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1745   00274A  0E00               	movlw	low (__mediumconst shr (0+16))
  1746   00274C  6EF8               	movwf	tblptru,c
  1747   00274E                     	endif
  1748   00274E  0008               	tblrd		*
  1749   002750  50F5               	movf	tablat,w,c
  1750   002752  6E47               	movwf	??_vfpfcnvrt^0,c
  1751   002754  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1752                           
  1753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1754                           ; Switch size 1, requested type "simple"
  1755                           ; Number of cases is 1, Range of values is 0 to 0
  1756                           ; switch strategies available:
  1757                           ; Name         Instructions Cycles
  1758                           ; simple_byte            4     3 (average)
  1759                           ;	Chosen strategy is simple_byte
  1760   002756  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1761   002758  0A00               	xorlw	0	; case 0
  1762   00275A  B4D8               	btfsc	status,2,c
  1763   00275C  EFB2  F013         	goto	l4534
  1764   002760  EFB9  F013         	goto	l3904
  1765   002764                     l4534:
  1766                           
  1767                           ; BSR set to: 0
  1768                           ; Switch size 1, requested type "simple"
  1769                           ; Number of cases is 1, Range of values is 102 to 102
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; simple_byte            4     3 (average)
  1773                           ;	Chosen strategy is simple_byte
  1774   002764  5047               	movf	??_vfpfcnvrt^0,w,c
  1775   002766  0A66               	xorlw	102	; case 102
  1776   002768  B4D8               	btfsc	status,2,c
  1777   00276A  EF88  F013         	goto	l3896
  1778   00276E  EFB9  F013         	goto	l3904
  1779   002772                     l3904:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1782   002772  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1783   002776  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1784   00277A  2ADE               	incf	postinc2,f,c
  1785   00277C  0E00               	movlw	0
  1786   00277E  22DD               	addwfc	postdec2,f,c
  1787   002780  EFD8  F013         	goto	l1121
  1788   002784                     l3908:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1791   002784  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1792   002788  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1793   00278C  CFDE FFF6          	movff	postinc2,tblptrl
  1794   002790  CFDD FFF7          	movff	postdec2,tblptrh
  1795   002794                     	if	0	;tblptru may be non-zero
  1796   002794                     	endif
  1797   002794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1798   002794  0E00               	movlw	low (__mediumconst shr (0+16))
  1799   002796  6EF8               	movwf	tblptru,c
  1800   002798                     	endif
  1801   002798  0008               	tblrd		*
  1802   00279A  50F5               	movf	tablat,w,c
  1803   00279C  6E03               	movwf	fputc@c^0,c
  1804   00279E  6A04               	clrf	(fputc@c+1)^0,c
  1805   0027A0  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1806   0027A4  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1807   0027A8  EC46  F01B         	call	_fputc	;wreg free
  1808   0027AC  EFB9  F013         	goto	l3904
  1809   0027B0                     l1121:
  1810   0027B0  0012               	return		;funcret
  1811   0027B2                     __end_of_vfpfcnvrt:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _efgtoa *****************
  1815 ;; Defined at:
  1816 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  1819 ;;		 -> sprintf@f(11), 
  1820 ;;  f               4   49[COMRAM] PTR struct _IO_FILE
  1821 ;;  c               1   53[COMRAM] unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  u               4   40[BANK0 ] struct flui
  1824 ;;  g               4   36[BANK0 ] struct flui
  1825 ;;  l               4   29[BANK0 ] struct flui
  1826 ;;  h               4   25[BANK0 ] struct flui
  1827 ;;  ou              4   19[BANK0 ] struct flui
  1828 ;;  n               2   34[BANK0 ] int 
  1829 ;;  i               2   23[BANK0 ] int 
  1830 ;;  w               2   17[BANK0 ] int 
  1831 ;;  e               2   15[BANK0 ] int 
  1832 ;;  m               2   13[BANK0 ] int 
  1833 ;;  d               2   11[BANK0 ] int 
  1834 ;;  t               2    4[BANK0 ] int 
  1835 ;;  p               2    2[BANK0 ] int 
  1836 ;;  ne              2    0[BANK0 ] int 
  1837 ;;  sign            1   33[BANK0 ] unsigned char 
  1838 ;;  nmode           1   10[BANK0 ] unsigned char 
  1839 ;;  mode            1    9[BANK0 ] unsigned char 
  1840 ;;  pp              1    8[BANK0 ] unsigned char 
  1841 ;;  esign           1    0        unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1851 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1854 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1855 ;;Total ram usage:       53 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 8
  1858 ;; This function calls:
  1859 ;;		___fladd
  1860 ;;		___fldiv
  1861 ;;		___fleq
  1862 ;;		___flge
  1863 ;;		___flmul
  1864 ;;		___flneg
  1865 ;;		___flsub
  1866 ;;		___fltol
  1867 ;;		___fpclassifyf
  1868 ;;		_floorf
  1869 ;;		_labs
  1870 ;;		_memcpy
  1871 ;;		_pad
  1872 ;;		_strcpy
  1873 ;; This function is called by:
  1874 ;;		_vfpfcnvrt
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text4
  1879   000E2C                     __ptext4:
  1880                           	callstack 0
  1881   000E2C                     _efgtoa:
  1882                           	callstack 19
  1883   000E2C                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1885   000E2C  0E00               	movlw	0
  1886   000E2E  0100               	movlb	0	; () banked
  1887   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1888   000E32                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1891   000E32  C032  F084         	movff	efgtoa@f,efgtoa@g
  1892   000E36  C033  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1893   000E3A  C034  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1894   000E3E  C035  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1895   000E42                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1898   000E42  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1899   000E44  EF28  F007         	goto	u3670
  1900   000E48  EF26  F007         	goto	u3671
  1901   000E4C                     u3671:
  1902   000E4C  EF3C  F007         	goto	l3616
  1903   000E50                     u3670:
  1904   000E50                     
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1907   000E50  0E01               	movlw	1
  1908   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1909   000E54                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1912   000E54  C084  F003         	movff	efgtoa@g,___flneg@f1
  1913   000E58  C085  F004         	movff	efgtoa@g+1,___flneg@f1+1
  1914   000E5C  C086  F005         	movff	efgtoa@g+2,___flneg@f1+2
  1915   000E60  C087  F006         	movff	efgtoa@g+3,___flneg@f1+3
  1916   000E64  ECB1  F01E         	call	___flneg	;wreg free
  1917   000E68  C003  F084         	movff	?___flneg,efgtoa@g
  1918   000E6C  C004  F085         	movff	?___flneg+1,efgtoa@g+1
  1919   000E70  C005  F086         	movff	?___flneg+2,efgtoa@g+2
  1920   000E74  C006  F087         	movff	?___flneg+3,efgtoa@g+3
  1921   000E78                     l3616:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1924   000E78  0E00               	movlw	0
  1925   000E7A  0100               	movlb	0	; () banked
  1926   000E7C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1927   000E7E  0E00               	movlw	0
  1928   000E80  6F82               	movwf	efgtoa@n& (0+255),b
  1929   000E82                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1932   000E82  C0ED  F071         	movff	_width,efgtoa@w
  1933   000E86  C0EE  F072         	movff	_width+1,efgtoa@w+1
  1934   000E8A                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1937   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1938   000E8C  B4D8               	btfsc	status,2,c
  1939   000E8E  EF4B  F007         	goto	u3681
  1940   000E92  EF4D  F007         	goto	u3680
  1941   000E96                     u3681:
  1942   000E96  EF61  F007         	goto	l3630
  1943   000E9A                     u3680:
  1944   000E9A                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1947   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1948   000E9C  A4D8               	btfss	status,2,c
  1949   000E9E  EF53  F007         	goto	u3691
  1950   000EA2  EF55  F007         	goto	u3690
  1951   000EA6                     u3691:
  1952   000EA6  EF5B  F007         	goto	l3626
  1953   000EAA                     u3690:
  1954   000EAA                     
  1955                           ; BSR set to: 0
  1956   000EAA  0E00               	movlw	0
  1957   000EAC  6F67               	movwf	(_efgtoa$1698+1)& (0+255),b
  1958   000EAE  0E2B               	movlw	43
  1959   000EB0  6F66               	movwf	_efgtoa$1698& (0+255),b
  1960   000EB2  EF5F  F007         	goto	l3628
  1961   000EB6                     l3626:
  1962                           
  1963                           ; BSR set to: 0
  1964   000EB6  0E00               	movlw	0
  1965   000EB8  6F67               	movwf	(_efgtoa$1698+1)& (0+255),b
  1966   000EBA  0E2D               	movlw	45
  1967   000EBC  6F66               	movwf	_efgtoa$1698& (0+255),b
  1968   000EBE                     l3628:
  1969                           
  1970                           ; BSR set to: 0
  1971   000EBE  C066  F081         	movff	_efgtoa$1698,efgtoa@sign
  1972   000EC2                     l3630:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1976   000EC2  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  1977   000EC6  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1978   000ECA  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1979   000ECE  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1980   000ED2  ECC7  F01A         	call	___fpclassifyf	;wreg free
  1981   000ED6  0403               	decf	?___fpclassifyf^0,w,c
  1982   000ED8  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  1983   000EDA  A4D8               	btfss	status,2,c
  1984   000EDC  EF72  F007         	goto	u3701
  1985   000EE0  EF74  F007         	goto	u3700
  1986   000EE4                     u3701:
  1987   000EE4  EFA7  F007         	goto	l3648
  1988   000EE8                     u3700:
  1989   000EE8                     
  1990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1991   000EE8  0100               	movlb	0	; () banked
  1992   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1993   000EEC  B4D8               	btfsc	status,2,c
  1994   000EEE  EF7B  F007         	goto	u3711
  1995   000EF2  EF7D  F007         	goto	u3710
  1996   000EF6                     u3711:
  1997   000EF6  EF86  F007         	goto	l3640
  1998   000EFA                     u3710:
  1999   000EFA                     
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2002   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  2003   000EFE                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2006   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  2007   000F00  A0D8               	btfss	status,0,c
  2008   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2009   000F04                     
  2010                           ; BSR set to: 0
  2011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2012   000F04  0E00               	movlw	0
  2013   000F06  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2014   000F08  0E01               	movlw	1
  2015   000F0A  6F82               	movwf	efgtoa@n& (0+255),b
  2016   000F0C                     l3640:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2020   000F0C  0E50               	movlw	low _dbuf
  2021   000F0E  2582               	addwf	efgtoa@n& (0+255),w,b
  2022   000F10  6E03               	movwf	strcpy@dest^0,c
  2023   000F12  0E01               	movlw	high _dbuf
  2024   000F14  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2025   000F16  6E04               	movwf	(strcpy@dest+1)^0,c
  2026   000F18  0E22               	movlw	low STR_2
  2027   000F1A  6E05               	movwf	strcpy@src^0,c
  2028   000F1C  0E0E               	movlw	high STR_2
  2029   000F1E  6E06               	movwf	(strcpy@src+1)^0,c
  2030   000F20  EC2C  F01E         	call	_strcpy	;wreg free
  2031   000F24                     l3642:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2034   000F24  0100               	movlb	0	; () banked
  2035   000F26  0EFD               	movlw	253
  2036   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  2037   000F2A  0EFF               	movlw	255
  2038   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2039   000F2E                     
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2042   000F2E  C030  F013         	movff	efgtoa@fp,pad@fp
  2043   000F32  C031  F014         	movff	efgtoa@fp+1,pad@fp+1
  2044   000F36  0E50               	movlw	low _dbuf
  2045   000F38  6E15               	movwf	pad@buf^0,c
  2046   000F3A  0E01               	movlw	high _dbuf
  2047   000F3C  6E16               	movwf	(pad@buf+1)^0,c
  2048   000F3E  C071  F017         	movff	efgtoa@w,pad@p
  2049   000F42  C072  F018         	movff	efgtoa@w+1,pad@p+1
  2050   000F46  EC00  F01C         	call	_pad	;wreg free
  2051   000F4A  EF13  F00C         	goto	l1073
  2052   000F4E                     l3648:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2055   000F4E  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  2056   000F52  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2057   000F56  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2058   000F5A  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2059   000F5E  ECC7  F01A         	call	___fpclassifyf	;wreg free
  2060   000F62  5003               	movf	?___fpclassifyf^0,w,c
  2061   000F64  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  2062   000F66  A4D8               	btfss	status,2,c
  2063   000F68  EFB8  F007         	goto	u3721
  2064   000F6C  EFBA  F007         	goto	u3720
  2065   000F70                     u3721:
  2066   000F70  EFDA  F007         	goto	l3666
  2067   000F74                     u3720:
  2068   000F74                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2070   000F74  0100               	movlb	0	; () banked
  2071   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  2072   000F78  B4D8               	btfsc	status,2,c
  2073   000F7A  EFC1  F007         	goto	u3731
  2074   000F7E  EFC3  F007         	goto	u3730
  2075   000F82                     u3731:
  2076   000F82  EFCC  F007         	goto	l3658
  2077   000F86                     u3730:
  2078   000F86                     
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2081   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  2082   000F8A                     
  2083                           ; BSR set to: 0
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2085   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  2086   000F8C  A0D8               	btfss	status,0,c
  2087   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2088   000F90                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2091   000F90  0E00               	movlw	0
  2092   000F92  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2093   000F94  0E01               	movlw	1
  2094   000F96  6F82               	movwf	efgtoa@n& (0+255),b
  2095   000F98                     l3658:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2099   000F98  0E50               	movlw	low _dbuf
  2100   000F9A  2582               	addwf	efgtoa@n& (0+255),w,b
  2101   000F9C  6E03               	movwf	strcpy@dest^0,c
  2102   000F9E  0E01               	movlw	high _dbuf
  2103   000FA0  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2104   000FA2  6E04               	movwf	(strcpy@dest+1)^0,c
  2105   000FA4  0E26               	movlw	low STR_5
  2106   000FA6  6E05               	movwf	strcpy@src^0,c
  2107   000FA8  0E0E               	movlw	high STR_5
  2108   000FAA  6E06               	movwf	(strcpy@src+1)^0,c
  2109   000FAC  EC2C  F01E         	call	_strcpy	;wreg free
  2110   000FB0  EF92  F007         	goto	l3642
  2111   000FB4                     l3666:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2114   000FB4  0E00               	movlw	0
  2115   000FB6  0100               	movlb	0	; () banked
  2116   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2117   000FBA  0E00               	movlw	0
  2118   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2119   000FBE  0E80               	movlw	128
  2120   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2121   000FC2  0E3F               	movlw	63
  2122   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2125   000FC6  0E00               	movlw	0
  2126   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2127   000FCA  0E00               	movlw	0
  2128   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2129   000FCE                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2132   000FCE  C084  F003         	movff	efgtoa@g,___fleq@ff1
  2133   000FD2  C085  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  2134   000FD6  C086  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  2135   000FDA  C087  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  2136   000FDE  0E00               	movlw	0
  2137   000FE0  6E07               	movwf	___fleq@ff2^0,c
  2138   000FE2  0E00               	movlw	0
  2139   000FE4  6E08               	movwf	(___fleq@ff2+1)^0,c
  2140   000FE6  0E00               	movlw	0
  2141   000FE8  6E09               	movwf	(___fleq@ff2+2)^0,c
  2142   000FEA  0E00               	movlw	0
  2143   000FEC  6E0A               	movwf	(___fleq@ff2+3)^0,c
  2144   000FEE  ECAB  F01B         	call	___fleq	;wreg free
  2145   000FF2  B0D8               	btfsc	status,0,c
  2146   000FF4  EFFE  F007         	goto	u3741
  2147   000FF8  EF00  F008         	goto	u3740
  2148   000FFC                     u3741:
  2149   000FFC  EFDF  F008         	goto	l1076
  2150   001000                     u3740:
  2151   001000  EF0D  F008         	goto	l3674
  2152   001004                     l1078:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2155   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2156   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2157   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2158   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2159   001014                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2161   001014  0100               	movlb	0	; () banked
  2162   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2163   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2164   00101A                     l3674:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2167   00101A  C088  F003         	movff	efgtoa@u,___flmul@b
  2168   00101E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2169   001022  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2170   001026  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2171   00102A  0E00               	movlw	0
  2172   00102C  6E07               	movwf	___flmul@a^0,c
  2173   00102E  0E00               	movlw	0
  2174   001030  6E08               	movwf	(___flmul@a+1)^0,c
  2175   001032  0E20               	movlw	32
  2176   001034  6E09               	movwf	(___flmul@a+2)^0,c
  2177   001036  0E41               	movlw	65
  2178   001038  6E0A               	movwf	(___flmul@a+3)^0,c
  2179   00103A  EC74  F00E         	call	___flmul	;wreg free
  2180   00103E  C003  F073         	movff	?___flmul,efgtoa@ou
  2181   001042  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  2182   001046  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  2183   00104A  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  2184   00104E  0100               	movlb	0	; () banked
  2185   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2186   001052  5D84               	subwf	efgtoa@g& (0+255),w,b
  2187   001054  6E03               	movwf	labs@a^0,c
  2188   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2189   001058  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2190   00105A  6E04               	movwf	(labs@a+1)^0,c
  2191   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2192   00105E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2193   001060  6E05               	movwf	(labs@a+2)^0,c
  2194   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2195   001064  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2196   001066  6E06               	movwf	(labs@a+3)^0,c
  2197   001068  EC3D  F01C         	call	_labs	;wreg free
  2198   00106C  BE06               	btfsc	(?_labs+3)^0,7,c
  2199   00106E  EF44  F008         	goto	u3751
  2200   001072  5006               	movf	(?_labs+3)^0,w,c
  2201   001074  1005               	iorwf	(?_labs+2)^0,w,c
  2202   001076  1004               	iorwf	(?_labs+1)^0,w,c
  2203   001078  E109               	bnz	u3750
  2204   00107A  0E02               	movlw	2
  2205   00107C  5C03               	subwf	?_labs^0,w,c
  2206   00107E  A0D8               	btfss	status,0,c
  2207   001080  EF44  F008         	goto	u3751
  2208   001084  EF46  F008         	goto	u3750
  2209   001088                     u3751:
  2210   001088  EF02  F008         	goto	l1078
  2211   00108C                     u3750:
  2212   00108C  C073  F01C         	movff	efgtoa@ou,___flge@ff1
  2213   001090  C074  F01D         	movff	efgtoa@ou+1,___flge@ff1+1
  2214   001094  C075  F01E         	movff	efgtoa@ou+2,___flge@ff1+2
  2215   001098  C076  F01F         	movff	efgtoa@ou+3,___flge@ff1+3
  2216   00109C  C084  F020         	movff	efgtoa@g,___flge@ff2
  2217   0010A0  C085  F021         	movff	efgtoa@g+1,___flge@ff2+1
  2218   0010A4  C086  F022         	movff	efgtoa@g+2,___flge@ff2+2
  2219   0010A8  C087  F023         	movff	efgtoa@g+3,___flge@ff2+3
  2220   0010AC  EC45  F01A         	call	___flge	;wreg free
  2221   0010B0  A0D8               	btfss	status,0,c
  2222   0010B2  EF5D  F008         	goto	u3761
  2223   0010B6  EF5F  F008         	goto	u3760
  2224   0010BA                     u3761:
  2225   0010BA  EF02  F008         	goto	l1078
  2226   0010BE                     u3760:
  2227   0010BE                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2229   0010BE  0100               	movlb	0	; () banked
  2230   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2231   0010C2  5D84               	subwf	efgtoa@g& (0+255),w,b
  2232   0010C4  6E03               	movwf	labs@a^0,c
  2233   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2234   0010C8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2235   0010CA  6E04               	movwf	(labs@a+1)^0,c
  2236   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2237   0010CE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2238   0010D0  6E05               	movwf	(labs@a+2)^0,c
  2239   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2240   0010D4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2241   0010D6  6E06               	movwf	(labs@a+3)^0,c
  2242   0010D8  EC3D  F01C         	call	_labs	;wreg free
  2243   0010DC  BE06               	btfsc	(?_labs+3)^0,7,c
  2244   0010DE  EF7E  F008         	goto	u3770
  2245   0010E2  5006               	movf	(?_labs+3)^0,w,c
  2246   0010E4  1005               	iorwf	(?_labs+2)^0,w,c
  2247   0010E6  1004               	iorwf	(?_labs+1)^0,w,c
  2248   0010E8  E107               	bnz	u3771
  2249   0010EA  0E02               	movlw	2
  2250   0010EC  5C03               	subwf	?_labs^0,w,c
  2251   0010EE  B0D8               	btfsc	status,0,c
  2252   0010F0  EF7C  F008         	goto	u3771
  2253   0010F4  EF7E  F008         	goto	u3770
  2254   0010F8                     u3771:
  2255   0010F8  EFC6  F008         	goto	l3692
  2256   0010FC                     u3770:
  2257   0010FC                     l3682:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2260   0010FC  C088  F084         	movff	efgtoa@u,efgtoa@g
  2261   001100  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2262   001104  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2263   001108  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2266   00110C  EFDF  F008         	goto	l1076
  2267   001110                     l3684:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2270   001110  C088  F003         	movff	efgtoa@u,___fldiv@b
  2271   001114  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2272   001118  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2273   00111C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2274   001120  0E00               	movlw	0
  2275   001122  6E07               	movwf	___fldiv@a^0,c
  2276   001124  0E00               	movlw	0
  2277   001126  6E08               	movwf	(___fldiv@a+1)^0,c
  2278   001128  0E20               	movlw	32
  2279   00112A  6E09               	movwf	(___fldiv@a+2)^0,c
  2280   00112C  0E41               	movlw	65
  2281   00112E  6E0A               	movwf	(___fldiv@a+3)^0,c
  2282   001130  EC89  F010         	call	___fldiv	;wreg free
  2283   001134  C003  F088         	movff	?___fldiv,efgtoa@u
  2284   001138  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2285   00113C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2286   001140  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2287   001144                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2289   001144  0100               	movlb	0	; () banked
  2290   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2291   001148  A0D8               	btfss	status,0,c
  2292   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2293   00114C                     
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2296   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2297   00114E  5D84               	subwf	efgtoa@g& (0+255),w,b
  2298   001150  6E03               	movwf	labs@a^0,c
  2299   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2300   001154  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2301   001156  6E04               	movwf	(labs@a+1)^0,c
  2302   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2303   00115A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2304   00115C  6E05               	movwf	(labs@a+2)^0,c
  2305   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2306   001160  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2307   001162  6E06               	movwf	(labs@a+3)^0,c
  2308   001164  EC3D  F01C         	call	_labs	;wreg free
  2309   001168  BE06               	btfsc	(?_labs+3)^0,7,c
  2310   00116A  EFC4  F008         	goto	u3780
  2311   00116E  5006               	movf	(?_labs+3)^0,w,c
  2312   001170  1005               	iorwf	(?_labs+2)^0,w,c
  2313   001172  1004               	iorwf	(?_labs+1)^0,w,c
  2314   001174  E107               	bnz	u3781
  2315   001176  0E02               	movlw	2
  2316   001178  5C03               	subwf	?_labs^0,w,c
  2317   00117A  B0D8               	btfsc	status,0,c
  2318   00117C  EFC2  F008         	goto	u3781
  2319   001180  EFC4  F008         	goto	u3780
  2320   001184                     u3781:
  2321   001184  EFC6  F008         	goto	l3692
  2322   001188                     u3780:
  2323   001188  EF7E  F008         	goto	l3682
  2324   00118C                     l3692:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2327   00118C  C084  F01C         	movff	efgtoa@g,___flge@ff1
  2328   001190  C085  F01D         	movff	efgtoa@g+1,___flge@ff1+1
  2329   001194  C086  F01E         	movff	efgtoa@g+2,___flge@ff1+2
  2330   001198  C087  F01F         	movff	efgtoa@g+3,___flge@ff1+3
  2331   00119C  C088  F020         	movff	efgtoa@u,___flge@ff2
  2332   0011A0  C089  F021         	movff	efgtoa@u+1,___flge@ff2+1
  2333   0011A4  C08A  F022         	movff	efgtoa@u+2,___flge@ff2+2
  2334   0011A8  C08B  F023         	movff	efgtoa@u+3,___flge@ff2+3
  2335   0011AC  EC45  F01A         	call	___flge	;wreg free
  2336   0011B0  A0D8               	btfss	status,0,c
  2337   0011B2  EFDD  F008         	goto	u3791
  2338   0011B6  EFDF  F008         	goto	u3790
  2339   0011BA                     u3791:
  2340   0011BA  EF88  F008         	goto	l3684
  2341   0011BE                     u3790:
  2342   0011BE                     l1076:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2345   0011BE  C036  F069         	movff	efgtoa@c,efgtoa@mode
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2348   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2349   0011C6                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2351   0011C6  BE57               	btfsc	(_prec+1)^0,7,c
  2352   0011C8  EFE8  F008         	goto	u3801
  2353   0011CC  EFEA  F008         	goto	u3800
  2354   0011D0                     u3801:
  2355   0011D0  EFF0  F008         	goto	l3698
  2356   0011D4                     u3800:
  2357   0011D4  C056  F062         	movff	_prec,efgtoa@p
  2358   0011D8  C057  F063         	movff	_prec+1,efgtoa@p+1
  2359   0011DC  EFF5  F008         	goto	l3700
  2360   0011E0                     l3698:
  2361   0011E0  0E00               	movlw	0
  2362   0011E2  0100               	movlb	0	; () banked
  2363   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2364   0011E6  0E06               	movlw	6
  2365   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2366   0011EA                     l3700:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2369   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2370   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2371   0011F2                     
  2372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2373   0011F2  0100               	movlb	0	; () banked
  2374   0011F4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2375   0011F6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2376   0011F8                     
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2379   0011F8  0E66               	movlw	102
  2380   0011FA  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2381   0011FC  A4D8               	btfss	status,2,c
  2382   0011FE  EF03  F009         	goto	u3811
  2383   001202  EF05  F009         	goto	u3810
  2384   001206                     u3811:
  2385   001206  EF25  F009         	goto	l3714
  2386   00120A                     u3810:
  2387   00120A                     
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2390   00120A  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2391   00120C  EF0C  F009         	goto	u3820
  2392   001210  EF0A  F009         	goto	u3821
  2393   001214                     u3821:
  2394   001214  EF18  F009         	goto	l3710
  2395   001218                     u3820:
  2396   001218                     
  2397                           ; BSR set to: 0
  2398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2399   001218  0E00               	movlw	0
  2400   00121A  6F88               	movwf	efgtoa@u& (0+255),b
  2401   00121C  0E00               	movlw	0
  2402   00121E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2403   001220  0E80               	movlw	128
  2404   001222  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2405   001224  0E3F               	movlw	63
  2406   001226  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2409   001228  0E00               	movlw	0
  2410   00122A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2411   00122C  0E00               	movlw	0
  2412   00122E  6F6F               	movwf	efgtoa@e& (0+255),b
  2413   001230                     l3710:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2417   001230  0E67               	movlw	103
  2418   001232  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2419   001234  B4D8               	btfsc	status,2,c
  2420   001236  EF1F  F009         	goto	u3831
  2421   00123A  EF21  F009         	goto	u3830
  2422   00123E                     u3831:
  2423   00123E  EF25  F009         	goto	l3714
  2424   001242                     u3830:
  2425   001242                     
  2426                           ; BSR set to: 0
  2427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2428   001242  516F               	movf	efgtoa@e& (0+255),w,b
  2429   001244  276D               	addwf	efgtoa@m& (0+255),f,b
  2430   001246  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2431   001248  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2432   00124A                     l3714:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2436   00124A  0E00               	movlw	0
  2437   00124C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2438   00124E  0E00               	movlw	0
  2439   001250  6F77               	movwf	efgtoa@i& (0+255),b
  2440   001252                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2443   001252  C084  F079         	movff	efgtoa@g,efgtoa@h
  2444   001256  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2445   00125A  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2446   00125E  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2447   001262                     
  2448                           ; BSR set to: 0
  2449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2450   001262  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2451   001266  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2452   00126A  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2453   00126E  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2456   001272  EFB6  F009         	goto	l3728
  2457   001276                     l3720:
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2461   001276  C079  F003         	movff	efgtoa@h,___fldiv@b
  2462   00127A  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  2463   00127E  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  2464   001282  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  2465   001286  C088  F007         	movff	efgtoa@u,___fldiv@a
  2466   00128A  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  2467   00128E  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  2468   001292  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  2469   001296  EC89  F010         	call	___fldiv	;wreg free
  2470   00129A  C003  F01C         	movff	?___fldiv,floorf@x
  2471   00129E  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  2472   0012A2  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  2473   0012A6  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  2474   0012AA  EC17  F015         	call	_floorf	;wreg free
  2475   0012AE  C01C  F07D         	movff	?_floorf,efgtoa@l
  2476   0012B2  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  2477   0012B6  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  2478   0012BA  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2481   0012BE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2482   0012C2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2483   0012C6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2484   0012CA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2485   0012CE  ECC2  F019         	call	___fltol	;wreg free
  2486   0012D2  C003  F06B         	movff	?___fltol,efgtoa@d
  2487   0012D6  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  2488   0012DA                     
  2489                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2490   0012DA  C079  F01C         	movff	efgtoa@h,___flsub@b
  2491   0012DE  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  2492   0012E2  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  2493   0012E6  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  2494   0012EA  C07D  F007         	movff	efgtoa@l,___flmul@a
  2495   0012EE  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  2496   0012F2  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  2497   0012F6  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  2498   0012FA  C088  F003         	movff	efgtoa@u,___flmul@b
  2499   0012FE  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2500   001302  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2501   001306  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2502   00130A  EC74  F00E         	call	___flmul	;wreg free
  2503   00130E  C003  F020         	movff	?___flmul,___flsub@a
  2504   001312  C004  F021         	movff	?___flmul+1,___flsub@a+1
  2505   001316  C005  F022         	movff	?___flmul+2,___flsub@a+2
  2506   00131A  C006  F023         	movff	?___flmul+3,___flsub@a+3
  2507   00131E  EC09  F01E         	call	___flsub	;wreg free
  2508   001322  C01C  F079         	movff	?___flsub,efgtoa@h
  2509   001326  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  2510   00132A  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  2511   00132E  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  2512   001332                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2514   001332  C088  F003         	movff	efgtoa@u,___fldiv@b
  2515   001336  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2516   00133A  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2517   00133E  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2518   001342  0E00               	movlw	0
  2519   001344  6E07               	movwf	___fldiv@a^0,c
  2520   001346  0E00               	movlw	0
  2521   001348  6E08               	movwf	(___fldiv@a+1)^0,c
  2522   00134A  0E20               	movlw	32
  2523   00134C  6E09               	movwf	(___fldiv@a+2)^0,c
  2524   00134E  0E41               	movlw	65
  2525   001350  6E0A               	movwf	(___fldiv@a+3)^0,c
  2526   001352  EC89  F010         	call	___fldiv	;wreg free
  2527   001356  C003  F088         	movff	?___fldiv,efgtoa@u
  2528   00135A  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2529   00135E  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2530   001362  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2531   001366                     
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2533   001366  0100               	movlb	0	; () banked
  2534   001368  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2535   00136A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2536   00136C                     l3728:
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2540   00136C  516D               	movf	efgtoa@m& (0+255),w,b
  2541   00136E  5D77               	subwf	efgtoa@i& (0+255),w,b
  2542   001370  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2543   001372  0A80               	xorlw	128
  2544   001374  6E37               	movwf	??_efgtoa^0,c
  2545   001376  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2546   001378  0A80               	xorlw	128
  2547   00137A  5837               	subwfb	??_efgtoa^0,w,c
  2548   00137C  A0D8               	btfss	status,0,c
  2549   00137E  EFC3  F009         	goto	u3841
  2550   001382  EFC5  F009         	goto	u3840
  2551   001386                     u3841:
  2552   001386  EF3B  F009         	goto	l3720
  2553   00138A                     u3840:
  2554   00138A                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2557   00138A  C088  F003         	movff	efgtoa@u,___flmul@b
  2558   00138E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2559   001392  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2560   001396  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2561   00139A  0E00               	movlw	0
  2562   00139C  6E07               	movwf	___flmul@a^0,c
  2563   00139E  0E00               	movlw	0
  2564   0013A0  6E08               	movwf	(___flmul@a+1)^0,c
  2565   0013A2  0EA0               	movlw	160
  2566   0013A4  6E09               	movwf	(___flmul@a+2)^0,c
  2567   0013A6  0E40               	movlw	64
  2568   0013A8  6E0A               	movwf	(___flmul@a+3)^0,c
  2569   0013AA  EC74  F00E         	call	___flmul	;wreg free
  2570   0013AE  C003  F07D         	movff	?___flmul,efgtoa@l
  2571   0013B2  C004  F07E         	movff	?___flmul+1,efgtoa@l+1
  2572   0013B6  C005  F07F         	movff	?___flmul+2,efgtoa@l+2
  2573   0013BA  C006  F080         	movff	?___flmul+3,efgtoa@l+3
  2574   0013BE                     
  2575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2576   0013BE  C079  F01C         	movff	efgtoa@h,___flge@ff1
  2577   0013C2  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  2578   0013C6  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  2579   0013CA  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  2580   0013CE  C07D  F020         	movff	efgtoa@l,___flge@ff2
  2581   0013D2  C07E  F021         	movff	efgtoa@l+1,___flge@ff2+1
  2582   0013D6  C07F  F022         	movff	efgtoa@l+2,___flge@ff2+2
  2583   0013DA  C080  F023         	movff	efgtoa@l+3,___flge@ff2+3
  2584   0013DE  EC45  F01A         	call	___flge	;wreg free
  2585   0013E2  B0D8               	btfsc	status,0,c
  2586   0013E4  EFF6  F009         	goto	u3851
  2587   0013E8  EFF8  F009         	goto	u3850
  2588   0013EC                     u3851:
  2589   0013EC  EF03  F00A         	goto	l3736
  2590   0013F0                     u3850:
  2591   0013F0                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2593   0013F0  0E00               	movlw	0
  2594   0013F2  0100               	movlb	0	; () banked
  2595   0013F4  6F7D               	movwf	efgtoa@l& (0+255),b
  2596   0013F6  0E00               	movlw	0
  2597   0013F8  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2598   0013FA  0E00               	movlw	0
  2599   0013FC  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2600   0013FE  0E00               	movlw	0
  2601   001400  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2604   001402  EF2C  F00A         	goto	l3742
  2605   001406                     l3736:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2608   001406  C079  F003         	movff	efgtoa@h,___fleq@ff1
  2609   00140A  C07A  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  2610   00140E  C07B  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  2611   001412  C07C  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  2612   001416  C07D  F007         	movff	efgtoa@l,___fleq@ff2
  2613   00141A  C07E  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  2614   00141E  C07F  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  2615   001422  C080  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  2616   001426  ECAB  F01B         	call	___fleq	;wreg free
  2617   00142A  A0D8               	btfss	status,0,c
  2618   00142C  EF1A  F00A         	goto	u3861
  2619   001430  EF1C  F00A         	goto	u3860
  2620   001434                     u3861:
  2621   001434  EF2C  F00A         	goto	l3742
  2622   001438                     u3860:
  2623   001438  0100               	movlb	0	; () banked
  2624   00143A  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2625   00143C  EF22  F00A         	goto	u3871
  2626   001440  EF24  F00A         	goto	u3870
  2627   001444                     u3871:
  2628   001444  EF2C  F00A         	goto	l3742
  2629   001448                     u3870:
  2630   001448                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2633   001448  0E00               	movlw	0
  2634   00144A  6F7D               	movwf	efgtoa@l& (0+255),b
  2635   00144C  0E00               	movlw	0
  2636   00144E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2637   001450  0E00               	movlw	0
  2638   001452  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2639   001454  0E00               	movlw	0
  2640   001456  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2641   001458                     l3742:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2644   001458  C084  F003         	movff	efgtoa@g,___fladd@b
  2645   00145C  C085  F004         	movff	efgtoa@g+1,___fladd@b+1
  2646   001460  C086  F005         	movff	efgtoa@g+2,___fladd@b+2
  2647   001464  C087  F006         	movff	efgtoa@g+3,___fladd@b+3
  2648   001468  C07D  F007         	movff	efgtoa@l,___fladd@a
  2649   00146C  C07E  F008         	movff	efgtoa@l+1,___fladd@a+1
  2650   001470  C07F  F009         	movff	efgtoa@l+2,___fladd@a+2
  2651   001474  C080  F00A         	movff	efgtoa@l+3,___fladd@a+3
  2652   001478  EC14  F00C         	call	___fladd	;wreg free
  2653   00147C  C003  F079         	movff	?___fladd,efgtoa@h
  2654   001480  C004  F07A         	movff	?___fladd+1,efgtoa@h+1
  2655   001484  C005  F07B         	movff	?___fladd+2,efgtoa@h+2
  2656   001488  C006  F07C         	movff	?___fladd+3,efgtoa@h+3
  2657   00148C                     
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2659   00148C  C079  F01C         	movff	efgtoa@h,___flge@ff1
  2660   001490  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  2661   001494  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  2662   001498  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  2663   00149C  0E00               	movlw	0
  2664   00149E  6E07               	movwf	___flmul@a^0,c
  2665   0014A0  0E00               	movlw	0
  2666   0014A2  6E08               	movwf	(___flmul@a+1)^0,c
  2667   0014A4  0E20               	movlw	32
  2668   0014A6  6E09               	movwf	(___flmul@a+2)^0,c
  2669   0014A8  0E41               	movlw	65
  2670   0014AA  6E0A               	movwf	(___flmul@a+3)^0,c
  2671   0014AC  C073  F003         	movff	efgtoa@ou,___flmul@b
  2672   0014B0  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  2673   0014B4  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  2674   0014B8  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  2675   0014BC  EC74  F00E         	call	___flmul	;wreg free
  2676   0014C0  C003  F020         	movff	?___flmul,___flge@ff2
  2677   0014C4  C004  F021         	movff	?___flmul+1,___flge@ff2+1
  2678   0014C8  C005  F022         	movff	?___flmul+2,___flge@ff2+2
  2679   0014CC  C006  F023         	movff	?___flmul+3,___flge@ff2+3
  2680   0014D0  EC45  F01A         	call	___flge	;wreg free
  2681   0014D4  A0D8               	btfss	status,0,c
  2682   0014D6  EF6F  F00A         	goto	u3881
  2683   0014DA  EF71  F00A         	goto	u3880
  2684   0014DE                     u3881:
  2685   0014DE  EF9A  F00A         	goto	l3754
  2686   0014E2                     u3880:
  2687   0014E2                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2689   0014E2  0100               	movlb	0	; () banked
  2690   0014E4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2691   0014E6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2692   0014E8                     
  2693                           ; BSR set to: 0
  2694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2695   0014E8  C073  F003         	movff	efgtoa@ou,___flmul@b
  2696   0014EC  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  2697   0014F0  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  2698   0014F4  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  2699   0014F8  0E00               	movlw	0
  2700   0014FA  6E07               	movwf	___flmul@a^0,c
  2701   0014FC  0E00               	movlw	0
  2702   0014FE  6E08               	movwf	(___flmul@a+1)^0,c
  2703   001500  0E20               	movlw	32
  2704   001502  6E09               	movwf	(___flmul@a+2)^0,c
  2705   001504  0E41               	movlw	65
  2706   001506  6E0A               	movwf	(___flmul@a+3)^0,c
  2707   001508  EC74  F00E         	call	___flmul	;wreg free
  2708   00150C  C003  F073         	movff	?___flmul,efgtoa@ou
  2709   001510  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  2710   001514  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  2711   001518  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  2712   00151C                     
  2713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2714   00151C  0E66               	movlw	102
  2715   00151E  0100               	movlb	0	; () banked
  2716   001520  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2717   001522  A4D8               	btfss	status,2,c
  2718   001524  EF96  F00A         	goto	u3891
  2719   001528  EF98  F00A         	goto	u3890
  2720   00152C                     u3891:
  2721   00152C  EF9A  F00A         	goto	l3754
  2722   001530                     u3890:
  2723   001530                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2726   001530  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2727   001532  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2728   001534                     l3754:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2731   001534  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2732   001538  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2733   00153C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2734   001540  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2735   001544                     
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2737   001544  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2738   001548  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2739   00154C                     
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2741   00154C  0E00               	movlw	0
  2742   00154E  0100               	movlb	0	; () banked
  2743   001550  6F68               	movwf	efgtoa@pp& (0+255),b
  2744   001552                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2747   001552  0E00               	movlw	0
  2748   001554  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2749   001556  0E00               	movlw	0
  2750   001558  6F64               	movwf	efgtoa@t& (0+255),b
  2751   00155A                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2754   00155A  0E00               	movlw	0
  2755   00155C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2756   00155E  0E00               	movlw	0
  2757   001560  6F77               	movwf	efgtoa@i& (0+255),b
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2760   001562  EF98  F00B         	goto	l3804
  2761   001566                     l3764:
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2765   001566  C079  F003         	movff	efgtoa@h,___fldiv@b
  2766   00156A  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  2767   00156E  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  2768   001572  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  2769   001576  C088  F007         	movff	efgtoa@u,___fldiv@a
  2770   00157A  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  2771   00157E  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  2772   001582  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  2773   001586  EC89  F010         	call	___fldiv	;wreg free
  2774   00158A  C003  F01C         	movff	?___fldiv,floorf@x
  2775   00158E  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  2776   001592  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  2777   001596  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  2778   00159A  EC17  F015         	call	_floorf	;wreg free
  2779   00159E  C01C  F07D         	movff	?_floorf,efgtoa@l
  2780   0015A2  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  2781   0015A6  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  2782   0015AA  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2785   0015AE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2786   0015B2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2787   0015B6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2788   0015BA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2789   0015BE  ECC2  F019         	call	___fltol	;wreg free
  2790   0015C2  BE04               	btfsc	(?___fltol+1)^0,7,c
  2791   0015C4  EFEF  F00A         	goto	u3900
  2792   0015C8  5004               	movf	(?___fltol+1)^0,w,c
  2793   0015CA  E107               	bnz	u3901
  2794   0015CC  0E0A               	movlw	10
  2795   0015CE  5C03               	subwf	?___fltol^0,w,c
  2796   0015D0  B0D8               	btfsc	status,0,c
  2797   0015D2  EFED  F00A         	goto	u3901
  2798   0015D6  EFEF  F00A         	goto	u3900
  2799   0015DA                     u3901:
  2800   0015DA  EFFF  F00A         	goto	l3768
  2801   0015DE                     u3900:
  2802   0015DE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2803   0015E2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2804   0015E6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2805   0015EA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2806   0015EE  ECC2  F019         	call	___fltol	;wreg free
  2807   0015F2  C003  F06B         	movff	?___fltol,efgtoa@d
  2808   0015F6  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  2809   0015FA  EF04  F00B         	goto	l1106
  2810   0015FE                     l3768:
  2811   0015FE  0E00               	movlw	0
  2812   001600  0100               	movlb	0	; () banked
  2813   001602  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2814   001604  0E09               	movlw	9
  2815   001606  6F6B               	movwf	efgtoa@d& (0+255),b
  2816   001608                     l1106:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2819   001608  0100               	movlb	0	; () banked
  2820   00160A  5168               	movf	efgtoa@pp& (0+255),w,b
  2821   00160C  A4D8               	btfss	status,2,c
  2822   00160E  EF0B  F00B         	goto	u3911
  2823   001612  EF0D  F00B         	goto	u3910
  2824   001616                     u3911:
  2825   001616  EF35  F00B         	goto	l3788
  2826   00161A                     u3910:
  2827   00161A                     
  2828                           ; BSR set to: 0
  2829   00161A  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2830   00161C  EF14  F00B         	goto	u3920
  2831   001620  EF12  F00B         	goto	u3921
  2832   001624                     u3921:
  2833   001624  EF35  F00B         	goto	l3788
  2834   001628                     u3920:
  2835   001628                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2838   001628  0E50               	movlw	low _dbuf
  2839   00162A  2582               	addwf	efgtoa@n& (0+255),w,b
  2840   00162C  6ED9               	movwf	fsr2l,c
  2841   00162E  0E01               	movlw	high _dbuf
  2842   001630  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2843   001632  6EDA               	movwf	fsr2h,c
  2844   001634  0E2E               	movlw	46
  2845   001636  6EDF               	movwf	indf2,c
  2846   001638                     
  2847                           ; BSR set to: 0
  2848   001638  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2849   00163A  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2850   00163C                     
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2853   00163C  0771               	decf	efgtoa@w& (0+255),f,b
  2854   00163E  A0D8               	btfss	status,0,c
  2855   001640  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2856   001642                     
  2857                           ; BSR set to: 0
  2858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2859   001642  0E01               	movlw	1
  2860   001644  6F68               	movwf	efgtoa@pp& (0+255),b
  2861   001646  EF35  F00B         	goto	l3788
  2862   00164A                     l3780:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2866   00164A  0E50               	movlw	low _dbuf
  2867   00164C  2582               	addwf	efgtoa@n& (0+255),w,b
  2868   00164E  6ED9               	movwf	fsr2l,c
  2869   001650  0E01               	movlw	high _dbuf
  2870   001652  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2871   001654  6EDA               	movwf	fsr2h,c
  2872   001656  0E30               	movlw	48
  2873   001658  6EDF               	movwf	indf2,c
  2874   00165A                     
  2875                           ; BSR set to: 0
  2876   00165A  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2877   00165C  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2878   00165E                     
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2881   00165E  0771               	decf	efgtoa@w& (0+255),f,b
  2882   001660  A0D8               	btfss	status,0,c
  2883   001662  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2884   001664                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2887   001664  0764               	decf	efgtoa@t& (0+255),f,b
  2888   001666  A0D8               	btfss	status,0,c
  2889   001668  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2890   00166A                     l3788:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2894   00166A  5164               	movf	efgtoa@t& (0+255),w,b
  2895   00166C  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2896   00166E  A4D8               	btfss	status,2,c
  2897   001670  EF3C  F00B         	goto	u3931
  2898   001674  EF3E  F00B         	goto	u3930
  2899   001678                     u3931:
  2900   001678  EF25  F00B         	goto	l3780
  2901   00167C                     u3930:
  2902   00167C                     
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2905   00167C  0E50               	movlw	low _dbuf
  2906   00167E  2582               	addwf	efgtoa@n& (0+255),w,b
  2907   001680  6ED9               	movwf	fsr2l,c
  2908   001682  0E01               	movlw	high _dbuf
  2909   001684  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2910   001686  6EDA               	movwf	fsr2h,c
  2911   001688  516B               	movf	efgtoa@d& (0+255),w,b
  2912   00168A  0F30               	addlw	48
  2913   00168C  6EDF               	movwf	indf2,c
  2914   00168E                     
  2915                           ; BSR set to: 0
  2916   00168E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2917   001690  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2918   001692                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2921   001692  0771               	decf	efgtoa@w& (0+255),f,b
  2922   001694  A0D8               	btfss	status,0,c
  2923   001696  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2924   001698                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2927   001698  C079  F01C         	movff	efgtoa@h,___flsub@b
  2928   00169C  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  2929   0016A0  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  2930   0016A4  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  2931   0016A8  C07D  F007         	movff	efgtoa@l,___flmul@a
  2932   0016AC  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  2933   0016B0  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  2934   0016B4  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  2935   0016B8  C088  F003         	movff	efgtoa@u,___flmul@b
  2936   0016BC  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2937   0016C0  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2938   0016C4  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2939   0016C8  EC74  F00E         	call	___flmul	;wreg free
  2940   0016CC  C003  F020         	movff	?___flmul,___flsub@a
  2941   0016D0  C004  F021         	movff	?___flmul+1,___flsub@a+1
  2942   0016D4  C005  F022         	movff	?___flmul+2,___flsub@a+2
  2943   0016D8  C006  F023         	movff	?___flmul+3,___flsub@a+3
  2944   0016DC  EC09  F01E         	call	___flsub	;wreg free
  2945   0016E0  C01C  F079         	movff	?___flsub,efgtoa@h
  2946   0016E4  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  2947   0016E8  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  2948   0016EC  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  2949   0016F0                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2951   0016F0  C088  F003         	movff	efgtoa@u,___fldiv@b
  2952   0016F4  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2953   0016F8  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2954   0016FC  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2955   001700  0E00               	movlw	0
  2956   001702  6E07               	movwf	___fldiv@a^0,c
  2957   001704  0E00               	movlw	0
  2958   001706  6E08               	movwf	(___fldiv@a+1)^0,c
  2959   001708  0E20               	movlw	32
  2960   00170A  6E09               	movwf	(___fldiv@a+2)^0,c
  2961   00170C  0E41               	movlw	65
  2962   00170E  6E0A               	movwf	(___fldiv@a+3)^0,c
  2963   001710  EC89  F010         	call	___fldiv	;wreg free
  2964   001714  C003  F088         	movff	?___fldiv,efgtoa@u
  2965   001718  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2966   00171C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2967   001720  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2968   001724                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2970   001724  0100               	movlb	0	; () banked
  2971   001726  0760               	decf	efgtoa@ne& (0+255),f,b
  2972   001728  A0D8               	btfss	status,0,c
  2973   00172A  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2974   00172C                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2977   00172C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2978   00172E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2979   001730                     l3804:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2983   001730  516D               	movf	efgtoa@m& (0+255),w,b
  2984   001732  5D77               	subwf	efgtoa@i& (0+255),w,b
  2985   001734  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2986   001736  0A80               	xorlw	128
  2987   001738  6E37               	movwf	??_efgtoa^0,c
  2988   00173A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2989   00173C  0A80               	xorlw	128
  2990   00173E  5837               	subwfb	??_efgtoa^0,w,c
  2991   001740  B0D8               	btfsc	status,0,c
  2992   001742  EFA5  F00B         	goto	u3941
  2993   001746  EFA7  F00B         	goto	u3940
  2994   00174A                     u3941:
  2995   00174A  EFB5  F00B         	goto	l3808
  2996   00174E                     u3940:
  2997   00174E                     
  2998                           ; BSR set to: 0
  2999   00174E  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3000   001750  EFB3  F00B         	goto	u3951
  3001   001754  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3002   001756  E109               	bnz	u3950
  3003   001758  0E4B               	movlw	75
  3004   00175A  5D82               	subwf	efgtoa@n& (0+255),w,b
  3005   00175C  A0D8               	btfss	status,0,c
  3006   00175E  EFB3  F00B         	goto	u3951
  3007   001762  EFB5  F00B         	goto	u3950
  3008   001766                     u3951:
  3009   001766  EFB3  F00A         	goto	l3764
  3010   00176A                     u3950:
  3011   00176A                     l3808:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3015   00176A  0E00               	movlw	0
  3016   00176C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3017   00176E  0E4F               	movlw	79
  3018   001770  6F77               	movwf	efgtoa@i& (0+255),b
  3019   001772                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3022   001772  0E50               	movlw	low _dbuf
  3023   001774  2577               	addwf	efgtoa@i& (0+255),w,b
  3024   001776  6ED9               	movwf	fsr2l,c
  3025   001778  0E01               	movlw	high _dbuf
  3026   00177A  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3027   00177C  6EDA               	movwf	fsr2h,c
  3028   00177E  0E00               	movlw	0
  3029   001780  6EDF               	movwf	indf2,c
  3030   001782                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3033   001782  0E50               	movlw	low _dbuf
  3034   001784  6E37               	movwf	??_efgtoa^0,c
  3035   001786  0E01               	movlw	high _dbuf
  3036   001788  6E38               	movwf	(??_efgtoa+1)^0,c
  3037   00178A  5182               	movf	efgtoa@n& (0+255),w,b
  3038   00178C  5E37               	subwf	??_efgtoa^0,f,c
  3039   00178E  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3040   001790  5A38               	subwfb	(??_efgtoa+1)^0,f,c
  3041   001792  5177               	movf	efgtoa@i& (0+255),w,b
  3042   001794  2437               	addwf	??_efgtoa^0,w,c
  3043   001796  6E03               	movwf	memcpy@d1^0,c
  3044   001798  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3045   00179A  2038               	addwfc	(??_efgtoa+1)^0,w,c
  3046   00179C  6E04               	movwf	(memcpy@d1+1)^0,c
  3047   00179E  0E50               	movlw	low _dbuf
  3048   0017A0  6E05               	movwf	memcpy@s1^0,c
  3049   0017A2  0E01               	movlw	high _dbuf
  3050   0017A4  6E06               	movwf	(memcpy@s1+1)^0,c
  3051   0017A6  C082  F007         	movff	efgtoa@n,memcpy@n
  3052   0017AA  C083  F008         	movff	efgtoa@n+1,memcpy@n+1
  3053   0017AE  EC1B  F01D         	call	_memcpy	;wreg free
  3054   0017B2                     
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3056   0017B2  0100               	movlb	0	; () banked
  3057   0017B4  5182               	movf	efgtoa@n& (0+255),w,b
  3058   0017B6  5D77               	subwf	efgtoa@i& (0+255),w,b
  3059   0017B8  6F82               	movwf	efgtoa@n& (0+255),b
  3060   0017BA  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3061   0017BC  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3062   0017BE  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3063   0017C0                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3066   0017C0  5181               	movf	efgtoa@sign& (0+255),w,b
  3067   0017C2  A4D8               	btfss	status,2,c
  3068   0017C4  EFE6  F00B         	goto	u3961
  3069   0017C8  EFE9  F00B         	goto	u3960
  3070   0017CC                     u3961:
  3071   0017CC  0E01               	movlw	1
  3072   0017CE  EFEA  F00B         	goto	u3970
  3073   0017D2                     u3960:
  3074   0017D2  0E00               	movlw	0
  3075   0017D4                     u3970:
  3076   0017D4  6F77               	movwf	efgtoa@i& (0+255),b
  3077   0017D6  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3078   0017D8                     
  3079                           ; BSR set to: 0
  3080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3081   0017D8  5181               	movf	efgtoa@sign& (0+255),w,b
  3082   0017DA  B4D8               	btfsc	status,2,c
  3083   0017DC  EFF2  F00B         	goto	u3981
  3084   0017E0  EFF4  F00B         	goto	u3980
  3085   0017E4                     u3981:
  3086   0017E4  EFFF  F00B         	goto	l3822
  3087   0017E8                     u3980:
  3088   0017E8                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3091   0017E8  0782               	decf	efgtoa@n& (0+255),f,b
  3092   0017EA  A0D8               	btfss	status,0,c
  3093   0017EC  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3094   0017EE  0E50               	movlw	low _dbuf
  3095   0017F0  2582               	addwf	efgtoa@n& (0+255),w,b
  3096   0017F2  6ED9               	movwf	fsr2l,c
  3097   0017F4  0E01               	movlw	high _dbuf
  3098   0017F6  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3099   0017F8  6EDA               	movwf	fsr2h,c
  3100   0017FA  C081  FFDF         	movff	efgtoa@sign,indf2
  3101   0017FE                     l3822:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3105   0017FE  5177               	movf	efgtoa@i& (0+255),w,b
  3106   001800  5F71               	subwf	efgtoa@w& (0+255),f,b
  3107   001802  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3108   001804  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3109   001806                     
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3112   001806  C030  F013         	movff	efgtoa@fp,pad@fp
  3113   00180A  C031  F014         	movff	efgtoa@fp+1,pad@fp+1
  3114   00180E  0E50               	movlw	low _dbuf
  3115   001810  2582               	addwf	efgtoa@n& (0+255),w,b
  3116   001812  6E15               	movwf	pad@buf^0,c
  3117   001814  0E01               	movlw	high _dbuf
  3118   001816  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3119   001818  6E16               	movwf	(pad@buf+1)^0,c
  3120   00181A  C071  F017         	movff	efgtoa@w,pad@p
  3121   00181E  C072  F018         	movff	efgtoa@w+1,pad@p+1
  3122   001822  EC00  F01C         	call	_pad	;wreg free
  3123   001826                     l1073:
  3124   001826  0012               	return		;funcret
  3125   001828                     __end_of_efgtoa:
  3126                           	callstack 0
  3127                           
  3128 ;; *************** function _strcpy *****************
  3129 ;; Defined at:
  3130 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  dest            2    2[COMRAM] PTR unsigned char 
  3133 ;;		 -> dbuf(80), 
  3134 ;;  src             2    4[COMRAM] PTR const unsigned char 
  3135 ;;		 -> STR_5(4), STR_2(4), 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  d               2    8[COMRAM] PTR unsigned char 
  3138 ;;		 -> dbuf(80), 
  3139 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3140 ;;		 -> STR_5(4), STR_2(4), 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2    2[COMRAM] PTR unsigned char 
  3143 ;; Registers used:
  3144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;Total ram usage:        8 bytes
  3155 ;; Hardware stack levels used: 1
  3156 ;; Hardware stack levels required when called: 4
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_efgtoa
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text5
  3165   003C58                     __ptext5:
  3166                           	callstack 0
  3167   003C58                     _strcpy:
  3168                           	callstack 22
  3169   003C58  C005  F007         	movff	strcpy@src,strcpy@s
  3170   003C5C  C006  F008         	movff	strcpy@src+1,strcpy@s+1
  3171   003C60  C003  F009         	movff	strcpy@dest,strcpy@d
  3172   003C64  C004  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3173   003C68                     l3496:
  3174   003C68  C007  FFF6         	movff	strcpy@s,tblptrl
  3175   003C6C  C008  FFF7         	movff	strcpy@s+1,tblptrh
  3176   003C70  4A07               	infsnz	strcpy@s^0,f,c
  3177   003C72  2A08               	incf	(strcpy@s+1)^0,f,c
  3178   003C74                     	if	0	;tblptru may be non-zero
  3179   003C74                     	endif
  3180   003C74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3181   003C74  0E00               	movlw	low (__mediumconst shr (0+16))
  3182   003C76  6EF8               	movwf	tblptru,c
  3183   003C78                     	endif
  3184   003C78  C009  FFD9         	movff	strcpy@d,fsr2l
  3185   003C7C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3186   003C80  4A09               	infsnz	strcpy@d^0,f,c
  3187   003C82  2A0A               	incf	(strcpy@d+1)^0,f,c
  3188   003C84  0008               	tblrd		*
  3189   003C86  CFF5 FFDF          	movff	tablat,indf2
  3190   003C8A  50DF               	movf	indf2,w,c
  3191   003C8C  A4D8               	btfss	status,2,c
  3192   003C8E  EF4B  F01E         	goto	u3441
  3193   003C92  EF4D  F01E         	goto	u3440
  3194   003C96                     u3441:
  3195   003C96  EF34  F01E         	goto	l3496
  3196   003C9A                     u3440:
  3197   003C9A  0012               	return		;funcret
  3198   003C9C                     __end_of_strcpy:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _memcpy *****************
  3202 ;; Defined at:
  3203 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  d1              2    2[COMRAM] PTR void 
  3206 ;;		 -> dbuf(80), 
  3207 ;;  s1              2    4[COMRAM] PTR const void 
  3208 ;;		 -> dbuf(80), 
  3209 ;;  n               2    6[COMRAM] unsigned int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3212 ;;		 -> dbuf(80), 
  3213 ;;  d               2    8[COMRAM] PTR unsigned char 
  3214 ;;		 -> dbuf(80), 
  3215 ;;  tmp             1   12[COMRAM] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2    2[COMRAM] PTR void 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3225 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;Total ram usage:       11 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 4
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_efgtoa
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text6
  3240   003A36                     __ptext6:
  3241                           	callstack 0
  3242   003A36                     _memcpy:
  3243                           	callstack 22
  3244   003A36  C005  F00B         	movff	memcpy@s1,memcpy@s
  3245   003A3A  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  3246   003A3E  C003  F009         	movff	memcpy@d1,memcpy@d
  3247   003A42  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  3248   003A46  EF35  F01D         	goto	l3540
  3249   003A4A                     l3532:
  3250   003A4A  C00B  FFD9         	movff	memcpy@s,fsr2l
  3251   003A4E  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  3252   003A52  50DF               	movf	indf2,w,c
  3253   003A54  6E0D               	movwf	memcpy@tmp^0,c
  3254   003A56  4A0B               	infsnz	memcpy@s^0,f,c
  3255   003A58  2A0C               	incf	(memcpy@s+1)^0,f,c
  3256   003A5A  C009  FFD9         	movff	memcpy@d,fsr2l
  3257   003A5E  C00A  FFDA         	movff	memcpy@d+1,fsr2h
  3258   003A62  C00D  FFDF         	movff	memcpy@tmp,indf2
  3259   003A66  4A09               	infsnz	memcpy@d^0,f,c
  3260   003A68  2A0A               	incf	(memcpy@d+1)^0,f,c
  3261   003A6A                     l3540:
  3262   003A6A  0607               	decf	memcpy@n^0,f,c
  3263   003A6C  A0D8               	btfss	status,0,c
  3264   003A6E  0608               	decf	(memcpy@n+1)^0,f,c
  3265   003A70  2807               	incf	memcpy@n^0,w,c
  3266   003A72  E106               	bnz	u3561
  3267   003A74  2808               	incf	(memcpy@n+1)^0,w,c
  3268   003A76  A4D8               	btfss	status,2,c
  3269   003A78  EF40  F01D         	goto	u3561
  3270   003A7C  EF42  F01D         	goto	u3560
  3271   003A80                     u3561:
  3272   003A80  EF25  F01D         	goto	l3532
  3273   003A84                     u3560:
  3274   003A84  0012               	return		;funcret
  3275   003A86                     __end_of_memcpy:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _labs *****************
  3279 ;; Defined at:
  3280 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  a               4    2[COMRAM] long 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  4    2[COMRAM] long 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;Total ram usage:        8 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 4
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_efgtoa
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text7
  3309   00387A                     __ptext7:
  3310                           	callstack 0
  3311   00387A                     _labs:
  3312                           	callstack 22
  3313   00387A  BE06               	btfsc	(labs@a+3)^0,7,c
  3314   00387C  EF4C  F01C         	goto	u3450
  3315   003880  5006               	movf	(labs@a+3)^0,w,c
  3316   003882  1005               	iorwf	(labs@a+2)^0,w,c
  3317   003884  1004               	iorwf	(labs@a+1)^0,w,c
  3318   003886  E106               	bnz	u3451
  3319   003888  0403               	decf	labs@a^0,w,c
  3320   00388A  B0D8               	btfsc	status,0,c
  3321   00388C  EF4A  F01C         	goto	u3451
  3322   003890  EF4C  F01C         	goto	u3450
  3323   003894                     u3451:
  3324   003894  EF67  F01C         	goto	l1178
  3325   003898                     u3450:
  3326   003898  C003  F007         	movff	labs@a,??_labs
  3327   00389C  C004  F008         	movff	labs@a+1,??_labs+1
  3328   0038A0  C005  F009         	movff	labs@a+2,??_labs+2
  3329   0038A4  C006  F00A         	movff	labs@a+3,??_labs+3
  3330   0038A8  1E07               	comf	??_labs^0,f,c
  3331   0038AA  1E08               	comf	(??_labs+1)^0,f,c
  3332   0038AC  1E09               	comf	(??_labs+2)^0,f,c
  3333   0038AE  1E0A               	comf	(??_labs+3)^0,f,c
  3334   0038B0  2A07               	incf	??_labs^0,f,c
  3335   0038B2  0E00               	movlw	0
  3336   0038B4  2208               	addwfc	(??_labs+1)^0,f,c
  3337   0038B6  2209               	addwfc	(??_labs+2)^0,f,c
  3338   0038B8  220A               	addwfc	(??_labs+3)^0,f,c
  3339   0038BA  C007  F003         	movff	??_labs,?_labs
  3340   0038BE  C008  F004         	movff	??_labs+1,?_labs+1
  3341   0038C2  C009  F005         	movff	??_labs+2,?_labs+2
  3342   0038C6  C00A  F006         	movff	??_labs+3,?_labs+3
  3343   0038CA  EF6F  F01C         	goto	l1181
  3344   0038CE                     l1178:
  3345   0038CE  C003  F003         	movff	labs@a,?_labs
  3346   0038D2  C004  F004         	movff	labs@a+1,?_labs+1
  3347   0038D6  C005  F005         	movff	labs@a+2,?_labs+2
  3348   0038DA  C006  F006         	movff	labs@a+3,?_labs+3
  3349   0038DE                     l1181:
  3350   0038DE  0012               	return		;funcret
  3351   0038E0                     __end_of_labs:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _floorf *****************
  3355 ;; Defined at:
  3356 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  x               4   27[COMRAM] float 
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;  u               4   43[COMRAM] struct .
  3361 ;;  m               4   37[COMRAM] unsigned long 
  3362 ;;  e               2   41[COMRAM] int 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  4   27[COMRAM] float 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;Total ram usage:       20 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 4
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_efgtoa
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text8
  3387   002A2E                     __ptext8:
  3388                           	callstack 0
  3389   002A2E                     _floorf:
  3390                           	callstack 22
  3391   002A2E  C0E5  F02C         	movff	floorf@F526,floorf@u
  3392   002A32  C0E6  F02D         	movff	floorf@F526+1,floorf@u+1
  3393   002A36  C0E7  F02E         	movff	floorf@F526+2,floorf@u+2
  3394   002A3A  C0E8  F02F         	movff	floorf@F526+3,floorf@u+3
  3395   002A3E  C01C  F02C         	movff	floorf@x,floorf@u
  3396   002A42  C01D  F02D         	movff	floorf@x+1,floorf@u+1
  3397   002A46  C01E  F02E         	movff	floorf@x+2,floorf@u+2
  3398   002A4A  C01F  F02F         	movff	floorf@x+3,floorf@u+3
  3399   002A4E  0E81               	movlw	129
  3400   002A50  6E20               	movwf	??_floorf^0,c
  3401   002A52  0EFF               	movlw	255
  3402   002A54  6E21               	movwf	(??_floorf+1)^0,c
  3403   002A56  C02C  F022         	movff	floorf@u,??_floorf+2
  3404   002A5A  C02D  F023         	movff	floorf@u+1,??_floorf+3
  3405   002A5E  C02E  F024         	movff	floorf@u+2,??_floorf+4
  3406   002A62  C02F  F025         	movff	floorf@u+3,??_floorf+5
  3407   002A66  0E18               	movlw	24
  3408   002A68  EF3B  F015         	goto	u3460
  3409   002A6C                     u3465:
  3410   002A6C  90D8               	bcf	status,0,c
  3411   002A6E  3225               	rrcf	(??_floorf+5)^0,f,c
  3412   002A70  3224               	rrcf	(??_floorf+4)^0,f,c
  3413   002A72  3223               	rrcf	(??_floorf+3)^0,f,c
  3414   002A74  3222               	rrcf	(??_floorf+2)^0,f,c
  3415   002A76                     u3460:
  3416   002A76  2EE8               	decfsz	wreg,f,c
  3417   002A78  EF36  F015         	goto	u3465
  3418   002A7C  5022               	movf	(??_floorf+2)^0,w,c
  3419   002A7E  2420               	addwf	??_floorf^0,w,c
  3420   002A80  6E2A               	movwf	floorf@e^0,c
  3421   002A82  0E00               	movlw	0
  3422   002A84  2021               	addwfc	(??_floorf+1)^0,w,c
  3423   002A86  6E2B               	movwf	(floorf@e+1)^0,c
  3424   002A88  BE2B               	btfsc	(floorf@e+1)^0,7,c
  3425   002A8A  EF50  F015         	goto	u3471
  3426   002A8E  502B               	movf	(floorf@e+1)^0,w,c
  3427   002A90  E109               	bnz	u3470
  3428   002A92  0E17               	movlw	23
  3429   002A94  5C2A               	subwf	floorf@e^0,w,c
  3430   002A96  A0D8               	btfss	status,0,c
  3431   002A98  EF50  F015         	goto	u3471
  3432   002A9C  EF52  F015         	goto	u3470
  3433   002AA0                     u3471:
  3434   002AA0  EF5C  F015         	goto	l3508
  3435   002AA4                     u3470:
  3436   002AA4                     l3506:
  3437   002AA4  C01C  F01C         	movff	floorf@x,?_floorf
  3438   002AA8  C01D  F01D         	movff	floorf@x+1,?_floorf+1
  3439   002AAC  C01E  F01E         	movff	floorf@x+2,?_floorf+2
  3440   002AB0  C01F  F01F         	movff	floorf@x+3,?_floorf+3
  3441   002AB4  EF1F  F016         	goto	l1167
  3442   002AB8                     l3508:
  3443   002AB8  BE2B               	btfsc	(floorf@e+1)^0,7,c
  3444   002ABA  EF61  F015         	goto	u3481
  3445   002ABE  EF63  F015         	goto	u3480
  3446   002AC2                     u3481:
  3447   002AC2  EFD3  F015         	goto	l3518
  3448   002AC6                     u3480:
  3449   002AC6  C02A  F020         	movff	floorf@e,??_floorf
  3450   002ACA  0EFF               	movlw	255
  3451   002ACC  6E21               	movwf	(??_floorf+1)^0,c
  3452   002ACE  0EFF               	movlw	255
  3453   002AD0  6E22               	movwf	(??_floorf+2)^0,c
  3454   002AD2  0E7F               	movlw	127
  3455   002AD4  6E23               	movwf	(??_floorf+3)^0,c
  3456   002AD6  0E00               	movlw	0
  3457   002AD8  6E24               	movwf	(??_floorf+4)^0,c
  3458   002ADA                     u3495:
  3459   002ADA  6620               	tstfsz	??_floorf^0,c
  3460   002ADC  EF72  F015         	goto	u3496
  3461   002AE0  EF7A  F015         	goto	u3497
  3462   002AE4                     u3496:
  3463   002AE4  3424               	rlcf	(??_floorf+4)^0,w,c
  3464   002AE6  3224               	rrcf	(??_floorf+4)^0,f,c
  3465   002AE8  3223               	rrcf	(??_floorf+3)^0,f,c
  3466   002AEA  3222               	rrcf	(??_floorf+2)^0,f,c
  3467   002AEC  3221               	rrcf	(??_floorf+1)^0,f,c
  3468   002AEE  2E20               	decfsz	??_floorf^0,f,c
  3469   002AF0  EF6D  F015         	goto	u3495
  3470   002AF4                     u3497:
  3471   002AF4  C021  F026         	movff	??_floorf+1,floorf@m
  3472   002AF8  C022  F027         	movff	??_floorf+2,floorf@m+1
  3473   002AFC  C023  F028         	movff	??_floorf+3,floorf@m+2
  3474   002B00  C024  F029         	movff	??_floorf+4,floorf@m+3
  3475   002B04  5026               	movf	floorf@m^0,w,c
  3476   002B06  142C               	andwf	floorf@u^0,w,c
  3477   002B08  6E20               	movwf	??_floorf^0,c
  3478   002B0A  5027               	movf	(floorf@m+1)^0,w,c
  3479   002B0C  142D               	andwf	(floorf@u+1)^0,w,c
  3480   002B0E  6E21               	movwf	(??_floorf+1)^0,c
  3481   002B10  5028               	movf	(floorf@m+2)^0,w,c
  3482   002B12  142E               	andwf	(floorf@u+2)^0,w,c
  3483   002B14  6E22               	movwf	(??_floorf+2)^0,c
  3484   002B16  5029               	movf	(floorf@m+3)^0,w,c
  3485   002B18  142F               	andwf	(floorf@u+3)^0,w,c
  3486   002B1A  6E23               	movwf	(??_floorf+3)^0,c
  3487   002B1C  5020               	movf	??_floorf^0,w,c
  3488   002B1E  1021               	iorwf	(??_floorf+1)^0,w,c
  3489   002B20  1022               	iorwf	(??_floorf+2)^0,w,c
  3490   002B22  1023               	iorwf	(??_floorf+3)^0,w,c
  3491   002B24  A4D8               	btfss	status,2,c
  3492   002B26  EF97  F015         	goto	u3501
  3493   002B2A  EF99  F015         	goto	u3500
  3494   002B2E                     u3501:
  3495   002B2E  EF9B  F015         	goto	l3514
  3496   002B32                     u3500:
  3497   002B32  EF52  F015         	goto	l3506
  3498   002B36                     l3514:
  3499   002B36  C02C  F020         	movff	floorf@u,??_floorf
  3500   002B3A  C02D  F021         	movff	floorf@u+1,??_floorf+1
  3501   002B3E  C02E  F022         	movff	floorf@u+2,??_floorf+2
  3502   002B42  C02F  F023         	movff	floorf@u+3,??_floorf+3
  3503   002B46  0E20               	movlw	32
  3504   002B48  EFAB  F015         	goto	u3510
  3505   002B4C                     u3515:
  3506   002B4C  90D8               	bcf	status,0,c
  3507   002B4E  3223               	rrcf	(??_floorf+3)^0,f,c
  3508   002B50  3222               	rrcf	(??_floorf+2)^0,f,c
  3509   002B52  3221               	rrcf	(??_floorf+1)^0,f,c
  3510   002B54  3220               	rrcf	??_floorf^0,f,c
  3511   002B56                     u3510:
  3512   002B56  2EE8               	decfsz	wreg,f,c
  3513   002B58  EFA6  F015         	goto	u3515
  3514   002B5C  5020               	movf	??_floorf^0,w,c
  3515   002B5E  1021               	iorwf	(??_floorf+1)^0,w,c
  3516   002B60  1022               	iorwf	(??_floorf+2)^0,w,c
  3517   002B62  1023               	iorwf	(??_floorf+3)^0,w,c
  3518   002B64  B4D8               	btfsc	status,2,c
  3519   002B66  EFB7  F015         	goto	u3521
  3520   002B6A  EFB9  F015         	goto	u3520
  3521   002B6E                     u3521:
  3522   002B6E  EFC1  F015         	goto	l1170
  3523   002B72                     u3520:
  3524   002B72  5026               	movf	floorf@m^0,w,c
  3525   002B74  262C               	addwf	floorf@u^0,f,c
  3526   002B76  5027               	movf	(floorf@m+1)^0,w,c
  3527   002B78  222D               	addwfc	(floorf@u+1)^0,f,c
  3528   002B7A  5028               	movf	(floorf@m+2)^0,w,c
  3529   002B7C  222E               	addwfc	(floorf@u+2)^0,f,c
  3530   002B7E  5029               	movf	(floorf@m+3)^0,w,c
  3531   002B80  222F               	addwfc	(floorf@u+3)^0,f,c
  3532   002B82                     l1170:
  3533   002B82  1C26               	comf	floorf@m^0,w,c
  3534   002B84  6E20               	movwf	??_floorf^0,c
  3535   002B86  1C27               	comf	(floorf@m+1)^0,w,c
  3536   002B88  6E21               	movwf	(??_floorf+1)^0,c
  3537   002B8A  1C28               	comf	(floorf@m+2)^0,w,c
  3538   002B8C  6E22               	movwf	(??_floorf+2)^0,c
  3539   002B8E  1C29               	comf	(floorf@m+3)^0,w,c
  3540   002B90  6E23               	movwf	(??_floorf+3)^0,c
  3541   002B92  5020               	movf	??_floorf^0,w,c
  3542   002B94  162C               	andwf	floorf@u^0,f,c
  3543   002B96  5021               	movf	(??_floorf+1)^0,w,c
  3544   002B98  162D               	andwf	(floorf@u+1)^0,f,c
  3545   002B9A  5022               	movf	(??_floorf+2)^0,w,c
  3546   002B9C  162E               	andwf	(floorf@u+2)^0,f,c
  3547   002B9E  5023               	movf	(??_floorf+3)^0,w,c
  3548   002BA0  162F               	andwf	(floorf@u+3)^0,f,c
  3549   002BA2  EF17  F016         	goto	l3526
  3550   002BA6                     l3518:
  3551   002BA6  C02C  F020         	movff	floorf@u,??_floorf
  3552   002BAA  C02D  F021         	movff	floorf@u+1,??_floorf+1
  3553   002BAE  C02E  F022         	movff	floorf@u+2,??_floorf+2
  3554   002BB2  C02F  F023         	movff	floorf@u+3,??_floorf+3
  3555   002BB6  0E20               	movlw	32
  3556   002BB8  EFE3  F015         	goto	u3530
  3557   002BBC                     u3535:
  3558   002BBC  90D8               	bcf	status,0,c
  3559   002BBE  3223               	rrcf	(??_floorf+3)^0,f,c
  3560   002BC0  3222               	rrcf	(??_floorf+2)^0,f,c
  3561   002BC2  3221               	rrcf	(??_floorf+1)^0,f,c
  3562   002BC4  3220               	rrcf	??_floorf^0,f,c
  3563   002BC6                     u3530:
  3564   002BC6  2EE8               	decfsz	wreg,f,c
  3565   002BC8  EFDE  F015         	goto	u3535
  3566   002BCC  5020               	movf	??_floorf^0,w,c
  3567   002BCE  1021               	iorwf	(??_floorf+1)^0,w,c
  3568   002BD0  1022               	iorwf	(??_floorf+2)^0,w,c
  3569   002BD2  1023               	iorwf	(??_floorf+3)^0,w,c
  3570   002BD4  A4D8               	btfss	status,2,c
  3571   002BD6  EFEF  F015         	goto	u3541
  3572   002BDA  EFF1  F015         	goto	u3540
  3573   002BDE                     u3541:
  3574   002BDE  EFFB  F015         	goto	l3522
  3575   002BE2                     u3540:
  3576   002BE2  0E00               	movlw	0
  3577   002BE4  6E2C               	movwf	floorf@u^0,c
  3578   002BE6  0E00               	movlw	0
  3579   002BE8  6E2D               	movwf	(floorf@u+1)^0,c
  3580   002BEA  0E00               	movlw	0
  3581   002BEC  6E2E               	movwf	(floorf@u+2)^0,c
  3582   002BEE  0E00               	movlw	0
  3583   002BF0  6E2F               	movwf	(floorf@u+3)^0,c
  3584   002BF2  EF17  F016         	goto	l3526
  3585   002BF6                     l3522:
  3586   002BF6  90D8               	bcf	status,0,c
  3587   002BF8  342C               	rlcf	floorf@u^0,w,c
  3588   002BFA  6E20               	movwf	??_floorf^0,c
  3589   002BFC  342D               	rlcf	(floorf@u+1)^0,w,c
  3590   002BFE  6E21               	movwf	(??_floorf+1)^0,c
  3591   002C00  342E               	rlcf	(floorf@u+2)^0,w,c
  3592   002C02  6E22               	movwf	(??_floorf+2)^0,c
  3593   002C04  342F               	rlcf	(floorf@u+3)^0,w,c
  3594   002C06  6E23               	movwf	(??_floorf+3)^0,c
  3595   002C08  5020               	movf	??_floorf^0,w,c
  3596   002C0A  1021               	iorwf	(??_floorf+1)^0,w,c
  3597   002C0C  1022               	iorwf	(??_floorf+2)^0,w,c
  3598   002C0E  1023               	iorwf	(??_floorf+3)^0,w,c
  3599   002C10  B4D8               	btfsc	status,2,c
  3600   002C12  EF0D  F016         	goto	u3551
  3601   002C16  EF0F  F016         	goto	u3550
  3602   002C1A                     u3551:
  3603   002C1A  EF17  F016         	goto	l3526
  3604   002C1E                     u3550:
  3605   002C1E  0E00               	movlw	0
  3606   002C20  6E2C               	movwf	floorf@u^0,c
  3607   002C22  0E00               	movlw	0
  3608   002C24  6E2D               	movwf	(floorf@u+1)^0,c
  3609   002C26  0E80               	movlw	128
  3610   002C28  6E2E               	movwf	(floorf@u+2)^0,c
  3611   002C2A  0EBF               	movlw	191
  3612   002C2C  6E2F               	movwf	(floorf@u+3)^0,c
  3613   002C2E                     l3526:
  3614   002C2E  C02C  F01C         	movff	floorf@u,?_floorf
  3615   002C32  C02D  F01D         	movff	floorf@u+1,?_floorf+1
  3616   002C36  C02E  F01E         	movff	floorf@u+2,?_floorf+2
  3617   002C3A  C02F  F01F         	movff	floorf@u+3,?_floorf+3
  3618   002C3E                     l1167:
  3619   002C3E  0012               	return		;funcret
  3620   002C40                     __end_of_floorf:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function ___fpclassifyf *****************
  3624 ;; Defined at:
  3625 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  x               4    2[COMRAM] float 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  u               4   12[COMRAM] struct .
  3630 ;;  e               2   10[COMRAM] int 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    2[COMRAM] int 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;Total ram usage:       14 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 4
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_efgtoa
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text9
  3655   00358E                     __ptext9:
  3656                           	callstack 0
  3657   00358E                     ___fpclassifyf:
  3658                           	callstack 22
  3659   00358E  C0E9  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3660   003592  C0EA  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3661   003596  C0EB  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3662   00359A  C0EC  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3663   00359E  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  3664   0035A2  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3665   0035A6  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3666   0035AA  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3667   0035AE  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  3668   0035B2  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3669   0035B6  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3670   0035BA  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3671   0035BE  0E18               	movlw	24
  3672   0035C0  EFE7  F01A         	goto	u3370
  3673   0035C4                     u3375:
  3674   0035C4  90D8               	bcf	status,0,c
  3675   0035C6  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  3676   0035C8  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  3677   0035CA  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  3678   0035CC  3207               	rrcf	??___fpclassifyf^0,f,c
  3679   0035CE                     u3370:
  3680   0035CE  2EE8               	decfsz	wreg,f,c
  3681   0035D0  EFE2  F01A         	goto	u3375
  3682   0035D4  5007               	movf	??___fpclassifyf^0,w,c
  3683   0035D6  6E0B               	movwf	___fpclassifyf@e^0,c
  3684   0035D8  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  3685   0035DA  500B               	movf	___fpclassifyf@e^0,w,c
  3686   0035DC  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3687   0035DE  A4D8               	btfss	status,2,c
  3688   0035E0  EFF4  F01A         	goto	u3381
  3689   0035E4  EFF6  F01A         	goto	u3380
  3690   0035E8                     u3381:
  3691   0035E8  EF16  F01B         	goto	l3484
  3692   0035EC                     u3380:
  3693   0035EC  90D8               	bcf	status,0,c
  3694   0035EE  340D               	rlcf	___fpclassifyf@u^0,w,c
  3695   0035F0  6E07               	movwf	??___fpclassifyf^0,c
  3696   0035F2  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3697   0035F4  6E08               	movwf	(??___fpclassifyf+1)^0,c
  3698   0035F6  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3699   0035F8  6E09               	movwf	(??___fpclassifyf+2)^0,c
  3700   0035FA  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3701   0035FC  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  3702   0035FE  5007               	movf	??___fpclassifyf^0,w,c
  3703   003600  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  3704   003602  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  3705   003604  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  3706   003606  A4D8               	btfss	status,2,c
  3707   003608  EF08  F01B         	goto	u3391
  3708   00360C  EF0A  F01B         	goto	u3390
  3709   003610                     u3391:
  3710   003610  EF10  F01B         	goto	l3480
  3711   003614                     u3390:
  3712   003614  0E00               	movlw	0
  3713   003616  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3714   003618  0E02               	movlw	2
  3715   00361A  6E03               	movwf	?___fpclassifyf^0,c
  3716   00361C  EF45  F01B         	goto	l1153
  3717   003620                     l3480:
  3718   003620  0E00               	movlw	0
  3719   003622  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3720   003624  0E03               	movlw	3
  3721   003626  6E03               	movwf	?___fpclassifyf^0,c
  3722   003628  EF45  F01B         	goto	l1153
  3723   00362C                     l3484:
  3724   00362C  280B               	incf	___fpclassifyf@e^0,w,c
  3725   00362E  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3726   003630  A4D8               	btfss	status,2,c
  3727   003632  EF1D  F01B         	goto	u3401
  3728   003636  EF1F  F01B         	goto	u3400
  3729   00363A                     u3401:
  3730   00363A  EF41  F01B         	goto	l3490
  3731   00363E                     u3400:
  3732   00363E  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  3733   003642  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3734   003646  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3735   00364A  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3736   00364E  0E09               	movlw	9
  3737   003650                     u3415:
  3738   003650  90D8               	bcf	status,0,c
  3739   003652  3607               	rlcf	??___fpclassifyf^0,f,c
  3740   003654  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  3741   003656  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  3742   003658  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  3743   00365A  2EE8               	decfsz	wreg,f,c
  3744   00365C  EF28  F01B         	goto	u3415
  3745   003660  5007               	movf	??___fpclassifyf^0,w,c
  3746   003662  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  3747   003664  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  3748   003666  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  3749   003668  B4D8               	btfsc	status,2,c
  3750   00366A  EF39  F01B         	goto	u3421
  3751   00366E  EF3C  F01B         	goto	u3420
  3752   003672                     u3421:
  3753   003672  0E01               	movlw	1
  3754   003674  EF3D  F01B         	goto	u3430
  3755   003678                     u3420:
  3756   003678  0E00               	movlw	0
  3757   00367A                     u3430:
  3758   00367A  6E03               	movwf	?___fpclassifyf^0,c
  3759   00367C  6A04               	clrf	(?___fpclassifyf+1)^0,c
  3760   00367E  EF45  F01B         	goto	l1153
  3761   003682                     l3490:
  3762   003682  0E00               	movlw	0
  3763   003684  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3764   003686  0E04               	movlw	4
  3765   003688  6E03               	movwf	?___fpclassifyf^0,c
  3766   00368A                     l1153:
  3767   00368A  0012               	return		;funcret
  3768   00368C                     __end_of___fpclassifyf:
  3769                           	callstack 0
  3770                           
  3771 ;; *************** function ___fltol *****************
  3772 ;; Defined at:
  3773 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  f1              4    2[COMRAM] int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  exp1            1   11[COMRAM] unsigned char 
  3778 ;;  sign1           1   10[COMRAM] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  4    2[COMRAM] long 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3791 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;Total ram usage:       10 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 4
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_efgtoa
  3799 ;; This function uses a non-reentrant model
  3800 ;;
  3801                           
  3802                           	psect	text10
  3803   003384                     __ptext10:
  3804                           	callstack 0
  3805   003384                     ___fltol:
  3806                           	callstack 22
  3807   003384  3405               	rlcf	(___fltol@f1+2)^0,w,c
  3808   003386  3406               	rlcf	(___fltol@f1+3)^0,w,c
  3809   003388  6E0C               	movwf	___fltol@exp1^0,c
  3810   00338A  500C               	movf	___fltol@exp1^0,w,c
  3811   00338C  A4D8               	btfss	status,2,c
  3812   00338E  EFCB  F019         	goto	u3271
  3813   003392  EFCD  F019         	goto	u3270
  3814   003396                     u3271:
  3815   003396  EFD7  F019         	goto	l3416
  3816   00339A                     u3270:
  3817   00339A                     l3412:
  3818   00339A  0E00               	movlw	0
  3819   00339C  6E03               	movwf	?___fltol^0,c
  3820   00339E  0E00               	movlw	0
  3821   0033A0  6E04               	movwf	(?___fltol+1)^0,c
  3822   0033A2  0E00               	movlw	0
  3823   0033A4  6E05               	movwf	(?___fltol+2)^0,c
  3824   0033A6  0E00               	movlw	0
  3825   0033A8  6E06               	movwf	(?___fltol+3)^0,c
  3826   0033AA  EF44  F01A         	goto	l626
  3827   0033AE                     l3416:
  3828   0033AE  C003  F007         	movff	___fltol@f1,??___fltol
  3829   0033B2  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  3830   0033B6  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  3831   0033BA  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  3832   0033BE  0E20               	movlw	32
  3833   0033C0  EFE7  F019         	goto	u3280
  3834   0033C4                     u3285:
  3835   0033C4  90D8               	bcf	status,0,c
  3836   0033C6  320A               	rrcf	(??___fltol+3)^0,f,c
  3837   0033C8  3209               	rrcf	(??___fltol+2)^0,f,c
  3838   0033CA  3208               	rrcf	(??___fltol+1)^0,f,c
  3839   0033CC  3207               	rrcf	??___fltol^0,f,c
  3840   0033CE                     u3280:
  3841   0033CE  2EE8               	decfsz	wreg,f,c
  3842   0033D0  EFE2  F019         	goto	u3285
  3843   0033D4  5007               	movf	??___fltol^0,w,c
  3844   0033D6  6E0B               	movwf	___fltol@sign1^0,c
  3845   0033D8  8E05               	bsf	(___fltol@f1+2)^0,7,c
  3846   0033DA  0EFF               	movlw	255
  3847   0033DC  1603               	andwf	___fltol@f1^0,f,c
  3848   0033DE  0EFF               	movlw	255
  3849   0033E0  1604               	andwf	(___fltol@f1+1)^0,f,c
  3850   0033E2  0EFF               	movlw	255
  3851   0033E4  1605               	andwf	(___fltol@f1+2)^0,f,c
  3852   0033E6  0E00               	movlw	0
  3853   0033E8  1606               	andwf	(___fltol@f1+3)^0,f,c
  3854   0033EA  0E96               	movlw	150
  3855   0033EC  5E0C               	subwf	___fltol@exp1^0,f,c
  3856   0033EE  BE0C               	btfsc	___fltol@exp1^0,7,c
  3857   0033F0  EFFE  F019         	goto	u3290
  3858   0033F4  EFFC  F019         	goto	u3291
  3859   0033F8                     u3291:
  3860   0033F8  EF14  F01A         	goto	l3436
  3861   0033FC                     u3290:
  3862   0033FC  500C               	movf	___fltol@exp1^0,w,c
  3863   0033FE  0A80               	xorlw	128
  3864   003400  0F97               	addlw	151
  3865   003402  B0D8               	btfsc	status,0,c
  3866   003404  EF06  F01A         	goto	u3301
  3867   003408  EF08  F01A         	goto	u3300
  3868   00340C                     u3301:
  3869   00340C  EF0A  F01A         	goto	l3432
  3870   003410                     u3300:
  3871   003410  EFCD  F019         	goto	l3412
  3872   003414                     l3432:
  3873   003414  90D8               	bcf	status,0,c
  3874   003416  3206               	rrcf	(___fltol@f1+3)^0,f,c
  3875   003418  3205               	rrcf	(___fltol@f1+2)^0,f,c
  3876   00341A  3204               	rrcf	(___fltol@f1+1)^0,f,c
  3877   00341C  3203               	rrcf	___fltol@f1^0,f,c
  3878   00341E  3E0C               	incfsz	___fltol@exp1^0,f,c
  3879   003420  EF0A  F01A         	goto	l3432
  3880   003424  EF2C  F01A         	goto	l3446
  3881   003428                     l3436:
  3882   003428  0E1F               	movlw	31
  3883   00342A  640C               	cpfsgt	___fltol@exp1^0,c
  3884   00342C  EF1A  F01A         	goto	u3311
  3885   003430  EF1C  F01A         	goto	u3310
  3886   003434                     u3311:
  3887   003434  EF24  F01A         	goto	l3444
  3888   003438                     u3310:
  3889   003438  EFCD  F019         	goto	l3412
  3890   00343C                     l3442:
  3891   00343C  90D8               	bcf	status,0,c
  3892   00343E  3603               	rlcf	___fltol@f1^0,f,c
  3893   003440  3604               	rlcf	(___fltol@f1+1)^0,f,c
  3894   003442  3605               	rlcf	(___fltol@f1+2)^0,f,c
  3895   003444  3606               	rlcf	(___fltol@f1+3)^0,f,c
  3896   003446  060C               	decf	___fltol@exp1^0,f,c
  3897   003448                     l3444:
  3898   003448  500C               	movf	___fltol@exp1^0,w,c
  3899   00344A  A4D8               	btfss	status,2,c
  3900   00344C  EF2A  F01A         	goto	u3321
  3901   003450  EF2C  F01A         	goto	u3320
  3902   003454                     u3321:
  3903   003454  EF1E  F01A         	goto	l3442
  3904   003458                     u3320:
  3905   003458                     l3446:
  3906   003458  500B               	movf	___fltol@sign1^0,w,c
  3907   00345A  B4D8               	btfsc	status,2,c
  3908   00345C  EF32  F01A         	goto	u3331
  3909   003460  EF34  F01A         	goto	u3330
  3910   003464                     u3331:
  3911   003464  EF3C  F01A         	goto	l3450
  3912   003468                     u3330:
  3913   003468  1E06               	comf	(___fltol@f1+3)^0,f,c
  3914   00346A  1E05               	comf	(___fltol@f1+2)^0,f,c
  3915   00346C  1E04               	comf	(___fltol@f1+1)^0,f,c
  3916   00346E  6C03               	negf	___fltol@f1^0,c
  3917   003470  0E00               	movlw	0
  3918   003472  2204               	addwfc	(___fltol@f1+1)^0,f,c
  3919   003474  2205               	addwfc	(___fltol@f1+2)^0,f,c
  3920   003476  2206               	addwfc	(___fltol@f1+3)^0,f,c
  3921   003478                     l3450:
  3922   003478  C003  F003         	movff	___fltol@f1,?___fltol
  3923   00347C  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  3924   003480  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  3925   003484  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  3926   003488                     l626:
  3927   003488  0012               	return		;funcret
  3928   00348A                     __end_of___fltol:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function ___flsub *****************
  3932 ;; Defined at:
  3933 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  b               4   27[COMRAM] long 
  3936 ;;  a               4   31[COMRAM] long 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  4   27[COMRAM] long 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:        8 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 5
  3955 ;; This function calls:
  3956 ;;		___fladd
  3957 ;; This function is called by:
  3958 ;;		_efgtoa
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text11
  3963   003C12                     __ptext11:
  3964                           	callstack 0
  3965   003C12                     ___flsub:
  3966                           	callstack 21
  3967   003C12  0E00               	movlw	0
  3968   003C14  1A20               	xorwf	___flsub@a^0,f,c
  3969   003C16  0E00               	movlw	0
  3970   003C18  1A21               	xorwf	(___flsub@a+1)^0,f,c
  3971   003C1A  0E00               	movlw	0
  3972   003C1C  1A22               	xorwf	(___flsub@a+2)^0,f,c
  3973   003C1E  0E80               	movlw	128
  3974   003C20  1A23               	xorwf	(___flsub@a+3)^0,f,c
  3975   003C22  C01C  F003         	movff	___flsub@b,___fladd@b
  3976   003C26  C01D  F004         	movff	___flsub@b+1,___fladd@b+1
  3977   003C2A  C01E  F005         	movff	___flsub@b+2,___fladd@b+2
  3978   003C2E  C01F  F006         	movff	___flsub@b+3,___fladd@b+3
  3979   003C32  C020  F007         	movff	___flsub@a,___fladd@a
  3980   003C36  C021  F008         	movff	___flsub@a+1,___fladd@a+1
  3981   003C3A  C022  F009         	movff	___flsub@a+2,___fladd@a+2
  3982   003C3E  C023  F00A         	movff	___flsub@a+3,___fladd@a+3
  3983   003C42  EC14  F00C         	call	___fladd	;wreg free
  3984   003C46  C003  F01C         	movff	?___fladd,?___flsub
  3985   003C4A  C004  F01D         	movff	?___fladd+1,?___flsub+1
  3986   003C4E  C005  F01E         	movff	?___fladd+2,?___flsub+2
  3987   003C52  C006  F01F         	movff	?___fladd+3,?___flsub+3
  3988   003C56  0012               	return		;funcret
  3989   003C58                     __end_of___flsub:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function ___fladd *****************
  3993 ;; Defined at:
  3994 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  b               4    2[COMRAM] long 
  3997 ;;  a               4    6[COMRAM] long 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  grs             1   17[COMRAM] unsigned char 
  4000 ;;  bexp            1   16[COMRAM] unsigned char 
  4001 ;;  aexp            1   15[COMRAM] unsigned char 
  4002 ;;  signs           1   14[COMRAM] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  4    2[COMRAM] unsigned char 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;Total ram usage:       16 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 4
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		___flsub
  4023 ;;		_efgtoa
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text12
  4028   001828                     __ptext12:
  4029                           	callstack 0
  4030   001828                     ___fladd:
  4031                           	callstack 21
  4032   001828  5006               	movf	(___fladd@b+3)^0,w,c
  4033   00182A  0B80               	andlw	128
  4034   00182C  6E0F               	movwf	___fladd@signs^0,c
  4035   00182E  5006               	movf	(___fladd@b+3)^0,w,c
  4036   001830  2406               	addwf	(___fladd@b+3)^0,w,c
  4037   001832  6E11               	movwf	___fladd@bexp^0,c
  4038   001834  AE05               	btfss	(___fladd@b+2)^0,7,c
  4039   001836  EF1F  F00C         	goto	u2211
  4040   00183A  EF21  F00C         	goto	u2210
  4041   00183E                     u2211:
  4042   00183E  EF22  F00C         	goto	l2802
  4043   001842                     u2210:
  4044   001842  8011               	bsf	___fladd@bexp^0,0,c
  4045   001844                     l2802:
  4046   001844  5011               	movf	___fladd@bexp^0,w,c
  4047   001846  B4D8               	btfsc	status,2,c
  4048   001848  EF28  F00C         	goto	u2221
  4049   00184C  EF2A  F00C         	goto	u2220
  4050   001850                     u2221:
  4051   001850  EF3F  F00C         	goto	l2812
  4052   001854                     u2220:
  4053   001854  2811               	incf	___fladd@bexp^0,w,c
  4054   001856  A4D8               	btfss	status,2,c
  4055   001858  EF30  F00C         	goto	u2231
  4056   00185C  EF32  F00C         	goto	u2230
  4057   001860                     u2231:
  4058   001860  EF3A  F00C         	goto	l2808
  4059   001864                     u2230:
  4060   001864  0E00               	movlw	0
  4061   001866  6E03               	movwf	___fladd@b^0,c
  4062   001868  0E00               	movlw	0
  4063   00186A  6E04               	movwf	(___fladd@b+1)^0,c
  4064   00186C  0E00               	movlw	0
  4065   00186E  6E05               	movwf	(___fladd@b+2)^0,c
  4066   001870  0E00               	movlw	0
  4067   001872  6E06               	movwf	(___fladd@b+3)^0,c
  4068   001874                     l2808:
  4069   001874  8E05               	bsf	(___fladd@b+2)^0,7,c
  4070   001876  0E00               	movlw	0
  4071   001878  6E06               	movwf	(___fladd@b+3)^0,c
  4072   00187A  EF47  F00C         	goto	l2814
  4073   00187E                     l2812:
  4074   00187E  0E00               	movlw	0
  4075   001880  6E03               	movwf	___fladd@b^0,c
  4076   001882  0E00               	movlw	0
  4077   001884  6E04               	movwf	(___fladd@b+1)^0,c
  4078   001886  0E00               	movlw	0
  4079   001888  6E05               	movwf	(___fladd@b+2)^0,c
  4080   00188A  0E00               	movlw	0
  4081   00188C  6E06               	movwf	(___fladd@b+3)^0,c
  4082   00188E                     l2814:
  4083   00188E  500A               	movf	(___fladd@a+3)^0,w,c
  4084   001890  0B80               	andlw	128
  4085   001892  6E10               	movwf	___fladd@aexp^0,c
  4086   001894  500F               	movf	___fladd@signs^0,w,c
  4087   001896  1810               	xorwf	___fladd@aexp^0,w,c
  4088   001898  B4D8               	btfsc	status,2,c
  4089   00189A  EF51  F00C         	goto	u2241
  4090   00189E  EF53  F00C         	goto	u2240
  4091   0018A2                     u2241:
  4092   0018A2  EF54  F00C         	goto	l2820
  4093   0018A6                     u2240:
  4094   0018A6  8C0F               	bsf	___fladd@signs^0,6,c
  4095   0018A8                     l2820:
  4096   0018A8  500A               	movf	(___fladd@a+3)^0,w,c
  4097   0018AA  240A               	addwf	(___fladd@a+3)^0,w,c
  4098   0018AC  6E10               	movwf	___fladd@aexp^0,c
  4099   0018AE  AE09               	btfss	(___fladd@a+2)^0,7,c
  4100   0018B0  EF5C  F00C         	goto	u2251
  4101   0018B4  EF5E  F00C         	goto	u2250
  4102   0018B8                     u2251:
  4103   0018B8  EF5F  F00C         	goto	l2826
  4104   0018BC                     u2250:
  4105   0018BC  8010               	bsf	___fladd@aexp^0,0,c
  4106   0018BE                     l2826:
  4107   0018BE  5010               	movf	___fladd@aexp^0,w,c
  4108   0018C0  B4D8               	btfsc	status,2,c
  4109   0018C2  EF65  F00C         	goto	u2261
  4110   0018C6  EF67  F00C         	goto	u2260
  4111   0018CA                     u2261:
  4112   0018CA  EF7C  F00C         	goto	l2836
  4113   0018CE                     u2260:
  4114   0018CE  2810               	incf	___fladd@aexp^0,w,c
  4115   0018D0  A4D8               	btfss	status,2,c
  4116   0018D2  EF6D  F00C         	goto	u2271
  4117   0018D6  EF6F  F00C         	goto	u2270
  4118   0018DA                     u2271:
  4119   0018DA  EF77  F00C         	goto	l2832
  4120   0018DE                     u2270:
  4121   0018DE  0E00               	movlw	0
  4122   0018E0  6E07               	movwf	___fladd@a^0,c
  4123   0018E2  0E00               	movlw	0
  4124   0018E4  6E08               	movwf	(___fladd@a+1)^0,c
  4125   0018E6  0E00               	movlw	0
  4126   0018E8  6E09               	movwf	(___fladd@a+2)^0,c
  4127   0018EA  0E00               	movlw	0
  4128   0018EC  6E0A               	movwf	(___fladd@a+3)^0,c
  4129   0018EE                     l2832:
  4130   0018EE  8E09               	bsf	(___fladd@a+2)^0,7,c
  4131   0018F0  0E00               	movlw	0
  4132   0018F2  6E0A               	movwf	(___fladd@a+3)^0,c
  4133   0018F4  EF84  F00C         	goto	l2838
  4134   0018F8                     l2836:
  4135   0018F8  0E00               	movlw	0
  4136   0018FA  6E07               	movwf	___fladd@a^0,c
  4137   0018FC  0E00               	movlw	0
  4138   0018FE  6E08               	movwf	(___fladd@a+1)^0,c
  4139   001900  0E00               	movlw	0
  4140   001902  6E09               	movwf	(___fladd@a+2)^0,c
  4141   001904  0E00               	movlw	0
  4142   001906  6E0A               	movwf	(___fladd@a+3)^0,c
  4143   001908                     l2838:
  4144   001908  5011               	movf	___fladd@bexp^0,w,c
  4145   00190A  5C10               	subwf	___fladd@aexp^0,w,c
  4146   00190C  B0D8               	btfsc	status,0,c
  4147   00190E  EF8B  F00C         	goto	u2281
  4148   001912  EF8D  F00C         	goto	u2280
  4149   001916                     u2281:
  4150   001916  EFB4  F00C         	goto	l2874
  4151   00191A                     u2280:
  4152   00191A  AC0F               	btfss	___fladd@signs^0,6,c
  4153   00191C  EF92  F00C         	goto	u2291
  4154   001920  EF94  F00C         	goto	u2290
  4155   001924                     u2291:
  4156   001924  EF96  F00C         	goto	l2844
  4157   001928                     u2290:
  4158   001928  0E80               	movlw	128
  4159   00192A  1A0F               	xorwf	___fladd@signs^0,f,c
  4160   00192C                     l2844:
  4161   00192C  C011  F012         	movff	___fladd@bexp,___fladd@grs
  4162   001930  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4163   001934  C012  F010         	movff	___fladd@grs,___fladd@aexp
  4164   001938  C003  F012         	movff	___fladd@b,___fladd@grs
  4165   00193C  C007  F003         	movff	___fladd@a,___fladd@b
  4166   001940  C012  F007         	movff	___fladd@grs,___fladd@a
  4167   001944  C004  F012         	movff	___fladd@b+1,___fladd@grs
  4168   001948  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  4169   00194C  C012  F008         	movff	___fladd@grs,___fladd@a+1
  4170   001950  C005  F012         	movff	___fladd@b+2,___fladd@grs
  4171   001954  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  4172   001958  C012  F009         	movff	___fladd@grs,___fladd@a+2
  4173   00195C  C006  F012         	movff	___fladd@b+3,___fladd@grs
  4174   001960  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  4175   001964  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  4176   001968                     l2874:
  4177   001968  0E00               	movlw	0
  4178   00196A  6E12               	movwf	___fladd@grs^0,c
  4179   00196C  5011               	movf	___fladd@bexp^0,w,c
  4180   00196E  C010  F00B         	movff	___fladd@aexp,??___fladd
  4181   001972  6A0C               	clrf	(??___fladd+1)^0,c
  4182   001974  5E0B               	subwf	??___fladd^0,f,c
  4183   001976  0E00               	movlw	0
  4184   001978  5A0C               	subwfb	(??___fladd+1)^0,f,c
  4185   00197A  BE0C               	btfsc	(??___fladd+1)^0,7,c
  4186   00197C  EFC9  F00C         	goto	u2301
  4187   001980  500C               	movf	(??___fladd+1)^0,w,c
  4188   001982  E109               	bnz	u2300
  4189   001984  0E1A               	movlw	26
  4190   001986  5C0B               	subwf	??___fladd^0,w,c
  4191   001988  A0D8               	btfss	status,0,c
  4192   00198A  EFC9  F00C         	goto	u2301
  4193   00198E  EFCB  F00C         	goto	u2300
  4194   001992                     u2301:
  4195   001992  EF02  F00D         	goto	l858
  4196   001996                     u2300:
  4197   001996  5003               	movf	___fladd@b^0,w,c
  4198   001998  1004               	iorwf	(___fladd@b+1)^0,w,c
  4199   00199A  1005               	iorwf	(___fladd@b+2)^0,w,c
  4200   00199C  1006               	iorwf	(___fladd@b+3)^0,w,c
  4201   00199E  A4D8               	btfss	status,2,c
  4202   0019A0  EFD4  F00C         	goto	u2311
  4203   0019A4  EFD7  F00C         	goto	u2310
  4204   0019A8                     u2311:
  4205   0019A8  0E01               	movlw	1
  4206   0019AA  EFD8  F00C         	goto	u2320
  4207   0019AE                     u2310:
  4208   0019AE  0E00               	movlw	0
  4209   0019B0                     u2320:
  4210   0019B0  6E12               	movwf	___fladd@grs^0,c
  4211   0019B2  0E00               	movlw	0
  4212   0019B4  6E03               	movwf	___fladd@b^0,c
  4213   0019B6  0E00               	movlw	0
  4214   0019B8  6E04               	movwf	(___fladd@b+1)^0,c
  4215   0019BA  0E00               	movlw	0
  4216   0019BC  6E05               	movwf	(___fladd@b+2)^0,c
  4217   0019BE  0E00               	movlw	0
  4218   0019C0  6E06               	movwf	(___fladd@b+3)^0,c
  4219   0019C2  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4220   0019C6  EF0B  F00D         	goto	l857
  4221   0019CA                     l859:
  4222   0019CA  A012               	btfss	___fladd@grs^0,0,c
  4223   0019CC  EFEA  F00C         	goto	u2331
  4224   0019D0  EFEC  F00C         	goto	u2330
  4225   0019D4                     u2331:
  4226   0019D4  EFF2  F00C         	goto	l2886
  4227   0019D8                     u2330:
  4228   0019D8  90D8               	bcf	status,0,c
  4229   0019DA  3012               	rrcf	___fladd@grs^0,w,c
  4230   0019DC  0901               	iorlw	1
  4231   0019DE  6E12               	movwf	___fladd@grs^0,c
  4232   0019E0  EFF4  F00C         	goto	l2888
  4233   0019E4                     l2886:
  4234   0019E4  90D8               	bcf	status,0,c
  4235   0019E6  3212               	rrcf	___fladd@grs^0,f,c
  4236   0019E8                     l2888:
  4237   0019E8  A003               	btfss	___fladd@b^0,0,c
  4238   0019EA  EFF9  F00C         	goto	u2341
  4239   0019EE  EFFB  F00C         	goto	u2340
  4240   0019F2                     u2341:
  4241   0019F2  EFFC  F00C         	goto	l2892
  4242   0019F6                     u2340:
  4243   0019F6  8E12               	bsf	___fladd@grs^0,7,c
  4244   0019F8                     l2892:
  4245   0019F8  3406               	rlcf	(___fladd@b+3)^0,w,c
  4246   0019FA  3206               	rrcf	(___fladd@b+3)^0,f,c
  4247   0019FC  3205               	rrcf	(___fladd@b+2)^0,f,c
  4248   0019FE  3204               	rrcf	(___fladd@b+1)^0,f,c
  4249   001A00  3203               	rrcf	___fladd@b^0,f,c
  4250   001A02  2A11               	incf	___fladd@bexp^0,f,c
  4251   001A04                     l858:
  4252   001A04  5010               	movf	___fladd@aexp^0,w,c
  4253   001A06  5C11               	subwf	___fladd@bexp^0,w,c
  4254   001A08  A0D8               	btfss	status,0,c
  4255   001A0A  EF09  F00D         	goto	u2351
  4256   001A0E  EF0B  F00D         	goto	u2350
  4257   001A12                     u2351:
  4258   001A12  EFE5  F00C         	goto	l859
  4259   001A16                     u2350:
  4260   001A16                     l857:
  4261   001A16  BC0F               	btfsc	___fladd@signs^0,6,c
  4262   001A18  EF10  F00D         	goto	u2361
  4263   001A1C  EF12  F00D         	goto	u2360
  4264   001A20                     u2361:
  4265   001A20  EF52  F00D         	goto	l2920
  4266   001A24                     u2360:
  4267   001A24  5011               	movf	___fladd@bexp^0,w,c
  4268   001A26  A4D8               	btfss	status,2,c
  4269   001A28  EF18  F00D         	goto	u2371
  4270   001A2C  EF1A  F00D         	goto	u2370
  4271   001A30                     u2371:
  4272   001A30  EF24  F00D         	goto	l2902
  4273   001A34                     u2370:
  4274   001A34  0E00               	movlw	0
  4275   001A36  6E03               	movwf	?___fladd^0,c
  4276   001A38  0E00               	movlw	0
  4277   001A3A  6E04               	movwf	(?___fladd+1)^0,c
  4278   001A3C  0E00               	movlw	0
  4279   001A3E  6E05               	movwf	(?___fladd+2)^0,c
  4280   001A40  0E00               	movlw	0
  4281   001A42  6E06               	movwf	(?___fladd+3)^0,c
  4282   001A44  EF73  F00E         	goto	l866
  4283   001A48                     l2902:
  4284   001A48  5007               	movf	___fladd@a^0,w,c
  4285   001A4A  2603               	addwf	___fladd@b^0,f,c
  4286   001A4C  5008               	movf	(___fladd@a+1)^0,w,c
  4287   001A4E  2204               	addwfc	(___fladd@b+1)^0,f,c
  4288   001A50  5009               	movf	(___fladd@a+2)^0,w,c
  4289   001A52  2205               	addwfc	(___fladd@b+2)^0,f,c
  4290   001A54  500A               	movf	(___fladd@a+3)^0,w,c
  4291   001A56  2206               	addwfc	(___fladd@b+3)^0,f,c
  4292   001A58  A006               	btfss	(___fladd@b+3)^0,0,c
  4293   001A5A  EF31  F00D         	goto	u2381
  4294   001A5E  EF33  F00D         	goto	u2380
  4295   001A62                     u2381:
  4296   001A62  EFDF  F00D         	goto	l2956
  4297   001A66                     u2380:
  4298   001A66  A012               	btfss	___fladd@grs^0,0,c
  4299   001A68  EF38  F00D         	goto	u2391
  4300   001A6C  EF3A  F00D         	goto	u2390
  4301   001A70                     u2391:
  4302   001A70  EF40  F00D         	goto	l2910
  4303   001A74                     u2390:
  4304   001A74  90D8               	bcf	status,0,c
  4305   001A76  3012               	rrcf	___fladd@grs^0,w,c
  4306   001A78  0901               	iorlw	1
  4307   001A7A  6E12               	movwf	___fladd@grs^0,c
  4308   001A7C  EF42  F00D         	goto	l2912
  4309   001A80                     l2910:
  4310   001A80  90D8               	bcf	status,0,c
  4311   001A82  3212               	rrcf	___fladd@grs^0,f,c
  4312   001A84                     l2912:
  4313   001A84  A003               	btfss	___fladd@b^0,0,c
  4314   001A86  EF47  F00D         	goto	u2401
  4315   001A8A  EF49  F00D         	goto	u2400
  4316   001A8E                     u2401:
  4317   001A8E  EF4A  F00D         	goto	l2916
  4318   001A92                     u2400:
  4319   001A92  8E12               	bsf	___fladd@grs^0,7,c
  4320   001A94                     l2916:
  4321   001A94  3406               	rlcf	(___fladd@b+3)^0,w,c
  4322   001A96  3206               	rrcf	(___fladd@b+3)^0,f,c
  4323   001A98  3205               	rrcf	(___fladd@b+2)^0,f,c
  4324   001A9A  3204               	rrcf	(___fladd@b+1)^0,f,c
  4325   001A9C  3203               	rrcf	___fladd@b^0,f,c
  4326   001A9E  2A11               	incf	___fladd@bexp^0,f,c
  4327   001AA0  EFDF  F00D         	goto	l2956
  4328   001AA4                     l2920:
  4329   001AA4  5007               	movf	___fladd@a^0,w,c
  4330   001AA6  5C03               	subwf	___fladd@b^0,w,c
  4331   001AA8  5008               	movf	(___fladd@a+1)^0,w,c
  4332   001AAA  5804               	subwfb	(___fladd@b+1)^0,w,c
  4333   001AAC  5009               	movf	(___fladd@a+2)^0,w,c
  4334   001AAE  5805               	subwfb	(___fladd@b+2)^0,w,c
  4335   001AB0  5006               	movf	(___fladd@b+3)^0,w,c
  4336   001AB2  0A80               	xorlw	128
  4337   001AB4  6E0B               	movwf	??___fladd^0,c
  4338   001AB6  500A               	movf	(___fladd@a+3)^0,w,c
  4339   001AB8  0A80               	xorlw	128
  4340   001ABA  580B               	subwfb	??___fladd^0,w,c
  4341   001ABC  B0D8               	btfsc	status,0,c
  4342   001ABE  EF63  F00D         	goto	u2411
  4343   001AC2  EF65  F00D         	goto	u2410
  4344   001AC6                     u2411:
  4345   001AC6  EF90  F00D         	goto	l2930
  4346   001ACA                     u2410:
  4347   001ACA  5003               	movf	___fladd@b^0,w,c
  4348   001ACC  5C07               	subwf	___fladd@a^0,w,c
  4349   001ACE  6E0B               	movwf	??___fladd^0,c
  4350   001AD0  5004               	movf	(___fladd@b+1)^0,w,c
  4351   001AD2  5808               	subwfb	(___fladd@a+1)^0,w,c
  4352   001AD4  6E0C               	movwf	(??___fladd+1)^0,c
  4353   001AD6  5005               	movf	(___fladd@b+2)^0,w,c
  4354   001AD8  5809               	subwfb	(___fladd@a+2)^0,w,c
  4355   001ADA  6E0D               	movwf	(??___fladd+2)^0,c
  4356   001ADC  5006               	movf	(___fladd@b+3)^0,w,c
  4357   001ADE  580A               	subwfb	(___fladd@a+3)^0,w,c
  4358   001AE0  6E0E               	movwf	(??___fladd+3)^0,c
  4359   001AE2  0EFF               	movlw	255
  4360   001AE4  240B               	addwf	??___fladd^0,w,c
  4361   001AE6  6E03               	movwf	___fladd@b^0,c
  4362   001AE8  0EFF               	movlw	255
  4363   001AEA  200C               	addwfc	(??___fladd+1)^0,w,c
  4364   001AEC  6E04               	movwf	(___fladd@b+1)^0,c
  4365   001AEE  0EFF               	movlw	255
  4366   001AF0  200D               	addwfc	(??___fladd+2)^0,w,c
  4367   001AF2  6E05               	movwf	(___fladd@b+2)^0,c
  4368   001AF4  0EFF               	movlw	255
  4369   001AF6  200E               	addwfc	(??___fladd+3)^0,w,c
  4370   001AF8  6E06               	movwf	(___fladd@b+3)^0,c
  4371   001AFA  0E80               	movlw	128
  4372   001AFC  1A0F               	xorwf	___fladd@signs^0,f,c
  4373   001AFE  6C12               	negf	___fladd@grs^0,c
  4374   001B00  5012               	movf	___fladd@grs^0,w,c
  4375   001B02  A4D8               	btfss	status,2,c
  4376   001B04  EF86  F00D         	goto	u2421
  4377   001B08  EF88  F00D         	goto	u2420
  4378   001B0C                     u2421:
  4379   001B0C  EF98  F00D         	goto	l874
  4380   001B10                     u2420:
  4381   001B10  0E01               	movlw	1
  4382   001B12  2603               	addwf	___fladd@b^0,f,c
  4383   001B14  0E00               	movlw	0
  4384   001B16  2204               	addwfc	(___fladd@b+1)^0,f,c
  4385   001B18  2205               	addwfc	(___fladd@b+2)^0,f,c
  4386   001B1A  2206               	addwfc	(___fladd@b+3)^0,f,c
  4387   001B1C  EF98  F00D         	goto	l874
  4388   001B20                     l2930:
  4389   001B20  5007               	movf	___fladd@a^0,w,c
  4390   001B22  5E03               	subwf	___fladd@b^0,f,c
  4391   001B24  5008               	movf	(___fladd@a+1)^0,w,c
  4392   001B26  5A04               	subwfb	(___fladd@b+1)^0,f,c
  4393   001B28  5009               	movf	(___fladd@a+2)^0,w,c
  4394   001B2A  5A05               	subwfb	(___fladd@b+2)^0,f,c
  4395   001B2C  500A               	movf	(___fladd@a+3)^0,w,c
  4396   001B2E  5A06               	subwfb	(___fladd@b+3)^0,f,c
  4397   001B30                     l874:
  4398   001B30  5003               	movf	___fladd@b^0,w,c
  4399   001B32  1004               	iorwf	(___fladd@b+1)^0,w,c
  4400   001B34  1005               	iorwf	(___fladd@b+2)^0,w,c
  4401   001B36  1006               	iorwf	(___fladd@b+3)^0,w,c
  4402   001B38  A4D8               	btfss	status,2,c
  4403   001B3A  EFA1  F00D         	goto	u2431
  4404   001B3E  EFA3  F00D         	goto	u2430
  4405   001B42                     u2431:
  4406   001B42  EFD8  F00D         	goto	l2954
  4407   001B46                     u2430:
  4408   001B46  5012               	movf	___fladd@grs^0,w,c
  4409   001B48  A4D8               	btfss	status,2,c
  4410   001B4A  EFA9  F00D         	goto	u2441
  4411   001B4E  EFAB  F00D         	goto	u2440
  4412   001B52                     u2441:
  4413   001B52  EFD8  F00D         	goto	l2954
  4414   001B56                     u2440:
  4415   001B56  0E00               	movlw	0
  4416   001B58  6E03               	movwf	?___fladd^0,c
  4417   001B5A  0E00               	movlw	0
  4418   001B5C  6E04               	movwf	(?___fladd+1)^0,c
  4419   001B5E  0E00               	movlw	0
  4420   001B60  6E05               	movwf	(?___fladd+2)^0,c
  4421   001B62  0E00               	movlw	0
  4422   001B64  6E06               	movwf	(?___fladd+3)^0,c
  4423   001B66  EF73  F00E         	goto	l866
  4424   001B6A                     l2938:
  4425   001B6A  90D8               	bcf	status,0,c
  4426   001B6C  3603               	rlcf	___fladd@b^0,f,c
  4427   001B6E  3604               	rlcf	(___fladd@b+1)^0,f,c
  4428   001B70  3605               	rlcf	(___fladd@b+2)^0,f,c
  4429   001B72  3606               	rlcf	(___fladd@b+3)^0,f,c
  4430   001B74  AE12               	btfss	___fladd@grs^0,7,c
  4431   001B76  EFBF  F00D         	goto	u2451
  4432   001B7A  EFC1  F00D         	goto	u2450
  4433   001B7E                     u2451:
  4434   001B7E  EFC2  F00D         	goto	l2944
  4435   001B82                     u2450:
  4436   001B82  8003               	bsf	___fladd@b^0,0,c
  4437   001B84                     l2944:
  4438   001B84  A012               	btfss	___fladd@grs^0,0,c
  4439   001B86  EFC7  F00D         	goto	u2461
  4440   001B8A  EFC9  F00D         	goto	u2460
  4441   001B8E                     u2461:
  4442   001B8E  EFCD  F00D         	goto	l2948
  4443   001B92                     u2460:
  4444   001B92  80D8               	bsf	status,0,c
  4445   001B94  3612               	rlcf	___fladd@grs^0,f,c
  4446   001B96  EFCF  F00D         	goto	l2950
  4447   001B9A                     l2948:
  4448   001B9A  90D8               	bcf	status,0,c
  4449   001B9C  3612               	rlcf	___fladd@grs^0,f,c
  4450   001B9E                     l2950:
  4451   001B9E  5011               	movf	___fladd@bexp^0,w,c
  4452   001BA0  B4D8               	btfsc	status,2,c
  4453   001BA2  EFD5  F00D         	goto	u2471
  4454   001BA6  EFD7  F00D         	goto	u2470
  4455   001BAA                     u2471:
  4456   001BAA  EFD8  F00D         	goto	l2954
  4457   001BAE                     u2470:
  4458   001BAE  0611               	decf	___fladd@bexp^0,f,c
  4459   001BB0                     l2954:
  4460   001BB0  AE05               	btfss	(___fladd@b+2)^0,7,c
  4461   001BB2  EFDD  F00D         	goto	u2481
  4462   001BB6  EFDF  F00D         	goto	u2480
  4463   001BBA                     u2481:
  4464   001BBA  EFB5  F00D         	goto	l2938
  4465   001BBE                     u2480:
  4466   001BBE                     l2956:
  4467   001BBE  0E00               	movlw	0
  4468   001BC0  6E10               	movwf	___fladd@aexp^0,c
  4469   001BC2  AE12               	btfss	___fladd@grs^0,7,c
  4470   001BC4  EFE6  F00D         	goto	u2491
  4471   001BC8  EFE8  F00D         	goto	u2490
  4472   001BCC                     u2491:
  4473   001BCC  EF00  F00E         	goto	l883
  4474   001BD0                     u2490:
  4475   001BD0  C012  F00B         	movff	___fladd@grs,??___fladd
  4476   001BD4  0E7F               	movlw	127
  4477   001BD6  160B               	andwf	??___fladd^0,f,c
  4478   001BD8  B4D8               	btfsc	status,2,c
  4479   001BDA  EFF1  F00D         	goto	u2501
  4480   001BDE  EFF3  F00D         	goto	u2500
  4481   001BE2                     u2501:
  4482   001BE2  EFF7  F00D         	goto	l884
  4483   001BE6                     u2500:
  4484   001BE6                     l2962:
  4485   001BE6  0E01               	movlw	1
  4486   001BE8  6E10               	movwf	___fladd@aexp^0,c
  4487   001BEA  EF00  F00E         	goto	l883
  4488   001BEE                     l884:
  4489   001BEE  A003               	btfss	___fladd@b^0,0,c
  4490   001BF0  EFFC  F00D         	goto	u2511
  4491   001BF4  EFFE  F00D         	goto	u2510
  4492   001BF8                     u2511:
  4493   001BF8  EF00  F00E         	goto	l883
  4494   001BFC                     u2510:
  4495   001BFC  EFF3  F00D         	goto	l2962
  4496   001C00                     l883:
  4497   001C00  5010               	movf	___fladd@aexp^0,w,c
  4498   001C02  B4D8               	btfsc	status,2,c
  4499   001C04  EF06  F00E         	goto	u2521
  4500   001C08  EF08  F00E         	goto	u2520
  4501   001C0C                     u2521:
  4502   001C0C  EF33  F00E         	goto	l2974
  4503   001C10                     u2520:
  4504   001C10  0E01               	movlw	1
  4505   001C12  2603               	addwf	___fladd@b^0,f,c
  4506   001C14  0E00               	movlw	0
  4507   001C16  2204               	addwfc	(___fladd@b+1)^0,f,c
  4508   001C18  2205               	addwfc	(___fladd@b+2)^0,f,c
  4509   001C1A  2206               	addwfc	(___fladd@b+3)^0,f,c
  4510   001C1C  A006               	btfss	(___fladd@b+3)^0,0,c
  4511   001C1E  EF13  F00E         	goto	u2531
  4512   001C22  EF15  F00E         	goto	u2530
  4513   001C26                     u2531:
  4514   001C26  EF33  F00E         	goto	l2974
  4515   001C2A                     u2530:
  4516   001C2A  C003  F00B         	movff	___fladd@b,??___fladd
  4517   001C2E  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  4518   001C32  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  4519   001C36  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  4520   001C3A  340E               	rlcf	(??___fladd+3)^0,w,c
  4521   001C3C  320E               	rrcf	(??___fladd+3)^0,f,c
  4522   001C3E  320D               	rrcf	(??___fladd+2)^0,f,c
  4523   001C40  320C               	rrcf	(??___fladd+1)^0,f,c
  4524   001C42  320B               	rrcf	??___fladd^0,f,c
  4525   001C44  C00B  F003         	movff	??___fladd,___fladd@b
  4526   001C48  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  4527   001C4C  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  4528   001C50  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  4529   001C54  2811               	incf	___fladd@bexp^0,w,c
  4530   001C56  B4D8               	btfsc	status,2,c
  4531   001C58  EF30  F00E         	goto	u2541
  4532   001C5C  EF32  F00E         	goto	u2540
  4533   001C60                     u2541:
  4534   001C60  EF33  F00E         	goto	l2974
  4535   001C64                     u2540:
  4536   001C64  2A11               	incf	___fladd@bexp^0,f,c
  4537   001C66                     l2974:
  4538   001C66  2811               	incf	___fladd@bexp^0,w,c
  4539   001C68  B4D8               	btfsc	status,2,c
  4540   001C6A  EF39  F00E         	goto	u2551
  4541   001C6E  EF3B  F00E         	goto	u2550
  4542   001C72                     u2551:
  4543   001C72  EF43  F00E         	goto	l2978
  4544   001C76                     u2550:
  4545   001C76  5011               	movf	___fladd@bexp^0,w,c
  4546   001C78  A4D8               	btfss	status,2,c
  4547   001C7A  EF41  F00E         	goto	u2561
  4548   001C7E  EF43  F00E         	goto	u2560
  4549   001C82                     u2561:
  4550   001C82  EF55  F00E         	goto	l2982
  4551   001C86                     u2560:
  4552   001C86                     l2978:
  4553   001C86  0E00               	movlw	0
  4554   001C88  6E03               	movwf	___fladd@b^0,c
  4555   001C8A  0E00               	movlw	0
  4556   001C8C  6E04               	movwf	(___fladd@b+1)^0,c
  4557   001C8E  0E00               	movlw	0
  4558   001C90  6E05               	movwf	(___fladd@b+2)^0,c
  4559   001C92  0E00               	movlw	0
  4560   001C94  6E06               	movwf	(___fladd@b+3)^0,c
  4561   001C96  5011               	movf	___fladd@bexp^0,w,c
  4562   001C98  A4D8               	btfss	status,2,c
  4563   001C9A  EF51  F00E         	goto	u2571
  4564   001C9E  EF53  F00E         	goto	u2570
  4565   001CA2                     u2571:
  4566   001CA2  EF55  F00E         	goto	l2982
  4567   001CA6                     u2570:
  4568   001CA6  0E00               	movlw	0
  4569   001CA8  6E0F               	movwf	___fladd@signs^0,c
  4570   001CAA                     l2982:
  4571   001CAA  A011               	btfss	___fladd@bexp^0,0,c
  4572   001CAC  EF5A  F00E         	goto	u2581
  4573   001CB0  EF5C  F00E         	goto	u2580
  4574   001CB4                     u2581:
  4575   001CB4  EF5F  F00E         	goto	l2986
  4576   001CB8                     u2580:
  4577   001CB8  8E05               	bsf	(___fladd@b+2)^0,7,c
  4578   001CBA  EF60  F00E         	goto	l2988
  4579   001CBE                     l2986:
  4580   001CBE  9E05               	bcf	(___fladd@b+2)^0,7,c
  4581   001CC0                     l2988:
  4582   001CC0  90D8               	bcf	status,0,c
  4583   001CC2  3011               	rrcf	___fladd@bexp^0,w,c
  4584   001CC4  6E06               	movwf	(___fladd@b+3)^0,c
  4585   001CC6  AE0F               	btfss	___fladd@signs^0,7,c
  4586   001CC8  EF68  F00E         	goto	u2591
  4587   001CCC  EF6A  F00E         	goto	u2590
  4588   001CD0                     u2591:
  4589   001CD0  EF6B  F00E         	goto	l2994
  4590   001CD4                     u2590:
  4591   001CD4  8E06               	bsf	(___fladd@b+3)^0,7,c
  4592   001CD6                     l2994:
  4593   001CD6  C003  F003         	movff	___fladd@b,?___fladd
  4594   001CDA  C004  F004         	movff	___fladd@b+1,?___fladd+1
  4595   001CDE  C005  F005         	movff	___fladd@b+2,?___fladd+2
  4596   001CE2  C006  F006         	movff	___fladd@b+3,?___fladd+3
  4597   001CE6                     l866:
  4598   001CE6  0012               	return		;funcret
  4599   001CE8                     __end_of___fladd:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function ___flneg *****************
  4603 ;; Defined at:
  4604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  f1              4    2[COMRAM] unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  4    2[COMRAM] unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;Total ram usage:        4 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 4
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_efgtoa
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text13
  4633   003D62                     __ptext13:
  4634                           	callstack 0
  4635   003D62                     ___flneg:
  4636                           	callstack 22
  4637   003D62  5003               	movf	___flneg@f1^0,w,c
  4638   003D64  1004               	iorwf	(___flneg@f1+1)^0,w,c
  4639   003D66  1005               	iorwf	(___flneg@f1+2)^0,w,c
  4640   003D68  1006               	iorwf	(___flneg@f1+3)^0,w,c
  4641   003D6A  B4D8               	btfsc	status,2,c
  4642   003D6C  EFBA  F01E         	goto	u3261
  4643   003D70  EFBC  F01E         	goto	u3260
  4644   003D74                     u3261:
  4645   003D74  EFC4  F01E         	goto	l3406
  4646   003D78                     u3260:
  4647   003D78  0E00               	movlw	0
  4648   003D7A  1A03               	xorwf	___flneg@f1^0,f,c
  4649   003D7C  0E00               	movlw	0
  4650   003D7E  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  4651   003D80  0E00               	movlw	0
  4652   003D82  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  4653   003D84  0E80               	movlw	128
  4654   003D86  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  4655   003D88                     l3406:
  4656   003D88  C003  F003         	movff	___flneg@f1,?___flneg
  4657   003D8C  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  4658   003D90  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  4659   003D94  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  4660   003D98  0012               	return		;funcret
  4661   003D9A                     __end_of___flneg:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function ___flmul *****************
  4665 ;; Defined at:
  4666 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  b               4    2[COMRAM] unsigned char 
  4669 ;;  a               4    6[COMRAM] unsigned char 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  prod            4   21[COMRAM] struct .
  4672 ;;  grs             4   15[COMRAM] unsigned long 
  4673 ;;  temp            2   25[COMRAM] struct .
  4674 ;;  bexp            1   20[COMRAM] unsigned char 
  4675 ;;  aexp            1   19[COMRAM] unsigned char 
  4676 ;;  sign            1   14[COMRAM] unsigned char 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  4    2[COMRAM] unsigned char 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2, status,0, prodl, prodh
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4686 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;Total ram usage:       25 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 4
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_efgtoa
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text14
  4701   001CE8                     __ptext14:
  4702                           	callstack 0
  4703   001CE8                     ___flmul:
  4704                           	callstack 22
  4705   001CE8  5006               	movf	(___flmul@b+3)^0,w,c
  4706   001CEA  0B80               	andlw	128
  4707   001CEC  6E0F               	movwf	___flmul@sign^0,c
  4708   001CEE  5006               	movf	(___flmul@b+3)^0,w,c
  4709   001CF0  2406               	addwf	(___flmul@b+3)^0,w,c
  4710   001CF2  6E15               	movwf	___flmul@bexp^0,c
  4711   001CF4  AE05               	btfss	(___flmul@b+2)^0,7,c
  4712   001CF6  EF7F  F00E         	goto	u2991
  4713   001CFA  EF81  F00E         	goto	u2990
  4714   001CFE                     u2991:
  4715   001CFE  EF82  F00E         	goto	l3234
  4716   001D02                     u2990:
  4717   001D02  8015               	bsf	___flmul@bexp^0,0,c
  4718   001D04                     l3234:
  4719   001D04  5015               	movf	___flmul@bexp^0,w,c
  4720   001D06  B4D8               	btfsc	status,2,c
  4721   001D08  EF88  F00E         	goto	u3001
  4722   001D0C  EF8A  F00E         	goto	u3000
  4723   001D10                     u3001:
  4724   001D10  EF9D  F00E         	goto	l3242
  4725   001D14                     u3000:
  4726   001D14  2815               	incf	___flmul@bexp^0,w,c
  4727   001D16  A4D8               	btfss	status,2,c
  4728   001D18  EF90  F00E         	goto	u3011
  4729   001D1C  EF92  F00E         	goto	u3010
  4730   001D20                     u3011:
  4731   001D20  EF9A  F00E         	goto	l3240
  4732   001D24                     u3010:
  4733   001D24  0E00               	movlw	0
  4734   001D26  6E03               	movwf	___flmul@b^0,c
  4735   001D28  0E00               	movlw	0
  4736   001D2A  6E04               	movwf	(___flmul@b+1)^0,c
  4737   001D2C  0E00               	movlw	0
  4738   001D2E  6E05               	movwf	(___flmul@b+2)^0,c
  4739   001D30  0E00               	movlw	0
  4740   001D32  6E06               	movwf	(___flmul@b+3)^0,c
  4741   001D34                     l3240:
  4742   001D34  8E05               	bsf	(___flmul@b+2)^0,7,c
  4743   001D36  EFA5  F00E         	goto	l3244
  4744   001D3A                     l3242:
  4745   001D3A  0E00               	movlw	0
  4746   001D3C  6E03               	movwf	___flmul@b^0,c
  4747   001D3E  0E00               	movlw	0
  4748   001D40  6E04               	movwf	(___flmul@b+1)^0,c
  4749   001D42  0E00               	movlw	0
  4750   001D44  6E05               	movwf	(___flmul@b+2)^0,c
  4751   001D46  0E00               	movlw	0
  4752   001D48  6E06               	movwf	(___flmul@b+3)^0,c
  4753   001D4A                     l3244:
  4754   001D4A  500A               	movf	(___flmul@a+3)^0,w,c
  4755   001D4C  0B80               	andlw	128
  4756   001D4E  1A0F               	xorwf	___flmul@sign^0,f,c
  4757   001D50  500A               	movf	(___flmul@a+3)^0,w,c
  4758   001D52  240A               	addwf	(___flmul@a+3)^0,w,c
  4759   001D54  6E14               	movwf	___flmul@aexp^0,c
  4760   001D56  AE09               	btfss	(___flmul@a+2)^0,7,c
  4761   001D58  EFB0  F00E         	goto	u3021
  4762   001D5C  EFB2  F00E         	goto	u3020
  4763   001D60                     u3021:
  4764   001D60  EFB3  F00E         	goto	l3252
  4765   001D64                     u3020:
  4766   001D64  8014               	bsf	___flmul@aexp^0,0,c
  4767   001D66                     l3252:
  4768   001D66  5014               	movf	___flmul@aexp^0,w,c
  4769   001D68  B4D8               	btfsc	status,2,c
  4770   001D6A  EFB9  F00E         	goto	u3031
  4771   001D6E  EFBB  F00E         	goto	u3030
  4772   001D72                     u3031:
  4773   001D72  EFCE  F00E         	goto	l3260
  4774   001D76                     u3030:
  4775   001D76  2814               	incf	___flmul@aexp^0,w,c
  4776   001D78  A4D8               	btfss	status,2,c
  4777   001D7A  EFC1  F00E         	goto	u3041
  4778   001D7E  EFC3  F00E         	goto	u3040
  4779   001D82                     u3041:
  4780   001D82  EFCB  F00E         	goto	l3258
  4781   001D86                     u3040:
  4782   001D86  0E00               	movlw	0
  4783   001D88  6E07               	movwf	___flmul@a^0,c
  4784   001D8A  0E00               	movlw	0
  4785   001D8C  6E08               	movwf	(___flmul@a+1)^0,c
  4786   001D8E  0E00               	movlw	0
  4787   001D90  6E09               	movwf	(___flmul@a+2)^0,c
  4788   001D92  0E00               	movlw	0
  4789   001D94  6E0A               	movwf	(___flmul@a+3)^0,c
  4790   001D96                     l3258:
  4791   001D96  8E09               	bsf	(___flmul@a+2)^0,7,c
  4792   001D98  EFD6  F00E         	goto	l943
  4793   001D9C                     l3260:
  4794   001D9C  0E00               	movlw	0
  4795   001D9E  6E07               	movwf	___flmul@a^0,c
  4796   001DA0  0E00               	movlw	0
  4797   001DA2  6E08               	movwf	(___flmul@a+1)^0,c
  4798   001DA4  0E00               	movlw	0
  4799   001DA6  6E09               	movwf	(___flmul@a+2)^0,c
  4800   001DA8  0E00               	movlw	0
  4801   001DAA  6E0A               	movwf	(___flmul@a+3)^0,c
  4802   001DAC                     l943:
  4803   001DAC  5014               	movf	___flmul@aexp^0,w,c
  4804   001DAE  B4D8               	btfsc	status,2,c
  4805   001DB0  EFDC  F00E         	goto	u3051
  4806   001DB4  EFDE  F00E         	goto	u3050
  4807   001DB8                     u3051:
  4808   001DB8  EFE6  F00E         	goto	l3264
  4809   001DBC                     u3050:
  4810   001DBC  5015               	movf	___flmul@bexp^0,w,c
  4811   001DBE  A4D8               	btfss	status,2,c
  4812   001DC0  EFE4  F00E         	goto	u3061
  4813   001DC4  EFE6  F00E         	goto	u3060
  4814   001DC8                     u3061:
  4815   001DC8  EFF0  F00E         	goto	l3268
  4816   001DCC                     u3060:
  4817   001DCC                     l3264:
  4818   001DCC  0E00               	movlw	0
  4819   001DCE  6E03               	movwf	?___flmul^0,c
  4820   001DD0  0E00               	movlw	0
  4821   001DD2  6E04               	movwf	(?___flmul+1)^0,c
  4822   001DD4  0E00               	movlw	0
  4823   001DD6  6E05               	movwf	(?___flmul+2)^0,c
  4824   001DD8  0E00               	movlw	0
  4825   001DDA  6E06               	movwf	(?___flmul+3)^0,c
  4826   001DDC  EF88  F010         	goto	l947
  4827   001DE0                     l3268:
  4828   001DE0  5009               	movf	(___flmul@a+2)^0,w,c
  4829   001DE2  0203               	mulwf	___flmul@b^0,c
  4830   001DE4  CFF3 F01A          	movff	prodl,___flmul@temp
  4831   001DE8  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4832   001DEC  501A               	movf	___flmul@temp^0,w,c
  4833   001DEE  6E10               	movwf	___flmul@grs^0,c
  4834   001DF0  6A11               	clrf	(___flmul@grs+1)^0,c
  4835   001DF2  6A12               	clrf	(___flmul@grs+2)^0,c
  4836   001DF4  6A13               	clrf	(___flmul@grs+3)^0,c
  4837   001DF6  501B               	movf	(___flmul@temp+1)^0,w,c
  4838   001DF8  6E16               	movwf	___flmul@prod^0,c
  4839   001DFA  6A17               	clrf	(___flmul@prod+1)^0,c
  4840   001DFC  6A18               	clrf	(___flmul@prod+2)^0,c
  4841   001DFE  6A19               	clrf	(___flmul@prod+3)^0,c
  4842   001E00  5008               	movf	(___flmul@a+1)^0,w,c
  4843   001E02  0204               	mulwf	(___flmul@b+1)^0,c
  4844   001E04  CFF3 F01A          	movff	prodl,___flmul@temp
  4845   001E08  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4846   001E0C  501A               	movf	___flmul@temp^0,w,c
  4847   001E0E  2610               	addwf	___flmul@grs^0,f,c
  4848   001E10  0E00               	movlw	0
  4849   001E12  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4850   001E14  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4851   001E16  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4852   001E18  501B               	movf	(___flmul@temp+1)^0,w,c
  4853   001E1A  2616               	addwf	___flmul@prod^0,f,c
  4854   001E1C  0E00               	movlw	0
  4855   001E1E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4856   001E20  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4857   001E22  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4858   001E24  5007               	movf	___flmul@a^0,w,c
  4859   001E26  0205               	mulwf	(___flmul@b+2)^0,c
  4860   001E28  CFF3 F01A          	movff	prodl,___flmul@temp
  4861   001E2C  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4862   001E30  501A               	movf	___flmul@temp^0,w,c
  4863   001E32  2610               	addwf	___flmul@grs^0,f,c
  4864   001E34  0E00               	movlw	0
  4865   001E36  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4866   001E38  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4867   001E3A  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4868   001E3C  501B               	movf	(___flmul@temp+1)^0,w,c
  4869   001E3E  2616               	addwf	___flmul@prod^0,f,c
  4870   001E40  0E00               	movlw	0
  4871   001E42  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4872   001E44  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4873   001E46  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4874   001E48  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4875   001E4C  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4876   001E50  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4877   001E54  6A10               	clrf	___flmul@grs^0,c
  4878   001E56  5007               	movf	___flmul@a^0,w,c
  4879   001E58  0204               	mulwf	(___flmul@b+1)^0,c
  4880   001E5A  CFF3 F01A          	movff	prodl,___flmul@temp
  4881   001E5E  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4882   001E62  501A               	movf	___flmul@temp^0,w,c
  4883   001E64  2610               	addwf	___flmul@grs^0,f,c
  4884   001E66  501B               	movf	(___flmul@temp+1)^0,w,c
  4885   001E68  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4886   001E6A  0E00               	movlw	0
  4887   001E6C  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4888   001E6E  0E00               	movlw	0
  4889   001E70  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4890   001E72  5008               	movf	(___flmul@a+1)^0,w,c
  4891   001E74  0203               	mulwf	___flmul@b^0,c
  4892   001E76  CFF3 F01A          	movff	prodl,___flmul@temp
  4893   001E7A  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4894   001E7E  501A               	movf	___flmul@temp^0,w,c
  4895   001E80  2610               	addwf	___flmul@grs^0,f,c
  4896   001E82  501B               	movf	(___flmul@temp+1)^0,w,c
  4897   001E84  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4898   001E86  0E00               	movlw	0
  4899   001E88  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4900   001E8A  0E00               	movlw	0
  4901   001E8C  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4902   001E8E  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4903   001E92  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4904   001E96  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4905   001E9A  6A10               	clrf	___flmul@grs^0,c
  4906   001E9C  5007               	movf	___flmul@a^0,w,c
  4907   001E9E  0203               	mulwf	___flmul@b^0,c
  4908   001EA0  CFF3 F01A          	movff	prodl,___flmul@temp
  4909   001EA4  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4910   001EA8  501A               	movf	___flmul@temp^0,w,c
  4911   001EAA  2610               	addwf	___flmul@grs^0,f,c
  4912   001EAC  501B               	movf	(___flmul@temp+1)^0,w,c
  4913   001EAE  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4914   001EB0  0E00               	movlw	0
  4915   001EB2  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4916   001EB4  0E00               	movlw	0
  4917   001EB6  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4918   001EB8  5009               	movf	(___flmul@a+2)^0,w,c
  4919   001EBA  0204               	mulwf	(___flmul@b+1)^0,c
  4920   001EBC  CFF3 F01A          	movff	prodl,___flmul@temp
  4921   001EC0  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4922   001EC4  501A               	movf	___flmul@temp^0,w,c
  4923   001EC6  2616               	addwf	___flmul@prod^0,f,c
  4924   001EC8  501B               	movf	(___flmul@temp+1)^0,w,c
  4925   001ECA  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4926   001ECC  0E00               	movlw	0
  4927   001ECE  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4928   001ED0  0E00               	movlw	0
  4929   001ED2  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4930   001ED4  5008               	movf	(___flmul@a+1)^0,w,c
  4931   001ED6  0205               	mulwf	(___flmul@b+2)^0,c
  4932   001ED8  CFF3 F01A          	movff	prodl,___flmul@temp
  4933   001EDC  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4934   001EE0  501A               	movf	___flmul@temp^0,w,c
  4935   001EE2  2616               	addwf	___flmul@prod^0,f,c
  4936   001EE4  501B               	movf	(___flmul@temp+1)^0,w,c
  4937   001EE6  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4938   001EE8  0E00               	movlw	0
  4939   001EEA  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4940   001EEC  0E00               	movlw	0
  4941   001EEE  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4942   001EF0  5009               	movf	(___flmul@a+2)^0,w,c
  4943   001EF2  0205               	mulwf	(___flmul@b+2)^0,c
  4944   001EF4  CFF3 F01A          	movff	prodl,___flmul@temp
  4945   001EF8  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4946   001EFC  501A               	movf	___flmul@temp^0,w,c
  4947   001EFE  6E0B               	movwf	??___flmul^0,c
  4948   001F00  501B               	movf	(___flmul@temp+1)^0,w,c
  4949   001F02  6E0C               	movwf	(??___flmul+1)^0,c
  4950   001F04  6A0D               	clrf	(??___flmul+2)^0,c
  4951   001F06  6A0E               	clrf	(??___flmul+3)^0,c
  4952   001F08  C00D  F00E         	movff	??___flmul+2,??___flmul+3
  4953   001F0C  C00C  F00D         	movff	??___flmul+1,??___flmul+2
  4954   001F10  C00B  F00C         	movff	??___flmul,??___flmul+1
  4955   001F14  6A0B               	clrf	??___flmul^0,c
  4956   001F16  500B               	movf	??___flmul^0,w,c
  4957   001F18  2616               	addwf	___flmul@prod^0,f,c
  4958   001F1A  500C               	movf	(??___flmul+1)^0,w,c
  4959   001F1C  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4960   001F1E  500D               	movf	(??___flmul+2)^0,w,c
  4961   001F20  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4962   001F22  500E               	movf	(??___flmul+3)^0,w,c
  4963   001F24  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4964   001F26  C010  F00B         	movff	___flmul@grs,??___flmul
  4965   001F2A  C011  F00C         	movff	___flmul@grs+1,??___flmul+1
  4966   001F2E  C012  F00D         	movff	___flmul@grs+2,??___flmul+2
  4967   001F32  C013  F00E         	movff	___flmul@grs+3,??___flmul+3
  4968   001F36  0E19               	movlw	25
  4969   001F38  EFA3  F00F         	goto	u3070
  4970   001F3C                     u3075:
  4971   001F3C  90D8               	bcf	status,0,c
  4972   001F3E  320E               	rrcf	(??___flmul+3)^0,f,c
  4973   001F40  320D               	rrcf	(??___flmul+2)^0,f,c
  4974   001F42  320C               	rrcf	(??___flmul+1)^0,f,c
  4975   001F44  320B               	rrcf	??___flmul^0,f,c
  4976   001F46                     u3070:
  4977   001F46  2EE8               	decfsz	wreg,f,c
  4978   001F48  EF9E  F00F         	goto	u3075
  4979   001F4C  500B               	movf	??___flmul^0,w,c
  4980   001F4E  2616               	addwf	___flmul@prod^0,f,c
  4981   001F50  500C               	movf	(??___flmul+1)^0,w,c
  4982   001F52  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4983   001F54  500D               	movf	(??___flmul+2)^0,w,c
  4984   001F56  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4985   001F58  500E               	movf	(??___flmul+3)^0,w,c
  4986   001F5A  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4987   001F5C  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4988   001F60  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4989   001F64  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4990   001F68  6A10               	clrf	___flmul@grs^0,c
  4991   001F6A  5014               	movf	___flmul@aexp^0,w,c
  4992   001F6C  C015  F00B         	movff	___flmul@bexp,??___flmul
  4993   001F70  6A0C               	clrf	(??___flmul+1)^0,c
  4994   001F72  260B               	addwf	??___flmul^0,f,c
  4995   001F74  0E00               	movlw	0
  4996   001F76  220C               	addwfc	(??___flmul+1)^0,f,c
  4997   001F78  0E82               	movlw	130
  4998   001F7A  240B               	addwf	??___flmul^0,w,c
  4999   001F7C  6E1A               	movwf	___flmul@temp^0,c
  5000   001F7E  0EFF               	movlw	255
  5001   001F80  200C               	addwfc	(??___flmul+1)^0,w,c
  5002   001F82  6E1B               	movwf	(___flmul@temp+1)^0,c
  5003   001F84  EFD9  F00F         	goto	l3316
  5004   001F88                     l3310:
  5005   001F88  90D8               	bcf	status,0,c
  5006   001F8A  3616               	rlcf	___flmul@prod^0,f,c
  5007   001F8C  3617               	rlcf	(___flmul@prod+1)^0,f,c
  5008   001F8E  3618               	rlcf	(___flmul@prod+2)^0,f,c
  5009   001F90  3619               	rlcf	(___flmul@prod+3)^0,f,c
  5010   001F92  AE13               	btfss	(___flmul@grs+3)^0,7,c
  5011   001F94  EFCE  F00F         	goto	u3081
  5012   001F98  EFD0  F00F         	goto	u3080
  5013   001F9C                     u3081:
  5014   001F9C  EFD1  F00F         	goto	l950
  5015   001FA0                     u3080:
  5016   001FA0  8016               	bsf	___flmul@prod^0,0,c
  5017   001FA2                     l950:
  5018   001FA2  90D8               	bcf	status,0,c
  5019   001FA4  3610               	rlcf	___flmul@grs^0,f,c
  5020   001FA6  3611               	rlcf	(___flmul@grs+1)^0,f,c
  5021   001FA8  3612               	rlcf	(___flmul@grs+2)^0,f,c
  5022   001FAA  3613               	rlcf	(___flmul@grs+3)^0,f,c
  5023   001FAC  061A               	decf	___flmul@temp^0,f,c
  5024   001FAE  A0D8               	btfss	status,0,c
  5025   001FB0  061B               	decf	(___flmul@temp+1)^0,f,c
  5026   001FB2                     l3316:
  5027   001FB2  AE18               	btfss	(___flmul@prod+2)^0,7,c
  5028   001FB4  EFDE  F00F         	goto	u3091
  5029   001FB8  EFE0  F00F         	goto	u3090
  5030   001FBC                     u3091:
  5031   001FBC  EFC4  F00F         	goto	l3310
  5032   001FC0                     u3090:
  5033   001FC0  0E00               	movlw	0
  5034   001FC2  6E14               	movwf	___flmul@aexp^0,c
  5035   001FC4  AE13               	btfss	(___flmul@grs+3)^0,7,c
  5036   001FC6  EFE7  F00F         	goto	u3101
  5037   001FCA  EFE9  F00F         	goto	u3100
  5038   001FCE                     u3101:
  5039   001FCE  EF0D  F010         	goto	l952
  5040   001FD2                     u3100:
  5041   001FD2  0EFF               	movlw	255
  5042   001FD4  1410               	andwf	___flmul@grs^0,w,c
  5043   001FD6  6E0B               	movwf	??___flmul^0,c
  5044   001FD8  0EFF               	movlw	255
  5045   001FDA  1411               	andwf	(___flmul@grs+1)^0,w,c
  5046   001FDC  6E0C               	movwf	(??___flmul+1)^0,c
  5047   001FDE  0EFF               	movlw	255
  5048   001FE0  1412               	andwf	(___flmul@grs+2)^0,w,c
  5049   001FE2  6E0D               	movwf	(??___flmul+2)^0,c
  5050   001FE4  0E7F               	movlw	127
  5051   001FE6  1413               	andwf	(___flmul@grs+3)^0,w,c
  5052   001FE8  6E0E               	movwf	(??___flmul+3)^0,c
  5053   001FEA  500B               	movf	??___flmul^0,w,c
  5054   001FEC  100C               	iorwf	(??___flmul+1)^0,w,c
  5055   001FEE  100D               	iorwf	(??___flmul+2)^0,w,c
  5056   001FF0  100E               	iorwf	(??___flmul+3)^0,w,c
  5057   001FF2  B4D8               	btfsc	status,2,c
  5058   001FF4  EFFE  F00F         	goto	u3111
  5059   001FF8  EF00  F010         	goto	u3110
  5060   001FFC                     u3111:
  5061   001FFC  EF04  F010         	goto	l953
  5062   002000                     u3110:
  5063   002000                     l3324:
  5064   002000  0E01               	movlw	1
  5065   002002  6E14               	movwf	___flmul@aexp^0,c
  5066   002004  EF0D  F010         	goto	l952
  5067   002008                     l953:
  5068   002008  A016               	btfss	___flmul@prod^0,0,c
  5069   00200A  EF09  F010         	goto	u3121
  5070   00200E  EF0B  F010         	goto	u3120
  5071   002012                     u3121:
  5072   002012  EF0D  F010         	goto	l952
  5073   002016                     u3120:
  5074   002016  EF00  F010         	goto	l3324
  5075   00201A                     l952:
  5076   00201A  5014               	movf	___flmul@aexp^0,w,c
  5077   00201C  B4D8               	btfsc	status,2,c
  5078   00201E  EF13  F010         	goto	u3131
  5079   002022  EF15  F010         	goto	u3130
  5080   002026                     u3131:
  5081   002026  EF39  F010         	goto	l3336
  5082   00202A                     u3130:
  5083   00202A  0E01               	movlw	1
  5084   00202C  2616               	addwf	___flmul@prod^0,f,c
  5085   00202E  0E00               	movlw	0
  5086   002030  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5087   002032  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5088   002034  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5089   002036  A019               	btfss	(___flmul@prod+3)^0,0,c
  5090   002038  EF20  F010         	goto	u3141
  5091   00203C  EF22  F010         	goto	u3140
  5092   002040                     u3141:
  5093   002040  EF39  F010         	goto	l3336
  5094   002044                     u3140:
  5095   002044  C016  F00B         	movff	___flmul@prod,??___flmul
  5096   002048  C017  F00C         	movff	___flmul@prod+1,??___flmul+1
  5097   00204C  C018  F00D         	movff	___flmul@prod+2,??___flmul+2
  5098   002050  C019  F00E         	movff	___flmul@prod+3,??___flmul+3
  5099   002054  340E               	rlcf	(??___flmul+3)^0,w,c
  5100   002056  320E               	rrcf	(??___flmul+3)^0,f,c
  5101   002058  320D               	rrcf	(??___flmul+2)^0,f,c
  5102   00205A  320C               	rrcf	(??___flmul+1)^0,f,c
  5103   00205C  320B               	rrcf	??___flmul^0,f,c
  5104   00205E  C00B  F016         	movff	??___flmul,___flmul@prod
  5105   002062  C00C  F017         	movff	??___flmul+1,___flmul@prod+1
  5106   002066  C00D  F018         	movff	??___flmul+2,___flmul@prod+2
  5107   00206A  C00E  F019         	movff	??___flmul+3,___flmul@prod+3
  5108   00206E  4A1A               	infsnz	___flmul@temp^0,f,c
  5109   002070  2A1B               	incf	(___flmul@temp+1)^0,f,c
  5110   002072                     l3336:
  5111   002072  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  5112   002074  EF44  F010         	goto	u3151
  5113   002078  501B               	movf	(___flmul@temp+1)^0,w,c
  5114   00207A  E108               	bnz	u3150
  5115   00207C  281A               	incf	___flmul@temp^0,w,c
  5116   00207E  A0D8               	btfss	status,0,c
  5117   002080  EF44  F010         	goto	u3151
  5118   002084  EF46  F010         	goto	u3150
  5119   002088                     u3151:
  5120   002088  EF50  F010         	goto	l3340
  5121   00208C                     u3150:
  5122   00208C  0E00               	movlw	0
  5123   00208E  6E16               	movwf	___flmul@prod^0,c
  5124   002090  0E00               	movlw	0
  5125   002092  6E17               	movwf	(___flmul@prod+1)^0,c
  5126   002094  0E80               	movlw	128
  5127   002096  6E18               	movwf	(___flmul@prod+2)^0,c
  5128   002098  0E7F               	movlw	127
  5129   00209A  6E19               	movwf	(___flmul@prod+3)^0,c
  5130   00209C  EF7E  F010         	goto	l3352
  5131   0020A0                     l3340:
  5132   0020A0  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  5133   0020A2  EF5D  F010         	goto	u3160
  5134   0020A6  501B               	movf	(___flmul@temp+1)^0,w,c
  5135   0020A8  E106               	bnz	u3161
  5136   0020AA  041A               	decf	___flmul@temp^0,w,c
  5137   0020AC  B0D8               	btfsc	status,0,c
  5138   0020AE  EF5B  F010         	goto	u3161
  5139   0020B2  EF5D  F010         	goto	u3160
  5140   0020B6                     u3161:
  5141   0020B6  EF69  F010         	goto	l960
  5142   0020BA                     u3160:
  5143   0020BA  0E00               	movlw	0
  5144   0020BC  6E16               	movwf	___flmul@prod^0,c
  5145   0020BE  0E00               	movlw	0
  5146   0020C0  6E17               	movwf	(___flmul@prod+1)^0,c
  5147   0020C2  0E00               	movlw	0
  5148   0020C4  6E18               	movwf	(___flmul@prod+2)^0,c
  5149   0020C6  0E00               	movlw	0
  5150   0020C8  6E19               	movwf	(___flmul@prod+3)^0,c
  5151   0020CA  0E00               	movlw	0
  5152   0020CC  6E0F               	movwf	___flmul@sign^0,c
  5153   0020CE  EF7E  F010         	goto	l3352
  5154   0020D2                     l960:
  5155   0020D2  C01A  F015         	movff	___flmul@temp,___flmul@bexp
  5156   0020D6  0EFF               	movlw	255
  5157   0020D8  1616               	andwf	___flmul@prod^0,f,c
  5158   0020DA  0EFF               	movlw	255
  5159   0020DC  1617               	andwf	(___flmul@prod+1)^0,f,c
  5160   0020DE  0E7F               	movlw	127
  5161   0020E0  1618               	andwf	(___flmul@prod+2)^0,f,c
  5162   0020E2  0E00               	movlw	0
  5163   0020E4  1619               	andwf	(___flmul@prod+3)^0,f,c
  5164   0020E6  A015               	btfss	___flmul@bexp^0,0,c
  5165   0020E8  EF78  F010         	goto	u3171
  5166   0020EC  EF7A  F010         	goto	u3170
  5167   0020F0                     u3171:
  5168   0020F0  EF7B  F010         	goto	l3350
  5169   0020F4                     u3170:
  5170   0020F4  8E18               	bsf	(___flmul@prod+2)^0,7,c
  5171   0020F6                     l3350:
  5172   0020F6  90D8               	bcf	status,0,c
  5173   0020F8  3015               	rrcf	___flmul@bexp^0,w,c
  5174   0020FA  6E19               	movwf	(___flmul@prod+3)^0,c
  5175   0020FC                     l3352:
  5176   0020FC  500F               	movf	___flmul@sign^0,w,c
  5177   0020FE  1219               	iorwf	(___flmul@prod+3)^0,f,c
  5178   002100  C016  F003         	movff	___flmul@prod,?___flmul
  5179   002104  C017  F004         	movff	___flmul@prod+1,?___flmul+1
  5180   002108  C018  F005         	movff	___flmul@prod+2,?___flmul+2
  5181   00210C  C019  F006         	movff	___flmul@prod+3,?___flmul+3
  5182   002110                     l947:
  5183   002110  0012               	return		;funcret
  5184   002112                     __end_of___flmul:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function ___flge *****************
  5188 ;; Defined at:
  5189 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  ff1             4   27[COMRAM] unsigned char 
  5192 ;;  ff2             4   31[COMRAM] unsigned char 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;		None               void
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5204 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;Total ram usage:       12 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 4
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_efgtoa
  5215 ;;		_Colour_decider
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text15
  5220   00348A                     __ptext15:
  5221                           	callstack 0
  5222   00348A                     ___flge:
  5223                           	callstack 22
  5224   00348A  0E00               	movlw	0
  5225   00348C  141C               	andwf	___flge@ff1^0,w,c
  5226   00348E  6E24               	movwf	??___flge^0,c
  5227   003490  0E00               	movlw	0
  5228   003492  141D               	andwf	(___flge@ff1+1)^0,w,c
  5229   003494  6E25               	movwf	(??___flge+1)^0,c
  5230   003496  0E80               	movlw	128
  5231   003498  141E               	andwf	(___flge@ff1+2)^0,w,c
  5232   00349A  6E26               	movwf	(??___flge+2)^0,c
  5233   00349C  0E7F               	movlw	127
  5234   00349E  141F               	andwf	(___flge@ff1+3)^0,w,c
  5235   0034A0  6E27               	movwf	(??___flge+3)^0,c
  5236   0034A2  5024               	movf	??___flge^0,w,c
  5237   0034A4  1025               	iorwf	(??___flge+1)^0,w,c
  5238   0034A6  1026               	iorwf	(??___flge+2)^0,w,c
  5239   0034A8  1027               	iorwf	(??___flge+3)^0,w,c
  5240   0034AA  A4D8               	btfss	status,2,c
  5241   0034AC  EF5A  F01A         	goto	u3211
  5242   0034B0  EF5C  F01A         	goto	u3210
  5243   0034B4                     u3211:
  5244   0034B4  EF64  F01A         	goto	l3384
  5245   0034B8                     u3210:
  5246   0034B8  0E00               	movlw	0
  5247   0034BA  6E1C               	movwf	___flge@ff1^0,c
  5248   0034BC  0E00               	movlw	0
  5249   0034BE  6E1D               	movwf	(___flge@ff1+1)^0,c
  5250   0034C0  0E00               	movlw	0
  5251   0034C2  6E1E               	movwf	(___flge@ff1+2)^0,c
  5252   0034C4  0E00               	movlw	0
  5253   0034C6  6E1F               	movwf	(___flge@ff1+3)^0,c
  5254   0034C8                     l3384:
  5255   0034C8  0E00               	movlw	0
  5256   0034CA  1420               	andwf	___flge@ff2^0,w,c
  5257   0034CC  6E24               	movwf	??___flge^0,c
  5258   0034CE  0E00               	movlw	0
  5259   0034D0  1421               	andwf	(___flge@ff2+1)^0,w,c
  5260   0034D2  6E25               	movwf	(??___flge+1)^0,c
  5261   0034D4  0E80               	movlw	128
  5262   0034D6  1422               	andwf	(___flge@ff2+2)^0,w,c
  5263   0034D8  6E26               	movwf	(??___flge+2)^0,c
  5264   0034DA  0E7F               	movlw	127
  5265   0034DC  1423               	andwf	(___flge@ff2+3)^0,w,c
  5266   0034DE  6E27               	movwf	(??___flge+3)^0,c
  5267   0034E0  5024               	movf	??___flge^0,w,c
  5268   0034E2  1025               	iorwf	(??___flge+1)^0,w,c
  5269   0034E4  1026               	iorwf	(??___flge+2)^0,w,c
  5270   0034E6  1027               	iorwf	(??___flge+3)^0,w,c
  5271   0034E8  A4D8               	btfss	status,2,c
  5272   0034EA  EF79  F01A         	goto	u3221
  5273   0034EE  EF7B  F01A         	goto	u3220
  5274   0034F2                     u3221:
  5275   0034F2  EF83  F01A         	goto	l3388
  5276   0034F6                     u3220:
  5277   0034F6  0E00               	movlw	0
  5278   0034F8  6E20               	movwf	___flge@ff2^0,c
  5279   0034FA  0E00               	movlw	0
  5280   0034FC  6E21               	movwf	(___flge@ff2+1)^0,c
  5281   0034FE  0E00               	movlw	0
  5282   003500  6E22               	movwf	(___flge@ff2+2)^0,c
  5283   003502  0E00               	movlw	0
  5284   003504  6E23               	movwf	(___flge@ff2+3)^0,c
  5285   003506                     l3388:
  5286   003506  AE1F               	btfss	(___flge@ff1+3)^0,7,c
  5287   003508  EF88  F01A         	goto	u3231
  5288   00350C  EF8A  F01A         	goto	u3230
  5289   003510                     u3231:
  5290   003510  EF93  F01A         	goto	l3392
  5291   003514                     u3230:
  5292   003514  6C1C               	negf	___flge@ff1^0,c
  5293   003516  1E1D               	comf	(___flge@ff1+1)^0,f,c
  5294   003518  B0D8               	btfsc	status,0,c
  5295   00351A  2A1D               	incf	(___flge@ff1+1)^0,f,c
  5296   00351C  1E1E               	comf	(___flge@ff1+2)^0,f,c
  5297   00351E  B0D8               	btfsc	status,0,c
  5298   003520  2A1E               	incf	(___flge@ff1+2)^0,f,c
  5299   003522  0E80               	movlw	128
  5300   003524  561F               	subfwb	(___flge@ff1+3)^0,f,c
  5301   003526                     l3392:
  5302   003526  AE23               	btfss	(___flge@ff2+3)^0,7,c
  5303   003528  EF98  F01A         	goto	u3241
  5304   00352C  EF9A  F01A         	goto	u3240
  5305   003530                     u3241:
  5306   003530  EFA3  F01A         	goto	l594
  5307   003534                     u3240:
  5308   003534  6C20               	negf	___flge@ff2^0,c
  5309   003536  1E21               	comf	(___flge@ff2+1)^0,f,c
  5310   003538  B0D8               	btfsc	status,0,c
  5311   00353A  2A21               	incf	(___flge@ff2+1)^0,f,c
  5312   00353C  1E22               	comf	(___flge@ff2+2)^0,f,c
  5313   00353E  B0D8               	btfsc	status,0,c
  5314   003540  2A22               	incf	(___flge@ff2+2)^0,f,c
  5315   003542  0E80               	movlw	128
  5316   003544  5623               	subfwb	(___flge@ff2+3)^0,f,c
  5317   003546                     l594:
  5318   003546  0E00               	movlw	0
  5319   003548  1A1C               	xorwf	___flge@ff1^0,f,c
  5320   00354A  0E00               	movlw	0
  5321   00354C  1A1D               	xorwf	(___flge@ff1+1)^0,f,c
  5322   00354E  0E00               	movlw	0
  5323   003550  1A1E               	xorwf	(___flge@ff1+2)^0,f,c
  5324   003552  0E80               	movlw	128
  5325   003554  1A1F               	xorwf	(___flge@ff1+3)^0,f,c
  5326   003556  0E00               	movlw	0
  5327   003558  1A20               	xorwf	___flge@ff2^0,f,c
  5328   00355A  0E00               	movlw	0
  5329   00355C  1A21               	xorwf	(___flge@ff2+1)^0,f,c
  5330   00355E  0E00               	movlw	0
  5331   003560  1A22               	xorwf	(___flge@ff2+2)^0,f,c
  5332   003562  0E80               	movlw	128
  5333   003564  1A23               	xorwf	(___flge@ff2+3)^0,f,c
  5334   003566  5020               	movf	___flge@ff2^0,w,c
  5335   003568  5C1C               	subwf	___flge@ff1^0,w,c
  5336   00356A  5021               	movf	(___flge@ff2+1)^0,w,c
  5337   00356C  581D               	subwfb	(___flge@ff1+1)^0,w,c
  5338   00356E  5022               	movf	(___flge@ff2+2)^0,w,c
  5339   003570  581E               	subwfb	(___flge@ff1+2)^0,w,c
  5340   003572  5023               	movf	(___flge@ff2+3)^0,w,c
  5341   003574  581F               	subwfb	(___flge@ff1+3)^0,w,c
  5342   003576  B0D8               	btfsc	status,0,c
  5343   003578  EFC0  F01A         	goto	u3251
  5344   00357C  EFC2  F01A         	goto	u3250
  5345   003580                     u3251:
  5346   003580  EFC5  F01A         	goto	l3398
  5347   003584                     u3250:
  5348   003584  90D8               	bcf	status,0,c
  5349   003586  EFC6  F01A         	goto	l599
  5350   00358A                     l3398:
  5351   00358A  80D8               	bsf	status,0,c
  5352   00358C                     l599:
  5353   00358C  0012               	return		;funcret
  5354   00358E                     __end_of___flge:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function ___fleq *****************
  5358 ;; Defined at:
  5359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  ff1             4    2[COMRAM] unsigned char 
  5362 ;;  ff2             4    6[COMRAM] unsigned char 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;		None               void
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;Total ram usage:       12 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 4
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_efgtoa
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text16
  5389   003756                     __ptext16:
  5390                           	callstack 0
  5391   003756                     ___fleq:
  5392                           	callstack 22
  5393   003756  0E00               	movlw	0
  5394   003758  1403               	andwf	___fleq@ff1^0,w,c
  5395   00375A  6E0B               	movwf	??___fleq^0,c
  5396   00375C  0E00               	movlw	0
  5397   00375E  1404               	andwf	(___fleq@ff1+1)^0,w,c
  5398   003760  6E0C               	movwf	(??___fleq+1)^0,c
  5399   003762  0E80               	movlw	128
  5400   003764  1405               	andwf	(___fleq@ff1+2)^0,w,c
  5401   003766  6E0D               	movwf	(??___fleq+2)^0,c
  5402   003768  0E7F               	movlw	127
  5403   00376A  1406               	andwf	(___fleq@ff1+3)^0,w,c
  5404   00376C  6E0E               	movwf	(??___fleq+3)^0,c
  5405   00376E  500B               	movf	??___fleq^0,w,c
  5406   003770  100C               	iorwf	(??___fleq+1)^0,w,c
  5407   003772  100D               	iorwf	(??___fleq+2)^0,w,c
  5408   003774  100E               	iorwf	(??___fleq+3)^0,w,c
  5409   003776  A4D8               	btfss	status,2,c
  5410   003778  EFC0  F01B         	goto	u3181
  5411   00377C  EFC2  F01B         	goto	u3180
  5412   003780                     u3181:
  5413   003780  EFCA  F01B         	goto	l3368
  5414   003784                     u3180:
  5415   003784  0E00               	movlw	0
  5416   003786  6E03               	movwf	___fleq@ff1^0,c
  5417   003788  0E00               	movlw	0
  5418   00378A  6E04               	movwf	(___fleq@ff1+1)^0,c
  5419   00378C  0E00               	movlw	0
  5420   00378E  6E05               	movwf	(___fleq@ff1+2)^0,c
  5421   003790  0E00               	movlw	0
  5422   003792  6E06               	movwf	(___fleq@ff1+3)^0,c
  5423   003794                     l3368:
  5424   003794  0E00               	movlw	0
  5425   003796  1407               	andwf	___fleq@ff2^0,w,c
  5426   003798  6E0B               	movwf	??___fleq^0,c
  5427   00379A  0E00               	movlw	0
  5428   00379C  1408               	andwf	(___fleq@ff2+1)^0,w,c
  5429   00379E  6E0C               	movwf	(??___fleq+1)^0,c
  5430   0037A0  0E80               	movlw	128
  5431   0037A2  1409               	andwf	(___fleq@ff2+2)^0,w,c
  5432   0037A4  6E0D               	movwf	(??___fleq+2)^0,c
  5433   0037A6  0E7F               	movlw	127
  5434   0037A8  140A               	andwf	(___fleq@ff2+3)^0,w,c
  5435   0037AA  6E0E               	movwf	(??___fleq+3)^0,c
  5436   0037AC  500B               	movf	??___fleq^0,w,c
  5437   0037AE  100C               	iorwf	(??___fleq+1)^0,w,c
  5438   0037B0  100D               	iorwf	(??___fleq+2)^0,w,c
  5439   0037B2  100E               	iorwf	(??___fleq+3)^0,w,c
  5440   0037B4  A4D8               	btfss	status,2,c
  5441   0037B6  EFDF  F01B         	goto	u3191
  5442   0037BA  EFE1  F01B         	goto	u3190
  5443   0037BE                     u3191:
  5444   0037BE  EFE9  F01B         	goto	l3372
  5445   0037C2                     u3190:
  5446   0037C2  0E00               	movlw	0
  5447   0037C4  6E07               	movwf	___fleq@ff2^0,c
  5448   0037C6  0E00               	movlw	0
  5449   0037C8  6E08               	movwf	(___fleq@ff2+1)^0,c
  5450   0037CA  0E00               	movlw	0
  5451   0037CC  6E09               	movwf	(___fleq@ff2+2)^0,c
  5452   0037CE  0E00               	movlw	0
  5453   0037D0  6E0A               	movwf	(___fleq@ff2+3)^0,c
  5454   0037D2                     l3372:
  5455   0037D2  5007               	movf	___fleq@ff2^0,w,c
  5456   0037D4  1803               	xorwf	___fleq@ff1^0,w,c
  5457   0037D6  E10F               	bnz	u3200
  5458   0037D8  5008               	movf	(___fleq@ff2+1)^0,w,c
  5459   0037DA  1804               	xorwf	(___fleq@ff1+1)^0,w,c
  5460   0037DC  E10C               	bnz	u3200
  5461   0037DE  5009               	movf	(___fleq@ff2+2)^0,w,c
  5462   0037E0  1805               	xorwf	(___fleq@ff1+2)^0,w,c
  5463   0037E2  E109               	bnz	u3200
  5464   0037E4  500A               	movf	(___fleq@ff2+3)^0,w,c
  5465   0037E6  1806               	xorwf	(___fleq@ff1+3)^0,w,c
  5466   0037E8  B4D8               	btfsc	status,2,c
  5467   0037EA  EFF9  F01B         	goto	u3201
  5468   0037EE  EFFB  F01B         	goto	u3200
  5469   0037F2                     u3201:
  5470   0037F2  EFFE  F01B         	goto	l3376
  5471   0037F6                     u3200:
  5472   0037F6  90D8               	bcf	status,0,c
  5473   0037F8  EFFF  F01B         	goto	l588
  5474   0037FC                     l3376:
  5475   0037FC  80D8               	bsf	status,0,c
  5476   0037FE                     l588:
  5477   0037FE  0012               	return		;funcret
  5478   003800                     __end_of___fleq:
  5479                           	callstack 0
  5480                           
  5481 ;; *************** function _dtoa *****************
  5482 ;; Defined at:
  5483 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5486 ;;		 -> sprintf@f(11), 
  5487 ;;  d               8   31[COMRAM] long long 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  n               8   53[COMRAM] long long 
  5490 ;;  i               2   61[COMRAM] int 
  5491 ;;  w               2   51[COMRAM] int 
  5492 ;;  p               2   49[COMRAM] int 
  5493 ;;  s               1   63[COMRAM] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  1    wreg      void 
  5496 ;; Registers used:
  5497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5503 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;Total ram usage:       35 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 8
  5510 ;; This function calls:
  5511 ;;		___aodiv
  5512 ;;		___aomod
  5513 ;;		_abs
  5514 ;;		_pad
  5515 ;; This function is called by:
  5516 ;;		_vfpfcnvrt
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text17
  5521   0027B2                     __ptext17:
  5522                           	callstack 0
  5523   0027B2                     _dtoa:
  5524                           	callstack 19
  5525   0027B2                     
  5526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5527   0027B2  C020  F036         	movff	dtoa@d,dtoa@n
  5528   0027B6  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  5529   0027BA  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  5530   0027BE  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  5531   0027C2  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  5532   0027C6  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  5533   0027CA  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  5534   0027CE  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  5535   0027D2                     
  5536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5537   0027D2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5538   0027D4  EFEE  F013         	goto	u3571
  5539   0027D8  EFF1  F013         	goto	u3570
  5540   0027DC                     u3571:
  5541   0027DC  0E01               	movlw	1
  5542   0027DE  EFF2  F013         	goto	u3580
  5543   0027E2                     u3570:
  5544   0027E2  0E00               	movlw	0
  5545   0027E4                     u3580:
  5546   0027E4  6E40               	movwf	dtoa@s^0,c
  5547   0027E6                     
  5548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5549   0027E6  5040               	movf	dtoa@s^0,w,c
  5550   0027E8  B4D8               	btfsc	status,2,c
  5551   0027EA  EFF9  F013         	goto	u3591
  5552   0027EE  EFFB  F013         	goto	u3590
  5553   0027F2                     u3591:
  5554   0027F2  EF0B  F014         	goto	l3562
  5555   0027F6                     u3590:
  5556   0027F6                     
  5557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5558   0027F6  1E3D               	comf	(dtoa@n+7)^0,f,c
  5559   0027F8  1E3C               	comf	(dtoa@n+6)^0,f,c
  5560   0027FA  1E3B               	comf	(dtoa@n+5)^0,f,c
  5561   0027FC  1E3A               	comf	(dtoa@n+4)^0,f,c
  5562   0027FE  1E39               	comf	(dtoa@n+3)^0,f,c
  5563   002800  1E38               	comf	(dtoa@n+2)^0,f,c
  5564   002802  1E37               	comf	(dtoa@n+1)^0,f,c
  5565   002804  6C36               	negf	dtoa@n^0,c
  5566   002806  0E00               	movlw	0
  5567   002808  2237               	addwfc	(dtoa@n+1)^0,f,c
  5568   00280A  2238               	addwfc	(dtoa@n+2)^0,f,c
  5569   00280C  2239               	addwfc	(dtoa@n+3)^0,f,c
  5570   00280E  223A               	addwfc	(dtoa@n+4)^0,f,c
  5571   002810  223B               	addwfc	(dtoa@n+5)^0,f,c
  5572   002812  223C               	addwfc	(dtoa@n+6)^0,f,c
  5573   002814  223D               	addwfc	(dtoa@n+7)^0,f,c
  5574   002816                     l3562:
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5577   002816  BE57               	btfsc	(_prec+1)^0,7,c
  5578   002818  EF18  F014         	goto	u3600
  5579   00281C  5057               	movf	(_prec+1)^0,w,c
  5580   00281E  E106               	bnz	u3601
  5581   002820  0456               	decf	_prec^0,w,c
  5582   002822  B0D8               	btfsc	status,0,c
  5583   002824  EF16  F014         	goto	u3601
  5584   002828  EF18  F014         	goto	u3600
  5585   00282C                     u3601:
  5586   00282C  EF1E  F014         	goto	l1048
  5587   002830                     u3600:
  5588   002830  0E00               	movlw	0
  5589   002832  6E33               	movwf	(dtoa@p+1)^0,c
  5590   002834  0E01               	movlw	1
  5591   002836  6E32               	movwf	dtoa@p^0,c
  5592   002838  EF22  F014         	goto	l1050
  5593   00283C                     l1048:
  5594   00283C  C056  F032         	movff	_prec,dtoa@p
  5595   002840  C057  F033         	movff	_prec+1,dtoa@p+1
  5596   002844                     l1050:
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5599   002844  C0ED  F034         	movff	_width,dtoa@w
  5600   002848  C0EE  F035         	movff	_width+1,dtoa@w+1
  5601   00284C                     
  5602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5603   00284C  5040               	movf	dtoa@s^0,w,c
  5604   00284E  B4D8               	btfsc	status,2,c
  5605   002850  EF2C  F014         	goto	u3611
  5606   002854  EF2E  F014         	goto	u3610
  5607   002858                     u3611:
  5608   002858  EF45  F014         	goto	l1051
  5609   00285C                     u3610:
  5610   00285C                     
  5611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5612   00285C  0634               	decf	dtoa@w^0,f,c
  5613   00285E  A0D8               	btfss	status,0,c
  5614   002860  0635               	decf	(dtoa@w+1)^0,f,c
  5615   002862                     
  5616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5617   002862  5040               	movf	dtoa@s^0,w,c
  5618   002864  A4D8               	btfss	status,2,c
  5619   002866  EF37  F014         	goto	u3621
  5620   00286A  EF39  F014         	goto	u3620
  5621   00286E                     u3621:
  5622   00286E  EF3F  F014         	goto	l3574
  5623   002872                     u3620:
  5624   002872  0E00               	movlw	0
  5625   002874  6E31               	movwf	(_dtoa$1667+1)^0,c
  5626   002876  0E2B               	movlw	43
  5627   002878  6E30               	movwf	_dtoa$1667^0,c
  5628   00287A  EF43  F014         	goto	l3576
  5629   00287E                     l3574:
  5630   00287E  0E00               	movlw	0
  5631   002880  6E31               	movwf	(_dtoa$1667+1)^0,c
  5632   002882  0E2D               	movlw	45
  5633   002884  6E30               	movwf	_dtoa$1667^0,c
  5634   002886                     l3576:
  5635   002886  C030  F040         	movff	_dtoa$1667,dtoa@s
  5636   00288A                     l1051:
  5637                           
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5639   00288A  0E00               	movlw	0
  5640   00288C  6E3F               	movwf	(dtoa@i+1)^0,c
  5641   00288E  0E4F               	movlw	79
  5642   002890  6E3E               	movwf	dtoa@i^0,c
  5643   002892                     
  5644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5645   002892  0E00               	movlw	0
  5646   002894  0101               	movlb	1	; () banked
  5647   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5648                           
  5649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5650   002898  EFCA  F014         	goto	l3590
  5651   00289C                     l3580:
  5652                           
  5653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5654   00289C  063E               	decf	dtoa@i^0,f,c
  5655   00289E  A0D8               	btfss	status,0,c
  5656   0028A0  063F               	decf	(dtoa@i+1)^0,f,c
  5657   0028A2                     
  5658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5659   0028A2  0E50               	movlw	low _dbuf
  5660   0028A4  243E               	addwf	dtoa@i^0,w,c
  5661   0028A6  6ED9               	movwf	fsr2l,c
  5662   0028A8  0E01               	movlw	high _dbuf
  5663   0028AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  5664   0028AC  6EDA               	movwf	fsr2h,c
  5665   0028AE  C036  F003         	movff	dtoa@n,___aomod@dividend
  5666   0028B2  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  5667   0028B6  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  5668   0028BA  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  5669   0028BE  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  5670   0028C2  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  5671   0028C6  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  5672   0028CA  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  5673   0028CE  0E0A               	movlw	10
  5674   0028D0  6E0B               	movwf	___aomod@divisor^0,c
  5675   0028D2  0E00               	movlw	0
  5676   0028D4  6E0C               	movwf	(___aomod@divisor+1)^0,c
  5677   0028D6  0E00               	movlw	0
  5678   0028D8  6E0D               	movwf	(___aomod@divisor+2)^0,c
  5679   0028DA  0E00               	movlw	0
  5680   0028DC  6E0E               	movwf	(___aomod@divisor+3)^0,c
  5681   0028DE  0E00               	movlw	0
  5682   0028E0  6E0F               	movwf	(___aomod@divisor+4)^0,c
  5683   0028E2  0E00               	movlw	0
  5684   0028E4  6E10               	movwf	(___aomod@divisor+5)^0,c
  5685   0028E6  0E00               	movlw	0
  5686   0028E8  6E11               	movwf	(___aomod@divisor+6)^0,c
  5687   0028EA  0E00               	movlw	0
  5688   0028EC  6E12               	movwf	(___aomod@divisor+7)^0,c
  5689   0028EE  EC83  F018         	call	___aomod	;wreg free
  5690   0028F2  C003  F028         	movff	?___aomod,??_dtoa
  5691   0028F6  C004  F029         	movff	?___aomod+1,??_dtoa+1
  5692   0028FA  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  5693   0028FE  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  5694   002902  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  5695   002906  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  5696   00290A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  5697   00290E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  5698   002912  C028  F015         	movff	??_dtoa,abs@a
  5699   002916  C029  F016         	movff	??_dtoa+1,abs@a+1
  5700   00291A  EC91  F01E         	call	_abs	;wreg free
  5701   00291E  5015               	movf	?_abs^0,w,c
  5702   002920  0F30               	addlw	48
  5703   002922  6EDF               	movwf	indf2,c
  5704   002924                     
  5705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5706   002924  0632               	decf	dtoa@p^0,f,c
  5707   002926  A0D8               	btfss	status,0,c
  5708   002928  0633               	decf	(dtoa@p+1)^0,f,c
  5709   00292A                     
  5710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5711   00292A  0634               	decf	dtoa@w^0,f,c
  5712   00292C  A0D8               	btfss	status,0,c
  5713   00292E  0635               	decf	(dtoa@w+1)^0,f,c
  5714   002930                     
  5715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5716   002930  C036  F003         	movff	dtoa@n,___aodiv@dividend
  5717   002934  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  5718   002938  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  5719   00293C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  5720   002940  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  5721   002944  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  5722   002948  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  5723   00294C  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  5724   002950  0E0A               	movlw	10
  5725   002952  6E0B               	movwf	___aodiv@divisor^0,c
  5726   002954  0E00               	movlw	0
  5727   002956  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  5728   002958  0E00               	movlw	0
  5729   00295A  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  5730   00295C  0E00               	movlw	0
  5731   00295E  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  5732   002960  0E00               	movlw	0
  5733   002962  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  5734   002964  0E00               	movlw	0
  5735   002966  6E10               	movwf	(___aodiv@divisor+5)^0,c
  5736   002968  0E00               	movlw	0
  5737   00296A  6E11               	movwf	(___aodiv@divisor+6)^0,c
  5738   00296C  0E00               	movlw	0
  5739   00296E  6E12               	movwf	(___aodiv@divisor+7)^0,c
  5740   002970  ECBF  F017         	call	___aodiv	;wreg free
  5741   002974  C003  F036         	movff	?___aodiv,dtoa@n
  5742   002978  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  5743   00297C  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  5744   002980  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  5745   002984  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  5746   002988  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  5747   00298C  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  5748   002990  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  5749   002994                     l3590:
  5750                           
  5751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5752   002994  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5753   002996  EFD5  F014         	goto	u3631
  5754   00299A  503F               	movf	(dtoa@i+1)^0,w,c
  5755   00299C  E108               	bnz	u3630
  5756   00299E  043E               	decf	dtoa@i^0,w,c
  5757   0029A0  A0D8               	btfss	status,0,c
  5758   0029A2  EFD5  F014         	goto	u3631
  5759   0029A6  EFD7  F014         	goto	u3630
  5760   0029AA                     u3631:
  5761   0029AA  EFF3  F014         	goto	l3596
  5762   0029AE                     u3630:
  5763   0029AE  5036               	movf	dtoa@n^0,w,c
  5764   0029B0  1037               	iorwf	(dtoa@n+1)^0,w,c
  5765   0029B2  1038               	iorwf	(dtoa@n+2)^0,w,c
  5766   0029B4  1039               	iorwf	(dtoa@n+3)^0,w,c
  5767   0029B6  103A               	iorwf	(dtoa@n+4)^0,w,c
  5768   0029B8  103B               	iorwf	(dtoa@n+5)^0,w,c
  5769   0029BA  103C               	iorwf	(dtoa@n+6)^0,w,c
  5770   0029BC  103D               	iorwf	(dtoa@n+7)^0,w,c
  5771   0029BE  A4D8               	btfss	status,2,c
  5772   0029C0  EFE4  F014         	goto	u3641
  5773   0029C4  EFE6  F014         	goto	u3640
  5774   0029C8                     u3641:
  5775   0029C8  EF4E  F014         	goto	l3580
  5776   0029CC                     u3640:
  5777   0029CC  BE33               	btfsc	(dtoa@p+1)^0,7,c
  5778   0029CE  EFF3  F014         	goto	u3650
  5779   0029D2  5033               	movf	(dtoa@p+1)^0,w,c
  5780   0029D4  E106               	bnz	u3651
  5781   0029D6  0432               	decf	dtoa@p^0,w,c
  5782   0029D8  B0D8               	btfsc	status,0,c
  5783   0029DA  EFF1  F014         	goto	u3651
  5784   0029DE  EFF3  F014         	goto	u3650
  5785   0029E2                     u3651:
  5786   0029E2  EF4E  F014         	goto	l3580
  5787   0029E6                     u3650:
  5788   0029E6                     l3596:
  5789                           
  5790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5791   0029E6  5040               	movf	dtoa@s^0,w,c
  5792   0029E8  B4D8               	btfsc	status,2,c
  5793   0029EA  EFF9  F014         	goto	u3661
  5794   0029EE  EFFB  F014         	goto	u3660
  5795   0029F2                     u3661:
  5796   0029F2  EF06  F015         	goto	l3602
  5797   0029F6                     u3660:
  5798   0029F6                     
  5799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5800   0029F6  063E               	decf	dtoa@i^0,f,c
  5801   0029F8  A0D8               	btfss	status,0,c
  5802   0029FA  063F               	decf	(dtoa@i+1)^0,f,c
  5803   0029FC                     
  5804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5805   0029FC  0E50               	movlw	low _dbuf
  5806   0029FE  243E               	addwf	dtoa@i^0,w,c
  5807   002A00  6ED9               	movwf	fsr2l,c
  5808   002A02  0E01               	movlw	high _dbuf
  5809   002A04  203F               	addwfc	(dtoa@i+1)^0,w,c
  5810   002A06  6EDA               	movwf	fsr2h,c
  5811   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5812   002A0C                     l3602:
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5815   002A0C  C01E  F013         	movff	dtoa@fp,pad@fp
  5816   002A10  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5817   002A14  0E50               	movlw	low _dbuf
  5818   002A16  243E               	addwf	dtoa@i^0,w,c
  5819   002A18  6E15               	movwf	pad@buf^0,c
  5820   002A1A  0E01               	movlw	high _dbuf
  5821   002A1C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5822   002A1E  6E16               	movwf	(pad@buf+1)^0,c
  5823   002A20  C034  F017         	movff	dtoa@w,pad@p
  5824   002A24  C035  F018         	movff	dtoa@w+1,pad@p+1
  5825   002A28  EC00  F01C         	call	_pad	;wreg free
  5826   002A2C  0012               	return		;funcret
  5827   002A2E                     __end_of_dtoa:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _pad *****************
  5831 ;; Defined at:
  5832 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5835 ;;		 -> sprintf@f(11), 
  5836 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5837 ;;		 -> dbuf(80), 
  5838 ;;  p               2   22[COMRAM] int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  w               2   27[COMRAM] int 
  5841 ;;  i               2   25[COMRAM] int 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5851 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;Total ram usage:       11 bytes
  5856 ;; Hardware stack levels used: 1
  5857 ;; Hardware stack levels required when called: 7
  5858 ;; This function calls:
  5859 ;;		_fputc
  5860 ;;		_fputs
  5861 ;; This function is called by:
  5862 ;;		_dtoa
  5863 ;;		_efgtoa
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text18
  5868   003800                     __ptext18:
  5869                           	callstack 0
  5870   003800                     _pad:
  5871                           	callstack 19
  5872   003800                     
  5873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5874   003800  BE18               	btfsc	(pad@p+1)^0,7,c
  5875   003802  EF05  F01C         	goto	u3341
  5876   003806  EF07  F01C         	goto	u3340
  5877   00380A                     u3341:
  5878   00380A  EF0D  F01C         	goto	l3458
  5879   00380E                     u3340:
  5880   00380E  C017  F01C         	movff	pad@p,pad@w
  5881   003812  C018  F01D         	movff	pad@p+1,pad@w+1
  5882   003816  EF11  F01C         	goto	l1039
  5883   00381A                     l3458:
  5884   00381A  0E00               	movlw	0
  5885   00381C  6E1D               	movwf	(pad@w+1)^0,c
  5886   00381E  0E00               	movlw	0
  5887   003820  6E1C               	movwf	pad@w^0,c
  5888   003822                     l1039:
  5889                           
  5890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5891   003822  0E00               	movlw	0
  5892   003824  6E1B               	movwf	(pad@i+1)^0,c
  5893   003826  0E00               	movlw	0
  5894   003828  6E1A               	movwf	pad@i^0,c
  5895                           
  5896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5897   00382A  EF23  F01C         	goto	l3464
  5898   00382E                     l3460:
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5901   00382E  0E00               	movlw	0
  5902   003830  6E04               	movwf	(fputc@c+1)^0,c
  5903   003832  0E20               	movlw	32
  5904   003834  6E03               	movwf	fputc@c^0,c
  5905   003836  C013  F005         	movff	pad@fp,fputc@fp
  5906   00383A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5907   00383E  EC46  F01B         	call	_fputc	;wreg free
  5908   003842                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5910   003842  4A1A               	infsnz	pad@i^0,f,c
  5911   003844  2A1B               	incf	(pad@i+1)^0,f,c
  5912   003846                     l3464:
  5913                           
  5914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5915   003846  501C               	movf	pad@w^0,w,c
  5916   003848  5C1A               	subwf	pad@i^0,w,c
  5917   00384A  501B               	movf	(pad@i+1)^0,w,c
  5918   00384C  0A80               	xorlw	128
  5919   00384E  6E19               	movwf	??_pad^0,c
  5920   003850  501D               	movf	(pad@w+1)^0,w,c
  5921   003852  0A80               	xorlw	128
  5922   003854  5819               	subwfb	??_pad^0,w,c
  5923   003856  A0D8               	btfss	status,0,c
  5924   003858  EF30  F01C         	goto	u3351
  5925   00385C  EF32  F01C         	goto	u3350
  5926   003860                     u3351:
  5927   003860  EF17  F01C         	goto	l3460
  5928   003864                     u3350:
  5929   003864                     
  5930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5931   003864  C015  F00C         	movff	pad@buf,fputs@s
  5932   003868  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5933   00386C  C013  F00E         	movff	pad@fp,fputs@fp
  5934   003870  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5935   003874  EC4E  F01E         	call	_fputs	;wreg free
  5936   003878  0012               	return		;funcret
  5937   00387A                     __end_of_pad:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _fputs *****************
  5941 ;; Defined at:
  5942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5945 ;;		 -> dbuf(80), 
  5946 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5947 ;;		 -> sprintf@f(11), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  i               2   16[COMRAM] int 
  5950 ;;  c               1   15[COMRAM] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2   11[COMRAM] int 
  5953 ;; Registers used:
  5954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;Total ram usage:        7 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 6
  5967 ;; This function calls:
  5968 ;;		_fputc
  5969 ;; This function is called by:
  5970 ;;		_pad
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text19
  5975   003C9C                     __ptext19:
  5976                           	callstack 0
  5977   003C9C                     _fputs:
  5978                           	callstack 19
  5979   003C9C  0E00               	movlw	0
  5980   003C9E  6E12               	movwf	(fputs@i+1)^0,c
  5981   003CA0  0E00               	movlw	0
  5982   003CA2  6E11               	movwf	fputs@i^0,c
  5983   003CA4  EF5F  F01E         	goto	l3004
  5984   003CA8                     l3000:
  5985   003CA8  C010  F003         	movff	fputs@c,fputc@c
  5986   003CAC  6A04               	clrf	(fputc@c+1)^0,c
  5987   003CAE  C00E  F005         	movff	fputs@fp,fputc@fp
  5988   003CB2  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5989   003CB6  EC46  F01B         	call	_fputc	;wreg free
  5990   003CBA  4A11               	infsnz	fputs@i^0,f,c
  5991   003CBC  2A12               	incf	(fputs@i+1)^0,f,c
  5992   003CBE                     l3004:
  5993   003CBE  5011               	movf	fputs@i^0,w,c
  5994   003CC0  240C               	addwf	fputs@s^0,w,c
  5995   003CC2  6ED9               	movwf	fsr2l,c
  5996   003CC4  5012               	movf	(fputs@i+1)^0,w,c
  5997   003CC6  200D               	addwfc	(fputs@s+1)^0,w,c
  5998   003CC8  6EDA               	movwf	fsr2h,c
  5999   003CCA  50DF               	movf	indf2,w,c
  6000   003CCC  6E10               	movwf	fputs@c^0,c
  6001   003CCE  5010               	movf	fputs@c^0,w,c
  6002   003CD0  A4D8               	btfss	status,2,c
  6003   003CD2  EF6D  F01E         	goto	u2601
  6004   003CD6  EF6F  F01E         	goto	u2600
  6005   003CDA                     u2601:
  6006   003CDA  EF54  F01E         	goto	l3000
  6007   003CDE                     u2600:
  6008   003CDE  0012               	return		;funcret
  6009   003CE0                     __end_of_fputs:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _fputc *****************
  6013 ;; Defined at:
  6014 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  c               2    2[COMRAM] int 
  6017 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6018 ;;		 -> sprintf@f(11), 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  2    2[COMRAM] int 
  6023 ;; Registers used:
  6024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;Total ram usage:        9 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 5
  6037 ;; This function calls:
  6038 ;;		_putch
  6039 ;; This function is called by:
  6040 ;;		_pad
  6041 ;;		_vfpfcnvrt
  6042 ;;		_fputs
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text20
  6047   00368C                     __ptext20:
  6048                           	callstack 0
  6049   00368C                     _fputc:
  6050                           	callstack 22
  6051   00368C  5005               	movf	fputc@fp^0,w,c
  6052   00368E  1006               	iorwf	(fputc@fp+1)^0,w,c
  6053   003690  B4D8               	btfsc	status,2,c
  6054   003692  EF4D  F01B         	goto	u2171
  6055   003696  EF4F  F01B         	goto	u2170
  6056   00369A                     u2171:
  6057   00369A  EF58  F01B         	goto	l2786
  6058   00369E                     u2170:
  6059   00369E  5005               	movf	fputc@fp^0,w,c
  6060   0036A0  1006               	iorwf	(fputc@fp+1)^0,w,c
  6061   0036A2  A4D8               	btfss	status,2,c
  6062   0036A4  EF56  F01B         	goto	u2181
  6063   0036A8  EF58  F01B         	goto	u2180
  6064   0036AC                     u2181:
  6065   0036AC  EF5D  F01B         	goto	l2788
  6066   0036B0                     u2180:
  6067   0036B0                     l2786:
  6068   0036B0  5003               	movf	fputc@c^0,w,c
  6069   0036B2  ECE2  F01F         	call	_putch
  6070   0036B6  EFAA  F01B         	goto	l1199
  6071   0036BA                     l2788:
  6072   0036BA  EE20 F009          	lfsr	2,9
  6073   0036BE  5005               	movf	fputc@fp^0,w,c
  6074   0036C0  26D9               	addwf	fsr2l,f,c
  6075   0036C2  5006               	movf	(fputc@fp+1)^0,w,c
  6076   0036C4  22DA               	addwfc	fsr2h,f,c
  6077   0036C6  50DE               	movf	postinc2,w,c
  6078   0036C8  10DE               	iorwf	postinc2,w,c
  6079   0036CA  B4D8               	btfsc	status,2,c
  6080   0036CC  EF6A  F01B         	goto	u2191
  6081   0036D0  EF6C  F01B         	goto	u2190
  6082   0036D4                     u2191:
  6083   0036D4  EF87  F01B         	goto	l2792
  6084   0036D8                     u2190:
  6085   0036D8  EE20 F009          	lfsr	2,9
  6086   0036DC  5005               	movf	fputc@fp^0,w,c
  6087   0036DE  26D9               	addwf	fsr2l,f,c
  6088   0036E0  5006               	movf	(fputc@fp+1)^0,w,c
  6089   0036E2  22DA               	addwfc	fsr2h,f,c
  6090   0036E4  EE10 F003          	lfsr	1,3
  6091   0036E8  5005               	movf	fputc@fp^0,w,c
  6092   0036EA  26E1               	addwf	fsr1l,f,c
  6093   0036EC  5006               	movf	(fputc@fp+1)^0,w,c
  6094   0036EE  22E2               	addwfc	fsr1h,f,c
  6095   0036F0  50DE               	movf	postinc2,w,c
  6096   0036F2  5CE6               	subwf	postinc1,w,c
  6097   0036F4  50E6               	movf	postinc1,w,c
  6098   0036F6  0A80               	xorlw	128
  6099   0036F8  6E0B               	movwf	(??_fputc+4)^0,c
  6100   0036FA  50DE               	movf	postinc2,w,c
  6101   0036FC  0A80               	xorlw	128
  6102   0036FE  580B               	subwfb	(??_fputc+4)^0,w,c
  6103   003700  B0D8               	btfsc	status,0,c
  6104   003702  EF85  F01B         	goto	u2201
  6105   003706  EF87  F01B         	goto	u2200
  6106   00370A                     u2201:
  6107   00370A  EFAA  F01B         	goto	l1199
  6108   00370E                     u2200:
  6109   00370E                     l2792:
  6110   00370E  EE20 F003          	lfsr	2,3
  6111   003712  5005               	movf	fputc@fp^0,w,c
  6112   003714  26D9               	addwf	fsr2l,f,c
  6113   003716  5006               	movf	(fputc@fp+1)^0,w,c
  6114   003718  22DA               	addwfc	fsr2h,f,c
  6115   00371A  CFDE F007          	movff	postinc2,??_fputc
  6116   00371E  CFDD F008          	movff	postdec2,??_fputc+1
  6117   003722  C005  FFD9         	movff	fputc@fp,fsr2l
  6118   003726  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6119   00372A  CFDE F009          	movff	postinc2,??_fputc+2
  6120   00372E  CFDD F00A          	movff	postdec2,??_fputc+3
  6121   003732  5007               	movf	??_fputc^0,w,c
  6122   003734  2409               	addwf	(??_fputc+2)^0,w,c
  6123   003736  6ED9               	movwf	fsr2l,c
  6124   003738  5008               	movf	(??_fputc+1)^0,w,c
  6125   00373A  200A               	addwfc	(??_fputc+3)^0,w,c
  6126   00373C  6EDA               	movwf	fsr2h,c
  6127   00373E  C003  FFDF         	movff	fputc@c,indf2
  6128   003742  EE20 F003          	lfsr	2,3
  6129   003746  5005               	movf	fputc@fp^0,w,c
  6130   003748  26D9               	addwf	fsr2l,f,c
  6131   00374A  5006               	movf	(fputc@fp+1)^0,w,c
  6132   00374C  22DA               	addwfc	fsr2h,f,c
  6133   00374E  2ADE               	incf	postinc2,f,c
  6134   003750  0E00               	movlw	0
  6135   003752  22DD               	addwfc	postdec2,f,c
  6136   003754                     l1199:
  6137   003754  0012               	return		;funcret
  6138   003756                     __end_of_fputc:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _putch *****************
  6142 ;; Defined at:
  6143 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  c               1    wreg     unsigned char 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;  c               1    0[COMRAM] unsigned char 
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 4
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_fputc
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text21
  6172   003FC4                     __ptext21:
  6173                           	callstack 0
  6174   003FC4                     _putch:
  6175                           	callstack 22
  6176   003FC4  0012               	return		;funcret
  6177   003FC6                     __end_of_putch:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _abs *****************
  6181 ;; Defined at:
  6182 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  a               2   20[COMRAM] int 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  2   20[COMRAM] int 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;Total ram usage:        4 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 4
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_dtoa
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text22
  6211   003D22                     __ptext22:
  6212                           	callstack 0
  6213   003D22                     _abs:
  6214                           	callstack 22
  6215   003D22  BE16               	btfsc	(abs@a+1)^0,7,c
  6216   003D24  EF9E  F01E         	goto	u3360
  6217   003D28  5016               	movf	(abs@a+1)^0,w,c
  6218   003D2A  E106               	bnz	u3361
  6219   003D2C  0415               	decf	abs@a^0,w,c
  6220   003D2E  B0D8               	btfsc	status,0,c
  6221   003D30  EF9C  F01E         	goto	u3361
  6222   003D34  EF9E  F01E         	goto	u3360
  6223   003D38                     u3361:
  6224   003D38  EFAC  F01E         	goto	l1158
  6225   003D3C                     u3360:
  6226   003D3C  C015  F017         	movff	abs@a,??_abs
  6227   003D40  C016  F018         	movff	abs@a+1,??_abs+1
  6228   003D44  1E17               	comf	??_abs^0,f,c
  6229   003D46  1E18               	comf	(??_abs+1)^0,f,c
  6230   003D48  4A17               	infsnz	??_abs^0,f,c
  6231   003D4A  2A18               	incf	(??_abs+1)^0,f,c
  6232   003D4C  C017  F015         	movff	??_abs,?_abs
  6233   003D50  C018  F016         	movff	??_abs+1,?_abs+1
  6234   003D54  EFB0  F01E         	goto	l1161
  6235   003D58                     l1158:
  6236   003D58  C015  F015         	movff	abs@a,?_abs
  6237   003D5C  C016  F016         	movff	abs@a+1,?_abs+1
  6238   003D60                     l1161:
  6239   003D60  0012               	return		;funcret
  6240   003D62                     __end_of_abs:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function ___aomod *****************
  6244 ;; Defined at:
  6245 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  dividend        8    2[COMRAM] long long 
  6248 ;;  divisor         8   10[COMRAM] long long 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  sign            1   19[COMRAM] unsigned char 
  6251 ;;  counter         1   18[COMRAM] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  8    2[COMRAM] long long 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6261 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;Total ram usage:       18 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 4
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_dtoa
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text23
  6276   003106                     __ptext23:
  6277                           	callstack 0
  6278   003106                     ___aomod:
  6279                           	callstack 22
  6280   003106  0E00               	movlw	0
  6281   003108  6E14               	movwf	___aomod@sign^0,c
  6282   00310A  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  6283   00310C  EF8C  F018         	goto	u2700
  6284   003110  EF8A  F018         	goto	u2701
  6285   003114                     u2701:
  6286   003114  EF9E  F018         	goto	l3062
  6287   003118                     u2700:
  6288   003118  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6289   00311A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6290   00311C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6291   00311E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6292   003120  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6293   003122  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6294   003124  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6295   003126  6C03               	negf	___aomod@dividend^0,c
  6296   003128  0E00               	movlw	0
  6297   00312A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6298   00312C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6299   00312E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6300   003130  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6301   003132  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6302   003134  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6303   003136  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6304   003138  0E01               	movlw	1
  6305   00313A  6E14               	movwf	___aomod@sign^0,c
  6306   00313C                     l3062:
  6307   00313C  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  6308   00313E  EFA5  F018         	goto	u2710
  6309   003142  EFA3  F018         	goto	u2711
  6310   003146                     u2711:
  6311   003146  EFB5  F018         	goto	l3066
  6312   00314A                     u2710:
  6313   00314A  1E12               	comf	(___aomod@divisor+7)^0,f,c
  6314   00314C  1E11               	comf	(___aomod@divisor+6)^0,f,c
  6315   00314E  1E10               	comf	(___aomod@divisor+5)^0,f,c
  6316   003150  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  6317   003152  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  6318   003154  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  6319   003156  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  6320   003158  6C0B               	negf	___aomod@divisor^0,c
  6321   00315A  0E00               	movlw	0
  6322   00315C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  6323   00315E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  6324   003160  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  6325   003162  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  6326   003164  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  6327   003166  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  6328   003168  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  6329   00316A                     l3066:
  6330   00316A  500B               	movf	___aomod@divisor^0,w,c
  6331   00316C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  6332   00316E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  6333   003170  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  6334   003172  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  6335   003174  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  6336   003176  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  6337   003178  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  6338   00317A  B4D8               	btfsc	status,2,c
  6339   00317C  EFC2  F018         	goto	u2721
  6340   003180  EFC4  F018         	goto	u2720
  6341   003184                     u2721:
  6342   003184  EF0C  F019         	goto	l3082
  6343   003188                     u2720:
  6344   003188  0E01               	movlw	1
  6345   00318A  6E13               	movwf	___aomod@counter^0,c
  6346   00318C  EFD2  F018         	goto	l3072
  6347   003190                     l3070:
  6348   003190  90D8               	bcf	status,0,c
  6349   003192  360B               	rlcf	___aomod@divisor^0,f,c
  6350   003194  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  6351   003196  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  6352   003198  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  6353   00319A  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  6354   00319C  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  6355   00319E  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  6356   0031A0  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  6357   0031A2  2A13               	incf	___aomod@counter^0,f,c
  6358   0031A4                     l3072:
  6359   0031A4  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  6360   0031A6  EFD7  F018         	goto	u2731
  6361   0031AA  EFD9  F018         	goto	u2730
  6362   0031AE                     u2731:
  6363   0031AE  EFC8  F018         	goto	l3070
  6364   0031B2                     u2730:
  6365   0031B2                     l3074:
  6366   0031B2  500B               	movf	___aomod@divisor^0,w,c
  6367   0031B4  5C03               	subwf	___aomod@dividend^0,w,c
  6368   0031B6  500C               	movf	(___aomod@divisor+1)^0,w,c
  6369   0031B8  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  6370   0031BA  500D               	movf	(___aomod@divisor+2)^0,w,c
  6371   0031BC  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  6372   0031BE  500E               	movf	(___aomod@divisor+3)^0,w,c
  6373   0031C0  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  6374   0031C2  500F               	movf	(___aomod@divisor+4)^0,w,c
  6375   0031C4  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  6376   0031C6  5010               	movf	(___aomod@divisor+5)^0,w,c
  6377   0031C8  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  6378   0031CA  5011               	movf	(___aomod@divisor+6)^0,w,c
  6379   0031CC  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  6380   0031CE  5012               	movf	(___aomod@divisor+7)^0,w,c
  6381   0031D0  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  6382   0031D2  A0D8               	btfss	status,0,c
  6383   0031D4  EFEE  F018         	goto	u2741
  6384   0031D8  EFF0  F018         	goto	u2740
  6385   0031DC                     u2741:
  6386   0031DC  EF00  F019         	goto	l3078
  6387   0031E0                     u2740:
  6388   0031E0  500B               	movf	___aomod@divisor^0,w,c
  6389   0031E2  5E03               	subwf	___aomod@dividend^0,f,c
  6390   0031E4  500C               	movf	(___aomod@divisor+1)^0,w,c
  6391   0031E6  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  6392   0031E8  500D               	movf	(___aomod@divisor+2)^0,w,c
  6393   0031EA  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  6394   0031EC  500E               	movf	(___aomod@divisor+3)^0,w,c
  6395   0031EE  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  6396   0031F0  500F               	movf	(___aomod@divisor+4)^0,w,c
  6397   0031F2  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  6398   0031F4  5010               	movf	(___aomod@divisor+5)^0,w,c
  6399   0031F6  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  6400   0031F8  5011               	movf	(___aomod@divisor+6)^0,w,c
  6401   0031FA  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  6402   0031FC  5012               	movf	(___aomod@divisor+7)^0,w,c
  6403   0031FE  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  6404   003200                     l3078:
  6405   003200  90D8               	bcf	status,0,c
  6406   003202  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  6407   003204  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  6408   003206  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  6409   003208  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  6410   00320A  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  6411   00320C  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  6412   00320E  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  6413   003210  320B               	rrcf	___aomod@divisor^0,f,c
  6414   003212  2E13               	decfsz	___aomod@counter^0,f,c
  6415   003214  EFD9  F018         	goto	l3074
  6416   003218                     l3082:
  6417   003218  5014               	movf	___aomod@sign^0,w,c
  6418   00321A  B4D8               	btfsc	status,2,c
  6419   00321C  EF12  F019         	goto	u2751
  6420   003220  EF14  F019         	goto	u2750
  6421   003224                     u2751:
  6422   003224  EF24  F019         	goto	l3086
  6423   003228                     u2750:
  6424   003228  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6425   00322A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6426   00322C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6427   00322E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6428   003230  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6429   003232  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6430   003234  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6431   003236  6C03               	negf	___aomod@dividend^0,c
  6432   003238  0E00               	movlw	0
  6433   00323A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6434   00323C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6435   00323E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6436   003240  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6437   003242  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6438   003244  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6439   003246  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6440   003248                     l3086:
  6441   003248  C003  F003         	movff	___aomod@dividend,?___aomod
  6442   00324C  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  6443   003250  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  6444   003254  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  6445   003258  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  6446   00325C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  6447   003260  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  6448   003264  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  6449   003268  0012               	return		;funcret
  6450   00326A                     __end_of___aomod:
  6451                           	callstack 0
  6452                           
  6453 ;; *************** function ___aodiv *****************
  6454 ;; Defined at:
  6455 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  dividend        8    2[COMRAM] long long 
  6458 ;;  divisor         8   10[COMRAM] long long 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  quotient        8   20[COMRAM] long long 
  6461 ;;  sign            1   19[COMRAM] unsigned char 
  6462 ;;  counter         1   18[COMRAM] unsigned char 
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  8    2[COMRAM] long long 
  6465 ;; Registers used:
  6466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6472 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;Total ram usage:       26 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; Hardware stack levels required when called: 4
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_dtoa
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text24
  6487   002F7E                     __ptext24:
  6488                           	callstack 0
  6489   002F7E                     ___aodiv:
  6490                           	callstack 22
  6491   002F7E  0E00               	movlw	0
  6492   002F80  6E14               	movwf	___aodiv@sign^0,c
  6493   002F82  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  6494   002F84  EFC8  F017         	goto	u2630
  6495   002F88  EFC6  F017         	goto	u2631
  6496   002F8C                     u2631:
  6497   002F8C  EFDA  F017         	goto	l3018
  6498   002F90                     u2630:
  6499   002F90  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  6500   002F92  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  6501   002F94  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  6502   002F96  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  6503   002F98  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  6504   002F9A  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  6505   002F9C  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  6506   002F9E  6C0B               	negf	___aodiv@divisor^0,c
  6507   002FA0  0E00               	movlw	0
  6508   002FA2  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  6509   002FA4  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  6510   002FA6  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  6511   002FA8  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  6512   002FAA  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  6513   002FAC  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  6514   002FAE  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  6515   002FB0  0E01               	movlw	1
  6516   002FB2  6E14               	movwf	___aodiv@sign^0,c
  6517   002FB4                     l3018:
  6518   002FB4  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  6519   002FB6  EFE1  F017         	goto	u2640
  6520   002FBA  EFDF  F017         	goto	u2641
  6521   002FBE                     u2641:
  6522   002FBE  EFF3  F017         	goto	l3024
  6523   002FC2                     u2640:
  6524   002FC2  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  6525   002FC4  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  6526   002FC6  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  6527   002FC8  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  6528   002FCA  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  6529   002FCC  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  6530   002FCE  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  6531   002FD0  6C03               	negf	___aodiv@dividend^0,c
  6532   002FD2  0E00               	movlw	0
  6533   002FD4  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  6534   002FD6  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  6535   002FD8  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  6536   002FDA  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  6537   002FDC  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  6538   002FDE  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  6539   002FE0  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  6540   002FE2  0E01               	movlw	1
  6541   002FE4  1A14               	xorwf	___aodiv@sign^0,f,c
  6542   002FE6                     l3024:
  6543   002FE6  EE20  F015         	lfsr	2,___aodiv@quotient
  6544   002FEA  0E07               	movlw	7
  6545   002FEC                     u2651:
  6546   002FEC  6ADE               	clrf	postinc2,c
  6547   002FEE  06E8               	decf	wreg,f,c
  6548   002FF0  E2FD               	bc	u2651
  6549   002FF2  500B               	movf	___aodiv@divisor^0,w,c
  6550   002FF4  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  6551   002FF6  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  6552   002FF8  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  6553   002FFA  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  6554   002FFC  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  6555   002FFE  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  6556   003000  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  6557   003002  B4D8               	btfsc	status,2,c
  6558   003004  EF06  F018         	goto	u2661
  6559   003008  EF08  F018         	goto	u2660
  6560   00300C                     u2661:
  6561   00300C  EF5A  F018         	goto	l3046
  6562   003010                     u2660:
  6563   003010  0E01               	movlw	1
  6564   003012  6E13               	movwf	___aodiv@counter^0,c
  6565   003014  EF16  F018         	goto	l3032
  6566   003018                     l3030:
  6567   003018  90D8               	bcf	status,0,c
  6568   00301A  360B               	rlcf	___aodiv@divisor^0,f,c
  6569   00301C  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  6570   00301E  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  6571   003020  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  6572   003022  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  6573   003024  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  6574   003026  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  6575   003028  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  6576   00302A  2A13               	incf	___aodiv@counter^0,f,c
  6577   00302C                     l3032:
  6578   00302C  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  6579   00302E  EF1B  F018         	goto	u2671
  6580   003032  EF1D  F018         	goto	u2670
  6581   003036                     u2671:
  6582   003036  EF0C  F018         	goto	l3030
  6583   00303A                     u2670:
  6584   00303A                     l3034:
  6585   00303A  90D8               	bcf	status,0,c
  6586   00303C  3615               	rlcf	___aodiv@quotient^0,f,c
  6587   00303E  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  6588   003040  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  6589   003042  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  6590   003044  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  6591   003046  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  6592   003048  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  6593   00304A  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  6594   00304C  500B               	movf	___aodiv@divisor^0,w,c
  6595   00304E  5C03               	subwf	___aodiv@dividend^0,w,c
  6596   003050  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6597   003052  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  6598   003054  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6599   003056  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  6600   003058  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6601   00305A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  6602   00305C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6603   00305E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  6604   003060  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6605   003062  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  6606   003064  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6607   003066  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  6608   003068  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6609   00306A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  6610   00306C  A0D8               	btfss	status,0,c
  6611   00306E  EF3B  F018         	goto	u2681
  6612   003072  EF3D  F018         	goto	u2680
  6613   003076                     u2681:
  6614   003076  EF4E  F018         	goto	l3042
  6615   00307A                     u2680:
  6616   00307A  500B               	movf	___aodiv@divisor^0,w,c
  6617   00307C  5E03               	subwf	___aodiv@dividend^0,f,c
  6618   00307E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6619   003080  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  6620   003082  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6621   003084  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  6622   003086  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6623   003088  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  6624   00308A  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6625   00308C  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  6626   00308E  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6627   003090  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  6628   003092  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6629   003094  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  6630   003096  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6631   003098  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  6632   00309A  8015               	bsf	___aodiv@quotient^0,0,c
  6633   00309C                     l3042:
  6634   00309C  90D8               	bcf	status,0,c
  6635   00309E  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  6636   0030A0  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  6637   0030A2  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  6638   0030A4  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  6639   0030A6  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  6640   0030A8  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  6641   0030AA  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  6642   0030AC  320B               	rrcf	___aodiv@divisor^0,f,c
  6643   0030AE  2E13               	decfsz	___aodiv@counter^0,f,c
  6644   0030B0  EF1D  F018         	goto	l3034
  6645   0030B4                     l3046:
  6646   0030B4  5014               	movf	___aodiv@sign^0,w,c
  6647   0030B6  B4D8               	btfsc	status,2,c
  6648   0030B8  EF60  F018         	goto	u2691
  6649   0030BC  EF62  F018         	goto	u2690
  6650   0030C0                     u2691:
  6651   0030C0  EF72  F018         	goto	l3050
  6652   0030C4                     u2690:
  6653   0030C4  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  6654   0030C6  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  6655   0030C8  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  6656   0030CA  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  6657   0030CC  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  6658   0030CE  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  6659   0030D0  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  6660   0030D2  6C15               	negf	___aodiv@quotient^0,c
  6661   0030D4  0E00               	movlw	0
  6662   0030D6  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  6663   0030D8  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  6664   0030DA  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  6665   0030DC  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  6666   0030DE  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  6667   0030E0  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  6668   0030E2  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  6669   0030E4                     l3050:
  6670   0030E4  C015  F003         	movff	___aodiv@quotient,?___aodiv
  6671   0030E8  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  6672   0030EC  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  6673   0030F0  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  6674   0030F4  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  6675   0030F8  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  6676   0030FC  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  6677   003100  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  6678   003104  0012               	return		;funcret
  6679   003106                     __end_of___aodiv:
  6680                           	callstack 0
  6681                           
  6682 ;; *************** function _sendTxBuf *****************
  6683 ;; Defined at:
  6684 ;;		line 93 in file "serial.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;		None
  6687 ;; Auto vars:     Size  Location     Type
  6688 ;;		None
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  1    wreg      void 
  6691 ;; Registers used:
  6692 ;;		wreg, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;Total ram usage:        0 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 5
  6705 ;; This function calls:
  6706 ;;		_isDataInTxBuf
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text25
  6713   003DFE                     __ptext25:
  6714                           	callstack 0
  6715   003DFE                     _sendTxBuf:
  6716                           	callstack 25
  6717   003DFE                     
  6718                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6719   003DFE  EC99  F01F         	call	_isDataInTxBuf	;wreg free
  6720   003E02  0900               	iorlw	0
  6721   003E04  B4D8               	btfsc	status,2,c
  6722   003E06  EF07  F01F         	goto	u4221
  6723   003E0A  EF09  F01F         	goto	u4220
  6724   003E0E                     u4221:
  6725   003E0E  EF10  F01F         	goto	l4112
  6726   003E12                     u4220:
  6727   003E12  010E               	movlb	14	; () banked
  6728   003E14  852D               	bsf	45,2,b	;volatile
  6729   003E16                     
  6730                           ; BSR set to: 14
  6731                           ;serial.c: 95:     DataFlag =1;}
  6732   003E16  0E01               	movlw	1
  6733   003E18  0100               	movlb	0	; () banked
  6734   003E1A  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6735   003E1C  EF13  F01F         	goto	l184
  6736   003E20                     l4112:
  6737                           
  6738                           ;serial.c: 97:         DataFlag=0;}
  6739   003E20  0E00               	movlw	0
  6740   003E22  0100               	movlb	0	; () banked
  6741   003E24  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6742   003E26                     l184:
  6743                           
  6744                           ; BSR set to: 0
  6745   003E26  0012               	return		;funcret
  6746   003E28                     __end_of_sendTxBuf:
  6747                           	callstack 0
  6748                           
  6749 ;; *************** function _isDataInTxBuf *****************
  6750 ;; Defined at:
  6751 ;;		line 80 in file "serial.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      unsigned char 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;Total ram usage:        0 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 4
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_sendTxBuf
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text26
  6780   003F32                     __ptext26:
  6781                           	callstack 0
  6782   003F32                     _isDataInTxBuf:
  6783                           	callstack 25
  6784   003F32                     
  6785                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6786   003F32  5059               	movf	_TxBufReadCnt^0,w,c	;volatile
  6787   003F34  185A               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6788   003F36  A4D8               	btfss	status,2,c
  6789   003F38  EFA0  F01F         	goto	u4081
  6790   003F3C  EFA3  F01F         	goto	u4080
  6791   003F40                     u4081:
  6792   003F40  0E01               	movlw	1
  6793   003F42  EFA4  F01F         	goto	u4090
  6794   003F46                     u4080:
  6795   003F46  0E00               	movlw	0
  6796   003F48                     u4090:
  6797   003F48  0012               	return		;funcret
  6798   003F4A                     __end_of_isDataInTxBuf:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function _readColours *****************
  6802 ;; Defined at:
  6803 ;;		line 87 in file "color.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  vals            2   13[COMRAM] PTR struct RGB
  6806 ;;		 -> vals(8), 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;Total ram usage:        2 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; Hardware stack levels required when called: 7
  6825 ;; This function calls:
  6826 ;;		_color_read_Blue
  6827 ;;		_color_read_Green
  6828 ;;		_color_read_Red
  6829 ;;		_color_read_lum
  6830 ;; This function is called by:
  6831 ;;		_main
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text27
  6836   0038E0                     __ptext27:
  6837                           	callstack 0
  6838   0038E0                     _readColours:
  6839                           	callstack 23
  6840   0038E0                     
  6841                           ;color.c: 88:     vals ->R = color_read_Red();
  6842   0038E0  EC6B  F01D         	call	_color_read_Red	;wreg free
  6843   0038E4  C00E  FFD9         	movff	readColours@vals,fsr2l
  6844   0038E8  C00F  FFDA         	movff	readColours@vals+1,fsr2h
  6845   0038EC  C007  FFDE         	movff	?_color_read_Red,postinc2
  6846   0038F0  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6847                           
  6848                           ;color.c: 89:     vals ->B = color_read_Blue();
  6849   0038F4  ECBB  F01D         	call	_color_read_Blue	;wreg free
  6850   0038F8  EE20 F004          	lfsr	2,4
  6851   0038FC  500E               	movf	readColours@vals^0,w,c
  6852   0038FE  26D9               	addwf	fsr2l,f,c
  6853   003900  500F               	movf	(readColours@vals+1)^0,w,c
  6854   003902  22DA               	addwfc	fsr2h,f,c
  6855   003904  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6856   003908  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6857                           
  6858                           ;color.c: 90:     vals ->G = color_read_Green();
  6859   00390C  EC93  F01D         	call	_color_read_Green	;wreg free
  6860   003910  EE20 F002          	lfsr	2,2
  6861   003914  500E               	movf	readColours@vals^0,w,c
  6862   003916  26D9               	addwf	fsr2l,f,c
  6863   003918  500F               	movf	(readColours@vals+1)^0,w,c
  6864   00391A  22DA               	addwfc	fsr2h,f,c
  6865   00391C  C007  FFDE         	movff	?_color_read_Green,postinc2
  6866   003920  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6867                           
  6868                           ;color.c: 91:     vals ->L = color_read_lum();
  6869   003924  EC43  F01D         	call	_color_read_lum	;wreg free
  6870   003928  EE20 F006          	lfsr	2,6
  6871   00392C  500E               	movf	readColours@vals^0,w,c
  6872   00392E  26D9               	addwf	fsr2l,f,c
  6873   003930  500F               	movf	(readColours@vals+1)^0,w,c
  6874   003932  22DA               	addwfc	fsr2h,f,c
  6875   003934  C007  FFDE         	movff	?_color_read_lum,postinc2
  6876   003938  C008  FFDD         	movff	?_color_read_lum+1,postdec2
  6877   00393C  0012               	return		;funcret
  6878   00393E                     __end_of_readColours:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function _color_read_lum *****************
  6882 ;; Defined at:
  6883 ;;		line 31 in file "color.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  tmp             2   11[COMRAM] unsigned int 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  2    6[COMRAM] unsigned int 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;Total ram usage:        7 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 6
  6904 ;; This function calls:
  6905 ;;		_I2C_2_Master_Read
  6906 ;;		_I2C_2_Master_RepStart
  6907 ;;		_I2C_2_Master_Start
  6908 ;;		_I2C_2_Master_Stop
  6909 ;;		_I2C_2_Master_Write
  6910 ;; This function is called by:
  6911 ;;		_readColours
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text28
  6916   003A86                     __ptext28:
  6917                           	callstack 0
  6918   003A86                     _color_read_lum:
  6919                           	callstack 23
  6920   003A86                     
  6921                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  6922   003A86  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  6923                           
  6924                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  6925   003A8A  0E52               	movlw	82
  6926   003A8C  ECBB  F01F         	call	_I2C_2_Master_Write
  6927                           
  6928                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  6929   003A90  0EB4               	movlw	180
  6930   003A92  ECBB  F01F         	call	_I2C_2_Master_Write
  6931                           
  6932                           ;color.c: 37:  I2C_2_Master_RepStart();
  6933   003A96  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6934                           
  6935                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  6936   003A9A  0E53               	movlw	83
  6937   003A9C  ECBB  F01F         	call	_I2C_2_Master_Write
  6938                           
  6939                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  6940   003AA0  0E01               	movlw	1
  6941   003AA2  EC70  F01E         	call	_I2C_2_Master_Read
  6942   003AA6  6E09               	movwf	??_color_read_lum^0,c
  6943   003AA8  5009               	movf	??_color_read_lum^0,w,c
  6944   003AAA  6E0C               	movwf	color_read_lum@tmp^0,c
  6945   003AAC  6A0D               	clrf	(color_read_lum@tmp+1)^0,c
  6946                           
  6947                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6948   003AAE  0E00               	movlw	0
  6949   003AB0  EC70  F01E         	call	_I2C_2_Master_Read
  6950   003AB4  6E09               	movwf	??_color_read_lum^0,c
  6951   003AB6  5009               	movf	??_color_read_lum^0,w,c
  6952   003AB8  6E0B               	movwf	(??_color_read_lum+2)^0,c
  6953   003ABA  6A0A               	clrf	(??_color_read_lum+1)^0,c
  6954   003ABC  500C               	movf	color_read_lum@tmp^0,w,c
  6955   003ABE  100A               	iorwf	(??_color_read_lum+1)^0,w,c
  6956   003AC0  6E0C               	movwf	color_read_lum@tmp^0,c
  6957   003AC2  500D               	movf	(color_read_lum@tmp+1)^0,w,c
  6958   003AC4  100B               	iorwf	(??_color_read_lum+2)^0,w,c
  6959   003AC6  6E0D               	movwf	(color_read_lum@tmp+1)^0,c
  6960                           
  6961                           ;color.c: 41:  I2C_2_Master_Stop();
  6962   003AC8  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6963   003ACC                     
  6964                           ;color.c: 42:  return tmp;
  6965   003ACC  C00C  F007         	movff	color_read_lum@tmp,?_color_read_lum
  6966   003AD0  C00D  F008         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6967   003AD4  0012               	return		;funcret
  6968   003AD6                     __end_of_color_read_lum:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _color_read_Red *****************
  6972 ;; Defined at:
  6973 ;;		line 45 in file "color.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;		None
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  tmp             2   11[COMRAM] unsigned int 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  2    6[COMRAM] unsigned int 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6989 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;Total ram usage:        7 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 6
  6994 ;; This function calls:
  6995 ;;		_I2C_2_Master_Read
  6996 ;;		_I2C_2_Master_RepStart
  6997 ;;		_I2C_2_Master_Start
  6998 ;;		_I2C_2_Master_Stop
  6999 ;;		_I2C_2_Master_Write
  7000 ;; This function is called by:
  7001 ;;		_readColours
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text29
  7006   003AD6                     __ptext29:
  7007                           	callstack 0
  7008   003AD6                     _color_read_Red:
  7009                           	callstack 23
  7010   003AD6                     
  7011                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  7012   003AD6  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  7013                           
  7014                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  7015   003ADA  0E52               	movlw	82
  7016   003ADC  ECBB  F01F         	call	_I2C_2_Master_Write
  7017                           
  7018                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  7019   003AE0  0EB6               	movlw	182
  7020   003AE2  ECBB  F01F         	call	_I2C_2_Master_Write
  7021                           
  7022                           ;color.c: 51:  I2C_2_Master_RepStart();
  7023   003AE6  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7024                           
  7025                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7026   003AEA  0E53               	movlw	83
  7027   003AEC  ECBB  F01F         	call	_I2C_2_Master_Write
  7028                           
  7029                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7030   003AF0  0E01               	movlw	1
  7031   003AF2  EC70  F01E         	call	_I2C_2_Master_Read
  7032   003AF6  6E09               	movwf	??_color_read_Red^0,c
  7033   003AF8  5009               	movf	??_color_read_Red^0,w,c
  7034   003AFA  6E0C               	movwf	color_read_Red@tmp^0,c
  7035   003AFC  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  7036                           
  7037                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7038   003AFE  0E00               	movlw	0
  7039   003B00  EC70  F01E         	call	_I2C_2_Master_Read
  7040   003B04  6E09               	movwf	??_color_read_Red^0,c
  7041   003B06  5009               	movf	??_color_read_Red^0,w,c
  7042   003B08  6E0B               	movwf	(??_color_read_Red+2)^0,c
  7043   003B0A  6A0A               	clrf	(??_color_read_Red+1)^0,c
  7044   003B0C  500C               	movf	color_read_Red@tmp^0,w,c
  7045   003B0E  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  7046   003B10  6E0C               	movwf	color_read_Red@tmp^0,c
  7047   003B12  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  7048   003B14  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  7049   003B16  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  7050                           
  7051                           ;color.c: 55:  I2C_2_Master_Stop();
  7052   003B18  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7053   003B1C                     
  7054                           ;color.c: 56:  return tmp;
  7055   003B1C  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  7056   003B20  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7057   003B24  0012               	return		;funcret
  7058   003B26                     __end_of_color_read_Red:
  7059                           	callstack 0
  7060                           
  7061 ;; *************** function _color_read_Green *****************
  7062 ;; Defined at:
  7063 ;;		line 58 in file "color.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;		None
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  tmp             2   11[COMRAM] unsigned int 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  2    6[COMRAM] unsigned int 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0, cstack
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7077 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;Total ram usage:        7 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 6
  7084 ;; This function calls:
  7085 ;;		_I2C_2_Master_Read
  7086 ;;		_I2C_2_Master_RepStart
  7087 ;;		_I2C_2_Master_Start
  7088 ;;		_I2C_2_Master_Stop
  7089 ;;		_I2C_2_Master_Write
  7090 ;; This function is called by:
  7091 ;;		_readColours
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095                           	psect	text30
  7096   003B26                     __ptext30:
  7097                           	callstack 0
  7098   003B26                     _color_read_Green:
  7099                           	callstack 23
  7100   003B26                     
  7101                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7102   003B26  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  7103                           
  7104                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7105   003B2A  0E52               	movlw	82
  7106   003B2C  ECBB  F01F         	call	_I2C_2_Master_Write
  7107                           
  7108                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x16);
  7109   003B30  0EB6               	movlw	182
  7110   003B32  ECBB  F01F         	call	_I2C_2_Master_Write
  7111                           
  7112                           ;color.c: 64:  I2C_2_Master_RepStart();
  7113   003B36  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7114                           
  7115                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7116   003B3A  0E53               	movlw	83
  7117   003B3C  ECBB  F01F         	call	_I2C_2_Master_Write
  7118                           
  7119                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7120   003B40  0E01               	movlw	1
  7121   003B42  EC70  F01E         	call	_I2C_2_Master_Read
  7122   003B46  6E09               	movwf	??_color_read_Green^0,c
  7123   003B48  5009               	movf	??_color_read_Green^0,w,c
  7124   003B4A  6E0C               	movwf	color_read_Green@tmp^0,c
  7125   003B4C  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  7126                           
  7127                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7128   003B4E  0E00               	movlw	0
  7129   003B50  EC70  F01E         	call	_I2C_2_Master_Read
  7130   003B54  6E09               	movwf	??_color_read_Green^0,c
  7131   003B56  5009               	movf	??_color_read_Green^0,w,c
  7132   003B58  6E0B               	movwf	(??_color_read_Green+2)^0,c
  7133   003B5A  6A0A               	clrf	(??_color_read_Green+1)^0,c
  7134   003B5C  500C               	movf	color_read_Green@tmp^0,w,c
  7135   003B5E  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  7136   003B60  6E0C               	movwf	color_read_Green@tmp^0,c
  7137   003B62  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  7138   003B64  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  7139   003B66  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  7140                           
  7141                           ;color.c: 68:  I2C_2_Master_Stop();
  7142   003B68  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7143   003B6C                     
  7144                           ;color.c: 69:  return tmp;
  7145   003B6C  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  7146   003B70  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7147   003B74  0012               	return		;funcret
  7148   003B76                     __end_of_color_read_Green:
  7149                           	callstack 0
  7150                           
  7151 ;; *************** function _color_read_Blue *****************
  7152 ;; Defined at:
  7153 ;;		line 72 in file "color.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;		None
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  tmp             2   11[COMRAM] unsigned int 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  2    6[COMRAM] unsigned int 
  7160 ;; Registers used:
  7161 ;;		wreg, status,2, status,0, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7167 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;Total ram usage:        7 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 6
  7174 ;; This function calls:
  7175 ;;		_I2C_2_Master_Read
  7176 ;;		_I2C_2_Master_RepStart
  7177 ;;		_I2C_2_Master_Start
  7178 ;;		_I2C_2_Master_Stop
  7179 ;;		_I2C_2_Master_Write
  7180 ;; This function is called by:
  7181 ;;		_readColours
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text31
  7186   003B76                     __ptext31:
  7187                           	callstack 0
  7188   003B76                     _color_read_Blue:
  7189                           	callstack 23
  7190   003B76                     
  7191                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  7192   003B76  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  7193                           
  7194                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  7195   003B7A  0E52               	movlw	82
  7196   003B7C  ECBB  F01F         	call	_I2C_2_Master_Write
  7197                           
  7198                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  7199   003B80  0EBA               	movlw	186
  7200   003B82  ECBB  F01F         	call	_I2C_2_Master_Write
  7201                           
  7202                           ;color.c: 78:  I2C_2_Master_RepStart();
  7203   003B86  ECC7  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7204                           
  7205                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  7206   003B8A  0E53               	movlw	83
  7207   003B8C  ECBB  F01F         	call	_I2C_2_Master_Write
  7208                           
  7209                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  7210   003B90  0E01               	movlw	1
  7211   003B92  EC70  F01E         	call	_I2C_2_Master_Read
  7212   003B96  6E09               	movwf	??_color_read_Blue^0,c
  7213   003B98  5009               	movf	??_color_read_Blue^0,w,c
  7214   003B9A  6E0C               	movwf	color_read_Blue@tmp^0,c
  7215   003B9C  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  7216                           
  7217                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7218   003B9E  0E00               	movlw	0
  7219   003BA0  EC70  F01E         	call	_I2C_2_Master_Read
  7220   003BA4  6E09               	movwf	??_color_read_Blue^0,c
  7221   003BA6  5009               	movf	??_color_read_Blue^0,w,c
  7222   003BA8  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  7223   003BAA  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  7224   003BAC  500C               	movf	color_read_Blue@tmp^0,w,c
  7225   003BAE  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  7226   003BB0  6E0C               	movwf	color_read_Blue@tmp^0,c
  7227   003BB2  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  7228   003BB4  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  7229   003BB6  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  7230                           
  7231                           ;color.c: 82:  I2C_2_Master_Stop();
  7232   003BB8  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7233   003BBC                     
  7234                           ;color.c: 83:  return tmp;
  7235   003BBC  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  7236   003BC0  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7237   003BC4  0012               	return		;funcret
  7238   003BC6                     __end_of_color_read_Blue:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function _I2C_2_Master_RepStart *****************
  7242 ;; Defined at:
  7243 ;;		line 33 in file "i2c.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;		None
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;Total ram usage:        0 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 5
  7264 ;; This function calls:
  7265 ;;		_I2C_2_Master_Idle
  7266 ;; This function is called by:
  7267 ;;		_color_read_lum
  7268 ;;		_color_read_Red
  7269 ;;		_color_read_Green
  7270 ;;		_color_read_Blue
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text32
  7275   003F8E                     __ptext32:
  7276                           	callstack 0
  7277   003F8E                     _I2C_2_Master_RepStart:
  7278                           	callstack 23
  7279   003F8E                     
  7280                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7281   003F8E  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7282   003F92                     
  7283                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7284   003F92  010E               	movlb	14	; () banked
  7285   003F94  83DA               	bsf	218,1,b	;volatile
  7286   003F96                     
  7287                           ; BSR set to: 14
  7288   003F96  0012               	return		;funcret
  7289   003F98                     __end_of_I2C_2_Master_RepStart:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _I2C_2_Master_Read *****************
  7293 ;; Defined at:
  7294 ;;		line 51 in file "i2c.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;  ack             1    wreg     unsigned char 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  ack             1    4[COMRAM] unsigned char 
  7299 ;;  tmp             1    5[COMRAM] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      unsigned char 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:        3 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 5
  7316 ;; This function calls:
  7317 ;;		_I2C_2_Master_Idle
  7318 ;; This function is called by:
  7319 ;;		_color_read_lum
  7320 ;;		_color_read_Red
  7321 ;;		_color_read_Green
  7322 ;;		_color_read_Blue
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text33
  7327   003CE0                     __ptext33:
  7328                           	callstack 0
  7329   003CE0                     _I2C_2_Master_Read:
  7330                           	callstack 23
  7331                           
  7332                           ; BSR set to: 14
  7333                           ;incstack = 0
  7334                           ;I2C_2_Master_Read@ack stored from wreg
  7335   003CE0  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  7336   003CE2                     
  7337                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7338   003CE2  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7339   003CE6                     
  7340                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7341   003CE6  010E               	movlb	14	; () banked
  7342   003CE8  87DA               	bsf	218,3,b	;volatile
  7343                           
  7344                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7345   003CEA  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7346   003CEE                     
  7347                           ;i2c.c: 57:   tmp = SSP2BUF;
  7348   003CEE  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7349                           
  7350                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7351   003CF2  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7352   003CF6                     
  7353                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7354   003CF6  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  7355   003CF8  B4D8               	btfsc	status,2,c
  7356   003CFA  EF81  F01E         	goto	u3991
  7357   003CFE  EF85  F01E         	goto	u3990
  7358   003D02                     u3991:
  7359   003D02  6A04               	clrf	??_I2C_2_Master_Read^0,c
  7360   003D04  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  7361   003D06  EF86  F01E         	goto	u4008
  7362   003D0A                     u3990:
  7363   003D0A  6A04               	clrf	??_I2C_2_Master_Read^0,c
  7364   003D0C                     u4008:
  7365   003D0C  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  7366   003D0E  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  7367   003D10  010E               	movlb	14	; () banked
  7368   003D12  51DA               	movf	218,w,b	;volatile
  7369   003D14  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  7370   003D16  0BDF               	andlw	-33
  7371   003D18  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  7372   003D1A  6FDA               	movwf	218,b	;volatile
  7373   003D1C                     
  7374                           ; BSR set to: 14
  7375                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7376   003D1C  89DA               	bsf	218,4,b	;volatile
  7377   003D1E                     
  7378                           ; BSR set to: 14
  7379                           ;i2c.c: 61:   return tmp;
  7380   003D1E  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  7381   003D20                     
  7382                           ; BSR set to: 14
  7383   003D20  0012               	return		;funcret
  7384   003D22                     __end_of_I2C_2_Master_Read:
  7385                           	callstack 0
  7386                           
  7387 ;; *************** function _initUSART4 *****************
  7388 ;; Defined at:
  7389 ;;		line 4 in file "serial.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;		None
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;Total ram usage:        0 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 4
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_main
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text34
  7418   003F14                     __ptext34:
  7419                           	callstack 0
  7420   003F14                     _initUSART4:
  7421                           	callstack 26
  7422   003F14                     
  7423                           ;serial.c: 5:     RC0PPS = 0x12;
  7424   003F14  0E12               	movlw	18
  7425   003F16  010E               	movlb	14	; () banked
  7426   003F18  6F62               	movwf	98,b	;volatile
  7427                           
  7428                           ;serial.c: 6:     RX4PPS = 0x11;
  7429   003F1A  0E11               	movlw	17
  7430   003F1C  6F15               	movwf	21,b	;volatile
  7431   003F1E                     
  7432                           ; BSR set to: 14
  7433                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7434   003F1E  97E9               	bcf	233,3,b	;volatile
  7435   003F20                     
  7436                           ; BSR set to: 14
  7437                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7438   003F20  95E8               	bcf	232,2,b	;volatile
  7439                           
  7440                           ;serial.c: 9:     SP4BRGL = 51;
  7441   003F22  0E33               	movlw	51
  7442   003F24  6FE5               	movwf	229,b	;volatile
  7443                           
  7444                           ;serial.c: 10:     SP4BRGH = 0;
  7445   003F26  0E00               	movlw	0
  7446   003F28  6FE6               	movwf	230,b	;volatile
  7447   003F2A                     
  7448                           ; BSR set to: 14
  7449                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7450   003F2A  89E7               	bsf	231,4,b	;volatile
  7451   003F2C                     
  7452                           ; BSR set to: 14
  7453                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7454   003F2C  8BE8               	bsf	232,5,b	;volatile
  7455   003F2E                     
  7456                           ; BSR set to: 14
  7457                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7458   003F2E  8FE7               	bsf	231,7,b	;volatile
  7459   003F30                     
  7460                           ; BSR set to: 14
  7461   003F30  0012               	return		;funcret
  7462   003F32                     __end_of_initUSART4:
  7463                           	callstack 0
  7464                           
  7465 ;; *************** function _colour_rel *****************
  7466 ;; Defined at:
  7467 ;;		line 95 in file "color.c"
  7468 ;; Parameters:    Size  Location     Type
  7469 ;;  vals            2   27[COMRAM] PTR struct RGB
  7470 ;;		 -> vals(8), 
  7471 ;;  rel             2   29[COMRAM] PTR struct RGB_rel
  7472 ;;		 -> rel(16), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  L               4   43[COMRAM] float 
  7475 ;;  B               4   39[COMRAM] float 
  7476 ;;  G               4   35[COMRAM] float 
  7477 ;;  R               4   31[COMRAM] float 
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;Total ram usage:       20 bytes
  7492 ;; Hardware stack levels used: 1
  7493 ;; Hardware stack levels required when called: 5
  7494 ;; This function calls:
  7495 ;;		___fldiv
  7496 ;;		___xxtofl
  7497 ;; This function is called by:
  7498 ;;		_main
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text35
  7503   002DF4                     __ptext35:
  7504                           	callstack 0
  7505   002DF4                     _colour_rel:
  7506                           	callstack 25
  7507   002DF4                     
  7508                           ;color.c: 96:     float R = vals->R;
  7509   002DF4  C01C  FFD9         	movff	colour_rel@vals,fsr2l
  7510   002DF8  C01D  FFDA         	movff	colour_rel@vals+1,fsr2h
  7511   002DFC  CFDE F003          	movff	postinc2,___xxtofl@val
  7512   002E00  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7513   002E04  0E00               	movlw	0
  7514   002E06  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7515   002E08  0EFF               	movlw	-1
  7516   002E0A  6E05               	movwf	(___xxtofl@val+2)^0,c
  7517   002E0C  6E06               	movwf	(___xxtofl@val+3)^0,c
  7518   002E0E  0E01               	movlw	1
  7519   002E10  EC20  F016         	call	___xxtofl
  7520   002E14  C003  F020         	movff	?___xxtofl,colour_rel@R
  7521   002E18  C004  F021         	movff	?___xxtofl+1,colour_rel@R+1
  7522   002E1C  C005  F022         	movff	?___xxtofl+2,colour_rel@R+2
  7523   002E20  C006  F023         	movff	?___xxtofl+3,colour_rel@R+3
  7524                           
  7525                           ;color.c: 97:     float G = vals->G;
  7526   002E24  EE20 F002          	lfsr	2,2
  7527   002E28  501C               	movf	colour_rel@vals^0,w,c
  7528   002E2A  26D9               	addwf	fsr2l,f,c
  7529   002E2C  501D               	movf	(colour_rel@vals+1)^0,w,c
  7530   002E2E  22DA               	addwfc	fsr2h,f,c
  7531   002E30  CFDE F003          	movff	postinc2,___xxtofl@val
  7532   002E34  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7533   002E38  0E00               	movlw	0
  7534   002E3A  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7535   002E3C  0EFF               	movlw	-1
  7536   002E3E  6E05               	movwf	(___xxtofl@val+2)^0,c
  7537   002E40  6E06               	movwf	(___xxtofl@val+3)^0,c
  7538   002E42  0E01               	movlw	1
  7539   002E44  EC20  F016         	call	___xxtofl
  7540   002E48  C003  F024         	movff	?___xxtofl,colour_rel@G
  7541   002E4C  C004  F025         	movff	?___xxtofl+1,colour_rel@G+1
  7542   002E50  C005  F026         	movff	?___xxtofl+2,colour_rel@G+2
  7543   002E54  C006  F027         	movff	?___xxtofl+3,colour_rel@G+3
  7544                           
  7545                           ;color.c: 98:     float B = vals->B;
  7546   002E58  EE20 F004          	lfsr	2,4
  7547   002E5C  501C               	movf	colour_rel@vals^0,w,c
  7548   002E5E  26D9               	addwf	fsr2l,f,c
  7549   002E60  501D               	movf	(colour_rel@vals+1)^0,w,c
  7550   002E62  22DA               	addwfc	fsr2h,f,c
  7551   002E64  CFDE F003          	movff	postinc2,___xxtofl@val
  7552   002E68  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7553   002E6C  0E00               	movlw	0
  7554   002E6E  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7555   002E70  0EFF               	movlw	-1
  7556   002E72  6E05               	movwf	(___xxtofl@val+2)^0,c
  7557   002E74  6E06               	movwf	(___xxtofl@val+3)^0,c
  7558   002E76  0E01               	movlw	1
  7559   002E78  EC20  F016         	call	___xxtofl
  7560   002E7C  C003  F028         	movff	?___xxtofl,colour_rel@B
  7561   002E80  C004  F029         	movff	?___xxtofl+1,colour_rel@B+1
  7562   002E84  C005  F02A         	movff	?___xxtofl+2,colour_rel@B+2
  7563   002E88  C006  F02B         	movff	?___xxtofl+3,colour_rel@B+3
  7564                           
  7565                           ;color.c: 99:     float L = vals->L;
  7566   002E8C  EE20 F006          	lfsr	2,6
  7567   002E90  501C               	movf	colour_rel@vals^0,w,c
  7568   002E92  26D9               	addwf	fsr2l,f,c
  7569   002E94  501D               	movf	(colour_rel@vals+1)^0,w,c
  7570   002E96  22DA               	addwfc	fsr2h,f,c
  7571   002E98  CFDE F003          	movff	postinc2,___xxtofl@val
  7572   002E9C  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7573   002EA0  0E00               	movlw	0
  7574   002EA2  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7575   002EA4  0EFF               	movlw	-1
  7576   002EA6  6E05               	movwf	(___xxtofl@val+2)^0,c
  7577   002EA8  6E06               	movwf	(___xxtofl@val+3)^0,c
  7578   002EAA  0E01               	movlw	1
  7579   002EAC  EC20  F016         	call	___xxtofl
  7580   002EB0  C003  F02C         	movff	?___xxtofl,colour_rel@L
  7581   002EB4  C004  F02D         	movff	?___xxtofl+1,colour_rel@L+1
  7582   002EB8  C005  F02E         	movff	?___xxtofl+2,colour_rel@L+2
  7583   002EBC  C006  F02F         	movff	?___xxtofl+3,colour_rel@L+3
  7584                           
  7585                           ;color.c: 100:     rel -> R = R/L;
  7586   002EC0  C020  F003         	movff	colour_rel@R,___fldiv@b
  7587   002EC4  C021  F004         	movff	colour_rel@R+1,___fldiv@b+1
  7588   002EC8  C022  F005         	movff	colour_rel@R+2,___fldiv@b+2
  7589   002ECC  C023  F006         	movff	colour_rel@R+3,___fldiv@b+3
  7590   002ED0  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7591   002ED4  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7592   002ED8  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7593   002EDC  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7594   002EE0  EC89  F010         	call	___fldiv	;wreg free
  7595   002EE4  C01E  FFD9         	movff	colour_rel@rel,fsr2l
  7596   002EE8  C01F  FFDA         	movff	colour_rel@rel+1,fsr2h
  7597   002EEC  C003  FFDE         	movff	?___fldiv,postinc2
  7598   002EF0  C004  FFDE         	movff	?___fldiv+1,postinc2
  7599   002EF4  C005  FFDE         	movff	?___fldiv+2,postinc2
  7600   002EF8  C006  FFDE         	movff	?___fldiv+3,postinc2
  7601                           
  7602                           ;color.c: 101:     rel -> B = B/L;
  7603   002EFC  C028  F003         	movff	colour_rel@B,___fldiv@b
  7604   002F00  C029  F004         	movff	colour_rel@B+1,___fldiv@b+1
  7605   002F04  C02A  F005         	movff	colour_rel@B+2,___fldiv@b+2
  7606   002F08  C02B  F006         	movff	colour_rel@B+3,___fldiv@b+3
  7607   002F0C  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7608   002F10  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7609   002F14  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7610   002F18  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7611   002F1C  EC89  F010         	call	___fldiv	;wreg free
  7612   002F20  EE20 F008          	lfsr	2,8
  7613   002F24  501E               	movf	colour_rel@rel^0,w,c
  7614   002F26  26D9               	addwf	fsr2l,f,c
  7615   002F28  501F               	movf	(colour_rel@rel+1)^0,w,c
  7616   002F2A  22DA               	addwfc	fsr2h,f,c
  7617   002F2C  C003  FFDE         	movff	?___fldiv,postinc2
  7618   002F30  C004  FFDE         	movff	?___fldiv+1,postinc2
  7619   002F34  C005  FFDE         	movff	?___fldiv+2,postinc2
  7620   002F38  C006  FFDE         	movff	?___fldiv+3,postinc2
  7621                           
  7622                           ;color.c: 102:     rel -> G = G/L;
  7623   002F3C  C024  F003         	movff	colour_rel@G,___fldiv@b
  7624   002F40  C025  F004         	movff	colour_rel@G+1,___fldiv@b+1
  7625   002F44  C026  F005         	movff	colour_rel@G+2,___fldiv@b+2
  7626   002F48  C027  F006         	movff	colour_rel@G+3,___fldiv@b+3
  7627   002F4C  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7628   002F50  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7629   002F54  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7630   002F58  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7631   002F5C  EC89  F010         	call	___fldiv	;wreg free
  7632   002F60  EE20 F004          	lfsr	2,4
  7633   002F64  501E               	movf	colour_rel@rel^0,w,c
  7634   002F66  26D9               	addwf	fsr2l,f,c
  7635   002F68  501F               	movf	(colour_rel@rel+1)^0,w,c
  7636   002F6A  22DA               	addwfc	fsr2h,f,c
  7637   002F6C  C003  FFDE         	movff	?___fldiv,postinc2
  7638   002F70  C004  FFDE         	movff	?___fldiv+1,postinc2
  7639   002F74  C005  FFDE         	movff	?___fldiv+2,postinc2
  7640   002F78  C006  FFDE         	movff	?___fldiv+3,postinc2
  7641   002F7C  0012               	return		;funcret
  7642   002F7E                     __end_of_colour_rel:
  7643                           	callstack 0
  7644                           
  7645 ;; *************** function ___xxtofl *****************
  7646 ;; Defined at:
  7647 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  sign            1    wreg     unsigned char 
  7650 ;;  val             4    2[COMRAM] long 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  sign            1   10[COMRAM] unsigned char 
  7653 ;;  arg             4   12[COMRAM] unsigned long 
  7654 ;;  exp             1   11[COMRAM] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  4    2[COMRAM] unsigned char 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;Total ram usage:       14 bytes
  7669 ;; Hardware stack levels used: 1
  7670 ;; Hardware stack levels required when called: 4
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_colour_rel
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text36
  7679   002C40                     __ptext36:
  7680                           	callstack 0
  7681   002C40                     ___xxtofl:
  7682                           	callstack 25
  7683                           
  7684                           ;incstack = 0
  7685                           ;___xxtofl@sign stored from wreg
  7686   002C40  6E0B               	movwf	___xxtofl@sign^0,c
  7687   002C42  500B               	movf	___xxtofl@sign^0,w,c
  7688   002C44  B4D8               	btfsc	status,2,c
  7689   002C46  EF27  F016         	goto	u4101
  7690   002C4A  EF29  F016         	goto	u4100
  7691   002C4E                     u4101:
  7692   002C4E  EF4B  F016         	goto	l984
  7693   002C52                     u4100:
  7694   002C52  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  7695   002C54  EF30  F016         	goto	u4110
  7696   002C58  EF2E  F016         	goto	u4111
  7697   002C5C                     u4111:
  7698   002C5C  EF4B  F016         	goto	l984
  7699   002C60                     u4110:
  7700   002C60  C003  F007         	movff	___xxtofl@val,??___xxtofl
  7701   002C64  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  7702   002C68  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  7703   002C6C  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  7704   002C70  1E07               	comf	??___xxtofl^0,f,c
  7705   002C72  1E08               	comf	(??___xxtofl+1)^0,f,c
  7706   002C74  1E09               	comf	(??___xxtofl+2)^0,f,c
  7707   002C76  1E0A               	comf	(??___xxtofl+3)^0,f,c
  7708   002C78  2A07               	incf	??___xxtofl^0,f,c
  7709   002C7A  0E00               	movlw	0
  7710   002C7C  2208               	addwfc	(??___xxtofl+1)^0,f,c
  7711   002C7E  2209               	addwfc	(??___xxtofl+2)^0,f,c
  7712   002C80  220A               	addwfc	(??___xxtofl+3)^0,f,c
  7713   002C82  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  7714   002C86  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  7715   002C8A  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  7716   002C8E  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  7717   002C92  EF53  F016         	goto	l4010
  7718   002C96                     l984:
  7719   002C96  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  7720   002C9A  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7721   002C9E  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7722   002CA2  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7723   002CA6                     l4010:
  7724   002CA6  5003               	movf	___xxtofl@val^0,w,c
  7725   002CA8  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  7726   002CAA  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  7727   002CAC  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  7728   002CAE  A4D8               	btfss	status,2,c
  7729   002CB0  EF5C  F016         	goto	u4121
  7730   002CB4  EF5E  F016         	goto	u4120
  7731   002CB8                     u4121:
  7732   002CB8  EF68  F016         	goto	l4016
  7733   002CBC                     u4120:
  7734   002CBC  0E00               	movlw	0
  7735   002CBE  6E03               	movwf	?___xxtofl^0,c
  7736   002CC0  0E00               	movlw	0
  7737   002CC2  6E04               	movwf	(?___xxtofl+1)^0,c
  7738   002CC4  0E00               	movlw	0
  7739   002CC6  6E05               	movwf	(?___xxtofl+2)^0,c
  7740   002CC8  0E00               	movlw	0
  7741   002CCA  6E06               	movwf	(?___xxtofl+3)^0,c
  7742   002CCC  EFF9  F016         	goto	l987
  7743   002CD0                     l4016:
  7744   002CD0  0E96               	movlw	150
  7745   002CD2  6E0C               	movwf	___xxtofl@exp^0,c
  7746   002CD4  EF72  F016         	goto	l4020
  7747   002CD8                     l4018:
  7748   002CD8  2A0C               	incf	___xxtofl@exp^0,f,c
  7749   002CDA  90D8               	bcf	status,0,c
  7750   002CDC  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  7751   002CDE  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  7752   002CE0  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  7753   002CE2  320D               	rrcf	___xxtofl@arg^0,f,c
  7754   002CE4                     l4020:
  7755   002CE4  0E00               	movlw	0
  7756   002CE6  140D               	andwf	___xxtofl@arg^0,w,c
  7757   002CE8  6E07               	movwf	??___xxtofl^0,c
  7758   002CEA  0E00               	movlw	0
  7759   002CEC  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  7760   002CEE  6E08               	movwf	(??___xxtofl+1)^0,c
  7761   002CF0  0E00               	movlw	0
  7762   002CF2  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  7763   002CF4  6E09               	movwf	(??___xxtofl+2)^0,c
  7764   002CF6  0EFE               	movlw	254
  7765   002CF8  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  7766   002CFA  6E0A               	movwf	(??___xxtofl+3)^0,c
  7767   002CFC  5007               	movf	??___xxtofl^0,w,c
  7768   002CFE  1008               	iorwf	(??___xxtofl+1)^0,w,c
  7769   002D00  1009               	iorwf	(??___xxtofl+2)^0,w,c
  7770   002D02  100A               	iorwf	(??___xxtofl+3)^0,w,c
  7771   002D04  A4D8               	btfss	status,2,c
  7772   002D06  EF87  F016         	goto	u4131
  7773   002D0A  EF89  F016         	goto	u4130
  7774   002D0E                     u4131:
  7775   002D0E  EF6C  F016         	goto	l4018
  7776   002D12                     u4130:
  7777   002D12  EF97  F016         	goto	l991
  7778   002D16                     l4022:
  7779   002D16  2A0C               	incf	___xxtofl@exp^0,f,c
  7780   002D18  0E01               	movlw	1
  7781   002D1A  260D               	addwf	___xxtofl@arg^0,f,c
  7782   002D1C  0E00               	movlw	0
  7783   002D1E  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  7784   002D20  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  7785   002D22  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  7786   002D24  90D8               	bcf	status,0,c
  7787   002D26  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  7788   002D28  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  7789   002D2A  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  7790   002D2C  320D               	rrcf	___xxtofl@arg^0,f,c
  7791   002D2E                     l991:
  7792   002D2E  0E00               	movlw	0
  7793   002D30  140D               	andwf	___xxtofl@arg^0,w,c
  7794   002D32  6E07               	movwf	??___xxtofl^0,c
  7795   002D34  0E00               	movlw	0
  7796   002D36  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  7797   002D38  6E08               	movwf	(??___xxtofl+1)^0,c
  7798   002D3A  0E00               	movlw	0
  7799   002D3C  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  7800   002D3E  6E09               	movwf	(??___xxtofl+2)^0,c
  7801   002D40  0EFF               	movlw	255
  7802   002D42  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  7803   002D44  6E0A               	movwf	(??___xxtofl+3)^0,c
  7804   002D46  5007               	movf	??___xxtofl^0,w,c
  7805   002D48  1008               	iorwf	(??___xxtofl+1)^0,w,c
  7806   002D4A  1009               	iorwf	(??___xxtofl+2)^0,w,c
  7807   002D4C  100A               	iorwf	(??___xxtofl+3)^0,w,c
  7808   002D4E  A4D8               	btfss	status,2,c
  7809   002D50  EFAC  F016         	goto	u4141
  7810   002D54  EFAE  F016         	goto	u4140
  7811   002D58                     u4141:
  7812   002D58  EF8B  F016         	goto	l4022
  7813   002D5C                     u4140:
  7814   002D5C  EFB6  F016         	goto	l4030
  7815   002D60                     l4028:
  7816   002D60  060C               	decf	___xxtofl@exp^0,f,c
  7817   002D62  90D8               	bcf	status,0,c
  7818   002D64  360D               	rlcf	___xxtofl@arg^0,f,c
  7819   002D66  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  7820   002D68  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  7821   002D6A  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  7822   002D6C                     l4030:
  7823   002D6C  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  7824   002D6E  EFBB  F016         	goto	u4151
  7825   002D72  EFBD  F016         	goto	u4150
  7826   002D76                     u4151:
  7827   002D76  EFC5  F016         	goto	l998
  7828   002D7A                     u4150:
  7829   002D7A  0E02               	movlw	2
  7830   002D7C  600C               	cpfslt	___xxtofl@exp^0,c
  7831   002D7E  EFC3  F016         	goto	u4161
  7832   002D82  EFC5  F016         	goto	u4160
  7833   002D86                     u4161:
  7834   002D86  EFB0  F016         	goto	l4028
  7835   002D8A                     u4160:
  7836   002D8A                     l998:
  7837   002D8A  B00C               	btfsc	___xxtofl@exp^0,0,c
  7838   002D8C  EFCA  F016         	goto	u4171
  7839   002D90  EFCC  F016         	goto	u4170
  7840   002D94                     u4171:
  7841   002D94  EFCD  F016         	goto	l4036
  7842   002D98                     u4170:
  7843   002D98  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  7844   002D9A                     l4036:
  7845   002D9A  90D8               	bcf	status,0,c
  7846   002D9C  320C               	rrcf	___xxtofl@exp^0,f,c
  7847   002D9E  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  7848   002DA2  6A08               	clrf	(??___xxtofl+1)^0,c
  7849   002DA4  6A09               	clrf	(??___xxtofl+2)^0,c
  7850   002DA6  6A0A               	clrf	(??___xxtofl+3)^0,c
  7851   002DA8  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  7852   002DAC  6A09               	clrf	(??___xxtofl+2)^0,c
  7853   002DAE  6A08               	clrf	(??___xxtofl+1)^0,c
  7854   002DB0  6A07               	clrf	??___xxtofl^0,c
  7855   002DB2  5007               	movf	??___xxtofl^0,w,c
  7856   002DB4  120D               	iorwf	___xxtofl@arg^0,f,c
  7857   002DB6  5008               	movf	(??___xxtofl+1)^0,w,c
  7858   002DB8  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  7859   002DBA  5009               	movf	(??___xxtofl+2)^0,w,c
  7860   002DBC  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  7861   002DBE  500A               	movf	(??___xxtofl+3)^0,w,c
  7862   002DC0  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  7863   002DC2  500B               	movf	___xxtofl@sign^0,w,c
  7864   002DC4  B4D8               	btfsc	status,2,c
  7865   002DC6  EFE7  F016         	goto	u4181
  7866   002DCA  EFE9  F016         	goto	u4180
  7867   002DCE                     u4181:
  7868   002DCE  EFF1  F016         	goto	l4046
  7869   002DD2                     u4180:
  7870   002DD2  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  7871   002DD4  EFF0  F016         	goto	u4190
  7872   002DD8  EFEE  F016         	goto	u4191
  7873   002DDC                     u4191:
  7874   002DDC  EFF1  F016         	goto	l4046
  7875   002DE0                     u4190:
  7876   002DE0  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  7877   002DE2                     l4046:
  7878   002DE2  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  7879   002DE6  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  7880   002DEA  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  7881   002DEE  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  7882   002DF2                     l987:
  7883   002DF2  0012               	return		;funcret
  7884   002DF4                     __end_of___xxtofl:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function ___fldiv *****************
  7888 ;; Defined at:
  7889 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  b               4    2[COMRAM] unsigned char 
  7892 ;;  a               4    6[COMRAM] unsigned char 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  grs             4   21[COMRAM] unsigned long 
  7895 ;;  rem             4   14[COMRAM] unsigned long 
  7896 ;;  new_exp         2   19[COMRAM] short 
  7897 ;;  aexp            1   26[COMRAM] unsigned char 
  7898 ;;  bexp            1   25[COMRAM] unsigned char 
  7899 ;;  sign            1   18[COMRAM] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  4    2[COMRAM] unsigned char 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7909 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7912 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;Total ram usage:       25 bytes
  7914 ;; Hardware stack levels used: 1
  7915 ;; Hardware stack levels required when called: 4
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		_colour_rel
  7920 ;;		_efgtoa
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text37
  7925   002112                     __ptext37:
  7926                           	callstack 0
  7927   002112                     ___fldiv:
  7928                           	callstack 22
  7929   002112  5006               	movf	(___fldiv@b+3)^0,w,c
  7930   002114  0B80               	andlw	128
  7931   002116  6E13               	movwf	___fldiv@sign^0,c
  7932   002118  5006               	movf	(___fldiv@b+3)^0,w,c
  7933   00211A  2406               	addwf	(___fldiv@b+3)^0,w,c
  7934   00211C  6E1A               	movwf	___fldiv@bexp^0,c
  7935   00211E  AE05               	btfss	(___fldiv@b+2)^0,7,c
  7936   002120  EF94  F010         	goto	u2761
  7937   002124  EF96  F010         	goto	u2760
  7938   002128                     u2761:
  7939   002128  EF97  F010         	goto	l3096
  7940   00212C                     u2760:
  7941   00212C  801A               	bsf	___fldiv@bexp^0,0,c
  7942   00212E                     l3096:
  7943   00212E  501A               	movf	___fldiv@bexp^0,w,c
  7944   002130  B4D8               	btfsc	status,2,c
  7945   002132  EF9D  F010         	goto	u2771
  7946   002136  EF9F  F010         	goto	u2770
  7947   00213A                     u2771:
  7948   00213A  EFB4  F010         	goto	l3106
  7949   00213E                     u2770:
  7950   00213E  281A               	incf	___fldiv@bexp^0,w,c
  7951   002140  A4D8               	btfss	status,2,c
  7952   002142  EFA5  F010         	goto	u2781
  7953   002146  EFA7  F010         	goto	u2780
  7954   00214A                     u2781:
  7955   00214A  EFAF  F010         	goto	l3102
  7956   00214E                     u2780:
  7957   00214E  0E00               	movlw	0
  7958   002150  6E03               	movwf	___fldiv@b^0,c
  7959   002152  0E00               	movlw	0
  7960   002154  6E04               	movwf	(___fldiv@b+1)^0,c
  7961   002156  0E00               	movlw	0
  7962   002158  6E05               	movwf	(___fldiv@b+2)^0,c
  7963   00215A  0E00               	movlw	0
  7964   00215C  6E06               	movwf	(___fldiv@b+3)^0,c
  7965   00215E                     l3102:
  7966   00215E  8E05               	bsf	(___fldiv@b+2)^0,7,c
  7967   002160  0E00               	movlw	0
  7968   002162  6E06               	movwf	(___fldiv@b+3)^0,c
  7969   002164  EFBC  F010         	goto	l3108
  7970   002168                     l3106:
  7971   002168  0E00               	movlw	0
  7972   00216A  6E03               	movwf	___fldiv@b^0,c
  7973   00216C  0E00               	movlw	0
  7974   00216E  6E04               	movwf	(___fldiv@b+1)^0,c
  7975   002170  0E00               	movlw	0
  7976   002172  6E05               	movwf	(___fldiv@b+2)^0,c
  7977   002174  0E00               	movlw	0
  7978   002176  6E06               	movwf	(___fldiv@b+3)^0,c
  7979   002178                     l3108:
  7980   002178  500A               	movf	(___fldiv@a+3)^0,w,c
  7981   00217A  0B80               	andlw	128
  7982   00217C  1A13               	xorwf	___fldiv@sign^0,f,c
  7983   00217E  500A               	movf	(___fldiv@a+3)^0,w,c
  7984   002180  240A               	addwf	(___fldiv@a+3)^0,w,c
  7985   002182  6E1B               	movwf	___fldiv@aexp^0,c
  7986   002184  AE09               	btfss	(___fldiv@a+2)^0,7,c
  7987   002186  EFC7  F010         	goto	u2791
  7988   00218A  EFC9  F010         	goto	u2790
  7989   00218E                     u2791:
  7990   00218E  EFCA  F010         	goto	l3116
  7991   002192                     u2790:
  7992   002192  801B               	bsf	___fldiv@aexp^0,0,c
  7993   002194                     l3116:
  7994   002194  501B               	movf	___fldiv@aexp^0,w,c
  7995   002196  B4D8               	btfsc	status,2,c
  7996   002198  EFD0  F010         	goto	u2801
  7997   00219C  EFD2  F010         	goto	u2800
  7998   0021A0                     u2801:
  7999   0021A0  EFE7  F010         	goto	l3126
  8000   0021A4                     u2800:
  8001   0021A4  281B               	incf	___fldiv@aexp^0,w,c
  8002   0021A6  A4D8               	btfss	status,2,c
  8003   0021A8  EFD8  F010         	goto	u2811
  8004   0021AC  EFDA  F010         	goto	u2810
  8005   0021B0                     u2811:
  8006   0021B0  EFE2  F010         	goto	l3122
  8007   0021B4                     u2810:
  8008   0021B4  0E00               	movlw	0
  8009   0021B6  6E07               	movwf	___fldiv@a^0,c
  8010   0021B8  0E00               	movlw	0
  8011   0021BA  6E08               	movwf	(___fldiv@a+1)^0,c
  8012   0021BC  0E00               	movlw	0
  8013   0021BE  6E09               	movwf	(___fldiv@a+2)^0,c
  8014   0021C0  0E00               	movlw	0
  8015   0021C2  6E0A               	movwf	(___fldiv@a+3)^0,c
  8016   0021C4                     l3122:
  8017   0021C4  8E09               	bsf	(___fldiv@a+2)^0,7,c
  8018   0021C6  0E00               	movlw	0
  8019   0021C8  6E0A               	movwf	(___fldiv@a+3)^0,c
  8020   0021CA  EFEF  F010         	goto	l3128
  8021   0021CE                     l3126:
  8022   0021CE  0E00               	movlw	0
  8023   0021D0  6E07               	movwf	___fldiv@a^0,c
  8024   0021D2  0E00               	movlw	0
  8025   0021D4  6E08               	movwf	(___fldiv@a+1)^0,c
  8026   0021D6  0E00               	movlw	0
  8027   0021D8  6E09               	movwf	(___fldiv@a+2)^0,c
  8028   0021DA  0E00               	movlw	0
  8029   0021DC  6E0A               	movwf	(___fldiv@a+3)^0,c
  8030   0021DE                     l3128:
  8031   0021DE  5007               	movf	___fldiv@a^0,w,c
  8032   0021E0  1008               	iorwf	(___fldiv@a+1)^0,w,c
  8033   0021E2  1009               	iorwf	(___fldiv@a+2)^0,w,c
  8034   0021E4  100A               	iorwf	(___fldiv@a+3)^0,w,c
  8035   0021E6  A4D8               	btfss	status,2,c
  8036   0021E8  EFF8  F010         	goto	u2821
  8037   0021EC  EFFA  F010         	goto	u2820
  8038   0021F0                     u2821:
  8039   0021F0  EF12  F011         	goto	l3140
  8040   0021F4                     u2820:
  8041   0021F4  0E00               	movlw	0
  8042   0021F6  6E03               	movwf	___fldiv@b^0,c
  8043   0021F8  0E00               	movlw	0
  8044   0021FA  6E04               	movwf	(___fldiv@b+1)^0,c
  8045   0021FC  0E00               	movlw	0
  8046   0021FE  6E05               	movwf	(___fldiv@b+2)^0,c
  8047   002200  0E00               	movlw	0
  8048   002202  6E06               	movwf	(___fldiv@b+3)^0,c
  8049   002204  0E80               	movlw	128
  8050   002206  1205               	iorwf	(___fldiv@b+2)^0,f,c
  8051   002208  0E7F               	movlw	127
  8052   00220A  1206               	iorwf	(___fldiv@b+3)^0,f,c
  8053   00220C                     l3134:
  8054   00220C  5013               	movf	___fldiv@sign^0,w,c
  8055   00220E  1206               	iorwf	(___fldiv@b+3)^0,f,c
  8056   002210  C003  F003         	movff	___fldiv@b,?___fldiv
  8057   002214  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
  8058   002218  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
  8059   00221C  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
  8060   002220  EF55  F012         	goto	l911
  8061   002224                     l3140:
  8062   002224  501A               	movf	___fldiv@bexp^0,w,c
  8063   002226  A4D8               	btfss	status,2,c
  8064   002228  EF18  F011         	goto	u2831
  8065   00222C  EF1A  F011         	goto	u2830
  8066   002230                     u2831:
  8067   002230  EF24  F011         	goto	l3148
  8068   002234                     u2830:
  8069   002234  0E00               	movlw	0
  8070   002236  6E03               	movwf	?___fldiv^0,c
  8071   002238  0E00               	movlw	0
  8072   00223A  6E04               	movwf	(?___fldiv+1)^0,c
  8073   00223C  0E00               	movlw	0
  8074   00223E  6E05               	movwf	(?___fldiv+2)^0,c
  8075   002240  0E00               	movlw	0
  8076   002242  6E06               	movwf	(?___fldiv+3)^0,c
  8077   002244  EF55  F012         	goto	l911
  8078   002248                     l3148:
  8079   002248  501B               	movf	___fldiv@aexp^0,w,c
  8080   00224A  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
  8081   00224E  6A0C               	clrf	(??___fldiv+1)^0,c
  8082   002250  5E0B               	subwf	??___fldiv^0,f,c
  8083   002252  0E00               	movlw	0
  8084   002254  5A0C               	subwfb	(??___fldiv+1)^0,f,c
  8085   002256  0E7F               	movlw	127
  8086   002258  240B               	addwf	??___fldiv^0,w,c
  8087   00225A  6E14               	movwf	___fldiv@new_exp^0,c
  8088   00225C  0E00               	movlw	0
  8089   00225E  200C               	addwfc	(??___fldiv+1)^0,w,c
  8090   002260  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8091   002262  C003  F00F         	movff	___fldiv@b,___fldiv@rem
  8092   002266  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
  8093   00226A  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
  8094   00226E  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
  8095   002272  0E00               	movlw	0
  8096   002274  6E03               	movwf	___fldiv@b^0,c
  8097   002276  0E00               	movlw	0
  8098   002278  6E04               	movwf	(___fldiv@b+1)^0,c
  8099   00227A  0E00               	movlw	0
  8100   00227C  6E05               	movwf	(___fldiv@b+2)^0,c
  8101   00227E  0E00               	movlw	0
  8102   002280  6E06               	movwf	(___fldiv@b+3)^0,c
  8103   002282  0E00               	movlw	0
  8104   002284  6E16               	movwf	___fldiv@grs^0,c
  8105   002286  0E00               	movlw	0
  8106   002288  6E17               	movwf	(___fldiv@grs+1)^0,c
  8107   00228A  0E00               	movlw	0
  8108   00228C  6E18               	movwf	(___fldiv@grs+2)^0,c
  8109   00228E  0E00               	movlw	0
  8110   002290  6E19               	movwf	(___fldiv@grs+3)^0,c
  8111   002292  0E00               	movlw	0
  8112   002294  6E1B               	movwf	___fldiv@aexp^0,c
  8113   002296  EF85  F011         	goto	l913
  8114   00229A                     l3158:
  8115   00229A  501B               	movf	___fldiv@aexp^0,w,c
  8116   00229C  B4D8               	btfsc	status,2,c
  8117   00229E  EF53  F011         	goto	u2841
  8118   0022A2  EF55  F011         	goto	u2840
  8119   0022A6                     u2841:
  8120   0022A6  EF6C  F011         	goto	l3166
  8121   0022AA                     u2840:
  8122   0022AA  90D8               	bcf	status,0,c
  8123   0022AC  360F               	rlcf	___fldiv@rem^0,f,c
  8124   0022AE  3610               	rlcf	(___fldiv@rem+1)^0,f,c
  8125   0022B0  3611               	rlcf	(___fldiv@rem+2)^0,f,c
  8126   0022B2  3612               	rlcf	(___fldiv@rem+3)^0,f,c
  8127   0022B4  90D8               	bcf	status,0,c
  8128   0022B6  3603               	rlcf	___fldiv@b^0,f,c
  8129   0022B8  3604               	rlcf	(___fldiv@b+1)^0,f,c
  8130   0022BA  3605               	rlcf	(___fldiv@b+2)^0,f,c
  8131   0022BC  3606               	rlcf	(___fldiv@b+3)^0,f,c
  8132   0022BE  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8133   0022C0  EF64  F011         	goto	u2851
  8134   0022C4  EF66  F011         	goto	u2850
  8135   0022C8                     u2851:
  8136   0022C8  EF67  F011         	goto	l916
  8137   0022CC                     u2850:
  8138   0022CC  8003               	bsf	___fldiv@b^0,0,c
  8139   0022CE                     l916:
  8140   0022CE  90D8               	bcf	status,0,c
  8141   0022D0  3616               	rlcf	___fldiv@grs^0,f,c
  8142   0022D2  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  8143   0022D4  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  8144   0022D6  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  8145   0022D8                     l3166:
  8146   0022D8  5007               	movf	___fldiv@a^0,w,c
  8147   0022DA  5C0F               	subwf	___fldiv@rem^0,w,c
  8148   0022DC  5008               	movf	(___fldiv@a+1)^0,w,c
  8149   0022DE  5810               	subwfb	(___fldiv@rem+1)^0,w,c
  8150   0022E0  5009               	movf	(___fldiv@a+2)^0,w,c
  8151   0022E2  5811               	subwfb	(___fldiv@rem+2)^0,w,c
  8152   0022E4  500A               	movf	(___fldiv@a+3)^0,w,c
  8153   0022E6  5812               	subwfb	(___fldiv@rem+3)^0,w,c
  8154   0022E8  A0D8               	btfss	status,0,c
  8155   0022EA  EF79  F011         	goto	u2861
  8156   0022EE  EF7B  F011         	goto	u2860
  8157   0022F2                     u2861:
  8158   0022F2  EF84  F011         	goto	l3172
  8159   0022F6                     u2860:
  8160   0022F6  8C19               	bsf	(___fldiv@grs+3)^0,6,c
  8161   0022F8  5007               	movf	___fldiv@a^0,w,c
  8162   0022FA  5E0F               	subwf	___fldiv@rem^0,f,c
  8163   0022FC  5008               	movf	(___fldiv@a+1)^0,w,c
  8164   0022FE  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
  8165   002300  5009               	movf	(___fldiv@a+2)^0,w,c
  8166   002302  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
  8167   002304  500A               	movf	(___fldiv@a+3)^0,w,c
  8168   002306  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
  8169   002308                     l3172:
  8170   002308  2A1B               	incf	___fldiv@aexp^0,f,c
  8171   00230A                     l913:
  8172   00230A  0E19               	movlw	25
  8173   00230C  641B               	cpfsgt	___fldiv@aexp^0,c
  8174   00230E  EF8B  F011         	goto	u2871
  8175   002312  EF8D  F011         	goto	u2870
  8176   002316                     u2871:
  8177   002316  EF4D  F011         	goto	l3158
  8178   00231A                     u2870:
  8179   00231A  500F               	movf	___fldiv@rem^0,w,c
  8180   00231C  1010               	iorwf	(___fldiv@rem+1)^0,w,c
  8181   00231E  1011               	iorwf	(___fldiv@rem+2)^0,w,c
  8182   002320  1012               	iorwf	(___fldiv@rem+3)^0,w,c
  8183   002322  B4D8               	btfsc	status,2,c
  8184   002324  EF96  F011         	goto	u2881
  8185   002328  EF98  F011         	goto	u2880
  8186   00232C                     u2881:
  8187   00232C  EFB0  F011         	goto	l3184
  8188   002330                     u2880:
  8189   002330  8016               	bsf	___fldiv@grs^0,0,c
  8190   002332  EFB0  F011         	goto	l3184
  8191   002336                     l3178:
  8192   002336  90D8               	bcf	status,0,c
  8193   002338  3603               	rlcf	___fldiv@b^0,f,c
  8194   00233A  3604               	rlcf	(___fldiv@b+1)^0,f,c
  8195   00233C  3605               	rlcf	(___fldiv@b+2)^0,f,c
  8196   00233E  3606               	rlcf	(___fldiv@b+3)^0,f,c
  8197   002340  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8198   002342  EFA5  F011         	goto	u2891
  8199   002346  EFA7  F011         	goto	u2890
  8200   00234A                     u2891:
  8201   00234A  EFA8  F011         	goto	l922
  8202   00234E                     u2890:
  8203   00234E  8003               	bsf	___fldiv@b^0,0,c
  8204   002350                     l922:
  8205   002350  90D8               	bcf	status,0,c
  8206   002352  3616               	rlcf	___fldiv@grs^0,f,c
  8207   002354  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  8208   002356  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  8209   002358  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  8210   00235A  0614               	decf	___fldiv@new_exp^0,f,c
  8211   00235C  A0D8               	btfss	status,0,c
  8212   00235E  0615               	decf	(___fldiv@new_exp+1)^0,f,c
  8213   002360                     l3184:
  8214   002360  AE05               	btfss	(___fldiv@b+2)^0,7,c
  8215   002362  EFB5  F011         	goto	u2901
  8216   002366  EFB7  F011         	goto	u2900
  8217   00236A                     u2901:
  8218   00236A  EF9B  F011         	goto	l3178
  8219   00236E                     u2900:
  8220   00236E  0E00               	movlw	0
  8221   002370  6E1B               	movwf	___fldiv@aexp^0,c
  8222   002372  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8223   002374  EFBE  F011         	goto	u2911
  8224   002378  EFC0  F011         	goto	u2910
  8225   00237C                     u2911:
  8226   00237C  EFE4  F011         	goto	l924
  8227   002380                     u2910:
  8228   002380  0EFF               	movlw	255
  8229   002382  1416               	andwf	___fldiv@grs^0,w,c
  8230   002384  6E0B               	movwf	??___fldiv^0,c
  8231   002386  0EFF               	movlw	255
  8232   002388  1417               	andwf	(___fldiv@grs+1)^0,w,c
  8233   00238A  6E0C               	movwf	(??___fldiv+1)^0,c
  8234   00238C  0EFF               	movlw	255
  8235   00238E  1418               	andwf	(___fldiv@grs+2)^0,w,c
  8236   002390  6E0D               	movwf	(??___fldiv+2)^0,c
  8237   002392  0E7F               	movlw	127
  8238   002394  1419               	andwf	(___fldiv@grs+3)^0,w,c
  8239   002396  6E0E               	movwf	(??___fldiv+3)^0,c
  8240   002398  500B               	movf	??___fldiv^0,w,c
  8241   00239A  100C               	iorwf	(??___fldiv+1)^0,w,c
  8242   00239C  100D               	iorwf	(??___fldiv+2)^0,w,c
  8243   00239E  100E               	iorwf	(??___fldiv+3)^0,w,c
  8244   0023A0  B4D8               	btfsc	status,2,c
  8245   0023A2  EFD5  F011         	goto	u2921
  8246   0023A6  EFD7  F011         	goto	u2920
  8247   0023AA                     u2921:
  8248   0023AA  EFDB  F011         	goto	l925
  8249   0023AE                     u2920:
  8250   0023AE                     l3192:
  8251   0023AE  0E01               	movlw	1
  8252   0023B0  6E1B               	movwf	___fldiv@aexp^0,c
  8253   0023B2  EFE4  F011         	goto	l924
  8254   0023B6                     l925:
  8255   0023B6  A003               	btfss	___fldiv@b^0,0,c
  8256   0023B8  EFE0  F011         	goto	u2931
  8257   0023BC  EFE2  F011         	goto	u2930
  8258   0023C0                     u2931:
  8259   0023C0  EFE4  F011         	goto	l924
  8260   0023C4                     u2930:
  8261   0023C4  EFD7  F011         	goto	l3192
  8262   0023C8                     l924:
  8263   0023C8  501B               	movf	___fldiv@aexp^0,w,c
  8264   0023CA  B4D8               	btfsc	status,2,c
  8265   0023CC  EFEA  F011         	goto	u2941
  8266   0023D0  EFEC  F011         	goto	u2940
  8267   0023D4                     u2941:
  8268   0023D4  EF10  F012         	goto	l3204
  8269   0023D8                     u2940:
  8270   0023D8  0E01               	movlw	1
  8271   0023DA  2603               	addwf	___fldiv@b^0,f,c
  8272   0023DC  0E00               	movlw	0
  8273   0023DE  2204               	addwfc	(___fldiv@b+1)^0,f,c
  8274   0023E0  2205               	addwfc	(___fldiv@b+2)^0,f,c
  8275   0023E2  2206               	addwfc	(___fldiv@b+3)^0,f,c
  8276   0023E4  A006               	btfss	(___fldiv@b+3)^0,0,c
  8277   0023E6  EFF7  F011         	goto	u2951
  8278   0023EA  EFF9  F011         	goto	u2950
  8279   0023EE                     u2951:
  8280   0023EE  EF10  F012         	goto	l3204
  8281   0023F2                     u2950:
  8282   0023F2  C003  F00B         	movff	___fldiv@b,??___fldiv
  8283   0023F6  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
  8284   0023FA  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
  8285   0023FE  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
  8286   002402  340E               	rlcf	(??___fldiv+3)^0,w,c
  8287   002404  320E               	rrcf	(??___fldiv+3)^0,f,c
  8288   002406  320D               	rrcf	(??___fldiv+2)^0,f,c
  8289   002408  320C               	rrcf	(??___fldiv+1)^0,f,c
  8290   00240A  320B               	rrcf	??___fldiv^0,f,c
  8291   00240C  C00B  F003         	movff	??___fldiv,___fldiv@b
  8292   002410  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
  8293   002414  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
  8294   002418  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
  8295   00241C  4A14               	infsnz	___fldiv@new_exp^0,f,c
  8296   00241E  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
  8297   002420                     l3204:
  8298   002420  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8299   002422  EF1B  F012         	goto	u2961
  8300   002426  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  8301   002428  E108               	bnz	u2960
  8302   00242A  2814               	incf	___fldiv@new_exp^0,w,c
  8303   00242C  A0D8               	btfss	status,0,c
  8304   00242E  EF1B  F012         	goto	u2961
  8305   002432  EF1D  F012         	goto	u2960
  8306   002436                     u2961:
  8307   002436  EF28  F012         	goto	l3208
  8308   00243A                     u2960:
  8309   00243A  0E00               	movlw	0
  8310   00243C  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8311   00243E  6814               	setf	___fldiv@new_exp^0,c
  8312   002440  0E00               	movlw	0
  8313   002442  6E03               	movwf	___fldiv@b^0,c
  8314   002444  0E00               	movlw	0
  8315   002446  6E04               	movwf	(___fldiv@b+1)^0,c
  8316   002448  0E00               	movlw	0
  8317   00244A  6E05               	movwf	(___fldiv@b+2)^0,c
  8318   00244C  0E00               	movlw	0
  8319   00244E  6E06               	movwf	(___fldiv@b+3)^0,c
  8320   002450                     l3208:
  8321   002450  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8322   002452  EF35  F012         	goto	u2970
  8323   002456  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  8324   002458  E106               	bnz	u2971
  8325   00245A  0414               	decf	___fldiv@new_exp^0,w,c
  8326   00245C  B0D8               	btfsc	status,0,c
  8327   00245E  EF33  F012         	goto	u2971
  8328   002462  EF35  F012         	goto	u2970
  8329   002466                     u2971:
  8330   002466  EF43  F012         	goto	l3212
  8331   00246A                     u2970:
  8332   00246A  0E00               	movlw	0
  8333   00246C  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8334   00246E  0E00               	movlw	0
  8335   002470  6E14               	movwf	___fldiv@new_exp^0,c
  8336   002472  0E00               	movlw	0
  8337   002474  6E03               	movwf	___fldiv@b^0,c
  8338   002476  0E00               	movlw	0
  8339   002478  6E04               	movwf	(___fldiv@b+1)^0,c
  8340   00247A  0E00               	movlw	0
  8341   00247C  6E05               	movwf	(___fldiv@b+2)^0,c
  8342   00247E  0E00               	movlw	0
  8343   002480  6E06               	movwf	(___fldiv@b+3)^0,c
  8344   002482  0E00               	movlw	0
  8345   002484  6E13               	movwf	___fldiv@sign^0,c
  8346   002486                     l3212:
  8347   002486  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
  8348   00248A  A01A               	btfss	___fldiv@bexp^0,0,c
  8349   00248C  EF4A  F012         	goto	u2981
  8350   002490  EF4C  F012         	goto	u2980
  8351   002494                     u2981:
  8352   002494  EF4F  F012         	goto	l3218
  8353   002498                     u2980:
  8354   002498  8E05               	bsf	(___fldiv@b+2)^0,7,c
  8355   00249A  EF50  F012         	goto	l3220
  8356   00249E                     l3218:
  8357   00249E  9E05               	bcf	(___fldiv@b+2)^0,7,c
  8358   0024A0                     l3220:
  8359   0024A0  90D8               	bcf	status,0,c
  8360   0024A2  301A               	rrcf	___fldiv@bexp^0,w,c
  8361   0024A4  6E06               	movwf	(___fldiv@b+3)^0,c
  8362   0024A6  EF06  F011         	goto	l3134
  8363   0024AA                     l911:
  8364   0024AA  0012               	return		;funcret
  8365   0024AC                     __end_of___fldiv:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _color_click_init *****************
  8369 ;; Defined at:
  8370 ;;		line 5 in file "color.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;Total ram usage:        1 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 7
  8391 ;; This function calls:
  8392 ;;		_I2C_2_Master_Init
  8393 ;;		_color_writetoaddr
  8394 ;; This function is called by:
  8395 ;;		_main
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text38
  8400   003D9A                     __ptext38:
  8401                           	callstack 0
  8402   003D9A                     _color_click_init:
  8403                           	callstack 23
  8404   003D9A                     
  8405                           ;color.c: 8:     I2C_2_Master_Init();
  8406   003D9A  EC14  F01F         	call	_I2C_2_Master_Init	;wreg free
  8407   003D9E                     
  8408                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8409   003D9E  0E01               	movlw	1
  8410   003DA0  6E05               	movwf	color_writetoaddr@value^0,c
  8411   003DA2  0E00               	movlw	0
  8412   003DA4  EC7A  F01F         	call	_color_writetoaddr
  8413   003DA8                     
  8414                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8415   003DA8  0E3F               	movlw	63
  8416   003DAA  6E07               	movwf	??_color_click_init^0,c
  8417   003DAC  0E55               	movlw	85
  8418   003DAE                     u4347:
  8419   003DAE  2EE8               	decfsz	wreg,f,c
  8420   003DB0  D7FE               	bra	u4347
  8421   003DB2  2E07               	decfsz	??_color_click_init^0,f,c
  8422   003DB4  D7FC               	bra	u4347
  8423   003DB6  F000               	nop	
  8424   003DB8                     
  8425                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8426   003DB8  0E03               	movlw	3
  8427   003DBA  6E05               	movwf	color_writetoaddr@value^0,c
  8428   003DBC  0E00               	movlw	0
  8429   003DBE  EC7A  F01F         	call	_color_writetoaddr
  8430   003DC2                     
  8431                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8432   003DC2  0ED5               	movlw	213
  8433   003DC4  6E05               	movwf	color_writetoaddr@value^0,c
  8434   003DC6  0E01               	movlw	1
  8435   003DC8  EC7A  F01F         	call	_color_writetoaddr
  8436   003DCC  0012               	return		;funcret
  8437   003DCE                     __end_of_color_click_init:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _I2C_2_Master_Init *****************
  8441 ;; Defined at:
  8442 ;;		line 4 in file "i2c.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;		None
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      void 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;Total ram usage:        0 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 4
  8463 ;; This function calls:
  8464 ;;		Nothing
  8465 ;; This function is called by:
  8466 ;;		_color_click_init
  8467 ;;		_main
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text39
  8472   003E28                     __ptext39:
  8473                           	callstack 0
  8474   003E28                     _I2C_2_Master_Init:
  8475                           	callstack 25
  8476   003E28                     
  8477                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8478   003E28  010E               	movlb	14	; () banked
  8479   003E2A  51D9               	movf	217,w,b	;volatile
  8480   003E2C  0BF0               	andlw	-16
  8481   003E2E  0908               	iorlw	8
  8482   003E30  6FD9               	movwf	217,b	;volatile
  8483   003E32                     
  8484                           ; BSR set to: 14
  8485                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8486   003E32  8BD9               	bsf	217,5,b	;volatile
  8487                           
  8488                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8489   003E34  0E9F               	movlw	159
  8490   003E36  6FD6               	movwf	214,b	;volatile
  8491   003E38                     
  8492                           ; BSR set to: 14
  8493                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8494   003E38  8A84               	bsf	132,5,c	;volatile
  8495   003E3A                     
  8496                           ; BSR set to: 14
  8497                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8498   003E3A  8C84               	bsf	132,6,c	;volatile
  8499   003E3C                     
  8500                           ; BSR set to: 14
  8501                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8502   003E3C  9BA7               	bcf	167,5,b	;volatile
  8503   003E3E                     
  8504                           ; BSR set to: 14
  8505                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8506   003E3E  9DA7               	bcf	167,6,b	;volatile
  8507                           
  8508                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8509   003E40  0E1D               	movlw	29
  8510   003E42  6F1D               	movwf	29,b	;volatile
  8511                           
  8512                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8513   003E44  0E1E               	movlw	30
  8514   003E46  6F1C               	movwf	28,b	;volatile
  8515                           
  8516                           ;i2c.c: 18:   RD5PPS=0x1C;
  8517   003E48  0E1C               	movlw	28
  8518   003E4A  6F6F               	movwf	111,b	;volatile
  8519                           
  8520                           ;i2c.c: 19:   RD6PPS=0x1B;
  8521   003E4C  0E1B               	movlw	27
  8522   003E4E  6F70               	movwf	112,b	;volatile
  8523   003E50                     
  8524                           ; BSR set to: 14
  8525   003E50  0012               	return		;funcret
  8526   003E52                     __end_of_I2C_2_Master_Init:
  8527                           	callstack 0
  8528                           
  8529 ;; *************** function _TxBufferedString *****************
  8530 ;; Defined at:
  8531 ;;		line 85 in file "serial.c"
  8532 ;; Parameters:    Size  Location     Type
  8533 ;;  string          2    3[COMRAM] PTR unsigned char 
  8534 ;;		 -> main@buf(50), 
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;Total ram usage:        2 bytes
  8551 ;; Hardware stack levels used: 1
  8552 ;; Hardware stack levels required when called: 5
  8553 ;; This function calls:
  8554 ;;		_putCharToTxBuf
  8555 ;; This function is called by:
  8556 ;;		_main
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           	psect	text40
  8561   003DCE                     __ptext40:
  8562                           	callstack 0
  8563   003DCE                     _TxBufferedString:
  8564                           	callstack 25
  8565   003DCE                     
  8566                           ;serial.c: 86:  while (*string!=0){
  8567   003DCE  EFF2  F01E         	goto	l4104
  8568   003DD2                     l4100:
  8569                           
  8570                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8571   003DD2  C004  FFD9         	movff	TxBufferedString@string,fsr2l
  8572   003DD6  C005  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8573   003DDA  50DF               	movf	indf2,w,c
  8574   003DDC  EC29  F01F         	call	_putCharToTxBuf
  8575   003DE0  4A04               	infsnz	TxBufferedString@string^0,f,c
  8576   003DE2  2A05               	incf	(TxBufferedString@string+1)^0,f,c
  8577   003DE4                     l4104:
  8578                           
  8579                           ;serial.c: 86:  while (*string!=0){
  8580   003DE4  C004  FFD9         	movff	TxBufferedString@string,fsr2l
  8581   003DE8  C005  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8582   003DEC  50DF               	movf	indf2,w,c
  8583   003DEE  A4D8               	btfss	status,2,c
  8584   003DF0  EFFC  F01E         	goto	u4211
  8585   003DF4  EFFE  F01E         	goto	u4210
  8586   003DF8                     u4211:
  8587   003DF8  EFE9  F01E         	goto	l4100
  8588   003DFC                     u4210:
  8589   003DFC  0012               	return		;funcret
  8590   003DFE                     __end_of_TxBufferedString:
  8591                           	callstack 0
  8592                           
  8593 ;; *************** function _putCharToTxBuf *****************
  8594 ;; Defined at:
  8595 ;;		line 72 in file "serial.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;  byte            1    wreg     unsigned char 
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  byte            1    2[COMRAM] unsigned char 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;Total ram usage:        1 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; Hardware stack levels required when called: 4
  8616 ;; This function calls:
  8617 ;;		Nothing
  8618 ;; This function is called by:
  8619 ;;		_TxBufferedString
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text41
  8624   003E52                     __ptext41:
  8625                           	callstack 0
  8626   003E52                     _putCharToTxBuf:
  8627                           	callstack 25
  8628                           
  8629                           ;incstack = 0
  8630                           ;putCharToTxBuf@byte stored from wreg
  8631   003E52  6E03               	movwf	putCharToTxBuf@byte^0,c
  8632   003E54                     
  8633                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8634   003E54  0E3B               	movlw	59
  8635   003E56  645A               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8636   003E58  EF30  F01F         	goto	u4071
  8637   003E5C  EF32  F01F         	goto	u4070
  8638   003E60                     u4071:
  8639   003E60  EF34  F01F         	goto	l3982
  8640   003E64                     u4070:
  8641   003E64  0E00               	movlw	0
  8642   003E66  6E5A               	movwf	_TxBufWriteCnt^0,c	;volatile
  8643   003E68                     l3982:
  8644                           
  8645                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8646   003E68  0E00               	movlw	low _EUSART4TXbuf
  8647   003E6A  245A               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8648   003E6C  6ED9               	movwf	fsr2l,c
  8649   003E6E  6ADA               	clrf	fsr2h,c
  8650   003E70  0E01               	movlw	high _EUSART4TXbuf
  8651   003E72  22DA               	addwfc	fsr2h,f,c
  8652   003E74  C003  FFDF         	movff	putCharToTxBuf@byte,indf2
  8653   003E78  2A5A               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8654   003E7A  0012               	return		;funcret
  8655   003E7C                     __end_of_putCharToTxBuf:
  8656                           	callstack 0
  8657                           
  8658 ;; *************** function _Interrupts_init *****************
  8659 ;; Defined at:
  8660 ;;		line 10 in file "interrupts.c"
  8661 ;; Parameters:    Size  Location     Type
  8662 ;;		None
  8663 ;; Auto vars:     Size  Location     Type
  8664 ;;		None
  8665 ;; Return value:  Size  Location     Type
  8666 ;;                  1    wreg      void 
  8667 ;; Registers used:
  8668 ;;		wreg, status,2, status,0, cstack
  8669 ;; Tracked objects:
  8670 ;;		On entry : 0/0
  8671 ;;		On exit  : 0/0
  8672 ;;		Unchanged: 0/0
  8673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;Total ram usage:        0 bytes
  8679 ;; Hardware stack levels used: 1
  8680 ;; Hardware stack levels required when called: 8
  8681 ;; This function calls:
  8682 ;;		_colour_interrupt_init
  8683 ;; This function is called by:
  8684 ;;		_main
  8685 ;; This function uses a non-reentrant model
  8686 ;;
  8687                           
  8688                           	psect	text42
  8689   003E7C                     __ptext42:
  8690                           	callstack 0
  8691   003E7C                     _Interrupts_init:
  8692                           	callstack 22
  8693   003E7C                     
  8694                           ;interrupts.c: 12:     TRISBbits.TRISB1 = 1;
  8695   003E7C  8282               	bsf	130,1,c	;volatile
  8696                           
  8697                           ;interrupts.c: 13:     ANSELBbits.ANSELB1 = 0;
  8698   003E7E  010E               	movlb	14	; () banked
  8699   003E80  939A               	bcf	154,1,b	;volatile
  8700   003E82                     
  8701                           ; BSR set to: 14
  8702                           ;interrupts.c: 14:     INT1PPS=0x09;
  8703   003E82  0E09               	movlw	9
  8704   003E84  010D               	movlb	13	; () banked
  8705   003E86  6FF1               	movwf	241,b	;volatile
  8706   003E88                     
  8707                           ; BSR set to: 13
  8708                           ;interrupts.c: 16:     PIE0bits.INT1IE = 1;
  8709   003E88  010E               	movlb	14	; () banked
  8710   003E8A  8329               	bsf	41,1,b	;volatile
  8711   003E8C                     
  8712                           ; BSR set to: 14
  8713                           ;interrupts.c: 17:     PIR0bits.INT1IF = 0;
  8714   003E8C  9333               	bcf	51,1,b	;volatile
  8715   003E8E                     
  8716                           ; BSR set to: 14
  8717                           ;interrupts.c: 18:     IPR0bits.INT1IP = 1;
  8718   003E8E  831F               	bsf	31,1,b	;volatile
  8719   003E90                     
  8720                           ; BSR set to: 14
  8721                           ;interrupts.c: 20:     INTCONbits.INT0EDG = 0;
  8722   003E90  90F2               	bcf	242,0,c	;volatile
  8723   003E92                     
  8724                           ; BSR set to: 14
  8725                           ;interrupts.c: 21:     colour_interrupt_init();
  8726   003E92  ECF2  F01C         	call	_colour_interrupt_init	;wreg free
  8727   003E96                     
  8728                           ;interrupts.c: 24:     INTCONbits.IPEN=1;
  8729   003E96  8AF2               	bsf	242,5,c	;volatile
  8730   003E98                     
  8731                           ;interrupts.c: 25:     PIE2bits.C1IE=1;
  8732   003E98  010E               	movlb	14	; () banked
  8733   003E9A  812B               	bsf	43,0,b	;volatile
  8734   003E9C                     
  8735                           ; BSR set to: 14
  8736                           ;interrupts.c: 26:     INTCONbits.PEIE=1;
  8737   003E9C  8CF2               	bsf	242,6,c	;volatile
  8738   003E9E                     
  8739                           ; BSR set to: 14
  8740                           ;interrupts.c: 27:     INTCONbits.GIE=1;
  8741   003E9E  8EF2               	bsf	242,7,c	;volatile
  8742   003EA0                     
  8743                           ; BSR set to: 14
  8744                           ;interrupts.c: 28:     PIE4bits.RC4IE=1;
  8745   003EA0  872D               	bsf	45,3,b	;volatile
  8746   003EA2                     
  8747                           ; BSR set to: 14
  8748   003EA2  0012               	return		;funcret
  8749   003EA4                     __end_of_Interrupts_init:
  8750                           	callstack 0
  8751                           
  8752 ;; *************** function _colour_interrupt_init *****************
  8753 ;; Defined at:
  8754 ;;		line 39 in file "interrupts.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;		None
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;		None
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, status,2, status,0, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;Total ram usage:        1 bytes
  8773 ;; Hardware stack levels used: 1
  8774 ;; Hardware stack levels required when called: 7
  8775 ;; This function calls:
  8776 ;;		_clear_int
  8777 ;;		_color_writetoaddr
  8778 ;; This function is called by:
  8779 ;;		_Interrupts_init
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	text43
  8784   0039E4                     __ptext43:
  8785                           	callstack 0
  8786   0039E4                     _colour_interrupt_init:
  8787                           	callstack 22
  8788   0039E4                     
  8789                           ;interrupts.c: 40:     clear_int();
  8790   0039E4  ECA5  F01F         	call	_clear_int	;wreg free
  8791                           
  8792                           ;interrupts.c: 41:     color_writetoaddr(0x00,0x13);
  8793   0039E8  0E13               	movlw	19
  8794   0039EA  6E05               	movwf	color_writetoaddr@value^0,c
  8795   0039EC  0E00               	movlw	0
  8796   0039EE  EC7A  F01F         	call	_color_writetoaddr
  8797   0039F2                     
  8798                           ;interrupts.c: 42:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8799   0039F2  0E3F               	movlw	63
  8800   0039F4  6E07               	movwf	??_colour_interrupt_init^0,c
  8801   0039F6  0E55               	movlw	85
  8802   0039F8                     u4357:
  8803   0039F8  2EE8               	decfsz	wreg,f,c
  8804   0039FA  D7FE               	bra	u4357
  8805   0039FC  2E07               	decfsz	??_colour_interrupt_init^0,f,c
  8806   0039FE  D7FC               	bra	u4357
  8807   003A00  F000               	nop	
  8808   003A02                     
  8809                           ;interrupts.c: 43:     color_writetoaddr(0x04,(low_threshold & 0x00FF));
  8810   003A02  0E00               	movlw	0
  8811   003A04  6E05               	movwf	color_writetoaddr@value^0,c
  8812   003A06  0E04               	movlw	4
  8813   003A08  EC7A  F01F         	call	_color_writetoaddr
  8814   003A0C                     
  8815                           ;interrupts.c: 44:     color_writetoaddr(0x05,(low_threshold >>8));
  8816   003A0C  0E00               	movlw	0
  8817   003A0E  6E05               	movwf	color_writetoaddr@value^0,c
  8818   003A10  0E05               	movlw	5
  8819   003A12  EC7A  F01F         	call	_color_writetoaddr
  8820   003A16  0EE8               	movlw	232
  8821   003A18  6E05               	movwf	color_writetoaddr@value^0,c
  8822   003A1A  0E06               	movlw	6
  8823   003A1C  EC7A  F01F         	call	_color_writetoaddr
  8824   003A20  0E03               	movlw	3
  8825   003A22  6E05               	movwf	color_writetoaddr@value^0,c
  8826   003A24  0E07               	movlw	7
  8827   003A26  EC7A  F01F         	call	_color_writetoaddr
  8828   003A2A                     
  8829                           ;interrupts.c: 47:     color_writetoaddr(0x0C, 0b0100);
  8830   003A2A  0E04               	movlw	4
  8831   003A2C  6E05               	movwf	color_writetoaddr@value^0,c
  8832   003A2E  0E0C               	movlw	12
  8833   003A30  EC7A  F01F         	call	_color_writetoaddr
  8834   003A34  0012               	return		;funcret
  8835   003A36                     __end_of_colour_interrupt_init:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function _color_writetoaddr *****************
  8839 ;; Defined at:
  8840 ;;		line 23 in file "color.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  address         1    wreg     unsigned char 
  8843 ;;  value           1    4[COMRAM] unsigned char 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  address         1    5[COMRAM] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;                  1    wreg      void 
  8848 ;; Registers used:
  8849 ;;		wreg, status,2, status,0, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;Total ram usage:        2 bytes
  8860 ;; Hardware stack levels used: 1
  8861 ;; Hardware stack levels required when called: 6
  8862 ;; This function calls:
  8863 ;;		_I2C_2_Master_Start
  8864 ;;		_I2C_2_Master_Stop
  8865 ;;		_I2C_2_Master_Write
  8866 ;; This function is called by:
  8867 ;;		_color_click_init
  8868 ;;		_colour_interrupt_init
  8869 ;;		_main
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text44
  8874   003EF4                     __ptext44:
  8875                           	callstack 0
  8876   003EF4                     _color_writetoaddr:
  8877                           	callstack 24
  8878                           
  8879                           ;incstack = 0
  8880                           ;color_writetoaddr@address stored from wreg
  8881   003EF4  6E06               	movwf	color_writetoaddr@address^0,c
  8882   003EF6                     
  8883                           ;color.c: 24:     I2C_2_Master_Start();
  8884   003EF6  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  8885                           
  8886                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  8887   003EFA  0E52               	movlw	82
  8888   003EFC  ECBB  F01F         	call	_I2C_2_Master_Write
  8889                           
  8890                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  8891   003F00  5006               	movf	color_writetoaddr@address^0,w,c
  8892   003F02  0980               	iorlw	128
  8893   003F04  ECBB  F01F         	call	_I2C_2_Master_Write
  8894                           
  8895                           ;color.c: 27:     I2C_2_Master_Write(value);
  8896   003F08  5005               	movf	color_writetoaddr@value^0,w,c
  8897   003F0A  ECBB  F01F         	call	_I2C_2_Master_Write
  8898                           
  8899                           ;color.c: 28:     I2C_2_Master_Stop();
  8900   003F0E  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8901   003F12  0012               	return		;funcret
  8902   003F14                     __end_of_color_writetoaddr:
  8903                           	callstack 0
  8904                           
  8905 ;; *************** function _clear_int *****************
  8906 ;; Defined at:
  8907 ;;		line 32 in file "interrupts.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, status,0, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used: 1
  8927 ;; Hardware stack levels required when called: 6
  8928 ;; This function calls:
  8929 ;;		_I2C_2_Master_Start
  8930 ;;		_I2C_2_Master_Stop
  8931 ;;		_I2C_2_Master_Write
  8932 ;; This function is called by:
  8933 ;;		_colour_interrupt_init
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text45
  8938   003F4A                     __ptext45:
  8939                           	callstack 0
  8940   003F4A                     _clear_int:
  8941                           	callstack 22
  8942   003F4A                     
  8943                           ;interrupts.c: 33:     I2C_2_Master_Start();
  8944   003F4A  ECD1  F01F         	call	_I2C_2_Master_Start	;wreg free
  8945                           
  8946                           ;interrupts.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  8947   003F4E  0E52               	movlw	82
  8948   003F50  ECBB  F01F         	call	_I2C_2_Master_Write
  8949                           
  8950                           ;interrupts.c: 35:     I2C_2_Master_Write(0b11100110);
  8951   003F54  0EE6               	movlw	230
  8952   003F56  ECBB  F01F         	call	_I2C_2_Master_Write
  8953                           
  8954                           ;interrupts.c: 36:     I2C_2_Master_Stop();
  8955   003F5A  ECCC  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8956   003F5E  0012               	return		;funcret
  8957   003F60                     __end_of_clear_int:
  8958                           	callstack 0
  8959                           
  8960 ;; *************** function _I2C_2_Master_Write *****************
  8961 ;; Defined at:
  8962 ;;		line 45 in file "i2c.c"
  8963 ;; Parameters:    Size  Location     Type
  8964 ;;  data_byte       1    wreg     unsigned char 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  data_byte       1    3[COMRAM] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8980 ;;Total ram usage:        1 bytes
  8981 ;; Hardware stack levels used: 1
  8982 ;; Hardware stack levels required when called: 5
  8983 ;; This function calls:
  8984 ;;		_I2C_2_Master_Idle
  8985 ;; This function is called by:
  8986 ;;		_color_writetoaddr
  8987 ;;		_color_read_lum
  8988 ;;		_color_read_Red
  8989 ;;		_color_read_Green
  8990 ;;		_color_read_Blue
  8991 ;;		_clear_int
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text46
  8996   003F76                     __ptext46:
  8997                           	callstack 0
  8998   003F76                     _I2C_2_Master_Write:
  8999                           	callstack 23
  9000                           
  9001                           ;incstack = 0
  9002                           ;I2C_2_Master_Write@data_byte stored from wreg
  9003   003F76  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  9004   003F78                     
  9005                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9006   003F78  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  9007   003F7C                     
  9008                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9009   003F7C  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9010   003F80  0012               	return		;funcret
  9011   003F82                     __end_of_I2C_2_Master_Write:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _I2C_2_Master_Stop *****************
  9015 ;; Defined at:
  9016 ;;		line 39 in file "i2c.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      void 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;Total ram usage:        0 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 5
  9037 ;; This function calls:
  9038 ;;		_I2C_2_Master_Idle
  9039 ;; This function is called by:
  9040 ;;		_color_writetoaddr
  9041 ;;		_color_read_lum
  9042 ;;		_color_read_Red
  9043 ;;		_color_read_Green
  9044 ;;		_color_read_Blue
  9045 ;;		_clear_int
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text47
  9050   003F98                     __ptext47:
  9051                           	callstack 0
  9052   003F98                     _I2C_2_Master_Stop:
  9053                           	callstack 23
  9054   003F98                     
  9055                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9056   003F98  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  9057   003F9C                     
  9058                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9059   003F9C  010E               	movlb	14	; () banked
  9060   003F9E  85DA               	bsf	218,2,b	;volatile
  9061   003FA0                     
  9062                           ; BSR set to: 14
  9063   003FA0  0012               	return		;funcret
  9064   003FA2                     __end_of_I2C_2_Master_Stop:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function _I2C_2_Master_Start *****************
  9068 ;; Defined at:
  9069 ;;		line 27 in file "i2c.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; Hardware stack levels required when called: 5
  9090 ;; This function calls:
  9091 ;;		_I2C_2_Master_Idle
  9092 ;; This function is called by:
  9093 ;;		_color_writetoaddr
  9094 ;;		_color_read_lum
  9095 ;;		_color_read_Red
  9096 ;;		_color_read_Green
  9097 ;;		_color_read_Blue
  9098 ;;		_clear_int
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text48
  9103   003FA2                     __ptext48:
  9104                           	callstack 0
  9105   003FA2                     _I2C_2_Master_Start:
  9106                           	callstack 23
  9107   003FA2                     
  9108                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9109   003FA2  EC52  F01F         	call	_I2C_2_Master_Idle	;wreg free
  9110   003FA6                     
  9111                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9112   003FA6  010E               	movlb	14	; () banked
  9113   003FA8  81DA               	bsf	218,0,b	;volatile
  9114   003FAA                     
  9115                           ; BSR set to: 14
  9116   003FAA  0012               	return		;funcret
  9117   003FAC                     __end_of_I2C_2_Master_Start:
  9118                           	callstack 0
  9119                           
  9120 ;; *************** function _I2C_2_Master_Idle *****************
  9121 ;; Defined at:
  9122 ;;		line 22 in file "i2c.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;		None
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;		None
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9140 ;;Total ram usage:        1 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 4
  9143 ;; This function calls:
  9144 ;;		Nothing
  9145 ;; This function is called by:
  9146 ;;		_I2C_2_Master_Start
  9147 ;;		_I2C_2_Master_RepStart
  9148 ;;		_I2C_2_Master_Stop
  9149 ;;		_I2C_2_Master_Write
  9150 ;;		_I2C_2_Master_Read
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text49
  9155   003EA4                     __ptext49:
  9156                           	callstack 0
  9157   003EA4                     _I2C_2_Master_Idle:
  9158                           	callstack 23
  9159   003EA4                     l76:
  9160   003EA4  010E               	movlb	14	; () banked
  9161   003EA6  B5D8               	btfsc	216,2,b	;volatile
  9162   003EA8  EF58  F01F         	goto	u2611
  9163   003EAC  EF5A  F01F         	goto	u2610
  9164   003EB0                     u2611:
  9165   003EB0  EF52  F01F         	goto	l76
  9166   003EB4                     u2610:
  9167   003EB4                     
  9168                           ; BSR set to: 14
  9169   003EB4  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9170   003EB8  0E1F               	movlw	31
  9171   003EBA  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  9172   003EBC  A4D8               	btfss	status,2,c
  9173   003EBE  EF63  F01F         	goto	u2621
  9174   003EC2  EF65  F01F         	goto	u2620
  9175   003EC6                     u2621:
  9176   003EC6  EF52  F01F         	goto	l76
  9177   003ECA                     u2620:
  9178   003ECA                     
  9179                           ; BSR set to: 14
  9180   003ECA  0012               	return		;funcret
  9181   003ECC                     __end_of_I2C_2_Master_Idle:
  9182                           	callstack 0
  9183                           
  9184 ;; *************** function _HighISR *****************
  9185 ;; Defined at:
  9186 ;;		line 56 in file "interrupts.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;		None
  9189 ;; Auto vars:     Size  Location     Type
  9190 ;;		None
  9191 ;; Return value:  Size  Location     Type
  9192 ;;                  1    wreg      void 
  9193 ;; Registers used:
  9194 ;;		wreg, status,2, status,0, cstack
  9195 ;; Tracked objects:
  9196 ;;		On entry : 0/0
  9197 ;;		On exit  : 0/0
  9198 ;;		Unchanged: 0/0
  9199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;Total ram usage:        0 bytes
  9205 ;; Hardware stack levels used: 1
  9206 ;; Hardware stack levels required when called: 3
  9207 ;; This function calls:
  9208 ;;		i2_clear_int
  9209 ;; This function is called by:
  9210 ;;		Interrupt level 2
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	intcode
  9215   000008                     __pintcode:
  9216                           	callstack 0
  9217   000008                     _HighISR:
  9218                           	callstack 19
  9219                           
  9220                           ; BSR set to: 14
  9221                           ;incstack = 0
  9222   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9223   00000A                     
  9224                           ;interrupts.c: 69:     if (PIR0bits.INT1IF){
  9225   00000A  010E               	movlb	14	; () banked
  9226   00000C  A333               	btfss	51,1,b	;volatile
  9227   00000E  EF0B  F000         	goto	i2u428_41
  9228   000012  EF0D  F000         	goto	i2u428_40
  9229   000016                     i2u428_41:
  9230   000016  EF12  F000         	goto	i2l251
  9231   00001A                     i2u428_40:
  9232   00001A                     
  9233                           ; BSR set to: 14
  9234                           ;interrupts.c: 70:         clear_int();
  9235   00001A  ECB0  F01F         	call	i2_clear_int	;wreg free
  9236   00001E                     
  9237                           ;interrupts.c: 71:         LATDbits.LATD7=1;
  9238   00001E  8E7C               	bsf	124,7,c	;volatile
  9239   000020                     
  9240                           ;interrupts.c: 72:         PIR0bits.INT1IF = 0;
  9241   000020  010E               	movlb	14	; () banked
  9242   000022  9333               	bcf	51,1,b	;volatile
  9243   000024                     i2l251:
  9244                           
  9245                           ; BSR set to: 14
  9246   000024  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9247   000026  0011               	retfie		f
  9248   000028                     __end_of_HighISR:
  9249                           	callstack 0
  9250                           
  9251 ;; *************** function i2_clear_int *****************
  9252 ;; Defined at:
  9253 ;;		line 32 in file "interrupts.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9271 ;;Total ram usage:        0 bytes
  9272 ;; Hardware stack levels used: 1
  9273 ;; Hardware stack levels required when called: 2
  9274 ;; This function calls:
  9275 ;;		i2_I2C_2_Master_Start
  9276 ;;		i2_I2C_2_Master_Stop
  9277 ;;		i2_I2C_2_Master_Write
  9278 ;; This function is called by:
  9279 ;;		_HighISR
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text51
  9284   003F60                     __ptext51:
  9285                           	callstack 0
  9286   003F60                     i2_clear_int:
  9287                           	callstack 19
  9288   003F60                     
  9289                           ;interrupts.c: 33:     I2C_2_Master_Start();
  9290   003F60  ECDB  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9291                           
  9292                           ;interrupts.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  9293   003F64  0E52               	movlw	82
  9294   003F66  ECC1  F01F         	call	i2_I2C_2_Master_Write
  9295                           
  9296                           ;interrupts.c: 35:     I2C_2_Master_Write(0b11100110);
  9297   003F6A  0EE6               	movlw	230
  9298   003F6C  ECC1  F01F         	call	i2_I2C_2_Master_Write
  9299                           
  9300                           ;interrupts.c: 36:     I2C_2_Master_Stop();
  9301   003F70  ECD6  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9302   003F74  0012               	return		;funcret
  9303   003F76                     __end_ofi2_clear_int:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function i2_I2C_2_Master_Write *****************
  9307 ;; Defined at:
  9308 ;;		line 45 in file "i2c.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  data_byte       1    wreg     unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  data_byte       1    1[COMRAM] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;Total ram usage:        1 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; Hardware stack levels required when called: 1
  9329 ;; This function calls:
  9330 ;;		i2_I2C_2_Master_Idle
  9331 ;; This function is called by:
  9332 ;;		i2_clear_int
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text52
  9337   003F82                     __ptext52:
  9338                           	callstack 0
  9339   003F82                     i2_I2C_2_Master_Write:
  9340                           	callstack 19
  9341                           
  9342                           ;incstack = 0
  9343                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9344   003F82  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9345   003F84                     
  9346                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9347   003F84  EC66  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9348   003F88                     
  9349                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9350   003F88  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9351   003F8C  0012               	return		;funcret
  9352   003F8E                     __end_ofi2_I2C_2_Master_Write:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function i2_I2C_2_Master_Stop *****************
  9356 ;; Defined at:
  9357 ;;		line 39 in file "i2c.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0, cstack
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;Total ram usage:        0 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; Hardware stack levels required when called: 1
  9378 ;; This function calls:
  9379 ;;		i2_I2C_2_Master_Idle
  9380 ;; This function is called by:
  9381 ;;		i2_clear_int
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           	psect	text53
  9386   003FAC                     __ptext53:
  9387                           	callstack 0
  9388   003FAC                     i2_I2C_2_Master_Stop:
  9389                           	callstack 19
  9390   003FAC                     
  9391                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9392   003FAC  EC66  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9393   003FB0                     
  9394                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9395   003FB0  010E               	movlb	14	; () banked
  9396   003FB2  85DA               	bsf	218,2,b	;volatile
  9397   003FB4                     
  9398                           ; BSR set to: 14
  9399   003FB4  0012               	return		;funcret
  9400   003FB6                     __end_ofi2_I2C_2_Master_Stop:
  9401                           	callstack 0
  9402                           
  9403 ;; *************** function i2_I2C_2_Master_Start *****************
  9404 ;; Defined at:
  9405 ;;		line 27 in file "i2c.c"
  9406 ;; Parameters:    Size  Location     Type
  9407 ;;		None
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      void 
  9412 ;; Registers used:
  9413 ;;		wreg, status,2, status,0, cstack
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9423 ;;Total ram usage:        0 bytes
  9424 ;; Hardware stack levels used: 1
  9425 ;; Hardware stack levels required when called: 1
  9426 ;; This function calls:
  9427 ;;		i2_I2C_2_Master_Idle
  9428 ;; This function is called by:
  9429 ;;		i2_clear_int
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text54
  9434   003FB6                     __ptext54:
  9435                           	callstack 0
  9436   003FB6                     i2_I2C_2_Master_Start:
  9437                           	callstack 19
  9438   003FB6                     
  9439                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9440   003FB6  EC66  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9441   003FBA                     
  9442                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9443   003FBA  010E               	movlb	14	; () banked
  9444   003FBC  81DA               	bsf	218,0,b	;volatile
  9445   003FBE                     
  9446                           ; BSR set to: 14
  9447   003FBE  0012               	return		;funcret
  9448   003FC0                     __end_ofi2_I2C_2_Master_Start:
  9449                           	callstack 0
  9450                           
  9451 ;; *************** function i2_I2C_2_Master_Idle *****************
  9452 ;; Defined at:
  9453 ;;		line 22 in file "i2c.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		wreg, status,2, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;Total ram usage:        1 bytes
  9472 ;; Hardware stack levels used: 1
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		i2_I2C_2_Master_Start
  9477 ;;		i2_I2C_2_Master_Stop
  9478 ;;		i2_I2C_2_Master_Write
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           	psect	text55
  9483   003ECC                     __ptext55:
  9484                           	callstack 0
  9485   003ECC                     i2_I2C_2_Master_Idle:
  9486                           	callstack 19
  9487   003ECC                     i2l76:
  9488   003ECC  010E               	movlb	14	; () banked
  9489   003ECE  B5D8               	btfsc	216,2,b	;volatile
  9490   003ED0  EF6C  F01F         	goto	i2u405_41
  9491   003ED4  EF6E  F01F         	goto	i2u405_40
  9492   003ED8                     i2u405_41:
  9493   003ED8  EF66  F01F         	goto	i2l76
  9494   003EDC                     i2u405_40:
  9495   003EDC                     
  9496                           ; BSR set to: 14
  9497   003EDC  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9498   003EE0  0E1F               	movlw	31
  9499   003EE2  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9500   003EE4  A4D8               	btfss	status,2,c
  9501   003EE6  EF77  F01F         	goto	i2u406_41
  9502   003EEA  EF79  F01F         	goto	i2u406_40
  9503   003EEE                     i2u406_41:
  9504   003EEE  EF66  F01F         	goto	i2l76
  9505   003EF2                     i2u406_40:
  9506   003EF2                     
  9507                           ; BSR set to: 14
  9508   003EF2  0012               	return		;funcret
  9509   003EF4                     __end_ofi2_I2C_2_Master_Idle:
  9510                           	callstack 0
  9511                           
  9512                           	psect	rparam
  9513   000000                     
  9514                           	psect	temp
  9515   00005D                     btemp:
  9516                           	callstack 0
  9517   00005D                     	ds	1
  9518   000000                     int$flags	set	btemp
  9519   000000                     wtemp8	set	btemp+1
  9520   000000                     ttemp5	set	btemp+1
  9521   000000                     ttemp6	set	btemp+4
  9522   000000                     ttemp7	set	btemp+8
  9523                           
  9524                           	psect	idloc
  9525                           
  9526                           ;Config register IDLOC0 @ 0x200000
  9527                           ;	unspecified, using default values
  9528   200000                     	org	2097152
  9529   200000  0FFF               	dw	4095
  9530                           
  9531                           ;Config register IDLOC1 @ 0x200002
  9532                           ;	unspecified, using default values
  9533   200002                     	org	2097154
  9534   200002  0FFF               	dw	4095
  9535                           
  9536                           ;Config register IDLOC2 @ 0x200004
  9537                           ;	unspecified, using default values
  9538   200004                     	org	2097156
  9539   200004  0FFF               	dw	4095
  9540                           
  9541                           ;Config register IDLOC3 @ 0x200006
  9542                           ;	unspecified, using default values
  9543   200006                     	org	2097158
  9544   200006  0FFF               	dw	4095
  9545                           
  9546                           ;Config register IDLOC4 @ 0x200008
  9547                           ;	unspecified, using default values
  9548   200008                     	org	2097160
  9549   200008  0FFF               	dw	4095
  9550                           
  9551                           ;Config register IDLOC5 @ 0x20000A
  9552                           ;	unspecified, using default values
  9553   20000A                     	org	2097162
  9554   20000A  0FFF               	dw	4095
  9555                           
  9556                           ;Config register IDLOC6 @ 0x20000C
  9557                           ;	unspecified, using default values
  9558   20000C                     	org	2097164
  9559   20000C  0FFF               	dw	4095
  9560                           
  9561                           ;Config register IDLOC7 @ 0x20000E
  9562                           ;	unspecified, using default values
  9563   20000E                     	org	2097166
  9564   20000E  0FFF               	dw	4095
  9565                           
  9566                           	psect	config
  9567                           
  9568                           ;Config register CONFIG1L @ 0x300000
  9569                           ;	External Oscillator mode Selection bits
  9570                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9571                           ;	Power-up default value for COSC bits
  9572                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9573   300000                     	org	3145728
  9574   300000  AA                 	db	170
  9575                           
  9576                           ;Config register CONFIG1H @ 0x300001
  9577                           ;	unspecified, using default values
  9578                           ;	Clock Out Enable bit
  9579                           ;	CLKOUTEN = 0x1, unprogrammed default
  9580                           ;	Clock Switch Enable bit
  9581                           ;	CSWEN = 0x1, unprogrammed default
  9582                           ;	Fail-Safe Clock Monitor Enable bit
  9583                           ;	FCMEN = 0x1, unprogrammed default
  9584   300001                     	org	3145729
  9585   300001  FF                 	db	255
  9586                           
  9587                           ;Config register CONFIG2L @ 0x300002
  9588                           ;	unspecified, using default values
  9589                           ;	Master Clear Enable bit
  9590                           ;	MCLRE = 0x1, unprogrammed default
  9591                           ;	Power-up Timer Enable bit
  9592                           ;	PWRTE = 0x1, unprogrammed default
  9593                           ;	Low-power BOR enable bit
  9594                           ;	LPBOREN = 0x1, unprogrammed default
  9595                           ;	Brown-out Reset Enable bits
  9596                           ;	BOREN = 0x3, unprogrammed default
  9597   300002                     	org	3145730
  9598   300002  FF                 	db	255
  9599                           
  9600                           ;Config register CONFIG2H @ 0x300003
  9601                           ;	unspecified, using default values
  9602                           ;	Brown Out Reset Voltage selection bits
  9603                           ;	BORV = 0x3, unprogrammed default
  9604                           ;	ZCD Disable bit
  9605                           ;	ZCD = 0x1, unprogrammed default
  9606                           ;	PPSLOCK bit One-Way Set Enable bit
  9607                           ;	PPS1WAY = 0x1, unprogrammed default
  9608                           ;	Stack Full/Underflow Reset Enable bit
  9609                           ;	STVREN = 0x1, unprogrammed default
  9610                           ;	Debugger Enable bit
  9611                           ;	DEBUG = 0x1, unprogrammed default
  9612                           ;	Extended Instruction Set Enable bit
  9613                           ;	XINST = 0x1, unprogrammed default
  9614   300003                     	org	3145731
  9615   300003  FF                 	db	255
  9616                           
  9617                           ;Config register CONFIG3L @ 0x300004
  9618                           ;	WDT Period Select bits
  9619                           ;	WDTCPS = 0x1F, unprogrammed default
  9620                           ;	WDT operating mode
  9621                           ;	WDTE = OFF, WDT Disabled
  9622   300004                     	org	3145732
  9623   300004  9F                 	db	159
  9624                           
  9625                           ;Config register CONFIG3H @ 0x300005
  9626                           ;	unspecified, using default values
  9627                           ;	WDT Window Select bits
  9628                           ;	WDTCWS = 0x7, unprogrammed default
  9629                           ;	WDT input clock selector
  9630                           ;	WDTCCS = 0x7, unprogrammed default
  9631   300005                     	org	3145733
  9632   300005  FF                 	db	255
  9633                           
  9634                           ;Config register CONFIG4L @ 0x300006
  9635                           ;	unspecified, using default values
  9636                           ;	Write Protection Block 0
  9637                           ;	WRT0 = 0x1, unprogrammed default
  9638                           ;	Write Protection Block 1
  9639                           ;	WRT1 = 0x1, unprogrammed default
  9640                           ;	Write Protection Block 2
  9641                           ;	WRT2 = 0x1, unprogrammed default
  9642                           ;	Write Protection Block 3
  9643                           ;	WRT3 = 0x1, unprogrammed default
  9644                           ;	Write Protection Block 3
  9645                           ;	WRT4 = 0x1, unprogrammed default
  9646                           ;	Write Protection Block 3
  9647                           ;	WRT5 = 0x1, unprogrammed default
  9648                           ;	Write Protection Block 3
  9649                           ;	WRT6 = 0x1, unprogrammed default
  9650                           ;	Write Protection Block 3
  9651                           ;	WRT7 = 0x1, unprogrammed default
  9652   300006                     	org	3145734
  9653   300006  FF                 	db	255
  9654                           
  9655                           ;Config register CONFIG4H @ 0x300007
  9656                           ;	unspecified, using default values
  9657                           ;	Configuration Register Write Protection bit
  9658                           ;	WRTC = 0x1, unprogrammed default
  9659                           ;	Boot Block Write Protection bit
  9660                           ;	WRTB = 0x1, unprogrammed default
  9661                           ;	Data EEPROM Write Protection bit
  9662                           ;	WRTD = 0x1, unprogrammed default
  9663                           ;	Scanner Enable bit
  9664                           ;	SCANE = 0x1, unprogrammed default
  9665                           ;	Low Voltage Programming Enable bit
  9666                           ;	LVP = 0x1, unprogrammed default
  9667   300007                     	org	3145735
  9668   300007  FF                 	db	255
  9669                           
  9670                           ;Config register CONFIG5L @ 0x300008
  9671                           ;	unspecified, using default values
  9672                           ;	UserNVM Program Memory Code Protection bit
  9673                           ;	CP = 0x1, unprogrammed default
  9674                           ;	DataNVM Memory Code Protection bit
  9675                           ;	CPD = 0x1, unprogrammed default
  9676   300008                     	org	3145736
  9677   300008  FF                 	db	255
  9678                           
  9679                           ;Config register CONFIG5H @ 0x300009
  9680                           ;	unspecified, using default values
  9681   300009                     	org	3145737
  9682   300009  FF                 	db	255
  9683                           
  9684                           ;Config register CONFIG6L @ 0x30000A
  9685                           ;	unspecified, using default values
  9686                           ;	Table Read Protection Block 0
  9687                           ;	EBTR0 = 0x1, unprogrammed default
  9688                           ;	Table Read Protection Block 1
  9689                           ;	EBTR1 = 0x1, unprogrammed default
  9690                           ;	Table Read Protection Block 2
  9691                           ;	EBTR2 = 0x1, unprogrammed default
  9692                           ;	Table Read Protection Block 3
  9693                           ;	EBTR3 = 0x1, unprogrammed default
  9694                           ;	Table Read Protection Block 4
  9695                           ;	EBTR4 = 0x1, unprogrammed default
  9696                           ;	Table Read Protection Block 5
  9697                           ;	EBTR5 = 0x1, unprogrammed default
  9698                           ;	Table Read Protection Block 6
  9699                           ;	EBTR6 = 0x1, unprogrammed default
  9700                           ;	Table Read Protection Block 7
  9701                           ;	EBTR7 = 0x1, unprogrammed default
  9702   30000A                     	org	3145738
  9703   30000A  FF                 	db	255
  9704                           
  9705                           ;Config register CONFIG6H @ 0x30000B
  9706                           ;	unspecified, using default values
  9707                           ;	Boot Block Table Read Protection bit
  9708                           ;	EBTRB = 0x1, unprogrammed default
  9709   30000B                     	org	3145739
  9710   30000B  FF                 	db	255
  9711                           tosu	equ	0xFFF
  9712                           tosh	equ	0xFFE
  9713                           tosl	equ	0xFFD
  9714                           stkptr	equ	0xFFC
  9715                           pclatu	equ	0xFFB
  9716                           pclath	equ	0xFFA
  9717                           pcl	equ	0xFF9
  9718                           tblptru	equ	0xFF8
  9719                           tblptrh	equ	0xFF7
  9720                           tblptrl	equ	0xFF6
  9721                           tablat	equ	0xFF5
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           indf0	equ	0xFEF
  9725                           postinc0	equ	0xFEE
  9726                           postdec0	equ	0xFED
  9727                           preinc0	equ	0xFEC
  9728                           plusw0	equ	0xFEB
  9729                           fsr0h	equ	0xFEA
  9730                           fsr0l	equ	0xFE9
  9731                           wreg	equ	0xFE8
  9732                           indf1	equ	0xFE7
  9733                           postinc1	equ	0xFE6
  9734                           postdec1	equ	0xFE5
  9735                           preinc1	equ	0xFE4
  9736                           plusw1	equ	0xFE3
  9737                           fsr1h	equ	0xFE2
  9738                           fsr1l	equ	0xFE1
  9739                           bsr	equ	0xFE0
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           postdec2	equ	0xFDD
  9743                           preinc2	equ	0xFDC
  9744                           plusw2	equ	0xFDB
  9745                           fsr2h	equ	0xFDA
  9746                           fsr2l	equ	0xFD9
  9747                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        3
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      92
    BANK0           160    133     156
    BANK1           256      0     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1639$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1555$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1555$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 16
		 -> rel(BANK1[16]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _TxBufferedString->_putCharToTxBuf
    _Interrupts_init->_colour_interrupt_init
    _colour_interrupt_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _clear_int->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    i2_clear_int->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   33037
                                             81 BANK0     52    52      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                  _color_writetoaddr
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   26275
                                             50 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   25920
                                             83 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   25567
                                             64 COMRAM    19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19721
                                             47 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             27 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             27 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    3423
                                             27 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     518
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     826
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              3 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     848
              _colour_interrupt_init
 ---------------------------------------------------------------------------------
 (2) _colour_interrupt_init                                1     1      0     848
                                              6 COMRAM     1     1      0
                          _clear_int
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _color_writetoaddr                                    2     1      1     826
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _clear_int                                            0     0      0      22
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0      22
                        i2_clear_int
 ---------------------------------------------------------------------------------
 (10) i2_clear_int                                         0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
     _colour_interrupt_init
       _clear_int
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_writetoaddr
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_writetoaddr
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   i2_clear_int
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B0       7       68.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9C       5       97.5%
BITBIGSFRhlhlll     8F      0       0      39        0.0%
BITBIGSFRhhlh       6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5C       1       97.9%
BITBIGSFRllh        2D      0       0      42        0.0%
BITBIGSFRlllhll     2A      0       0      46        0.0%
BITBIGSFRlllhhl     29      0       0      44        0.0%
BITBIGSFRlllllh     23      0       0      54        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      43        0.0%
BITBIGSFRlllhlh      C      0       0      45        0.0%
BITBIGSFRlllhll      9      0       0      51        0.0%
BITBIGSFRhllll       8      0       0      40        0.0%
BITBIGSFRllllh       6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      48        0.0%
BITBIGSFRlllhll      3      0       0      47        0.0%
BITBIGSFRhlhllh      2      0       0      38        0.0%
BITBIGSFRllllll      2      0       0      55        0.0%
BITBIGSFRhlhlhh      1      0       0      36        0.0%
BITBIGSFRhlhlhl      1      0       0      37        0.0%
BITBIGSFRlllhll      1      0       0      49        0.0%
BITBIGSFRlllhll      1      0       0      50        0.0%
BITBIGSFRhlhh        1      0       0      35        0.0%
BITBIGSFRlllhll      1      0       0      52        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlh          1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A8      56        0.0%
DATA                 0      0     1A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 11:31:22 2023

               _color_read_Red 3AD6                   ___fldiv@aexp 001B                   ___fldiv@bexp 001A  
               _color_read_lum 3A86                   ___fldiv@sign 0013                _color_read_Blue 3B76  
                           l21 3DCC                             l30 3B24                             l24 3F12  
                           l33 3B74                             l42 2F7C                             l27 3AD4  
                           l36 3BC4                             l39 393C                             l73 3E50  
                           l82 3FAA                             l91 3F80                             l76 3EA4  
                           l85 3F96                             l94 3D20                             l79 3ECA  
                           l88 3FA0               _color_read_Green 3B26                readColours@vals 000E  
            ??_Interrupts_init 0008                            l133 3F30                            l242 3F5E  
                          l170 3E7A                            l245 3A34                            l173 3F48  
                          l239 3EA2                            l184 3E26                            l179 3DFC  
                          l443 3104                            l603 3D98                            l456 3268  
                          l626 3488                            l911 24AA                            l913 230A  
                          l922 2350                            l594 3546                            l924 23C8  
                          l916 22CE                            l588 37FE                            l925 23B6  
                          l950 1FA2                            l599 358C                            l943 1DAC  
                          l960 20D2                            l952 201A                            l953 2008  
                          l857 1A16                            l874 1B30                            l866 1CE6  
                          l858 1A04                            l947 2110                            l883 1C00  
                          l859 19CA                            l884 1BEE                            l991 2D2E  
                          l984 2C96                            l987 2DF2                            l899 3C56  
                          l998 2D8A                            _abs 3D22                            _pad 3800  
                          _rel 01A0                            wreg 000FE8                   ___flmul@aexp 0014  
                 ___flmul@bexp 0015                   ___flmul@sign 000F                   ___flmul@temp 001A  
                 ___flmul@prod 0016                   ___fltol@exp1 000C                           l1007 39E2  
                         l1121 27B0                           l1210 3FC4                           l1050 2844  
                         l1106 1608                           l1043 3878                           l1051 288A  
                         ?_abs 0015                           l1062 2A2C                           l1207 3CDE  
                         l1039 3822                           l1143 3990                           l3000 3CA8  
                         l1048 283C                           l1216 3C9A                           l1161 3D60  
                         l1153 368A                           l1073 1826                           l3010 2F7E  
                         l3002 3CBA                           l1170 2B82                           l3100 214E  
                         l3020 2FC2                           l3012 2F82                           l3004 3CBE  
                         l1076 11BE                           l1181 38DE                           l3006 3EA4  
                         l3110 217E                           l3102 215E                           l3030 3018  
                         l3022 2FE2                           l3014 2F90                           l1158 3D58  
                         l1078 1004                           l1167 2C3E                           l3008 3EB4  
                         l4000 3A20                           l3200 23F2                           l3120 21B4  
                         l3112 2184                           l3104 2160                           l3040 309A  
                         l3032 302C                           l3024 2FE6                           l3016 2FB0  
                         l4002 3A2A                           l3210 246A                           l3202 241C  
                         l3130 21F4                           l3122 21C4                           l3114 2192  
                         l3106 2168                           l4010 2CA6                           l3050 30E4  
                         l3042 309C                           l3034 303A                           l3026 2FF2  
                         l3018 2FB4                           l1178 38CE                           l1187 3A84  
                         l4100 3DD2                           l3220 24A0                           l3212 2486  
                         l3204 2420                           l3132 2204                           l3140 2224  
                         l3124 21C6                           l3116 2194                           l3108 2178  
                         l4020 2CE4                           l4012 2CBC                           l4004 2C42  
                         l3044 30AE                           l3036 304C                           l3028 3010  
                         l3060 3138                           l3300 1EE0                           l4102 3DE0  
                         l3214 248A                           l3206 243A                           l3150 2262  
                         l3142 2234                           l3134 220C                           l3118 21A4  
                         l3126 21CE                           l4030 2D6C                           l4022 2D16  
                         l4006 2C52                           l4110 3E16                           l3038 307A  
                         l3046 30B4                           l3070 3190                           l3062 313C  
                         l3054 3106                           l3310 1F88                           l3302 1EFC  
                         l3230 1CF4                           l1199 3754                           l4120 3E8C  
                         l4104 3DE4                           l3216 2498                           l3208 2450  
                         l3160 22AA                           l3152 2272                           l3144 2234  
                         l3136 2210                           l3128 21DE                           l4040 2DC2  
                         l4032 2D7A                           l4024 2D18                           l4016 2CD0  
                         l4008 2C60                           l4112 3E20                           l3048 30C4  
                         l3080 3212                           l3072 31A4                           l3064 314A  
                         l3056 310A                           l3320 1FC4                           l3312 1F92  
                         l3304 1F26                           l3240 1D34                           l3232 1D02  
                         l4130 3E98                           l4122 3E8E                           l4114 3E7C  
                         l3218 249E                           l3170 22F8                           l3162 22BE  
                         l3154 2282                           l3090 2112                           l4042 2DD2  
                         l4034 2D98                           l4026 2D24                           l4018 2CD8  
                         l4106 3DFE                           l3074 31B2                           l3082 3218  
                         l3066 316A                           l3058 3118                           l3330 2036  
                         l3322 1FD2                           l3314 1FA0                           l3306 1F5C  
                         l3250 1D64                           l3242 1D3A                           l3234 1D04  
                         l3402 3D62                           l3410 3384                           l4050 393E  
                         l4132 3E9C                           l4124 3E90                           l4116 3E82  
                         l3180 2340                           l3172 2308                           l3164 22CC  
                         l3156 2292                           l3148 2248                           l3092 211E  
                         l4044 2DE0                           l4036 2D9A                           l4028 2D60  
                         l4108 3E12                           l3084 3228                           l3076 31E0  
                         l3068 3188                           l3340 20A0                           l3332 2044  
                         l3324 2000                           l3316 1FB2                           l3308 1F6A  
                         l3260 1D9C                           l3252 1D66                           l3244 1D4A  
                         l3236 1D14                           l3228 1CE8                           l3404 3D78  
                         l3420 33DA                           l3412 339A                           l3500 3898  
                         l4052 394A                           l4140 39A4                           l4134 3E9E  
                         l4126 3E92                           l4118 3E88                           l3190 2380  
                         l3182 234E                           l3174 231A                           l3166 22D8  
                         l3158 229A                           l3094 212C                           l4046 2DE2  
                         l4038 2D9E                           l3086 3248                           l3078 3200  
                         l3350 20F6                           l3342 20BA                           l3334 206E  
                         l3318 1FC0                           l3270 1DEC                           l3262 1DBC  
                         l3254 1D76                           l3246 1D50                           l3238 1D24  
                         l3406 3D88                           l3422 33EA                           l3510 2AC6  
                         l3502 2A2E                           l4054 3966                           l4142 39AC  
                         l4136 3EA0                           l4128 3E96                           l4080 3DC2  
                         l4072 3D9A                           l3192 23AE                           l3176 2330  
                         l3184 2360                           l3168 22F6                           l3096 212E  
                         l3600 29FC                           l3344 20D6                           l3352 20FC  
                         l3328 202A                           l3336 2072                           l3280 1E3C  
                         l3272 1DF6                           l3264 1DCC                           l3256 1D86  
                         l3248 1D56                           l2800 1842                           l3360 3C22  
                         l3432 3414                           l3424 33EE                           l3416 33AE  
                         l3520 2BE2                           l3504 2A4E                           l4056 3986  
                         l4144 39B4                           l4400 32F4                           l4074 3D9E  
                         l3186 236E                           l3178 2336                           l3098 213E  
                         l4090 3F20                           l4082 38E0                           l3602 2A0C  
                         l3370 37C2                           l3354 2100                           l3346 20E6  
                         l3338 208C                           l3290 1E7E                           l3282 1E48  
                         l3274 1E0C                           l3258 1D96                           l2810 1876  
                         l2802 1844                           l3450 3478                           l3442 343C  
                         l3434 341E                           l3426 33FC                           l3418 33D8  
                         l3522 2BF6                           l3514 2B36                           l3506 2AA4  
                         l3530 3A36                           l3610 0E42                           l4146 39D0  
                         l4138 3992                           l4402 3308                           l4076 3DA8  
                         l3196 23D8                           l3188 2372                           l4084 2DF4  
                         l4092 3F2A                           l3460 382E                           l3372 37D2  
                         l3364 3756                           l3380 348A                           l3348 20F4  
                         l3292 1E8E                           l3284 1E56                           l3276 1E18  
                         l3268 1DE0                           l2820 18A8                           l2804 1854  
                         l2812 187E                           l3444 3448                           l3436 3428  
                         l3524 2C1E                           l3516 2B72                           l3508 2AB8  
                         l3532 3A4A                           l3540 3A6A                           l3700 11EA  
                         l3620 0E8A                           l3612 0E50                           l4404 3356  
                         l3542 3FA2                           l3550 3F98                           l4078 3DB8  
                         l3198 23E4                           l4094 3F2C                           l4086 3F14  
                         l3470 3D3C                           l3462 3842                           l3454 3800  
                         l3374 37F6                           l3366 3784                           l3390 3514  
                         l3382 34B8                           l3294 1EA8                           l3286 1E62  
                         l3278 1E30                           l2910 1A80                           l2902 1A48  
                         l2830 18DE                           l2822 18AE                           l2814 188E  
                         l2806 1864                           l3358 3C12                           l3446 3458  
                         l3526 2C2E                           l3518 2BA6                           l3534 3A56  
                         l3710 1230                           l3702 11F2                           l3622 0E9A  
                         l3630 0EC2                           l3614 0E54                           l3606 0E2C  
                         l4406 3366                           l3544 3FA6                           l3552 3F9C  
                         l4096 3F2E                           l4088 3F1E                           l3464 3846  
                         l3456 380E                           l3560 27F6                           l3376 37FC  
                         l3368 3794                           l3392 3526                           l3384 34C8  
                         l3296 1EB8                           l3288 1E72                           l2912 1A84  
                         l2904 1A58                           l2920 1AA4                           l2840 191A  
                         l2832 18EE                           l2824 18BC                           l2816 1894  
                         l2808 1874                           l3448 3468                           l3480 3620  
                         l3472 358E                           l3536 3A5A                           l3800 1724  
                         l3720 1276                           l3712 1242                           l3704 11F8  
                         l3640 0F0C                           l3632 0EE8                           l3624 0EAA  
                         l3616 0E78                           l3608 0E32                           l4408 336A  
                         l3546 3F78                           l4098 3DCE                           l3466 3864  
                         l3458 381A                           l3570 2862                           l3562 2816  
                         l3554 27B2                           l3394 3534                           l3386 34F6  
                         l3298 1ED4                           l2922 1ACA                           l2930 1B20  
                         l2914 1A92                           l2906 1A66                           l2850 1938  
                         l2842 1928                           l2834 18F0                           l2826 18BE  
                         l2818 18A6                           l3490 3682                           l3474 35AE  
                         l3538 3A66                           l3810 1772                           l3802 172C  
                         l3730 138A                           l3722 12DA                           l3706 120A  
                         l3714 124A                           l3650 0F74                           l3642 0F24  
                         l3634 0EFA                           l3626 0EB6                           l3618 0E82  
                         l4530 261C                           l4370 3284                           l4362 326A  
                         l3548 3F7C                           l3468 3D22                           l3580 289C  
                         l3572 2872                           l3564 2830                           l3556 27D2  
                         l3396 3584                           l3388 3506                           l2940 1B74  
                         l2932 1B46                           l2924 1AFE                           l2916 1A94  
                         l2908 1A74                           l2860 194C                           l2852 193C  
                         l2844 192C                           l2828 18CE                           l2836 18F8  
                         l3476 35EC                           l3484 362C                           l3820 17E8  
                         l3812 1782                           l3804 1730                           l3740 1448  
                         l3732 13BE                           l3724 1332                           l3716 1252  
                         l3708 1218                           l3652 0F86                           l3644 0F2E  
                         l3636 0EFE                           l3628 0EBE                           l4532 26DA  
                         l4380 328E                           l4372 3286                           l4364 326E  
                         l3830 3F8E                           l2790 36D8                           l2782 368C  
                         l3582 28A2                           l3590 2994                           l3574 287E  
                         l3566 284C                           l3558 27E6                           l3398 358A  
                         l2950 1B9E                           l2942 1B82                           l2934 1B56  
                         l2926 1B00                           l2918 1A9E                           l2870 1960  
                         l2862 1950                           l2854 1940                           l2846 1930  
                         l2838 1908                           l3486 363E                           l3478 3614  
                         l3494 3C58                           l3822 17FE                           l3814 17B2  
                         l3806 174E                           l3750 151C                           l3742 1458  
                         l3734 13F0                           l3726 1366                           l3718 1262  
                         l3654 0F8A                           l3638 0F04                           l4534 2764  
                         l3902 2742                           l4390 32B0                           l4382 3290  
                         l4374 3288                           l4366 3272                           ?_pad 0013  
                         l3840 3CF6                           l3832 3F92                           l2792 370E  
                         l2784 369E                           l3592 29AE                           l3584 2924  
                         l3576 2886                           l3568 285C                           l2960 1BD0  
                         l2952 1BAE                           l2944 1B84                           l2928 1B10  
                         l2880 19B2                           l2872 1964                           l2864 1954  
                         l2856 1944                           l2848 1934                           l3496 3C68  
                         l3824 1806                           l3816 17C0                           l3808 176A  
                         l3760 1552                           l3752 1530                           l3744 148C  
                         l3736 1406                           l3728 136C                           l3680 10BE  
                         l3672 1014                           l3656 0F90                           l3648 0F4E  
                         l3904 2772                           l4392 32B2                           l4384 3292  
                         l4376 328A                           l4368 327A                           l3842 3D1C  
                         l3834 3CE2                           l2786 36B0                           l3594 29CC  
                         l3586 292A                           l3578 2892                           l2970 1C2A  
                         l2962 1BE6                           l2946 1B92                           l2938 1B6A  
                         l2954 1BB0                           l2890 19F6                           l2882 19C2  
                         l2866 1958                           l2858 1948                           l2874 1968  
                         l3498 387A                           l3818 17D8                           l3770 161A  
                         l3762 155A                           l3746 14E2                           l3754 1534  
                         l3738 1438                           l3682 10FC                           l3674 101A  
                         l3658 0F98                           l3666 0FB4                           l3850 24AC  
                         l4394 32CC                           l4386 3294                           l4378 328C  
                         l3828 3EF6                           l3844 3D1E                           l3836 3CE6  
                         l2788 36BA                           l3596 29E6                           l3588 2930  
                         l2980 1CA6                           l2972 1C64                           l2948 1B9A  
                         l2956 1BBE                           l2892 19F8                           l2884 19D8  
                         l2876 196C                           l2868 195C                           l2796 1828  
                         l3780 164A                           l3772 1628                           l3764 1566  
                         l3756 1544                           l3748 14E8                           l3684 1110  
                         l3692 118C                           l3676 104E                           l3668 0FCE  
                         l3860 2504                           l3852 24D4                           l3908 2784  
                         l4396 32CE                           l4388 3296                           l3950 3E3C  
                         l3942 3E28                           l3838 3CEE                           l3598 29F6  
                         l2990 1CC6                           l2982 1CAA                           l2966 1C10  
                         l2974 1C66                           l2958 1BC2                           l2894 1A02  
                         l2886 19E4                           l2878 1996                           l2798 1834  
                         l3790 167C                           l3782 165A                           l3774 1638  
                         l3766 15DE                           l3758 154C                           l3694 11C6  
                         l3686 1144                           l3678 108C                           l3870 25CA  
                         l3862 2524                           l3854 24E2                           l4398 32E8  
                         l3848 3F4A                           l3952 3E3E                           l3944 3E32  
                         l3960 3AD6                           l2992 1CD4                           l2984 1CB8  
                         l2976 1C76                           l2968 1C1C                           l2896 1A24  
                         l2888 19E8                           l3792 168E                           l3784 165E  
                         l3776 163C                           l3768 15FE                           l3696 11D4  
                         l3688 114C                           l3872 25DA                           l3864 2544  
                         l3856 24F0                           l3946 3E38                           l3962 3B1C  
                         l3954 3A86                           l2994 1CD6                           l2986 1CBE  
                         l2978 1C86                           l2898 1A34                           l3794 1692  
                         l3786 1664                           l3778 1642                           l3698 11E0  
                         l3874 25F0                           l3882 2608                           l3866 259A  
                         l3858 24F4                           l3980 3E64                           l3948 3E3A  
                         l3972 3B76                           l3956 3ACC                           l2988 1CC0  
                         l3796 1698                           l3788 166A                           l3892 26C6  
                         l3876 25F8                           l3884 263A                           l3990 39E4  
                         l3982 3E68                           l3974 3BBC                           l3966 3B26  
                         l2998 3C9C                           l3798 16F0                           l3894 26F0  
                         l3886 265E                           l3878 2600                           l3992 39F2  
                         l3984 3E78                           l3968 3B6C                           l3896 2710  
                         l3888 2692                           l3994 3A02                           l3978 3E54  
                         l3986 3F32                           l3996 3A0C                           l3998 3A16  
                         STR_1 0E01                           STR_2 0E22                           STR_5 0E26  
                         u2200 370E                           u3000 1D14                           u2201 370A  
                         u3001 1D10                           u3010 1D24                           u2210 1842  
                         u3011 1D20                           u2211 183E                           u3100 1FD2  
                         u3020 1D64                           u2300 1996                           u2220 1854  
                         u3101 1FCE                           u3021 1D60                           u2301 1992  
                         u2221 1850                           u3110 2000                           u3030 1D76  
                         u2310 19AE                           u2230 1864                           u3111 1FFC  
                         u3031 1D72                           u2311 19A8                           u2231 1860  
                         u3200 37F6                           u3120 2016                           u3040 1D86  
                         u2400 1A92                           u2320 19B0                           u2240 18A6  
                 _BAUD4CONbits 000EE9                           u3201 37F2                           u3121 2012  
                         u3041 1D82                           u2401 1A8E                           u2241 18A2  
                         u2170 369E                           u3210 34B8                           u3130 202A  
                         u3050 1DBC                           u2410 1ACA                           u2330 19D8  
                         u2250 18BC                           u4010 24D4                           u2171 369A  
                         u3211 34B4                           u3131 2026                           u3051 1DB8  
                         u2411 1AC6                           u2331 19D4                           u2251 18B8  
                         u4011 24D0                           u4100 2C52                           u2180 36B0  
                         u3220 34F6                           u3140 2044                           u3060 1DCC  
                         u2500 1BE6                           u2420 1B10                           u2340 19F6  
                         u2260 18CE                           u3300 3410                           u4020 2524  
                         u4101 2C4E                           u2181 36AC                           u3221 34F2  
                         u3141 2040                           u3061 1DC8                           u2501 1BE2  
                         u2421 1B0C                           u2341 19F2                           u2261 18CA  
                         u3301 340C                           u4021 2520                           u4110 2C60  
                         u2190 36D8                           u3230 3514                           u3150 208C  
                         u3070 1F46                           u2510 1BFC                           u2430 1B46  
                         u2350 1A16                           u2270 18DE                           u3310 3438  
                         u4030 2544                           u4111 2C5C                           u2191 36D4  
                         u3231 3510                           u3151 2088                           u2511 1BF8  
                         u2431 1B42                           u2351 1A12                           u2271 18DA  
                         u3311 3434                           u4031 2540                           u4120 2CBC  
                         u4008 3D0C                           u2600 3CDE                           u3240 3534  
                         u3160 20BA                           u3080 1FA0                           u2520 1C10  
                         u2440 1B56                           u2360 1A24                           u2280 191A  
                         u3320 3458                           u3400 363E                           u4040 265A  
                         u4200 3986                           u4121 2CB8                           u2601 3CDA  
                         u3241 3530                           u3161 20B6                           u3081 1F9C  
                         u2521 1C0C                           u2441 1B52                           u2361 1A20  
                         u2281 1916                           u3321 3454                           u3401 363A  
                         u4041 2656                           u4201 3982                           u2610 3EB4  
                         u4210 3DFC                           u4130 2D12                           u3250 3584  
                         u3170 20F4                           u3090 1FC0                           u2530 1C2A  
                         u2450 1B82                           u2370 1A34                           u2290 1928  
                         u3330 3468                           u2611 3EB0                           u4211 3DF8  
                         u4131 2D0E                           u3251 3580                           u3171 20F0  
                         u3091 1FBC                           u3075 1F3C                           u2531 1C26  
                         u2451 1B7E                           u2371 1A30                           u2291 1924  
                         u3331 3464                           u2620 3ECA                           u4140 2D5C  
                         u4220 3E12                           u2700 3118                           u3340 380E  
                         u3180 3784                           u3260 3D78                           u2540 1C64  
                         u2460 1B92                           u2380 1A66                           u3420 3678  
                         u3500 2B32                           u4300 337C                           u2621 3EC6  
                         u4141 2D58                           u4221 3E0E                           u2701 3114  
                         u3341 380A                           u3181 3780                           u3261 3D74  
                         u2541 1C60                           u2461 1B8E                           u2381 1A62  
                         u3421 3672                           u3501 2B2E                           u4301 3378  
                         u4070 3E64                           u4150 2D7A                           u2630 2F90  
                         u2710 314A                           u3350 3864                           u3190 37C2  
                         u2550 1C76                           u2470 1BAE                           u2390 1A74  
                         u3270 339A                           u3430 367A                           u3510 2B56  
                         u4071 3E60                           u4151 2D76                           u2631 2F8C  
                         u2711 3146                           u3351 3860                           u3191 37BE  
                         u2551 1C72                           u2471 1BAA                           u2391 1A70  
                         u3271 3396                           u3415 3650                           u2800 21A4  
                         u4160 2D8A                           u4080 3F46                           u2640 2FC2  
                         u2720 3188                           u3360 3D3C                           u3600 2830  
                         u2560 1C86                           u2480 1BBE                           u3280 33CE  
                         u3520 2B72                           u3440 3C9A                           u2801 21A0  
                         u4161 2D86                           u4081 3F40                           u2641 2FBE  
                         u2721 3184                           u3361 3D38                           u3601 282C  
                         u2561 1C82                           u2481 1BBA                           u3521 2B6E  
                         u3441 3C96                           u2810 21B4                           u4170 2D98  
                         u4090 3F48                           u2730 31B2                           u3610 285C  
                         u2570 1CA6                           u2490 1BD0                           u3290 33FC  
                         u3370 35CE                           u3530 2BC6                           u3450 3898  
                         u2811 21B0                           u4171 2D94                           u2651 2FEC  
                         u2731 31AE                           u3611 2858                           u2571 1CA2  
                         u2491 1BCC                           u3291 33F8                           u3515 2B4C  
                         u3451 3894                           u2900 236E                           u2820 21F4  
                         u4180 2DD2                           u2660 3010                           u2740 31E0  
                         u3620 2872                           u2580 1CB8                           u3380 35EC  
                         u3540 2BE2                           u3460 2A76                           u3700 0EE8  
                         u2901 236A                           u2821 21F0                           u4181 2DCE  
                         u2661 300C                           u2741 31DC                           u3621 286E  
                         u2581 1CB4                           u3285 33C4                           u3381 35E8  
                         u3541 2BDE                           u3701 0EE4                           u4317 32A2  
                         u2910 2380                           u2830 2234                           u4190 2DE0  
                         u2670 303A                           u2750 3228                           u3630 29AE  
                         u2590 1CD4                           u3390 3614                           u3550 2C1E  
                         u3470 2AA4                           u3710 0EFA                           u2911 237C  
                         u2831 2230                           u4191 2DDC                           u2671 3036  
                         u2751 3224                           u3631 29AA                           u2591 1CD0  
                         u3391 3610                           u3375 35C4                           u3551 2C1A  
                         u3535 2BBC                           u3471 2AA0                           u3711 0EF6  
                         u4327 32BE                           u2920 23AE                           u2840 22AA  
                         u2760 212C                           u2680 307A                           u3640 29CC  
                         u3480 2AC6                           u3560 3A84                           u3800 11D4  
                         u3720 0F74                           u2921 23AA                           u2841 22A6  
                         u2761 2128                           u2681 3076                           u3641 29C8  
                         u3481 2AC2                           u3465 2A6C                           u3561 3A80  
                         u3801 11D0                           u3721 0F70                           u4337 32DA  
                         u2930 23C4                           u2850 22CC                           u2770 213E  
                         u2690 30C4                           u3650 29E6                           u3570 27E2  
                         u3810 120A                           u3730 0F86                           u4347 3DAE  
                         u2931 23C0                           u2851 22C8                           u2771 213A  
                         u2691 30C0                           u3651 29E2                           u3571 27DC  
                         u3811 1206                           u3731 0F82                           u2940 23D8  
                         u2860 22F6                           u2780 214E                           u3660 29F6  
                         u3580 27E4                           u3900 15DE                           u3820 1218  
                         u3740 1000                           u4357 39F8                           u2941 23D4  
                         u2861 22F2                           u2781 214A                           u3661 29F2  
                         u3901 15DA                           u3821 1214                           u3741 0FFC  
                         u2950 23F2                           u2870 231A                           u2790 2192  
                         u3590 27F6                           u3910 161A                           u3830 1242  
                         u3750 108C                           u3670 0E50                           u2951 23EE  
                         u2871 2316                           u2791 218E                           u3591 27F2  
                         u3495 2ADA                           u3911 1616                           u3831 123E  
                         u3751 1088                           u3671 0E4C                           u2960 243A  
                         u2880 2330                           u3496 2AE4                           u3920 1628  
                         u3840 138A                           u3760 10BE                           u3680 0E9A  
                         u2961 2436                           u2881 232C                           u3497 2AF4  
                         u3921 1624                           u3841 1386                           u3761 10BA  
                         u3681 0E96                           u2970 246A                           u2890 234E  
                         u3930 167C                           u3850 13F0                           u3770 10FC  
                         u3690 0EAA                           u2971 2466                           u2891 234A  
                         u3931 1678                           u3851 13EC                           u3771 10F8  
                         u3691 0EA6                           u2980 2498                           u3940 174E  
                         u3860 1438                           u3780 1188                           u2981 2494  
                         u3941 174A                           u3861 1434                           u3781 1184  
                         u2990 1D02                           u3950 176A                           u3870 1448  
                         u3790 11BE                           u2991 1CFE                           u3951 1766  
                         u3871 1444                           u3791 11BA                           u3960 17D2  
                         u3880 14E2                           u3961 17CC                           u3881 14DE  
                         u3970 17D4                           u3890 1530                           u3891 152C  
                         u3980 17E8                           u3981 17E4                           u3990 3D0A  
                         u3991 3D02                           i2l82 3FBE                           i2l91 3F8C  
                         i2l76 3ECC                           i2l79 3EF2                           i2l88 3FB4  
                         abs@a 0015                           _dbuf 0150                           _labs 387A  
                         _main 326A                           _dtoa 27B2                           _prec 0056  
                         _vals 00F1                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001C                           fsr2l 000FD9  
                         btemp 005D                  ___fpclassifyf 358E                           prodh 000FF4  
                         prodl 000FF3                           start 0028                ___fldiv@new_exp 0014  
       __end_of_color_read_Red 3B26                __end_of_HighISR 0028         __end_of_color_read_lum 3AD6  
                  i2_clear_int 3F60                   ___param_bank 000000                          ??_abs 0017  
                        ??_pad 0019                   ?_readColours 000E                  ___fltol@sign1 000B  
              __end_of___aodiv 3106                          ?_labs 0003                __end_of___fladd 1CE8  
                        ?_main 0001                          ?_dtoa 001E                __end_of___aomod 326A  
              __end_of___fldiv 24AC                __end_of___flneg 3D9A                __end_of___flmul 2112  
              __end_of___flsub 3C58                __end_of___fltol 348A                    colour_rel@B 0028  
                  colour_rel@G 0024                    colour_rel@L 002C                    colour_rel@R 0020  
                        i2l242 3F74                          i2l251 0024                   vfpfcnvrt@fmt 0043  
   __end_of_I2C_2_Master_Start 3FAC     __end_of_I2C_2_Master_Write 3F82                          _flags 0058  
                        _fputc 368C                          _fputs 3C9C                          labs@a 0003  
                        pad@fp 0013                          _width 00ED                          _putch 3FC4  
                        dtoa@d 0020                          dtoa@i 003E                          dtoa@n 0036  
                        dtoa@p 0032                          dtoa@s 0040                          dtoa@w 0034  
                        tablat 000FF5                          ttemp5 005E                          ttemp6 0061  
                        ttemp7 0065                          status 000FD8                          wtemp8 005E  
              __end_of_sprintf 39E4                 ?___fpclassifyf 0003        __end_of_color_read_Blue 3BC6  
        _I2C_2_Master_RepStart 3F8E                ?_color_read_Red 0007                ?_color_read_lum 0007  
              __initialization 3BC6                   __end_of_labs 38E0                   __end_of_main 3384  
                 __end_of_dtoa 2A2E             putCharToTxBuf@byte 0003                         ??_labs 0007  
                       ??_main 00B1                         ??_dtoa 0028  __end_of_colour_interrupt_init 3A36  
                __activetblptr 000003                         ?_fputc 0003                         ?_fputs 000C  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                         i2l4060 3FB6  
                       i2l4062 3FBA                         i2l4070 3F88                         i2l4150 3F60  
                       i2l4064 3FAC                         i2l4066 3FB0                         i2l4068 3F84  
                       i2l4190 001E                         i2l4192 0020                         i2l4186 000A  
                       i2l4188 001A                         i2l3940 3EDC                         i2l3938 3ECC  
                    ??_HighISR 0003       __end_of_color_click_init 3DCE                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 2DF4                   vfprintf@cfmt 0054  
                       ___flge 348A                         ___fleq 3756                      ??___aodiv 0013  
                    ??___fladd 000B                      ??___aomod 0013                      ??___fldiv 000B  
                    ??___flneg 0007                      ??___flmul 000B                      ??___flsub 0024  
                    ??___fltol 0007                         _efgtoa 0E2C                         _floorf 2A2E  
                       _memcpy 3A36                         clear_0 3BEA                         clear_1 3BF6  
                       clear_2 3C02                         isa$std 000001                         pad@buf 0015  
                       dtoa@fp 001E                         _strcpy 3C58                         fputc@c 0003  
            ?_TxBufferedString 0004                         fputs@c 0010                         fputs@i 0011  
                       fputs@s 000C                ___fpclassifyf@e 000B                ___fpclassifyf@u 000D  
              ___fpclassifyf@x 0003                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0006  
                       putch@c 0001               __end_of_vfprintf 3992                      ??_sprintf 0056  
                   ___flge@ff1 001C                     ___flge@ff2 0020                ??___fpclassifyf 0007  
                 ___xxtofl@arg 000D                   ___xxtofl@exp 000C                   ___xxtofl@val 0003  
                   ___fleq@ff1 0003                     ___fleq@ff2 0007          __end_of_isDataInTxBuf 3F4A  
                   __accesstop 0060        __end_of__initialization 3C08                     ___flneg@f1 0003  
     __end_of_color_read_Green 3B76         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0003               ?_color_read_Blue 0007                _Interrupts_init 3E7C  
               __pcstackCOMRAM 0001                   __pidataBANK0 3FC0                  __end_of_fputc 3756  
                __end_of_fputs 3CE0                  __end_of_putch 3FC6                        ??_fputc 0007  
                      ??_fputs 0010                        ??_putch 0003                     __pbssBANK0 00E5  
                   __pbssBANK1 0100              _color_writetoaddr 3EF4                   ?i2_clear_int 0001  
                      ?___flge 001C                        ?___fleq 0003             ?_color_writetoaddr 0005  
                      ?_efgtoa 0030                        ?_floorf 001C                        ?_memcpy 0003  
          ??_color_writetoaddr 0006                        ?_strcpy 0003                  colour_rel@rel 001E  
                      _INT1PPS 000DF1                      ?___xxtofl 0003                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 2DF4        __end_of_Interrupts_init 3EA4         color_writetoaddr@value 0005  
             ??_color_read_Red 0009                        _HighISR 0008               ??_color_read_lum 0009  
            __end_of_clear_int 3F60      __end_of_color_writetoaddr 3F14             _I2C_2_Master_Start 3FA2  
                   _initUSART4 3F14            i2_I2C_2_Master_Idle 3ECC             _I2C_2_Master_Write 3F76  
                      __Hparam 0000            i2_I2C_2_Master_Stop 3FAC                        __Lparam 0000  
            color_read_Red@tmp 000C                        ___aodiv 2F7E                        ___fladd 1828  
                      ___aomod 3106                        ___fldiv 2112                        ___flneg 3D62  
                      ___flmul 1CE8                        ___flsub 3C12                        ___fltol 3384  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 008C  
                 __psmallconst 0E00                        __pcinit 3BC6                        __ramtop 0E00  
                      __ptext0 326A                        __ptext1 3992                        __ptext2 393E  
                      __ptext3 24AC                        __ptext4 0E2C                        __ptext5 3C58  
                      __ptext6 3A36                        __ptext7 387A                        __ptext8 2A2E  
                      __ptext9 358E           ?i2_I2C_2_Master_Idle 0001                     ??___xxtofl 0007  
         ?i2_I2C_2_Master_Stop 0001                        efgtoa@c 0036                        efgtoa@d 006B  
                      efgtoa@e 006F                        efgtoa@f 0032                        efgtoa@g 0084  
                      efgtoa@h 0079                        efgtoa@i 0077                        efgtoa@l 007D  
                      efgtoa@m 006D                        efgtoa@n 0082                        efgtoa@p 0062  
                      efgtoa@t 0064                        efgtoa@u 0088                        efgtoa@w 0071  
                _RxBufWriteCnt 005C              color_read_lum@tmp 000C                        main@buf 00B3  
                      _sprintf 3992           ??_I2C_2_Master_Start 0004           ??_I2C_2_Master_Write 0004  
         end_of_initialization 3C08              __end_of_sendTxBuf 3E28                        floorf@e 002A  
                      floorf@m 0026                        floorf@u 002C                        floorf@x 001C  
                      memcpy@d 0009                        memcpy@n 0007                        memcpy@s 000B  
                      fputc@fp 0005                        fputs@fp 000E              ?_color_click_init 0001  
           ??_color_click_init 0007              __end_of_vfpfcnvrt 27B2                     efgtoa@mode 0069  
                   efgtoa@sign 0081                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0049  
                   ??_vfprintf 0054                        strcpy@d 0009                        strcpy@s 0007  
        ??i2_I2C_2_Master_Idle 0001          ??i2_I2C_2_Master_Stop 0002                    ___fladd@grs 0012  
        _colour_interrupt_init 39E4                  ___xxtofl@sign 000B                      _TRISAbits 000F81  
                    _TRISBbits 000F82                      _TRISDbits 000F84                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 0016                    ___fldiv@rem 000F  
     color_writetoaddr@address 0006        ??_I2C_2_Master_RepStart 0004                    ?_colour_rel 001C  
             ?_Interrupts_init 0001                    ___flmul@grs 0010                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0007                    ?_initUSART4 0001  
           ??_color_read_Green 0009                 __end_of___flge 358E                 __end_of___fleq 3800  
                  vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0052                    vfpfcnvrt@fp 0041  
               __end_of_efgtoa 1828                 __end_of_floorf 2C40                 __end_of_memcpy 3A86  
                   floorf@F526 00E5                 __end_of_strcpy 3C9C            start_initialization 3BC6  
                  __end_of_abs 3D62                    __end_of_pad 387A                  _TxBufWriteCnt 005A  
        __end_of___fpclassifyf 368C            color_read_Green@tmp 000C                    vfprintf@fmt 008E  
                     ??___flge 0024                       ??___fleq 000B                  ??_readColours 0010  
                     ??_efgtoa 0037                 _putCharToTxBuf 3E52                    __pdataBANK0 00F9  
i2I2C_2_Master_Write@data_byte 0002                       ??_floorf 0020                       ??_memcpy 0009  
                     ??_strcpy 0007   __end_ofi2_I2C_2_Master_Start 3FC0   __end_ofi2_I2C_2_Master_Write 3F8E  
                    ___fladd@a 0007                      ___fladd@b 0003         ?_colour_interrupt_init 0001  
                    ___fldiv@a 0007                      ___fldiv@b 0003                      ___flmul@a 0007  
                    ___flmul@b 0003                    __pbssCOMRAM 0056                      ___flsub@a 0020  
                    ___flsub@b 001C                  __pcstackBANK0 0060               ___aodiv@dividend 0003  
                     ?_HighISR 0001                    _efgtoa$1698 0066                      _dtoa$1667 0030  
                    _clear_int 3F4A         __end_of_putCharToTxBuf 3E7C                      __pintcode 0008  
                     ?___aodiv 0003                       ?___fladd 0003                       ?___aomod 0003  
                     ?___fldiv 0003               ___aodiv@quotient 0015                       ?___flneg 0003  
                     ?___flmul 0003                       ?___flsub 001C                       ?___fltol 0003  
       TxBufferedString@string 0004           I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006  
                  __smallconst 0E00            __end_of_readColours 393E              _I2C_2_Master_Idle 3EA4  
            _I2C_2_Master_Init 3E28              _I2C_2_Master_Read 3CE0              _I2C_2_Master_Stop 3F98  
                _low_threshold 00EF                   _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 0092                 colour_rel@vals 001C            ??_I2C_2_Master_Idle 0003  
          ??_I2C_2_Master_Init 0003            ??_I2C_2_Master_Read 0004                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0004                  _isDataInTxBuf 3F32                       _LATDbits 000F7C  
                     _LATFbits 000F7E               _TxBufferedString 3DCE                       _LATGbits 000F7F  
                    _sendTxBuf 3DFE                       _IPR0bits 000E1F                       _PIE0bits 000E29  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u405_40 3EDC  
                     i2u405_41 3ED8                       i2u406_40 3EF2                       i2u406_41 3EEE  
                     _PIR0bits 000E33                       i2u428_40 001A                       i2u428_41 0016  
                     _PIR4bits 000E37                     ?_clear_int 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 24AC  
    __end_of_I2C_2_Master_Idle 3ECC      __end_of_I2C_2_Master_Init 3E52      __end_of_I2C_2_Master_Read 3D22  
    __end_of_I2C_2_Master_Stop 3FA2                       _DataFlag 00FB    I2C_2_Master_Write@data_byte 0004  
            ??_color_read_Blue 0009                   _TxBufReadCnt 0059                     vfpfcnvrt@c 0051  
                 ??_colour_rel 0020                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 3F98  
           color_read_Blue@tmp 000C                     ?_sendTxBuf 0001                   ??_initUSART4 0003  
         i2_I2C_2_Master_Start 3FB6           i2_I2C_2_Master_Write 3F82                       __Hrparam 0000  
                    memcpy@tmp 000D                     vfprintf@ap 0090                       __Lrparam 0000  
                   vfprintf@fp 008C    __end_ofi2_I2C_2_Master_Idle 3EF4                    _readColours 38E0  
  __end_ofi2_I2C_2_Master_Stop 3FB6                     ?_vfpfcnvrt 0041                ___aodiv@divisor 000B  
              ___aodiv@counter 0013             __end_of_colour_rel 2F7E                     _ANSELBbits 000E9A  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9                     sprintf@fmt 0094  
                     ___xxtofl 2C40             __end_of_initUSART4 3F32                       __ptext10 3384  
                     __ptext11 3C12                       __ptext20 368C                       __ptext12 1828  
                     __ptext21 3FC4                       __ptext13 3D62                       __ptext30 3B26  
                     __ptext22 3D22                       __ptext14 1CE8                       __ptext31 3B76  
                     __ptext23 3106                       __ptext15 348A                       __ptext40 3DCE  
                     __ptext32 3F8E                       __ptext24 2F7E                       __ptext16 3756  
                     __ptext41 3E52                       __ptext33 3CE0                       __ptext25 3DFE  
                     __ptext17 27B2                       __ptext42 3E7C                       __ptext34 3F14  
                     __ptext26 3F32                       __ptext18 3800                       __ptext51 3F60  
                     __ptext43 39E4                       __ptext35 2DF4                       __ptext27 38E0  
                     __ptext19 3C9C                       __ptext52 3F82                       __ptext44 3EF4  
                     __ptext36 2C40                       __ptext28 3A86                       __ptext53 3FAC  
                     __ptext45 3F4A                       __ptext37 2112                       __ptext29 3AD6  
                     __ptext54 3FB6                       __ptext46 3F76                       __ptext38 3D9A  
                     __ptext55 3ECC                       __ptext47 3F98                       __ptext39 3E28  
                     __ptext48 3FA2                       __ptext49 3EA4                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0003          ?i2_I2C_2_Master_Start 0001  
        ?i2_I2C_2_Master_Write 0001                  ??i2_clear_int 0003                    ??_clear_int 0005  
                     efgtoa@fp 0030                       efgtoa@ne 0060                       efgtoa@pp 0068  
                     efgtoa@ou 0073                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005D                       _vfprintf 393E        ??_colour_interrupt_init 0007  
             ___aomod@dividend 0003                     _INTCONbits 000FF2                       memcpy@d1 0003  
                     memcpy@s1 0005                ??_isDataInTxBuf 0003                       intlevel2 0000  
                    sprintf@ap 00A4                 _high_threshold 00F9                    ??_sendTxBuf 0003  
                    strcpy@src 0005                    efgtoa@nmode 006A                ___aomod@divisor 000B  
                  ??_vfpfcnvrt 0047                ___aomod@counter 0013            __end_ofi2_clear_int 3F76  
             _color_click_init 3D9A       __end_of_TxBufferedString 3DFE                       sprintf@f 00A6  
                     sprintf@s 0092                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                ___fladd@signs 000F                     _TX4STAbits 000EE8                   ___aodiv@sign 0014  
       ??i2_I2C_2_Master_Start 0002                   ___fladd@aexp 0010         ??i2_I2C_2_Master_Write 0002  
                 ___fladd@bexp 0011               ??_putCharToTxBuf 0003                   ___aomod@sign 0014  
