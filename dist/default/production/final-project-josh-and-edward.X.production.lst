

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 19:54:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109   000000                     
   110                           ; Generated 06/04/2022 GMT
   111                           ; 
   112                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F67K40 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144   000000                     
   145                           	psect	idataBANK0
   146   0061AA                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _RunOneBlockTime
   150   0061AA  041A               	dw	1050
   151                           
   152                           ;initializer for _Turn45Delay
   153   0061AC  003C               	dw	60
   154                           
   155                           ;initializer for _power
   156   0061AE  0032               	dw	50
   157                           
   158                           	psect	idataBANK1
   159   0061B0                     __pidataBANK1:
   160                           	callstack 0
   161                           
   162                           ;initializer for _run_flag
   163   0061B0  0001               	dw	1
   164                           
   165                           ;initializer for _move_count
   166   0061B2  FFFF               	dw	65535
   167   000000                     _LATHbits	set	3968
   168   000000                     _TRISEbits	set	3973
   169   000000                     _TX4REG	set	3812
   170   000000                     _RC4STAbits	set	3815
   171   000000                     _SP4BRGH	set	3814
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _RX4PPS	set	3605
   174   000000                     _SSP2CLKPPS	set	3612
   175   000000                     _SSP2DATPPS	set	3613
   176   000000                     _ANSELDbits	set	3751
   177   000000                     _SSP2ADD	set	3798
   178   000000                     _SSP2CON1bits	set	3801
   179   000000                     _LATAbits	set	3961
   180   000000                     _LATFbits	set	3966
   181   000000                     _LATGbits	set	3967
   182   000000                     _TRISAbits	set	3969
   183   000000                     _TRISGbits	set	3975
   184   000000                     _TRISHbits	set	3976
   185   000000                     _PORTFbits	set	3982
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _INTCONbits	set	4082
   189   000000                     _CCPR2H	set	4006
   190   000000                     _CCPR1H	set	4010
   191   000000                     _TRISCbits	set	3971
   192   000000                     _TRISDbits	set	3972
   193   000000                     _TRISFbits	set	3974
   194   000000                     _LATDbits	set	3964
   195   000000                     _RC4REG	set	3811
   196   000000                     _SP4BRGL	set	3813
   197   000000                     _TX4STAbits	set	3816
   198   000000                     _BAUD4CONbits	set	3817
   199   000000                     _SSP2CON2	set	3802
   200   000000                     _SSP2STAT	set	3800
   201   000000                     _ANSELFbits	set	3764
   202   000000                     _SSP2BUF	set	3797
   203   000000                     _PIE0bits	set	3625
   204   000000                     _PIR4bits	set	3639
   205   000000                     _RC0PPS	set	3682
   206   000000                     _RD5PPS	set	3695
   207   000000                     _RE2PPS	set	3700
   208   000000                     _RD6PPS	set	3696
   209   000000                     _RC7PPS	set	3689
   210   000000                     _CCPR4H	set	3873
   211   000000                     _CCPR3H	set	3877
   212   000000                     _PIR0bits	set	3635
   213   000000                     _T0CON1bits	set	4054
   214   000000                     _T0CON0bits	set	4053
   215   000000                     _CCP1CONbits	set	4011
   216   000000                     _CCPTMRS0bits	set	4013
   217   000000                     _T2PR	set	4028
   218   000000                     _T2CONbits	set	4029
   219   000000                     _CCP2CONbits	set	4007
   220   000000                     _CCP3CONbits	set	3878
   221   000000                     _CCP4CONbits	set	3874
   222   000000                     _RE4PPS	set	3702
   223   000000                     _RG6PPS	set	3720
   224   000000                     _T2CLKCONbits	set	4031
   225   000000                     _T2HLTbits	set	4030
   226                           
   227                           	psect	smallconst
   228   000E00                     __psmallconst:
   229                           	callstack 0
   230   000E00  00                 	db	0
   231   000E01                     STR_1:
   232                           
   233                           ; BSR set to: 14
   234   000E01  72                 	db	114	;'r'
   235   000E02  65                 	db	101	;'e'
   236   000E03  64                 	db	100	;'d'
   237   000E04  3D                 	db	61	;'='
   238   000E05  25                 	db	37
   239   000E06  66                 	db	102	;'f'
   240   000E07  20                 	db	32
   241   000E08  67                 	db	103	;'g'
   242   000E09  72                 	db	114	;'r'
   243   000E0A  65                 	db	101	;'e'
   244   000E0B  65                 	db	101	;'e'
   245   000E0C  6E                 	db	110	;'n'
   246   000E0D  3D                 	db	61	;'='
   247   000E0E  25                 	db	37
   248   000E0F  66                 	db	102	;'f'
   249   000E10  20                 	db	32
   250   000E11  62                 	db	98	;'b'
   251   000E12  6C                 	db	108	;'l'
   252   000E13  75                 	db	117	;'u'
   253   000E14  65                 	db	101	;'e'
   254   000E15  3D                 	db	61	;'='
   255   000E16  25                 	db	37
   256   000E17  66                 	db	102	;'f'
   257   000E18  20                 	db	32
   258   000E19  6C                 	db	108	;'l'
   259   000E1A  75                 	db	117	;'u'
   260   000E1B  6D                 	db	109	;'m'
   261   000E1C  3D                 	db	61	;'='
   262   000E1D  25                 	db	37
   263   000E1E  64                 	db	100	;'d'
   264   000E1F  20                 	db	32
   265   000E20  61                 	db	97	;'a'
   266   000E21  63                 	db	99	;'c'
   267   000E22  74                 	db	116	;'t'
   268   000E23  75                 	db	117	;'u'
   269   000E24  61                 	db	97	;'a'
   270   000E25  6C                 	db	108	;'l'
   271   000E26  5F                 	db	95	;'_'
   272   000E27  63                 	db	99	;'c'
   273   000E28  6F                 	db	111	;'o'
   274   000E29  6C                 	db	108	;'l'
   275   000E2A  6F                 	db	111	;'o'
   276   000E2B  75                 	db	117	;'u'
   277   000E2C  72                 	db	114	;'r'
   278   000E2D  3D                 	db	61	;'='
   279   000E2E  25                 	db	37
   280   000E2F  64                 	db	100	;'d'
   281   000E30  20                 	db	32
   282   000E31  0D                 	db	13
   283   000E32  0A                 	db	10
   284   000E33  00                 	db	0
   285   000E34                     STR_2:
   286                           
   287                           ; BSR set to: 14
   288   000E34  69                 	db	105	;'i'
   289   000E35  6E                 	db	110	;'n'
   290   000E36  66                 	db	102	;'f'
   291   000E37  00                 	db	0
   292   000E38                     STR_5:
   293                           
   294                           ; BSR set to: 14
   295   000E38  6E                 	db	110	;'n'
   296   000E39  61                 	db	97	;'a'
   297   000E3A  6E                 	db	110	;'n'
   298   000E3B  00                 	db	0
   299   000E3C  00                 	db	0	; dummy byte at the end
   300   000000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   005464                     __pcinit:
   305                           	callstack 0
   306   005464                     start_initialization:
   307                           	callstack 0
   308   005464                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK1 (4 bytes)
   312                           ; load TBLPTR registers with __pidataBANK1
   313   005464  0EB0               	movlw	low __pidataBANK1
   314   005466  6EF6               	movwf	tblptrl,c
   315   005468  0E61               	movlw	high __pidataBANK1
   316   00546A  6EF7               	movwf	tblptrh,c
   317   00546C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   318   00546E  6EF8               	movwf	tblptru,c
   319   005470  EE01  F0D8         	lfsr	0,__pdataBANK1
   320   005474  EE10 F004          	lfsr	1,4
   321   005478                     copy_data0:
   322   005478  0009               	tblrd		*+
   323   00547A  CFF5 FFEE          	movff	tablat,postinc0
   324   00547E  50E5               	movf	postdec1,w,c
   325   005480  50E1               	movf	fsr1l,w,c
   326   005482  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to BANK0 (6 bytes)
   329                           ; load TBLPTR registers with __pidataBANK0
   330   005484  0EAA               	movlw	low __pidataBANK0
   331   005486  6EF6               	movwf	tblptrl,c
   332   005488  0E61               	movlw	high __pidataBANK0
   333   00548A  6EF7               	movwf	tblptrh,c
   334   00548C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   335   00548E  6EF8               	movwf	tblptru,c
   336   005490  EE00  F0F2         	lfsr	0,__pdataBANK0
   337   005494  EE10 F006          	lfsr	1,6
   338   005498                     copy_data1:
   339   005498  0009               	tblrd		*+
   340   00549A  CFF5 FFEE          	movff	tablat,postinc0
   341   00549E  50E5               	movf	postdec1,w,c
   342   0054A0  50E1               	movf	fsr1l,w,c
   343   0054A2  E1FA               	bnz	copy_data1
   344                           
   345                           ; Clear objects allocated to BANK2 (240 bytes)
   346   0054A4  EE02  F000         	lfsr	0,__pbssBANK2
   347   0054A8  0EF0               	movlw	240
   348   0054AA                     clear_0:
   349   0054AA  6AEE               	clrf	postinc0,c
   350   0054AC  06E8               	decf	wreg,f,c
   351   0054AE  E1FD               	bnz	clear_0
   352                           
   353                           ; Clear objects allocated to BANK1 (114 bytes)
   354   0054B0  EE01  F000         	lfsr	0,__pbssBANK1
   355   0054B4  0E72               	movlw	114
   356   0054B6                     clear_1:
   357   0054B6  6AEE               	clrf	postinc0,c
   358   0054B8  06E8               	decf	wreg,f,c
   359   0054BA  E1FD               	bnz	clear_1
   360                           
   361                           ; Clear objects allocated to BANK0 (31 bytes)
   362   0054BC  EE00  F0D3         	lfsr	0,__pbssBANK0
   363   0054C0  0E1F               	movlw	31
   364   0054C2                     clear_2:
   365   0054C2  6AEE               	clrf	postinc0,c
   366   0054C4  06E8               	decf	wreg,f,c
   367   0054C6  E1FD               	bnz	clear_2
   368   0054C8                     end_of_initialization:
   369                           	callstack 0
   370   0054C8                     __end_of__initialization:
   371                           	callstack 0
   372   0054C8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373   0054CA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374   0054CC  0100               	movlb	0
   375   0054CE  EF72  F01A         	goto	_main	;jump to C main() function
   376                           
   377                           	psect	bssBANK0
   378   0000D3                     __pbssBANK0:
   379                           	callstack 0
   380   0000D3                     	ds	12
   381   0000DF                     floorf@F526:
   382                           	callstack 0
   383   0000DF                     	ds	4
   384   0000E3                     ___fpclassifyf@F465:
   385                           	callstack 0
   386   0000E3                     	ds	4
   387   0000E7                     _width:
   388                           	callstack 0
   389   0000E7                     	ds	2
   390   0000E9                     _prec:
   391                           	callstack 0
   392   0000E9                     	ds	2
   393   0000EB                     _lost_count:
   394                           	callstack 0
   395   0000EB                     	ds	2
   396   0000ED                     _flags:
   397                           	callstack 0
   398   0000ED                     	ds	1
   399   0000EE                     _TxBufReadCnt:
   400                           	callstack 0
   401   0000EE                     	ds	1
   402   0000EF                     _TxBufWriteCnt:
   403                           	callstack 0
   404   0000EF                     	ds	1
   405   0000F0                     _RxBufReadCnt:
   406                           	callstack 0
   407   0000F0                     	ds	1
   408   0000F1                     _RxBufWriteCnt:
   409                           	callstack 0
   410   0000F1                     	ds	1
   411                           
   412                           	psect	dataBANK0
   413   0000F2                     __pdataBANK0:
   414                           	callstack 0
   415   0000F2                     _RunOneBlockTime:
   416                           	callstack 0
   417   0000F2                     	ds	2
   418   0000F4                     _Turn45Delay:
   419                           	callstack 0
   420   0000F4                     	ds	2
   421   0000F6                     _power:
   422                           	callstack 0
   423   0000F6                     	ds	2
   424                           
   425                           	psect	bssBANK1
   426   000100                     __pbssBANK1:
   427                           	callstack 0
   428   000100                     _EUSART4RXbuf:
   429                           	callstack 0
   430   000100                     	ds	20
   431   000114                     _lost_flag:
   432                           	callstack 0
   433   000114                     	ds	2
   434   000116                     _consecuitive:
   435                           	callstack 0
   436   000116                     	ds	2
   437   000118                     _prev_colour:
   438                           	callstack 0
   439   000118                     	ds	2
   440   00011A                     _WayBack:
   441                           	callstack 0
   442   00011A                     	ds	50
   443   00014C                     _rel:
   444                           	callstack 0
   445   00014C                     	ds	12
   446   000158                     _motorR:
   447                           	callstack 0
   448   000158                     	ds	9
   449   000161                     _motorL:
   450                           	callstack 0
   451   000161                     	ds	9
   452   00016A                     _vals:
   453                           	callstack 0
   454   00016A                     	ds	8
   455                           
   456                           	psect	dataBANK1
   457   0001D8                     __pdataBANK1:
   458                           	callstack 0
   459   0001D8                     _run_flag:
   460                           	callstack 0
   461   0001D8                     	ds	2
   462   0001DA                     _move_count:
   463                           	callstack 0
   464   0001DA                     	ds	2
   465                           
   466                           	psect	bssBANK2
   467   000200                     __pbssBANK2:
   468                           	callstack 0
   469   000200                     _EUSART4TXbuf:
   470                           	callstack 0
   471   000200                     	ds	60
   472   00023C                     _Time_forward:
   473                           	callstack 0
   474   00023C                     	ds	100
   475   0002A0                     _dbuf:
   476                           	callstack 0
   477   0002A0                     	ds	80
   478                           
   479                           	psect	cstackBANK1
   480   000172                     __pcstackBANK1:
   481                           	callstack 0
   482   000172                     main@buf:
   483                           	callstack 0
   484                           
   485                           ; 100 bytes @ 0x0
   486   000172                     	ds	100
   487   0001D6                     main@colour:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x64
   491   0001D6                     	ds	2
   492                           
   493                           	psect	cstackBANK0
   494   000060                     __pcstackBANK0:
   495                           	callstack 0
   496   000060                     efgtoa@fp:
   497                           	callstack 0
   498   000060                     colour_rel@L:
   499                           	callstack 0
   500   000060                     _Colour_decider$3283:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x0
   504   000060                     	ds	2
   505   000062                     efgtoa@f:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x2
   509   000062                     	ds	2
   510   000064                     Colour_decider@Cmax_i:
   511                           	callstack 0
   512   000064                     _colour_rel$3281:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x4
   516   000064                     	ds	2
   517   000066                     efgtoa@c:
   518                           	callstack 0
   519   000066                     Colour_decider@RGB_col:
   520                           	callstack 0
   521                           
   522                           ; 12 bytes @ 0x6
   523   000066                     	ds	1
   524   000067                     ??_efgtoa:
   525                           
   526                           ; 1 bytes @ 0x7
   527   000067                     	ds	1
   528   000068                     _colour_rel$3282:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x8
   532   000068                     	ds	1
   533   000069                     efgtoa@ne:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x9
   537   000069                     	ds	2
   538   00006B                     efgtoa@p:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xB
   542   00006B                     	ds	1
   543   00006C                     colour_rel@R:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0xC
   547   00006C                     	ds	1
   548   00006D                     efgtoa@t:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xD
   552   00006D                     	ds	2
   553   00006F                     _efgtoa$2906:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xF
   557   00006F                     	ds	1
   558   000070                     colour_rel@G:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x10
   562   000070                     	ds	1
   563   000071                     efgtoa@pp:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x11
   567   000071                     	ds	1
   568   000072                     efgtoa@mode:
   569                           	callstack 0
   570   000072                     Colour_decider@Cmax:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x12
   574   000072                     	ds	1
   575   000073                     efgtoa@nmode:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x13
   579   000073                     	ds	1
   580   000074                     efgtoa@d:
   581                           	callstack 0
   582   000074                     colour_rel@B:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x14
   586   000074                     	ds	2
   587   000076                     efgtoa@m:
   588                           	callstack 0
   589   000076                     Colour_decider@Cmin:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x16
   593   000076                     	ds	2
   594   000078                     efgtoa@e:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x18
   598   000078                     	ds	2
   599   00007A                     Colour_decider@i:
   600                           	callstack 0
   601   00007A                     efgtoa@w:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x1A
   605   00007A                     	ds	2
   606   00007C                     Colour_decider@Hue:
   607                           	callstack 0
   608   00007C                     efgtoa@ou:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x1C
   612   00007C                     	ds	4
   613   000080                     efgtoa@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x20
   617   000080                     	ds	2
   618   000082                     efgtoa@h:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x22
   622   000082                     	ds	4
   623   000086                     efgtoa@l:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x26
   627   000086                     	ds	4
   628   00008A                     efgtoa@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x2A
   632   00008A                     	ds	1
   633   00008B                     efgtoa@n:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2B
   637   00008B                     	ds	2
   638   00008D                     efgtoa@g:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x2D
   642   00008D                     	ds	4
   643   000091                     efgtoa@u:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x31
   647   000091                     	ds	4
   648   000095                     vfpfcnvrt@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x35
   652   000095                     	ds	2
   653   000097                     vfpfcnvrt@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x37
   657   000097                     	ds	2
   658   000099                     vfpfcnvrt@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x39
   662   000099                     	ds	2
   663   00009B                     ??_vfpfcnvrt:
   664                           
   665                           ; 1 bytes @ 0x3B
   666   00009B                     	ds	2
   667   00009D                     vfpfcnvrt@convarg:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x3D
   671   00009D                     	ds	8
   672   0000A5                     vfpfcnvrt@c:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x45
   676   0000A5                     	ds	1
   677   0000A6                     vfpfcnvrt@cp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x46
   681   0000A6                     	ds	2
   682   0000A8                     ?_vfprintf:
   683                           	callstack 0
   684   0000A8                     vfprintf@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x48
   688   0000A8                     	ds	2
   689   0000AA                     vfprintf@fmt:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4A
   693   0000AA                     	ds	2
   694   0000AC                     vfprintf@ap:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x4C
   698   0000AC                     	ds	2
   699   0000AE                     vfprintf@cfmt:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x4E
   703   0000AE                     	ds	2
   704   0000B0                     ?_sprintf:
   705                           	callstack 0
   706   0000B0                     sprintf@s:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x50
   710   0000B0                     	ds	2
   711   0000B2                     sprintf@fmt:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x52
   715   0000B2                     	ds	18
   716   0000C4                     sprintf@ap:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x64
   720   0000C4                     	ds	2
   721   0000C6                     sprintf@f:
   722                           	callstack 0
   723                           
   724                           ; 11 bytes @ 0x66
   725   0000C6                     	ds	11
   726   0000D1                     ??_main:
   727                           
   728                           ; 1 bytes @ 0x71
   729   0000D1                     	ds	2
   730                           
   731                           	psect	cstackCOMRAM
   732   000001                     __pcstackCOMRAM:
   733                           	callstack 0
   734   000001                     ??_getTMR0val:
   735   000001                     ??_I2C_2_Master_Idle:
   736   000001                     ?___fpclassifyf:
   737                           	callstack 0
   738   000001                     ?___wmul:
   739                           	callstack 0
   740   000001                     ?___fladd:
   741                           	callstack 0
   742   000001                     ?_labs:
   743                           	callstack 0
   744   000001                     ?___flneg:
   745                           	callstack 0
   746   000001                     ?___fltol:
   747                           	callstack 0
   748   000001                     ?___xxtofl:
   749                           	callstack 0
   750   000001                     ?___aodiv:
   751                           	callstack 0
   752   000001                     ?___aomod:
   753                           	callstack 0
   754   000001                     sendCharSerial4@charToSend:
   755                           	callstack 0
   756   000001                     initDCmotorsPWM@PWMperiod:
   757                           	callstack 0
   758   000001                     TurnDelay@Turn45Delay:
   759                           	callstack 0
   760   000001                     delayed_ms@time:
   761                           	callstack 0
   762   000001                     ___wmul@multiplier:
   763                           	callstack 0
   764   000001                     memcpy@d1:
   765                           	callstack 0
   766   000001                     fputc@c:
   767                           	callstack 0
   768   000001                     strcpy@dest:
   769                           	callstack 0
   770   000001                     ___flneg@f1:
   771                           	callstack 0
   772   000001                     ___fltol@f1:
   773                           	callstack 0
   774   000001                     ___fladd@b:
   775                           	callstack 0
   776   000001                     ___xxtofl@val:
   777                           	callstack 0
   778   000001                     ___fpclassifyf@x:
   779                           	callstack 0
   780   000001                     labs@a:
   781                           	callstack 0
   782   000001                     ___aodiv@dividend:
   783                           	callstack 0
   784   000001                     ___aomod@dividend:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x0
   788   000001                     	ds	1
   789   000002                     ??_I2C_2_Master_Read:
   790   000002                     I2C_2_Master_Write@data_byte:
   791                           	callstack 0
   792   000002                     sendStringSerial4@string:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x1
   796   000002                     	ds	1
   797   000003                     ??_delayed_ms:
   798   000003                     ??_TurnDelay:
   799   000003                     color_writetoaddr@value:
   800                           	callstack 0
   801   000003                     I2C_2_Master_Read@ack:
   802                           	callstack 0
   803   000003                     getTMR0val@temp:
   804                           	callstack 0
   805   000003                     ___wmul@multiplicand:
   806                           	callstack 0
   807   000003                     memcpy@s1:
   808                           	callstack 0
   809   000003                     fputc@fp:
   810                           	callstack 0
   811   000003                     strcpy@src:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2
   815   000003                     	ds	1
   816   000004                     color_writetoaddr@address:
   817                           	callstack 0
   818   000004                     I2C_2_Master_Read@tmp:
   819                           	callstack 0
   820   000004                     delayed_ms@i:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x3
   824   000004                     	ds	1
   825   000005                     ??_fputc:
   826   000005                     ??___fpclassifyf:
   827   000005                     ??_labs:
   828   000005                     ??_color_click_init:
   829   000005                     ??___fltol:
   830   000005                     ??___xxtofl:
   831   000005                     ?_color_read_lum:
   832                           	callstack 0
   833   000005                     ?_color_read_Red:
   834                           	callstack 0
   835   000005                     ?_color_read_Green:
   836                           	callstack 0
   837   000005                     ?_color_read_Blue:
   838                           	callstack 0
   839   000005                     getTMR0val@moving:
   840                           	callstack 0
   841   000005                     ___wmul@product:
   842                           	callstack 0
   843   000005                     memcpy@n:
   844                           	callstack 0
   845   000005                     strcpy@s:
   846                           	callstack 0
   847   000005                     ___fladd@a:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x4
   851   000005                     	ds	2
   852   000007                     ??_color_read_lum:
   853   000007                     ??_color_read_Red:
   854   000007                     ??_color_read_Green:
   855   000007                     ??_color_read_Blue:
   856   000007                     ?___lwdiv:
   857                           	callstack 0
   858   000007                     ___lwdiv@dividend:
   859                           	callstack 0
   860   000007                     memcpy@d:
   861                           	callstack 0
   862   000007                     strcpy@d:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x6
   866   000007                     	ds	2
   867   000009                     ??___fladd:
   868   000009                     ___fltol@sign1:
   869                           	callstack 0
   870   000009                     ___xxtofl@sign:
   871                           	callstack 0
   872   000009                     ___lwdiv@divisor:
   873                           	callstack 0
   874   000009                     ___fpclassifyf@e:
   875                           	callstack 0
   876   000009                     memcpy@s:
   877                           	callstack 0
   878   000009                     ___aodiv@divisor:
   879                           	callstack 0
   880   000009                     ___aomod@divisor:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x8
   884   000009                     	ds	1
   885   00000A                     ___fltol@exp1:
   886                           	callstack 0
   887   00000A                     ___xxtofl@exp:
   888                           	callstack 0
   889   00000A                     color_read_lum@tmp:
   890                           	callstack 0
   891   00000A                     color_read_Red@tmp:
   892                           	callstack 0
   893   00000A                     color_read_Green@tmp:
   894                           	callstack 0
   895   00000A                     color_read_Blue@tmp:
   896                           	callstack 0
   897   00000A                     fputs@s:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x9
   901   00000A                     	ds	1
   902   00000B                     memcpy@tmp:
   903                           	callstack 0
   904   00000B                     ___lwdiv@quotient:
   905                           	callstack 0
   906   00000B                     ___xxtofl@arg:
   907                           	callstack 0
   908   00000B                     ___fpclassifyf@u:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0xA
   912   00000B                     	ds	1
   913   00000C                     readColours@vals:
   914                           	callstack 0
   915   00000C                     fputs@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xB
   919   00000C                     	ds	1
   920   00000D                     ___lwdiv@counter:
   921                           	callstack 0
   922   00000D                     ___fladd@signs:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0xC
   926   00000D                     	ds	1
   927   00000E                     ___fladd@aexp:
   928                           	callstack 0
   929   00000E                     fputs@c:
   930                           	callstack 0
   931   00000E                     setMotorPWM@m:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xD
   935   00000E                     	ds	1
   936   00000F                     ___fladd@bexp:
   937                           	callstack 0
   938   00000F                     fputs@i:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0xE
   942   00000F                     	ds	1
   943   000010                     ??_setMotorPWM:
   944   000010                     ___fladd@grs:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0xF
   948   000010                     	ds	1
   949   000011                     ?___flmul:
   950                           	callstack 0
   951   000011                     ___aodiv@counter:
   952                           	callstack 0
   953   000011                     ___aomod@counter:
   954                           	callstack 0
   955   000011                     pad@fp:
   956                           	callstack 0
   957   000011                     ___flmul@b:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x10
   961   000011                     	ds	1
   962   000012                     setMotorPWM@posDuty:
   963                           	callstack 0
   964   000012                     ___aodiv@sign:
   965                           	callstack 0
   966   000012                     ___aomod@sign:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x11
   970   000012                     	ds	1
   971   000013                     ?_abs:
   972                           	callstack 0
   973   000013                     setMotorPWM@negDuty:
   974                           	callstack 0
   975   000013                     pad@buf:
   976                           	callstack 0
   977   000013                     abs@a:
   978                           	callstack 0
   979   000013                     ___aodiv@quotient:
   980                           	callstack 0
   981                           
   982                           ; 8 bytes @ 0x12
   983   000013                     	ds	1
   984   000014                     stop@mL:
   985                           	callstack 0
   986   000014                     turnLeft@mL:
   987                           	callstack 0
   988   000014                     turnRight@mL:
   989                           	callstack 0
   990   000014                     fullSpeedAhead@mL:
   991                           	callstack 0
   992   000014                     timed_forward@mL:
   993                           	callstack 0
   994   000014                     fullSpeedBack@mL:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x13
   998   000014                     	ds	1
   999   000015                     ??_abs:
  1000   000015                     pad@p:
  1001                           	callstack 0
  1002   000015                     ___flmul@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x14
  1006   000015                     	ds	1
  1007   000016                     stop@mR:
  1008                           	callstack 0
  1009   000016                     turnLeft@mR:
  1010                           	callstack 0
  1011   000016                     turnRight@mR:
  1012                           	callstack 0
  1013   000016                     fullSpeedAhead@mR:
  1014                           	callstack 0
  1015   000016                     timed_forward@mR:
  1016                           	callstack 0
  1017   000016                     fullSpeedBack@mR:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x15
  1021   000016                     	ds	1
  1022   000017                     ??_pad:
  1023                           
  1024                           ; 1 bytes @ 0x16
  1025   000017                     	ds	1
  1026   000018                     ??_fullSpeedAhead:
  1027   000018                     ??_stop:
  1028   000018                     ??_turnLeft:
  1029   000018                     ??_turnRight:
  1030   000018                     ??_fullSpeedBack:
  1031   000018                     timed_forward@time:
  1032                           	callstack 0
  1033   000018                     pad@i:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x17
  1037   000018                     	ds	1
  1038   000019                     ??___flmul:
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041   000019                     	ds	1
  1042   00001A                     ??_timed_forward:
  1043   00001A                     turnRight45@mL:
  1044                           	callstack 0
  1045   00001A                     turnLeft45@mL:
  1046                           	callstack 0
  1047   00001A                     reverseDetect@mL:
  1048                           	callstack 0
  1049   00001A                     reverseOneBlock@mL:
  1050                           	callstack 0
  1051   00001A                     ForwardOneBlock@mL:
  1052                           	callstack 0
  1053   00001A                     Forwardhalfblock@mL:
  1054                           	callstack 0
  1055   00001A                     quaterForward@mL:
  1056                           	callstack 0
  1057   00001A                     Backhalfblock@mL:
  1058                           	callstack 0
  1059   00001A                     pad@w:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x19
  1063   00001A                     	ds	2
  1064   00001C                     turnRight45@mR:
  1065                           	callstack 0
  1066   00001C                     turnLeft45@mR:
  1067                           	callstack 0
  1068   00001C                     reverseDetect@mR:
  1069                           	callstack 0
  1070   00001C                     reverseOneBlock@mR:
  1071                           	callstack 0
  1072   00001C                     ForwardOneBlock@mR:
  1073                           	callstack 0
  1074   00001C                     Forwardhalfblock@mR:
  1075                           	callstack 0
  1076   00001C                     quaterForward@mR:
  1077                           	callstack 0
  1078   00001C                     Backhalfblock@mR:
  1079                           	callstack 0
  1080   00001C                     dtoa@fp:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x1B
  1084   00001C                     	ds	1
  1085   00001D                     ___flmul@sign:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x1C
  1089   00001D                     	ds	1
  1090   00001E                     ??_Forwardhalfblock:
  1091   00001E                     ??_turnRight45:
  1092   00001E                     ??_turnLeft45:
  1093   00001E                     ??_reverseDetect:
  1094   00001E                     ??_reverseOneBlock:
  1095   00001E                     ??_ForwardOneBlock:
  1096   00001E                     ??_quaterForward:
  1097   00001E                     ??_Backhalfblock:
  1098   00001E                     ___flmul@grs:
  1099                           	callstack 0
  1100   00001E                     dtoa@d:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x1D
  1104   00001E                     	ds	2
  1105   000020                     RedMove@mL:
  1106                           	callstack 0
  1107   000020                     GreenMove@mL:
  1108                           	callstack 0
  1109   000020                     BlueMove@mL:
  1110                           	callstack 0
  1111   000020                     YellowMove@mL:
  1112                           	callstack 0
  1113   000020                     PinkMove@mL:
  1114                           	callstack 0
  1115   000020                     OrangeMove@mL:
  1116                           	callstack 0
  1117   000020                     LightBlueMove@mL:
  1118                           	callstack 0
  1119   000020                     RetryMove@mL:
  1120                           	callstack 0
  1121   000020                     ReverseYellow@mL:
  1122                           	callstack 0
  1123   000020                     ReversePink@mL:
  1124                           	callstack 0
  1125   000020                     ReverseOrangeMove@mL:
  1126                           	callstack 0
  1127   000020                     ReverseLightBlueMove@mL:
  1128                           	callstack 0
  1129   000020                     turnCalibration@mL:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x1F
  1133   000020                     	ds	2
  1134   000022                     ___flmul@aexp:
  1135                           	callstack 0
  1136   000022                     RedMove@mR:
  1137                           	callstack 0
  1138   000022                     GreenMove@mR:
  1139                           	callstack 0
  1140   000022                     BlueMove@mR:
  1141                           	callstack 0
  1142   000022                     YellowMove@mR:
  1143                           	callstack 0
  1144   000022                     PinkMove@mR:
  1145                           	callstack 0
  1146   000022                     OrangeMove@mR:
  1147                           	callstack 0
  1148   000022                     LightBlueMove@mR:
  1149                           	callstack 0
  1150   000022                     RetryMove@mR:
  1151                           	callstack 0
  1152   000022                     ReverseYellow@mR:
  1153                           	callstack 0
  1154   000022                     ReversePink@mR:
  1155                           	callstack 0
  1156   000022                     ReverseOrangeMove@mR:
  1157                           	callstack 0
  1158   000022                     ReverseLightBlueMove@mR:
  1159                           	callstack 0
  1160   000022                     turnCalibration@mR:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x21
  1164   000022                     	ds	1
  1165   000023                     ___flmul@bexp:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x22
  1169   000023                     	ds	1
  1170   000024                     ??_turnCalibration:
  1171   000024                     ??_RetryMove:
  1172   000024                     go_Home@WayBack:
  1173                           	callstack 0
  1174   000024                     ___flmul@prod:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x23
  1178   000024                     	ds	2
  1179   000026                     ??_dtoa:
  1180   000026                     go_Home@Time_forward:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x25
  1184   000026                     	ds	2
  1185   000028                     ??_go_Home:
  1186   000028                     ___flmul@temp:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x27
  1190   000028                     	ds	2
  1191   00002A                     ?___flsub:
  1192                           	callstack 0
  1193   00002A                     ___flge@ff1:
  1194                           	callstack 0
  1195   00002A                     ___flsub@b:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x29
  1199   00002A                     	ds	1
  1200   00002B                     go_Home@i:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x2A
  1204   00002B                     	ds	2
  1205   00002D                     colour_move@recognized_colour:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x2C
  1209   00002D                     	ds	1
  1210   00002E                     _dtoa$2875:
  1211                           	callstack 0
  1212   00002E                     ___flge@ff2:
  1213                           	callstack 0
  1214   00002E                     ___flsub@a:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x2D
  1218   00002E                     	ds	1
  1219   00002F                     
  1220                           ; 1 bytes @ 0x2E
  1221   00002F                     	ds	1
  1222   000030                     dtoa@p:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x2F
  1226   000030                     	ds	2
  1227   000032                     ??___flge:
  1228   000032                     ?___fldiv:
  1229                           	callstack 0
  1230   000032                     dtoa@w:
  1231                           	callstack 0
  1232   000032                     ___fleq@ff1:
  1233                           	callstack 0
  1234   000032                     ___fldiv@b:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x31
  1238   000032                     	ds	2
  1239   000034                     dtoa@n:
  1240                           	callstack 0
  1241                           
  1242                           ; 8 bytes @ 0x33
  1243   000034                     	ds	2
  1244   000036                     ___fleq@ff2:
  1245                           	callstack 0
  1246   000036                     ___fldiv@a:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x35
  1250   000036                     	ds	4
  1251   00003A                     ??___fldiv:
  1252   00003A                     ??___fleq:
  1253                           
  1254                           ; 1 bytes @ 0x39
  1255   00003A                     	ds	2
  1256   00003C                     dtoa@i:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x3B
  1260   00003C                     	ds	2
  1261   00003E                     dtoa@s:
  1262                           	callstack 0
  1263   00003E                     ___fldiv@rem:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x3D
  1267   00003E                     	ds	4
  1268   000042                     ___fldiv@sign:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x41
  1272   000042                     	ds	1
  1273   000043                     ___fldiv@new_exp:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x42
  1277   000043                     	ds	2
  1278   000045                     ___fldiv@grs:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x44
  1282   000045                     	ds	4
  1283   000049                     ___fldiv@bexp:
  1284                           	callstack 0
  1285                           
  1286                           ; 1 bytes @ 0x48
  1287   000049                     	ds	1
  1288   00004A                     ___fldiv@aexp:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x49
  1292   00004A                     	ds	1
  1293   00004B                     ?_Colour_decider:
  1294                           	callstack 0
  1295   00004B                     ?_floorf:
  1296                           	callstack 0
  1297   00004B                     colour_rel@vals:
  1298                           	callstack 0
  1299   00004B                     Colour_decider@vals:
  1300                           	callstack 0
  1301   00004B                     floorf@x:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x4A
  1305   00004B                     	ds	2
  1306   00004D                     colour_rel@rel:
  1307                           	callstack 0
  1308   00004D                     Colour_decider@rel:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x4C
  1312   00004D                     	ds	2
  1313   00004F                     ??_floorf:
  1314   00004F                     ??_Colour_decider:
  1315                           
  1316                           ; 1 bytes @ 0x4E
  1317   00004F                     	ds	6
  1318   000055                     floorf@m:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x54
  1322   000055                     	ds	4
  1323   000059                     floorf@e:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x58
  1327   000059                     	ds	2
  1328   00005B                     floorf@u:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x5A
  1332   00005B                     	ds	4
  1333   00005F                     
  1334                           ; 1 bytes @ 0x5E
  1335 ;;
  1336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1337 ;;
  1338 ;; *************** function _main *****************
  1339 ;; Defined at:
  1340 ;;		line 33 in file "main.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  colour          2  100[BANK1 ] int 
  1345 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;Total ram usage:      104 bytes
  1360 ;; Hardware stack levels required when called: 9
  1361 ;; This function calls:
  1362 ;;		_Buttons_init
  1363 ;;		_Colour_decider
  1364 ;;		_Forwardhalfblock
  1365 ;;		_I2C_2_Master_Init
  1366 ;;		_Interrupts_init
  1367 ;;		_LED_init
  1368 ;;		_Timer0_init
  1369 ;;		_color_click_init
  1370 ;;		_colour_move
  1371 ;;		_colour_rel
  1372 ;;		_fullSpeedAhead
  1373 ;;		_getTMR0val
  1374 ;;		_go_Home
  1375 ;;		_initDCmotorsPWM
  1376 ;;		_initUSART4
  1377 ;;		_readColours
  1378 ;;		_sendStringSerial4
  1379 ;;		_sprintf
  1380 ;;		_stop
  1381 ;;		_turnCalibration
  1382 ;; This function is called by:
  1383 ;;		Startup code after reset
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text0
  1388   0034E4                     __ptext0:
  1389                           	callstack 0
  1390   0034E4                     _main:
  1391                           	callstack 22
  1392   0034E4                     
  1393                           ;main.c: 34:     initUSART4();
  1394   0034E4  EC99  F030         	call	_initUSART4	;wreg free
  1395   0034E8                     
  1396                           ;main.c: 35:     Interrupts_init();
  1397   0034E8  ECBA  F030         	call	_Interrupts_init	;wreg free
  1398   0034EC                     
  1399                           ;main.c: 36:     color_click_init();
  1400   0034EC  EC9A  F02D         	call	_color_click_init	;wreg free
  1401   0034F0                     
  1402                           ;main.c: 37:     I2C_2_Master_Init();
  1403   0034F0  EC2A  F030         	call	_I2C_2_Master_Init	;wreg free
  1404   0034F4                     
  1405                           ;main.c: 38:     LED_init();
  1406   0034F4  EC53  F030         	call	_LED_init	;wreg free
  1407   0034F8                     
  1408                           ;main.c: 39:     Buttons_init();
  1409   0034F8  ECC0  F030         	call	_Buttons_init	;wreg free
  1410   0034FC                     
  1411                           ;main.c: 40:     initDCmotorsPWM(200);
  1412   0034FC  0E00               	movlw	0
  1413   0034FE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1414   003500  0EC8               	movlw	200
  1415   003502  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1416   003504  ECFB  F028         	call	_initDCmotorsPWM	;wreg free
  1417   003508                     
  1418                           ;main.c: 41:     Timer0_init();
  1419   003508  EC89  F030         	call	_Timer0_init	;wreg free
  1420   00350C                     
  1421                           ;main.c: 43:     motorL.power=0;
  1422   00350C  0E00               	movlw	0
  1423   00350E  0101               	movlb	1	; () banked
  1424   003510  6F61               	movwf	_motorL& (0+255),b
  1425   003512                     
  1426                           ; BSR set to: 1
  1427                           ;main.c: 44:     motorL.direction=1;
  1428   003512  0E01               	movlw	1
  1429   003514  6F62               	movwf	(_motorL+1)& (0+255),b
  1430   003516                     
  1431                           ; BSR set to: 1
  1432                           ;main.c: 45:     motorL.brakemode=1;
  1433   003516  0E01               	movlw	1
  1434   003518  6F63               	movwf	(_motorL+2)& (0+255),b
  1435   00351A                     
  1436                           ; BSR set to: 1
  1437                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1438   00351A  0EAA               	movlw	170
  1439   00351C  6F66               	movwf	(_motorL+5)& (0+255),b
  1440   00351E  0E0F               	movlw	15
  1441   003520  6F67               	movwf	(_motorL+6)& (0+255),b
  1442   003522                     
  1443                           ; BSR set to: 1
  1444                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1445   003522  0EA6               	movlw	166
  1446   003524  6F68               	movwf	(_motorL+7)& (0+255),b
  1447   003526  0E0F               	movlw	15
  1448   003528  6F69               	movwf	(_motorL+8)& (0+255),b
  1449   00352A                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 48:     motorL.PWMperiod=200;
  1452   00352A  0E00               	movlw	0
  1453   00352C  6F65               	movwf	(_motorL+4)& (0+255),b
  1454   00352E  0EC8               	movlw	200
  1455   003530  6F64               	movwf	(_motorL+3)& (0+255),b
  1456   003532                     
  1457                           ; BSR set to: 1
  1458                           ;main.c: 49:     motorR.power=0;
  1459   003532  0E00               	movlw	0
  1460   003534  6F58               	movwf	_motorR& (0+255),b
  1461   003536                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 50:     motorR.direction=1;
  1464   003536  0E01               	movlw	1
  1465   003538  6F59               	movwf	(_motorR+1)& (0+255),b
  1466   00353A                     
  1467                           ; BSR set to: 1
  1468                           ;main.c: 51:     motorR.brakemode=1;
  1469   00353A  0E01               	movlw	1
  1470   00353C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1471   00353E                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1474   00353E  0E25               	movlw	37
  1475   003540  6F5D               	movwf	(_motorR+5)& (0+255),b
  1476   003542  0E0F               	movlw	15
  1477   003544  6F5E               	movwf	(_motorR+6)& (0+255),b
  1478   003546                     
  1479                           ; BSR set to: 1
  1480                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1481   003546  0E21               	movlw	33
  1482   003548  6F5F               	movwf	(_motorR+7)& (0+255),b
  1483   00354A  0E0F               	movlw	15
  1484   00354C  6F60               	movwf	(_motorR+8)& (0+255),b
  1485   00354E                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 54:     motorR.PWMperiod=200;
  1488   00354E  0E00               	movlw	0
  1489   003550  6F5C               	movwf	(_motorR+4)& (0+255),b
  1490   003552  0EC8               	movlw	200
  1491   003554  6F5B               	movwf	(_motorR+3)& (0+255),b
  1492   003556                     
  1493                           ; BSR set to: 1
  1494                           ;main.c: 56:     char buf[100];;main.c: 59:     turnCalibration(&motorL,&motorR);
  1495   003556  0E61               	movlw	low _motorL
  1496   003558  6E20               	movwf	turnCalibration@mL^0,c
  1497   00355A  0E01               	movlw	high _motorL
  1498   00355C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1499   00355E  0E58               	movlw	low _motorR
  1500   003560  6E22               	movwf	turnCalibration@mR^0,c
  1501   003562  0E01               	movlw	high _motorR
  1502   003564  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1503   003566  EC74  F021         	call	_turnCalibration	;wreg free
  1504   00356A                     
  1505                           ;main.c: 61:     LATFbits.LATF0=0;
  1506   00356A  907E               	bcf	126,0,c	;volatile
  1507   00356C                     
  1508                           ;main.c: 62:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1509   00356C  0E52               	movlw	82
  1510   00356E  0100               	movlb	0	; () banked
  1511   003570  6FD2               	movwf	(??_main+1)& (0+255),b
  1512   003572  0E2B               	movlw	43
  1513   003574  6FD1               	movwf	??_main& (0+255),b
  1514   003576  0E00               	movlw	0
  1515   003578                     u5827:
  1516   003578  2EE8               	decfsz	wreg,f,c
  1517   00357A  D7FE               	bra	u5827
  1518   00357C  2FD1               	decfsz	??_main& (0+255),f,b
  1519   00357E  D7FC               	bra	u5827
  1520   003580  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1521   003582  D7FA               	bra	u5827
  1522   003584  F000               	nop	
  1523   003586                     l332:
  1524   003586  B48E               	btfsc	142,2,c	;volatile
  1525   003588  EFC8  F01A         	goto	u5691
  1526   00358C  EFCA  F01A         	goto	u5690
  1527   003590                     u5691:
  1528   003590  EFC3  F01A         	goto	l332
  1529   003594                     u5690:
  1530   003594                     
  1531                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1532   003594  0E52               	movlw	82
  1533   003596  0100               	movlb	0	; () banked
  1534   003598  6FD2               	movwf	(??_main+1)& (0+255),b
  1535   00359A  0E2B               	movlw	43
  1536   00359C  6FD1               	movwf	??_main& (0+255),b
  1537   00359E  0E00               	movlw	0
  1538   0035A0                     u5837:
  1539   0035A0  2EE8               	decfsz	wreg,f,c
  1540   0035A2  D7FE               	bra	u5837
  1541   0035A4  2FD1               	decfsz	??_main& (0+255),f,b
  1542   0035A6  D7FC               	bra	u5837
  1543   0035A8  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1544   0035AA  D7FA               	bra	u5837
  1545   0035AC  F000               	nop	
  1546   0035AE                     
  1547                           ;main.c: 68:     T0CON0bits.T0EN=1;
  1548   0035AE  8ED5               	bsf	213,7,c	;volatile
  1549                           
  1550                           ;main.c: 69:     while (run_flag)
  1551   0035B0  EFE0  F01B         	goto	l5918
  1552   0035B4                     l5862:
  1553                           
  1554                           ; BSR set to: 1
  1555                           ;main.c: 70:     {;main.c: 71:         consecuitive=0;
  1556   0035B4  0E00               	movlw	0
  1557   0035B6  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1558   0035B8  0E00               	movlw	0
  1559   0035BA  6F16               	movwf	_consecuitive& (0+255),b
  1560   0035BC                     
  1561                           ; BSR set to: 1
  1562                           ;main.c: 73:         fullSpeedAhead(&motorL,&motorR);
  1563   0035BC  0E61               	movlw	low _motorL
  1564   0035BE  6E14               	movwf	fullSpeedAhead@mL^0,c
  1565   0035C0  0E01               	movlw	high _motorL
  1566   0035C2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1567   0035C4  0E58               	movlw	low _motorR
  1568   0035C6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1569   0035C8  0E01               	movlw	high _motorR
  1570   0035CA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1571   0035CC  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  1572   0035D0                     
  1573                           ;main.c: 75:         readColours(&vals);
  1574   0035D0  0E6A               	movlw	low _vals
  1575   0035D2  6E0C               	movwf	readColours@vals^0,c
  1576   0035D4  0E01               	movlw	high _vals
  1577   0035D6  6E0D               	movwf	(readColours@vals+1)^0,c
  1578   0035D8  EC68  F02B         	call	_readColours	;wreg free
  1579   0035DC                     
  1580                           ;main.c: 78:         colour_rel(&vals, &rel);
  1581   0035DC  0E6A               	movlw	low _vals
  1582   0035DE  6E4B               	movwf	colour_rel@vals^0,c
  1583   0035E0  0E01               	movlw	high _vals
  1584   0035E2  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1585   0035E4  0E4C               	movlw	low _rel
  1586   0035E6  6E4D               	movwf	colour_rel@rel^0,c
  1587   0035E8  0E01               	movlw	high _rel
  1588   0035EA  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1589   0035EC  EC58  F017         	call	_colour_rel	;wreg free
  1590   0035F0                     
  1591                           ;main.c: 81:         if (vals.L>=500){
  1592   0035F0  0101               	movlb	1	; () banked
  1593   0035F2  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1594   0035F4  EF05  F01B         	goto	u5701
  1595   0035F8  0EF4               	movlw	244
  1596   0035FA  5D70               	subwf	(_vals+6)& (0+255),w,b
  1597   0035FC  0E01               	movlw	1
  1598   0035FE  5971               	subwfb	(_vals+7)& (0+255),w,b
  1599   003600  A0D8               	btfss	status,0,c
  1600   003602  EF05  F01B         	goto	u5701
  1601   003606  EF07  F01B         	goto	u5700
  1602   00360A                     u5701:
  1603   00360A  EFC6  F01B         	goto	l5910
  1604   00360E                     u5700:
  1605   00360E                     
  1606                           ; BSR set to: 1
  1607                           ;main.c: 82:             move_count++;
  1608   00360E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1609   003610  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1610   003612                     
  1611                           ; BSR set to: 1
  1612                           ;main.c: 83:             if (move_count>98){
  1613   003612  51DB               	movf	(_move_count+1)& (0+255),w,b	;volatile
  1614   003614  E109               	bnz	u5710
  1615   003616  0E63               	movlw	99
  1616   003618  5DDA               	subwf	_move_count& (0+255),w,b	;volatile
  1617   00361A  A0D8               	btfss	status,0,c
  1618   00361C  EF12  F01B         	goto	u5711
  1619   003620  EF14  F01B         	goto	u5710
  1620   003624                     u5711:
  1621   003624  EF22  F01B         	goto	l5880
  1622   003628                     u5710:
  1623   003628                     
  1624                           ; BSR set to: 1
  1625                           ;main.c: 84:                 getTMR0val();
  1626   003628  EC37  F02B         	call	_getTMR0val	;wreg free
  1627   00362C                     l5878:
  1628                           
  1629                           ;main.c: 85:                 go_Home(WayBack, Time_forward);
  1630   00362C  0E1A               	movlw	low _WayBack
  1631   00362E  6E24               	movwf	go_Home@WayBack^0,c
  1632   003630  0E01               	movlw	high _WayBack
  1633   003632  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1634   003634  0E3C               	movlw	low _Time_forward
  1635   003636  6E26               	movwf	go_Home@Time_forward^0,c
  1636   003638  0E02               	movlw	high _Time_forward
  1637   00363A  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1638   00363C  EC67  F01E         	call	_go_Home	;wreg free
  1639                           
  1640                           ;main.c: 86:             }
  1641   003640  EFE0  F01B         	goto	l5918
  1642   003644                     l5880:
  1643                           
  1644                           ; BSR set to: 1
  1645                           ;main.c: 88:                 getTMR0val();
  1646   003644  EC37  F02B         	call	_getTMR0val	;wreg free
  1647   003648                     
  1648                           ;main.c: 90:                 Forwardhalfblock(&motorL,&motorR);
  1649   003648  0E61               	movlw	low _motorL
  1650   00364A  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1651   00364C  0E01               	movlw	high _motorL
  1652   00364E  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1653   003650  0E58               	movlw	low _motorR
  1654   003652  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1655   003654  0E01               	movlw	high _motorR
  1656   003656  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1657   003658  ECF1  F02B         	call	_Forwardhalfblock	;wreg free
  1658   00365C                     
  1659                           ;main.c: 92:                 stop(&motorL, &motorR);
  1660   00365C  0E61               	movlw	low _motorL
  1661   00365E  6E14               	movwf	stop@mL^0,c
  1662   003660  0E01               	movlw	high _motorL
  1663   003662  6E15               	movwf	(stop@mL+1)^0,c
  1664   003664  0E58               	movlw	low _motorR
  1665   003666  6E16               	movwf	stop@mR^0,c
  1666   003668  0E01               	movlw	high _motorR
  1667   00366A  6E17               	movwf	(stop@mR+1)^0,c
  1668   00366C  EC3F  F029         	call	_stop	;wreg free
  1669                           
  1670                           ;main.c: 94:                 while (consecuitive<20){
  1671   003670  EF7E  F01B         	goto	l5902
  1672   003674                     l5886:
  1673                           
  1674                           ; BSR set to: 1
  1675                           ;main.c: 95:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1676   003674  0E09               	movlw	9
  1677   003676  0100               	movlb	0	; () banked
  1678   003678  6FD2               	movwf	(??_main+1)& (0+255),b
  1679   00367A  0E1E               	movlw	30
  1680   00367C  6FD1               	movwf	??_main& (0+255),b
  1681   00367E  0EE4               	movlw	228
  1682   003680                     u5847:
  1683   003680  2EE8               	decfsz	wreg,f,c
  1684   003682  D7FE               	bra	u5847
  1685   003684  2FD1               	decfsz	??_main& (0+255),f,b
  1686   003686  D7FC               	bra	u5847
  1687   003688  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1688   00368A  D7FA               	bra	u5847
  1689   00368C  F000               	nop	
  1690   00368E                     
  1691                           ;main.c: 96:                     readColours(&vals);
  1692   00368E  0E6A               	movlw	low _vals
  1693   003690  6E0C               	movwf	readColours@vals^0,c
  1694   003692  0E01               	movlw	high _vals
  1695   003694  6E0D               	movwf	(readColours@vals+1)^0,c
  1696   003696  EC68  F02B         	call	_readColours	;wreg free
  1697   00369A                     
  1698                           ;main.c: 97:                     colour_rel(&vals, &rel);
  1699   00369A  0E6A               	movlw	low _vals
  1700   00369C  6E4B               	movwf	colour_rel@vals^0,c
  1701   00369E  0E01               	movlw	high _vals
  1702   0036A0  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1703   0036A2  0E4C               	movlw	low _rel
  1704   0036A4  6E4D               	movwf	colour_rel@rel^0,c
  1705   0036A6  0E01               	movlw	high _rel
  1706   0036A8  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1707   0036AA  EC58  F017         	call	_colour_rel	;wreg free
  1708   0036AE                     
  1709                           ;main.c: 98:                     int colour = Colour_decider(&vals, &rel);
  1710   0036AE  0E6A               	movlw	low _vals
  1711   0036B0  6E4B               	movwf	Colour_decider@vals^0,c
  1712   0036B2  0E01               	movlw	high _vals
  1713   0036B4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1714   0036B6  0E4C               	movlw	low _rel
  1715   0036B8  6E4D               	movwf	Colour_decider@rel^0,c
  1716   0036BA  0E01               	movlw	high _rel
  1717   0036BC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1718   0036BE  EC1C  F00C         	call	_Colour_decider	;wreg free
  1719   0036C2  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1720   0036C6  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1721   0036CA                     
  1722                           ;main.c: 99:                     if (colour==prev_colour){
  1723   0036CA  0101               	movlb	1	; () banked
  1724   0036CC  5118               	movf	_prev_colour& (0+255),w,b
  1725   0036CE  19D6               	xorwf	main@colour& (0+255),w,b
  1726   0036D0  E107               	bnz	u5721
  1727   0036D2  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1728   0036D4  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1729   0036D6  A4D8               	btfss	status,2,c
  1730   0036D8  EF70  F01B         	goto	u5721
  1731   0036DC  EF72  F01B         	goto	u5720
  1732   0036E0                     u5721:
  1733   0036E0  EF76  F01B         	goto	l5898
  1734   0036E4                     u5720:
  1735   0036E4                     
  1736                           ; BSR set to: 1
  1737                           ;main.c: 100:                         consecuitive++;
  1738   0036E4  4B16               	infsnz	_consecuitive& (0+255),f,b
  1739   0036E6  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1740                           
  1741                           ;main.c: 101:                     }
  1742   0036E8  EF7A  F01B         	goto	l5900
  1743   0036EC                     l5898:
  1744                           
  1745                           ; BSR set to: 1
  1746                           ;main.c: 103:                         consecuitive=0;
  1747   0036EC  0E00               	movlw	0
  1748   0036EE  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1749   0036F0  0E00               	movlw	0
  1750   0036F2  6F16               	movwf	_consecuitive& (0+255),b
  1751   0036F4                     l5900:
  1752                           
  1753                           ; BSR set to: 1
  1754                           ;main.c: 105:                     prev_colour=colour;
  1755   0036F4  C1D6  F118         	movff	main@colour,_prev_colour
  1756   0036F8  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1757   0036FC                     l5902:
  1758                           
  1759                           ;main.c: 94:                 while (consecuitive<20){
  1760   0036FC  0101               	movlb	1	; () banked
  1761   0036FE  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1762   003700  EF8B  F01B         	goto	u5731
  1763   003704  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1764   003706  E109               	bnz	u5730
  1765   003708  0E14               	movlw	20
  1766   00370A  5D16               	subwf	_consecuitive& (0+255),w,b
  1767   00370C  A0D8               	btfss	status,0,c
  1768   00370E  EF8B  F01B         	goto	u5731
  1769   003712  EF8D  F01B         	goto	u5730
  1770   003716                     u5731:
  1771   003716  EF3A  F01B         	goto	l5886
  1772   00371A                     u5730:
  1773   00371A                     
  1774                           ; BSR set to: 1
  1775                           ;main.c: 109:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=
      +                          %d \r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1776   00371A  0E72               	movlw	low main@buf
  1777   00371C  0100               	movlb	0	; () banked
  1778   00371E  6FB0               	movwf	sprintf@s& (0+255),b
  1779   003720  0E01               	movlw	high main@buf
  1780   003722  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1781   003724  0E01               	movlw	low STR_1
  1782   003726  6FB2               	movwf	sprintf@fmt& (0+255),b
  1783   003728  0E0E               	movlw	high STR_1
  1784   00372A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1785   00372C  C14C  F0B4         	movff	_rel,?_sprintf+4
  1786   003730  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1787   003734  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1788   003738  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1789   00373C  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1790   003740  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1791   003744  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1792   003748  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1793   00374C  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1794   003750  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1795   003754  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1796   003758  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1797   00375C  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1798   003760  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1799   003764  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1800   003768  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1801   00376C  ECCD  F02C         	call	_sprintf	;wreg free
  1802   003770                     
  1803                           ;main.c: 110:                 sendStringSerial4(buf);
  1804   003770  0E72               	movlw	low main@buf
  1805   003772  6E02               	movwf	sendStringSerial4@string^0,c
  1806   003774  0E01               	movlw	high main@buf
  1807   003776  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1808   003778  EC12  F030         	call	_sendStringSerial4	;wreg free
  1809   00377C                     
  1810                           ;main.c: 112:                 colour_move (prev_colour);
  1811   00377C  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1812   003780  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1813   003784  EC2B  F01D         	call	_colour_move	;wreg free
  1814   003788  EFE0  F01B         	goto	l5918
  1815   00378C                     l5910:
  1816                           
  1817                           ; BSR set to: 1
  1818   00378C  5114               	movf	_lost_flag& (0+255),w,b
  1819   00378E  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1820   003790  B4D8               	btfsc	status,2,c
  1821   003792  EFCD  F01B         	goto	u5741
  1822   003796  EFCF  F01B         	goto	u5740
  1823   00379A                     u5741:
  1824   00379A  EFE0  F01B         	goto	l5918
  1825   00379E                     u5740:
  1826   00379E                     
  1827                           ; BSR set to: 1
  1828                           ;main.c: 115:             move_count++;
  1829   00379E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1830   0037A0  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1831   0037A2                     
  1832                           ; BSR set to: 1
  1833                           ;main.c: 116:             Time_forward[move_count]=65535;
  1834   0037A2  90D8               	bcf	status,0,c
  1835   0037A4  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1836   0037A6  6ED9               	movwf	fsr2l,c
  1837   0037A8  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1838   0037AA  6EDA               	movwf	fsr2h,c
  1839   0037AC  0E3C               	movlw	low _Time_forward
  1840   0037AE  26D9               	addwf	fsr2l,f,c
  1841   0037B0  0E02               	movlw	high _Time_forward
  1842   0037B2  22DA               	addwfc	fsr2h,f,c
  1843   0037B4  0EFF               	movlw	255
  1844   0037B6  6EDE               	movwf	postinc2,c
  1845   0037B8  0EFF               	movlw	255
  1846   0037BA  6EDD               	movwf	postdec2,c
  1847   0037BC  EF16  F01B         	goto	l5878
  1848   0037C0                     l5918:
  1849                           
  1850                           ;main.c: 69:     while (run_flag)
  1851   0037C0  0101               	movlb	1	; () banked
  1852   0037C2  51D8               	movf	_run_flag& (0+255),w,b
  1853   0037C4  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1854   0037C6  A4D8               	btfss	status,2,c
  1855   0037C8  EFE8  F01B         	goto	u5751
  1856   0037CC  EFEA  F01B         	goto	u5750
  1857   0037D0                     u5751:
  1858   0037D0  EFDA  F01A         	goto	l5862
  1859   0037D4                     u5750:
  1860   0037D4                     
  1861                           ; BSR set to: 1
  1862   0037D4  EF1A  F000         	goto	start
  1863   0037D8                     __end_of_main:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _turnCalibration *****************
  1867 ;; Defined at:
  1868 ;;		line 392 in file "dc_motor.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1871 ;;		 -> motorL(9), 
  1872 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1873 ;;		 -> motorR(9), 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 5
  1892 ;; This function calls:
  1893 ;;		_turnLeft45
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text1
  1900   0042E8                     __ptext1:
  1901                           	callstack 0
  1902   0042E8                     _turnCalibration:
  1903                           	callstack 25
  1904   0042E8                     
  1905                           ;dc_motor.c: 393:     LATFbits.LATF0=1;
  1906   0042E8  807E               	bsf	126,0,c	;volatile
  1907   0042EA                     
  1908                           ;dc_motor.c: 394:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1909   0042EA  0E52               	movlw	82
  1910   0042EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  1911   0042EE  0E2B               	movlw	43
  1912   0042F0  6E24               	movwf	??_turnCalibration^0,c
  1913   0042F2  0E00               	movlw	0
  1914   0042F4                     u5857:
  1915   0042F4  2EE8               	decfsz	wreg,f,c
  1916   0042F6  D7FE               	bra	u5857
  1917   0042F8  2E24               	decfsz	??_turnCalibration^0,f,c
  1918   0042FA  D7FC               	bra	u5857
  1919   0042FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1920   0042FE  D7FA               	bra	u5857
  1921   004300  D000               	nop2	
  1922                           
  1923                           ;dc_motor.c: 396:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1924   004302  EF2E  F022         	goto	l5672
  1925   004306                     l543:
  1926                           
  1927                           ;dc_motor.c: 397:         LATDbits.LATD3=1;
  1928   004306  867C               	bsf	124,3,c	;volatile
  1929   004308                     
  1930                           ;dc_motor.c: 399:         turnLeft45(&motorL, &motorR);
  1931   004308  0E61               	movlw	low _motorL
  1932   00430A  6E1A               	movwf	turnLeft45@mL^0,c
  1933   00430C  0E01               	movlw	high _motorL
  1934   00430E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1935   004310  0E58               	movlw	low _motorR
  1936   004312  6E1C               	movwf	turnLeft45@mR^0,c
  1937   004314  0E01               	movlw	high _motorR
  1938   004316  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1939   004318  ECB2  F02E         	call	_turnLeft45	;wreg free
  1940                           
  1941                           ;dc_motor.c: 400:         turnLeft45(&motorL, &motorR);
  1942   00431C  0E61               	movlw	low _motorL
  1943   00431E  6E1A               	movwf	turnLeft45@mL^0,c
  1944   004320  0E01               	movlw	high _motorL
  1945   004322  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1946   004324  0E58               	movlw	low _motorR
  1947   004326  6E1C               	movwf	turnLeft45@mR^0,c
  1948   004328  0E01               	movlw	high _motorR
  1949   00432A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1950   00432C  ECB2  F02E         	call	_turnLeft45	;wreg free
  1951                           
  1952                           ;dc_motor.c: 401:         turnLeft45(&motorL, &motorR);
  1953   004330  0E61               	movlw	low _motorL
  1954   004332  6E1A               	movwf	turnLeft45@mL^0,c
  1955   004334  0E01               	movlw	high _motorL
  1956   004336  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1957   004338  0E58               	movlw	low _motorR
  1958   00433A  6E1C               	movwf	turnLeft45@mR^0,c
  1959   00433C  0E01               	movlw	high _motorR
  1960   00433E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1961   004340  ECB2  F02E         	call	_turnLeft45	;wreg free
  1962                           
  1963                           ;dc_motor.c: 402:         turnLeft45(&motorL, &motorR);
  1964   004344  0E61               	movlw	low _motorL
  1965   004346  6E1A               	movwf	turnLeft45@mL^0,c
  1966   004348  0E01               	movlw	high _motorL
  1967   00434A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1968   00434C  0E58               	movlw	low _motorR
  1969   00434E  6E1C               	movwf	turnLeft45@mR^0,c
  1970   004350  0E01               	movlw	high _motorR
  1971   004352  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1972   004354  ECB2  F02E         	call	_turnLeft45	;wreg free
  1973                           
  1974                           ;dc_motor.c: 404:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1975   004358  EF13  F022         	goto	l5666
  1976   00435C                     l545:
  1977                           
  1978                           ;dc_motor.c: 407:               LATDbits.LATD4=1;
  1979   00435C  887C               	bsf	124,4,c	;volatile
  1980   00435E                     
  1981                           ;dc_motor.c: 408:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1982   00435E  0EA3               	movlw	163
  1983   004360  6E25               	movwf	(??_turnCalibration+1)^0,c
  1984   004362  0E57               	movlw	87
  1985   004364  6E24               	movwf	??_turnCalibration^0,c
  1986   004366  0E02               	movlw	2
  1987   004368                     u5867:
  1988   004368  2EE8               	decfsz	wreg,f,c
  1989   00436A  D7FE               	bra	u5867
  1990   00436C  2E24               	decfsz	??_turnCalibration^0,f,c
  1991   00436E  D7FC               	bra	u5867
  1992   004370  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1993   004372  D7FA               	bra	u5867
  1994   004374  D000               	nop2	
  1995   004376                     
  1996                           ;dc_motor.c: 409:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1997   004376  B68E               	btfsc	142,3,c	;volatile
  1998   004378  EFC0  F021         	goto	u5491
  1999   00437C  EFC2  F021         	goto	u5490
  2000   004380                     u5491:
  2001   004380  EFDB  F021         	goto	l546
  2002   004384                     u5490:
  2003   004384  B48E               	btfsc	142,2,c	;volatile
  2004   004386  EFC7  F021         	goto	u5501
  2005   00438A  EFC9  F021         	goto	u5500
  2006   00438E                     u5501:
  2007   00438E  EFDB  F021         	goto	l546
  2008   004392                     u5500:
  2009   004392                     
  2010                           ;dc_motor.c: 410:                 LATHbits.LATH3=1;
  2011   004392  8680               	bsf	128,3,c	;volatile
  2012                           
  2013                           ;dc_motor.c: 411:                 LATDbits.LATD7=1;
  2014   004394  8E7C               	bsf	124,7,c	;volatile
  2015   004396                     
  2016                           ;dc_motor.c: 412:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2017   004396  0E52               	movlw	82
  2018   004398  6E25               	movwf	(??_turnCalibration+1)^0,c
  2019   00439A  0E2B               	movlw	43
  2020   00439C  6E24               	movwf	??_turnCalibration^0,c
  2021   00439E  0E00               	movlw	0
  2022   0043A0                     u5877:
  2023   0043A0  2EE8               	decfsz	wreg,f,c
  2024   0043A2  D7FE               	bra	u5877
  2025   0043A4  2E24               	decfsz	??_turnCalibration^0,f,c
  2026   0043A6  D7FC               	bra	u5877
  2027   0043A8  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2028   0043AA  D7FA               	bra	u5877
  2029   0043AC  D000               	nop2	
  2030   0043AE                     
  2031                           ;dc_motor.c: 413:                 LATHbits.LATH3=0;
  2032   0043AE  9680               	bcf	128,3,c	;volatile
  2033   0043B0                     
  2034                           ;dc_motor.c: 414:                 LATDbits.LATD7=0;
  2035   0043B0  9E7C               	bcf	124,7,c	;volatile
  2036                           
  2037                           ;dc_motor.c: 415:             }
  2038   0043B2  EF13  F022         	goto	l5666
  2039   0043B6                     l546:
  2040   0043B6  B68E               	btfsc	142,3,c	;volatile
  2041   0043B8  EFE0  F021         	goto	u5511
  2042   0043BC  EFE2  F021         	goto	u5510
  2043   0043C0                     u5511:
  2044   0043C0  EFF7  F021         	goto	l548
  2045   0043C4                     u5510:
  2046   0043C4                     
  2047                           ;dc_motor.c: 418:                 Turn45Delay+=10;
  2048   0043C4  0E0A               	movlw	10
  2049   0043C6  0100               	movlb	0	; () banked
  2050   0043C8  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2051   0043CA  0E00               	movlw	0
  2052   0043CC  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2053   0043CE                     
  2054                           ; BSR set to: 0
  2055                           ;dc_motor.c: 419:                 LATHbits.LATH3=1;
  2056   0043CE  8680               	bsf	128,3,c	;volatile
  2057   0043D0                     
  2058                           ; BSR set to: 0
  2059                           ;dc_motor.c: 420:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2060   0043D0  0E52               	movlw	82
  2061   0043D2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2062   0043D4  0E2B               	movlw	43
  2063   0043D6  6E24               	movwf	??_turnCalibration^0,c
  2064   0043D8  0E00               	movlw	0
  2065   0043DA                     u5887:
  2066   0043DA  2EE8               	decfsz	wreg,f,c
  2067   0043DC  D7FE               	bra	u5887
  2068   0043DE  2E24               	decfsz	??_turnCalibration^0,f,c
  2069   0043E0  D7FC               	bra	u5887
  2070   0043E2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2071   0043E4  D7FA               	bra	u5887
  2072   0043E6  D000               	nop2	
  2073   0043E8                     
  2074                           ;dc_motor.c: 421:                 LATHbits.LATH3=0;
  2075   0043E8  9680               	bcf	128,3,c	;volatile
  2076                           
  2077                           ;dc_motor.c: 422:             }
  2078   0043EA  EF13  F022         	goto	l5666
  2079   0043EE                     l548:
  2080   0043EE  B48E               	btfsc	142,2,c	;volatile
  2081   0043F0  EFFC  F021         	goto	u5521
  2082   0043F4  EFFE  F021         	goto	u5520
  2083   0043F8                     u5521:
  2084   0043F8  EF13  F022         	goto	l547
  2085   0043FC                     u5520:
  2086   0043FC                     
  2087                           ;dc_motor.c: 425:                 Turn45Delay-=10;
  2088   0043FC  0100               	movlb	0	; () banked
  2089   0043FE  0EF6               	movlw	246
  2090   004400  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2091   004402  0EFF               	movlw	255
  2092   004404  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2093   004406                     
  2094                           ; BSR set to: 0
  2095                           ;dc_motor.c: 426:                 LATDbits.LATD7=1;
  2096   004406  8E7C               	bsf	124,7,c	;volatile
  2097   004408                     
  2098                           ; BSR set to: 0
  2099                           ;dc_motor.c: 427:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2100   004408  0E52               	movlw	82
  2101   00440A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2102   00440C  0E2B               	movlw	43
  2103   00440E  6E24               	movwf	??_turnCalibration^0,c
  2104   004410  0E00               	movlw	0
  2105   004412                     u5897:
  2106   004412  2EE8               	decfsz	wreg,f,c
  2107   004414  D7FE               	bra	u5897
  2108   004416  2E24               	decfsz	??_turnCalibration^0,f,c
  2109   004418  D7FC               	bra	u5897
  2110   00441A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2111   00441C  D7FA               	bra	u5897
  2112   00441E  D000               	nop2	
  2113   004420                     
  2114                           ;dc_motor.c: 428:                 LATDbits.LATD7=0;
  2115   004420  9E7C               	bcf	124,7,c	;volatile
  2116   004422  EF13  F022         	goto	l5666
  2117   004426                     l547:
  2118   004426                     l5666:
  2119                           
  2120                           ;dc_motor.c: 404:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2121   004426  A48E               	btfss	142,2,c	;volatile
  2122   004428  EF18  F022         	goto	u5531
  2123   00442C  EF1A  F022         	goto	u5530
  2124   004430                     u5531:
  2125   004430  EF21  F022         	goto	l553
  2126   004434                     u5530:
  2127   004434  B68E               	btfsc	142,3,c	;volatile
  2128   004436  EF1F  F022         	goto	u5541
  2129   00443A  EF21  F022         	goto	u5540
  2130   00443E                     u5541:
  2131   00443E  EFAE  F021         	goto	l545
  2132   004442                     u5540:
  2133   004442                     l553:
  2134                           
  2135                           ;dc_motor.c: 431:         LATDbits.LATD4=0;
  2136   004442  987C               	bcf	124,4,c	;volatile
  2137   004444                     
  2138                           ;dc_motor.c: 432:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2139   004444  0EA3               	movlw	163
  2140   004446  6E25               	movwf	(??_turnCalibration+1)^0,c
  2141   004448  0E57               	movlw	87
  2142   00444A  6E24               	movwf	??_turnCalibration^0,c
  2143   00444C  0E02               	movlw	2
  2144   00444E                     u5907:
  2145   00444E  2EE8               	decfsz	wreg,f,c
  2146   004450  D7FE               	bra	u5907
  2147   004452  2E24               	decfsz	??_turnCalibration^0,f,c
  2148   004454  D7FC               	bra	u5907
  2149   004456  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2150   004458  D7FA               	bra	u5907
  2151   00445A  D000               	nop2	
  2152   00445C                     l5672:
  2153                           
  2154                           ;dc_motor.c: 396:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2155   00445C  B48E               	btfsc	142,2,c	;volatile
  2156   00445E  EF33  F022         	goto	u5551
  2157   004462  EF35  F022         	goto	u5550
  2158   004466                     u5551:
  2159   004466  EF83  F021         	goto	l543
  2160   00446A                     u5550:
  2161   00446A  B68E               	btfsc	142,3,c	;volatile
  2162   00446C  EF3A  F022         	goto	u5561
  2163   004470  EF3C  F022         	goto	u5560
  2164   004474                     u5561:
  2165   004474  EF83  F021         	goto	l543
  2166   004478                     u5560:
  2167   004478                     
  2168                           ;dc_motor.c: 434:     LATDbits.LATD3=0;
  2169   004478  967C               	bcf	124,3,c	;volatile
  2170   00447A                     
  2171                           ;dc_motor.c: 435:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2172   00447A  0EA3               	movlw	163
  2173   00447C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2174   00447E  0E57               	movlw	87
  2175   004480  6E24               	movwf	??_turnCalibration^0,c
  2176   004482  0E02               	movlw	2
  2177   004484                     u5917:
  2178   004484  2EE8               	decfsz	wreg,f,c
  2179   004486  D7FE               	bra	u5917
  2180   004488  2E24               	decfsz	??_turnCalibration^0,f,c
  2181   00448A  D7FC               	bra	u5917
  2182   00448C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2183   00448E  D7FA               	bra	u5917
  2184   004490  D000               	nop2	
  2185   004492  0012               	return		;funcret
  2186   004494                     __end_of_turnCalibration:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _sprintf *****************
  2190 ;; Defined at:
  2191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2194 ;;		 -> main@buf(100), 
  2195 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2196 ;;		 -> STR_1(51), 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2199 ;;  ap              2  100[BANK0 ] PTR void [1]
  2200 ;;		 -> ?_sprintf(2), 
  2201 ;;  ret             2    0        int 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  2   80[BANK0 ] int 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2211 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;Total ram usage:       33 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 8
  2218 ;; This function calls:
  2219 ;;		_vfprintf
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text2
  2226   00599A                     __ptext2:
  2227                           	callstack 0
  2228   00599A                     _sprintf:
  2229                           	callstack 22
  2230   00599A  0EB4               	movlw	low (?_sprintf+4)
  2231   00599C  0100               	movlb	0	; () banked
  2232   00599E  6FC4               	movwf	sprintf@ap& (0+255),b
  2233   0059A0  0E00               	movlw	high (?_sprintf+4)
  2234   0059A2  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2235   0059A4  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2236   0059A8  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2237   0059AC                     
  2238                           ; BSR set to: 0
  2239   0059AC  0E00               	movlw	0
  2240   0059AE  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2241   0059B0  0E00               	movlw	0
  2242   0059B2  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2243   0059B4                     
  2244                           ; BSR set to: 0
  2245   0059B4  0E00               	movlw	0
  2246   0059B6  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2247   0059B8  0E00               	movlw	0
  2248   0059BA  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2249   0059BC                     
  2250                           ; BSR set to: 0
  2251   0059BC  0EC6               	movlw	low sprintf@f
  2252   0059BE  6FA8               	movwf	vfprintf@fp& (0+255),b
  2253   0059C0  0E00               	movlw	high sprintf@f
  2254   0059C2  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2255   0059C4  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2256   0059C8  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2257   0059CC  0EC4               	movlw	low sprintf@ap
  2258   0059CE  6FAC               	movwf	vfprintf@ap& (0+255),b
  2259   0059D0  0E00               	movlw	high sprintf@ap
  2260   0059D2  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2261   0059D4  ECA2  F02C         	call	_vfprintf	;wreg free
  2262   0059D8  0100               	movlb	0	; () banked
  2263   0059DA  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2264   0059DC  25B0               	addwf	sprintf@s& (0+255),w,b
  2265   0059DE  6ED9               	movwf	fsr2l,c
  2266   0059E0  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2267   0059E2  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2268   0059E4  6EDA               	movwf	fsr2h,c
  2269   0059E6  0E00               	movlw	0
  2270   0059E8  6EDF               	movwf	indf2,c
  2271   0059EA                     
  2272                           ; BSR set to: 0
  2273   0059EA  0012               	return		;funcret
  2274   0059EC                     __end_of_sprintf:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _vfprintf *****************
  2278 ;; Defined at:
  2279 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2282 ;;		 -> sprintf@f(11), 
  2283 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2284 ;;		 -> STR_1(51), 
  2285 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2286 ;;		 -> sprintf@ap(2), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2289 ;;		 -> STR_1(51), 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2   72[BANK0 ] int 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;Total ram usage:        8 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 7
  2306 ;; This function calls:
  2307 ;;		_vfpfcnvrt
  2308 ;; This function is called by:
  2309 ;;		_sprintf
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text3
  2314   005944                     __ptext3:
  2315                           	callstack 0
  2316   005944                     _vfprintf:
  2317                           	callstack 22
  2318   005944                     
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2320   005944  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2321   005948  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2324   00594C  EFB7  F02C         	goto	l5356
  2325   005950                     l5354:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2328   005950  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2329   005954  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2330   005958  0EAE               	movlw	low vfprintf@cfmt
  2331   00595A  0100               	movlb	0	; () banked
  2332   00595C  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2333   00595E  0E00               	movlw	high vfprintf@cfmt
  2334   005960  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2335   005962  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2336   005966  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2337   00596A  ECEF  F018         	call	_vfpfcnvrt	;wreg free
  2338   00596E                     l5356:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2341   00596E  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2342   005972  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2343   005976                     	if	0	;tblptru may be non-zero
  2344   005976                     	endif
  2345   005976                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2346   005976  0E00               	movlw	low (__mediumconst shr (0+16))
  2347   005978  6EF8               	movwf	tblptru,c
  2348   00597A                     	endif
  2349   00597A  0008               	tblrd		*
  2350   00597C  50F5               	movf	tablat,w,c
  2351   00597E  0900               	iorlw	0
  2352   005980  A4D8               	btfss	status,2,c
  2353   005982  EFC5  F02C         	goto	u5181
  2354   005986  EFC7  F02C         	goto	u5180
  2355   00598A                     u5181:
  2356   00598A  EFA8  F02C         	goto	l5354
  2357   00598E                     u5180:
  2358   00598E                     
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2360   00598E  0E00               	movlw	0
  2361   005990  0100               	movlb	0	; () banked
  2362   005992  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2363   005994  0E00               	movlw	0
  2364   005996  6FA8               	movwf	?_vfprintf& (0+255),b
  2365   005998                     
  2366                           ; BSR set to: 0
  2367   005998  0012               	return		;funcret
  2368   00599A                     __end_of_vfprintf:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _vfpfcnvrt *****************
  2372 ;; Defined at:
  2373 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2376 ;;		 -> sprintf@f(11), 
  2377 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2378 ;;		 -> vfprintf@cfmt(2), 
  2379 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2380 ;;		 -> sprintf@ap(2), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  convarg         8   61[BANK0 ] struct .
  2383 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2384 ;;		 -> STR_1(51), 
  2385 ;;  i               2    0        int 
  2386 ;;  done            2    0        int 
  2387 ;;  c               1   69[BANK0 ] unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2397 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;Total ram usage:       19 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 6
  2404 ;; This function calls:
  2405 ;;		_dtoa
  2406 ;;		_efgtoa
  2407 ;;		_fputc
  2408 ;; This function is called by:
  2409 ;;		_vfprintf
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text4
  2414   0031DE                     __ptext4:
  2415                           	callstack 0
  2416   0031DE                     _vfpfcnvrt:
  2417                           	callstack 22
  2418   0031DE                     
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2420   0031DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2421   0031E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2422   0031E6  CFDE FFF6          	movff	postinc2,tblptrl
  2423   0031EA  CFDD FFF7          	movff	postdec2,tblptrh
  2424   0031EE                     	if	0	;tblptru may be non-zero
  2425   0031EE                     	endif
  2426   0031EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2427   0031EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2428   0031F0  6EF8               	movwf	tblptru,c
  2429   0031F2                     	endif
  2430   0031F2  0008               	tblrd		*
  2431   0031F4  50F5               	movf	tablat,w,c
  2432   0031F6  0A25               	xorlw	37
  2433   0031F8  A4D8               	btfss	status,2,c
  2434   0031FA  EF01  F019         	goto	u4951
  2435   0031FE  EF03  F019         	goto	u4950
  2436   003202                     u4951:
  2437   003202  EF5B  F01A         	goto	l5180
  2438   003206                     u4950:
  2439   003206                     
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2441   003206  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2442   00320A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2443   00320E  2ADE               	incf	postinc2,f,c
  2444   003210  0E00               	movlw	0
  2445   003212  22DD               	addwfc	postdec2,f,c
  2446   003214                     
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2448   003214  0E00               	movlw	0
  2449   003216  0100               	movlb	0	; () banked
  2450   003218  6FE8               	movwf	(_width+1)& (0+255),b
  2451   00321A  0E00               	movlw	0
  2452   00321C  6FE7               	movwf	_width& (0+255),b
  2453   00321E  C0E7  F0ED         	movff	_width,_flags
  2454   003222                     
  2455                           ; BSR set to: 0
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2457   003222  69E9               	setf	_prec& (0+255),b
  2458   003224  69EA               	setf	(_prec+1)& (0+255),b
  2459   003226                     
  2460                           ; BSR set to: 0
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2462   003226  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463   00322A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464   00322E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2465   003232  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2466   003236                     
  2467                           ; BSR set to: 0
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2469   003236  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2470   00323A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2471   00323E                     	if	0	;tblptru may be non-zero
  2472   00323E                     	endif
  2473   00323E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2474   00323E  0E00               	movlw	low (__mediumconst shr (0+16))
  2475   003240  6EF8               	movwf	tblptru,c
  2476   003242                     	endif
  2477   003242  0008               	tblrd		*
  2478   003244  50F5               	movf	tablat,w,c
  2479   003246  0A64               	xorlw	100
  2480   003248  B4D8               	btfsc	status,2,c
  2481   00324A  EF29  F019         	goto	u4961
  2482   00324E  EF2B  F019         	goto	u4960
  2483   003252                     u4961:
  2484   003252  EF3B  F019         	goto	l5136
  2485   003256                     u4960:
  2486   003256                     
  2487                           ; BSR set to: 0
  2488   003256  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2489   00325A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2490   00325E                     	if	0	;tblptru may be non-zero
  2491   00325E                     	endif
  2492   00325E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2493   00325E  0E00               	movlw	low (__mediumconst shr (0+16))
  2494   003260  6EF8               	movwf	tblptru,c
  2495   003262                     	endif
  2496   003262  0008               	tblrd		*
  2497   003264  50F5               	movf	tablat,w,c
  2498   003266  0A69               	xorlw	105
  2499   003268  A4D8               	btfss	status,2,c
  2500   00326A  EF39  F019         	goto	u4971
  2501   00326E  EF3B  F019         	goto	u4970
  2502   003272                     u4971:
  2503   003272  EF7E  F019         	goto	l5142
  2504   003276                     u4970:
  2505   003276                     l5136:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2509   003276  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2510   00327A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2511   00327E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2512   003282  0E02               	movlw	2
  2513   003284  26DE               	addwf	postinc2,f,c
  2514   003286  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2515   00328A  0E00               	movlw	0
  2516   00328C  22DD               	addwfc	postdec2,f,c
  2517   00328E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2518   003292  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2519   003296  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2520   00329A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2521   00329E  0E00               	movlw	0
  2522   0032A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2523   0032A2  0EFF               	movlw	-1
  2524   0032A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2525   0032A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2526   0032A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2527   0032AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2528   0032AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2529   0032AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2532   0032B0  0E01               	movlw	1
  2533   0032B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2534   0032B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2535   0032B6  0E00               	movlw	0
  2536   0032B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2537   0032BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2538   0032BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2539   0032C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2540   0032C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2541   0032C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2542   0032CC                     
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2545   0032CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2546   0032D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2547   0032D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2548   0032D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2549   0032DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2550   0032E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2551   0032E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2552   0032E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2553   0032EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2554   0032F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2555   0032F4  ECEC  F01B         	call	_dtoa	;wreg free
  2556   0032F8  EF71  F01A         	goto	l1549
  2557   0032FC                     l5142:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2561   0032FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2562   003300  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2563   003304  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2564   003308  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2565   00330C                     
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2568   00330C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2569   003310  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2570   003314                     	if	0	;tblptru may be non-zero
  2571   003314                     	endif
  2572   003314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2573   003314  0E00               	movlw	low (__mediumconst shr (0+16))
  2574   003316  6EF8               	movwf	tblptru,c
  2575   003318                     	endif
  2576   003318  0008               	tblrd		*
  2577   00331A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2580   00331E  EF9D  F019         	goto	l5154
  2581   003322                     l5146:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2585   003322  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2586   003324  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2589   003326  EFB6  F019         	goto	l5156
  2590   00332A                     l5148:
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2594   00332A  0E6C               	movlw	108
  2595   00332C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2598   00332E  EFB6  F019         	goto	l5156
  2599   003332                     l5150:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2603   003332  0E00               	movlw	0
  2604   003334  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2607   003336  EFB6  F019         	goto	l5156
  2608   00333A                     l5154:
  2609                           
  2610                           ; BSR set to: 0
  2611   00333A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2612   00333C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2613   00333E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2614                           
  2615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2616                           ; Switch size 1, requested type "simple"
  2617                           ; Number of cases is 1, Range of values is 0 to 0
  2618                           ; switch strategies available:
  2619                           ; Name         Instructions Cycles
  2620                           ; simple_byte            4     3 (average)
  2621                           ;	Chosen strategy is simple_byte
  2622   003340  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2623   003342  0A00               	xorlw	0	; case 0
  2624   003344  B4D8               	btfsc	status,2,c
  2625   003346  EFA7  F019         	goto	l6060
  2626   00334A  EF99  F019         	goto	l5150
  2627   00334E                     l6060:
  2628                           
  2629                           ; BSR set to: 0
  2630                           ; Switch size 1, requested type "simple"
  2631                           ; Number of cases is 3, Range of values is 76 to 108
  2632                           ; switch strategies available:
  2633                           ; Name         Instructions Cycles
  2634                           ; simple_byte           10     6 (average)
  2635                           ;	Chosen strategy is simple_byte
  2636   00334E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2637   003350  0A4C               	xorlw	76	; case 76
  2638   003352  B4D8               	btfsc	status,2,c
  2639   003354  EF91  F019         	goto	l5146
  2640   003358  0A2A               	xorlw	42	; case 102
  2641   00335A  B4D8               	btfsc	status,2,c
  2642   00335C  EF95  F019         	goto	l5148
  2643   003360  0A0A               	xorlw	10	; case 108
  2644   003362  B4D8               	btfsc	status,2,c
  2645   003364  EF91  F019         	goto	l5146
  2646   003368  EF99  F019         	goto	l5150
  2647   00336C                     l5156:
  2648                           
  2649                           ; BSR set to: 0
  2650   00336C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2651   003370  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2652   003374                     	if	0	;tblptru may be non-zero
  2653   003374                     	endif
  2654   003374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2655   003374  0E00               	movlw	low (__mediumconst shr (0+16))
  2656   003376  6EF8               	movwf	tblptru,c
  2657   003378                     	endif
  2658   003378  0008               	tblrd		*
  2659   00337A  50F5               	movf	tablat,w,c
  2660   00337C  0A66               	xorlw	102
  2661   00337E  A4D8               	btfss	status,2,c
  2662   003380  EFC4  F019         	goto	u4981
  2663   003384  EFC6  F019         	goto	u4980
  2664   003388                     u4981:
  2665   003388  EF52  F01A         	goto	l5176
  2666   00338C                     u4980:
  2667   00338C  EFFC  F019         	goto	l5164
  2668   003390                     l5158:
  2669                           
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2672   003390  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2673   003394  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2674   003398  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2675   00339C  0E04               	movlw	4
  2676   00339E  26DE               	addwf	postinc2,f,c
  2677   0033A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2678   0033A4  0E00               	movlw	0
  2679   0033A6  22DD               	addwfc	postdec2,f,c
  2680   0033A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2681   0033AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2682   0033B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2683   0033B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2684   0033B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2685   0033BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2688   0033C0  EF11  F01A         	goto	l5166
  2689   0033C4                     l5160:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2693   0033C4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2694   0033C8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2695   0033CC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2696   0033D0  0E04               	movlw	4
  2697   0033D2  26DE               	addwf	postinc2,f,c
  2698   0033D4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2699   0033D8  0E00               	movlw	0
  2700   0033DA  22DD               	addwfc	postdec2,f,c
  2701   0033DC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2702   0033E0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2703   0033E4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2704   0033E8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2705   0033EC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2706   0033F0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2709   0033F4  EF11  F01A         	goto	l5166
  2710   0033F8                     l5164:
  2711                           
  2712                           ; BSR set to: 0
  2713   0033F8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2714   0033FA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2715   0033FC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2716                           
  2717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2718                           ; Switch size 1, requested type "simple"
  2719                           ; Number of cases is 1, Range of values is 0 to 0
  2720                           ; switch strategies available:
  2721                           ; Name         Instructions Cycles
  2722                           ; simple_byte            4     3 (average)
  2723                           ;	Chosen strategy is simple_byte
  2724   0033FE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2725   003400  0A00               	xorlw	0	; case 0
  2726   003402  B4D8               	btfsc	status,2,c
  2727   003404  EF06  F01A         	goto	l6062
  2728   003408  EF11  F01A         	goto	l5166
  2729   00340C                     l6062:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ; Switch size 1, requested type "simple"
  2733                           ; Number of cases is 2, Range of values is 76 to 108
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte            7     4 (average)
  2737                           ;	Chosen strategy is simple_byte
  2738   00340C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2739   00340E  0A4C               	xorlw	76	; case 76
  2740   003410  B4D8               	btfsc	status,2,c
  2741   003412  EFE2  F019         	goto	l5160
  2742   003416  0A20               	xorlw	32	; case 108
  2743   003418  B4D8               	btfsc	status,2,c
  2744   00341A  EFC8  F019         	goto	l5158
  2745   00341E  EF11  F01A         	goto	l5166
  2746   003422                     l5166:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2750   003422  0E01               	movlw	1
  2751   003424  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2752   003426  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2753   003428  0E00               	movlw	0
  2754   00342A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2755   00342C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2756   00342E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2757   003432  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2758   003436  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2759   00343A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2762   00343E  EF3A  F01A         	goto	l5174
  2763   003442                     l5168:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2767   003442  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2768   003446  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2769   00344A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2770   00344E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2771   003452  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2772   003456  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2773   00345A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2774   00345E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2775   003462                     	if	0	;tblptru may be non-zero
  2776   003462                     	endif
  2777   003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2778   003462  0E00               	movlw	low (__mediumconst shr (0+16))
  2779   003464  6EF8               	movwf	tblptru,c
  2780   003466                     	endif
  2781   003466  0008               	tblrd		*
  2782   003468  CFF5 F066          	movff	tablat,efgtoa@c
  2783   00346C  EC1F  F007         	call	_efgtoa	;wreg free
  2784   003470  EF71  F01A         	goto	l1549
  2785   003474                     l5174:
  2786                           
  2787                           ; BSR set to: 0
  2788   003474  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2789   003478  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2790   00347C                     	if	0	;tblptru may be non-zero
  2791   00347C                     	endif
  2792   00347C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2793   00347C  0E00               	movlw	low (__mediumconst shr (0+16))
  2794   00347E  6EF8               	movwf	tblptru,c
  2795   003480                     	endif
  2796   003480  0008               	tblrd		*
  2797   003482  50F5               	movf	tablat,w,c
  2798   003484  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2799   003486  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2800                           
  2801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2802                           ; Switch size 1, requested type "simple"
  2803                           ; Number of cases is 1, Range of values is 0 to 0
  2804                           ; switch strategies available:
  2805                           ; Name         Instructions Cycles
  2806                           ; simple_byte            4     3 (average)
  2807                           ;	Chosen strategy is simple_byte
  2808   003488  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2809   00348A  0A00               	xorlw	0	; case 0
  2810   00348C  B4D8               	btfsc	status,2,c
  2811   00348E  EF4B  F01A         	goto	l6064
  2812   003492  EF52  F01A         	goto	l5176
  2813   003496                     l6064:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ; Switch size 1, requested type "simple"
  2817                           ; Number of cases is 1, Range of values is 102 to 102
  2818                           ; switch strategies available:
  2819                           ; Name         Instructions Cycles
  2820                           ; simple_byte            4     3 (average)
  2821                           ;	Chosen strategy is simple_byte
  2822   003496  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2823   003498  0A66               	xorlw	102	; case 102
  2824   00349A  B4D8               	btfsc	status,2,c
  2825   00349C  EF21  F01A         	goto	l5168
  2826   0034A0  EF52  F01A         	goto	l5176
  2827   0034A4                     l5176:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2830   0034A4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2831   0034A8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2832   0034AC  2ADE               	incf	postinc2,f,c
  2833   0034AE  0E00               	movlw	0
  2834   0034B0  22DD               	addwfc	postdec2,f,c
  2835   0034B2  EF71  F01A         	goto	l1549
  2836   0034B6                     l5180:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2839   0034B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2840   0034BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2841   0034BE  CFDE FFF6          	movff	postinc2,tblptrl
  2842   0034C2  CFDD FFF7          	movff	postdec2,tblptrh
  2843   0034C6                     	if	0	;tblptru may be non-zero
  2844   0034C6                     	endif
  2845   0034C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2846   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2847   0034C8  6EF8               	movwf	tblptru,c
  2848   0034CA                     	endif
  2849   0034CA  0008               	tblrd		*
  2850   0034CC  50F5               	movf	tablat,w,c
  2851   0034CE  6E01               	movwf	fputc@c^0,c
  2852   0034D0  6A02               	clrf	(fputc@c+1)^0,c
  2853   0034D2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2854   0034D6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2855   0034DA  ECFA  F025         	call	_fputc	;wreg free
  2856   0034DE  EF52  F01A         	goto	l5176
  2857   0034E2                     l1549:
  2858   0034E2  0012               	return		;funcret
  2859   0034E4                     __end_of_vfpfcnvrt:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _efgtoa *****************
  2863 ;; Defined at:
  2864 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2867 ;;		 -> sprintf@f(11), 
  2868 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2869 ;;  c               1    6[BANK0 ] unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  u               4   49[BANK0 ] struct flui
  2872 ;;  g               4   45[BANK0 ] struct flui
  2873 ;;  l               4   38[BANK0 ] struct flui
  2874 ;;  h               4   34[BANK0 ] struct flui
  2875 ;;  ou              4   28[BANK0 ] struct flui
  2876 ;;  n               2   43[BANK0 ] int 
  2877 ;;  i               2   32[BANK0 ] int 
  2878 ;;  w               2   26[BANK0 ] int 
  2879 ;;  e               2   24[BANK0 ] int 
  2880 ;;  m               2   22[BANK0 ] int 
  2881 ;;  d               2   20[BANK0 ] int 
  2882 ;;  t               2   13[BANK0 ] int 
  2883 ;;  p               2   11[BANK0 ] int 
  2884 ;;  ne              2    9[BANK0 ] int 
  2885 ;;  sign            1   42[BANK0 ] unsigned char 
  2886 ;;  nmode           1   19[BANK0 ] unsigned char 
  2887 ;;  mode            1   18[BANK0 ] unsigned char 
  2888 ;;  pp              1   17[BANK0 ] unsigned char 
  2889 ;;  esign           1    0        unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2899 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;Total ram usage:       53 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 5
  2906 ;; This function calls:
  2907 ;;		___fladd
  2908 ;;		___fldiv
  2909 ;;		___fleq
  2910 ;;		___flge
  2911 ;;		___flmul
  2912 ;;		___flneg
  2913 ;;		___flsub
  2914 ;;		___fltol
  2915 ;;		___fpclassifyf
  2916 ;;		_floorf
  2917 ;;		_labs
  2918 ;;		_memcpy
  2919 ;;		_pad
  2920 ;;		_strcpy
  2921 ;; This function is called by:
  2922 ;;		_vfpfcnvrt
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text5
  2927   000E3E                     __ptext5:
  2928                           	callstack 0
  2929   000E3E                     _efgtoa:
  2930                           	callstack 22
  2931   000E3E                     
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2933   000E3E  0E00               	movlw	0
  2934   000E40  0100               	movlb	0	; () banked
  2935   000E42  6F8A               	movwf	efgtoa@sign& (0+255),b
  2936   000E44                     
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2939   000E44  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2940   000E48  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2941   000E4C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2942   000E50  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2943   000E54                     
  2944                           ; BSR set to: 0
  2945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2946   000E54  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2947   000E56  EF31  F007         	goto	u4590
  2948   000E5A  EF2F  F007         	goto	u4591
  2949   000E5E                     u4591:
  2950   000E5E  EF45  F007         	goto	l4838
  2951   000E62                     u4590:
  2952   000E62                     
  2953                           ; BSR set to: 0
  2954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2955   000E62  0E01               	movlw	1
  2956   000E64  6F8A               	movwf	efgtoa@sign& (0+255),b
  2957   000E66                     
  2958                           ; BSR set to: 0
  2959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2960   000E66  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2961   000E6A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2962   000E6E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2963   000E72  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2964   000E76  ECBF  F02F         	call	___flneg	;wreg free
  2965   000E7A  C001  F08D         	movff	?___flneg,efgtoa@g
  2966   000E7E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2967   000E82  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2968   000E86  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2969   000E8A                     l4838:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2972   000E8A  0E00               	movlw	0
  2973   000E8C  0100               	movlb	0	; () banked
  2974   000E8E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2975   000E90  0E00               	movlw	0
  2976   000E92  6F8B               	movwf	efgtoa@n& (0+255),b
  2977   000E94                     
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2980   000E94  C0E7  F07A         	movff	_width,efgtoa@w
  2981   000E98  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2982   000E9C                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2985   000E9C  518A               	movf	efgtoa@sign& (0+255),w,b
  2986   000E9E  B4D8               	btfsc	status,2,c
  2987   000EA0  EF54  F007         	goto	u4601
  2988   000EA4  EF56  F007         	goto	u4600
  2989   000EA8                     u4601:
  2990   000EA8  EF6A  F007         	goto	l4852
  2991   000EAC                     u4600:
  2992   000EAC                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2995   000EAC  518A               	movf	efgtoa@sign& (0+255),w,b
  2996   000EAE  A4D8               	btfss	status,2,c
  2997   000EB0  EF5C  F007         	goto	u4611
  2998   000EB4  EF5E  F007         	goto	u4610
  2999   000EB8                     u4611:
  3000   000EB8  EF64  F007         	goto	l4848
  3001   000EBC                     u4610:
  3002   000EBC                     
  3003                           ; BSR set to: 0
  3004   000EBC  0E00               	movlw	0
  3005   000EBE  6F70               	movwf	(_efgtoa$2906+1)& (0+255),b
  3006   000EC0  0E2B               	movlw	43
  3007   000EC2  6F6F               	movwf	_efgtoa$2906& (0+255),b
  3008   000EC4  EF68  F007         	goto	l4850
  3009   000EC8                     l4848:
  3010                           
  3011                           ; BSR set to: 0
  3012   000EC8  0E00               	movlw	0
  3013   000ECA  6F70               	movwf	(_efgtoa$2906+1)& (0+255),b
  3014   000ECC  0E2D               	movlw	45
  3015   000ECE  6F6F               	movwf	_efgtoa$2906& (0+255),b
  3016   000ED0                     l4850:
  3017                           
  3018                           ; BSR set to: 0
  3019   000ED0  C06F  F08A         	movff	_efgtoa$2906,efgtoa@sign
  3020   000ED4                     l4852:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3024   000ED4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3025   000ED8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3026   000EDC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3027   000EE0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3028   000EE4  EC7B  F025         	call	___fpclassifyf	;wreg free
  3029   000EE8  0401               	decf	?___fpclassifyf^0,w,c
  3030   000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3031   000EEC  A4D8               	btfss	status,2,c
  3032   000EEE  EF7B  F007         	goto	u4621
  3033   000EF2  EF7D  F007         	goto	u4620
  3034   000EF6                     u4621:
  3035   000EF6  EFB0  F007         	goto	l4870
  3036   000EFA                     u4620:
  3037   000EFA                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3039   000EFA  0100               	movlb	0	; () banked
  3040   000EFC  518A               	movf	efgtoa@sign& (0+255),w,b
  3041   000EFE  B4D8               	btfsc	status,2,c
  3042   000F00  EF84  F007         	goto	u4631
  3043   000F04  EF86  F007         	goto	u4630
  3044   000F08                     u4631:
  3045   000F08  EF8F  F007         	goto	l4862
  3046   000F0C                     u4630:
  3047   000F0C                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3050   000F0C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3051   000F10                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3054   000F10  077A               	decf	efgtoa@w& (0+255),f,b
  3055   000F12  A0D8               	btfss	status,0,c
  3056   000F14  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3057   000F16                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3060   000F16  0E00               	movlw	0
  3061   000F18  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3062   000F1A  0E01               	movlw	1
  3063   000F1C  6F8B               	movwf	efgtoa@n& (0+255),b
  3064   000F1E                     l4862:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3068   000F1E  0EA0               	movlw	low _dbuf
  3069   000F20  258B               	addwf	efgtoa@n& (0+255),w,b
  3070   000F22  6E01               	movwf	strcpy@dest^0,c
  3071   000F24  0E02               	movlw	high _dbuf
  3072   000F26  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3073   000F28  6E02               	movwf	(strcpy@dest+1)^0,c
  3074   000F2A  0E34               	movlw	low STR_2
  3075   000F2C  6E03               	movwf	strcpy@src^0,c
  3076   000F2E  0E0E               	movlw	high STR_2
  3077   000F30  6E04               	movwf	(strcpy@src+1)^0,c
  3078   000F32  ECFC  F02E         	call	_strcpy	;wreg free
  3079   000F36                     l4864:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3082   000F36  0100               	movlb	0	; () banked
  3083   000F38  0EFD               	movlw	253
  3084   000F3A  277A               	addwf	efgtoa@w& (0+255),f,b
  3085   000F3C  0EFF               	movlw	255
  3086   000F3E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3087   000F40                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3090   000F40  C060  F011         	movff	efgtoa@fp,pad@fp
  3091   000F44  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3092   000F48  0EA0               	movlw	low _dbuf
  3093   000F4A  6E13               	movwf	pad@buf^0,c
  3094   000F4C  0E02               	movlw	high _dbuf
  3095   000F4E  6E14               	movwf	(pad@buf+1)^0,c
  3096   000F50  C07A  F015         	movff	efgtoa@w,pad@p
  3097   000F54  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3098   000F58  EC7E  F029         	call	_pad	;wreg free
  3099   000F5C  EF1B  F00C         	goto	l1501
  3100   000F60                     l4870:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3103   000F60  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3104   000F64  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3105   000F68  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3106   000F6C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3107   000F70  EC7B  F025         	call	___fpclassifyf	;wreg free
  3108   000F74  5001               	movf	?___fpclassifyf^0,w,c
  3109   000F76  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3110   000F78  A4D8               	btfss	status,2,c
  3111   000F7A  EFC1  F007         	goto	u4641
  3112   000F7E  EFC3  F007         	goto	u4640
  3113   000F82                     u4641:
  3114   000F82  EFE3  F007         	goto	l4888
  3115   000F86                     u4640:
  3116   000F86                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3118   000F86  0100               	movlb	0	; () banked
  3119   000F88  518A               	movf	efgtoa@sign& (0+255),w,b
  3120   000F8A  B4D8               	btfsc	status,2,c
  3121   000F8C  EFCA  F007         	goto	u4651
  3122   000F90  EFCC  F007         	goto	u4650
  3123   000F94                     u4651:
  3124   000F94  EFD5  F007         	goto	l4880
  3125   000F98                     u4650:
  3126   000F98                     
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3129   000F98  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3130   000F9C                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3133   000F9C  077A               	decf	efgtoa@w& (0+255),f,b
  3134   000F9E  A0D8               	btfss	status,0,c
  3135   000FA0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3136   000FA2                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3139   000FA2  0E00               	movlw	0
  3140   000FA4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3141   000FA6  0E01               	movlw	1
  3142   000FA8  6F8B               	movwf	efgtoa@n& (0+255),b
  3143   000FAA                     l4880:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3147   000FAA  0EA0               	movlw	low _dbuf
  3148   000FAC  258B               	addwf	efgtoa@n& (0+255),w,b
  3149   000FAE  6E01               	movwf	strcpy@dest^0,c
  3150   000FB0  0E02               	movlw	high _dbuf
  3151   000FB2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3152   000FB4  6E02               	movwf	(strcpy@dest+1)^0,c
  3153   000FB6  0E38               	movlw	low STR_5
  3154   000FB8  6E03               	movwf	strcpy@src^0,c
  3155   000FBA  0E0E               	movlw	high STR_5
  3156   000FBC  6E04               	movwf	(strcpy@src+1)^0,c
  3157   000FBE  ECFC  F02E         	call	_strcpy	;wreg free
  3158   000FC2  EF9B  F007         	goto	l4864
  3159   000FC6                     l4888:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3162   000FC6  0E00               	movlw	0
  3163   000FC8  0100               	movlb	0	; () banked
  3164   000FCA  6F91               	movwf	efgtoa@u& (0+255),b
  3165   000FCC  0E00               	movlw	0
  3166   000FCE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3167   000FD0  0E80               	movlw	128
  3168   000FD2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3169   000FD4  0E3F               	movlw	63
  3170   000FD6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3173   000FD8  0E00               	movlw	0
  3174   000FDA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3175   000FDC  0E00               	movlw	0
  3176   000FDE  6F78               	movwf	efgtoa@e& (0+255),b
  3177   000FE0                     
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3180   000FE0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3181   000FE4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3182   000FE8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3183   000FEC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3184   000FF0  0E00               	movlw	0
  3185   000FF2  6E36               	movwf	___fleq@ff2^0,c
  3186   000FF4  0E00               	movlw	0
  3187   000FF6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3188   000FF8  0E00               	movlw	0
  3189   000FFA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3190   000FFC  0E00               	movlw	0
  3191   000FFE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3192   001000  EC6A  F027         	call	___fleq	;wreg free
  3193   001004  B0D8               	btfsc	status,0,c
  3194   001006  EF07  F008         	goto	u4661
  3195   00100A  EF09  F008         	goto	u4660
  3196   00100E                     u4661:
  3197   00100E  EFE8  F008         	goto	l1504
  3198   001012                     u4660:
  3199   001012  EF16  F008         	goto	l4896
  3200   001016                     l1506:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3203   001016  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3204   00101A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3205   00101E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3206   001022  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3207   001026                     
  3208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3209   001026  0100               	movlb	0	; () banked
  3210   001028  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3211   00102A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3212   00102C                     l4896:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3215   00102C  C091  F011         	movff	efgtoa@u,___flmul@b
  3216   001030  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3217   001034  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3218   001038  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3219   00103C  0E00               	movlw	0
  3220   00103E  6E15               	movwf	___flmul@a^0,c
  3221   001040  0E00               	movlw	0
  3222   001042  6E16               	movwf	(___flmul@a+1)^0,c
  3223   001044  0E20               	movlw	32
  3224   001046  6E17               	movwf	(___flmul@a+2)^0,c
  3225   001048  0E41               	movlw	65
  3226   00104A  6E18               	movwf	(___flmul@a+3)^0,c
  3227   00104C  EC76  F013         	call	___flmul	;wreg free
  3228   001050  C011  F07C         	movff	?___flmul,efgtoa@ou
  3229   001054  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3230   001058  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3231   00105C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3232   001060  0100               	movlb	0	; () banked
  3233   001062  517C               	movf	efgtoa@ou& (0+255),w,b
  3234   001064  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3235   001066  6E01               	movwf	labs@a^0,c
  3236   001068  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3237   00106A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3238   00106C  6E02               	movwf	(labs@a+1)^0,c
  3239   00106E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3240   001070  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3241   001072  6E03               	movwf	(labs@a+2)^0,c
  3242   001074  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3243   001076  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3244   001078  6E04               	movwf	(labs@a+3)^0,c
  3245   00107A  EC9E  F02A         	call	_labs	;wreg free
  3246   00107E  BE04               	btfsc	(?_labs+3)^0,7,c
  3247   001080  EF4D  F008         	goto	u4671
  3248   001084  5004               	movf	(?_labs+3)^0,w,c
  3249   001086  1003               	iorwf	(?_labs+2)^0,w,c
  3250   001088  1002               	iorwf	(?_labs+1)^0,w,c
  3251   00108A  E109               	bnz	u4670
  3252   00108C  0E02               	movlw	2
  3253   00108E  5C01               	subwf	?_labs^0,w,c
  3254   001090  A0D8               	btfss	status,0,c
  3255   001092  EF4D  F008         	goto	u4671
  3256   001096  EF4F  F008         	goto	u4670
  3257   00109A                     u4671:
  3258   00109A  EF0B  F008         	goto	l1506
  3259   00109E                     u4670:
  3260   00109E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3261   0010A2  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3262   0010A6  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3263   0010AA  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3264   0010AE  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3265   0010B2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3266   0010B6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3267   0010BA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3268   0010BE  ECF9  F024         	call	___flge	;wreg free
  3269   0010C2  A0D8               	btfss	status,0,c
  3270   0010C4  EF66  F008         	goto	u4681
  3271   0010C8  EF68  F008         	goto	u4680
  3272   0010CC                     u4681:
  3273   0010CC  EF0B  F008         	goto	l1506
  3274   0010D0                     u4680:
  3275   0010D0                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3277   0010D0  0100               	movlb	0	; () banked
  3278   0010D2  5191               	movf	efgtoa@u& (0+255),w,b
  3279   0010D4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3280   0010D6  6E01               	movwf	labs@a^0,c
  3281   0010D8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3282   0010DA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3283   0010DC  6E02               	movwf	(labs@a+1)^0,c
  3284   0010DE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3285   0010E0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3286   0010E2  6E03               	movwf	(labs@a+2)^0,c
  3287   0010E4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3288   0010E6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3289   0010E8  6E04               	movwf	(labs@a+3)^0,c
  3290   0010EA  EC9E  F02A         	call	_labs	;wreg free
  3291   0010EE  BE04               	btfsc	(?_labs+3)^0,7,c
  3292   0010F0  EF87  F008         	goto	u4690
  3293   0010F4  5004               	movf	(?_labs+3)^0,w,c
  3294   0010F6  1003               	iorwf	(?_labs+2)^0,w,c
  3295   0010F8  1002               	iorwf	(?_labs+1)^0,w,c
  3296   0010FA  E107               	bnz	u4691
  3297   0010FC  0E02               	movlw	2
  3298   0010FE  5C01               	subwf	?_labs^0,w,c
  3299   001100  B0D8               	btfsc	status,0,c
  3300   001102  EF85  F008         	goto	u4691
  3301   001106  EF87  F008         	goto	u4690
  3302   00110A                     u4691:
  3303   00110A  EFCF  F008         	goto	l4914
  3304   00110E                     u4690:
  3305   00110E                     l4904:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3308   00110E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3309   001112  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3310   001116  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3311   00111A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3314   00111E  EFE8  F008         	goto	l1504
  3315   001122                     l4906:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3318   001122  C091  F032         	movff	efgtoa@u,___fldiv@b
  3319   001126  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3320   00112A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3321   00112E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3322   001132  0E00               	movlw	0
  3323   001134  6E36               	movwf	___fldiv@a^0,c
  3324   001136  0E00               	movlw	0
  3325   001138  6E37               	movwf	(___fldiv@a+1)^0,c
  3326   00113A  0E20               	movlw	32
  3327   00113C  6E38               	movwf	(___fldiv@a+2)^0,c
  3328   00113E  0E41               	movlw	65
  3329   001140  6E39               	movwf	(___fldiv@a+3)^0,c
  3330   001142  EC8B  F015         	call	___fldiv	;wreg free
  3331   001146  C032  F091         	movff	?___fldiv,efgtoa@u
  3332   00114A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3333   00114E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3334   001152  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3335   001156                     
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3337   001156  0100               	movlb	0	; () banked
  3338   001158  0778               	decf	efgtoa@e& (0+255),f,b
  3339   00115A  A0D8               	btfss	status,0,c
  3340   00115C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3341   00115E                     
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3344   00115E  5191               	movf	efgtoa@u& (0+255),w,b
  3345   001160  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3346   001162  6E01               	movwf	labs@a^0,c
  3347   001164  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3348   001166  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3349   001168  6E02               	movwf	(labs@a+1)^0,c
  3350   00116A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3351   00116C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3352   00116E  6E03               	movwf	(labs@a+2)^0,c
  3353   001170  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3354   001172  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3355   001174  6E04               	movwf	(labs@a+3)^0,c
  3356   001176  EC9E  F02A         	call	_labs	;wreg free
  3357   00117A  BE04               	btfsc	(?_labs+3)^0,7,c
  3358   00117C  EFCD  F008         	goto	u4700
  3359   001180  5004               	movf	(?_labs+3)^0,w,c
  3360   001182  1003               	iorwf	(?_labs+2)^0,w,c
  3361   001184  1002               	iorwf	(?_labs+1)^0,w,c
  3362   001186  E107               	bnz	u4701
  3363   001188  0E02               	movlw	2
  3364   00118A  5C01               	subwf	?_labs^0,w,c
  3365   00118C  B0D8               	btfsc	status,0,c
  3366   00118E  EFCB  F008         	goto	u4701
  3367   001192  EFCD  F008         	goto	u4700
  3368   001196                     u4701:
  3369   001196  EFCF  F008         	goto	l4914
  3370   00119A                     u4700:
  3371   00119A  EF87  F008         	goto	l4904
  3372   00119E                     l4914:
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3375   00119E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3376   0011A2  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3377   0011A6  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3378   0011AA  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3379   0011AE  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3380   0011B2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3381   0011B6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3382   0011BA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3383   0011BE  ECF9  F024         	call	___flge	;wreg free
  3384   0011C2  A0D8               	btfss	status,0,c
  3385   0011C4  EFE6  F008         	goto	u4711
  3386   0011C8  EFE8  F008         	goto	u4710
  3387   0011CC                     u4711:
  3388   0011CC  EF91  F008         	goto	l4906
  3389   0011D0                     u4710:
  3390   0011D0                     l1504:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3393   0011D0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3396   0011D4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3397   0011D8                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3399   0011D8  0100               	movlb	0	; () banked
  3400   0011DA  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3401   0011DC  EFF2  F008         	goto	u4721
  3402   0011E0  EFF4  F008         	goto	u4720
  3403   0011E4                     u4721:
  3404   0011E4  EFFA  F008         	goto	l4920
  3405   0011E8                     u4720:
  3406   0011E8                     
  3407                           ; BSR set to: 0
  3408   0011E8  C0E9  F06B         	movff	_prec,efgtoa@p
  3409   0011EC  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3410   0011F0  EFFE  F008         	goto	l4922
  3411   0011F4                     l4920:
  3412                           
  3413                           ; BSR set to: 0
  3414   0011F4  0E00               	movlw	0
  3415   0011F6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3416   0011F8  0E06               	movlw	6
  3417   0011FA  6F6B               	movwf	efgtoa@p& (0+255),b
  3418   0011FC                     l4922:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3422   0011FC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3423   001200  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3424   001204                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3427   001204  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3428   001206  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3429   001208                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3432   001208  0E66               	movlw	102
  3433   00120A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3434   00120C  A4D8               	btfss	status,2,c
  3435   00120E  EF0B  F009         	goto	u4731
  3436   001212  EF0D  F009         	goto	u4730
  3437   001216                     u4731:
  3438   001216  EF2D  F009         	goto	l4936
  3439   00121A                     u4730:
  3440   00121A                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3443   00121A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3444   00121C  EF14  F009         	goto	u4740
  3445   001220  EF12  F009         	goto	u4741
  3446   001224                     u4741:
  3447   001224  EF20  F009         	goto	l4932
  3448   001228                     u4740:
  3449   001228                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3452   001228  0E00               	movlw	0
  3453   00122A  6F91               	movwf	efgtoa@u& (0+255),b
  3454   00122C  0E00               	movlw	0
  3455   00122E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3456   001230  0E80               	movlw	128
  3457   001232  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3458   001234  0E3F               	movlw	63
  3459   001236  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3460                           
  3461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3462   001238  0E00               	movlw	0
  3463   00123A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3464   00123C  0E00               	movlw	0
  3465   00123E  6F78               	movwf	efgtoa@e& (0+255),b
  3466   001240                     l4932:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3470   001240  0E67               	movlw	103
  3471   001242  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3472   001244  B4D8               	btfsc	status,2,c
  3473   001246  EF27  F009         	goto	u4751
  3474   00124A  EF29  F009         	goto	u4750
  3475   00124E                     u4751:
  3476   00124E  EF2D  F009         	goto	l4936
  3477   001252                     u4750:
  3478   001252                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3481   001252  5178               	movf	efgtoa@e& (0+255),w,b
  3482   001254  2776               	addwf	efgtoa@m& (0+255),f,b
  3483   001256  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3484   001258  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3485   00125A                     l4936:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3489   00125A  0E00               	movlw	0
  3490   00125C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3491   00125E  0E00               	movlw	0
  3492   001260  6F80               	movwf	efgtoa@i& (0+255),b
  3493   001262                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3496   001262  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3497   001266  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3498   00126A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3499   00126E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3500   001272                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3503   001272  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3504   001276  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3505   00127A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3506   00127E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3509   001282  EFBE  F009         	goto	l4950
  3510   001286                     l4942:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3514   001286  C082  F032         	movff	efgtoa@h,___fldiv@b
  3515   00128A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3516   00128E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3517   001292  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3518   001296  C091  F036         	movff	efgtoa@u,___fldiv@a
  3519   00129A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3520   00129E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3521   0012A2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3522   0012A6  EC8B  F015         	call	___fldiv	;wreg free
  3523   0012AA  C032  F04B         	movff	?___fldiv,floorf@x
  3524   0012AE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3525   0012B2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3526   0012B6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3527   0012BA  EC91  F01F         	call	_floorf	;wreg free
  3528   0012BE  C04B  F086         	movff	?_floorf,efgtoa@l
  3529   0012C2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3530   0012C6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3531   0012CA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3534   0012CE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3535   0012D2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3536   0012D6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3537   0012DA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3538   0012DE  EC76  F024         	call	___fltol	;wreg free
  3539   0012E2  C001  F074         	movff	?___fltol,efgtoa@d
  3540   0012E6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3541   0012EA                     
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3543   0012EA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3544   0012EE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3545   0012F2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3546   0012F6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3547   0012FA  C086  F015         	movff	efgtoa@l,___flmul@a
  3548   0012FE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3549   001302  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3550   001306  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3551   00130A  C091  F011         	movff	efgtoa@u,___flmul@b
  3552   00130E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3553   001312  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3554   001316  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3555   00131A  EC76  F013         	call	___flmul	;wreg free
  3556   00131E  C011  F02E         	movff	?___flmul,___flsub@a
  3557   001322  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3558   001326  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3559   00132A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3560   00132E  ECD9  F02E         	call	___flsub	;wreg free
  3561   001332  C02A  F082         	movff	?___flsub,efgtoa@h
  3562   001336  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3563   00133A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3564   00133E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3565   001342                     
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3567   001342  C091  F032         	movff	efgtoa@u,___fldiv@b
  3568   001346  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3569   00134A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3570   00134E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3571   001352  0E00               	movlw	0
  3572   001354  6E36               	movwf	___fldiv@a^0,c
  3573   001356  0E00               	movlw	0
  3574   001358  6E37               	movwf	(___fldiv@a+1)^0,c
  3575   00135A  0E20               	movlw	32
  3576   00135C  6E38               	movwf	(___fldiv@a+2)^0,c
  3577   00135E  0E41               	movlw	65
  3578   001360  6E39               	movwf	(___fldiv@a+3)^0,c
  3579   001362  EC8B  F015         	call	___fldiv	;wreg free
  3580   001366  C032  F091         	movff	?___fldiv,efgtoa@u
  3581   00136A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3582   00136E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3583   001372  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3584   001376                     
  3585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3586   001376  0100               	movlb	0	; () banked
  3587   001378  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3588   00137A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3589   00137C                     l4950:
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3593   00137C  5176               	movf	efgtoa@m& (0+255),w,b
  3594   00137E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3595   001380  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3596   001382  0A80               	xorlw	128
  3597   001384  6F67               	movwf	??_efgtoa& (0+255),b
  3598   001386  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3599   001388  0A80               	xorlw	128
  3600   00138A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3601   00138C  A0D8               	btfss	status,0,c
  3602   00138E  EFCB  F009         	goto	u4761
  3603   001392  EFCD  F009         	goto	u4760
  3604   001396                     u4761:
  3605   001396  EF43  F009         	goto	l4942
  3606   00139A                     u4760:
  3607   00139A                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3610   00139A  C091  F011         	movff	efgtoa@u,___flmul@b
  3611   00139E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3612   0013A2  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3613   0013A6  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3614   0013AA  0E00               	movlw	0
  3615   0013AC  6E15               	movwf	___flmul@a^0,c
  3616   0013AE  0E00               	movlw	0
  3617   0013B0  6E16               	movwf	(___flmul@a+1)^0,c
  3618   0013B2  0EA0               	movlw	160
  3619   0013B4  6E17               	movwf	(___flmul@a+2)^0,c
  3620   0013B6  0E40               	movlw	64
  3621   0013B8  6E18               	movwf	(___flmul@a+3)^0,c
  3622   0013BA  EC76  F013         	call	___flmul	;wreg free
  3623   0013BE  C011  F086         	movff	?___flmul,efgtoa@l
  3624   0013C2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3625   0013C6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3626   0013CA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3627   0013CE                     
  3628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3629   0013CE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3630   0013D2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3631   0013D6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3632   0013DA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3633   0013DE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3634   0013E2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3635   0013E6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3636   0013EA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3637   0013EE  ECF9  F024         	call	___flge	;wreg free
  3638   0013F2  B0D8               	btfsc	status,0,c
  3639   0013F4  EFFE  F009         	goto	u4771
  3640   0013F8  EF00  F00A         	goto	u4770
  3641   0013FC                     u4771:
  3642   0013FC  EF0B  F00A         	goto	l4958
  3643   001400                     u4770:
  3644   001400                     
  3645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3646   001400  0E00               	movlw	0
  3647   001402  0100               	movlb	0	; () banked
  3648   001404  6F86               	movwf	efgtoa@l& (0+255),b
  3649   001406  0E00               	movlw	0
  3650   001408  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3651   00140A  0E00               	movlw	0
  3652   00140C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3653   00140E  0E00               	movlw	0
  3654   001410  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3657   001412  EF34  F00A         	goto	l4964
  3658   001416                     l4958:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3661   001416  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3662   00141A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3663   00141E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3664   001422  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3665   001426  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3666   00142A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3667   00142E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3668   001432  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3669   001436  EC6A  F027         	call	___fleq	;wreg free
  3670   00143A  A0D8               	btfss	status,0,c
  3671   00143C  EF22  F00A         	goto	u4781
  3672   001440  EF24  F00A         	goto	u4780
  3673   001444                     u4781:
  3674   001444  EF34  F00A         	goto	l4964
  3675   001448                     u4780:
  3676   001448  0100               	movlb	0	; () banked
  3677   00144A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3678   00144C  EF2A  F00A         	goto	u4791
  3679   001450  EF2C  F00A         	goto	u4790
  3680   001454                     u4791:
  3681   001454  EF34  F00A         	goto	l4964
  3682   001458                     u4790:
  3683   001458                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3686   001458  0E00               	movlw	0
  3687   00145A  6F86               	movwf	efgtoa@l& (0+255),b
  3688   00145C  0E00               	movlw	0
  3689   00145E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3690   001460  0E00               	movlw	0
  3691   001462  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3692   001464  0E00               	movlw	0
  3693   001466  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3694   001468                     l4964:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3697   001468  C08D  F001         	movff	efgtoa@g,___fladd@b
  3698   00146C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3699   001470  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3700   001474  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3701   001478  C086  F005         	movff	efgtoa@l,___fladd@a
  3702   00147C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3703   001480  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3704   001484  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3705   001488  EC16  F011         	call	___fladd	;wreg free
  3706   00148C  C001  F082         	movff	?___fladd,efgtoa@h
  3707   001490  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3708   001494  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3709   001498  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3710   00149C                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3712   00149C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3713   0014A0  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3714   0014A4  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3715   0014A8  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3716   0014AC  0E00               	movlw	0
  3717   0014AE  6E15               	movwf	___flmul@a^0,c
  3718   0014B0  0E00               	movlw	0
  3719   0014B2  6E16               	movwf	(___flmul@a+1)^0,c
  3720   0014B4  0E20               	movlw	32
  3721   0014B6  6E17               	movwf	(___flmul@a+2)^0,c
  3722   0014B8  0E41               	movlw	65
  3723   0014BA  6E18               	movwf	(___flmul@a+3)^0,c
  3724   0014BC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3725   0014C0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3726   0014C4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3727   0014C8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3728   0014CC  EC76  F013         	call	___flmul	;wreg free
  3729   0014D0  C011  F02E         	movff	?___flmul,___flge@ff2
  3730   0014D4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3731   0014D8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3732   0014DC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3733   0014E0  ECF9  F024         	call	___flge	;wreg free
  3734   0014E4  A0D8               	btfss	status,0,c
  3735   0014E6  EF77  F00A         	goto	u4801
  3736   0014EA  EF79  F00A         	goto	u4800
  3737   0014EE                     u4801:
  3738   0014EE  EFA2  F00A         	goto	l4976
  3739   0014F2                     u4800:
  3740   0014F2                     
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3742   0014F2  0100               	movlb	0	; () banked
  3743   0014F4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3744   0014F6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3745   0014F8                     
  3746                           ; BSR set to: 0
  3747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3748   0014F8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3749   0014FC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3750   001500  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3751   001504  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3752   001508  0E00               	movlw	0
  3753   00150A  6E15               	movwf	___flmul@a^0,c
  3754   00150C  0E00               	movlw	0
  3755   00150E  6E16               	movwf	(___flmul@a+1)^0,c
  3756   001510  0E20               	movlw	32
  3757   001512  6E17               	movwf	(___flmul@a+2)^0,c
  3758   001514  0E41               	movlw	65
  3759   001516  6E18               	movwf	(___flmul@a+3)^0,c
  3760   001518  EC76  F013         	call	___flmul	;wreg free
  3761   00151C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3762   001520  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3763   001524  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3764   001528  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3765   00152C                     
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3767   00152C  0E66               	movlw	102
  3768   00152E  0100               	movlb	0	; () banked
  3769   001530  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3770   001532  A4D8               	btfss	status,2,c
  3771   001534  EF9E  F00A         	goto	u4811
  3772   001538  EFA0  F00A         	goto	u4810
  3773   00153C                     u4811:
  3774   00153C  EFA2  F00A         	goto	l4976
  3775   001540                     u4810:
  3776   001540                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3779   001540  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3780   001542  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3781   001544                     l4976:
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3784   001544  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3785   001548  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3786   00154C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3787   001550  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3788   001554                     
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3790   001554  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3791   001558  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3792   00155C                     
  3793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3794   00155C  0E00               	movlw	0
  3795   00155E  0100               	movlb	0	; () banked
  3796   001560  6F71               	movwf	efgtoa@pp& (0+255),b
  3797   001562                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3800   001562  0E00               	movlw	0
  3801   001564  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3802   001566  0E00               	movlw	0
  3803   001568  6F6D               	movwf	efgtoa@t& (0+255),b
  3804   00156A                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3807   00156A  0E00               	movlw	0
  3808   00156C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3809   00156E  0E00               	movlw	0
  3810   001570  6F80               	movwf	efgtoa@i& (0+255),b
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3813   001572  EFA0  F00B         	goto	l5026
  3814   001576                     l4986:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3818   001576  C082  F032         	movff	efgtoa@h,___fldiv@b
  3819   00157A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3820   00157E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3821   001582  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3822   001586  C091  F036         	movff	efgtoa@u,___fldiv@a
  3823   00158A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3824   00158E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3825   001592  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3826   001596  EC8B  F015         	call	___fldiv	;wreg free
  3827   00159A  C032  F04B         	movff	?___fldiv,floorf@x
  3828   00159E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3829   0015A2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3830   0015A6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3831   0015AA  EC91  F01F         	call	_floorf	;wreg free
  3832   0015AE  C04B  F086         	movff	?_floorf,efgtoa@l
  3833   0015B2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3834   0015B6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3835   0015BA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3838   0015BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3839   0015C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3840   0015C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3841   0015CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3842   0015CE  EC76  F024         	call	___fltol	;wreg free
  3843   0015D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3844   0015D4  EFF7  F00A         	goto	u4820
  3845   0015D8  5002               	movf	(?___fltol+1)^0,w,c
  3846   0015DA  E107               	bnz	u4821
  3847   0015DC  0E0A               	movlw	10
  3848   0015DE  5C01               	subwf	?___fltol^0,w,c
  3849   0015E0  B0D8               	btfsc	status,0,c
  3850   0015E2  EFF5  F00A         	goto	u4821
  3851   0015E6  EFF7  F00A         	goto	u4820
  3852   0015EA                     u4821:
  3853   0015EA  EF07  F00B         	goto	l4990
  3854   0015EE                     u4820:
  3855   0015EE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3856   0015F2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3857   0015F6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3858   0015FA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3859   0015FE  EC76  F024         	call	___fltol	;wreg free
  3860   001602  C001  F074         	movff	?___fltol,efgtoa@d
  3861   001606  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3862   00160A  EF0C  F00B         	goto	l1534
  3863   00160E                     l4990:
  3864   00160E  0E00               	movlw	0
  3865   001610  0100               	movlb	0	; () banked
  3866   001612  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3867   001614  0E09               	movlw	9
  3868   001616  6F74               	movwf	efgtoa@d& (0+255),b
  3869   001618                     l1534:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3872   001618  0100               	movlb	0	; () banked
  3873   00161A  5171               	movf	efgtoa@pp& (0+255),w,b
  3874   00161C  A4D8               	btfss	status,2,c
  3875   00161E  EF13  F00B         	goto	u4831
  3876   001622  EF15  F00B         	goto	u4830
  3877   001626                     u4831:
  3878   001626  EF3D  F00B         	goto	l5010
  3879   00162A                     u4830:
  3880   00162A                     
  3881                           ; BSR set to: 0
  3882   00162A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3883   00162C  EF1C  F00B         	goto	u4840
  3884   001630  EF1A  F00B         	goto	u4841
  3885   001634                     u4841:
  3886   001634  EF3D  F00B         	goto	l5010
  3887   001638                     u4840:
  3888   001638                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3891   001638  0EA0               	movlw	low _dbuf
  3892   00163A  258B               	addwf	efgtoa@n& (0+255),w,b
  3893   00163C  6ED9               	movwf	fsr2l,c
  3894   00163E  0E02               	movlw	high _dbuf
  3895   001640  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3896   001642  6EDA               	movwf	fsr2h,c
  3897   001644  0E2E               	movlw	46
  3898   001646  6EDF               	movwf	indf2,c
  3899   001648                     
  3900                           ; BSR set to: 0
  3901   001648  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3902   00164A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3903   00164C                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3906   00164C  077A               	decf	efgtoa@w& (0+255),f,b
  3907   00164E  A0D8               	btfss	status,0,c
  3908   001650  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3909   001652                     
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3912   001652  0E01               	movlw	1
  3913   001654  6F71               	movwf	efgtoa@pp& (0+255),b
  3914   001656  EF3D  F00B         	goto	l5010
  3915   00165A                     l5002:
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3919   00165A  0EA0               	movlw	low _dbuf
  3920   00165C  258B               	addwf	efgtoa@n& (0+255),w,b
  3921   00165E  6ED9               	movwf	fsr2l,c
  3922   001660  0E02               	movlw	high _dbuf
  3923   001662  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3924   001664  6EDA               	movwf	fsr2h,c
  3925   001666  0E30               	movlw	48
  3926   001668  6EDF               	movwf	indf2,c
  3927   00166A                     
  3928                           ; BSR set to: 0
  3929   00166A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3930   00166C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3931   00166E                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3934   00166E  077A               	decf	efgtoa@w& (0+255),f,b
  3935   001670  A0D8               	btfss	status,0,c
  3936   001672  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3937   001674                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3940   001674  076D               	decf	efgtoa@t& (0+255),f,b
  3941   001676  A0D8               	btfss	status,0,c
  3942   001678  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3943   00167A                     l5010:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3947   00167A  516D               	movf	efgtoa@t& (0+255),w,b
  3948   00167C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3949   00167E  A4D8               	btfss	status,2,c
  3950   001680  EF44  F00B         	goto	u4851
  3951   001684  EF46  F00B         	goto	u4850
  3952   001688                     u4851:
  3953   001688  EF2D  F00B         	goto	l5002
  3954   00168C                     u4850:
  3955   00168C                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3958   00168C  0EA0               	movlw	low _dbuf
  3959   00168E  258B               	addwf	efgtoa@n& (0+255),w,b
  3960   001690  6ED9               	movwf	fsr2l,c
  3961   001692  0E02               	movlw	high _dbuf
  3962   001694  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3963   001696  6EDA               	movwf	fsr2h,c
  3964   001698  5174               	movf	efgtoa@d& (0+255),w,b
  3965   00169A  0F30               	addlw	48
  3966   00169C  6EDF               	movwf	indf2,c
  3967   00169E                     
  3968                           ; BSR set to: 0
  3969   00169E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3970   0016A0  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3971   0016A2                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3974   0016A2  077A               	decf	efgtoa@w& (0+255),f,b
  3975   0016A4  A0D8               	btfss	status,0,c
  3976   0016A6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3977   0016A8                     
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3980   0016A8  C082  F02A         	movff	efgtoa@h,___flsub@b
  3981   0016AC  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3982   0016B0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3983   0016B4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3984   0016B8  C086  F015         	movff	efgtoa@l,___flmul@a
  3985   0016BC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3986   0016C0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3987   0016C4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3988   0016C8  C091  F011         	movff	efgtoa@u,___flmul@b
  3989   0016CC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3990   0016D0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3991   0016D4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3992   0016D8  EC76  F013         	call	___flmul	;wreg free
  3993   0016DC  C011  F02E         	movff	?___flmul,___flsub@a
  3994   0016E0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3995   0016E4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3996   0016E8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3997   0016EC  ECD9  F02E         	call	___flsub	;wreg free
  3998   0016F0  C02A  F082         	movff	?___flsub,efgtoa@h
  3999   0016F4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4000   0016F8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4001   0016FC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4002   001700                     
  4003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4004   001700  C091  F032         	movff	efgtoa@u,___fldiv@b
  4005   001704  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4006   001708  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4007   00170C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4008   001710  0E00               	movlw	0
  4009   001712  6E36               	movwf	___fldiv@a^0,c
  4010   001714  0E00               	movlw	0
  4011   001716  6E37               	movwf	(___fldiv@a+1)^0,c
  4012   001718  0E20               	movlw	32
  4013   00171A  6E38               	movwf	(___fldiv@a+2)^0,c
  4014   00171C  0E41               	movlw	65
  4015   00171E  6E39               	movwf	(___fldiv@a+3)^0,c
  4016   001720  EC8B  F015         	call	___fldiv	;wreg free
  4017   001724  C032  F091         	movff	?___fldiv,efgtoa@u
  4018   001728  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4019   00172C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4020   001730  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4021   001734                     
  4022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4023   001734  0100               	movlb	0	; () banked
  4024   001736  0769               	decf	efgtoa@ne& (0+255),f,b
  4025   001738  A0D8               	btfss	status,0,c
  4026   00173A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4027   00173C                     
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4030   00173C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4031   00173E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4032   001740                     l5026:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4036   001740  5176               	movf	efgtoa@m& (0+255),w,b
  4037   001742  5D80               	subwf	efgtoa@i& (0+255),w,b
  4038   001744  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4039   001746  0A80               	xorlw	128
  4040   001748  6F67               	movwf	??_efgtoa& (0+255),b
  4041   00174A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4042   00174C  0A80               	xorlw	128
  4043   00174E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4044   001750  B0D8               	btfsc	status,0,c
  4045   001752  EFAD  F00B         	goto	u4861
  4046   001756  EFAF  F00B         	goto	u4860
  4047   00175A                     u4861:
  4048   00175A  EFBD  F00B         	goto	l5030
  4049   00175E                     u4860:
  4050   00175E                     
  4051                           ; BSR set to: 0
  4052   00175E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4053   001760  EFBB  F00B         	goto	u4871
  4054   001764  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4055   001766  E109               	bnz	u4870
  4056   001768  0E4B               	movlw	75
  4057   00176A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4058   00176C  A0D8               	btfss	status,0,c
  4059   00176E  EFBB  F00B         	goto	u4871
  4060   001772  EFBD  F00B         	goto	u4870
  4061   001776                     u4871:
  4062   001776  EFBB  F00A         	goto	l4986
  4063   00177A                     u4870:
  4064   00177A                     l5030:
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4068   00177A  0E00               	movlw	0
  4069   00177C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4070   00177E  0E4F               	movlw	79
  4071   001780  6F80               	movwf	efgtoa@i& (0+255),b
  4072   001782                     
  4073                           ; BSR set to: 0
  4074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4075   001782  0EA0               	movlw	low _dbuf
  4076   001784  2580               	addwf	efgtoa@i& (0+255),w,b
  4077   001786  6ED9               	movwf	fsr2l,c
  4078   001788  0E02               	movlw	high _dbuf
  4079   00178A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4080   00178C  6EDA               	movwf	fsr2h,c
  4081   00178E  0E00               	movlw	0
  4082   001790  6EDF               	movwf	indf2,c
  4083   001792                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4086   001792  0EA0               	movlw	low _dbuf
  4087   001794  6F67               	movwf	??_efgtoa& (0+255),b
  4088   001796  0E02               	movlw	high _dbuf
  4089   001798  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4090   00179A  518B               	movf	efgtoa@n& (0+255),w,b
  4091   00179C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4092   00179E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4093   0017A0  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4094   0017A2  5180               	movf	efgtoa@i& (0+255),w,b
  4095   0017A4  2567               	addwf	??_efgtoa& (0+255),w,b
  4096   0017A6  6E01               	movwf	memcpy@d1^0,c
  4097   0017A8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4098   0017AA  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4099   0017AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4100   0017AE  0EA0               	movlw	low _dbuf
  4101   0017B0  6E03               	movwf	memcpy@s1^0,c
  4102   0017B2  0E02               	movlw	high _dbuf
  4103   0017B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4104   0017B6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4105   0017BA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4106   0017BE  ECC3  F02D         	call	_memcpy	;wreg free
  4107   0017C2                     
  4108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4109   0017C2  0100               	movlb	0	; () banked
  4110   0017C4  518B               	movf	efgtoa@n& (0+255),w,b
  4111   0017C6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4112   0017C8  6F8B               	movwf	efgtoa@n& (0+255),b
  4113   0017CA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4114   0017CC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4115   0017CE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4116   0017D0                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4119   0017D0  518A               	movf	efgtoa@sign& (0+255),w,b
  4120   0017D2  A4D8               	btfss	status,2,c
  4121   0017D4  EFEE  F00B         	goto	u4881
  4122   0017D8  EFF1  F00B         	goto	u4880
  4123   0017DC                     u4881:
  4124   0017DC  0E01               	movlw	1
  4125   0017DE  EFF2  F00B         	goto	u4890
  4126   0017E2                     u4880:
  4127   0017E2  0E00               	movlw	0
  4128   0017E4                     u4890:
  4129   0017E4  6F80               	movwf	efgtoa@i& (0+255),b
  4130   0017E6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4131   0017E8                     
  4132                           ; BSR set to: 0
  4133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4134   0017E8  518A               	movf	efgtoa@sign& (0+255),w,b
  4135   0017EA  B4D8               	btfsc	status,2,c
  4136   0017EC  EFFA  F00B         	goto	u4901
  4137   0017F0  EFFC  F00B         	goto	u4900
  4138   0017F4                     u4901:
  4139   0017F4  EF07  F00C         	goto	l5044
  4140   0017F8                     u4900:
  4141   0017F8                     
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4144   0017F8  078B               	decf	efgtoa@n& (0+255),f,b
  4145   0017FA  A0D8               	btfss	status,0,c
  4146   0017FC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4147   0017FE  0EA0               	movlw	low _dbuf
  4148   001800  258B               	addwf	efgtoa@n& (0+255),w,b
  4149   001802  6ED9               	movwf	fsr2l,c
  4150   001804  0E02               	movlw	high _dbuf
  4151   001806  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4152   001808  6EDA               	movwf	fsr2h,c
  4153   00180A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4154   00180E                     l5044:
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4158   00180E  5180               	movf	efgtoa@i& (0+255),w,b
  4159   001810  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4160   001812  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4161   001814  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4162   001816                     
  4163                           ; BSR set to: 0
  4164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4165   001816  C060  F011         	movff	efgtoa@fp,pad@fp
  4166   00181A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4167   00181E  0EA0               	movlw	low _dbuf
  4168   001820  258B               	addwf	efgtoa@n& (0+255),w,b
  4169   001822  6E13               	movwf	pad@buf^0,c
  4170   001824  0E02               	movlw	high _dbuf
  4171   001826  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4172   001828  6E14               	movwf	(pad@buf+1)^0,c
  4173   00182A  C07A  F015         	movff	efgtoa@w,pad@p
  4174   00182E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4175   001832  EC7E  F029         	call	_pad	;wreg free
  4176   001836                     l1501:
  4177   001836  0012               	return		;funcret
  4178   001838                     __end_of_efgtoa:
  4179                           	callstack 0
  4180                           
  4181 ;; *************** function _strcpy *****************
  4182 ;; Defined at:
  4183 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4186 ;;		 -> dbuf(80), 
  4187 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4188 ;;		 -> STR_5(4), STR_2(4), 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  d               2    6[COMRAM] PTR unsigned char 
  4191 ;;		 -> dbuf(80), 
  4192 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4193 ;;		 -> STR_5(4), STR_2(4), 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2    0[COMRAM] PTR unsigned char 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;Total ram usage:        8 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 1
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_efgtoa
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text6
  4218   005DF8                     __ptext6:
  4219                           	callstack 0
  4220   005DF8                     _strcpy:
  4221                           	callstack 25
  4222   005DF8  C003  F005         	movff	strcpy@src,strcpy@s
  4223   005DFC  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4224   005E00  C001  F007         	movff	strcpy@dest,strcpy@d
  4225   005E04  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4226   005E08                     l4686:
  4227   005E08  C005  FFF6         	movff	strcpy@s,tblptrl
  4228   005E0C  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4229   005E10  4A05               	infsnz	strcpy@s^0,f,c
  4230   005E12  2A06               	incf	(strcpy@s+1)^0,f,c
  4231   005E14                     	if	0	;tblptru may be non-zero
  4232   005E14                     	endif
  4233   005E14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4234   005E14  0E00               	movlw	low (__mediumconst shr (0+16))
  4235   005E16  6EF8               	movwf	tblptru,c
  4236   005E18                     	endif
  4237   005E18  C007  FFD9         	movff	strcpy@d,fsr2l
  4238   005E1C  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4239   005E20  4A07               	infsnz	strcpy@d^0,f,c
  4240   005E22  2A08               	incf	(strcpy@d+1)^0,f,c
  4241   005E24  0008               	tblrd		*
  4242   005E26  CFF5 FFDF          	movff	tablat,indf2
  4243   005E2A  50DF               	movf	indf2,w,c
  4244   005E2C  A4D8               	btfss	status,2,c
  4245   005E2E  EF1B  F02F         	goto	u4331
  4246   005E32  EF1D  F02F         	goto	u4330
  4247   005E36                     u4331:
  4248   005E36  EF04  F02F         	goto	l4686
  4249   005E3A                     u4330:
  4250   005E3A  0012               	return		;funcret
  4251   005E3C                     __end_of_strcpy:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function _memcpy *****************
  4255 ;; Defined at:
  4256 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  d1              2    0[COMRAM] PTR void 
  4259 ;;		 -> dbuf(80), 
  4260 ;;  s1              2    2[COMRAM] PTR const void 
  4261 ;;		 -> dbuf(80), 
  4262 ;;  n               2    4[COMRAM] unsigned int 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4265 ;;		 -> dbuf(80), 
  4266 ;;  d               2    6[COMRAM] PTR unsigned char 
  4267 ;;		 -> dbuf(80), 
  4268 ;;  tmp             1   10[COMRAM] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  2    0[COMRAM] PTR void 
  4271 ;; Registers used:
  4272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4278 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4279 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4281 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;Total ram usage:       11 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_efgtoa
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text7
  4293   005B86                     __ptext7:
  4294                           	callstack 0
  4295   005B86                     _memcpy:
  4296                           	callstack 25
  4297   005B86  C003  F009         	movff	memcpy@s1,memcpy@s
  4298   005B8A  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4299   005B8E  C001  F007         	movff	memcpy@d1,memcpy@d
  4300   005B92  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4301   005B96  EFDD  F02D         	goto	l4730
  4302   005B9A                     l4722:
  4303   005B9A  C009  FFD9         	movff	memcpy@s,fsr2l
  4304   005B9E  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4305   005BA2  50DF               	movf	indf2,w,c
  4306   005BA4  6E0B               	movwf	memcpy@tmp^0,c
  4307   005BA6  4A09               	infsnz	memcpy@s^0,f,c
  4308   005BA8  2A0A               	incf	(memcpy@s+1)^0,f,c
  4309   005BAA  C007  FFD9         	movff	memcpy@d,fsr2l
  4310   005BAE  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4311   005BB2  C00B  FFDF         	movff	memcpy@tmp,indf2
  4312   005BB6  4A07               	infsnz	memcpy@d^0,f,c
  4313   005BB8  2A08               	incf	(memcpy@d+1)^0,f,c
  4314   005BBA                     l4730:
  4315   005BBA  0605               	decf	memcpy@n^0,f,c
  4316   005BBC  A0D8               	btfss	status,0,c
  4317   005BBE  0606               	decf	(memcpy@n+1)^0,f,c
  4318   005BC0  2805               	incf	memcpy@n^0,w,c
  4319   005BC2  E106               	bnz	u4451
  4320   005BC4  2806               	incf	(memcpy@n+1)^0,w,c
  4321   005BC6  A4D8               	btfss	status,2,c
  4322   005BC8  EFE8  F02D         	goto	u4451
  4323   005BCC  EFEA  F02D         	goto	u4450
  4324   005BD0                     u4451:
  4325   005BD0  EFCD  F02D         	goto	l4722
  4326   005BD4                     u4450:
  4327   005BD4  0012               	return		;funcret
  4328   005BD6                     __end_of_memcpy:
  4329                           	callstack 0
  4330                           
  4331 ;; *************** function _labs *****************
  4332 ;; Defined at:
  4333 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  a               4    0[COMRAM] long 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;		None
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  4    0[COMRAM] long 
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;Total ram usage:        8 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_efgtoa
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text8
  4362   00553C                     __ptext8:
  4363                           	callstack 0
  4364   00553C                     _labs:
  4365                           	callstack 25
  4366   00553C  BE04               	btfsc	(labs@a+3)^0,7,c
  4367   00553E  EFAD  F02A         	goto	u4340
  4368   005542  5004               	movf	(labs@a+3)^0,w,c
  4369   005544  1003               	iorwf	(labs@a+2)^0,w,c
  4370   005546  1002               	iorwf	(labs@a+1)^0,w,c
  4371   005548  E106               	bnz	u4341
  4372   00554A  0401               	decf	labs@a^0,w,c
  4373   00554C  B0D8               	btfsc	status,0,c
  4374   00554E  EFAB  F02A         	goto	u4341
  4375   005552  EFAD  F02A         	goto	u4340
  4376   005556                     u4341:
  4377   005556  EFC8  F02A         	goto	l1606
  4378   00555A                     u4340:
  4379   00555A  C001  F005         	movff	labs@a,??_labs
  4380   00555E  C002  F006         	movff	labs@a+1,??_labs+1
  4381   005562  C003  F007         	movff	labs@a+2,??_labs+2
  4382   005566  C004  F008         	movff	labs@a+3,??_labs+3
  4383   00556A  1E05               	comf	??_labs^0,f,c
  4384   00556C  1E06               	comf	(??_labs+1)^0,f,c
  4385   00556E  1E07               	comf	(??_labs+2)^0,f,c
  4386   005570  1E08               	comf	(??_labs+3)^0,f,c
  4387   005572  2A05               	incf	??_labs^0,f,c
  4388   005574  0E00               	movlw	0
  4389   005576  2206               	addwfc	(??_labs+1)^0,f,c
  4390   005578  2207               	addwfc	(??_labs+2)^0,f,c
  4391   00557A  2208               	addwfc	(??_labs+3)^0,f,c
  4392   00557C  C005  F001         	movff	??_labs,?_labs
  4393   005580  C006  F002         	movff	??_labs+1,?_labs+1
  4394   005584  C007  F003         	movff	??_labs+2,?_labs+2
  4395   005588  C008  F004         	movff	??_labs+3,?_labs+3
  4396   00558C  EFD0  F02A         	goto	l1609
  4397   005590                     l1606:
  4398   005590  C001  F001         	movff	labs@a,?_labs
  4399   005594  C002  F002         	movff	labs@a+1,?_labs+1
  4400   005598  C003  F003         	movff	labs@a+2,?_labs+2
  4401   00559C  C004  F004         	movff	labs@a+3,?_labs+3
  4402   0055A0                     l1609:
  4403   0055A0  0012               	return		;funcret
  4404   0055A2                     __end_of_labs:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _floorf *****************
  4408 ;; Defined at:
  4409 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  x               4   74[COMRAM] float 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  u               4   90[COMRAM] struct .
  4414 ;;  m               4   84[COMRAM] unsigned long 
  4415 ;;  e               2   88[COMRAM] int 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  4   74[COMRAM] float 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;Total ram usage:       20 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_efgtoa
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text9
  4440   003F22                     __ptext9:
  4441                           	callstack 0
  4442   003F22                     _floorf:
  4443                           	callstack 25
  4444   003F22  C0DF  F05B         	movff	floorf@F526,floorf@u
  4445   003F26  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4446   003F2A  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4447   003F2E  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4448   003F32  C04B  F05B         	movff	floorf@x,floorf@u
  4449   003F36  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4450   003F3A  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4451   003F3E  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4452   003F42  0E81               	movlw	129
  4453   003F44  6E4F               	movwf	??_floorf^0,c
  4454   003F46  0EFF               	movlw	255
  4455   003F48  6E50               	movwf	(??_floorf+1)^0,c
  4456   003F4A  C05B  F051         	movff	floorf@u,??_floorf+2
  4457   003F4E  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4458   003F52  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4459   003F56  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4460   003F5A  0E18               	movlw	24
  4461   003F5C  EFB5  F01F         	goto	u4350
  4462   003F60                     u4355:
  4463   003F60  90D8               	bcf	status,0,c
  4464   003F62  3254               	rrcf	(??_floorf+5)^0,f,c
  4465   003F64  3253               	rrcf	(??_floorf+4)^0,f,c
  4466   003F66  3252               	rrcf	(??_floorf+3)^0,f,c
  4467   003F68  3251               	rrcf	(??_floorf+2)^0,f,c
  4468   003F6A                     u4350:
  4469   003F6A  2EE8               	decfsz	wreg,f,c
  4470   003F6C  EFB0  F01F         	goto	u4355
  4471   003F70  5051               	movf	(??_floorf+2)^0,w,c
  4472   003F72  244F               	addwf	??_floorf^0,w,c
  4473   003F74  6E59               	movwf	floorf@e^0,c
  4474   003F76  0E00               	movlw	0
  4475   003F78  2050               	addwfc	(??_floorf+1)^0,w,c
  4476   003F7A  6E5A               	movwf	(floorf@e+1)^0,c
  4477   003F7C  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4478   003F7E  EFCA  F01F         	goto	u4361
  4479   003F82  505A               	movf	(floorf@e+1)^0,w,c
  4480   003F84  E109               	bnz	u4360
  4481   003F86  0E17               	movlw	23
  4482   003F88  5C59               	subwf	floorf@e^0,w,c
  4483   003F8A  A0D8               	btfss	status,0,c
  4484   003F8C  EFCA  F01F         	goto	u4361
  4485   003F90  EFCC  F01F         	goto	u4360
  4486   003F94                     u4361:
  4487   003F94  EFD6  F01F         	goto	l4698
  4488   003F98                     u4360:
  4489   003F98                     l4696:
  4490   003F98  C04B  F04B         	movff	floorf@x,?_floorf
  4491   003F9C  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4492   003FA0  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4493   003FA4  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4494   003FA8  EF99  F020         	goto	l1595
  4495   003FAC                     l4698:
  4496   003FAC  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4497   003FAE  EFDB  F01F         	goto	u4371
  4498   003FB2  EFDD  F01F         	goto	u4370
  4499   003FB6                     u4371:
  4500   003FB6  EF4D  F020         	goto	l4708
  4501   003FBA                     u4370:
  4502   003FBA  C059  F04F         	movff	floorf@e,??_floorf
  4503   003FBE  0EFF               	movlw	255
  4504   003FC0  6E50               	movwf	(??_floorf+1)^0,c
  4505   003FC2  0EFF               	movlw	255
  4506   003FC4  6E51               	movwf	(??_floorf+2)^0,c
  4507   003FC6  0E7F               	movlw	127
  4508   003FC8  6E52               	movwf	(??_floorf+3)^0,c
  4509   003FCA  0E00               	movlw	0
  4510   003FCC  6E53               	movwf	(??_floorf+4)^0,c
  4511   003FCE                     u4385:
  4512   003FCE  664F               	tstfsz	??_floorf^0,c
  4513   003FD0  EFEC  F01F         	goto	u4386
  4514   003FD4  EFF4  F01F         	goto	u4387
  4515   003FD8                     u4386:
  4516   003FD8  3453               	rlcf	(??_floorf+4)^0,w,c
  4517   003FDA  3253               	rrcf	(??_floorf+4)^0,f,c
  4518   003FDC  3252               	rrcf	(??_floorf+3)^0,f,c
  4519   003FDE  3251               	rrcf	(??_floorf+2)^0,f,c
  4520   003FE0  3250               	rrcf	(??_floorf+1)^0,f,c
  4521   003FE2  2E4F               	decfsz	??_floorf^0,f,c
  4522   003FE4  EFE7  F01F         	goto	u4385
  4523   003FE8                     u4387:
  4524   003FE8  C050  F055         	movff	??_floorf+1,floorf@m
  4525   003FEC  C051  F056         	movff	??_floorf+2,floorf@m+1
  4526   003FF0  C052  F057         	movff	??_floorf+3,floorf@m+2
  4527   003FF4  C053  F058         	movff	??_floorf+4,floorf@m+3
  4528   003FF8  5055               	movf	floorf@m^0,w,c
  4529   003FFA  145B               	andwf	floorf@u^0,w,c
  4530   003FFC  6E4F               	movwf	??_floorf^0,c
  4531   003FFE  5056               	movf	(floorf@m+1)^0,w,c
  4532   004000  145C               	andwf	(floorf@u+1)^0,w,c
  4533   004002  6E50               	movwf	(??_floorf+1)^0,c
  4534   004004  5057               	movf	(floorf@m+2)^0,w,c
  4535   004006  145D               	andwf	(floorf@u+2)^0,w,c
  4536   004008  6E51               	movwf	(??_floorf+2)^0,c
  4537   00400A  5058               	movf	(floorf@m+3)^0,w,c
  4538   00400C  145E               	andwf	(floorf@u+3)^0,w,c
  4539   00400E  6E52               	movwf	(??_floorf+3)^0,c
  4540   004010  504F               	movf	??_floorf^0,w,c
  4541   004012  1050               	iorwf	(??_floorf+1)^0,w,c
  4542   004014  1051               	iorwf	(??_floorf+2)^0,w,c
  4543   004016  1052               	iorwf	(??_floorf+3)^0,w,c
  4544   004018  A4D8               	btfss	status,2,c
  4545   00401A  EF11  F020         	goto	u4391
  4546   00401E  EF13  F020         	goto	u4390
  4547   004022                     u4391:
  4548   004022  EF15  F020         	goto	l4704
  4549   004026                     u4390:
  4550   004026  EFCC  F01F         	goto	l4696
  4551   00402A                     l4704:
  4552   00402A  C05B  F04F         	movff	floorf@u,??_floorf
  4553   00402E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4554   004032  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4555   004036  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4556   00403A  0E20               	movlw	32
  4557   00403C  EF25  F020         	goto	u4400
  4558   004040                     u4405:
  4559   004040  90D8               	bcf	status,0,c
  4560   004042  3252               	rrcf	(??_floorf+3)^0,f,c
  4561   004044  3251               	rrcf	(??_floorf+2)^0,f,c
  4562   004046  3250               	rrcf	(??_floorf+1)^0,f,c
  4563   004048  324F               	rrcf	??_floorf^0,f,c
  4564   00404A                     u4400:
  4565   00404A  2EE8               	decfsz	wreg,f,c
  4566   00404C  EF20  F020         	goto	u4405
  4567   004050  504F               	movf	??_floorf^0,w,c
  4568   004052  1050               	iorwf	(??_floorf+1)^0,w,c
  4569   004054  1051               	iorwf	(??_floorf+2)^0,w,c
  4570   004056  1052               	iorwf	(??_floorf+3)^0,w,c
  4571   004058  B4D8               	btfsc	status,2,c
  4572   00405A  EF31  F020         	goto	u4411
  4573   00405E  EF33  F020         	goto	u4410
  4574   004062                     u4411:
  4575   004062  EF3B  F020         	goto	l1598
  4576   004066                     u4410:
  4577   004066  5055               	movf	floorf@m^0,w,c
  4578   004068  265B               	addwf	floorf@u^0,f,c
  4579   00406A  5056               	movf	(floorf@m+1)^0,w,c
  4580   00406C  225C               	addwfc	(floorf@u+1)^0,f,c
  4581   00406E  5057               	movf	(floorf@m+2)^0,w,c
  4582   004070  225D               	addwfc	(floorf@u+2)^0,f,c
  4583   004072  5058               	movf	(floorf@m+3)^0,w,c
  4584   004074  225E               	addwfc	(floorf@u+3)^0,f,c
  4585   004076                     l1598:
  4586   004076  1C55               	comf	floorf@m^0,w,c
  4587   004078  6E4F               	movwf	??_floorf^0,c
  4588   00407A  1C56               	comf	(floorf@m+1)^0,w,c
  4589   00407C  6E50               	movwf	(??_floorf+1)^0,c
  4590   00407E  1C57               	comf	(floorf@m+2)^0,w,c
  4591   004080  6E51               	movwf	(??_floorf+2)^0,c
  4592   004082  1C58               	comf	(floorf@m+3)^0,w,c
  4593   004084  6E52               	movwf	(??_floorf+3)^0,c
  4594   004086  504F               	movf	??_floorf^0,w,c
  4595   004088  165B               	andwf	floorf@u^0,f,c
  4596   00408A  5050               	movf	(??_floorf+1)^0,w,c
  4597   00408C  165C               	andwf	(floorf@u+1)^0,f,c
  4598   00408E  5051               	movf	(??_floorf+2)^0,w,c
  4599   004090  165D               	andwf	(floorf@u+2)^0,f,c
  4600   004092  5052               	movf	(??_floorf+3)^0,w,c
  4601   004094  165E               	andwf	(floorf@u+3)^0,f,c
  4602   004096  EF91  F020         	goto	l4716
  4603   00409A                     l4708:
  4604   00409A  C05B  F04F         	movff	floorf@u,??_floorf
  4605   00409E  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4606   0040A2  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4607   0040A6  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4608   0040AA  0E20               	movlw	32
  4609   0040AC  EF5D  F020         	goto	u4420
  4610   0040B0                     u4425:
  4611   0040B0  90D8               	bcf	status,0,c
  4612   0040B2  3252               	rrcf	(??_floorf+3)^0,f,c
  4613   0040B4  3251               	rrcf	(??_floorf+2)^0,f,c
  4614   0040B6  3250               	rrcf	(??_floorf+1)^0,f,c
  4615   0040B8  324F               	rrcf	??_floorf^0,f,c
  4616   0040BA                     u4420:
  4617   0040BA  2EE8               	decfsz	wreg,f,c
  4618   0040BC  EF58  F020         	goto	u4425
  4619   0040C0  504F               	movf	??_floorf^0,w,c
  4620   0040C2  1050               	iorwf	(??_floorf+1)^0,w,c
  4621   0040C4  1051               	iorwf	(??_floorf+2)^0,w,c
  4622   0040C6  1052               	iorwf	(??_floorf+3)^0,w,c
  4623   0040C8  A4D8               	btfss	status,2,c
  4624   0040CA  EF69  F020         	goto	u4431
  4625   0040CE  EF6B  F020         	goto	u4430
  4626   0040D2                     u4431:
  4627   0040D2  EF75  F020         	goto	l4712
  4628   0040D6                     u4430:
  4629   0040D6  0E00               	movlw	0
  4630   0040D8  6E5B               	movwf	floorf@u^0,c
  4631   0040DA  0E00               	movlw	0
  4632   0040DC  6E5C               	movwf	(floorf@u+1)^0,c
  4633   0040DE  0E00               	movlw	0
  4634   0040E0  6E5D               	movwf	(floorf@u+2)^0,c
  4635   0040E2  0E00               	movlw	0
  4636   0040E4  6E5E               	movwf	(floorf@u+3)^0,c
  4637   0040E6  EF91  F020         	goto	l4716
  4638   0040EA                     l4712:
  4639   0040EA  90D8               	bcf	status,0,c
  4640   0040EC  345B               	rlcf	floorf@u^0,w,c
  4641   0040EE  6E4F               	movwf	??_floorf^0,c
  4642   0040F0  345C               	rlcf	(floorf@u+1)^0,w,c
  4643   0040F2  6E50               	movwf	(??_floorf+1)^0,c
  4644   0040F4  345D               	rlcf	(floorf@u+2)^0,w,c
  4645   0040F6  6E51               	movwf	(??_floorf+2)^0,c
  4646   0040F8  345E               	rlcf	(floorf@u+3)^0,w,c
  4647   0040FA  6E52               	movwf	(??_floorf+3)^0,c
  4648   0040FC  504F               	movf	??_floorf^0,w,c
  4649   0040FE  1050               	iorwf	(??_floorf+1)^0,w,c
  4650   004100  1051               	iorwf	(??_floorf+2)^0,w,c
  4651   004102  1052               	iorwf	(??_floorf+3)^0,w,c
  4652   004104  B4D8               	btfsc	status,2,c
  4653   004106  EF87  F020         	goto	u4441
  4654   00410A  EF89  F020         	goto	u4440
  4655   00410E                     u4441:
  4656   00410E  EF91  F020         	goto	l4716
  4657   004112                     u4440:
  4658   004112  0E00               	movlw	0
  4659   004114  6E5B               	movwf	floorf@u^0,c
  4660   004116  0E00               	movlw	0
  4661   004118  6E5C               	movwf	(floorf@u+1)^0,c
  4662   00411A  0E80               	movlw	128
  4663   00411C  6E5D               	movwf	(floorf@u+2)^0,c
  4664   00411E  0EBF               	movlw	191
  4665   004120  6E5E               	movwf	(floorf@u+3)^0,c
  4666   004122                     l4716:
  4667   004122  C05B  F04B         	movff	floorf@u,?_floorf
  4668   004126  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4669   00412A  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4670   00412E  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4671   004132                     l1595:
  4672   004132  0012               	return		;funcret
  4673   004134                     __end_of_floorf:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function ___fpclassifyf *****************
  4677 ;; Defined at:
  4678 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  x               4    0[COMRAM] float 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  u               4   10[COMRAM] struct .
  4683 ;;  e               2    8[COMRAM] int 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  2    0[COMRAM] int 
  4686 ;; Registers used:
  4687 ;;		wreg, status,2, status,0
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4696 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;Total ram usage:       14 bytes
  4698 ;; Hardware stack levels used: 1
  4699 ;; Hardware stack levels required when called: 1
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_efgtoa
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text10
  4708   004AF6                     __ptext10:
  4709                           	callstack 0
  4710   004AF6                     ___fpclassifyf:
  4711                           	callstack 25
  4712   004AF6  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4713   004AFA  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4714   004AFE  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4715   004B02  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4716   004B06  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4717   004B0A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4718   004B0E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4719   004B12  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4720   004B16  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4721   004B1A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4722   004B1E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4723   004B22  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4724   004B26  0E18               	movlw	24
  4725   004B28  EF9B  F025         	goto	u4260
  4726   004B2C                     u4265:
  4727   004B2C  90D8               	bcf	status,0,c
  4728   004B2E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4729   004B30  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4730   004B32  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4731   004B34  3205               	rrcf	??___fpclassifyf^0,f,c
  4732   004B36                     u4260:
  4733   004B36  2EE8               	decfsz	wreg,f,c
  4734   004B38  EF96  F025         	goto	u4265
  4735   004B3C  5005               	movf	??___fpclassifyf^0,w,c
  4736   004B3E  6E09               	movwf	___fpclassifyf@e^0,c
  4737   004B40  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4738   004B42  5009               	movf	___fpclassifyf@e^0,w,c
  4739   004B44  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4740   004B46  A4D8               	btfss	status,2,c
  4741   004B48  EFA8  F025         	goto	u4271
  4742   004B4C  EFAA  F025         	goto	u4270
  4743   004B50                     u4271:
  4744   004B50  EFCA  F025         	goto	l4674
  4745   004B54                     u4270:
  4746   004B54  90D8               	bcf	status,0,c
  4747   004B56  340B               	rlcf	___fpclassifyf@u^0,w,c
  4748   004B58  6E05               	movwf	??___fpclassifyf^0,c
  4749   004B5A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4750   004B5C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4751   004B5E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4752   004B60  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4753   004B62  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4754   004B64  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4755   004B66  5005               	movf	??___fpclassifyf^0,w,c
  4756   004B68  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4757   004B6A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4758   004B6C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4759   004B6E  A4D8               	btfss	status,2,c
  4760   004B70  EFBC  F025         	goto	u4281
  4761   004B74  EFBE  F025         	goto	u4280
  4762   004B78                     u4281:
  4763   004B78  EFC4  F025         	goto	l4670
  4764   004B7C                     u4280:
  4765   004B7C  0E00               	movlw	0
  4766   004B7E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4767   004B80  0E02               	movlw	2
  4768   004B82  6E01               	movwf	?___fpclassifyf^0,c
  4769   004B84  EFF9  F025         	goto	l1581
  4770   004B88                     l4670:
  4771   004B88  0E00               	movlw	0
  4772   004B8A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4773   004B8C  0E03               	movlw	3
  4774   004B8E  6E01               	movwf	?___fpclassifyf^0,c
  4775   004B90  EFF9  F025         	goto	l1581
  4776   004B94                     l4674:
  4777   004B94  2809               	incf	___fpclassifyf@e^0,w,c
  4778   004B96  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4779   004B98  A4D8               	btfss	status,2,c
  4780   004B9A  EFD1  F025         	goto	u4291
  4781   004B9E  EFD3  F025         	goto	u4290
  4782   004BA2                     u4291:
  4783   004BA2  EFF5  F025         	goto	l4680
  4784   004BA6                     u4290:
  4785   004BA6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4786   004BAA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4787   004BAE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4788   004BB2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4789   004BB6  0E09               	movlw	9
  4790   004BB8                     u4305:
  4791   004BB8  90D8               	bcf	status,0,c
  4792   004BBA  3605               	rlcf	??___fpclassifyf^0,f,c
  4793   004BBC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4794   004BBE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4795   004BC0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4796   004BC2  2EE8               	decfsz	wreg,f,c
  4797   004BC4  EFDC  F025         	goto	u4305
  4798   004BC8  5005               	movf	??___fpclassifyf^0,w,c
  4799   004BCA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4800   004BCC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4801   004BCE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4802   004BD0  B4D8               	btfsc	status,2,c
  4803   004BD2  EFED  F025         	goto	u4311
  4804   004BD6  EFF0  F025         	goto	u4310
  4805   004BDA                     u4311:
  4806   004BDA  0E01               	movlw	1
  4807   004BDC  EFF1  F025         	goto	u4320
  4808   004BE0                     u4310:
  4809   004BE0  0E00               	movlw	0
  4810   004BE2                     u4320:
  4811   004BE2  6E01               	movwf	?___fpclassifyf^0,c
  4812   004BE4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4813   004BE6  EFF9  F025         	goto	l1581
  4814   004BEA                     l4680:
  4815   004BEA  0E00               	movlw	0
  4816   004BEC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4817   004BEE  0E04               	movlw	4
  4818   004BF0  6E01               	movwf	?___fpclassifyf^0,c
  4819   004BF2                     l1581:
  4820   004BF2  0012               	return		;funcret
  4821   004BF4                     __end_of___fpclassifyf:
  4822                           	callstack 0
  4823                           
  4824 ;; *************** function ___fltol *****************
  4825 ;; Defined at:
  4826 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  f1              4    0[COMRAM] int 
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;  exp1            1    9[COMRAM] unsigned char 
  4831 ;;  sign1           1    8[COMRAM] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  4    0[COMRAM] long 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:       10 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_reverseOneBlock
  4852 ;;		_ForwardOneBlock
  4853 ;;		_Forwardhalfblock
  4854 ;;		_Backhalfblock
  4855 ;;		_efgtoa
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text11
  4860   0048EC                     __ptext11:
  4861                           	callstack 0
  4862   0048EC                     ___fltol:
  4863                           	callstack 25
  4864   0048EC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4865   0048EE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4866   0048F0  6E0A               	movwf	___fltol@exp1^0,c
  4867   0048F2  500A               	movf	___fltol@exp1^0,w,c
  4868   0048F4  A4D8               	btfss	status,2,c
  4869   0048F6  EF7F  F024         	goto	u4161
  4870   0048FA  EF81  F024         	goto	u4160
  4871   0048FE                     u4161:
  4872   0048FE  EF8B  F024         	goto	l4606
  4873   004902                     u4160:
  4874   004902                     l4602:
  4875   004902  0E00               	movlw	0
  4876   004904  6E01               	movwf	?___fltol^0,c
  4877   004906  0E00               	movlw	0
  4878   004908  6E02               	movwf	(?___fltol+1)^0,c
  4879   00490A  0E00               	movlw	0
  4880   00490C  6E03               	movwf	(?___fltol+2)^0,c
  4881   00490E  0E00               	movlw	0
  4882   004910  6E04               	movwf	(?___fltol+3)^0,c
  4883   004912  EFF8  F024         	goto	l1054
  4884   004916                     l4606:
  4885   004916  C001  F005         	movff	___fltol@f1,??___fltol
  4886   00491A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4887   00491E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4888   004922  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4889   004926  0E20               	movlw	32
  4890   004928  EF9B  F024         	goto	u4170
  4891   00492C                     u4175:
  4892   00492C  90D8               	bcf	status,0,c
  4893   00492E  3208               	rrcf	(??___fltol+3)^0,f,c
  4894   004930  3207               	rrcf	(??___fltol+2)^0,f,c
  4895   004932  3206               	rrcf	(??___fltol+1)^0,f,c
  4896   004934  3205               	rrcf	??___fltol^0,f,c
  4897   004936                     u4170:
  4898   004936  2EE8               	decfsz	wreg,f,c
  4899   004938  EF96  F024         	goto	u4175
  4900   00493C  5005               	movf	??___fltol^0,w,c
  4901   00493E  6E09               	movwf	___fltol@sign1^0,c
  4902   004940  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4903   004942  0EFF               	movlw	255
  4904   004944  1601               	andwf	___fltol@f1^0,f,c
  4905   004946  0EFF               	movlw	255
  4906   004948  1602               	andwf	(___fltol@f1+1)^0,f,c
  4907   00494A  0EFF               	movlw	255
  4908   00494C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4909   00494E  0E00               	movlw	0
  4910   004950  1604               	andwf	(___fltol@f1+3)^0,f,c
  4911   004952  0E96               	movlw	150
  4912   004954  5E0A               	subwf	___fltol@exp1^0,f,c
  4913   004956  BE0A               	btfsc	___fltol@exp1^0,7,c
  4914   004958  EFB2  F024         	goto	u4180
  4915   00495C  EFB0  F024         	goto	u4181
  4916   004960                     u4181:
  4917   004960  EFC8  F024         	goto	l4626
  4918   004964                     u4180:
  4919   004964  500A               	movf	___fltol@exp1^0,w,c
  4920   004966  0A80               	xorlw	128
  4921   004968  0F97               	addlw	151
  4922   00496A  B0D8               	btfsc	status,0,c
  4923   00496C  EFBA  F024         	goto	u4191
  4924   004970  EFBC  F024         	goto	u4190
  4925   004974                     u4191:
  4926   004974  EFBE  F024         	goto	l4622
  4927   004978                     u4190:
  4928   004978  EF81  F024         	goto	l4602
  4929   00497C                     l4622:
  4930   00497C  90D8               	bcf	status,0,c
  4931   00497E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4932   004980  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4933   004982  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4934   004984  3201               	rrcf	___fltol@f1^0,f,c
  4935   004986  3E0A               	incfsz	___fltol@exp1^0,f,c
  4936   004988  EFBE  F024         	goto	l4622
  4937   00498C  EFE0  F024         	goto	l4636
  4938   004990                     l4626:
  4939   004990  0E1F               	movlw	31
  4940   004992  640A               	cpfsgt	___fltol@exp1^0,c
  4941   004994  EFCE  F024         	goto	u4201
  4942   004998  EFD0  F024         	goto	u4200
  4943   00499C                     u4201:
  4944   00499C  EFD8  F024         	goto	l4634
  4945   0049A0                     u4200:
  4946   0049A0  EF81  F024         	goto	l4602
  4947   0049A4                     l4632:
  4948   0049A4  90D8               	bcf	status,0,c
  4949   0049A6  3601               	rlcf	___fltol@f1^0,f,c
  4950   0049A8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4951   0049AA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4952   0049AC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4953   0049AE  060A               	decf	___fltol@exp1^0,f,c
  4954   0049B0                     l4634:
  4955   0049B0  500A               	movf	___fltol@exp1^0,w,c
  4956   0049B2  A4D8               	btfss	status,2,c
  4957   0049B4  EFDE  F024         	goto	u4211
  4958   0049B8  EFE0  F024         	goto	u4210
  4959   0049BC                     u4211:
  4960   0049BC  EFD2  F024         	goto	l4632
  4961   0049C0                     u4210:
  4962   0049C0                     l4636:
  4963   0049C0  5009               	movf	___fltol@sign1^0,w,c
  4964   0049C2  B4D8               	btfsc	status,2,c
  4965   0049C4  EFE6  F024         	goto	u4221
  4966   0049C8  EFE8  F024         	goto	u4220
  4967   0049CC                     u4221:
  4968   0049CC  EFF0  F024         	goto	l4640
  4969   0049D0                     u4220:
  4970   0049D0  1E04               	comf	(___fltol@f1+3)^0,f,c
  4971   0049D2  1E03               	comf	(___fltol@f1+2)^0,f,c
  4972   0049D4  1E02               	comf	(___fltol@f1+1)^0,f,c
  4973   0049D6  6C01               	negf	___fltol@f1^0,c
  4974   0049D8  0E00               	movlw	0
  4975   0049DA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4976   0049DC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4977   0049DE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4978   0049E0                     l4640:
  4979   0049E0  C001  F001         	movff	___fltol@f1,?___fltol
  4980   0049E4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4981   0049E8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4982   0049EC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4983   0049F0                     l1054:
  4984   0049F0  0012               	return		;funcret
  4985   0049F2                     __end_of___fltol:
  4986                           	callstack 0
  4987                           
  4988 ;; *************** function ___flneg *****************
  4989 ;; Defined at:
  4990 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  f1              4    0[COMRAM] long 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  4    0[COMRAM] long 
  4997 ;; Registers used:
  4998 ;;		wreg, status,2, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;Total ram usage:        4 bytes
  5009 ;; Hardware stack levels used: 1
  5010 ;; Hardware stack levels required when called: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_efgtoa
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text12
  5019   005F7E                     __ptext12:
  5020                           	callstack 0
  5021   005F7E                     ___flneg:
  5022                           	callstack 25
  5023   005F7E  5001               	movf	___flneg@f1^0,w,c
  5024   005F80  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5025   005F82  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5026   005F84  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5027   005F86  B4D8               	btfsc	status,2,c
  5028   005F88  EFC8  F02F         	goto	u4151
  5029   005F8C  EFCA  F02F         	goto	u4150
  5030   005F90                     u4151:
  5031   005F90  EFD2  F02F         	goto	l4596
  5032   005F94                     u4150:
  5033   005F94  0E00               	movlw	0
  5034   005F96  1A01               	xorwf	___flneg@f1^0,f,c
  5035   005F98  0E00               	movlw	0
  5036   005F9A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5037   005F9C  0E00               	movlw	0
  5038   005F9E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5039   005FA0  0E80               	movlw	128
  5040   005FA2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5041   005FA4                     l4596:
  5042   005FA4  C001  F001         	movff	___flneg@f1,?___flneg
  5043   005FA8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5044   005FAC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5045   005FB0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5046   005FB4  0012               	return		;funcret
  5047   005FB6                     __end_of___flneg:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _dtoa *****************
  5051 ;; Defined at:
  5052 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5055 ;;		 -> sprintf@f(11), 
  5056 ;;  d               8   29[COMRAM] long long 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  n               8   51[COMRAM] long long 
  5059 ;;  i               2   59[COMRAM] int 
  5060 ;;  w               2   49[COMRAM] int 
  5061 ;;  p               2   47[COMRAM] int 
  5062 ;;  s               1   61[COMRAM] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5072 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;Total ram usage:       35 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 5
  5079 ;; This function calls:
  5080 ;;		___aodiv
  5081 ;;		___aomod
  5082 ;;		_abs
  5083 ;;		_pad
  5084 ;; This function is called by:
  5085 ;;		_vfpfcnvrt
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text13
  5090   0037D8                     __ptext13:
  5091                           	callstack 0
  5092   0037D8                     _dtoa:
  5093                           	callstack 22
  5094   0037D8                     
  5095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5096   0037D8  C01E  F034         	movff	dtoa@d,dtoa@n
  5097   0037DC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5098   0037E0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5099   0037E4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5100   0037E8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5101   0037EC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5102   0037F0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5103   0037F4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5104   0037F8                     
  5105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5106   0037F8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5107   0037FA  EF01  F01C         	goto	u4491
  5108   0037FE  EF04  F01C         	goto	u4490
  5109   003802                     u4491:
  5110   003802  0E01               	movlw	1
  5111   003804  EF05  F01C         	goto	u4500
  5112   003808                     u4490:
  5113   003808  0E00               	movlw	0
  5114   00380A                     u4500:
  5115   00380A  6E3E               	movwf	dtoa@s^0,c
  5116   00380C                     
  5117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5118   00380C  503E               	movf	dtoa@s^0,w,c
  5119   00380E  B4D8               	btfsc	status,2,c
  5120   003810  EF0C  F01C         	goto	u4511
  5121   003814  EF0E  F01C         	goto	u4510
  5122   003818                     u4511:
  5123   003818  EF1E  F01C         	goto	l4784
  5124   00381C                     u4510:
  5125   00381C                     
  5126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5127   00381C  1E3B               	comf	(dtoa@n+7)^0,f,c
  5128   00381E  1E3A               	comf	(dtoa@n+6)^0,f,c
  5129   003820  1E39               	comf	(dtoa@n+5)^0,f,c
  5130   003822  1E38               	comf	(dtoa@n+4)^0,f,c
  5131   003824  1E37               	comf	(dtoa@n+3)^0,f,c
  5132   003826  1E36               	comf	(dtoa@n+2)^0,f,c
  5133   003828  1E35               	comf	(dtoa@n+1)^0,f,c
  5134   00382A  6C34               	negf	dtoa@n^0,c
  5135   00382C  0E00               	movlw	0
  5136   00382E  2235               	addwfc	(dtoa@n+1)^0,f,c
  5137   003830  2236               	addwfc	(dtoa@n+2)^0,f,c
  5138   003832  2237               	addwfc	(dtoa@n+3)^0,f,c
  5139   003834  2238               	addwfc	(dtoa@n+4)^0,f,c
  5140   003836  2239               	addwfc	(dtoa@n+5)^0,f,c
  5141   003838  223A               	addwfc	(dtoa@n+6)^0,f,c
  5142   00383A  223B               	addwfc	(dtoa@n+7)^0,f,c
  5143   00383C                     l4784:
  5144                           
  5145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5146   00383C  0100               	movlb	0	; () banked
  5147   00383E  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5148   003840  EF2C  F01C         	goto	u4520
  5149   003844  51EA               	movf	(_prec+1)& (0+255),w,b
  5150   003846  E106               	bnz	u4521
  5151   003848  05E9               	decf	_prec& (0+255),w,b
  5152   00384A  B0D8               	btfsc	status,0,c
  5153   00384C  EF2A  F01C         	goto	u4521
  5154   003850  EF2C  F01C         	goto	u4520
  5155   003854                     u4521:
  5156   003854  EF32  F01C         	goto	l1476
  5157   003858                     u4520:
  5158   003858                     
  5159                           ; BSR set to: 0
  5160   003858  0E00               	movlw	0
  5161   00385A  6E31               	movwf	(dtoa@p+1)^0,c
  5162   00385C  0E01               	movlw	1
  5163   00385E  6E30               	movwf	dtoa@p^0,c
  5164   003860  EF36  F01C         	goto	l1478
  5165   003864                     l1476:
  5166                           
  5167                           ; BSR set to: 0
  5168   003864  C0E9  F030         	movff	_prec,dtoa@p
  5169   003868  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5170   00386C                     l1478:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5174   00386C  C0E7  F032         	movff	_width,dtoa@w
  5175   003870  C0E8  F033         	movff	_width+1,dtoa@w+1
  5176   003874                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5179   003874  503E               	movf	dtoa@s^0,w,c
  5180   003876  B4D8               	btfsc	status,2,c
  5181   003878  EF40  F01C         	goto	u4531
  5182   00387C  EF42  F01C         	goto	u4530
  5183   003880                     u4531:
  5184   003880  EF59  F01C         	goto	l1479
  5185   003884                     u4530:
  5186   003884                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5189   003884  0632               	decf	dtoa@w^0,f,c
  5190   003886  A0D8               	btfss	status,0,c
  5191   003888  0633               	decf	(dtoa@w+1)^0,f,c
  5192   00388A                     
  5193                           ; BSR set to: 0
  5194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5195   00388A  503E               	movf	dtoa@s^0,w,c
  5196   00388C  A4D8               	btfss	status,2,c
  5197   00388E  EF4B  F01C         	goto	u4541
  5198   003892  EF4D  F01C         	goto	u4540
  5199   003896                     u4541:
  5200   003896  EF53  F01C         	goto	l4796
  5201   00389A                     u4540:
  5202   00389A                     
  5203                           ; BSR set to: 0
  5204   00389A  0E00               	movlw	0
  5205   00389C  6E2F               	movwf	(_dtoa$2875+1)^0,c
  5206   00389E  0E2B               	movlw	43
  5207   0038A0  6E2E               	movwf	_dtoa$2875^0,c
  5208   0038A2  EF57  F01C         	goto	l4798
  5209   0038A6                     l4796:
  5210                           
  5211                           ; BSR set to: 0
  5212   0038A6  0E00               	movlw	0
  5213   0038A8  6E2F               	movwf	(_dtoa$2875+1)^0,c
  5214   0038AA  0E2D               	movlw	45
  5215   0038AC  6E2E               	movwf	_dtoa$2875^0,c
  5216   0038AE                     l4798:
  5217                           
  5218                           ; BSR set to: 0
  5219   0038AE  C02E  F03E         	movff	_dtoa$2875,dtoa@s
  5220   0038B2                     l1479:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5224   0038B2  0E00               	movlw	0
  5225   0038B4  6E3D               	movwf	(dtoa@i+1)^0,c
  5226   0038B6  0E4F               	movlw	79
  5227   0038B8  6E3C               	movwf	dtoa@i^0,c
  5228   0038BA                     
  5229                           ; BSR set to: 0
  5230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5231   0038BA  0E00               	movlw	0
  5232   0038BC  0102               	movlb	2	; () banked
  5233   0038BE  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5234                           
  5235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5236   0038C0  EFDE  F01C         	goto	l4812
  5237   0038C4                     l4802:
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5240   0038C4  063C               	decf	dtoa@i^0,f,c
  5241   0038C6  A0D8               	btfss	status,0,c
  5242   0038C8  063D               	decf	(dtoa@i+1)^0,f,c
  5243   0038CA                     
  5244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5245   0038CA  0EA0               	movlw	low _dbuf
  5246   0038CC  243C               	addwf	dtoa@i^0,w,c
  5247   0038CE  6ED9               	movwf	fsr2l,c
  5248   0038D0  0E02               	movlw	high _dbuf
  5249   0038D2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5250   0038D4  6EDA               	movwf	fsr2h,c
  5251   0038D6  C034  F001         	movff	dtoa@n,___aomod@dividend
  5252   0038DA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5253   0038DE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5254   0038E2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5255   0038E6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5256   0038EA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5257   0038EE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5258   0038F2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5259   0038F6  0E0A               	movlw	10
  5260   0038F8  6E09               	movwf	___aomod@divisor^0,c
  5261   0038FA  0E00               	movlw	0
  5262   0038FC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5263   0038FE  0E00               	movlw	0
  5264   003900  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5265   003902  0E00               	movlw	0
  5266   003904  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5267   003906  0E00               	movlw	0
  5268   003908  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5269   00390A  0E00               	movlw	0
  5270   00390C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5271   00390E  0E00               	movlw	0
  5272   003910  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5273   003912  0E00               	movlw	0
  5274   003914  6E10               	movwf	(___aomod@divisor+7)^0,c
  5275   003916  ECC4  F023         	call	___aomod	;wreg free
  5276   00391A  C001  F026         	movff	?___aomod,??_dtoa
  5277   00391E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5278   003922  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5279   003926  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5280   00392A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5281   00392E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5282   003932  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5283   003936  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5284   00393A  C026  F013         	movff	??_dtoa,abs@a
  5285   00393E  C027  F014         	movff	??_dtoa+1,abs@a+1
  5286   003942  EC61  F02F         	call	_abs	;wreg free
  5287   003946  5013               	movf	?_abs^0,w,c
  5288   003948  0F30               	addlw	48
  5289   00394A  6EDF               	movwf	indf2,c
  5290   00394C                     
  5291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5292   00394C  0630               	decf	dtoa@p^0,f,c
  5293   00394E  A0D8               	btfss	status,0,c
  5294   003950  0631               	decf	(dtoa@p+1)^0,f,c
  5295   003952                     
  5296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5297   003952  0632               	decf	dtoa@w^0,f,c
  5298   003954  A0D8               	btfss	status,0,c
  5299   003956  0633               	decf	(dtoa@w+1)^0,f,c
  5300   003958                     
  5301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5302   003958  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5303   00395C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5304   003960  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5305   003964  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5306   003968  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5307   00396C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5308   003970  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5309   003974  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5310   003978  0E0A               	movlw	10
  5311   00397A  6E09               	movwf	___aodiv@divisor^0,c
  5312   00397C  0E00               	movlw	0
  5313   00397E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5314   003980  0E00               	movlw	0
  5315   003982  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5316   003984  0E00               	movlw	0
  5317   003986  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5318   003988  0E00               	movlw	0
  5319   00398A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5320   00398C  0E00               	movlw	0
  5321   00398E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5322   003990  0E00               	movlw	0
  5323   003992  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5324   003994  0E00               	movlw	0
  5325   003996  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5326   003998  EC4A  F022         	call	___aodiv	;wreg free
  5327   00399C  C001  F034         	movff	?___aodiv,dtoa@n
  5328   0039A0  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5329   0039A4  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5330   0039A8  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5331   0039AC  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5332   0039B0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5333   0039B4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5334   0039B8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5335   0039BC                     l4812:
  5336                           
  5337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5338   0039BC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5339   0039BE  EFE9  F01C         	goto	u4551
  5340   0039C2  503D               	movf	(dtoa@i+1)^0,w,c
  5341   0039C4  E108               	bnz	u4550
  5342   0039C6  043C               	decf	dtoa@i^0,w,c
  5343   0039C8  A0D8               	btfss	status,0,c
  5344   0039CA  EFE9  F01C         	goto	u4551
  5345   0039CE  EFEB  F01C         	goto	u4550
  5346   0039D2                     u4551:
  5347   0039D2  EF07  F01D         	goto	l4818
  5348   0039D6                     u4550:
  5349   0039D6  5034               	movf	dtoa@n^0,w,c
  5350   0039D8  1035               	iorwf	(dtoa@n+1)^0,w,c
  5351   0039DA  1036               	iorwf	(dtoa@n+2)^0,w,c
  5352   0039DC  1037               	iorwf	(dtoa@n+3)^0,w,c
  5353   0039DE  1038               	iorwf	(dtoa@n+4)^0,w,c
  5354   0039E0  1039               	iorwf	(dtoa@n+5)^0,w,c
  5355   0039E2  103A               	iorwf	(dtoa@n+6)^0,w,c
  5356   0039E4  103B               	iorwf	(dtoa@n+7)^0,w,c
  5357   0039E6  A4D8               	btfss	status,2,c
  5358   0039E8  EFF8  F01C         	goto	u4561
  5359   0039EC  EFFA  F01C         	goto	u4560
  5360   0039F0                     u4561:
  5361   0039F0  EF62  F01C         	goto	l4802
  5362   0039F4                     u4560:
  5363   0039F4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5364   0039F6  EF07  F01D         	goto	u4570
  5365   0039FA  5031               	movf	(dtoa@p+1)^0,w,c
  5366   0039FC  E106               	bnz	u4571
  5367   0039FE  0430               	decf	dtoa@p^0,w,c
  5368   003A00  B0D8               	btfsc	status,0,c
  5369   003A02  EF05  F01D         	goto	u4571
  5370   003A06  EF07  F01D         	goto	u4570
  5371   003A0A                     u4571:
  5372   003A0A  EF62  F01C         	goto	l4802
  5373   003A0E                     u4570:
  5374   003A0E                     l4818:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5377   003A0E  503E               	movf	dtoa@s^0,w,c
  5378   003A10  B4D8               	btfsc	status,2,c
  5379   003A12  EF0D  F01D         	goto	u4581
  5380   003A16  EF0F  F01D         	goto	u4580
  5381   003A1A                     u4581:
  5382   003A1A  EF1A  F01D         	goto	l4824
  5383   003A1E                     u4580:
  5384   003A1E                     
  5385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5386   003A1E  063C               	decf	dtoa@i^0,f,c
  5387   003A20  A0D8               	btfss	status,0,c
  5388   003A22  063D               	decf	(dtoa@i+1)^0,f,c
  5389   003A24                     
  5390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5391   003A24  0EA0               	movlw	low _dbuf
  5392   003A26  243C               	addwf	dtoa@i^0,w,c
  5393   003A28  6ED9               	movwf	fsr2l,c
  5394   003A2A  0E02               	movlw	high _dbuf
  5395   003A2C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5396   003A2E  6EDA               	movwf	fsr2h,c
  5397   003A30  C03E  FFDF         	movff	dtoa@s,indf2
  5398   003A34                     l4824:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5401   003A34  C01C  F011         	movff	dtoa@fp,pad@fp
  5402   003A38  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5403   003A3C  0EA0               	movlw	low _dbuf
  5404   003A3E  243C               	addwf	dtoa@i^0,w,c
  5405   003A40  6E13               	movwf	pad@buf^0,c
  5406   003A42  0E02               	movlw	high _dbuf
  5407   003A44  203D               	addwfc	(dtoa@i+1)^0,w,c
  5408   003A46  6E14               	movwf	(pad@buf+1)^0,c
  5409   003A48  C032  F015         	movff	dtoa@w,pad@p
  5410   003A4C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5411   003A50  EC7E  F029         	call	_pad	;wreg free
  5412   003A54  0012               	return		;funcret
  5413   003A56                     __end_of_dtoa:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _pad *****************
  5417 ;; Defined at:
  5418 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5421 ;;		 -> sprintf@f(11), 
  5422 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5423 ;;		 -> dbuf(80), 
  5424 ;;  p               2   20[COMRAM] int 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  w               2   25[COMRAM] int 
  5427 ;;  i               2   23[COMRAM] int 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5437 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5440 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5441 ;;Total ram usage:       11 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 4
  5444 ;; This function calls:
  5445 ;;		_fputc
  5446 ;;		_fputs
  5447 ;; This function is called by:
  5448 ;;		_dtoa
  5449 ;;		_efgtoa
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text14
  5454   0052FC                     __ptext14:
  5455                           	callstack 0
  5456   0052FC                     _pad:
  5457                           	callstack 22
  5458   0052FC                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5460   0052FC  BE16               	btfsc	(pad@p+1)^0,7,c
  5461   0052FE  EF83  F029         	goto	u4231
  5462   005302  EF85  F029         	goto	u4230
  5463   005306                     u4231:
  5464   005306  EF8B  F029         	goto	l4648
  5465   00530A                     u4230:
  5466   00530A  C015  F01A         	movff	pad@p,pad@w
  5467   00530E  C016  F01B         	movff	pad@p+1,pad@w+1
  5468   005312  EF8F  F029         	goto	l1467
  5469   005316                     l4648:
  5470   005316  0E00               	movlw	0
  5471   005318  6E1B               	movwf	(pad@w+1)^0,c
  5472   00531A  0E00               	movlw	0
  5473   00531C  6E1A               	movwf	pad@w^0,c
  5474   00531E                     l1467:
  5475                           
  5476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5477   00531E  0E00               	movlw	0
  5478   005320  6E19               	movwf	(pad@i+1)^0,c
  5479   005322  0E00               	movlw	0
  5480   005324  6E18               	movwf	pad@i^0,c
  5481                           
  5482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5483   005326  EFA1  F029         	goto	l4654
  5484   00532A                     l4650:
  5485                           
  5486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5487   00532A  0E00               	movlw	0
  5488   00532C  6E02               	movwf	(fputc@c+1)^0,c
  5489   00532E  0E20               	movlw	32
  5490   005330  6E01               	movwf	fputc@c^0,c
  5491   005332  C011  F003         	movff	pad@fp,fputc@fp
  5492   005336  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5493   00533A  ECFA  F025         	call	_fputc	;wreg free
  5494   00533E                     
  5495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5496   00533E  4A18               	infsnz	pad@i^0,f,c
  5497   005340  2A19               	incf	(pad@i+1)^0,f,c
  5498   005342                     l4654:
  5499                           
  5500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5501   005342  501A               	movf	pad@w^0,w,c
  5502   005344  5C18               	subwf	pad@i^0,w,c
  5503   005346  5019               	movf	(pad@i+1)^0,w,c
  5504   005348  0A80               	xorlw	128
  5505   00534A  6E17               	movwf	??_pad^0,c
  5506   00534C  501B               	movf	(pad@w+1)^0,w,c
  5507   00534E  0A80               	xorlw	128
  5508   005350  5817               	subwfb	??_pad^0,w,c
  5509   005352  A0D8               	btfss	status,0,c
  5510   005354  EFAE  F029         	goto	u4241
  5511   005358  EFB0  F029         	goto	u4240
  5512   00535C                     u4241:
  5513   00535C  EF95  F029         	goto	l4650
  5514   005360                     u4240:
  5515   005360                     
  5516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5517   005360  C013  F00A         	movff	pad@buf,fputs@s
  5518   005364  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5519   005368  C011  F00C         	movff	pad@fp,fputs@fp
  5520   00536C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5521   005370  EC1E  F02F         	call	_fputs	;wreg free
  5522   005374  0012               	return		;funcret
  5523   005376                     __end_of_pad:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function _fputs *****************
  5527 ;; Defined at:
  5528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5531 ;;		 -> dbuf(80), 
  5532 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5533 ;;		 -> sprintf@f(11), 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  i               2   14[COMRAM] int 
  5536 ;;  c               1   13[COMRAM] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  2    9[COMRAM] int 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;Total ram usage:        7 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 3
  5553 ;; This function calls:
  5554 ;;		_fputc
  5555 ;; This function is called by:
  5556 ;;		_pad
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text15
  5561   005E3C                     __ptext15:
  5562                           	callstack 0
  5563   005E3C                     _fputs:
  5564                           	callstack 22
  5565   005E3C  0E00               	movlw	0
  5566   005E3E  6E10               	movwf	(fputs@i+1)^0,c
  5567   005E40  0E00               	movlw	0
  5568   005E42  6E0F               	movwf	fputs@i^0,c
  5569   005E44  EF2F  F02F         	goto	l4122
  5570   005E48                     l4118:
  5571   005E48  C00E  F001         	movff	fputs@c,fputc@c
  5572   005E4C  6A02               	clrf	(fputc@c+1)^0,c
  5573   005E4E  C00C  F003         	movff	fputs@fp,fputc@fp
  5574   005E52  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5575   005E56  ECFA  F025         	call	_fputc	;wreg free
  5576   005E5A  4A0F               	infsnz	fputs@i^0,f,c
  5577   005E5C  2A10               	incf	(fputs@i+1)^0,f,c
  5578   005E5E                     l4122:
  5579   005E5E  500F               	movf	fputs@i^0,w,c
  5580   005E60  240A               	addwf	fputs@s^0,w,c
  5581   005E62  6ED9               	movwf	fsr2l,c
  5582   005E64  5010               	movf	(fputs@i+1)^0,w,c
  5583   005E66  200B               	addwfc	(fputs@s+1)^0,w,c
  5584   005E68  6EDA               	movwf	fsr2h,c
  5585   005E6A  50DF               	movf	indf2,w,c
  5586   005E6C  6E0E               	movwf	fputs@c^0,c
  5587   005E6E  500E               	movf	fputs@c^0,w,c
  5588   005E70  A4D8               	btfss	status,2,c
  5589   005E72  EF3D  F02F         	goto	u3401
  5590   005E76  EF3F  F02F         	goto	u3400
  5591   005E7A                     u3401:
  5592   005E7A  EF24  F02F         	goto	l4118
  5593   005E7E                     u3400:
  5594   005E7E  0012               	return		;funcret
  5595   005E80                     __end_of_fputs:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _fputc *****************
  5599 ;; Defined at:
  5600 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  c               2    0[COMRAM] int 
  5603 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5604 ;;		 -> sprintf@f(11), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  2    0[COMRAM] int 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;Total ram usage:        9 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 2
  5623 ;; This function calls:
  5624 ;;		_putch
  5625 ;; This function is called by:
  5626 ;;		_pad
  5627 ;;		_vfpfcnvrt
  5628 ;;		_fputs
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           	psect	text16
  5633   004BF4                     __ptext16:
  5634                           	callstack 0
  5635   004BF4                     _fputc:
  5636                           	callstack 25
  5637   004BF4  5003               	movf	fputc@fp^0,w,c
  5638   004BF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5639   004BF8  B4D8               	btfsc	status,2,c
  5640   004BFA  EF01  F026         	goto	u2951
  5641   004BFE  EF03  F026         	goto	u2950
  5642   004C02                     u2951:
  5643   004C02  EF0C  F026         	goto	l3888
  5644   004C06                     u2950:
  5645   004C06  5003               	movf	fputc@fp^0,w,c
  5646   004C08  1004               	iorwf	(fputc@fp+1)^0,w,c
  5647   004C0A  A4D8               	btfss	status,2,c
  5648   004C0C  EF0A  F026         	goto	u2961
  5649   004C10  EF0C  F026         	goto	u2960
  5650   004C14                     u2961:
  5651   004C14  EF11  F026         	goto	l3890
  5652   004C18                     u2960:
  5653   004C18                     l3888:
  5654   004C18  5001               	movf	fputc@c^0,w,c
  5655   004C1A  ECDA  F030         	call	_putch
  5656   004C1E  EF5E  F026         	goto	l1627
  5657   004C22                     l3890:
  5658   004C22  EE20 F009          	lfsr	2,9
  5659   004C26  5003               	movf	fputc@fp^0,w,c
  5660   004C28  26D9               	addwf	fsr2l,f,c
  5661   004C2A  5004               	movf	(fputc@fp+1)^0,w,c
  5662   004C2C  22DA               	addwfc	fsr2h,f,c
  5663   004C2E  50DE               	movf	postinc2,w,c
  5664   004C30  10DE               	iorwf	postinc2,w,c
  5665   004C32  B4D8               	btfsc	status,2,c
  5666   004C34  EF1E  F026         	goto	u2971
  5667   004C38  EF20  F026         	goto	u2970
  5668   004C3C                     u2971:
  5669   004C3C  EF3B  F026         	goto	l3894
  5670   004C40                     u2970:
  5671   004C40  EE20 F009          	lfsr	2,9
  5672   004C44  5003               	movf	fputc@fp^0,w,c
  5673   004C46  26D9               	addwf	fsr2l,f,c
  5674   004C48  5004               	movf	(fputc@fp+1)^0,w,c
  5675   004C4A  22DA               	addwfc	fsr2h,f,c
  5676   004C4C  EE10 F003          	lfsr	1,3
  5677   004C50  5003               	movf	fputc@fp^0,w,c
  5678   004C52  26E1               	addwf	fsr1l,f,c
  5679   004C54  5004               	movf	(fputc@fp+1)^0,w,c
  5680   004C56  22E2               	addwfc	fsr1h,f,c
  5681   004C58  50DE               	movf	postinc2,w,c
  5682   004C5A  5CE6               	subwf	postinc1,w,c
  5683   004C5C  50E6               	movf	postinc1,w,c
  5684   004C5E  0A80               	xorlw	128
  5685   004C60  6E09               	movwf	(??_fputc+4)^0,c
  5686   004C62  50DE               	movf	postinc2,w,c
  5687   004C64  0A80               	xorlw	128
  5688   004C66  5809               	subwfb	(??_fputc+4)^0,w,c
  5689   004C68  B0D8               	btfsc	status,0,c
  5690   004C6A  EF39  F026         	goto	u2981
  5691   004C6E  EF3B  F026         	goto	u2980
  5692   004C72                     u2981:
  5693   004C72  EF5E  F026         	goto	l1627
  5694   004C76                     u2980:
  5695   004C76                     l3894:
  5696   004C76  EE20 F003          	lfsr	2,3
  5697   004C7A  5003               	movf	fputc@fp^0,w,c
  5698   004C7C  26D9               	addwf	fsr2l,f,c
  5699   004C7E  5004               	movf	(fputc@fp+1)^0,w,c
  5700   004C80  22DA               	addwfc	fsr2h,f,c
  5701   004C82  CFDE F005          	movff	postinc2,??_fputc
  5702   004C86  CFDD F006          	movff	postdec2,??_fputc+1
  5703   004C8A  C003  FFD9         	movff	fputc@fp,fsr2l
  5704   004C8E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5705   004C92  CFDE F007          	movff	postinc2,??_fputc+2
  5706   004C96  CFDD F008          	movff	postdec2,??_fputc+3
  5707   004C9A  5005               	movf	??_fputc^0,w,c
  5708   004C9C  2407               	addwf	(??_fputc+2)^0,w,c
  5709   004C9E  6ED9               	movwf	fsr2l,c
  5710   004CA0  5006               	movf	(??_fputc+1)^0,w,c
  5711   004CA2  2008               	addwfc	(??_fputc+3)^0,w,c
  5712   004CA4  6EDA               	movwf	fsr2h,c
  5713   004CA6  C001  FFDF         	movff	fputc@c,indf2
  5714   004CAA  EE20 F003          	lfsr	2,3
  5715   004CAE  5003               	movf	fputc@fp^0,w,c
  5716   004CB0  26D9               	addwf	fsr2l,f,c
  5717   004CB2  5004               	movf	(fputc@fp+1)^0,w,c
  5718   004CB4  22DA               	addwfc	fsr2h,f,c
  5719   004CB6  2ADE               	incf	postinc2,f,c
  5720   004CB8  0E00               	movlw	0
  5721   004CBA  22DD               	addwfc	postdec2,f,c
  5722   004CBC                     l1627:
  5723   004CBC  0012               	return		;funcret
  5724   004CBE                     __end_of_fputc:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _putch *****************
  5728 ;; Defined at:
  5729 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  c               1    wreg     unsigned char 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  c               1    0[COMRAM] unsigned char 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5747 ;;Total ram usage:        0 bytes
  5748 ;; Hardware stack levels used: 1
  5749 ;; Hardware stack levels required when called: 1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_fputc
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text17
  5758   0061B4                     __ptext17:
  5759                           	callstack 0
  5760   0061B4                     _putch:
  5761                           	callstack 25
  5762   0061B4  0012               	return		;funcret
  5763   0061B6                     __end_of_putch:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function _abs *****************
  5767 ;; Defined at:
  5768 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  a               2   18[COMRAM] int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2   18[COMRAM] int 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;Total ram usage:        4 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_dtoa
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text18
  5797   005EC2                     __ptext18:
  5798                           	callstack 0
  5799   005EC2                     _abs:
  5800                           	callstack 25
  5801   005EC2  BE14               	btfsc	(abs@a+1)^0,7,c
  5802   005EC4  EF6E  F02F         	goto	u4250
  5803   005EC8  5014               	movf	(abs@a+1)^0,w,c
  5804   005ECA  E106               	bnz	u4251
  5805   005ECC  0413               	decf	abs@a^0,w,c
  5806   005ECE  B0D8               	btfsc	status,0,c
  5807   005ED0  EF6C  F02F         	goto	u4251
  5808   005ED4  EF6E  F02F         	goto	u4250
  5809   005ED8                     u4251:
  5810   005ED8  EF7C  F02F         	goto	l1586
  5811   005EDC                     u4250:
  5812   005EDC  C013  F015         	movff	abs@a,??_abs
  5813   005EE0  C014  F016         	movff	abs@a+1,??_abs+1
  5814   005EE4  1E15               	comf	??_abs^0,f,c
  5815   005EE6  1E16               	comf	(??_abs+1)^0,f,c
  5816   005EE8  4A15               	infsnz	??_abs^0,f,c
  5817   005EEA  2A16               	incf	(??_abs+1)^0,f,c
  5818   005EEC  C015  F013         	movff	??_abs,?_abs
  5819   005EF0  C016  F014         	movff	??_abs+1,?_abs+1
  5820   005EF4  EF80  F02F         	goto	l1589
  5821   005EF8                     l1586:
  5822   005EF8  C013  F013         	movff	abs@a,?_abs
  5823   005EFC  C014  F014         	movff	abs@a+1,?_abs+1
  5824   005F00                     l1589:
  5825   005F00  0012               	return		;funcret
  5826   005F02                     __end_of_abs:
  5827                           	callstack 0
  5828                           
  5829 ;; *************** function ___aomod *****************
  5830 ;; Defined at:
  5831 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5832 ;; Parameters:    Size  Location     Type
  5833 ;;  dividend        8    0[COMRAM] long long 
  5834 ;;  divisor         8    8[COMRAM] long long 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  sign            1   17[COMRAM] unsigned char 
  5837 ;;  counter         1   16[COMRAM] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  8    0[COMRAM] long long 
  5840 ;; Registers used:
  5841 ;;		wreg, status,2, status,0
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5847 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;Total ram usage:       18 bytes
  5852 ;; Hardware stack levels used: 1
  5853 ;; Hardware stack levels required when called: 1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_dtoa
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text19
  5862   004788                     __ptext19:
  5863                           	callstack 0
  5864   004788                     ___aomod:
  5865                           	callstack 25
  5866   004788  0E00               	movlw	0
  5867   00478A  6E12               	movwf	___aomod@sign^0,c
  5868   00478C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5869   00478E  EFCD  F023         	goto	u3590
  5870   004792  EFCB  F023         	goto	u3591
  5871   004796                     u3591:
  5872   004796  EFDF  F023         	goto	l4252
  5873   00479A                     u3590:
  5874   00479A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5875   00479C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5876   00479E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5877   0047A0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5878   0047A2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5879   0047A4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5880   0047A6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5881   0047A8  6C01               	negf	___aomod@dividend^0,c
  5882   0047AA  0E00               	movlw	0
  5883   0047AC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5884   0047AE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5885   0047B0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5886   0047B2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5887   0047B4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5888   0047B6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5889   0047B8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5890   0047BA  0E01               	movlw	1
  5891   0047BC  6E12               	movwf	___aomod@sign^0,c
  5892   0047BE                     l4252:
  5893   0047BE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5894   0047C0  EFE6  F023         	goto	u3600
  5895   0047C4  EFE4  F023         	goto	u3601
  5896   0047C8                     u3601:
  5897   0047C8  EFF6  F023         	goto	l4256
  5898   0047CC                     u3600:
  5899   0047CC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5900   0047CE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5901   0047D0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5902   0047D2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5903   0047D4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5904   0047D6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5905   0047D8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5906   0047DA  6C09               	negf	___aomod@divisor^0,c
  5907   0047DC  0E00               	movlw	0
  5908   0047DE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5909   0047E0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5910   0047E2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5911   0047E4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5912   0047E6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5913   0047E8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5914   0047EA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5915   0047EC                     l4256:
  5916   0047EC  5009               	movf	___aomod@divisor^0,w,c
  5917   0047EE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5918   0047F0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5919   0047F2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5920   0047F4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5921   0047F6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5922   0047F8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5923   0047FA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5924   0047FC  B4D8               	btfsc	status,2,c
  5925   0047FE  EF03  F024         	goto	u3611
  5926   004802  EF05  F024         	goto	u3610
  5927   004806                     u3611:
  5928   004806  EF4D  F024         	goto	l4272
  5929   00480A                     u3610:
  5930   00480A  0E01               	movlw	1
  5931   00480C  6E11               	movwf	___aomod@counter^0,c
  5932   00480E  EF13  F024         	goto	l4262
  5933   004812                     l4260:
  5934   004812  90D8               	bcf	status,0,c
  5935   004814  3609               	rlcf	___aomod@divisor^0,f,c
  5936   004816  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5937   004818  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5938   00481A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5939   00481C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5940   00481E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5941   004820  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5942   004822  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5943   004824  2A11               	incf	___aomod@counter^0,f,c
  5944   004826                     l4262:
  5945   004826  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5946   004828  EF18  F024         	goto	u3621
  5947   00482C  EF1A  F024         	goto	u3620
  5948   004830                     u3621:
  5949   004830  EF09  F024         	goto	l4260
  5950   004834                     u3620:
  5951   004834                     l4264:
  5952   004834  5009               	movf	___aomod@divisor^0,w,c
  5953   004836  5C01               	subwf	___aomod@dividend^0,w,c
  5954   004838  500A               	movf	(___aomod@divisor+1)^0,w,c
  5955   00483A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5956   00483C  500B               	movf	(___aomod@divisor+2)^0,w,c
  5957   00483E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5958   004840  500C               	movf	(___aomod@divisor+3)^0,w,c
  5959   004842  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5960   004844  500D               	movf	(___aomod@divisor+4)^0,w,c
  5961   004846  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5962   004848  500E               	movf	(___aomod@divisor+5)^0,w,c
  5963   00484A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5964   00484C  500F               	movf	(___aomod@divisor+6)^0,w,c
  5965   00484E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5966   004850  5010               	movf	(___aomod@divisor+7)^0,w,c
  5967   004852  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5968   004854  A0D8               	btfss	status,0,c
  5969   004856  EF2F  F024         	goto	u3631
  5970   00485A  EF31  F024         	goto	u3630
  5971   00485E                     u3631:
  5972   00485E  EF41  F024         	goto	l4268
  5973   004862                     u3630:
  5974   004862  5009               	movf	___aomod@divisor^0,w,c
  5975   004864  5E01               	subwf	___aomod@dividend^0,f,c
  5976   004866  500A               	movf	(___aomod@divisor+1)^0,w,c
  5977   004868  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5978   00486A  500B               	movf	(___aomod@divisor+2)^0,w,c
  5979   00486C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5980   00486E  500C               	movf	(___aomod@divisor+3)^0,w,c
  5981   004870  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5982   004872  500D               	movf	(___aomod@divisor+4)^0,w,c
  5983   004874  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5984   004876  500E               	movf	(___aomod@divisor+5)^0,w,c
  5985   004878  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5986   00487A  500F               	movf	(___aomod@divisor+6)^0,w,c
  5987   00487C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5988   00487E  5010               	movf	(___aomod@divisor+7)^0,w,c
  5989   004880  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5990   004882                     l4268:
  5991   004882  90D8               	bcf	status,0,c
  5992   004884  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5993   004886  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5994   004888  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5995   00488A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5996   00488C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5997   00488E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5998   004890  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5999   004892  3209               	rrcf	___aomod@divisor^0,f,c
  6000   004894  2E11               	decfsz	___aomod@counter^0,f,c
  6001   004896  EF1A  F024         	goto	l4264
  6002   00489A                     l4272:
  6003   00489A  5012               	movf	___aomod@sign^0,w,c
  6004   00489C  B4D8               	btfsc	status,2,c
  6005   00489E  EF53  F024         	goto	u3641
  6006   0048A2  EF55  F024         	goto	u3640
  6007   0048A6                     u3641:
  6008   0048A6  EF65  F024         	goto	l4276
  6009   0048AA                     u3640:
  6010   0048AA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6011   0048AC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6012   0048AE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6013   0048B0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6014   0048B2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6015   0048B4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6016   0048B6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6017   0048B8  6C01               	negf	___aomod@dividend^0,c
  6018   0048BA  0E00               	movlw	0
  6019   0048BC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6020   0048BE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6021   0048C0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6022   0048C2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6023   0048C4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6024   0048C6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6025   0048C8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6026   0048CA                     l4276:
  6027   0048CA  C001  F001         	movff	___aomod@dividend,?___aomod
  6028   0048CE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6029   0048D2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6030   0048D6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6031   0048DA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6032   0048DE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6033   0048E2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6034   0048E6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6035   0048EA  0012               	return		;funcret
  6036   0048EC                     __end_of___aomod:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function ___aodiv *****************
  6040 ;; Defined at:
  6041 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  dividend        8    0[COMRAM] long long 
  6044 ;;  divisor         8    8[COMRAM] long long 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  quotient        8   18[COMRAM] long long 
  6047 ;;  sign            1   17[COMRAM] unsigned char 
  6048 ;;  counter         1   16[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  8    0[COMRAM] long long 
  6051 ;; Registers used:
  6052 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6058 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;Total ram usage:       26 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_dtoa
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text20
  6073   004494                     __ptext20:
  6074                           	callstack 0
  6075   004494                     ___aodiv:
  6076                           	callstack 25
  6077   004494  0E00               	movlw	0
  6078   004496  6E12               	movwf	___aodiv@sign^0,c
  6079   004498  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6080   00449A  EF53  F022         	goto	u3520
  6081   00449E  EF51  F022         	goto	u3521
  6082   0044A2                     u3521:
  6083   0044A2  EF65  F022         	goto	l4208
  6084   0044A6                     u3520:
  6085   0044A6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6086   0044A8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6087   0044AA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6088   0044AC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6089   0044AE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6090   0044B0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6091   0044B2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6092   0044B4  6C09               	negf	___aodiv@divisor^0,c
  6093   0044B6  0E00               	movlw	0
  6094   0044B8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6095   0044BA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6096   0044BC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6097   0044BE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6098   0044C0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6099   0044C2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6100   0044C4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6101   0044C6  0E01               	movlw	1
  6102   0044C8  6E12               	movwf	___aodiv@sign^0,c
  6103   0044CA                     l4208:
  6104   0044CA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6105   0044CC  EF6C  F022         	goto	u3530
  6106   0044D0  EF6A  F022         	goto	u3531
  6107   0044D4                     u3531:
  6108   0044D4  EF7E  F022         	goto	l4214
  6109   0044D8                     u3530:
  6110   0044D8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6111   0044DA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6112   0044DC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6113   0044DE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6114   0044E0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6115   0044E2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6116   0044E4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6117   0044E6  6C01               	negf	___aodiv@dividend^0,c
  6118   0044E8  0E00               	movlw	0
  6119   0044EA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6120   0044EC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6121   0044EE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6122   0044F0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6123   0044F2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6124   0044F4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6125   0044F6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6126   0044F8  0E01               	movlw	1
  6127   0044FA  1A12               	xorwf	___aodiv@sign^0,f,c
  6128   0044FC                     l4214:
  6129   0044FC  EE20  F013         	lfsr	2,___aodiv@quotient
  6130   004500  0E07               	movlw	7
  6131   004502                     u3541:
  6132   004502  6ADE               	clrf	postinc2,c
  6133   004504  06E8               	decf	wreg,f,c
  6134   004506  E2FD               	bc	u3541
  6135   004508  5009               	movf	___aodiv@divisor^0,w,c
  6136   00450A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6137   00450C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6138   00450E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6139   004510  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6140   004512  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6141   004514  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6142   004516  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6143   004518  B4D8               	btfsc	status,2,c
  6144   00451A  EF91  F022         	goto	u3551
  6145   00451E  EF93  F022         	goto	u3550
  6146   004522                     u3551:
  6147   004522  EFE5  F022         	goto	l4236
  6148   004526                     u3550:
  6149   004526  0E01               	movlw	1
  6150   004528  6E11               	movwf	___aodiv@counter^0,c
  6151   00452A  EFA1  F022         	goto	l4222
  6152   00452E                     l4220:
  6153   00452E  90D8               	bcf	status,0,c
  6154   004530  3609               	rlcf	___aodiv@divisor^0,f,c
  6155   004532  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6156   004534  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6157   004536  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6158   004538  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6159   00453A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6160   00453C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6161   00453E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6162   004540  2A11               	incf	___aodiv@counter^0,f,c
  6163   004542                     l4222:
  6164   004542  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6165   004544  EFA6  F022         	goto	u3561
  6166   004548  EFA8  F022         	goto	u3560
  6167   00454C                     u3561:
  6168   00454C  EF97  F022         	goto	l4220
  6169   004550                     u3560:
  6170   004550                     l4224:
  6171   004550  90D8               	bcf	status,0,c
  6172   004552  3613               	rlcf	___aodiv@quotient^0,f,c
  6173   004554  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6174   004556  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6175   004558  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6176   00455A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6177   00455C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6178   00455E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6179   004560  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6180   004562  5009               	movf	___aodiv@divisor^0,w,c
  6181   004564  5C01               	subwf	___aodiv@dividend^0,w,c
  6182   004566  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6183   004568  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6184   00456A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6185   00456C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6186   00456E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6187   004570  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6188   004572  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6189   004574  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6190   004576  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6191   004578  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6192   00457A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6193   00457C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6194   00457E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6195   004580  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6196   004582  A0D8               	btfss	status,0,c
  6197   004584  EFC6  F022         	goto	u3571
  6198   004588  EFC8  F022         	goto	u3570
  6199   00458C                     u3571:
  6200   00458C  EFD9  F022         	goto	l4232
  6201   004590                     u3570:
  6202   004590  5009               	movf	___aodiv@divisor^0,w,c
  6203   004592  5E01               	subwf	___aodiv@dividend^0,f,c
  6204   004594  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6205   004596  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6206   004598  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6207   00459A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6208   00459C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6209   00459E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6210   0045A0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6211   0045A2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6212   0045A4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6213   0045A6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6214   0045A8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6215   0045AA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6216   0045AC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6217   0045AE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6218   0045B0  8013               	bsf	___aodiv@quotient^0,0,c
  6219   0045B2                     l4232:
  6220   0045B2  90D8               	bcf	status,0,c
  6221   0045B4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6222   0045B6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6223   0045B8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6224   0045BA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6225   0045BC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6226   0045BE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6227   0045C0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6228   0045C2  3209               	rrcf	___aodiv@divisor^0,f,c
  6229   0045C4  2E11               	decfsz	___aodiv@counter^0,f,c
  6230   0045C6  EFA8  F022         	goto	l4224
  6231   0045CA                     l4236:
  6232   0045CA  5012               	movf	___aodiv@sign^0,w,c
  6233   0045CC  B4D8               	btfsc	status,2,c
  6234   0045CE  EFEB  F022         	goto	u3581
  6235   0045D2  EFED  F022         	goto	u3580
  6236   0045D6                     u3581:
  6237   0045D6  EFFD  F022         	goto	l4240
  6238   0045DA                     u3580:
  6239   0045DA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6240   0045DC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6241   0045DE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6242   0045E0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6243   0045E2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6244   0045E4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6245   0045E6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6246   0045E8  6C13               	negf	___aodiv@quotient^0,c
  6247   0045EA  0E00               	movlw	0
  6248   0045EC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6249   0045EE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6250   0045F0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6251   0045F2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6252   0045F4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6253   0045F6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6254   0045F8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6255   0045FA                     l4240:
  6256   0045FA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6257   0045FE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6258   004602  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6259   004606  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6260   00460A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6261   00460E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6262   004612  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6263   004616  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6264   00461A  0012               	return		;funcret
  6265   00461C                     __end_of___aodiv:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _sendStringSerial4 *****************
  6269 ;; Defined at:
  6270 ;;		line 33 in file "serial.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  string          2    1[COMRAM] PTR unsigned char 
  6273 ;;		 -> main@buf(100), 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;Total ram usage:        2 bytes
  6290 ;; Hardware stack levels used: 1
  6291 ;; Hardware stack levels required when called: 2
  6292 ;; This function calls:
  6293 ;;		_sendCharSerial4
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text21
  6300   006024                     __ptext21:
  6301                           	callstack 0
  6302   006024                     _sendStringSerial4:
  6303                           	callstack 28
  6304   006024                     
  6305                           ;serial.c: 34:     while (*string!=0){
  6306   006024  EF1D  F030         	goto	l5584
  6307   006028                     l5580:
  6308                           
  6309                           ;serial.c: 35:         sendCharSerial4(*string++);
  6310   006028  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6311   00602C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6312   006030  50DF               	movf	indf2,w,c
  6313   006032  ECA8  F030         	call	_sendCharSerial4
  6314   006036  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6315   006038  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6316   00603A                     l5584:
  6317                           
  6318                           ;serial.c: 34:     while (*string!=0){
  6319   00603A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6320   00603E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6321   006042  50DF               	movf	indf2,w,c
  6322   006044  A4D8               	btfss	status,2,c
  6323   006046  EF27  F030         	goto	u5481
  6324   00604A  EF29  F030         	goto	u5480
  6325   00604E                     u5481:
  6326   00604E  EF14  F030         	goto	l5580
  6327   006052                     u5480:
  6328   006052  0012               	return		;funcret
  6329   006054                     __end_of_sendStringSerial4:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _sendCharSerial4 *****************
  6333 ;; Defined at:
  6334 ;;		line 26 in file "serial.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  charToSend      1    wreg     unsigned char 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  charToSend      1    0[COMRAM] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 1
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_sendStringSerial4
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text22
  6363   006150                     __ptext22:
  6364                           	callstack 0
  6365   006150                     _sendCharSerial4:
  6366                           	callstack 28
  6367                           
  6368                           ;incstack = 0
  6369                           ;sendCharSerial4@charToSend stored from wreg
  6370   006150  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6371   006152                     l197:
  6372   006152  010E               	movlb	14	; () banked
  6373   006154  A537               	btfss	55,2,b	;volatile
  6374   006156  EFAF  F030         	goto	u4991
  6375   00615A  EFB1  F030         	goto	u4990
  6376   00615E                     u4991:
  6377   00615E  EFA9  F030         	goto	l197
  6378   006162                     u4990:
  6379   006162                     
  6380                           ; BSR set to: 14
  6381                           ;serial.c: 28:     TX4REG = charToSend;
  6382   006162  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6383   006166                     
  6384                           ; BSR set to: 14
  6385   006166  0012               	return		;funcret
  6386   006168                     __end_of_sendCharSerial4:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _readColours *****************
  6390 ;; Defined at:
  6391 ;;		line 106 in file "color.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  vals            2   11[COMRAM] PTR struct RGB
  6394 ;;		 -> vals(8), 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      void 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;Total ram usage:        2 bytes
  6411 ;; Hardware stack levels used: 1
  6412 ;; Hardware stack levels required when called: 4
  6413 ;; This function calls:
  6414 ;;		_color_read_Blue
  6415 ;;		_color_read_Green
  6416 ;;		_color_read_Red
  6417 ;;		_color_read_lum
  6418 ;; This function is called by:
  6419 ;;		_main
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text23
  6424   0056D0                     __ptext23:
  6425                           	callstack 0
  6426   0056D0                     _readColours:
  6427                           	callstack 26
  6428   0056D0                     
  6429                           ;color.c: 108:     vals ->R = color_read_Red();
  6430   0056D0  EC13  F02E         	call	_color_read_Red	;wreg free
  6431   0056D4  C00C  FFD9         	movff	readColours@vals,fsr2l
  6432   0056D8  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6433   0056DC  C005  FFDE         	movff	?_color_read_Red,postinc2
  6434   0056E0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6435                           
  6436                           ;color.c: 109:     vals ->B = color_read_Blue();
  6437   0056E4  EC63  F02E         	call	_color_read_Blue	;wreg free
  6438   0056E8  EE20 F004          	lfsr	2,4
  6439   0056EC  500C               	movf	readColours@vals^0,w,c
  6440   0056EE  26D9               	addwf	fsr2l,f,c
  6441   0056F0  500D               	movf	(readColours@vals+1)^0,w,c
  6442   0056F2  22DA               	addwfc	fsr2h,f,c
  6443   0056F4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6444   0056F8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6445                           
  6446                           ;color.c: 110:     vals ->G = color_read_Green();
  6447   0056FC  EC3B  F02E         	call	_color_read_Green	;wreg free
  6448   005700  EE20 F002          	lfsr	2,2
  6449   005704  500C               	movf	readColours@vals^0,w,c
  6450   005706  26D9               	addwf	fsr2l,f,c
  6451   005708  500D               	movf	(readColours@vals+1)^0,w,c
  6452   00570A  22DA               	addwfc	fsr2h,f,c
  6453   00570C  C005  FFDE         	movff	?_color_read_Green,postinc2
  6454   005710  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6455                           
  6456                           ;color.c: 111:     vals ->L = color_read_lum();
  6457   005714  ECEB  F02D         	call	_color_read_lum	;wreg free
  6458   005718  EE20 F006          	lfsr	2,6
  6459   00571C  500C               	movf	readColours@vals^0,w,c
  6460   00571E  26D9               	addwf	fsr2l,f,c
  6461   005720  500D               	movf	(readColours@vals+1)^0,w,c
  6462   005722  22DA               	addwfc	fsr2h,f,c
  6463   005724  C005  FFDE         	movff	?_color_read_lum,postinc2
  6464   005728  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6465   00572C  0012               	return		;funcret
  6466   00572E                     __end_of_readColours:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function _color_read_lum *****************
  6470 ;; Defined at:
  6471 ;;		line 50 in file "color.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;  tmp             2    9[COMRAM] unsigned int 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  2    4[COMRAM] unsigned int 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2, status,0, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;Total ram usage:        7 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; Hardware stack levels required when called: 3
  6492 ;; This function calls:
  6493 ;;		_I2C_2_Master_Read
  6494 ;;		_I2C_2_Master_RepStart
  6495 ;;		_I2C_2_Master_Start
  6496 ;;		_I2C_2_Master_Stop
  6497 ;;		_I2C_2_Master_Write
  6498 ;; This function is called by:
  6499 ;;		_readColours
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text24
  6504   005BD6                     __ptext24:
  6505                           	callstack 0
  6506   005BD6                     _color_read_lum:
  6507                           	callstack 26
  6508   005BD6                     
  6509                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6510   005BD6  ECD0  F030         	call	_I2C_2_Master_Start	;wreg free
  6511                           
  6512                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6513   005BDA  0E52               	movlw	82
  6514   005BDC  ECB4  F030         	call	_I2C_2_Master_Write
  6515                           
  6516                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6517   005BE0  0EB4               	movlw	180
  6518   005BE2  ECB4  F030         	call	_I2C_2_Master_Write
  6519                           
  6520                           ;color.c: 56:  I2C_2_Master_RepStart();
  6521   005BE6  ECC6  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6522                           
  6523                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6524   005BEA  0E53               	movlw	83
  6525   005BEC  ECB4  F030         	call	_I2C_2_Master_Write
  6526                           
  6527                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6528   005BF0  0E01               	movlw	1
  6529   005BF2  EC40  F02F         	call	_I2C_2_Master_Read
  6530   005BF6  6E07               	movwf	??_color_read_lum^0,c
  6531   005BF8  5007               	movf	??_color_read_lum^0,w,c
  6532   005BFA  6E0A               	movwf	color_read_lum@tmp^0,c
  6533   005BFC  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6534                           
  6535                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6536   005BFE  0E00               	movlw	0
  6537   005C00  EC40  F02F         	call	_I2C_2_Master_Read
  6538   005C04  6E07               	movwf	??_color_read_lum^0,c
  6539   005C06  5007               	movf	??_color_read_lum^0,w,c
  6540   005C08  6E09               	movwf	(??_color_read_lum+2)^0,c
  6541   005C0A  6A08               	clrf	(??_color_read_lum+1)^0,c
  6542   005C0C  500A               	movf	color_read_lum@tmp^0,w,c
  6543   005C0E  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6544   005C10  6E0A               	movwf	color_read_lum@tmp^0,c
  6545   005C12  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6546   005C14  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6547   005C16  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6548                           
  6549                           ;color.c: 60:  I2C_2_Master_Stop();
  6550   005C18  ECCB  F030         	call	_I2C_2_Master_Stop	;wreg free
  6551   005C1C                     
  6552                           ;color.c: 61:  return tmp;
  6553   005C1C  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6554   005C20  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6555   005C24  0012               	return		;funcret
  6556   005C26                     __end_of_color_read_lum:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _color_read_Red *****************
  6560 ;; Defined at:
  6561 ;;		line 64 in file "color.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  tmp             2    9[COMRAM] unsigned int 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    4[COMRAM] unsigned int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;Total ram usage:        7 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 3
  6582 ;; This function calls:
  6583 ;;		_I2C_2_Master_Read
  6584 ;;		_I2C_2_Master_RepStart
  6585 ;;		_I2C_2_Master_Start
  6586 ;;		_I2C_2_Master_Stop
  6587 ;;		_I2C_2_Master_Write
  6588 ;; This function is called by:
  6589 ;;		_readColours
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text25
  6594   005C26                     __ptext25:
  6595                           	callstack 0
  6596   005C26                     _color_read_Red:
  6597                           	callstack 26
  6598   005C26                     
  6599                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6600   005C26  ECD0  F030         	call	_I2C_2_Master_Start	;wreg free
  6601                           
  6602                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6603   005C2A  0E52               	movlw	82
  6604   005C2C  ECB4  F030         	call	_I2C_2_Master_Write
  6605                           
  6606                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6607   005C30  0EB6               	movlw	182
  6608   005C32  ECB4  F030         	call	_I2C_2_Master_Write
  6609                           
  6610                           ;color.c: 70:  I2C_2_Master_RepStart();
  6611   005C36  ECC6  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6612                           
  6613                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6614   005C3A  0E53               	movlw	83
  6615   005C3C  ECB4  F030         	call	_I2C_2_Master_Write
  6616                           
  6617                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6618   005C40  0E01               	movlw	1
  6619   005C42  EC40  F02F         	call	_I2C_2_Master_Read
  6620   005C46  6E07               	movwf	??_color_read_Red^0,c
  6621   005C48  5007               	movf	??_color_read_Red^0,w,c
  6622   005C4A  6E0A               	movwf	color_read_Red@tmp^0,c
  6623   005C4C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6624                           
  6625                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6626   005C4E  0E00               	movlw	0
  6627   005C50  EC40  F02F         	call	_I2C_2_Master_Read
  6628   005C54  6E07               	movwf	??_color_read_Red^0,c
  6629   005C56  5007               	movf	??_color_read_Red^0,w,c
  6630   005C58  6E09               	movwf	(??_color_read_Red+2)^0,c
  6631   005C5A  6A08               	clrf	(??_color_read_Red+1)^0,c
  6632   005C5C  500A               	movf	color_read_Red@tmp^0,w,c
  6633   005C5E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6634   005C60  6E0A               	movwf	color_read_Red@tmp^0,c
  6635   005C62  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6636   005C64  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6637   005C66  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6638                           
  6639                           ;color.c: 74:  I2C_2_Master_Stop();
  6640   005C68  ECCB  F030         	call	_I2C_2_Master_Stop	;wreg free
  6641   005C6C                     
  6642                           ;color.c: 75:  return tmp;
  6643   005C6C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6644   005C70  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6645   005C74  0012               	return		;funcret
  6646   005C76                     __end_of_color_read_Red:
  6647                           	callstack 0
  6648                           
  6649 ;; *************** function _color_read_Green *****************
  6650 ;; Defined at:
  6651 ;;		line 77 in file "color.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  tmp             2    9[COMRAM] unsigned int 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  2    4[COMRAM] unsigned int 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0, cstack
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;Total ram usage:        7 bytes
  6670 ;; Hardware stack levels used: 1
  6671 ;; Hardware stack levels required when called: 3
  6672 ;; This function calls:
  6673 ;;		_I2C_2_Master_Read
  6674 ;;		_I2C_2_Master_RepStart
  6675 ;;		_I2C_2_Master_Start
  6676 ;;		_I2C_2_Master_Stop
  6677 ;;		_I2C_2_Master_Write
  6678 ;; This function is called by:
  6679 ;;		_readColours
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text26
  6684   005C76                     __ptext26:
  6685                           	callstack 0
  6686   005C76                     _color_read_Green:
  6687                           	callstack 26
  6688   005C76                     
  6689                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  6690   005C76  ECD0  F030         	call	_I2C_2_Master_Start	;wreg free
  6691                           
  6692                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  6693   005C7A  0E52               	movlw	82
  6694   005C7C  ECB4  F030         	call	_I2C_2_Master_Write
  6695                           
  6696                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  6697   005C80  0EB8               	movlw	184
  6698   005C82  ECB4  F030         	call	_I2C_2_Master_Write
  6699                           
  6700                           ;color.c: 83:  I2C_2_Master_RepStart();
  6701   005C86  ECC6  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6702                           
  6703                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6704   005C8A  0E53               	movlw	83
  6705   005C8C  ECB4  F030         	call	_I2C_2_Master_Write
  6706                           
  6707                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6708   005C90  0E01               	movlw	1
  6709   005C92  EC40  F02F         	call	_I2C_2_Master_Read
  6710   005C96  6E07               	movwf	??_color_read_Green^0,c
  6711   005C98  5007               	movf	??_color_read_Green^0,w,c
  6712   005C9A  6E0A               	movwf	color_read_Green@tmp^0,c
  6713   005C9C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6714                           
  6715                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6716   005C9E  0E00               	movlw	0
  6717   005CA0  EC40  F02F         	call	_I2C_2_Master_Read
  6718   005CA4  6E07               	movwf	??_color_read_Green^0,c
  6719   005CA6  5007               	movf	??_color_read_Green^0,w,c
  6720   005CA8  6E09               	movwf	(??_color_read_Green+2)^0,c
  6721   005CAA  6A08               	clrf	(??_color_read_Green+1)^0,c
  6722   005CAC  500A               	movf	color_read_Green@tmp^0,w,c
  6723   005CAE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6724   005CB0  6E0A               	movwf	color_read_Green@tmp^0,c
  6725   005CB2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6726   005CB4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6727   005CB6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6728                           
  6729                           ;color.c: 87:  I2C_2_Master_Stop();
  6730   005CB8  ECCB  F030         	call	_I2C_2_Master_Stop	;wreg free
  6731   005CBC                     
  6732                           ;color.c: 88:  return tmp;
  6733   005CBC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6734   005CC0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6735   005CC4  0012               	return		;funcret
  6736   005CC6                     __end_of_color_read_Green:
  6737                           	callstack 0
  6738                           
  6739 ;; *************** function _color_read_Blue *****************
  6740 ;; Defined at:
  6741 ;;		line 91 in file "color.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  tmp             2    9[COMRAM] unsigned int 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  2    4[COMRAM] unsigned int 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;Total ram usage:        7 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 3
  6762 ;; This function calls:
  6763 ;;		_I2C_2_Master_Read
  6764 ;;		_I2C_2_Master_RepStart
  6765 ;;		_I2C_2_Master_Start
  6766 ;;		_I2C_2_Master_Stop
  6767 ;;		_I2C_2_Master_Write
  6768 ;; This function is called by:
  6769 ;;		_readColours
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text27
  6774   005CC6                     __ptext27:
  6775                           	callstack 0
  6776   005CC6                     _color_read_Blue:
  6777                           	callstack 26
  6778   005CC6                     
  6779                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6780   005CC6  ECD0  F030         	call	_I2C_2_Master_Start	;wreg free
  6781                           
  6782                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6783   005CCA  0E52               	movlw	82
  6784   005CCC  ECB4  F030         	call	_I2C_2_Master_Write
  6785                           
  6786                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6787   005CD0  0EBA               	movlw	186
  6788   005CD2  ECB4  F030         	call	_I2C_2_Master_Write
  6789                           
  6790                           ;color.c: 97:  I2C_2_Master_RepStart();
  6791   005CD6  ECC6  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6792                           
  6793                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6794   005CDA  0E53               	movlw	83
  6795   005CDC  ECB4  F030         	call	_I2C_2_Master_Write
  6796                           
  6797                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6798   005CE0  0E01               	movlw	1
  6799   005CE2  EC40  F02F         	call	_I2C_2_Master_Read
  6800   005CE6  6E07               	movwf	??_color_read_Blue^0,c
  6801   005CE8  5007               	movf	??_color_read_Blue^0,w,c
  6802   005CEA  6E0A               	movwf	color_read_Blue@tmp^0,c
  6803   005CEC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6804                           
  6805                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6806   005CEE  0E00               	movlw	0
  6807   005CF0  EC40  F02F         	call	_I2C_2_Master_Read
  6808   005CF4  6E07               	movwf	??_color_read_Blue^0,c
  6809   005CF6  5007               	movf	??_color_read_Blue^0,w,c
  6810   005CF8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6811   005CFA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6812   005CFC  500A               	movf	color_read_Blue@tmp^0,w,c
  6813   005CFE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6814   005D00  6E0A               	movwf	color_read_Blue@tmp^0,c
  6815   005D02  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6816   005D04  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6817   005D06  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6818                           
  6819                           ;color.c: 101:  I2C_2_Master_Stop();
  6820   005D08  ECCB  F030         	call	_I2C_2_Master_Stop	;wreg free
  6821   005D0C                     
  6822                           ;color.c: 102:  return tmp;
  6823   005D0C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6824   005D10  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6825   005D14  0012               	return		;funcret
  6826   005D16                     __end_of_color_read_Blue:
  6827                           	callstack 0
  6828                           
  6829 ;; *************** function _I2C_2_Master_RepStart *****************
  6830 ;; Defined at:
  6831 ;;		line 33 in file "i2c.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, status,2, status,0, cstack
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;Total ram usage:        0 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; Hardware stack levels required when called: 2
  6852 ;; This function calls:
  6853 ;;		_I2C_2_Master_Idle
  6854 ;; This function is called by:
  6855 ;;		_color_read_lum
  6856 ;;		_color_read_Red
  6857 ;;		_color_read_Green
  6858 ;;		_color_read_Blue
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text28
  6863   00618C                     __ptext28:
  6864                           	callstack 0
  6865   00618C                     _I2C_2_Master_RepStart:
  6866                           	callstack 26
  6867   00618C                     
  6868                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6869   00618C  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
  6870   006190                     
  6871                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6872   006190  010E               	movlb	14	; () banked
  6873   006192  83DA               	bsf	218,1,b	;volatile
  6874   006194                     
  6875                           ; BSR set to: 14
  6876   006194  0012               	return		;funcret
  6877   006196                     __end_of_I2C_2_Master_RepStart:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _I2C_2_Master_Read *****************
  6881 ;; Defined at:
  6882 ;;		line 51 in file "i2c.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  ack             1    wreg     unsigned char 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  ack             1    2[COMRAM] unsigned char 
  6887 ;;  tmp             1    3[COMRAM] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      unsigned char 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;Total ram usage:        3 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 2
  6904 ;; This function calls:
  6905 ;;		_I2C_2_Master_Idle
  6906 ;; This function is called by:
  6907 ;;		_color_read_lum
  6908 ;;		_color_read_Red
  6909 ;;		_color_read_Green
  6910 ;;		_color_read_Blue
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text29
  6915   005E80                     __ptext29:
  6916                           	callstack 0
  6917   005E80                     _I2C_2_Master_Read:
  6918                           	callstack 26
  6919                           
  6920                           ; BSR set to: 14
  6921                           ;incstack = 0
  6922                           ;I2C_2_Master_Read@ack stored from wreg
  6923   005E80  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6924   005E82                     
  6925                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6926   005E82  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
  6927   005E86                     
  6928                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6929   005E86  010E               	movlb	14	; () banked
  6930   005E88  87DA               	bsf	218,3,b	;volatile
  6931                           
  6932                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6933   005E8A  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
  6934   005E8E                     
  6935                           ;i2c.c: 57:   tmp = SSP2BUF;
  6936   005E8E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6937                           
  6938                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6939   005E92  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
  6940   005E96                     
  6941                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6942   005E96  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6943   005E98  B4D8               	btfsc	status,2,c
  6944   005E9A  EF51  F02F         	goto	u4911
  6945   005E9E  EF55  F02F         	goto	u4910
  6946   005EA2                     u4911:
  6947   005EA2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6948   005EA4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6949   005EA6  EF56  F02F         	goto	u4928
  6950   005EAA                     u4910:
  6951   005EAA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6952   005EAC                     u4928:
  6953   005EAC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6954   005EAE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6955   005EB0  010E               	movlb	14	; () banked
  6956   005EB2  51DA               	movf	218,w,b	;volatile
  6957   005EB4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6958   005EB6  0BDF               	andlw	-33
  6959   005EB8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6960   005EBA  6FDA               	movwf	218,b	;volatile
  6961   005EBC                     
  6962                           ; BSR set to: 14
  6963                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6964   005EBC  89DA               	bsf	218,4,b	;volatile
  6965   005EBE                     
  6966                           ; BSR set to: 14
  6967                           ;i2c.c: 61:   return tmp;
  6968   005EBE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6969   005EC0                     
  6970                           ; BSR set to: 14
  6971   005EC0  0012               	return		;funcret
  6972   005EC2                     __end_of_I2C_2_Master_Read:
  6973                           	callstack 0
  6974                           
  6975 ;; *************** function _initUSART4 *****************
  6976 ;; Defined at:
  6977 ;;		line 4 in file "serial.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; Hardware stack levels required when called: 1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_main
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text30
  7006   006132                     __ptext30:
  7007                           	callstack 0
  7008   006132                     _initUSART4:
  7009                           	callstack 29
  7010   006132                     
  7011                           ;serial.c: 5:     RC0PPS = 0x12;
  7012   006132  0E12               	movlw	18
  7013   006134  010E               	movlb	14	; () banked
  7014   006136  6F62               	movwf	98,b	;volatile
  7015                           
  7016                           ;serial.c: 6:     RX4PPS = 0x11;
  7017   006138  0E11               	movlw	17
  7018   00613A  6F15               	movwf	21,b	;volatile
  7019   00613C                     
  7020                           ; BSR set to: 14
  7021                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7022   00613C  97E9               	bcf	233,3,b	;volatile
  7023   00613E                     
  7024                           ; BSR set to: 14
  7025                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7026   00613E  95E8               	bcf	232,2,b	;volatile
  7027                           
  7028                           ;serial.c: 9:     SP4BRGL = 51;
  7029   006140  0E33               	movlw	51
  7030   006142  6FE5               	movwf	229,b	;volatile
  7031                           
  7032                           ;serial.c: 10:     SP4BRGH = 0;
  7033   006144  0E00               	movlw	0
  7034   006146  6FE6               	movwf	230,b	;volatile
  7035   006148                     
  7036                           ; BSR set to: 14
  7037                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7038   006148  89E7               	bsf	231,4,b	;volatile
  7039   00614A                     
  7040                           ; BSR set to: 14
  7041                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7042   00614A  8BE8               	bsf	232,5,b	;volatile
  7043   00614C                     
  7044                           ; BSR set to: 14
  7045                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7046   00614C  8FE7               	bsf	231,7,b	;volatile
  7047   00614E                     
  7048                           ; BSR set to: 14
  7049   00614E  0012               	return		;funcret
  7050   006150                     __end_of_initUSART4:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _initDCmotorsPWM *****************
  7054 ;; Defined at:
  7055 ;;		line 7 in file "dc_motor.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7058 ;; Auto vars:     Size  Location     Type
  7059 ;;		None
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;Total ram usage:        2 bytes
  7074 ;; Hardware stack levels used: 1
  7075 ;; Hardware stack levels required when called: 1
  7076 ;; This function calls:
  7077 ;;		Nothing
  7078 ;; This function is called by:
  7079 ;;		_main
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083                           	psect	text31
  7084   0051F6                     __ptext31:
  7085                           	callstack 0
  7086   0051F6                     _initDCmotorsPWM:
  7087                           	callstack 29
  7088   0051F6                     
  7089                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7090   0051F6  0E05               	movlw	5
  7091   0051F8  010E               	movlb	14	; () banked
  7092   0051FA  6F74               	movwf	116,b	;volatile
  7093                           
  7094                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7095   0051FC  0E06               	movlw	6
  7096   0051FE  6F76               	movwf	118,b	;volatile
  7097                           
  7098                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7099   005200  0E07               	movlw	7
  7100   005202  6F69               	movwf	105,b	;volatile
  7101                           
  7102                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7103   005204  0E08               	movlw	8
  7104   005206  6F88               	movwf	136,b	;volatile
  7105   005208                     
  7106                           ; BSR set to: 14
  7107                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7108   005208  9485               	bcf	133,2,c	;volatile
  7109   00520A                     
  7110                           ; BSR set to: 14
  7111                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7112   00520A  9885               	bcf	133,4,c	;volatile
  7113   00520C                     
  7114                           ; BSR set to: 14
  7115                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7116   00520C  9E83               	bcf	131,7,c	;volatile
  7117   00520E                     
  7118                           ; BSR set to: 14
  7119                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7120   00520E  9C87               	bcf	135,6,c	;volatile
  7121                           
  7122                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7123   005210  50BD               	movf	189,w,c	;volatile
  7124   005212  0B8F               	andlw	-113
  7125   005214  0930               	iorlw	48
  7126   005216  6EBD               	movwf	189,c	;volatile
  7127                           
  7128                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7129   005218  0EE0               	movlw	-32
  7130   00521A  16BE               	andwf	190,f,c	;volatile
  7131                           
  7132                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7133   00521C  50BF               	movf	191,w,c	;volatile
  7134   00521E  0BF0               	andlw	-16
  7135   005220  0901               	iorlw	1
  7136   005222  6EBF               	movwf	191,c	;volatile
  7137   005224                     
  7138                           ; BSR set to: 14
  7139                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7140   005224  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7141   005228                     
  7142                           ; BSR set to: 14
  7143                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7144   005228  8EBD               	bsf	189,7,c	;volatile
  7145                           
  7146                           ;dc_motor.c: 35:     CCPR1H=0;
  7147   00522A  0E00               	movlw	0
  7148   00522C  6EAA               	movwf	170,c	;volatile
  7149                           
  7150                           ;dc_motor.c: 36:     CCPR2H=0;
  7151   00522E  0E00               	movlw	0
  7152   005230  6EA6               	movwf	166,c	;volatile
  7153                           
  7154                           ;dc_motor.c: 37:     CCPR3H=0;
  7155   005232  0E00               	movlw	0
  7156   005234  010F               	movlb	15	; () banked
  7157   005236  6F25               	movwf	37,b	;volatile
  7158                           
  7159                           ;dc_motor.c: 38:     CCPR4H=0;
  7160   005238  0E00               	movlw	0
  7161   00523A  6F21               	movwf	33,b	;volatile
  7162                           
  7163                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7164   00523C  0EFC               	movlw	-4
  7165   00523E  16AD               	andwf	173,f,c	;volatile
  7166                           
  7167                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7168   005240  0EF3               	movlw	-13
  7169   005242  16AD               	andwf	173,f,c	;volatile
  7170                           
  7171                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7172   005244  0ECF               	movlw	-49
  7173   005246  16AD               	andwf	173,f,c	;volatile
  7174                           
  7175                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7176   005248  0E3F               	movlw	-193
  7177   00524A  16AD               	andwf	173,f,c	;volatile
  7178   00524C                     
  7179                           ; BSR set to: 15
  7180                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7181   00524C  88AB               	bsf	171,4,c	;volatile
  7182                           
  7183                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7184   00524E  50AB               	movf	171,w,c	;volatile
  7185   005250  0BF0               	andlw	-16
  7186   005252  090C               	iorlw	12
  7187   005254  6EAB               	movwf	171,c	;volatile
  7188   005256                     
  7189                           ; BSR set to: 15
  7190                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7191   005256  8EAB               	bsf	171,7,c	;volatile
  7192   005258                     
  7193                           ; BSR set to: 15
  7194                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7195   005258  88A7               	bsf	167,4,c	;volatile
  7196                           
  7197                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7198   00525A  50A7               	movf	167,w,c	;volatile
  7199   00525C  0BF0               	andlw	-16
  7200   00525E  090C               	iorlw	12
  7201   005260  6EA7               	movwf	167,c	;volatile
  7202   005262                     
  7203                           ; BSR set to: 15
  7204                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7205   005262  8EA7               	bsf	167,7,c	;volatile
  7206   005264                     
  7207                           ; BSR set to: 15
  7208                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7209   005264  8926               	bsf	38,4,b	;volatile
  7210                           
  7211                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7212   005266  5126               	movf	38,w,b	;volatile
  7213   005268  0BF0               	andlw	-16
  7214   00526A  090C               	iorlw	12
  7215   00526C  6F26               	movwf	38,b	;volatile
  7216   00526E                     
  7217                           ; BSR set to: 15
  7218                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7219   00526E  8F26               	bsf	38,7,b	;volatile
  7220   005270                     
  7221                           ; BSR set to: 15
  7222                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7223   005270  8922               	bsf	34,4,b	;volatile
  7224                           
  7225                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7226   005272  5122               	movf	34,w,b	;volatile
  7227   005274  0BF0               	andlw	-16
  7228   005276  090C               	iorlw	12
  7229   005278  6F22               	movwf	34,b	;volatile
  7230   00527A                     
  7231                           ; BSR set to: 15
  7232                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7233   00527A  8F22               	bsf	34,7,b	;volatile
  7234   00527C                     
  7235                           ; BSR set to: 15
  7236   00527C  0012               	return		;funcret
  7237   00527E                     __end_of_initDCmotorsPWM:
  7238                           	callstack 0
  7239                           
  7240 ;; *************** function _getTMR0val *****************
  7241 ;; Defined at:
  7242 ;;		line 28 in file "timers.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  moving          2    4[COMRAM] int 
  7247 ;;  temp            2    2[COMRAM] unsigned int 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;Total ram usage:        6 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 1
  7264 ;; This function calls:
  7265 ;;		Nothing
  7266 ;; This function is called by:
  7267 ;;		_main
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text32
  7272   00566E                     __ptext32:
  7273                           	callstack 0
  7274   00566E                     _getTMR0val:
  7275                           	callstack 29
  7276   00566E                     
  7277                           ;timers.c: 30:     unsigned int temp= TMR0L;
  7278   00566E  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7279   005672  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7280   005674                     
  7281                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  7282   005674  5003               	movf	getTMR0val@temp^0,w,c
  7283   005676  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7284   00567A  6A02               	clrf	(??_getTMR0val+1)^0,c
  7285   00567C  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7286   005680  6A01               	clrf	??_getTMR0val^0,c
  7287   005682  1001               	iorwf	??_getTMR0val^0,w,c
  7288   005684  6E05               	movwf	getTMR0val@moving^0,c
  7289   005686  5002               	movf	(??_getTMR0val+1)^0,w,c
  7290   005688  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7291                           
  7292                           ;timers.c: 33:     if (moving>500){
  7293   00568A  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7294   00568C  EF51  F02B         	goto	u5571
  7295   005690  0EF5               	movlw	245
  7296   005692  5C05               	subwf	getTMR0val@moving^0,w,c
  7297   005694  0E01               	movlw	1
  7298   005696  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7299   005698  A0D8               	btfss	status,0,c
  7300   00569A  EF51  F02B         	goto	u5571
  7301   00569E  EF53  F02B         	goto	u5570
  7302   0056A2                     u5571:
  7303   0056A2  EF59  F02B         	goto	l5684
  7304   0056A6                     u5570:
  7305   0056A6                     
  7306                           ;timers.c: 34:         moving=moving-500;
  7307   0056A6  0E0C               	movlw	12
  7308   0056A8  2405               	addwf	getTMR0val@moving^0,w,c
  7309   0056AA  6E05               	movwf	getTMR0val@moving^0,c
  7310   0056AC  0EFE               	movlw	254
  7311   0056AE  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7312   0056B0  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7313   0056B2                     l5684:
  7314                           
  7315                           ;timers.c: 37:     Time_forward[move_count]=moving;
  7316   0056B2  90D8               	bcf	status,0,c
  7317   0056B4  0101               	movlb	1	; () banked
  7318   0056B6  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7319   0056B8  6ED9               	movwf	fsr2l,c
  7320   0056BA  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7321   0056BC  6EDA               	movwf	fsr2h,c
  7322   0056BE  0E3C               	movlw	low _Time_forward
  7323   0056C0  26D9               	addwf	fsr2l,f,c
  7324   0056C2  0E02               	movlw	high _Time_forward
  7325   0056C4  22DA               	addwfc	fsr2h,f,c
  7326   0056C6  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7327   0056CA  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7328   0056CE                     
  7329                           ; BSR set to: 1
  7330   0056CE  0012               	return		;funcret
  7331   0056D0                     __end_of_getTMR0val:
  7332                           	callstack 0
  7333                           
  7334 ;; *************** function _colour_rel *****************
  7335 ;; Defined at:
  7336 ;;		line 115 in file "color.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  vals            2   74[COMRAM] PTR struct RGB
  7339 ;;		 -> vals(8), 
  7340 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7341 ;;		 -> rel(12), 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  B               4   20[BANK0 ] float 
  7344 ;;  G               4   16[BANK0 ] float 
  7345 ;;  R               4   12[BANK0 ] float 
  7346 ;;  L               4    0[BANK0 ] float 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7360 ;;Total ram usage:       28 bytes
  7361 ;; Hardware stack levels used: 1
  7362 ;; Hardware stack levels required when called: 2
  7363 ;; This function calls:
  7364 ;;		___fladd
  7365 ;;		___fldiv
  7366 ;;		___xxtofl
  7367 ;; This function is called by:
  7368 ;;		_main
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text33
  7373   002EB0                     __ptext33:
  7374                           	callstack 0
  7375   002EB0                     _colour_rel:
  7376                           	callstack 28
  7377   002EB0                     
  7378                           ;color.c: 116:     float R = vals->R;
  7379   002EB0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7380   002EB4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7381   002EB8  CFDE F001          	movff	postinc2,___xxtofl@val
  7382   002EBC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7383   002EC0  0E00               	movlw	0
  7384   002EC2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7385   002EC4  0EFF               	movlw	-1
  7386   002EC6  6E03               	movwf	(___xxtofl@val+2)^0,c
  7387   002EC8  6E04               	movwf	(___xxtofl@val+3)^0,c
  7388   002ECA  0E01               	movlw	1
  7389   002ECC  EC9A  F020         	call	___xxtofl
  7390   002ED0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7391   002ED4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7392   002ED8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7393   002EDC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7394                           
  7395                           ;color.c: 117:     float G = vals->G;
  7396   002EE0  EE20 F002          	lfsr	2,2
  7397   002EE4  504B               	movf	colour_rel@vals^0,w,c
  7398   002EE6  26D9               	addwf	fsr2l,f,c
  7399   002EE8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7400   002EEA  22DA               	addwfc	fsr2h,f,c
  7401   002EEC  CFDE F001          	movff	postinc2,___xxtofl@val
  7402   002EF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7403   002EF4  0E00               	movlw	0
  7404   002EF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7405   002EF8  0EFF               	movlw	-1
  7406   002EFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7407   002EFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7408   002EFE  0E01               	movlw	1
  7409   002F00  EC9A  F020         	call	___xxtofl
  7410   002F04  C001  F070         	movff	?___xxtofl,colour_rel@G
  7411   002F08  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7412   002F0C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7413   002F10  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7414                           
  7415                           ;color.c: 118:     float B = vals->B;
  7416   002F14  EE20 F004          	lfsr	2,4
  7417   002F18  504B               	movf	colour_rel@vals^0,w,c
  7418   002F1A  26D9               	addwf	fsr2l,f,c
  7419   002F1C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7420   002F1E  22DA               	addwfc	fsr2h,f,c
  7421   002F20  CFDE F001          	movff	postinc2,___xxtofl@val
  7422   002F24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7423   002F28  0E00               	movlw	0
  7424   002F2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7425   002F2C  0EFF               	movlw	-1
  7426   002F2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7427   002F30  6E04               	movwf	(___xxtofl@val+3)^0,c
  7428   002F32  0E01               	movlw	1
  7429   002F34  EC9A  F020         	call	___xxtofl
  7430   002F38  C001  F074         	movff	?___xxtofl,colour_rel@B
  7431   002F3C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7432   002F40  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7433   002F44  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7434                           
  7435                           ;color.c: 119:     float L = vals->L;
  7436   002F48  EE20 F006          	lfsr	2,6
  7437   002F4C  504B               	movf	colour_rel@vals^0,w,c
  7438   002F4E  26D9               	addwf	fsr2l,f,c
  7439   002F50  504C               	movf	(colour_rel@vals+1)^0,w,c
  7440   002F52  22DA               	addwfc	fsr2h,f,c
  7441   002F54  CFDE F001          	movff	postinc2,___xxtofl@val
  7442   002F58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7443   002F5C  0E00               	movlw	0
  7444   002F5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7445   002F60  0EFF               	movlw	-1
  7446   002F62  6E03               	movwf	(___xxtofl@val+2)^0,c
  7447   002F64  6E04               	movwf	(___xxtofl@val+3)^0,c
  7448   002F66  0E01               	movlw	1
  7449   002F68  EC9A  F020         	call	___xxtofl
  7450   002F6C  C001  F060         	movff	?___xxtofl,colour_rel@L
  7451   002F70  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7452   002F74  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7453   002F78  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7454   002F7C                     
  7455                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7456   002F7C  C070  F005         	movff	colour_rel@G,___fladd@a
  7457   002F80  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7458   002F84  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7459   002F88  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7460   002F8C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7461   002F90  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7462   002F94  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7463   002F98  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7464   002F9C  EC16  F011         	call	___fladd	;wreg free
  7465   002FA0  C001  F064         	movff	?___fladd,_colour_rel$3281
  7466   002FA4  C002  F065         	movff	?___fladd+1,_colour_rel$3281+1
  7467   002FA8  C003  F066         	movff	?___fladd+2,_colour_rel$3281+2
  7468   002FAC  C004  F067         	movff	?___fladd+3,_colour_rel$3281+3
  7469   002FB0                     
  7470                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7471   002FB0  C074  F005         	movff	colour_rel@B,___fladd@a
  7472   002FB4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7473   002FB8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7474   002FBC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7475   002FC0  C064  F001         	movff	_colour_rel$3281,___fladd@b
  7476   002FC4  C065  F002         	movff	_colour_rel$3281+1,___fladd@b+1
  7477   002FC8  C066  F003         	movff	_colour_rel$3281+2,___fladd@b+2
  7478   002FCC  C067  F004         	movff	_colour_rel$3281+3,___fladd@b+3
  7479   002FD0  EC16  F011         	call	___fladd	;wreg free
  7480   002FD4  C001  F068         	movff	?___fladd,_colour_rel$3282
  7481   002FD8  C002  F069         	movff	?___fladd+1,_colour_rel$3282+1
  7482   002FDC  C003  F06A         	movff	?___fladd+2,_colour_rel$3282+2
  7483   002FE0  C004  F06B         	movff	?___fladd+3,_colour_rel$3282+3
  7484                           
  7485                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7486   002FE4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7487   002FE8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7488   002FEC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7489   002FF0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7490   002FF4  C060  F005         	movff	colour_rel@L,___fladd@a
  7491   002FF8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7492   002FFC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7493   003000  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7494   003004  C068  F001         	movff	_colour_rel$3282,___fladd@b
  7495   003008  C069  F002         	movff	_colour_rel$3282+1,___fladd@b+1
  7496   00300C  C06A  F003         	movff	_colour_rel$3282+2,___fladd@b+2
  7497   003010  C06B  F004         	movff	_colour_rel$3282+3,___fladd@b+3
  7498   003014  EC16  F011         	call	___fladd	;wreg free
  7499   003018  C001  F036         	movff	?___fladd,___fldiv@a
  7500   00301C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7501   003020  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7502   003024  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7503   003028  EC8B  F015         	call	___fldiv	;wreg free
  7504   00302C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7505   003030  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7506   003034  C032  FFDE         	movff	?___fldiv,postinc2
  7507   003038  C033  FFDE         	movff	?___fldiv+1,postinc2
  7508   00303C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7509   003040  C035  FFDE         	movff	?___fldiv+3,postinc2
  7510   003044                     
  7511                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7512   003044  C070  F005         	movff	colour_rel@G,___fladd@a
  7513   003048  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7514   00304C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7515   003050  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7516   003054  C06C  F001         	movff	colour_rel@R,___fladd@b
  7517   003058  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7518   00305C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7519   003060  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7520   003064  EC16  F011         	call	___fladd	;wreg free
  7521   003068  C001  F064         	movff	?___fladd,_colour_rel$3281
  7522   00306C  C002  F065         	movff	?___fladd+1,_colour_rel$3281+1
  7523   003070  C003  F066         	movff	?___fladd+2,_colour_rel$3281+2
  7524   003074  C004  F067         	movff	?___fladd+3,_colour_rel$3281+3
  7525   003078                     
  7526                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7527   003078  C074  F005         	movff	colour_rel@B,___fladd@a
  7528   00307C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7529   003080  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7530   003084  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7531   003088  C064  F001         	movff	_colour_rel$3281,___fladd@b
  7532   00308C  C065  F002         	movff	_colour_rel$3281+1,___fladd@b+1
  7533   003090  C066  F003         	movff	_colour_rel$3281+2,___fladd@b+2
  7534   003094  C067  F004         	movff	_colour_rel$3281+3,___fladd@b+3
  7535   003098  EC16  F011         	call	___fladd	;wreg free
  7536   00309C  C001  F068         	movff	?___fladd,_colour_rel$3282
  7537   0030A0  C002  F069         	movff	?___fladd+1,_colour_rel$3282+1
  7538   0030A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3282+2
  7539   0030A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3282+3
  7540                           
  7541                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7542   0030AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  7543   0030B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7544   0030B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7545   0030B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7546   0030BC  C060  F005         	movff	colour_rel@L,___fladd@a
  7547   0030C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7548   0030C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7549   0030C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7550   0030CC  C068  F001         	movff	_colour_rel$3282,___fladd@b
  7551   0030D0  C069  F002         	movff	_colour_rel$3282+1,___fladd@b+1
  7552   0030D4  C06A  F003         	movff	_colour_rel$3282+2,___fladd@b+2
  7553   0030D8  C06B  F004         	movff	_colour_rel$3282+3,___fladd@b+3
  7554   0030DC  EC16  F011         	call	___fladd	;wreg free
  7555   0030E0  C001  F036         	movff	?___fladd,___fldiv@a
  7556   0030E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7557   0030E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7558   0030EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7559   0030F0  EC8B  F015         	call	___fldiv	;wreg free
  7560   0030F4  EE20 F008          	lfsr	2,8
  7561   0030F8  504D               	movf	colour_rel@rel^0,w,c
  7562   0030FA  26D9               	addwf	fsr2l,f,c
  7563   0030FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  7564   0030FE  22DA               	addwfc	fsr2h,f,c
  7565   003100  C032  FFDE         	movff	?___fldiv,postinc2
  7566   003104  C033  FFDE         	movff	?___fldiv+1,postinc2
  7567   003108  C034  FFDE         	movff	?___fldiv+2,postinc2
  7568   00310C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7569   003110                     
  7570                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7571   003110  C070  F005         	movff	colour_rel@G,___fladd@a
  7572   003114  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7573   003118  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7574   00311C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7575   003120  C06C  F001         	movff	colour_rel@R,___fladd@b
  7576   003124  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7577   003128  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7578   00312C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7579   003130  EC16  F011         	call	___fladd	;wreg free
  7580   003134  C001  F064         	movff	?___fladd,_colour_rel$3281
  7581   003138  C002  F065         	movff	?___fladd+1,_colour_rel$3281+1
  7582   00313C  C003  F066         	movff	?___fladd+2,_colour_rel$3281+2
  7583   003140  C004  F067         	movff	?___fladd+3,_colour_rel$3281+3
  7584   003144                     
  7585                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7586   003144  C074  F005         	movff	colour_rel@B,___fladd@a
  7587   003148  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7588   00314C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7589   003150  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7590   003154  C064  F001         	movff	_colour_rel$3281,___fladd@b
  7591   003158  C065  F002         	movff	_colour_rel$3281+1,___fladd@b+1
  7592   00315C  C066  F003         	movff	_colour_rel$3281+2,___fladd@b+2
  7593   003160  C067  F004         	movff	_colour_rel$3281+3,___fladd@b+3
  7594   003164  EC16  F011         	call	___fladd	;wreg free
  7595   003168  C001  F068         	movff	?___fladd,_colour_rel$3282
  7596   00316C  C002  F069         	movff	?___fladd+1,_colour_rel$3282+1
  7597   003170  C003  F06A         	movff	?___fladd+2,_colour_rel$3282+2
  7598   003174  C004  F06B         	movff	?___fladd+3,_colour_rel$3282+3
  7599                           
  7600                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7601   003178  C070  F032         	movff	colour_rel@G,___fldiv@b
  7602   00317C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7603   003180  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7604   003184  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7605   003188  C060  F005         	movff	colour_rel@L,___fladd@a
  7606   00318C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7607   003190  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7608   003194  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7609   003198  C068  F001         	movff	_colour_rel$3282,___fladd@b
  7610   00319C  C069  F002         	movff	_colour_rel$3282+1,___fladd@b+1
  7611   0031A0  C06A  F003         	movff	_colour_rel$3282+2,___fladd@b+2
  7612   0031A4  C06B  F004         	movff	_colour_rel$3282+3,___fladd@b+3
  7613   0031A8  EC16  F011         	call	___fladd	;wreg free
  7614   0031AC  C001  F036         	movff	?___fladd,___fldiv@a
  7615   0031B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7616   0031B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7617   0031B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7618   0031BC  EC8B  F015         	call	___fldiv	;wreg free
  7619   0031C0  EE20 F004          	lfsr	2,4
  7620   0031C4  504D               	movf	colour_rel@rel^0,w,c
  7621   0031C6  26D9               	addwf	fsr2l,f,c
  7622   0031C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7623   0031CA  22DA               	addwfc	fsr2h,f,c
  7624   0031CC  C032  FFDE         	movff	?___fldiv,postinc2
  7625   0031D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7626   0031D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7627   0031D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7628   0031DC  0012               	return		;funcret
  7629   0031DE                     __end_of_colour_rel:
  7630                           	callstack 0
  7631                           
  7632 ;; *************** function _colour_move *****************
  7633 ;; Defined at:
  7634 ;;		line 8 in file "colour_move.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  recognized_c    2   44[COMRAM] int 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;Total ram usage:        2 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 7
  7655 ;; This function calls:
  7656 ;;		_BlueMove
  7657 ;;		_GreenMove
  7658 ;;		_LightBlueMove
  7659 ;;		_OrangeMove
  7660 ;;		_PinkMove
  7661 ;;		_RedMove
  7662 ;;		_RetryMove
  7663 ;;		_YellowMove
  7664 ;;		_go_Home
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text34
  7671   003A56                     __ptext34:
  7672                           	callstack 0
  7673   003A56                     _colour_move:
  7674                           	callstack 23
  7675   003A56                     
  7676                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7677   003A56  042D               	decf	colour_move@recognized_colour^0,w,c
  7678   003A58  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7679   003A5A  A4D8               	btfss	status,2,c
  7680   003A5C  EF32  F01D         	goto	u5581
  7681   003A60  EF34  F01D         	goto	u5580
  7682   003A64                     u5581:
  7683   003A64  EF52  F01D         	goto	l5716
  7684   003A68                     u5580:
  7685   003A68                     
  7686                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7687   003A68  0E61               	movlw	low _motorL
  7688   003A6A  6E20               	movwf	RedMove@mL^0,c
  7689   003A6C  0E01               	movlw	high _motorL
  7690   003A6E  6E21               	movwf	(RedMove@mL+1)^0,c
  7691   003A70  0E58               	movlw	low _motorR
  7692   003A72  6E22               	movwf	RedMove@mR^0,c
  7693   003A74  0E01               	movlw	high _motorR
  7694   003A76  6E23               	movwf	(RedMove@mR+1)^0,c
  7695   003A78  EC81  F02F         	call	_RedMove	;wreg free
  7696   003A7C                     
  7697                           ;colour_move.c: 14:         TMR0H=0;
  7698   003A7C  0E00               	movlw	0
  7699   003A7E  6ED4               	movwf	212,c	;volatile
  7700   003A80                     
  7701                           ;colour_move.c: 15:         TMR0L=0;
  7702   003A80  0E00               	movlw	0
  7703   003A82  6ED3               	movwf	211,c	;volatile
  7704   003A84                     
  7705                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7706   003A84  0E1A               	movlw	low _WayBack
  7707   003A86  0101               	movlb	1	; () banked
  7708   003A88  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7709   003A8A  6ED9               	movwf	fsr2l,c
  7710   003A8C  0E01               	movlw	high _WayBack
  7711   003A8E  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7712   003A90  6EDA               	movwf	fsr2h,c
  7713   003A92  0E01               	movlw	1
  7714   003A94  6EDF               	movwf	indf2,c
  7715   003A96                     l5714:
  7716                           
  7717                           ; BSR set to: 1
  7718                           ;colour_move.c: 17:         lost_count=0;
  7719   003A96  0E00               	movlw	0
  7720   003A98  0100               	movlb	0	; () banked
  7721   003A9A  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7722   003A9C  0E00               	movlw	0
  7723   003A9E  6FEB               	movwf	_lost_count& (0+255),b
  7724                           
  7725                           ;colour_move.c: 18:     }
  7726   003AA0  EF66  F01E         	goto	l754
  7727   003AA4                     l5716:
  7728   003AA4  0E02               	movlw	2
  7729   003AA6  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7730   003AA8  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7731   003AAA  A4D8               	btfss	status,2,c
  7732   003AAC  EF5A  F01D         	goto	u5591
  7733   003AB0  EF5C  F01D         	goto	u5590
  7734   003AB4                     u5591:
  7735   003AB4  EF75  F01D         	goto	l5728
  7736   003AB8                     u5590:
  7737   003AB8                     
  7738                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7739   003AB8  0E61               	movlw	low _motorL
  7740   003ABA  6E20               	movwf	OrangeMove@mL^0,c
  7741   003ABC  0E01               	movlw	high _motorL
  7742   003ABE  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7743   003AC0  0E58               	movlw	low _motorR
  7744   003AC2  6E22               	movwf	OrangeMove@mR^0,c
  7745   003AC4  0E01               	movlw	high _motorR
  7746   003AC6  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7747   003AC8  ECD1  F02A         	call	_OrangeMove	;wreg free
  7748   003ACC                     
  7749                           ;colour_move.c: 21:         TMR0H=0;
  7750   003ACC  0E00               	movlw	0
  7751   003ACE  6ED4               	movwf	212,c	;volatile
  7752   003AD0                     
  7753                           ;colour_move.c: 22:         TMR0L=0;
  7754   003AD0  0E00               	movlw	0
  7755   003AD2  6ED3               	movwf	211,c	;volatile
  7756   003AD4                     
  7757                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7758   003AD4  0E1A               	movlw	low _WayBack
  7759   003AD6  0101               	movlb	1	; () banked
  7760   003AD8  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7761   003ADA  6ED9               	movwf	fsr2l,c
  7762   003ADC  0E01               	movlw	high _WayBack
  7763   003ADE  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7764   003AE0  6EDA               	movwf	fsr2h,c
  7765   003AE2  0E02               	movlw	2
  7766   003AE4  6EDF               	movwf	indf2,c
  7767   003AE6  EF4B  F01D         	goto	l5714
  7768   003AEA                     l5728:
  7769   003AEA  0E03               	movlw	3
  7770   003AEC  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7771   003AEE  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7772   003AF0  A4D8               	btfss	status,2,c
  7773   003AF2  EF7D  F01D         	goto	u5601
  7774   003AF6  EF7F  F01D         	goto	u5600
  7775   003AFA                     u5601:
  7776   003AFA  EF98  F01D         	goto	l5740
  7777   003AFE                     u5600:
  7778   003AFE                     
  7779                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7780   003AFE  0E61               	movlw	low _motorL
  7781   003B00  6E20               	movwf	YellowMove@mL^0,c
  7782   003B02  0E01               	movlw	high _motorL
  7783   003B04  6E21               	movwf	(YellowMove@mL+1)^0,c
  7784   003B06  0E58               	movlw	low _motorR
  7785   003B08  6E22               	movwf	YellowMove@mR^0,c
  7786   003B0A  0E01               	movlw	high _motorR
  7787   003B0C  6E23               	movwf	(YellowMove@mR+1)^0,c
  7788   003B0E  EC48  F02D         	call	_YellowMove	;wreg free
  7789   003B12                     
  7790                           ;colour_move.c: 28:         TMR0H=0;
  7791   003B12  0E00               	movlw	0
  7792   003B14  6ED4               	movwf	212,c	;volatile
  7793   003B16                     
  7794                           ;colour_move.c: 29:         TMR0L=0;
  7795   003B16  0E00               	movlw	0
  7796   003B18  6ED3               	movwf	211,c	;volatile
  7797   003B1A                     
  7798                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7799   003B1A  0E1A               	movlw	low _WayBack
  7800   003B1C  0101               	movlb	1	; () banked
  7801   003B1E  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7802   003B20  6ED9               	movwf	fsr2l,c
  7803   003B22  0E01               	movlw	high _WayBack
  7804   003B24  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7805   003B26  6EDA               	movwf	fsr2h,c
  7806   003B28  0E03               	movlw	3
  7807   003B2A  6EDF               	movwf	indf2,c
  7808   003B2C  EF4B  F01D         	goto	l5714
  7809   003B30                     l5740:
  7810   003B30  0E04               	movlw	4
  7811   003B32  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7812   003B34  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7813   003B36  A4D8               	btfss	status,2,c
  7814   003B38  EFA0  F01D         	goto	u5611
  7815   003B3C  EFA2  F01D         	goto	u5610
  7816   003B40                     u5611:
  7817   003B40  EFBB  F01D         	goto	l5752
  7818   003B44                     u5610:
  7819   003B44                     
  7820                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7821   003B44  0E61               	movlw	low _motorL
  7822   003B46  6E20               	movwf	BlueMove@mL^0,c
  7823   003B48  0E01               	movlw	high _motorL
  7824   003B4A  6E21               	movwf	(BlueMove@mL+1)^0,c
  7825   003B4C  0E58               	movlw	low _motorR
  7826   003B4E  6E22               	movwf	BlueMove@mR^0,c
  7827   003B50  0E01               	movlw	high _motorR
  7828   003B52  6E23               	movwf	(BlueMove@mR+1)^0,c
  7829   003B54  ECBB  F029         	call	_BlueMove	;wreg free
  7830   003B58                     
  7831                           ;colour_move.c: 35:         TMR0H=0;
  7832   003B58  0E00               	movlw	0
  7833   003B5A  6ED4               	movwf	212,c	;volatile
  7834   003B5C                     
  7835                           ;colour_move.c: 36:         TMR0L=0;
  7836   003B5C  0E00               	movlw	0
  7837   003B5E  6ED3               	movwf	211,c	;volatile
  7838   003B60                     
  7839                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7840   003B60  0E1A               	movlw	low _WayBack
  7841   003B62  0101               	movlb	1	; () banked
  7842   003B64  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7843   003B66  6ED9               	movwf	fsr2l,c
  7844   003B68  0E01               	movlw	high _WayBack
  7845   003B6A  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7846   003B6C  6EDA               	movwf	fsr2h,c
  7847   003B6E  0E04               	movlw	4
  7848   003B70  6EDF               	movwf	indf2,c
  7849   003B72  EF4B  F01D         	goto	l5714
  7850   003B76                     l5752:
  7851   003B76  0E05               	movlw	5
  7852   003B78  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7853   003B7A  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7854   003B7C  A4D8               	btfss	status,2,c
  7855   003B7E  EFC3  F01D         	goto	u5621
  7856   003B82  EFC5  F01D         	goto	u5620
  7857   003B86                     u5621:
  7858   003B86  EFDE  F01D         	goto	l5764
  7859   003B8A                     u5620:
  7860   003B8A                     
  7861                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7862   003B8A  0E61               	movlw	low _motorL
  7863   003B8C  6E20               	movwf	GreenMove@mL^0,c
  7864   003B8E  0E01               	movlw	high _motorL
  7865   003B90  6E21               	movwf	(GreenMove@mL+1)^0,c
  7866   003B92  0E58               	movlw	low _motorR
  7867   003B94  6E22               	movwf	GreenMove@mR^0,c
  7868   003B96  0E01               	movlw	high _motorR
  7869   003B98  6E23               	movwf	(GreenMove@mR+1)^0,c
  7870   003B9A  ECA0  F02F         	call	_GreenMove	;wreg free
  7871   003B9E                     
  7872                           ;colour_move.c: 42:         TMR0H=0;
  7873   003B9E  0E00               	movlw	0
  7874   003BA0  6ED4               	movwf	212,c	;volatile
  7875   003BA2                     
  7876                           ;colour_move.c: 43:         TMR0L=0;
  7877   003BA2  0E00               	movlw	0
  7878   003BA4  6ED3               	movwf	211,c	;volatile
  7879   003BA6                     
  7880                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7881   003BA6  0E1A               	movlw	low _WayBack
  7882   003BA8  0101               	movlb	1	; () banked
  7883   003BAA  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7884   003BAC  6ED9               	movwf	fsr2l,c
  7885   003BAE  0E01               	movlw	high _WayBack
  7886   003BB0  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7887   003BB2  6EDA               	movwf	fsr2h,c
  7888   003BB4  0E05               	movlw	5
  7889   003BB6  6EDF               	movwf	indf2,c
  7890   003BB8  EF4B  F01D         	goto	l5714
  7891   003BBC                     l5764:
  7892   003BBC  0E06               	movlw	6
  7893   003BBE  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7894   003BC0  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7895   003BC2  A4D8               	btfss	status,2,c
  7896   003BC4  EFE6  F01D         	goto	u5631
  7897   003BC8  EFE8  F01D         	goto	u5630
  7898   003BCC                     u5631:
  7899   003BCC  EF01  F01E         	goto	l5776
  7900   003BD0                     u5630:
  7901   003BD0                     
  7902                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7903   003BD0  0E61               	movlw	low _motorL
  7904   003BD2  6E20               	movwf	LightBlueMove@mL^0,c
  7905   003BD4  0E01               	movlw	high _motorL
  7906   003BD6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7907   003BD8  0E58               	movlw	low _motorR
  7908   003BDA  6E22               	movwf	LightBlueMove@mR^0,c
  7909   003BDC  0E01               	movlw	high _motorR
  7910   003BDE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7911   003BE0  EC04  F02B         	call	_LightBlueMove	;wreg free
  7912   003BE4                     
  7913                           ;colour_move.c: 49:         TMR0H=0;
  7914   003BE4  0E00               	movlw	0
  7915   003BE6  6ED4               	movwf	212,c	;volatile
  7916   003BE8                     
  7917                           ;colour_move.c: 50:         TMR0L=0;
  7918   003BE8  0E00               	movlw	0
  7919   003BEA  6ED3               	movwf	211,c	;volatile
  7920   003BEC                     
  7921                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7922   003BEC  0E1A               	movlw	low _WayBack
  7923   003BEE  0101               	movlb	1	; () banked
  7924   003BF0  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7925   003BF2  6ED9               	movwf	fsr2l,c
  7926   003BF4  0E01               	movlw	high _WayBack
  7927   003BF6  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7928   003BF8  6EDA               	movwf	fsr2h,c
  7929   003BFA  0E06               	movlw	6
  7930   003BFC  6EDF               	movwf	indf2,c
  7931   003BFE  EF4B  F01D         	goto	l5714
  7932   003C02                     l5776:
  7933   003C02  0E07               	movlw	7
  7934   003C04  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7935   003C06  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7936   003C08  A4D8               	btfss	status,2,c
  7937   003C0A  EF09  F01E         	goto	u5641
  7938   003C0E  EF0B  F01E         	goto	u5640
  7939   003C12                     u5641:
  7940   003C12  EF24  F01E         	goto	l5788
  7941   003C16                     u5640:
  7942   003C16                     
  7943                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7944   003C16  0E61               	movlw	low _motorL
  7945   003C18  6E20               	movwf	PinkMove@mL^0,c
  7946   003C1A  0E01               	movlw	high _motorL
  7947   003C1C  6E21               	movwf	(PinkMove@mL+1)^0,c
  7948   003C1E  0E58               	movlw	low _motorR
  7949   003C20  6E22               	movwf	PinkMove@mR^0,c
  7950   003C22  0E01               	movlw	high _motorR
  7951   003C24  6E23               	movwf	(PinkMove@mR+1)^0,c
  7952   003C26  EC71  F02D         	call	_PinkMove	;wreg free
  7953   003C2A                     
  7954                           ;colour_move.c: 56:         TMR0H=0;
  7955   003C2A  0E00               	movlw	0
  7956   003C2C  6ED4               	movwf	212,c	;volatile
  7957   003C2E                     
  7958                           ;colour_move.c: 57:         TMR0L=0;
  7959   003C2E  0E00               	movlw	0
  7960   003C30  6ED3               	movwf	211,c	;volatile
  7961   003C32                     
  7962                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7963   003C32  0E1A               	movlw	low _WayBack
  7964   003C34  0101               	movlb	1	; () banked
  7965   003C36  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7966   003C38  6ED9               	movwf	fsr2l,c
  7967   003C3A  0E01               	movlw	high _WayBack
  7968   003C3C  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7969   003C3E  6EDA               	movwf	fsr2h,c
  7970   003C40  0E07               	movlw	7
  7971   003C42  6EDF               	movwf	indf2,c
  7972   003C44  EF4B  F01D         	goto	l5714
  7973   003C48                     l5788:
  7974   003C48  0E0A               	movlw	10
  7975   003C4A  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7976   003C4C  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7977   003C4E  A4D8               	btfss	status,2,c
  7978   003C50  EF2C  F01E         	goto	u5651
  7979   003C54  EF2E  F01E         	goto	u5650
  7980   003C58                     u5651:
  7981   003C58  EF5B  F01E         	goto	l5802
  7982   003C5C                     u5650:
  7983   003C5C                     
  7984                           ;colour_move.c: 62:         lost_count++;
  7985   003C5C  0100               	movlb	0	; () banked
  7986   003C5E  4BEB               	infsnz	_lost_count& (0+255),f,b
  7987   003C60  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7988   003C62                     
  7989                           ; BSR set to: 0
  7990                           ;colour_move.c: 63:         if (lost_count>=3){
  7991   003C62  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7992   003C64  EF3D  F01E         	goto	u5661
  7993   003C68  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7994   003C6A  E109               	bnz	u5660
  7995   003C6C  0E03               	movlw	3
  7996   003C6E  5DEB               	subwf	_lost_count& (0+255),w,b
  7997   003C70  A0D8               	btfss	status,0,c
  7998   003C72  EF3D  F01E         	goto	u5661
  7999   003C76  EF3F  F01E         	goto	u5660
  8000   003C7A                     u5661:
  8001   003C7A  EF4B  F01E         	goto	l5796
  8002   003C7E                     u5660:
  8003   003C7E                     l5794:
  8004                           
  8005                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  8006   003C7E  0E1A               	movlw	low _WayBack
  8007   003C80  6E24               	movwf	go_Home@WayBack^0,c
  8008   003C82  0E01               	movlw	high _WayBack
  8009   003C84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  8010   003C86  0E3C               	movlw	low _Time_forward
  8011   003C88  6E26               	movwf	go_Home@Time_forward^0,c
  8012   003C8A  0E02               	movlw	high _Time_forward
  8013   003C8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  8014   003C8E  EC67  F01E         	call	_go_Home	;wreg free
  8015                           
  8016                           ;colour_move.c: 65:         }
  8017   003C92  EF66  F01E         	goto	l754
  8018   003C96                     l5796:
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  8022   003C96  0E61               	movlw	low _motorL
  8023   003C98  6E20               	movwf	RetryMove@mL^0,c
  8024   003C9A  0E01               	movlw	high _motorL
  8025   003C9C  6E21               	movwf	(RetryMove@mL+1)^0,c
  8026   003C9E  0E58               	movlw	low _motorR
  8027   003CA0  6E22               	movwf	RetryMove@mR^0,c
  8028   003CA2  0E01               	movlw	high _motorR
  8029   003CA4  6E23               	movwf	(RetryMove@mR+1)^0,c
  8030   003CA6  EC69  F02A         	call	_RetryMove	;wreg free
  8031   003CAA                     
  8032                           ;colour_move.c: 68:             TMR0H=0;
  8033   003CAA  0E00               	movlw	0
  8034   003CAC  6ED4               	movwf	212,c	;volatile
  8035   003CAE                     
  8036                           ;colour_move.c: 69:             TMR0L=0;
  8037   003CAE  0E00               	movlw	0
  8038   003CB0  6ED3               	movwf	211,c	;volatile
  8039   003CB2  EF66  F01E         	goto	l754
  8040   003CB6                     l5802:
  8041   003CB6  502D               	movf	colour_move@recognized_colour^0,w,c
  8042   003CB8  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8043   003CBA  A4D8               	btfss	status,2,c
  8044   003CBC  EF62  F01E         	goto	u5671
  8045   003CC0  EF64  F01E         	goto	u5670
  8046   003CC4                     u5671:
  8047   003CC4  EF66  F01E         	goto	l746
  8048   003CC8                     u5670:
  8049   003CC8  EF3F  F01E         	goto	l5794
  8050   003CCC                     l746:
  8051   003CCC                     l754:
  8052   003CCC  0012               	return		;funcret
  8053   003CCE                     __end_of_colour_move:
  8054                           	callstack 0
  8055                           
  8056 ;; *************** function _go_Home *****************
  8057 ;; Defined at:
  8058 ;;		line 4 in file "Memory.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8061 ;;		 -> WayBack(50), 
  8062 ;;  Time_forward    2   37[COMRAM] PTR int 
  8063 ;;		 -> Time_forward(100), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  i               2   42[COMRAM] int 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;Total ram usage:        9 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 6
  8082 ;; This function calls:
  8083 ;;		_BlueMove
  8084 ;;		_GreenMove
  8085 ;;		_RedMove
  8086 ;;		_ReverseLightBlueMove
  8087 ;;		_ReverseOrangeMove
  8088 ;;		_ReversePink
  8089 ;;		_ReverseYellow
  8090 ;;		_stop
  8091 ;;		_timed_forward
  8092 ;; This function is called by:
  8093 ;;		_main
  8094 ;;		_colour_move
  8095 ;; This function uses a non-reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text35
  8099   003CCE                     __ptext35:
  8100                           	callstack 0
  8101   003CCE                     _go_Home:
  8102                           	callstack 24
  8103   003CCE                     
  8104                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8105   003CCE  0E61               	movlw	low _motorL
  8106   003CD0  6E20               	movwf	BlueMove@mL^0,c
  8107   003CD2  0E01               	movlw	high _motorL
  8108   003CD4  6E21               	movwf	(BlueMove@mL+1)^0,c
  8109   003CD6  0E58               	movlw	low _motorR
  8110   003CD8  6E22               	movwf	BlueMove@mR^0,c
  8111   003CDA  0E01               	movlw	high _motorR
  8112   003CDC  6E23               	movwf	(BlueMove@mR+1)^0,c
  8113   003CDE  ECBB  F029         	call	_BlueMove	;wreg free
  8114   003CE2                     
  8115                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8116   003CE2  9ED5               	bcf	213,7,c	;volatile
  8117   003CE4                     
  8118                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8119   003CE4  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8120   003CE8  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8121   003CEC                     l5252:
  8122   003CEC  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8123   003CEE  EF7D  F01E         	goto	u5000
  8124   003CF2  EF7B  F01E         	goto	u5001
  8125   003CF6                     u5001:
  8126   003CF6  EF7F  F01E         	goto	l5256
  8127   003CFA                     u5000:
  8128   003CFA  EF90  F01F         	goto	l613
  8129   003CFE                     l5256:
  8130                           
  8131                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8132   003CFE  0E61               	movlw	low _motorL
  8133   003D00  6E14               	movwf	timed_forward@mL^0,c
  8134   003D02  0E01               	movlw	high _motorL
  8135   003D04  6E15               	movwf	(timed_forward@mL+1)^0,c
  8136   003D06  0E58               	movlw	low _motorR
  8137   003D08  6E16               	movwf	timed_forward@mR^0,c
  8138   003D0A  0E01               	movlw	high _motorR
  8139   003D0C  6E17               	movwf	(timed_forward@mR+1)^0,c
  8140   003D0E  90D8               	bcf	status,0,c
  8141   003D10  342B               	rlcf	go_Home@i^0,w,c
  8142   003D12  6ED9               	movwf	fsr2l,c
  8143   003D14  342C               	rlcf	(go_Home@i+1)^0,w,c
  8144   003D16  6EDA               	movwf	fsr2h,c
  8145   003D18  5026               	movf	go_Home@Time_forward^0,w,c
  8146   003D1A  26D9               	addwf	fsr2l,f,c
  8147   003D1C  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8148   003D1E  22DA               	addwfc	fsr2h,f,c
  8149   003D20  CFDE F018          	movff	postinc2,timed_forward@time
  8150   003D24  CFDD F019          	movff	postdec2,timed_forward@time+1
  8151   003D28  EC15  F027         	call	_timed_forward	;wreg free
  8152   003D2C                     
  8153                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8154   003D2C  502B               	movf	go_Home@i^0,w,c
  8155   003D2E  2424               	addwf	go_Home@WayBack^0,w,c
  8156   003D30  6E28               	movwf	??_go_Home^0,c
  8157   003D32  502C               	movf	(go_Home@i+1)^0,w,c
  8158   003D34  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8159   003D36  6E29               	movwf	(??_go_Home+1)^0,c
  8160   003D38  0EFF               	movlw	255
  8161   003D3A  2428               	addwf	??_go_Home^0,w,c
  8162   003D3C  6ED9               	movwf	fsr2l,c
  8163   003D3E  0EFF               	movlw	255
  8164   003D40  2029               	addwfc	(??_go_Home+1)^0,w,c
  8165   003D42  6EDA               	movwf	fsr2h,c
  8166   003D44  04DE               	decf	postinc2,w,c
  8167   003D46  A4D8               	btfss	status,2,c
  8168   003D48  EFA8  F01E         	goto	u5011
  8169   003D4C  EFAA  F01E         	goto	u5010
  8170   003D50                     u5011:
  8171   003D50  EFB6  F01E         	goto	l5262
  8172   003D54                     u5010:
  8173   003D54                     
  8174                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8175   003D54  0E61               	movlw	low _motorL
  8176   003D56  6E20               	movwf	GreenMove@mL^0,c
  8177   003D58  0E01               	movlw	high _motorL
  8178   003D5A  6E21               	movwf	(GreenMove@mL+1)^0,c
  8179   003D5C  0E58               	movlw	low _motorR
  8180   003D5E  6E22               	movwf	GreenMove@mR^0,c
  8181   003D60  0E01               	movlw	high _motorR
  8182   003D62  6E23               	movwf	(GreenMove@mR+1)^0,c
  8183   003D64  ECA0  F02F         	call	_GreenMove	;wreg free
  8184                           
  8185                           ;Memory.c: 14:         }
  8186   003D68  EF7C  F01F         	goto	l601
  8187   003D6C                     l5262:
  8188   003D6C  502B               	movf	go_Home@i^0,w,c
  8189   003D6E  2424               	addwf	go_Home@WayBack^0,w,c
  8190   003D70  6E28               	movwf	??_go_Home^0,c
  8191   003D72  502C               	movf	(go_Home@i+1)^0,w,c
  8192   003D74  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8193   003D76  6E29               	movwf	(??_go_Home+1)^0,c
  8194   003D78  0EFF               	movlw	255
  8195   003D7A  2428               	addwf	??_go_Home^0,w,c
  8196   003D7C  6ED9               	movwf	fsr2l,c
  8197   003D7E  0EFF               	movlw	255
  8198   003D80  2029               	addwfc	(??_go_Home+1)^0,w,c
  8199   003D82  6EDA               	movwf	fsr2h,c
  8200   003D84  0E02               	movlw	2
  8201   003D86  18DE               	xorwf	postinc2,w,c
  8202   003D88  A4D8               	btfss	status,2,c
  8203   003D8A  EFC9  F01E         	goto	u5021
  8204   003D8E  EFCB  F01E         	goto	u5020
  8205   003D92                     u5021:
  8206   003D92  EFD7  F01E         	goto	l5266
  8207   003D96                     u5020:
  8208   003D96                     
  8209                           ;Memory.c: 17:             ReverseOrangeMove(&motorL, &motorR);
  8210   003D96  0E61               	movlw	low _motorL
  8211   003D98  6E20               	movwf	ReverseOrangeMove@mL^0,c
  8212   003D9A  0E01               	movlw	high _motorL
  8213   003D9C  6E21               	movwf	(ReverseOrangeMove@mL+1)^0,c
  8214   003D9E  0E58               	movlw	low _motorR
  8215   003DA0  6E22               	movwf	ReverseOrangeMove@mR^0,c
  8216   003DA2  0E01               	movlw	high _motorR
  8217   003DA4  6E23               	movwf	(ReverseOrangeMove@mR+1)^0,c
  8218   003DA6  ECF6  F02C         	call	_ReverseOrangeMove	;wreg free
  8219                           
  8220                           ;Memory.c: 18:         }
  8221   003DAA  EF7C  F01F         	goto	l601
  8222   003DAE                     l5266:
  8223   003DAE  502B               	movf	go_Home@i^0,w,c
  8224   003DB0  2424               	addwf	go_Home@WayBack^0,w,c
  8225   003DB2  6E28               	movwf	??_go_Home^0,c
  8226   003DB4  502C               	movf	(go_Home@i+1)^0,w,c
  8227   003DB6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8228   003DB8  6E29               	movwf	(??_go_Home+1)^0,c
  8229   003DBA  0EFF               	movlw	255
  8230   003DBC  2428               	addwf	??_go_Home^0,w,c
  8231   003DBE  6ED9               	movwf	fsr2l,c
  8232   003DC0  0EFF               	movlw	255
  8233   003DC2  2029               	addwfc	(??_go_Home+1)^0,w,c
  8234   003DC4  6EDA               	movwf	fsr2h,c
  8235   003DC6  0E03               	movlw	3
  8236   003DC8  18DE               	xorwf	postinc2,w,c
  8237   003DCA  A4D8               	btfss	status,2,c
  8238   003DCC  EFEA  F01E         	goto	u5031
  8239   003DD0  EFEC  F01E         	goto	u5030
  8240   003DD4                     u5031:
  8241   003DD4  EFF8  F01E         	goto	l5270
  8242   003DD8                     u5030:
  8243   003DD8                     
  8244                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  8245   003DD8  0E61               	movlw	low _motorL
  8246   003DDA  6E20               	movwf	ReverseYellow@mL^0,c
  8247   003DDC  0E01               	movlw	high _motorL
  8248   003DDE  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8249   003DE0  0E58               	movlw	low _motorR
  8250   003DE2  6E22               	movwf	ReverseYellow@mR^0,c
  8251   003DE4  0E01               	movlw	high _motorR
  8252   003DE6  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8253   003DE8  EC5F  F026         	call	_ReverseYellow	;wreg free
  8254                           
  8255                           ;Memory.c: 22:         }
  8256   003DEC  EF7C  F01F         	goto	l601
  8257   003DF0                     l5270:
  8258   003DF0  502B               	movf	go_Home@i^0,w,c
  8259   003DF2  2424               	addwf	go_Home@WayBack^0,w,c
  8260   003DF4  6E28               	movwf	??_go_Home^0,c
  8261   003DF6  502C               	movf	(go_Home@i+1)^0,w,c
  8262   003DF8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8263   003DFA  6E29               	movwf	(??_go_Home+1)^0,c
  8264   003DFC  0EFF               	movlw	255
  8265   003DFE  2428               	addwf	??_go_Home^0,w,c
  8266   003E00  6ED9               	movwf	fsr2l,c
  8267   003E02  0EFF               	movlw	255
  8268   003E04  2029               	addwfc	(??_go_Home+1)^0,w,c
  8269   003E06  6EDA               	movwf	fsr2h,c
  8270   003E08  0E04               	movlw	4
  8271   003E0A  18DE               	xorwf	postinc2,w,c
  8272   003E0C  A4D8               	btfss	status,2,c
  8273   003E0E  EF0B  F01F         	goto	u5041
  8274   003E12  EF0D  F01F         	goto	u5040
  8275   003E16                     u5041:
  8276   003E16  EF19  F01F         	goto	l5274
  8277   003E1A                     u5040:
  8278   003E1A                     
  8279                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  8280   003E1A  0E61               	movlw	low _motorL
  8281   003E1C  6E20               	movwf	BlueMove@mL^0,c
  8282   003E1E  0E01               	movlw	high _motorL
  8283   003E20  6E21               	movwf	(BlueMove@mL+1)^0,c
  8284   003E22  0E58               	movlw	low _motorR
  8285   003E24  6E22               	movwf	BlueMove@mR^0,c
  8286   003E26  0E01               	movlw	high _motorR
  8287   003E28  6E23               	movwf	(BlueMove@mR+1)^0,c
  8288   003E2A  ECBB  F029         	call	_BlueMove	;wreg free
  8289                           
  8290                           ;Memory.c: 26:         }
  8291   003E2E  EF7C  F01F         	goto	l601
  8292   003E32                     l5274:
  8293   003E32  502B               	movf	go_Home@i^0,w,c
  8294   003E34  2424               	addwf	go_Home@WayBack^0,w,c
  8295   003E36  6E28               	movwf	??_go_Home^0,c
  8296   003E38  502C               	movf	(go_Home@i+1)^0,w,c
  8297   003E3A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8298   003E3C  6E29               	movwf	(??_go_Home+1)^0,c
  8299   003E3E  0EFF               	movlw	255
  8300   003E40  2428               	addwf	??_go_Home^0,w,c
  8301   003E42  6ED9               	movwf	fsr2l,c
  8302   003E44  0EFF               	movlw	255
  8303   003E46  2029               	addwfc	(??_go_Home+1)^0,w,c
  8304   003E48  6EDA               	movwf	fsr2h,c
  8305   003E4A  0E05               	movlw	5
  8306   003E4C  18DE               	xorwf	postinc2,w,c
  8307   003E4E  A4D8               	btfss	status,2,c
  8308   003E50  EF2C  F01F         	goto	u5051
  8309   003E54  EF2E  F01F         	goto	u5050
  8310   003E58                     u5051:
  8311   003E58  EF3A  F01F         	goto	l5278
  8312   003E5C                     u5050:
  8313   003E5C                     
  8314                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8315   003E5C  0E61               	movlw	low _motorL
  8316   003E5E  6E20               	movwf	RedMove@mL^0,c
  8317   003E60  0E01               	movlw	high _motorL
  8318   003E62  6E21               	movwf	(RedMove@mL+1)^0,c
  8319   003E64  0E58               	movlw	low _motorR
  8320   003E66  6E22               	movwf	RedMove@mR^0,c
  8321   003E68  0E01               	movlw	high _motorR
  8322   003E6A  6E23               	movwf	(RedMove@mR+1)^0,c
  8323   003E6C  EC81  F02F         	call	_RedMove	;wreg free
  8324                           
  8325                           ;Memory.c: 30:         }
  8326   003E70  EF7C  F01F         	goto	l601
  8327   003E74                     l5278:
  8328   003E74  502B               	movf	go_Home@i^0,w,c
  8329   003E76  2424               	addwf	go_Home@WayBack^0,w,c
  8330   003E78  6E28               	movwf	??_go_Home^0,c
  8331   003E7A  502C               	movf	(go_Home@i+1)^0,w,c
  8332   003E7C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8333   003E7E  6E29               	movwf	(??_go_Home+1)^0,c
  8334   003E80  0EFF               	movlw	255
  8335   003E82  2428               	addwf	??_go_Home^0,w,c
  8336   003E84  6ED9               	movwf	fsr2l,c
  8337   003E86  0EFF               	movlw	255
  8338   003E88  2029               	addwfc	(??_go_Home+1)^0,w,c
  8339   003E8A  6EDA               	movwf	fsr2h,c
  8340   003E8C  0E06               	movlw	6
  8341   003E8E  18DE               	xorwf	postinc2,w,c
  8342   003E90  A4D8               	btfss	status,2,c
  8343   003E92  EF4D  F01F         	goto	u5061
  8344   003E96  EF4F  F01F         	goto	u5060
  8345   003E9A                     u5061:
  8346   003E9A  EF5B  F01F         	goto	l5282
  8347   003E9E                     u5060:
  8348   003E9E                     
  8349                           ;Memory.c: 33:             ReverseLightBlueMove(&motorL, &motorR);
  8350   003E9E  0E61               	movlw	low _motorL
  8351   003EA0  6E20               	movwf	ReverseLightBlueMove@mL^0,c
  8352   003EA2  0E01               	movlw	high _motorL
  8353   003EA4  6E21               	movwf	(ReverseLightBlueMove@mL+1)^0,c
  8354   003EA6  0E58               	movlw	low _motorR
  8355   003EA8  6E22               	movwf	ReverseLightBlueMove@mR^0,c
  8356   003EAA  0E01               	movlw	high _motorR
  8357   003EAC  6E23               	movwf	(ReverseLightBlueMove@mR+1)^0,c
  8358   003EAE  EC1F  F02D         	call	_ReverseLightBlueMove	;wreg free
  8359                           
  8360                           ;Memory.c: 34:         }
  8361   003EB2  EF7C  F01F         	goto	l601
  8362   003EB6                     l5282:
  8363   003EB6  502B               	movf	go_Home@i^0,w,c
  8364   003EB8  2424               	addwf	go_Home@WayBack^0,w,c
  8365   003EBA  6E28               	movwf	??_go_Home^0,c
  8366   003EBC  502C               	movf	(go_Home@i+1)^0,w,c
  8367   003EBE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8368   003EC0  6E29               	movwf	(??_go_Home+1)^0,c
  8369   003EC2  0EFF               	movlw	255
  8370   003EC4  2428               	addwf	??_go_Home^0,w,c
  8371   003EC6  6ED9               	movwf	fsr2l,c
  8372   003EC8  0EFF               	movlw	255
  8373   003ECA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8374   003ECC  6EDA               	movwf	fsr2h,c
  8375   003ECE  0E07               	movlw	7
  8376   003ED0  18DE               	xorwf	postinc2,w,c
  8377   003ED2  A4D8               	btfss	status,2,c
  8378   003ED4  EF6E  F01F         	goto	u5071
  8379   003ED8  EF70  F01F         	goto	u5070
  8380   003EDC                     u5071:
  8381   003EDC  EF7C  F01F         	goto	l607
  8382   003EE0                     u5070:
  8383   003EE0                     
  8384                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8385   003EE0  0E61               	movlw	low _motorL
  8386   003EE2  6E20               	movwf	ReversePink@mL^0,c
  8387   003EE4  0E01               	movlw	high _motorL
  8388   003EE6  6E21               	movwf	(ReversePink@mL+1)^0,c
  8389   003EE8  0E58               	movlw	low _motorR
  8390   003EEA  6E22               	movwf	ReversePink@mR^0,c
  8391   003EEC  0E01               	movlw	high _motorR
  8392   003EEE  6E23               	movwf	(ReversePink@mR+1)^0,c
  8393   003EF0  ECBA  F026         	call	_ReversePink	;wreg free
  8394   003EF4  EF7C  F01F         	goto	l601
  8395   003EF8                     l607:
  8396   003EF8                     l601:
  8397                           
  8398                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8399   003EF8  0E61               	movlw	low _motorL
  8400   003EFA  6E14               	movwf	stop@mL^0,c
  8401   003EFC  0E01               	movlw	high _motorL
  8402   003EFE  6E15               	movwf	(stop@mL+1)^0,c
  8403   003F00  0E58               	movlw	low _motorR
  8404   003F02  6E16               	movwf	stop@mR^0,c
  8405   003F04  0E01               	movlw	high _motorR
  8406   003F06  6E17               	movwf	(stop@mR+1)^0,c
  8407   003F08  EC3F  F029         	call	_stop	;wreg free
  8408   003F0C                     
  8409                           ;Memory.c: 40:         run_flag=0;
  8410   003F0C  0E00               	movlw	0
  8411   003F0E  0101               	movlb	1	; () banked
  8412   003F10  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8413   003F12  0E00               	movlw	0
  8414   003F14  6FD8               	movwf	_run_flag& (0+255),b
  8415   003F16                     
  8416                           ; BSR set to: 1
  8417                           ;Memory.c: 43:   }
  8418   003F16  062B               	decf	go_Home@i^0,f,c
  8419   003F18  A0D8               	btfss	status,0,c
  8420   003F1A  062C               	decf	(go_Home@i+1)^0,f,c
  8421   003F1C  EF76  F01E         	goto	l5252
  8422   003F20                     l613:
  8423   003F20  0012               	return		;funcret
  8424   003F22                     __end_of_go_Home:
  8425                           	callstack 0
  8426                           
  8427 ;; *************** function _timed_forward *****************
  8428 ;; Defined at:
  8429 ;;		line 166 in file "dc_motor.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8432 ;;		 -> motorL(9), 
  8433 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8434 ;;		 -> motorR(9), 
  8435 ;;  time            2   23[COMRAM] int 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;		None
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  1    wreg      void 
  8440 ;; Registers used:
  8441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8447 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;Total ram usage:        8 bytes
  8452 ;; Hardware stack levels used: 1
  8453 ;; Hardware stack levels required when called: 3
  8454 ;; This function calls:
  8455 ;;		_delayed_ms
  8456 ;;		_setMotorPWM
  8457 ;; This function is called by:
  8458 ;;		_go_Home
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text36
  8463   004E2A                     __ptext36:
  8464                           	callstack 0
  8465   004E2A                     _timed_forward:
  8466                           	callstack 26
  8467   004E2A                     
  8468                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8469   004E2A  EE20 F001          	lfsr	2,1
  8470   004E2E  5014               	movf	timed_forward@mL^0,w,c
  8471   004E30  26D9               	addwf	fsr2l,f,c
  8472   004E32  5015               	movf	(timed_forward@mL+1)^0,w,c
  8473   004E34  22DA               	addwfc	fsr2h,f,c
  8474   004E36  0E01               	movlw	1
  8475   004E38  6EDF               	movwf	indf2,c
  8476                           
  8477                           ;dc_motor.c: 170:     mR->direction =1;
  8478   004E3A  EE20 F001          	lfsr	2,1
  8479   004E3E  5016               	movf	timed_forward@mR^0,w,c
  8480   004E40  26D9               	addwf	fsr2l,f,c
  8481   004E42  5017               	movf	(timed_forward@mR+1)^0,w,c
  8482   004E44  22DA               	addwfc	fsr2h,f,c
  8483   004E46  0E01               	movlw	1
  8484   004E48  6EDF               	movwf	indf2,c
  8485                           
  8486                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8487   004E4A  EF4B  F027         	goto	l5090
  8488   004E4E                     l5082:
  8489                           
  8490                           ;dc_motor.c: 173:         mL->power+=10;
  8491   004E4E  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8492   004E52  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8493   004E56  0E0A               	movlw	10
  8494   004E58  26DF               	addwf	indf2,f,c
  8495                           
  8496                           ;dc_motor.c: 174:         mR->power+=10;
  8497   004E5A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8498   004E5E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8499   004E62  0E0A               	movlw	10
  8500   004E64  26DF               	addwf	indf2,f,c
  8501   004E66                     
  8502                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8503   004E66  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8504   004E6A  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8505   004E6E  EC0E  F023         	call	_setMotorPWM	;wreg free
  8506   004E72                     
  8507                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8508   004E72  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8509   004E76  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8510   004E7A  EC0E  F023         	call	_setMotorPWM	;wreg free
  8511   004E7E                     
  8512                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8513   004E7E  0E02               	movlw	2
  8514   004E80  6E1B               	movwf	(??_timed_forward+1)^0,c
  8515   004E82  0EA0               	movlw	160
  8516   004E84  6E1A               	movwf	??_timed_forward^0,c
  8517   004E86  0E92               	movlw	146
  8518   004E88                     u5927:
  8519   004E88  2EE8               	decfsz	wreg,f,c
  8520   004E8A  D7FE               	bra	u5927
  8521   004E8C  2E1A               	decfsz	??_timed_forward^0,f,c
  8522   004E8E  D7FC               	bra	u5927
  8523   004E90  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8524   004E92  D7FA               	bra	u5927
  8525   004E94  D000               	nop2	
  8526   004E96                     l5090:
  8527   004E96  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8528   004E9A  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8529   004E9E  0E32               	movlw	50
  8530   004EA0  60DF               	cpfslt	indf2,c
  8531   004EA2  EF55  F027         	goto	u4931
  8532   004EA6  EF57  F027         	goto	u4930
  8533   004EAA                     u4931:
  8534   004EAA  EF63  F027         	goto	l5094
  8535   004EAE                     u4930:
  8536   004EAE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8537   004EB2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8538   004EB6  0E31               	movlw	49
  8539   004EB8  64DF               	cpfsgt	indf2,c
  8540   004EBA  EF61  F027         	goto	u4941
  8541   004EBE  EF63  F027         	goto	u4940
  8542   004EC2                     u4941:
  8543   004EC2  EF27  F027         	goto	l5082
  8544   004EC6                     u4940:
  8545   004EC6                     l5094:
  8546                           
  8547                           ;dc_motor.c: 182:     delayed_ms(time);
  8548   004EC6  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8549   004ECA  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8550   004ECE  ECDB  F02F         	call	_delayed_ms	;wreg free
  8551   004ED2  0012               	return		;funcret
  8552   004ED4                     __end_of_timed_forward:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function _delayed_ms *****************
  8556 ;; Defined at:
  8557 ;;		line 43 in file "timers.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  time            2    0[COMRAM] int 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  i               2    3[COMRAM] unsigned int 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;Total ram usage:        5 bytes
  8576 ;; Hardware stack levels used: 1
  8577 ;; Hardware stack levels required when called: 1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_timed_forward
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text37
  8586   005FB6                     __ptext37:
  8587                           	callstack 0
  8588   005FB6                     _delayed_ms:
  8589                           	callstack 27
  8590   005FB6                     
  8591                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8592   005FB6  0E00               	movlw	0
  8593   005FB8  6E05               	movwf	(delayed_ms@i+1)^0,c
  8594   005FBA  0E00               	movlw	0
  8595   005FBC  6E04               	movwf	delayed_ms@i^0,c
  8596   005FBE  EFEB  F02F         	goto	l643
  8597   005FC2                     l4738:
  8598                           
  8599                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8600   005FC2  0E0B               	movlw	11
  8601   005FC4  6E03               	movwf	??_delayed_ms^0,c
  8602   005FC6  0E62               	movlw	98
  8603   005FC8                     u5937:
  8604   005FC8  2EE8               	decfsz	wreg,f,c
  8605   005FCA  D7FE               	bra	u5937
  8606   005FCC  2E03               	decfsz	??_delayed_ms^0,f,c
  8607   005FCE  D7FC               	bra	u5937
  8608   005FD0  D000               	nop2	
  8609   005FD2                     
  8610                           ;timers.c: 46:     }
  8611   005FD2  4A04               	infsnz	delayed_ms@i^0,f,c
  8612   005FD4  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8613   005FD6                     l643:
  8614   005FD6  5001               	movf	delayed_ms@time^0,w,c
  8615   005FD8  5C04               	subwf	delayed_ms@i^0,w,c
  8616   005FDA  5002               	movf	(delayed_ms@time+1)^0,w,c
  8617   005FDC  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8618   005FDE  A0D8               	btfss	status,0,c
  8619   005FE0  EFF4  F02F         	goto	u4481
  8620   005FE4  EFF6  F02F         	goto	u4480
  8621   005FE8                     u4481:
  8622   005FE8  EFE1  F02F         	goto	l4738
  8623   005FEC                     u4480:
  8624   005FEC  0012               	return		;funcret
  8625   005FEE                     __end_of_delayed_ms:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _ReverseYellow *****************
  8629 ;; Defined at:
  8630 ;;		line 352 in file "dc_motor.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8633 ;;		 -> motorL(9), 
  8634 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8635 ;;		 -> motorR(9), 
  8636 ;; Auto vars:     Size  Location     Type
  8637 ;;		None
  8638 ;; Return value:  Size  Location     Type
  8639 ;;                  1    wreg      void 
  8640 ;; Registers used:
  8641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8642 ;; Tracked objects:
  8643 ;;		On entry : 0/0
  8644 ;;		On exit  : 0/0
  8645 ;;		Unchanged: 0/0
  8646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;Total ram usage:        4 bytes
  8652 ;; Hardware stack levels used: 1
  8653 ;; Hardware stack levels required when called: 5
  8654 ;; This function calls:
  8655 ;;		_ForwardOneBlock
  8656 ;;		_reverseDetect
  8657 ;;		_turnRight45
  8658 ;; This function is called by:
  8659 ;;		_go_Home
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           	psect	text38
  8664   004CBE                     __ptext38:
  8665                           	callstack 0
  8666   004CBE                     _ReverseYellow:
  8667                           	callstack 24
  8668   004CBE                     
  8669                           ;dc_motor.c: 353:     reverseDetect(&motorL, &motorR);
  8670   004CBE  0E61               	movlw	low _motorL
  8671   004CC0  6E1A               	movwf	reverseDetect@mL^0,c
  8672   004CC2  0E01               	movlw	high _motorL
  8673   004CC4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8674   004CC6  0E58               	movlw	low _motorR
  8675   004CC8  6E1C               	movwf	reverseDetect@mR^0,c
  8676   004CCA  0E01               	movlw	high _motorR
  8677   004CCC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8678   004CCE  ECC4  F02B         	call	_reverseDetect	;wreg free
  8679                           
  8680                           ;dc_motor.c: 354:     turnRight45(&motorL, &motorR);
  8681   004CD2  0E61               	movlw	low _motorL
  8682   004CD4  6E1A               	movwf	turnRight45@mL^0,c
  8683   004CD6  0E01               	movlw	high _motorL
  8684   004CD8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8685   004CDA  0E58               	movlw	low _motorR
  8686   004CDC  6E1C               	movwf	turnRight45@mR^0,c
  8687   004CDE  0E01               	movlw	high _motorR
  8688   004CE0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8689   004CE2  EC8B  F02E         	call	_turnRight45	;wreg free
  8690                           
  8691                           ;dc_motor.c: 355:     turnRight45(&motorL, &motorR);
  8692   004CE6  0E61               	movlw	low _motorL
  8693   004CE8  6E1A               	movwf	turnRight45@mL^0,c
  8694   004CEA  0E01               	movlw	high _motorL
  8695   004CEC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8696   004CEE  0E58               	movlw	low _motorR
  8697   004CF0  6E1C               	movwf	turnRight45@mR^0,c
  8698   004CF2  0E01               	movlw	high _motorR
  8699   004CF4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8700   004CF6  EC8B  F02E         	call	_turnRight45	;wreg free
  8701                           
  8702                           ;dc_motor.c: 356:     ForwardOneBlock(&motorL, &motorR);
  8703   004CFA  0E61               	movlw	low _motorL
  8704   004CFC  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8705   004CFE  0E01               	movlw	high _motorL
  8706   004D00  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8707   004D02  0E58               	movlw	low _motorR
  8708   004D04  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8709   004D06  0E01               	movlw	high _motorR
  8710   004D08  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8711   004D0A  EC1E  F02C         	call	_ForwardOneBlock	;wreg free
  8712                           
  8713                           ;dc_motor.c: 357:     reverseDetect(&motorL, &motorR);
  8714   004D0E  0E61               	movlw	low _motorL
  8715   004D10  6E1A               	movwf	reverseDetect@mL^0,c
  8716   004D12  0E01               	movlw	high _motorL
  8717   004D14  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8718   004D16  0E58               	movlw	low _motorR
  8719   004D18  6E1C               	movwf	reverseDetect@mR^0,c
  8720   004D1A  0E01               	movlw	high _motorR
  8721   004D1C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8722   004D1E  ECC4  F02B         	call	_reverseDetect	;wreg free
  8723                           
  8724                           ;dc_motor.c: 358:     turnRight45(&motorL, &motorR);
  8725   004D22  0E61               	movlw	low _motorL
  8726   004D24  6E1A               	movwf	turnRight45@mL^0,c
  8727   004D26  0E01               	movlw	high _motorL
  8728   004D28  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8729   004D2A  0E58               	movlw	low _motorR
  8730   004D2C  6E1C               	movwf	turnRight45@mR^0,c
  8731   004D2E  0E01               	movlw	high _motorR
  8732   004D30  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8733   004D32  EC8B  F02E         	call	_turnRight45	;wreg free
  8734                           
  8735                           ;dc_motor.c: 359:     turnRight45(&motorL, &motorR);
  8736   004D36  0E61               	movlw	low _motorL
  8737   004D38  6E1A               	movwf	turnRight45@mL^0,c
  8738   004D3A  0E01               	movlw	high _motorL
  8739   004D3C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8740   004D3E  0E58               	movlw	low _motorR
  8741   004D40  6E1C               	movwf	turnRight45@mR^0,c
  8742   004D42  0E01               	movlw	high _motorR
  8743   004D44  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8744   004D46  EC8B  F02E         	call	_turnRight45	;wreg free
  8745                           
  8746                           ;dc_motor.c: 360:     turnRight45(&motorL, &motorR);
  8747   004D4A  0E61               	movlw	low _motorL
  8748   004D4C  6E1A               	movwf	turnRight45@mL^0,c
  8749   004D4E  0E01               	movlw	high _motorL
  8750   004D50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8751   004D52  0E58               	movlw	low _motorR
  8752   004D54  6E1C               	movwf	turnRight45@mR^0,c
  8753   004D56  0E01               	movlw	high _motorR
  8754   004D58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8755   004D5A  EC8B  F02E         	call	_turnRight45	;wreg free
  8756                           
  8757                           ;dc_motor.c: 361:     turnRight45(&motorL, &motorR);
  8758   004D5E  0E61               	movlw	low _motorL
  8759   004D60  6E1A               	movwf	turnRight45@mL^0,c
  8760   004D62  0E01               	movlw	high _motorL
  8761   004D64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8762   004D66  0E58               	movlw	low _motorR
  8763   004D68  6E1C               	movwf	turnRight45@mR^0,c
  8764   004D6A  0E01               	movlw	high _motorR
  8765   004D6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8766   004D6E  EC8B  F02E         	call	_turnRight45	;wreg free
  8767   004D72  0012               	return		;funcret
  8768   004D74                     __end_of_ReverseYellow:
  8769                           	callstack 0
  8770                           
  8771 ;; *************** function _ReversePink *****************
  8772 ;; Defined at:
  8773 ;;		line 363 in file "dc_motor.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8776 ;;		 -> motorL(9), 
  8777 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8778 ;;		 -> motorR(9), 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;		None
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;Total ram usage:        4 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; Hardware stack levels required when called: 5
  8797 ;; This function calls:
  8798 ;;		_ForwardOneBlock
  8799 ;;		_reverseDetect
  8800 ;;		_turnLeft45
  8801 ;; This function is called by:
  8802 ;;		_go_Home
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text39
  8807   004D74                     __ptext39:
  8808                           	callstack 0
  8809   004D74                     _ReversePink:
  8810                           	callstack 24
  8811   004D74                     
  8812                           ;dc_motor.c: 364:     reverseDetect(&motorL, &motorR);
  8813   004D74  0E61               	movlw	low _motorL
  8814   004D76  6E1A               	movwf	reverseDetect@mL^0,c
  8815   004D78  0E01               	movlw	high _motorL
  8816   004D7A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8817   004D7C  0E58               	movlw	low _motorR
  8818   004D7E  6E1C               	movwf	reverseDetect@mR^0,c
  8819   004D80  0E01               	movlw	high _motorR
  8820   004D82  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8821   004D84  ECC4  F02B         	call	_reverseDetect	;wreg free
  8822                           
  8823                           ;dc_motor.c: 365:     turnLeft45(&motorL, &motorR);
  8824   004D88  0E61               	movlw	low _motorL
  8825   004D8A  6E1A               	movwf	turnLeft45@mL^0,c
  8826   004D8C  0E01               	movlw	high _motorL
  8827   004D8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8828   004D90  0E58               	movlw	low _motorR
  8829   004D92  6E1C               	movwf	turnLeft45@mR^0,c
  8830   004D94  0E01               	movlw	high _motorR
  8831   004D96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8832   004D98  ECB2  F02E         	call	_turnLeft45	;wreg free
  8833                           
  8834                           ;dc_motor.c: 366:     turnLeft45(&motorL, &motorR);
  8835   004D9C  0E61               	movlw	low _motorL
  8836   004D9E  6E1A               	movwf	turnLeft45@mL^0,c
  8837   004DA0  0E01               	movlw	high _motorL
  8838   004DA2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8839   004DA4  0E58               	movlw	low _motorR
  8840   004DA6  6E1C               	movwf	turnLeft45@mR^0,c
  8841   004DA8  0E01               	movlw	high _motorR
  8842   004DAA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8843   004DAC  ECB2  F02E         	call	_turnLeft45	;wreg free
  8844                           
  8845                           ;dc_motor.c: 367:     ForwardOneBlock(&motorL, &motorR);
  8846   004DB0  0E61               	movlw	low _motorL
  8847   004DB2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8848   004DB4  0E01               	movlw	high _motorL
  8849   004DB6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8850   004DB8  0E58               	movlw	low _motorR
  8851   004DBA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8852   004DBC  0E01               	movlw	high _motorR
  8853   004DBE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8854   004DC0  EC1E  F02C         	call	_ForwardOneBlock	;wreg free
  8855                           
  8856                           ;dc_motor.c: 368:     reverseDetect(&motorL, &motorR);
  8857   004DC4  0E61               	movlw	low _motorL
  8858   004DC6  6E1A               	movwf	reverseDetect@mL^0,c
  8859   004DC8  0E01               	movlw	high _motorL
  8860   004DCA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8861   004DCC  0E58               	movlw	low _motorR
  8862   004DCE  6E1C               	movwf	reverseDetect@mR^0,c
  8863   004DD0  0E01               	movlw	high _motorR
  8864   004DD2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8865   004DD4  ECC4  F02B         	call	_reverseDetect	;wreg free
  8866                           
  8867                           ;dc_motor.c: 369:     turnLeft45(&motorL, &motorR);
  8868   004DD8  0E61               	movlw	low _motorL
  8869   004DDA  6E1A               	movwf	turnLeft45@mL^0,c
  8870   004DDC  0E01               	movlw	high _motorL
  8871   004DDE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8872   004DE0  0E58               	movlw	low _motorR
  8873   004DE2  6E1C               	movwf	turnLeft45@mR^0,c
  8874   004DE4  0E01               	movlw	high _motorR
  8875   004DE6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8876   004DE8  ECB2  F02E         	call	_turnLeft45	;wreg free
  8877                           
  8878                           ;dc_motor.c: 370:     turnLeft45(&motorL, &motorR);
  8879   004DEC  0E61               	movlw	low _motorL
  8880   004DEE  6E1A               	movwf	turnLeft45@mL^0,c
  8881   004DF0  0E01               	movlw	high _motorL
  8882   004DF2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8883   004DF4  0E58               	movlw	low _motorR
  8884   004DF6  6E1C               	movwf	turnLeft45@mR^0,c
  8885   004DF8  0E01               	movlw	high _motorR
  8886   004DFA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8887   004DFC  ECB2  F02E         	call	_turnLeft45	;wreg free
  8888                           
  8889                           ;dc_motor.c: 371:     turnLeft45(&motorL, &motorR);
  8890   004E00  0E61               	movlw	low _motorL
  8891   004E02  6E1A               	movwf	turnLeft45@mL^0,c
  8892   004E04  0E01               	movlw	high _motorL
  8893   004E06  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8894   004E08  0E58               	movlw	low _motorR
  8895   004E0A  6E1C               	movwf	turnLeft45@mR^0,c
  8896   004E0C  0E01               	movlw	high _motorR
  8897   004E0E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8898   004E10  ECB2  F02E         	call	_turnLeft45	;wreg free
  8899                           
  8900                           ;dc_motor.c: 372:     turnLeft45(&motorL, &motorR);
  8901   004E14  0E61               	movlw	low _motorL
  8902   004E16  6E1A               	movwf	turnLeft45@mL^0,c
  8903   004E18  0E01               	movlw	high _motorL
  8904   004E1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8905   004E1C  0E58               	movlw	low _motorR
  8906   004E1E  6E1C               	movwf	turnLeft45@mR^0,c
  8907   004E20  0E01               	movlw	high _motorR
  8908   004E22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8909   004E24  ECB2  F02E         	call	_turnLeft45	;wreg free
  8910   004E28  0012               	return		;funcret
  8911   004E2A                     __end_of_ReversePink:
  8912                           	callstack 0
  8913                           
  8914 ;; *************** function _ForwardOneBlock *****************
  8915 ;; Defined at:
  8916 ;;		line 246 in file "dc_motor.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8919 ;;		 -> motorL(9), 
  8920 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8921 ;;		 -> motorR(9), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;Total ram usage:        6 bytes
  8938 ;; Hardware stack levels used: 1
  8939 ;; Hardware stack levels required when called: 4
  8940 ;; This function calls:
  8941 ;;		_fullSpeedAhead
  8942 ;;		_stop
  8943 ;; This function is called by:
  8944 ;;		_ReverseYellow
  8945 ;;		_ReversePink
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           	psect	text40
  8950   00583C                     __ptext40:
  8951                           	callstack 0
  8952   00583C                     _ForwardOneBlock:
  8953                           	callstack 24
  8954   00583C                     
  8955                           ;dc_motor.c: 247:     fullSpeedAhead(mL,mR);
  8956   00583C  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8957   005840  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8958   005844  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8959   005848  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8960   00584C  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  8961   005850                     
  8962                           ;dc_motor.c: 248:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8963   005850  0E56               	movlw	86
  8964   005852  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8965   005854  0E3A               	movlw	58
  8966   005856  6E1E               	movwf	??_ForwardOneBlock^0,c
  8967   005858  0EF4               	movlw	244
  8968   00585A                     u5947:
  8969   00585A  2EE8               	decfsz	wreg,f,c
  8970   00585C  D7FE               	bra	u5947
  8971   00585E  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8972   005860  D7FC               	bra	u5947
  8973   005862  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8974   005864  D7FA               	bra	u5947
  8975   005866                     
  8976                           ;dc_motor.c: 249:     stop(&motorL, &motorR);
  8977   005866  0E61               	movlw	low _motorL
  8978   005868  6E14               	movwf	stop@mL^0,c
  8979   00586A  0E01               	movlw	high _motorL
  8980   00586C  6E15               	movwf	(stop@mL+1)^0,c
  8981   00586E  0E58               	movlw	low _motorR
  8982   005870  6E16               	movwf	stop@mR^0,c
  8983   005872  0E01               	movlw	high _motorR
  8984   005874  6E17               	movwf	(stop@mR+1)^0,c
  8985   005876  EC3F  F029         	call	_stop	;wreg free
  8986                           
  8987                           ;dc_motor.c: 250:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8988   00587A  0E05               	movlw	5
  8989   00587C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8990   00587E  0E0F               	movlw	15
  8991   005880  6E1E               	movwf	??_ForwardOneBlock^0,c
  8992   005882  0EF1               	movlw	241
  8993   005884                     u5957:
  8994   005884  2EE8               	decfsz	wreg,f,c
  8995   005886  D7FE               	bra	u5957
  8996   005888  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8997   00588A  D7FC               	bra	u5957
  8998   00588C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8999   00588E  D7FA               	bra	u5957
  9000   005890  F000               	nop	
  9001   005892  0012               	return		;funcret
  9002   005894                     __end_of_ForwardOneBlock:
  9003                           	callstack 0
  9004                           
  9005 ;; *************** function _ReverseOrangeMove *****************
  9006 ;; Defined at:
  9007 ;;		line 375 in file "dc_motor.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9010 ;;		 -> motorL(9), 
  9011 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9012 ;;		 -> motorR(9), 
  9013 ;; Auto vars:     Size  Location     Type
  9014 ;;		None
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;Total ram usage:        4 bytes
  9029 ;; Hardware stack levels used: 1
  9030 ;; Hardware stack levels required when called: 5
  9031 ;; This function calls:
  9032 ;;		_reverseDetect
  9033 ;;		_turnLeft45
  9034 ;; This function is called by:
  9035 ;;		_go_Home
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text41
  9040   0059EC                     __ptext41:
  9041                           	callstack 0
  9042   0059EC                     _ReverseOrangeMove:
  9043                           	callstack 24
  9044   0059EC                     
  9045                           ;dc_motor.c: 376:     reverseDetect(&motorL, &motorR);
  9046   0059EC  0E61               	movlw	low _motorL
  9047   0059EE  6E1A               	movwf	reverseDetect@mL^0,c
  9048   0059F0  0E01               	movlw	high _motorL
  9049   0059F2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9050   0059F4  0E58               	movlw	low _motorR
  9051   0059F6  6E1C               	movwf	reverseDetect@mR^0,c
  9052   0059F8  0E01               	movlw	high _motorR
  9053   0059FA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9054   0059FC  ECC4  F02B         	call	_reverseDetect	;wreg free
  9055                           
  9056                           ;dc_motor.c: 378:     turnLeft45(&motorL, &motorR);
  9057   005A00  0E61               	movlw	low _motorL
  9058   005A02  6E1A               	movwf	turnLeft45@mL^0,c
  9059   005A04  0E01               	movlw	high _motorL
  9060   005A06  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9061   005A08  0E58               	movlw	low _motorR
  9062   005A0A  6E1C               	movwf	turnLeft45@mR^0,c
  9063   005A0C  0E01               	movlw	high _motorR
  9064   005A0E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9065   005A10  ECB2  F02E         	call	_turnLeft45	;wreg free
  9066                           
  9067                           ;dc_motor.c: 379:     turnLeft45(&motorL, &motorR);
  9068   005A14  0E61               	movlw	low _motorL
  9069   005A16  6E1A               	movwf	turnLeft45@mL^0,c
  9070   005A18  0E01               	movlw	high _motorL
  9071   005A1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9072   005A1C  0E58               	movlw	low _motorR
  9073   005A1E  6E1C               	movwf	turnLeft45@mR^0,c
  9074   005A20  0E01               	movlw	high _motorR
  9075   005A22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9076   005A24  ECB2  F02E         	call	_turnLeft45	;wreg free
  9077                           
  9078                           ;dc_motor.c: 380:     turnLeft45(&motorL, &motorR);
  9079   005A28  0E61               	movlw	low _motorL
  9080   005A2A  6E1A               	movwf	turnLeft45@mL^0,c
  9081   005A2C  0E01               	movlw	high _motorL
  9082   005A2E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9083   005A30  0E58               	movlw	low _motorR
  9084   005A32  6E1C               	movwf	turnLeft45@mR^0,c
  9085   005A34  0E01               	movlw	high _motorR
  9086   005A36  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9087   005A38  ECB2  F02E         	call	_turnLeft45	;wreg free
  9088   005A3C  0012               	return		;funcret
  9089   005A3E                     __end_of_ReverseOrangeMove:
  9090                           	callstack 0
  9091                           
  9092 ;; *************** function _ReverseLightBlueMove *****************
  9093 ;; Defined at:
  9094 ;;		line 384 in file "dc_motor.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9097 ;;		 -> motorL(9), 
  9098 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9099 ;;		 -> motorR(9), 
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;Total ram usage:        4 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 5
  9118 ;; This function calls:
  9119 ;;		_reverseDetect
  9120 ;;		_turnRight45
  9121 ;; This function is called by:
  9122 ;;		_go_Home
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text42
  9127   005A3E                     __ptext42:
  9128                           	callstack 0
  9129   005A3E                     _ReverseLightBlueMove:
  9130                           	callstack 24
  9131   005A3E                     
  9132                           ;dc_motor.c: 385:     reverseDetect(&motorL, &motorR);
  9133   005A3E  0E61               	movlw	low _motorL
  9134   005A40  6E1A               	movwf	reverseDetect@mL^0,c
  9135   005A42  0E01               	movlw	high _motorL
  9136   005A44  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9137   005A46  0E58               	movlw	low _motorR
  9138   005A48  6E1C               	movwf	reverseDetect@mR^0,c
  9139   005A4A  0E01               	movlw	high _motorR
  9140   005A4C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9141   005A4E  ECC4  F02B         	call	_reverseDetect	;wreg free
  9142                           
  9143                           ;dc_motor.c: 387:     turnRight45(&motorL, &motorR);
  9144   005A52  0E61               	movlw	low _motorL
  9145   005A54  6E1A               	movwf	turnRight45@mL^0,c
  9146   005A56  0E01               	movlw	high _motorL
  9147   005A58  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9148   005A5A  0E58               	movlw	low _motorR
  9149   005A5C  6E1C               	movwf	turnRight45@mR^0,c
  9150   005A5E  0E01               	movlw	high _motorR
  9151   005A60  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9152   005A62  EC8B  F02E         	call	_turnRight45	;wreg free
  9153                           
  9154                           ;dc_motor.c: 388:     turnRight45(&motorL, &motorR);
  9155   005A66  0E61               	movlw	low _motorL
  9156   005A68  6E1A               	movwf	turnRight45@mL^0,c
  9157   005A6A  0E01               	movlw	high _motorL
  9158   005A6C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9159   005A6E  0E58               	movlw	low _motorR
  9160   005A70  6E1C               	movwf	turnRight45@mR^0,c
  9161   005A72  0E01               	movlw	high _motorR
  9162   005A74  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9163   005A76  EC8B  F02E         	call	_turnRight45	;wreg free
  9164                           
  9165                           ;dc_motor.c: 389:     turnRight45(&motorL, &motorR);
  9166   005A7A  0E61               	movlw	low _motorL
  9167   005A7C  6E1A               	movwf	turnRight45@mL^0,c
  9168   005A7E  0E01               	movlw	high _motorL
  9169   005A80  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9170   005A82  0E58               	movlw	low _motorR
  9171   005A84  6E1C               	movwf	turnRight45@mR^0,c
  9172   005A86  0E01               	movlw	high _motorR
  9173   005A88  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9174   005A8A  EC8B  F02E         	call	_turnRight45	;wreg free
  9175   005A8E  0012               	return		;funcret
  9176   005A90                     __end_of_ReverseLightBlueMove:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function _RedMove *****************
  9180 ;; Defined at:
  9181 ;;		line 276 in file "dc_motor.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9184 ;;		 -> motorL(9), 
  9185 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9186 ;;		 -> motorR(9), 
  9187 ;; Auto vars:     Size  Location     Type
  9188 ;;		None
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  1    wreg      void 
  9191 ;; Registers used:
  9192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;Total ram usage:        4 bytes
  9203 ;; Hardware stack levels used: 1
  9204 ;; Hardware stack levels required when called: 5
  9205 ;; This function calls:
  9206 ;;		_reverseDetect
  9207 ;;		_turnRight45
  9208 ;; This function is called by:
  9209 ;;		_go_Home
  9210 ;;		_colour_move
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text43
  9215   005F02                     __ptext43:
  9216                           	callstack 0
  9217   005F02                     _RedMove:
  9218                           	callstack 24
  9219   005F02                     
  9220                           ;dc_motor.c: 277:     reverseDetect(&motorL, &motorR);
  9221   005F02  0E61               	movlw	low _motorL
  9222   005F04  6E1A               	movwf	reverseDetect@mL^0,c
  9223   005F06  0E01               	movlw	high _motorL
  9224   005F08  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9225   005F0A  0E58               	movlw	low _motorR
  9226   005F0C  6E1C               	movwf	reverseDetect@mR^0,c
  9227   005F0E  0E01               	movlw	high _motorR
  9228   005F10  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9229   005F12  ECC4  F02B         	call	_reverseDetect	;wreg free
  9230                           
  9231                           ;dc_motor.c: 279:     turnRight45(&motorL, &motorR);
  9232   005F16  0E61               	movlw	low _motorL
  9233   005F18  6E1A               	movwf	turnRight45@mL^0,c
  9234   005F1A  0E01               	movlw	high _motorL
  9235   005F1C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9236   005F1E  0E58               	movlw	low _motorR
  9237   005F20  6E1C               	movwf	turnRight45@mR^0,c
  9238   005F22  0E01               	movlw	high _motorR
  9239   005F24  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9240   005F26  EC8B  F02E         	call	_turnRight45	;wreg free
  9241                           
  9242                           ;dc_motor.c: 280:     turnRight45(&motorL, &motorR);
  9243   005F2A  0E61               	movlw	low _motorL
  9244   005F2C  6E1A               	movwf	turnRight45@mL^0,c
  9245   005F2E  0E01               	movlw	high _motorL
  9246   005F30  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9247   005F32  0E58               	movlw	low _motorR
  9248   005F34  6E1C               	movwf	turnRight45@mR^0,c
  9249   005F36  0E01               	movlw	high _motorR
  9250   005F38  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9251   005F3A  EC8B  F02E         	call	_turnRight45	;wreg free
  9252   005F3E  0012               	return		;funcret
  9253   005F40                     __end_of_RedMove:
  9254                           	callstack 0
  9255                           
  9256 ;; *************** function _GreenMove *****************
  9257 ;; Defined at:
  9258 ;;		line 284 in file "dc_motor.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9261 ;;		 -> motorL(9), 
  9262 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9263 ;;		 -> motorR(9), 
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;Total ram usage:        4 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 5
  9282 ;; This function calls:
  9283 ;;		_reverseDetect
  9284 ;;		_turnLeft45
  9285 ;; This function is called by:
  9286 ;;		_go_Home
  9287 ;;		_colour_move
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text44
  9292   005F40                     __ptext44:
  9293                           	callstack 0
  9294   005F40                     _GreenMove:
  9295                           	callstack 24
  9296   005F40                     
  9297                           ;dc_motor.c: 285:     reverseDetect(&motorL, &motorR);
  9298   005F40  0E61               	movlw	low _motorL
  9299   005F42  6E1A               	movwf	reverseDetect@mL^0,c
  9300   005F44  0E01               	movlw	high _motorL
  9301   005F46  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9302   005F48  0E58               	movlw	low _motorR
  9303   005F4A  6E1C               	movwf	reverseDetect@mR^0,c
  9304   005F4C  0E01               	movlw	high _motorR
  9305   005F4E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9306   005F50  ECC4  F02B         	call	_reverseDetect	;wreg free
  9307                           
  9308                           ;dc_motor.c: 287:     turnLeft45(&motorL, &motorR);
  9309   005F54  0E61               	movlw	low _motorL
  9310   005F56  6E1A               	movwf	turnLeft45@mL^0,c
  9311   005F58  0E01               	movlw	high _motorL
  9312   005F5A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9313   005F5C  0E58               	movlw	low _motorR
  9314   005F5E  6E1C               	movwf	turnLeft45@mR^0,c
  9315   005F60  0E01               	movlw	high _motorR
  9316   005F62  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9317   005F64  ECB2  F02E         	call	_turnLeft45	;wreg free
  9318                           
  9319                           ;dc_motor.c: 288:     turnLeft45(&motorL, &motorR);
  9320   005F68  0E61               	movlw	low _motorL
  9321   005F6A  6E1A               	movwf	turnLeft45@mL^0,c
  9322   005F6C  0E01               	movlw	high _motorL
  9323   005F6E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9324   005F70  0E58               	movlw	low _motorR
  9325   005F72  6E1C               	movwf	turnLeft45@mR^0,c
  9326   005F74  0E01               	movlw	high _motorR
  9327   005F76  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9328   005F78  ECB2  F02E         	call	_turnLeft45	;wreg free
  9329   005F7C  0012               	return		;funcret
  9330   005F7E                     __end_of_GreenMove:
  9331                           	callstack 0
  9332                           
  9333 ;; *************** function _BlueMove *****************
  9334 ;; Defined at:
  9335 ;;		line 292 in file "dc_motor.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9338 ;;		 -> motorL(9), 
  9339 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9340 ;;		 -> motorR(9), 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;		None
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9356 ;;Total ram usage:        4 bytes
  9357 ;; Hardware stack levels used: 1
  9358 ;; Hardware stack levels required when called: 5
  9359 ;; This function calls:
  9360 ;;		_Backhalfblock
  9361 ;;		_reverseDetect
  9362 ;;		_turnRight45
  9363 ;; This function is called by:
  9364 ;;		_go_Home
  9365 ;;		_colour_move
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text45
  9370   005376                     __ptext45:
  9371                           	callstack 0
  9372   005376                     _BlueMove:
  9373                           	callstack 24
  9374   005376                     
  9375                           ;dc_motor.c: 293:     reverseDetect(&motorL, &motorR);
  9376   005376  0E61               	movlw	low _motorL
  9377   005378  6E1A               	movwf	reverseDetect@mL^0,c
  9378   00537A  0E01               	movlw	high _motorL
  9379   00537C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9380   00537E  0E58               	movlw	low _motorR
  9381   005380  6E1C               	movwf	reverseDetect@mR^0,c
  9382   005382  0E01               	movlw	high _motorR
  9383   005384  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9384   005386  ECC4  F02B         	call	_reverseDetect	;wreg free
  9385                           
  9386                           ;dc_motor.c: 295:     turnRight45(&motorL, &motorR);
  9387   00538A  0E61               	movlw	low _motorL
  9388   00538C  6E1A               	movwf	turnRight45@mL^0,c
  9389   00538E  0E01               	movlw	high _motorL
  9390   005390  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9391   005392  0E58               	movlw	low _motorR
  9392   005394  6E1C               	movwf	turnRight45@mR^0,c
  9393   005396  0E01               	movlw	high _motorR
  9394   005398  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9395   00539A  EC8B  F02E         	call	_turnRight45	;wreg free
  9396                           
  9397                           ;dc_motor.c: 296:     turnRight45(&motorL, &motorR);
  9398   00539E  0E61               	movlw	low _motorL
  9399   0053A0  6E1A               	movwf	turnRight45@mL^0,c
  9400   0053A2  0E01               	movlw	high _motorL
  9401   0053A4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9402   0053A6  0E58               	movlw	low _motorR
  9403   0053A8  6E1C               	movwf	turnRight45@mR^0,c
  9404   0053AA  0E01               	movlw	high _motorR
  9405   0053AC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9406   0053AE  EC8B  F02E         	call	_turnRight45	;wreg free
  9407                           
  9408                           ;dc_motor.c: 297:     turnRight45(&motorL, &motorR);
  9409   0053B2  0E61               	movlw	low _motorL
  9410   0053B4  6E1A               	movwf	turnRight45@mL^0,c
  9411   0053B6  0E01               	movlw	high _motorL
  9412   0053B8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9413   0053BA  0E58               	movlw	low _motorR
  9414   0053BC  6E1C               	movwf	turnRight45@mR^0,c
  9415   0053BE  0E01               	movlw	high _motorR
  9416   0053C0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9417   0053C2  EC8B  F02E         	call	_turnRight45	;wreg free
  9418                           
  9419                           ;dc_motor.c: 298:     turnRight45(&motorL, &motorR);
  9420   0053C6  0E61               	movlw	low _motorL
  9421   0053C8  6E1A               	movwf	turnRight45@mL^0,c
  9422   0053CA  0E01               	movlw	high _motorL
  9423   0053CC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9424   0053CE  0E58               	movlw	low _motorR
  9425   0053D0  6E1C               	movwf	turnRight45@mR^0,c
  9426   0053D2  0E01               	movlw	high _motorR
  9427   0053D4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9428   0053D6  EC8B  F02E         	call	_turnRight45	;wreg free
  9429                           
  9430                           ;dc_motor.c: 301:     Backhalfblock(&motorL, &motorR);
  9431   0053DA  0E61               	movlw	low _motorL
  9432   0053DC  6E1A               	movwf	Backhalfblock@mL^0,c
  9433   0053DE  0E01               	movlw	high _motorL
  9434   0053E0  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9435   0053E2  0E58               	movlw	low _motorR
  9436   0053E4  6E1C               	movwf	Backhalfblock@mR^0,c
  9437   0053E6  0E01               	movlw	high _motorR
  9438   0053E8  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9439   0053EA  EC97  F02B         	call	_Backhalfblock	;wreg free
  9440   0053EE  0012               	return		;funcret
  9441   0053F0                     __end_of_BlueMove:
  9442                           	callstack 0
  9443                           
  9444 ;; *************** function _Backhalfblock *****************
  9445 ;; Defined at:
  9446 ;;		line 265 in file "dc_motor.c"
  9447 ;; Parameters:    Size  Location     Type
  9448 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9449 ;;		 -> motorL(9), 
  9450 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9451 ;;		 -> motorR(9), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9467 ;;Total ram usage:        6 bytes
  9468 ;; Hardware stack levels used: 1
  9469 ;; Hardware stack levels required when called: 4
  9470 ;; This function calls:
  9471 ;;		_fullSpeedBack
  9472 ;;		_stop
  9473 ;; This function is called by:
  9474 ;;		_BlueMove
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text46
  9479   00572E                     __ptext46:
  9480                           	callstack 0
  9481   00572E                     _Backhalfblock:
  9482                           	callstack 24
  9483   00572E                     
  9484                           ;dc_motor.c: 266:     fullSpeedBack(mL,mR);
  9485   00572E  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  9486   005732  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  9487   005736  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  9488   00573A  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  9489   00573E  EC5D  F028         	call	_fullSpeedBack	;wreg free
  9490   005742                     
  9491                           ;dc_motor.c: 267:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  9492   005742  0E2B               	movlw	43
  9493   005744  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9494   005746  0E9D               	movlw	157
  9495   005748  6E1E               	movwf	??_Backhalfblock^0,c
  9496   00574A  0EF9               	movlw	249
  9497   00574C                     u5967:
  9498   00574C  2EE8               	decfsz	wreg,f,c
  9499   00574E  D7FE               	bra	u5967
  9500   005750  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9501   005752  D7FC               	bra	u5967
  9502   005754  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9503   005756  D7FA               	bra	u5967
  9504   005758  F000               	nop	
  9505   00575A                     
  9506                           ;dc_motor.c: 268:     stop(&motorL, &motorR);
  9507   00575A  0E61               	movlw	low _motorL
  9508   00575C  6E14               	movwf	stop@mL^0,c
  9509   00575E  0E01               	movlw	high _motorL
  9510   005760  6E15               	movwf	(stop@mL+1)^0,c
  9511   005762  0E58               	movlw	low _motorR
  9512   005764  6E16               	movwf	stop@mR^0,c
  9513   005766  0E01               	movlw	high _motorR
  9514   005768  6E17               	movwf	(stop@mR+1)^0,c
  9515   00576A  EC3F  F029         	call	_stop	;wreg free
  9516                           
  9517                           ;dc_motor.c: 269:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9518   00576E  0E05               	movlw	5
  9519   005770  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9520   005772  0E0F               	movlw	15
  9521   005774  6E1E               	movwf	??_Backhalfblock^0,c
  9522   005776  0EF1               	movlw	241
  9523   005778                     u5977:
  9524   005778  2EE8               	decfsz	wreg,f,c
  9525   00577A  D7FE               	bra	u5977
  9526   00577C  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9527   00577E  D7FC               	bra	u5977
  9528   005780  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9529   005782  D7FA               	bra	u5977
  9530   005784  F000               	nop	
  9531   005786  0012               	return		;funcret
  9532   005788                     __end_of_Backhalfblock:
  9533                           	callstack 0
  9534                           
  9535 ;; *************** function _YellowMove *****************
  9536 ;; Defined at:
  9537 ;;		line 305 in file "dc_motor.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9540 ;;		 -> motorL(9), 
  9541 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9542 ;;		 -> motorR(9), 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;		None
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      void 
  9547 ;; Registers used:
  9548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;Total ram usage:        4 bytes
  9559 ;; Hardware stack levels used: 1
  9560 ;; Hardware stack levels required when called: 5
  9561 ;; This function calls:
  9562 ;;		_reverseDetect
  9563 ;;		_reverseOneBlock
  9564 ;;		_turnRight45
  9565 ;; This function is called by:
  9566 ;;		_colour_move
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text47
  9571   005A90                     __ptext47:
  9572                           	callstack 0
  9573   005A90                     _YellowMove:
  9574                           	callstack 24
  9575   005A90                     
  9576                           ;dc_motor.c: 306:     reverseDetect(&motorL, &motorR);
  9577   005A90  0E61               	movlw	low _motorL
  9578   005A92  6E1A               	movwf	reverseDetect@mL^0,c
  9579   005A94  0E01               	movlw	high _motorL
  9580   005A96  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9581   005A98  0E58               	movlw	low _motorR
  9582   005A9A  6E1C               	movwf	reverseDetect@mR^0,c
  9583   005A9C  0E01               	movlw	high _motorR
  9584   005A9E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9585   005AA0  ECC4  F02B         	call	_reverseDetect	;wreg free
  9586                           
  9587                           ;dc_motor.c: 308:     reverseOneBlock(&motorL, &motorR);
  9588   005AA4  0E61               	movlw	low _motorL
  9589   005AA6  6E1A               	movwf	reverseOneBlock@mL^0,c
  9590   005AA8  0E01               	movlw	high _motorL
  9591   005AAA  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9592   005AAC  0E58               	movlw	low _motorR
  9593   005AAE  6E1C               	movwf	reverseOneBlock@mR^0,c
  9594   005AB0  0E01               	movlw	high _motorR
  9595   005AB2  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9596   005AB4  EC4A  F02C         	call	_reverseOneBlock	;wreg free
  9597                           
  9598                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  9599   005AB8  0E61               	movlw	low _motorL
  9600   005ABA  6E1A               	movwf	turnRight45@mL^0,c
  9601   005ABC  0E01               	movlw	high _motorL
  9602   005ABE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9603   005AC0  0E58               	movlw	low _motorR
  9604   005AC2  6E1C               	movwf	turnRight45@mR^0,c
  9605   005AC4  0E01               	movlw	high _motorR
  9606   005AC6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9607   005AC8  EC8B  F02E         	call	_turnRight45	;wreg free
  9608                           
  9609                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  9610   005ACC  0E61               	movlw	low _motorL
  9611   005ACE  6E1A               	movwf	turnRight45@mL^0,c
  9612   005AD0  0E01               	movlw	high _motorL
  9613   005AD2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9614   005AD4  0E58               	movlw	low _motorR
  9615   005AD6  6E1C               	movwf	turnRight45@mR^0,c
  9616   005AD8  0E01               	movlw	high _motorR
  9617   005ADA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9618   005ADC  EC8B  F02E         	call	_turnRight45	;wreg free
  9619   005AE0  0012               	return		;funcret
  9620   005AE2                     __end_of_YellowMove:
  9621                           	callstack 0
  9622                           
  9623 ;; *************** function _RetryMove *****************
  9624 ;; Defined at:
  9625 ;;		line 344 in file "dc_motor.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9628 ;;		 -> motorL(9), 
  9629 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9630 ;;		 -> motorR(9), 
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;Total ram usage:        6 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 5
  9649 ;; This function calls:
  9650 ;;		_fullSpeedAhead
  9651 ;;		_reverseDetect
  9652 ;;		_stop
  9653 ;; This function is called by:
  9654 ;;		_colour_move
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text48
  9659   0054D2                     __ptext48:
  9660                           	callstack 0
  9661   0054D2                     _RetryMove:
  9662                           	callstack 24
  9663   0054D2                     
  9664                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  9665   0054D2  0E61               	movlw	low _motorL
  9666   0054D4  6E1A               	movwf	reverseDetect@mL^0,c
  9667   0054D6  0E01               	movlw	high _motorL
  9668   0054D8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9669   0054DA  0E58               	movlw	low _motorR
  9670   0054DC  6E1C               	movwf	reverseDetect@mR^0,c
  9671   0054DE  0E01               	movlw	high _motorR
  9672   0054E0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9673   0054E2  ECC4  F02B         	call	_reverseDetect	;wreg free
  9674                           
  9675                           ;dc_motor.c: 346:     stop(&motorL, &motorR);
  9676   0054E6  0E61               	movlw	low _motorL
  9677   0054E8  6E14               	movwf	stop@mL^0,c
  9678   0054EA  0E01               	movlw	high _motorL
  9679   0054EC  6E15               	movwf	(stop@mL+1)^0,c
  9680   0054EE  0E58               	movlw	low _motorR
  9681   0054F0  6E16               	movwf	stop@mR^0,c
  9682   0054F2  0E01               	movlw	high _motorR
  9683   0054F4  6E17               	movwf	(stop@mR+1)^0,c
  9684   0054F6  EC3F  F029         	call	_stop	;wreg free
  9685                           
  9686                           ;dc_motor.c: 347:     fullSpeedAhead(mL,mR);
  9687   0054FA  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9688   0054FE  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9689   005502  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9690   005506  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9691   00550A  ECAC  F028         	call	_fullSpeedAhead	;wreg free
  9692   00550E                     
  9693                           ;dc_motor.c: 348:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9694   00550E  0E29               	movlw	41
  9695   005510  6E25               	movwf	(??_RetryMove+1)^0,c
  9696   005512  0E96               	movlw	150
  9697   005514  6E24               	movwf	??_RetryMove^0,c
  9698   005516  0E7F               	movlw	127
  9699   005518                     u5987:
  9700   005518  2EE8               	decfsz	wreg,f,c
  9701   00551A  D7FE               	bra	u5987
  9702   00551C  2E24               	decfsz	??_RetryMove^0,f,c
  9703   00551E  D7FC               	bra	u5987
  9704   005520  2E25               	decfsz	(??_RetryMove+1)^0,f,c
  9705   005522  D7FA               	bra	u5987
  9706   005524  F000               	nop	
  9707   005526                     
  9708                           ;dc_motor.c: 349:     stop(&motorL, &motorR);
  9709   005526  0E61               	movlw	low _motorL
  9710   005528  6E14               	movwf	stop@mL^0,c
  9711   00552A  0E01               	movlw	high _motorL
  9712   00552C  6E15               	movwf	(stop@mL+1)^0,c
  9713   00552E  0E58               	movlw	low _motorR
  9714   005530  6E16               	movwf	stop@mR^0,c
  9715   005532  0E01               	movlw	high _motorR
  9716   005534  6E17               	movwf	(stop@mR+1)^0,c
  9717   005536  EC3F  F029         	call	_stop	;wreg free
  9718   00553A  0012               	return		;funcret
  9719   00553C                     __end_of_RetryMove:
  9720                           	callstack 0
  9721                           
  9722 ;; *************** function _PinkMove *****************
  9723 ;; Defined at:
  9724 ;;		line 315 in file "dc_motor.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9727 ;;		 -> motorL(9), 
  9728 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9729 ;;		 -> motorR(9), 
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9741 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9745 ;;Total ram usage:        4 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; Hardware stack levels required when called: 5
  9748 ;; This function calls:
  9749 ;;		_reverseDetect
  9750 ;;		_reverseOneBlock
  9751 ;;		_turnLeft45
  9752 ;; This function is called by:
  9753 ;;		_colour_move
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text49
  9758   005AE2                     __ptext49:
  9759                           	callstack 0
  9760   005AE2                     _PinkMove:
  9761                           	callstack 24
  9762   005AE2                     
  9763                           ;dc_motor.c: 316:     reverseDetect(&motorL, &motorR);
  9764   005AE2  0E61               	movlw	low _motorL
  9765   005AE4  6E1A               	movwf	reverseDetect@mL^0,c
  9766   005AE6  0E01               	movlw	high _motorL
  9767   005AE8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9768   005AEA  0E58               	movlw	low _motorR
  9769   005AEC  6E1C               	movwf	reverseDetect@mR^0,c
  9770   005AEE  0E01               	movlw	high _motorR
  9771   005AF0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9772   005AF2  ECC4  F02B         	call	_reverseDetect	;wreg free
  9773                           
  9774                           ;dc_motor.c: 318:     reverseOneBlock(&motorL, &motorR);
  9775   005AF6  0E61               	movlw	low _motorL
  9776   005AF8  6E1A               	movwf	reverseOneBlock@mL^0,c
  9777   005AFA  0E01               	movlw	high _motorL
  9778   005AFC  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9779   005AFE  0E58               	movlw	low _motorR
  9780   005B00  6E1C               	movwf	reverseOneBlock@mR^0,c
  9781   005B02  0E01               	movlw	high _motorR
  9782   005B04  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9783   005B06  EC4A  F02C         	call	_reverseOneBlock	;wreg free
  9784                           
  9785                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9786   005B0A  0E61               	movlw	low _motorL
  9787   005B0C  6E1A               	movwf	turnLeft45@mL^0,c
  9788   005B0E  0E01               	movlw	high _motorL
  9789   005B10  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9790   005B12  0E58               	movlw	low _motorR
  9791   005B14  6E1C               	movwf	turnLeft45@mR^0,c
  9792   005B16  0E01               	movlw	high _motorR
  9793   005B18  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9794   005B1A  ECB2  F02E         	call	_turnLeft45	;wreg free
  9795                           
  9796                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9797   005B1E  0E61               	movlw	low _motorL
  9798   005B20  6E1A               	movwf	turnLeft45@mL^0,c
  9799   005B22  0E01               	movlw	high _motorL
  9800   005B24  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9801   005B26  0E58               	movlw	low _motorR
  9802   005B28  6E1C               	movwf	turnLeft45@mR^0,c
  9803   005B2A  0E01               	movlw	high _motorR
  9804   005B2C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9805   005B2E  ECB2  F02E         	call	_turnLeft45	;wreg free
  9806   005B32  0012               	return		;funcret
  9807   005B34                     __end_of_PinkMove:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _reverseOneBlock *****************
  9811 ;; Defined at:
  9812 ;;		line 240 in file "dc_motor.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9815 ;;		 -> motorL(9), 
  9816 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9817 ;;		 -> motorR(9), 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9833 ;;Total ram usage:        6 bytes
  9834 ;; Hardware stack levels used: 1
  9835 ;; Hardware stack levels required when called: 4
  9836 ;; This function calls:
  9837 ;;		_fullSpeedBack
  9838 ;;		_stop
  9839 ;; This function is called by:
  9840 ;;		_YellowMove
  9841 ;;		_PinkMove
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text50
  9846   005894                     __ptext50:
  9847                           	callstack 0
  9848   005894                     _reverseOneBlock:
  9849                           	callstack 24
  9850   005894                     
  9851                           ;dc_motor.c: 241:     fullSpeedBack(mL,mR);
  9852   005894  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  9853   005898  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  9854   00589C  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  9855   0058A0  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  9856   0058A4  EC5D  F028         	call	_fullSpeedBack	;wreg free
  9857   0058A8                     
  9858                           ;dc_motor.c: 242:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9859   0058A8  0E56               	movlw	86
  9860   0058AA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9861   0058AC  0E3A               	movlw	58
  9862   0058AE  6E1E               	movwf	??_reverseOneBlock^0,c
  9863   0058B0  0EF4               	movlw	244
  9864   0058B2                     u5997:
  9865   0058B2  2EE8               	decfsz	wreg,f,c
  9866   0058B4  D7FE               	bra	u5997
  9867   0058B6  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9868   0058B8  D7FC               	bra	u5997
  9869   0058BA  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9870   0058BC  D7FA               	bra	u5997
  9871   0058BE                     
  9872                           ;dc_motor.c: 243:     stop(&motorL, &motorR);
  9873   0058BE  0E61               	movlw	low _motorL
  9874   0058C0  6E14               	movwf	stop@mL^0,c
  9875   0058C2  0E01               	movlw	high _motorL
  9876   0058C4  6E15               	movwf	(stop@mL+1)^0,c
  9877   0058C6  0E58               	movlw	low _motorR
  9878   0058C8  6E16               	movwf	stop@mR^0,c
  9879   0058CA  0E01               	movlw	high _motorR
  9880   0058CC  6E17               	movwf	(stop@mR+1)^0,c
  9881   0058CE  EC3F  F029         	call	_stop	;wreg free
  9882                           
  9883                           ;dc_motor.c: 244:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9884   0058D2  0E05               	movlw	5
  9885   0058D4  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9886   0058D6  0E0F               	movlw	15
  9887   0058D8  6E1E               	movwf	??_reverseOneBlock^0,c
  9888   0058DA  0EF1               	movlw	241
  9889   0058DC                     u6007:
  9890   0058DC  2EE8               	decfsz	wreg,f,c
  9891   0058DE  D7FE               	bra	u6007
  9892   0058E0  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9893   0058E2  D7FC               	bra	u6007
  9894   0058E4  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9895   0058E6  D7FA               	bra	u6007
  9896   0058E8  F000               	nop	
  9897   0058EA  0012               	return		;funcret
  9898   0058EC                     __end_of_reverseOneBlock:
  9899                           	callstack 0
  9900                           
  9901 ;; *************** function _OrangeMove *****************
  9902 ;; Defined at:
  9903 ;;		line 325 in file "dc_motor.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9906 ;;		 -> motorL(9), 
  9907 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9908 ;;		 -> motorR(9), 
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;Total ram usage:        4 bytes
  9925 ;; Hardware stack levels used: 1
  9926 ;; Hardware stack levels required when called: 5
  9927 ;; This function calls:
  9928 ;;		_quaterForward
  9929 ;;		_reverseDetect
  9930 ;;		_turnRight45
  9931 ;; This function is called by:
  9932 ;;		_colour_move
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text51
  9937   0055A2                     __ptext51:
  9938                           	callstack 0
  9939   0055A2                     _OrangeMove:
  9940                           	callstack 24
  9941   0055A2                     
  9942                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
  9943   0055A2  0E61               	movlw	low _motorL
  9944   0055A4  6E1A               	movwf	reverseDetect@mL^0,c
  9945   0055A6  0E01               	movlw	high _motorL
  9946   0055A8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9947   0055AA  0E58               	movlw	low _motorR
  9948   0055AC  6E1C               	movwf	reverseDetect@mR^0,c
  9949   0055AE  0E01               	movlw	high _motorR
  9950   0055B0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9951   0055B2  ECC4  F02B         	call	_reverseDetect	;wreg free
  9952                           
  9953                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
  9954   0055B6  0E61               	movlw	low _motorL
  9955   0055B8  6E1A               	movwf	turnRight45@mL^0,c
  9956   0055BA  0E01               	movlw	high _motorL
  9957   0055BC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9958   0055BE  0E58               	movlw	low _motorR
  9959   0055C0  6E1C               	movwf	turnRight45@mR^0,c
  9960   0055C2  0E01               	movlw	high _motorR
  9961   0055C4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9962   0055C6  EC8B  F02E         	call	_turnRight45	;wreg free
  9963                           
  9964                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
  9965   0055CA  0E61               	movlw	low _motorL
  9966   0055CC  6E1A               	movwf	turnRight45@mL^0,c
  9967   0055CE  0E01               	movlw	high _motorL
  9968   0055D0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9969   0055D2  0E58               	movlw	low _motorR
  9970   0055D4  6E1C               	movwf	turnRight45@mR^0,c
  9971   0055D6  0E01               	movlw	high _motorR
  9972   0055D8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9973   0055DA  EC8B  F02E         	call	_turnRight45	;wreg free
  9974                           
  9975                           ;dc_motor.c: 330:     turnRight45(&motorL, &motorR);
  9976   0055DE  0E61               	movlw	low _motorL
  9977   0055E0  6E1A               	movwf	turnRight45@mL^0,c
  9978   0055E2  0E01               	movlw	high _motorL
  9979   0055E4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9980   0055E6  0E58               	movlw	low _motorR
  9981   0055E8  6E1C               	movwf	turnRight45@mR^0,c
  9982   0055EA  0E01               	movlw	high _motorR
  9983   0055EC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9984   0055EE  EC8B  F02E         	call	_turnRight45	;wreg free
  9985                           
  9986                           ;dc_motor.c: 331:     quaterForward(&motorL, &motorR);
  9987   0055F2  0E61               	movlw	low _motorL
  9988   0055F4  6E1A               	movwf	quaterForward@mL^0,c
  9989   0055F6  0E01               	movlw	high _motorL
  9990   0055F8  6E1B               	movwf	(quaterForward@mL+1)^0,c
  9991   0055FA  0E58               	movlw	low _motorR
  9992   0055FC  6E1C               	movwf	quaterForward@mR^0,c
  9993   0055FE  0E01               	movlw	high _motorR
  9994   005600  6E1D               	movwf	(quaterForward@mR+1)^0,c
  9995   005602  EC76  F02C         	call	_quaterForward	;wreg free
  9996   005606  0012               	return		;funcret
  9997   005608                     __end_of_OrangeMove:
  9998                           	callstack 0
  9999                           
 10000 ;; *************** function _turnRight45 *****************
 10001 ;; Defined at:
 10002 ;;		line 212 in file "dc_motor.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10005 ;;		 -> motorL(9), 
 10006 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10007 ;;		 -> motorR(9), 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;Total ram usage:        6 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; Hardware stack levels required when called: 4
 10026 ;; This function calls:
 10027 ;;		_TurnDelay
 10028 ;;		_stop
 10029 ;;		_turnRight
 10030 ;; This function is called by:
 10031 ;;		_RedMove
 10032 ;;		_BlueMove
 10033 ;;		_YellowMove
 10034 ;;		_OrangeMove
 10035 ;;		_ReverseYellow
 10036 ;;		_ReverseLightBlueMove
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           	psect	text52
 10041   005D16                     __ptext52:
 10042                           	callstack 0
 10043   005D16                     _turnRight45:
 10044                           	callstack 24
 10045   005D16                     
 10046                           ;dc_motor.c: 213:     turnRight(mL,mR);
 10047   005D16  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10048   005D1A  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10049   005D1E  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10050   005D22  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10051   005D26  ECBF  F027         	call	_turnRight	;wreg free
 10052   005D2A                     
 10053                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
 10054   005D2A  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10055   005D2E  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10056   005D32  ECF7  F02F         	call	_TurnDelay	;wreg free
 10057   005D36                     
 10058                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
 10059   005D36  0E61               	movlw	low _motorL
 10060   005D38  6E14               	movwf	stop@mL^0,c
 10061   005D3A  0E01               	movlw	high _motorL
 10062   005D3C  6E15               	movwf	(stop@mL+1)^0,c
 10063   005D3E  0E58               	movlw	low _motorR
 10064   005D40  6E16               	movwf	stop@mR^0,c
 10065   005D42  0E01               	movlw	high _motorR
 10066   005D44  6E17               	movwf	(stop@mR+1)^0,c
 10067   005D46  EC3F  F029         	call	_stop	;wreg free
 10068   005D4A                     
 10069                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10070   005D4A  0E05               	movlw	5
 10071   005D4C  6E1F               	movwf	(??_turnRight45+1)^0,c
 10072   005D4E  0E0F               	movlw	15
 10073   005D50  6E1E               	movwf	??_turnRight45^0,c
 10074   005D52  0EF1               	movlw	241
 10075   005D54                     u6017:
 10076   005D54  2EE8               	decfsz	wreg,f,c
 10077   005D56  D7FE               	bra	u6017
 10078   005D58  2E1E               	decfsz	??_turnRight45^0,f,c
 10079   005D5A  D7FC               	bra	u6017
 10080   005D5C  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10081   005D5E  D7FA               	bra	u6017
 10082   005D60  F000               	nop	
 10083   005D62  0012               	return		;funcret
 10084   005D64                     __end_of_turnRight45:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _turnRight *****************
 10088 ;; Defined at:
 10089 ;;		line 130 in file "dc_motor.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10092 ;;		 -> motorL(9), 
 10093 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10094 ;;		 -> motorR(9), 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;		None
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;Total ram usage:        6 bytes
 10111 ;; Hardware stack levels used: 1
 10112 ;; Hardware stack levels required when called: 3
 10113 ;; This function calls:
 10114 ;;		_setMotorPWM
 10115 ;; This function is called by:
 10116 ;;		_turnRight45
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text53
 10121   004F7E                     __ptext53:
 10122                           	callstack 0
 10123   004F7E                     _turnRight:
 10124                           	callstack 24
 10125   004F7E                     
 10126                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
 10127   004F7E  EE20 F001          	lfsr	2,1
 10128   004F82  5014               	movf	turnRight@mL^0,w,c
 10129   004F84  26D9               	addwf	fsr2l,f,c
 10130   004F86  5015               	movf	(turnRight@mL+1)^0,w,c
 10131   004F88  22DA               	addwfc	fsr2h,f,c
 10132   004F8A  0E01               	movlw	1
 10133   004F8C  6EDF               	movwf	indf2,c
 10134                           
 10135                           ;dc_motor.c: 133:     mR->direction =0;
 10136   004F8E  EE20 F001          	lfsr	2,1
 10137   004F92  5016               	movf	turnRight@mR^0,w,c
 10138   004F94  26D9               	addwf	fsr2l,f,c
 10139   004F96  5017               	movf	(turnRight@mR+1)^0,w,c
 10140   004F98  22DA               	addwfc	fsr2h,f,c
 10141   004F9A  0E00               	movlw	0
 10142   004F9C  6EDF               	movwf	indf2,c
 10143                           
 10144                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
 10145   004F9E  EFF5  F027         	goto	l4176
 10146   004FA2                     l4168:
 10147                           
 10148                           ;dc_motor.c: 137:         mL->power+=10;
 10149   004FA2  C014  FFD9         	movff	turnRight@mL,fsr2l
 10150   004FA6  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10151   004FAA  0E0A               	movlw	10
 10152   004FAC  26DF               	addwf	indf2,f,c
 10153                           
 10154                           ;dc_motor.c: 138:         mR->power+=10;
 10155   004FAE  C016  FFD9         	movff	turnRight@mR,fsr2l
 10156   004FB2  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10157   004FB6  0E0A               	movlw	10
 10158   004FB8  26DF               	addwf	indf2,f,c
 10159   004FBA                     
 10160                           ;dc_motor.c: 140:         setMotorPWM(mL);
 10161   004FBA  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10162   004FBE  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10163   004FC2  EC0E  F023         	call	_setMotorPWM	;wreg free
 10164   004FC6                     
 10165                           ;dc_motor.c: 141:         setMotorPWM(mR);
 10166   004FC6  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10167   004FCA  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10168   004FCE  EC0E  F023         	call	_setMotorPWM	;wreg free
 10169   004FD2                     
 10170                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10171   004FD2  0E02               	movlw	2
 10172   004FD4  6E19               	movwf	(??_turnRight+1)^0,c
 10173   004FD6  0EA0               	movlw	160
 10174   004FD8  6E18               	movwf	??_turnRight^0,c
 10175   004FDA  0E92               	movlw	146
 10176   004FDC                     u6027:
 10177   004FDC  2EE8               	decfsz	wreg,f,c
 10178   004FDE  D7FE               	bra	u6027
 10179   004FE0  2E18               	decfsz	??_turnRight^0,f,c
 10180   004FE2  D7FC               	bra	u6027
 10181   004FE4  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10182   004FE6  D7FA               	bra	u6027
 10183   004FE8  D000               	nop2	
 10184   004FEA                     l4176:
 10185   004FEA  C014  FFD9         	movff	turnRight@mL,fsr2l
 10186   004FEE  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10187   004FF2  0E32               	movlw	50
 10188   004FF4  60DF               	cpfslt	indf2,c
 10189   004FF6  EFFF  F027         	goto	u3471
 10190   004FFA  EF01  F028         	goto	u3470
 10191   004FFE                     u3471:
 10192   004FFE  EF0D  F028         	goto	l446
 10193   005002                     u3470:
 10194   005002  C016  FFD9         	movff	turnRight@mR,fsr2l
 10195   005006  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10196   00500A  0E31               	movlw	49
 10197   00500C  64DF               	cpfsgt	indf2,c
 10198   00500E  EF0B  F028         	goto	u3481
 10199   005012  EF0D  F028         	goto	u3480
 10200   005016                     u3481:
 10201   005016  EFD1  F027         	goto	l4168
 10202   00501A                     u3480:
 10203   00501A                     l446:
 10204   00501A  0012               	return		;funcret
 10205   00501C                     __end_of_turnRight:
 10206                           	callstack 0
 10207                           
 10208 ;; *************** function _LightBlueMove *****************
 10209 ;; Defined at:
 10210 ;;		line 335 in file "dc_motor.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10213 ;;		 -> motorL(9), 
 10214 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10215 ;;		 -> motorR(9), 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;		None
 10218 ;; Return value:  Size  Location     Type
 10219 ;;                  1    wreg      void 
 10220 ;; Registers used:
 10221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10222 ;; Tracked objects:
 10223 ;;		On entry : 0/0
 10224 ;;		On exit  : 0/0
 10225 ;;		Unchanged: 0/0
 10226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10231 ;;Total ram usage:        4 bytes
 10232 ;; Hardware stack levels used: 1
 10233 ;; Hardware stack levels required when called: 5
 10234 ;; This function calls:
 10235 ;;		_quaterForward
 10236 ;;		_reverseDetect
 10237 ;;		_turnLeft45
 10238 ;; This function is called by:
 10239 ;;		_colour_move
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text54
 10244   005608                     __ptext54:
 10245                           	callstack 0
 10246   005608                     _LightBlueMove:
 10247                           	callstack 24
 10248   005608                     
 10249                           ;dc_motor.c: 336:     reverseDetect(&motorL, &motorR);
 10250   005608  0E61               	movlw	low _motorL
 10251   00560A  6E1A               	movwf	reverseDetect@mL^0,c
 10252   00560C  0E01               	movlw	high _motorL
 10253   00560E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10254   005610  0E58               	movlw	low _motorR
 10255   005612  6E1C               	movwf	reverseDetect@mR^0,c
 10256   005614  0E01               	movlw	high _motorR
 10257   005616  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10258   005618  ECC4  F02B         	call	_reverseDetect	;wreg free
 10259                           
 10260                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
 10261   00561C  0E61               	movlw	low _motorL
 10262   00561E  6E1A               	movwf	turnLeft45@mL^0,c
 10263   005620  0E01               	movlw	high _motorL
 10264   005622  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10265   005624  0E58               	movlw	low _motorR
 10266   005626  6E1C               	movwf	turnLeft45@mR^0,c
 10267   005628  0E01               	movlw	high _motorR
 10268   00562A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10269   00562C  ECB2  F02E         	call	_turnLeft45	;wreg free
 10270                           
 10271                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
 10272   005630  0E61               	movlw	low _motorL
 10273   005632  6E1A               	movwf	turnLeft45@mL^0,c
 10274   005634  0E01               	movlw	high _motorL
 10275   005636  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10276   005638  0E58               	movlw	low _motorR
 10277   00563A  6E1C               	movwf	turnLeft45@mR^0,c
 10278   00563C  0E01               	movlw	high _motorR
 10279   00563E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10280   005640  ECB2  F02E         	call	_turnLeft45	;wreg free
 10281                           
 10282                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
 10283   005644  0E61               	movlw	low _motorL
 10284   005646  6E1A               	movwf	turnLeft45@mL^0,c
 10285   005648  0E01               	movlw	high _motorL
 10286   00564A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10287   00564C  0E58               	movlw	low _motorR
 10288   00564E  6E1C               	movwf	turnLeft45@mR^0,c
 10289   005650  0E01               	movlw	high _motorR
 10290   005652  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10291   005654  ECB2  F02E         	call	_turnLeft45	;wreg free
 10292                           
 10293                           ;dc_motor.c: 341:     quaterForward(&motorL, &motorR);
 10294   005658  0E61               	movlw	low _motorL
 10295   00565A  6E1A               	movwf	quaterForward@mL^0,c
 10296   00565C  0E01               	movlw	high _motorL
 10297   00565E  6E1B               	movwf	(quaterForward@mL+1)^0,c
 10298   005660  0E58               	movlw	low _motorR
 10299   005662  6E1C               	movwf	quaterForward@mR^0,c
 10300   005664  0E01               	movlw	high _motorR
 10301   005666  6E1D               	movwf	(quaterForward@mR+1)^0,c
 10302   005668  EC76  F02C         	call	_quaterForward	;wreg free
 10303   00566C  0012               	return		;funcret
 10304   00566E                     __end_of_LightBlueMove:
 10305                           	callstack 0
 10306                           
 10307 ;; *************** function _turnLeft45 *****************
 10308 ;; Defined at:
 10309 ;;		line 219 in file "dc_motor.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10312 ;;		 -> motorL(9), 
 10313 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10314 ;;		 -> motorR(9), 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;		None
 10317 ;; Return value:  Size  Location     Type
 10318 ;;                  1    wreg      void 
 10319 ;; Registers used:
 10320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10321 ;; Tracked objects:
 10322 ;;		On entry : 0/0
 10323 ;;		On exit  : 0/0
 10324 ;;		Unchanged: 0/0
 10325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10330 ;;Total ram usage:        6 bytes
 10331 ;; Hardware stack levels used: 1
 10332 ;; Hardware stack levels required when called: 4
 10333 ;; This function calls:
 10334 ;;		_TurnDelay
 10335 ;;		_stop
 10336 ;;		_turnLeft
 10337 ;; This function is called by:
 10338 ;;		_GreenMove
 10339 ;;		_PinkMove
 10340 ;;		_LightBlueMove
 10341 ;;		_ReversePink
 10342 ;;		_ReverseOrangeMove
 10343 ;;		_turnCalibration
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text55
 10348   005D64                     __ptext55:
 10349                           	callstack 0
 10350   005D64                     _turnLeft45:
 10351                           	callstack 25
 10352   005D64                     
 10353                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10354   005D64  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10355   005D68  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10356   005D6C  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10357   005D70  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10358   005D74  EC0E  F028         	call	_turnLeft	;wreg free
 10359   005D78                     
 10360                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10361   005D78  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10362   005D7C  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10363   005D80  ECF7  F02F         	call	_TurnDelay	;wreg free
 10364   005D84                     
 10365                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10366   005D84  0E61               	movlw	low _motorL
 10367   005D86  6E14               	movwf	stop@mL^0,c
 10368   005D88  0E01               	movlw	high _motorL
 10369   005D8A  6E15               	movwf	(stop@mL+1)^0,c
 10370   005D8C  0E58               	movlw	low _motorR
 10371   005D8E  6E16               	movwf	stop@mR^0,c
 10372   005D90  0E01               	movlw	high _motorR
 10373   005D92  6E17               	movwf	(stop@mR+1)^0,c
 10374   005D94  EC3F  F029         	call	_stop	;wreg free
 10375   005D98                     
 10376                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10377   005D98  0E05               	movlw	5
 10378   005D9A  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10379   005D9C  0E0F               	movlw	15
 10380   005D9E  6E1E               	movwf	??_turnLeft45^0,c
 10381   005DA0  0EF1               	movlw	241
 10382   005DA2                     u6037:
 10383   005DA2  2EE8               	decfsz	wreg,f,c
 10384   005DA4  D7FE               	bra	u6037
 10385   005DA6  2E1E               	decfsz	??_turnLeft45^0,f,c
 10386   005DA8  D7FC               	bra	u6037
 10387   005DAA  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10388   005DAC  D7FA               	bra	u6037
 10389   005DAE  F000               	nop	
 10390   005DB0  0012               	return		;funcret
 10391   005DB2                     __end_of_turnLeft45:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _turnLeft *****************
 10395 ;; Defined at:
 10396 ;;		line 112 in file "dc_motor.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10399 ;;		 -> motorL(9), 
 10400 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10401 ;;		 -> motorR(9), 
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10417 ;;Total ram usage:        6 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; Hardware stack levels required when called: 3
 10420 ;; This function calls:
 10421 ;;		_setMotorPWM
 10422 ;; This function is called by:
 10423 ;;		_turnLeft45
 10424 ;; This function uses a non-reentrant model
 10425 ;;
 10426                           
 10427                           	psect	text56
 10428   00501C                     __ptext56:
 10429                           	callstack 0
 10430   00501C                     _turnLeft:
 10431                           	callstack 25
 10432   00501C                     
 10433                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10434   00501C  EE20 F001          	lfsr	2,1
 10435   005020  5014               	movf	turnLeft@mL^0,w,c
 10436   005022  26D9               	addwf	fsr2l,f,c
 10437   005024  5015               	movf	(turnLeft@mL+1)^0,w,c
 10438   005026  22DA               	addwfc	fsr2h,f,c
 10439   005028  0E00               	movlw	0
 10440   00502A  6EDF               	movwf	indf2,c
 10441                           
 10442                           ;dc_motor.c: 115:     mR->direction =1;
 10443   00502C  EE20 F001          	lfsr	2,1
 10444   005030  5016               	movf	turnLeft@mR^0,w,c
 10445   005032  26D9               	addwf	fsr2l,f,c
 10446   005034  5017               	movf	(turnLeft@mR+1)^0,w,c
 10447   005036  22DA               	addwfc	fsr2h,f,c
 10448   005038  0E01               	movlw	1
 10449   00503A  6EDF               	movwf	indf2,c
 10450                           
 10451                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10452   00503C  EF44  F028         	goto	l4162
 10453   005040                     l4154:
 10454                           
 10455                           ;dc_motor.c: 119:         mL->power+=10;
 10456   005040  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10457   005044  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10458   005048  0E0A               	movlw	10
 10459   00504A  26DF               	addwf	indf2,f,c
 10460                           
 10461                           ;dc_motor.c: 120:         mR->power+=10;
 10462   00504C  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10463   005050  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10464   005054  0E0A               	movlw	10
 10465   005056  26DF               	addwf	indf2,f,c
 10466   005058                     
 10467                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10468   005058  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10469   00505C  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10470   005060  EC0E  F023         	call	_setMotorPWM	;wreg free
 10471   005064                     
 10472                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10473   005064  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10474   005068  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10475   00506C  EC0E  F023         	call	_setMotorPWM	;wreg free
 10476   005070                     
 10477                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10478   005070  0E02               	movlw	2
 10479   005072  6E19               	movwf	(??_turnLeft+1)^0,c
 10480   005074  0EA0               	movlw	160
 10481   005076  6E18               	movwf	??_turnLeft^0,c
 10482   005078  0E92               	movlw	146
 10483   00507A                     u6047:
 10484   00507A  2EE8               	decfsz	wreg,f,c
 10485   00507C  D7FE               	bra	u6047
 10486   00507E  2E18               	decfsz	??_turnLeft^0,f,c
 10487   005080  D7FC               	bra	u6047
 10488   005082  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10489   005084  D7FA               	bra	u6047
 10490   005086  D000               	nop2	
 10491   005088                     l4162:
 10492   005088  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10493   00508C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10494   005090  0E32               	movlw	50
 10495   005092  60DF               	cpfslt	indf2,c
 10496   005094  EF4E  F028         	goto	u3451
 10497   005098  EF50  F028         	goto	u3450
 10498   00509C                     u3451:
 10499   00509C  EF5C  F028         	goto	l438
 10500   0050A0                     u3450:
 10501   0050A0  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10502   0050A4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10503   0050A8  0E31               	movlw	49
 10504   0050AA  64DF               	cpfsgt	indf2,c
 10505   0050AC  EF5A  F028         	goto	u3461
 10506   0050B0  EF5C  F028         	goto	u3460
 10507   0050B4                     u3461:
 10508   0050B4  EF20  F028         	goto	l4154
 10509   0050B8                     u3460:
 10510   0050B8                     l438:
 10511   0050B8  0012               	return		;funcret
 10512   0050BA                     __end_of_turnLeft:
 10513                           	callstack 0
 10514                           
 10515 ;; *************** function _TurnDelay *****************
 10516 ;; Defined at:
 10517 ;;		line 205 in file "dc_motor.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  Turn45Delay     2    0[COMRAM] int 
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10535 ;;Total ram usage:        3 bytes
 10536 ;; Hardware stack levels used: 1
 10537 ;; Hardware stack levels required when called: 1
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_turnRight45
 10542 ;;		_turnLeft45
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text57
 10547   005FEE                     __ptext57:
 10548                           	callstack 0
 10549   005FEE                     _TurnDelay:
 10550                           	callstack 27
 10551   005FEE                     
 10552                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10553   005FEE  EF04  F030         	goto	l473
 10554   005FF2                     l4196:
 10555                           
 10556                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10557   005FF2  0E15               	movlw	21
 10558   005FF4  6E03               	movwf	??_TurnDelay^0,c
 10559   005FF6  0EC6               	movlw	198
 10560   005FF8                     u6057:
 10561   005FF8  2EE8               	decfsz	wreg,f,c
 10562   005FFA  D7FE               	bra	u6057
 10563   005FFC  2E03               	decfsz	??_TurnDelay^0,f,c
 10564   005FFE  D7FC               	bra	u6057
 10565   006000  D000               	nop2	
 10566   006002                     
 10567                           ;dc_motor.c: 208:         Turn45Delay--;
 10568   006002  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10569   006004  A0D8               	btfss	status,0,c
 10570   006006  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10571   006008                     l473:
 10572                           
 10573                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10574   006008  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10575   00600A  EF11  F030         	goto	u3510
 10576   00600E  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10577   006010  E106               	bnz	u3511
 10578   006012  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10579   006014  B0D8               	btfsc	status,0,c
 10580   006016  EF0F  F030         	goto	u3511
 10581   00601A  EF11  F030         	goto	u3510
 10582   00601E                     u3511:
 10583   00601E  EFF9  F02F         	goto	l4196
 10584   006022                     u3510:
 10585   006022  0012               	return		;funcret
 10586   006024                     __end_of_TurnDelay:
 10587                           	callstack 0
 10588                           
 10589 ;; *************** function _reverseDetect *****************
 10590 ;; Defined at:
 10591 ;;		line 226 in file "dc_motor.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10594 ;;		 -> motorL(9), 
 10595 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10596 ;;		 -> motorR(9), 
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10612 ;;Total ram usage:        6 bytes
 10613 ;; Hardware stack levels used: 1
 10614 ;; Hardware stack levels required when called: 4
 10615 ;; This function calls:
 10616 ;;		_fullSpeedBack
 10617 ;;		_stop
 10618 ;; This function is called by:
 10619 ;;		_RedMove
 10620 ;;		_GreenMove
 10621 ;;		_BlueMove
 10622 ;;		_YellowMove
 10623 ;;		_PinkMove
 10624 ;;		_OrangeMove
 10625 ;;		_LightBlueMove
 10626 ;;		_RetryMove
 10627 ;;		_ReverseYellow
 10628 ;;		_ReversePink
 10629 ;;		_ReverseOrangeMove
 10630 ;;		_ReverseLightBlueMove
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text58
 10635   005788                     __ptext58:
 10636                           	callstack 0
 10637   005788                     _reverseDetect:
 10638                           	callstack 24
 10639   005788                     
 10640                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10641   005788  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10642   00578C  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10643   005790  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10644   005794  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10645   005798  EC5D  F028         	call	_fullSpeedBack	;wreg free
 10646   00579C                     
 10647                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10648   00579C  0E11               	movlw	17
 10649   00579E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10650   0057A0  0E3C               	movlw	60
 10651   0057A2  6E1E               	movwf	??_reverseDetect^0,c
 10652   0057A4  0ECB               	movlw	203
 10653   0057A6                     u6067:
 10654   0057A6  2EE8               	decfsz	wreg,f,c
 10655   0057A8  D7FE               	bra	u6067
 10656   0057AA  2E1E               	decfsz	??_reverseDetect^0,f,c
 10657   0057AC  D7FC               	bra	u6067
 10658   0057AE  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10659   0057B0  D7FA               	bra	u6067
 10660   0057B2  F000               	nop	
 10661   0057B4                     
 10662                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10663   0057B4  0E61               	movlw	low _motorL
 10664   0057B6  6E14               	movwf	stop@mL^0,c
 10665   0057B8  0E01               	movlw	high _motorL
 10666   0057BA  6E15               	movwf	(stop@mL+1)^0,c
 10667   0057BC  0E58               	movlw	low _motorR
 10668   0057BE  6E16               	movwf	stop@mR^0,c
 10669   0057C0  0E01               	movlw	high _motorR
 10670   0057C2  6E17               	movwf	(stop@mR+1)^0,c
 10671   0057C4  EC3F  F029         	call	_stop	;wreg free
 10672                           
 10673                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10674   0057C8  0E05               	movlw	5
 10675   0057CA  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10676   0057CC  0E0F               	movlw	15
 10677   0057CE  6E1E               	movwf	??_reverseDetect^0,c
 10678   0057D0  0EF1               	movlw	241
 10679   0057D2                     u6077:
 10680   0057D2  2EE8               	decfsz	wreg,f,c
 10681   0057D4  D7FE               	bra	u6077
 10682   0057D6  2E1E               	decfsz	??_reverseDetect^0,f,c
 10683   0057D8  D7FC               	bra	u6077
 10684   0057DA  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10685   0057DC  D7FA               	bra	u6077
 10686   0057DE  F000               	nop	
 10687   0057E0  0012               	return		;funcret
 10688   0057E2                     __end_of_reverseDetect:
 10689                           	callstack 0
 10690                           
 10691 ;; *************** function _fullSpeedBack *****************
 10692 ;; Defined at:
 10693 ;;		line 186 in file "dc_motor.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10696 ;;		 -> motorL(9), 
 10697 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10698 ;;		 -> motorR(9), 
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;		None
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;Total ram usage:        6 bytes
 10715 ;; Hardware stack levels used: 1
 10716 ;; Hardware stack levels required when called: 3
 10717 ;; This function calls:
 10718 ;;		_setMotorPWM
 10719 ;; This function is called by:
 10720 ;;		_reverseDetect
 10721 ;;		_reverseOneBlock
 10722 ;;		_Backhalfblock
 10723 ;;		_homeReverse
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text59
 10728   0050BA                     __ptext59:
 10729                           	callstack 0
 10730   0050BA                     _fullSpeedBack:
 10731                           	callstack 24
 10732   0050BA                     
 10733                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10734   0050BA  EE20 F001          	lfsr	2,1
 10735   0050BE  5014               	movf	fullSpeedBack@mL^0,w,c
 10736   0050C0  26D9               	addwf	fsr2l,f,c
 10737   0050C2  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10738   0050C4  22DA               	addwfc	fsr2h,f,c
 10739   0050C6  0E00               	movlw	0
 10740   0050C8  6EDF               	movwf	indf2,c
 10741                           
 10742                           ;dc_motor.c: 190:     mR->direction =0;
 10743   0050CA  EE20 F001          	lfsr	2,1
 10744   0050CE  5016               	movf	fullSpeedBack@mR^0,w,c
 10745   0050D0  26D9               	addwf	fsr2l,f,c
 10746   0050D2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10747   0050D4  22DA               	addwfc	fsr2h,f,c
 10748   0050D6  0E00               	movlw	0
 10749   0050D8  6EDF               	movwf	indf2,c
 10750                           
 10751                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10752   0050DA  EF93  F028         	goto	l4190
 10753   0050DE                     l4182:
 10754                           
 10755                           ;dc_motor.c: 193:         mL->power+=10;
 10756   0050DE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10757   0050E2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10758   0050E6  0E0A               	movlw	10
 10759   0050E8  26DF               	addwf	indf2,f,c
 10760                           
 10761                           ;dc_motor.c: 194:         mR->power+=10;
 10762   0050EA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10763   0050EE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10764   0050F2  0E0A               	movlw	10
 10765   0050F4  26DF               	addwf	indf2,f,c
 10766   0050F6                     
 10767                           ;dc_motor.c: 196:         setMotorPWM(mL);
 10768   0050F6  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10769   0050FA  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10770   0050FE  EC0E  F023         	call	_setMotorPWM	;wreg free
 10771   005102                     
 10772                           ;dc_motor.c: 197:         setMotorPWM(mR);
 10773   005102  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10774   005106  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10775   00510A  EC0E  F023         	call	_setMotorPWM	;wreg free
 10776   00510E                     
 10777                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10778   00510E  0E02               	movlw	2
 10779   005110  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10780   005112  0EA0               	movlw	160
 10781   005114  6E18               	movwf	??_fullSpeedBack^0,c
 10782   005116  0E92               	movlw	146
 10783   005118                     u6087:
 10784   005118  2EE8               	decfsz	wreg,f,c
 10785   00511A  D7FE               	bra	u6087
 10786   00511C  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10787   00511E  D7FC               	bra	u6087
 10788   005120  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10789   005122  D7FA               	bra	u6087
 10790   005124  D000               	nop2	
 10791   005126                     l4190:
 10792   005126  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10793   00512A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10794   00512E  0E32               	movlw	50
 10795   005130  60DF               	cpfslt	indf2,c
 10796   005132  EF9D  F028         	goto	u3491
 10797   005136  EF9F  F028         	goto	u3490
 10798   00513A                     u3491:
 10799   00513A  EFAB  F028         	goto	l470
 10800   00513E                     u3490:
 10801   00513E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10802   005142  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10803   005146  0E31               	movlw	49
 10804   005148  64DF               	cpfsgt	indf2,c
 10805   00514A  EFA9  F028         	goto	u3501
 10806   00514E  EFAB  F028         	goto	u3500
 10807   005152                     u3501:
 10808   005152  EF6F  F028         	goto	l4182
 10809   005156                     u3500:
 10810   005156                     l470:
 10811   005156  0012               	return		;funcret
 10812   005158                     __end_of_fullSpeedBack:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _quaterForward *****************
 10816 ;; Defined at:
 10817 ;;		line 259 in file "dc_motor.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10820 ;;		 -> motorL(9), 
 10821 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10822 ;;		 -> motorR(9), 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;Total ram usage:        6 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; Hardware stack levels required when called: 4
 10841 ;; This function calls:
 10842 ;;		_fullSpeedAhead
 10843 ;;		_stop
 10844 ;; This function is called by:
 10845 ;;		_OrangeMove
 10846 ;;		_LightBlueMove
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           	psect	text60
 10851   0058EC                     __ptext60:
 10852                           	callstack 0
 10853   0058EC                     _quaterForward:
 10854                           	callstack 24
 10855   0058EC                     
 10856                           ;dc_motor.c: 260:     fullSpeedAhead(mL,mR);
 10857   0058EC  C01A  F014         	movff	quaterForward@mL,fullSpeedAhead@mL
 10858   0058F0  C01B  F015         	movff	quaterForward@mL+1,fullSpeedAhead@mL+1
 10859   0058F4  C01C  F016         	movff	quaterForward@mR,fullSpeedAhead@mR
 10860   0058F8  C01D  F017         	movff	quaterForward@mR+1,fullSpeedAhead@mR+1
 10861   0058FC  ECAC  F028         	call	_fullSpeedAhead	;wreg free
 10862   005900                     
 10863                           ;dc_motor.c: 261:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10864   005900  0E19               	movlw	25
 10865   005902  6E1F               	movwf	(??_quaterForward+1)^0,c
 10866   005904  0E5A               	movlw	90
 10867   005906  6E1E               	movwf	??_quaterForward^0,c
 10868   005908  0EB2               	movlw	178
 10869   00590A                     u6097:
 10870   00590A  2EE8               	decfsz	wreg,f,c
 10871   00590C  D7FE               	bra	u6097
 10872   00590E  2E1E               	decfsz	??_quaterForward^0,f,c
 10873   005910  D7FC               	bra	u6097
 10874   005912  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 10875   005914  D7FA               	bra	u6097
 10876   005916                     
 10877                           ;dc_motor.c: 262:     stop(&motorL, &motorR);
 10878   005916  0E61               	movlw	low _motorL
 10879   005918  6E14               	movwf	stop@mL^0,c
 10880   00591A  0E01               	movlw	high _motorL
 10881   00591C  6E15               	movwf	(stop@mL+1)^0,c
 10882   00591E  0E58               	movlw	low _motorR
 10883   005920  6E16               	movwf	stop@mR^0,c
 10884   005922  0E01               	movlw	high _motorR
 10885   005924  6E17               	movwf	(stop@mR+1)^0,c
 10886   005926  EC3F  F029         	call	_stop	;wreg free
 10887                           
 10888                           ;dc_motor.c: 263:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10889   00592A  0E05               	movlw	5
 10890   00592C  6E1F               	movwf	(??_quaterForward+1)^0,c
 10891   00592E  0E0F               	movlw	15
 10892   005930  6E1E               	movwf	??_quaterForward^0,c
 10893   005932  0EF1               	movlw	241
 10894   005934                     u6107:
 10895   005934  2EE8               	decfsz	wreg,f,c
 10896   005936  D7FE               	bra	u6107
 10897   005938  2E1E               	decfsz	??_quaterForward^0,f,c
 10898   00593A  D7FC               	bra	u6107
 10899   00593C  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 10900   00593E  D7FA               	bra	u6107
 10901   005940  F000               	nop	
 10902   005942  0012               	return		;funcret
 10903   005944                     __end_of_quaterForward:
 10904                           	callstack 0
 10905                           
 10906 ;; *************** function _color_click_init *****************
 10907 ;; Defined at:
 10908 ;;		line 8 in file "color.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2, status,0, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;Total ram usage:        1 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 4
 10929 ;; This function calls:
 10930 ;;		_I2C_2_Master_Init
 10931 ;;		_color_writetoaddr
 10932 ;; This function is called by:
 10933 ;;		_main
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text61
 10938   005B34                     __ptext61:
 10939                           	callstack 0
 10940   005B34                     _color_click_init:
 10941                           	callstack 26
 10942   005B34                     
 10943                           ;color.c: 11:     I2C_2_Master_Init();
 10944   005B34  EC2A  F030         	call	_I2C_2_Master_Init	;wreg free
 10945   005B38                     
 10946                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 10947   005B38  0E01               	movlw	1
 10948   005B3A  6E03               	movwf	color_writetoaddr@value^0,c
 10949   005B3C  0E00               	movlw	0
 10950   005B3E  EC79  F030         	call	_color_writetoaddr
 10951   005B42                     
 10952                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10953   005B42  0E3F               	movlw	63
 10954   005B44  6E05               	movwf	??_color_click_init^0,c
 10955   005B46  0E55               	movlw	85
 10956   005B48                     u6117:
 10957   005B48  2EE8               	decfsz	wreg,f,c
 10958   005B4A  D7FE               	bra	u6117
 10959   005B4C  2E05               	decfsz	??_color_click_init^0,f,c
 10960   005B4E  D7FC               	bra	u6117
 10961   005B50  F000               	nop	
 10962   005B52                     
 10963                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 10964   005B52  0E03               	movlw	3
 10965   005B54  6E03               	movwf	color_writetoaddr@value^0,c
 10966   005B56  0E00               	movlw	0
 10967   005B58  EC79  F030         	call	_color_writetoaddr
 10968   005B5C                     
 10969                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 10970   005B5C  0ED5               	movlw	213
 10971   005B5E  6E03               	movwf	color_writetoaddr@value^0,c
 10972   005B60  0E01               	movlw	1
 10973   005B62  EC79  F030         	call	_color_writetoaddr
 10974   005B66                     
 10975                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 10976   005B66  0E00               	movlw	0
 10977   005B68  6E03               	movwf	color_writetoaddr@value^0,c
 10978   005B6A  0E0F               	movlw	15
 10979   005B6C  EC79  F030         	call	_color_writetoaddr
 10980   005B70                     
 10981                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 10982   005B70  9287               	bcf	135,1,c	;volatile
 10983   005B72                     
 10984                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 10985   005B72  9881               	bcf	129,4,c	;volatile
 10986   005B74                     
 10987                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 10988   005B74  9E86               	bcf	134,7,c	;volatile
 10989   005B76                     
 10990                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 10991   005B76  9684               	bcf	132,3,c	;volatile
 10992   005B78                     
 10993                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 10994   005B78  9884               	bcf	132,4,c	;volatile
 10995   005B7A                     
 10996                           ;color.c: 29:     LATGbits.LATG1=0;
 10997   005B7A  927F               	bcf	127,1,c	;volatile
 10998   005B7C                     
 10999                           ;color.c: 30:     LATFbits.LATF7=0;
 11000   005B7C  9E7E               	bcf	126,7,c	;volatile
 11001   005B7E                     
 11002                           ;color.c: 31:     LATAbits.LATA4=0;
 11003   005B7E  9879               	bcf	121,4,c	;volatile
 11004   005B80                     
 11005                           ;color.c: 33:     LATDbits.LATD3=0;
 11006   005B80  967C               	bcf	124,3,c	;volatile
 11007   005B82                     
 11008                           ;color.c: 34:     LATDbits.LATD4=0;
 11009   005B82  987C               	bcf	124,4,c	;volatile
 11010   005B84  0012               	return		;funcret
 11011   005B86                     __end_of_color_click_init:
 11012                           	callstack 0
 11013                           
 11014 ;; *************** function _color_writetoaddr *****************
 11015 ;; Defined at:
 11016 ;;		line 42 in file "color.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  address         1    wreg     unsigned char 
 11019 ;;  value           1    2[COMRAM] unsigned char 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;  address         1    3[COMRAM] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  1    wreg      void 
 11024 ;; Registers used:
 11025 ;;		wreg, status,2, status,0, cstack
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11031 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;Total ram usage:        2 bytes
 11036 ;; Hardware stack levels used: 1
 11037 ;; Hardware stack levels required when called: 3
 11038 ;; This function calls:
 11039 ;;		_I2C_2_Master_Start
 11040 ;;		_I2C_2_Master_Stop
 11041 ;;		_I2C_2_Master_Write
 11042 ;; This function is called by:
 11043 ;;		_color_click_init
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text62
 11048   0060F2                     __ptext62:
 11049                           	callstack 0
 11050   0060F2                     _color_writetoaddr:
 11051                           	callstack 26
 11052                           
 11053                           ;incstack = 0
 11054                           ;color_writetoaddr@address stored from wreg
 11055   0060F2  6E04               	movwf	color_writetoaddr@address^0,c
 11056   0060F4                     
 11057                           ;color.c: 43:     I2C_2_Master_Start();
 11058   0060F4  ECD0  F030         	call	_I2C_2_Master_Start	;wreg free
 11059                           
 11060                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 11061   0060F8  0E52               	movlw	82
 11062   0060FA  ECB4  F030         	call	_I2C_2_Master_Write
 11063                           
 11064                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 11065   0060FE  5004               	movf	color_writetoaddr@address^0,w,c
 11066   006100  0980               	iorlw	128
 11067   006102  ECB4  F030         	call	_I2C_2_Master_Write
 11068                           
 11069                           ;color.c: 46:     I2C_2_Master_Write(value);
 11070   006106  5003               	movf	color_writetoaddr@value^0,w,c
 11071   006108  ECB4  F030         	call	_I2C_2_Master_Write
 11072                           
 11073                           ;color.c: 47:     I2C_2_Master_Stop();
 11074   00610C  ECCB  F030         	call	_I2C_2_Master_Stop	;wreg free
 11075   006110  0012               	return		;funcret
 11076   006112                     __end_of_color_writetoaddr:
 11077                           	callstack 0
 11078                           
 11079 ;; *************** function _I2C_2_Master_Write *****************
 11080 ;; Defined at:
 11081 ;;		line 45 in file "i2c.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  data_byte       1    wreg     unsigned char 
 11084 ;; Auto vars:     Size  Location     Type
 11085 ;;  data_byte       1    1[COMRAM] unsigned char 
 11086 ;; Return value:  Size  Location     Type
 11087 ;;                  1    wreg      void 
 11088 ;; Registers used:
 11089 ;;		wreg, status,2, status,0, cstack
 11090 ;; Tracked objects:
 11091 ;;		On entry : 0/0
 11092 ;;		On exit  : 0/0
 11093 ;;		Unchanged: 0/0
 11094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11099 ;;Total ram usage:        1 bytes
 11100 ;; Hardware stack levels used: 1
 11101 ;; Hardware stack levels required when called: 2
 11102 ;; This function calls:
 11103 ;;		_I2C_2_Master_Idle
 11104 ;; This function is called by:
 11105 ;;		_color_writetoaddr
 11106 ;;		_color_read_lum
 11107 ;;		_color_read_Red
 11108 ;;		_color_read_Green
 11109 ;;		_color_read_Blue
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text63
 11114   006168                     __ptext63:
 11115                           	callstack 0
 11116   006168                     _I2C_2_Master_Write:
 11117                           	callstack 26
 11118                           
 11119                           ;incstack = 0
 11120                           ;I2C_2_Master_Write@data_byte stored from wreg
 11121   006168  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 11122   00616A                     
 11123                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 11124   00616A  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
 11125   00616E                     
 11126                           ;i2c.c: 48:   SSP2BUF = data_byte;
 11127   00616E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11128   006172  0012               	return		;funcret
 11129   006174                     __end_of_I2C_2_Master_Write:
 11130                           	callstack 0
 11131                           
 11132 ;; *************** function _I2C_2_Master_Stop *****************
 11133 ;; Defined at:
 11134 ;;		line 39 in file "i2c.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      void 
 11141 ;; Registers used:
 11142 ;;		wreg, status,2, status,0, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; Hardware stack levels required when called: 2
 11155 ;; This function calls:
 11156 ;;		_I2C_2_Master_Idle
 11157 ;; This function is called by:
 11158 ;;		_color_writetoaddr
 11159 ;;		_color_read_lum
 11160 ;;		_color_read_Red
 11161 ;;		_color_read_Green
 11162 ;;		_color_read_Blue
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text64
 11167   006196                     __ptext64:
 11168                           	callstack 0
 11169   006196                     _I2C_2_Master_Stop:
 11170                           	callstack 26
 11171   006196                     
 11172                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11173   006196  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
 11174   00619A                     
 11175                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11176   00619A  010E               	movlb	14	; () banked
 11177   00619C  85DA               	bsf	218,2,b	;volatile
 11178   00619E                     
 11179                           ; BSR set to: 14
 11180   00619E  0012               	return		;funcret
 11181   0061A0                     __end_of_I2C_2_Master_Stop:
 11182                           	callstack 0
 11183                           
 11184 ;; *************** function _I2C_2_Master_Start *****************
 11185 ;; Defined at:
 11186 ;;		line 27 in file "i2c.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;		None
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;		None
 11191 ;; Return value:  Size  Location     Type
 11192 ;;                  1    wreg      void 
 11193 ;; Registers used:
 11194 ;;		wreg, status,2, status,0, cstack
 11195 ;; Tracked objects:
 11196 ;;		On entry : 0/0
 11197 ;;		On exit  : 0/0
 11198 ;;		Unchanged: 0/0
 11199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11204 ;;Total ram usage:        0 bytes
 11205 ;; Hardware stack levels used: 1
 11206 ;; Hardware stack levels required when called: 2
 11207 ;; This function calls:
 11208 ;;		_I2C_2_Master_Idle
 11209 ;; This function is called by:
 11210 ;;		_color_writetoaddr
 11211 ;;		_color_read_lum
 11212 ;;		_color_read_Red
 11213 ;;		_color_read_Green
 11214 ;;		_color_read_Blue
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text65
 11219   0061A0                     __ptext65:
 11220                           	callstack 0
 11221   0061A0                     _I2C_2_Master_Start:
 11222                           	callstack 26
 11223   0061A0                     
 11224                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11225   0061A0  EC3F  F030         	call	_I2C_2_Master_Idle	;wreg free
 11226   0061A4                     
 11227                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11228   0061A4  010E               	movlb	14	; () banked
 11229   0061A6  81DA               	bsf	218,0,b	;volatile
 11230   0061A8                     
 11231                           ; BSR set to: 14
 11232   0061A8  0012               	return		;funcret
 11233   0061AA                     __end_of_I2C_2_Master_Start:
 11234                           	callstack 0
 11235                           
 11236 ;; *************** function _I2C_2_Master_Idle *****************
 11237 ;; Defined at:
 11238 ;;		line 22 in file "i2c.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;		None
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;		None
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  1    wreg      void 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;Total ram usage:        1 bytes
 11257 ;; Hardware stack levels used: 1
 11258 ;; Hardware stack levels required when called: 1
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_I2C_2_Master_Start
 11263 ;;		_I2C_2_Master_RepStart
 11264 ;;		_I2C_2_Master_Stop
 11265 ;;		_I2C_2_Master_Write
 11266 ;;		_I2C_2_Master_Read
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text66
 11271   00607E                     __ptext66:
 11272                           	callstack 0
 11273   00607E                     _I2C_2_Master_Idle:
 11274                           	callstack 26
 11275   00607E                     l135:
 11276   00607E  010E               	movlb	14	; () banked
 11277   006080  B5D8               	btfsc	216,2,b	;volatile
 11278   006082  EF45  F030         	goto	u4461
 11279   006086  EF47  F030         	goto	u4460
 11280   00608A                     u4461:
 11281   00608A  EF3F  F030         	goto	l135
 11282   00608E                     u4460:
 11283   00608E                     
 11284                           ; BSR set to: 14
 11285   00608E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11286   006092  0E1F               	movlw	31
 11287   006094  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11288   006096  A4D8               	btfss	status,2,c
 11289   006098  EF50  F030         	goto	u4471
 11290   00609C  EF52  F030         	goto	u4470
 11291   0060A0                     u4471:
 11292   0060A0  EF3F  F030         	goto	l135
 11293   0060A4                     u4470:
 11294   0060A4                     
 11295                           ; BSR set to: 14
 11296   0060A4  0012               	return		;funcret
 11297   0060A6                     __end_of_I2C_2_Master_Idle:
 11298                           	callstack 0
 11299                           
 11300 ;; *************** function _I2C_2_Master_Init *****************
 11301 ;; Defined at:
 11302 ;;		line 4 in file "i2c.c"
 11303 ;; Parameters:    Size  Location     Type
 11304 ;;		None
 11305 ;; Auto vars:     Size  Location     Type
 11306 ;;		None
 11307 ;; Return value:  Size  Location     Type
 11308 ;;                  1    wreg      void 
 11309 ;; Registers used:
 11310 ;;		wreg, status,2
 11311 ;; Tracked objects:
 11312 ;;		On entry : 0/0
 11313 ;;		On exit  : 0/0
 11314 ;;		Unchanged: 0/0
 11315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11320 ;;Total ram usage:        0 bytes
 11321 ;; Hardware stack levels used: 1
 11322 ;; Hardware stack levels required when called: 1
 11323 ;; This function calls:
 11324 ;;		Nothing
 11325 ;; This function is called by:
 11326 ;;		_color_click_init
 11327 ;;		_main
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text67
 11332   006054                     __ptext67:
 11333                           	callstack 0
 11334   006054                     _I2C_2_Master_Init:
 11335                           	callstack 28
 11336   006054                     
 11337                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11338   006054  010E               	movlb	14	; () banked
 11339   006056  51D9               	movf	217,w,b	;volatile
 11340   006058  0BF0               	andlw	-16
 11341   00605A  0908               	iorlw	8
 11342   00605C  6FD9               	movwf	217,b	;volatile
 11343   00605E                     
 11344                           ; BSR set to: 14
 11345                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11346   00605E  8BD9               	bsf	217,5,b	;volatile
 11347                           
 11348                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11349   006060  0E9F               	movlw	159
 11350   006062  6FD6               	movwf	214,b	;volatile
 11351   006064                     
 11352                           ; BSR set to: 14
 11353                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11354   006064  8A84               	bsf	132,5,c	;volatile
 11355   006066                     
 11356                           ; BSR set to: 14
 11357                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11358   006066  8C84               	bsf	132,6,c	;volatile
 11359   006068                     
 11360                           ; BSR set to: 14
 11361                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11362   006068  9BA7               	bcf	167,5,b	;volatile
 11363   00606A                     
 11364                           ; BSR set to: 14
 11365                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11366   00606A  9DA7               	bcf	167,6,b	;volatile
 11367                           
 11368                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11369   00606C  0E1D               	movlw	29
 11370   00606E  6F1D               	movwf	29,b	;volatile
 11371                           
 11372                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11373   006070  0E1E               	movlw	30
 11374   006072  6F1C               	movwf	28,b	;volatile
 11375                           
 11376                           ;i2c.c: 18:   RD5PPS=0x1C;
 11377   006074  0E1C               	movlw	28
 11378   006076  6F6F               	movwf	111,b	;volatile
 11379                           
 11380                           ;i2c.c: 19:   RD6PPS=0x1B;
 11381   006078  0E1B               	movlw	27
 11382   00607A  6F70               	movwf	112,b	;volatile
 11383   00607C                     
 11384                           ; BSR set to: 14
 11385   00607C  0012               	return		;funcret
 11386   00607E                     __end_of_I2C_2_Master_Init:
 11387                           	callstack 0
 11388                           
 11389 ;; *************** function _Timer0_init *****************
 11390 ;; Defined at:
 11391 ;;		line 8 in file "timers.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;		None
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      void 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11409 ;;Total ram usage:        0 bytes
 11410 ;; Hardware stack levels used: 1
 11411 ;; Hardware stack levels required when called: 1
 11412 ;; This function calls:
 11413 ;;		Nothing
 11414 ;; This function is called by:
 11415 ;;		_main
 11416 ;; This function uses a non-reentrant model
 11417 ;;
 11418                           
 11419                           	psect	text68
 11420   006112                     __ptext68:
 11421                           	callstack 0
 11422   006112                     _Timer0_init:
 11423                           	callstack 29
 11424   006112                     
 11425                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11426   006112  50D6               	movf	214,w,c	;volatile
 11427   006114  0B1F               	andlw	-225
 11428   006116  0940               	iorlw	64
 11429   006118  6ED6               	movwf	214,c	;volatile
 11430   00611A                     
 11431                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11432   00611A  88D6               	bsf	214,4,c	;volatile
 11433                           
 11434                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11435   00611C  50D6               	movf	214,w,c	;volatile
 11436   00611E  0BF0               	andlw	-16
 11437   006120  090D               	iorlw	13
 11438   006122  6ED6               	movwf	214,c	;volatile
 11439   006124                     
 11440                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11441   006124  88D5               	bsf	213,4,c	;volatile
 11442                           
 11443                           ;timers.c: 16:     TMR0H=0;
 11444   006126  0E00               	movlw	0
 11445   006128  6ED4               	movwf	212,c	;volatile
 11446                           
 11447                           ;timers.c: 17:     TMR0L=0;
 11448   00612A  0E00               	movlw	0
 11449   00612C  6ED3               	movwf	211,c	;volatile
 11450   00612E                     
 11451                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11452   00612E  9ED5               	bcf	213,7,c	;volatile
 11453   006130  0012               	return		;funcret
 11454   006132                     __end_of_Timer0_init:
 11455                           	callstack 0
 11456                           
 11457 ;; *************** function _LED_init *****************
 11458 ;; Defined at:
 11459 ;;		line 6 in file "LED_buttons.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;		None
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;		None
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		None
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;Total ram usage:        0 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; Hardware stack levels required when called: 1
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_main
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text69
 11488   0060A6                     __ptext69:
 11489                           	callstack 0
 11490   0060A6                     _LED_init:
 11491                           	callstack 29
 11492   0060A6                     
 11493                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11494   0060A6  9287               	bcf	135,1,c	;volatile
 11495                           
 11496                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11497   0060A8  9881               	bcf	129,4,c	;volatile
 11498                           
 11499                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11500   0060AA  9E86               	bcf	134,7,c	;volatile
 11501                           
 11502                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11503   0060AC  827F               	bsf	127,1,c	;volatile
 11504                           
 11505                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11506   0060AE  8879               	bsf	121,4,c	;volatile
 11507                           
 11508                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11509   0060B0  8E7E               	bsf	126,7,c	;volatile
 11510                           
 11511                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11512   0060B2  9E7C               	bcf	124,7,c	;volatile
 11513                           
 11514                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11515   0060B4  9E84               	bcf	132,7,c	;volatile
 11516                           
 11517                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11518   0060B6  9680               	bcf	128,3,c	;volatile
 11519                           
 11520                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11521   0060B8  9688               	bcf	136,3,c	;volatile
 11522                           
 11523                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11524   0060BA  9080               	bcf	128,0,c	;volatile
 11525                           
 11526                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11527   0060BC  9088               	bcf	136,0,c	;volatile
 11528                           
 11529                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11530   0060BE  907E               	bcf	126,0,c	;volatile
 11531                           
 11532                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11533   0060C0  9086               	bcf	134,0,c	;volatile
 11534                           
 11535                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11536   0060C2  987C               	bcf	124,4,c	;volatile
 11537                           
 11538                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11539   0060C4  9884               	bcf	132,4,c	;volatile
 11540                           
 11541                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11542   0060C6  967C               	bcf	124,3,c	;volatile
 11543                           
 11544                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11545   0060C8  9684               	bcf	132,3,c	;volatile
 11546   0060CA  0012               	return		;funcret
 11547   0060CC                     __end_of_LED_init:
 11548                           	callstack 0
 11549                           
 11550 ;; *************** function _Interrupts_init *****************
 11551 ;; Defined at:
 11552 ;;		line 9 in file "interrupts.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;		None
 11555 ;; Auto vars:     Size  Location     Type
 11556 ;;		None
 11557 ;; Return value:  Size  Location     Type
 11558 ;;                  1    wreg      void 
 11559 ;; Registers used:
 11560 ;;		None
 11561 ;; Tracked objects:
 11562 ;;		On entry : 0/0
 11563 ;;		On exit  : 0/0
 11564 ;;		Unchanged: 0/0
 11565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11570 ;;Total ram usage:        0 bytes
 11571 ;; Hardware stack levels used: 1
 11572 ;; Hardware stack levels required when called: 1
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		_main
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           	psect	text70
 11581   006174                     __ptext70:
 11582                           	callstack 0
 11583   006174                     _Interrupts_init:
 11584                           	callstack 29
 11585   006174                     
 11586                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11587   006174  9AF2               	bcf	242,5,c	;volatile
 11588                           
 11589                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11590   006176  9CF2               	bcf	242,6,c	;volatile
 11591                           
 11592                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11593   006178  8EF2               	bsf	242,7,c	;volatile
 11594                           
 11595                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11596   00617A  010E               	movlb	14	; () banked
 11597   00617C  8B29               	bsf	41,5,b	;volatile
 11598   00617E                     
 11599                           ; BSR set to: 14
 11600   00617E  0012               	return		;funcret
 11601   006180                     __end_of_Interrupts_init:
 11602                           	callstack 0
 11603                           
 11604 ;; *************** function _Forwardhalfblock *****************
 11605 ;; Defined at:
 11606 ;;		line 253 in file "dc_motor.c"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11609 ;;		 -> motorL(9), 
 11610 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11611 ;;		 -> motorR(9), 
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;Total ram usage:        6 bytes
 11628 ;; Hardware stack levels used: 1
 11629 ;; Hardware stack levels required when called: 4
 11630 ;; This function calls:
 11631 ;;		_fullSpeedAhead
 11632 ;;		_stop
 11633 ;; This function is called by:
 11634 ;;		_main
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text71
 11639   0057E2                     __ptext71:
 11640                           	callstack 0
 11641   0057E2                     _Forwardhalfblock:
 11642                           	callstack 26
 11643   0057E2                     
 11644                           ;dc_motor.c: 254:     fullSpeedAhead(mL,mR);
 11645   0057E2  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11646   0057E6  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11647   0057EA  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11648   0057EE  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11649   0057F2  ECAC  F028         	call	_fullSpeedAhead	;wreg free
 11650   0057F6                     
 11651                           ;dc_motor.c: 255:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11652   0057F6  0E2B               	movlw	43
 11653   0057F8  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11654   0057FA  0E9D               	movlw	157
 11655   0057FC  6E1E               	movwf	??_Forwardhalfblock^0,c
 11656   0057FE  0EF9               	movlw	249
 11657   005800                     u6127:
 11658   005800  2EE8               	decfsz	wreg,f,c
 11659   005802  D7FE               	bra	u6127
 11660   005804  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11661   005806  D7FC               	bra	u6127
 11662   005808  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11663   00580A  D7FA               	bra	u6127
 11664   00580C  F000               	nop	
 11665   00580E                     
 11666                           ;dc_motor.c: 256:     stop(&motorL, &motorR);
 11667   00580E  0E61               	movlw	low _motorL
 11668   005810  6E14               	movwf	stop@mL^0,c
 11669   005812  0E01               	movlw	high _motorL
 11670   005814  6E15               	movwf	(stop@mL+1)^0,c
 11671   005816  0E58               	movlw	low _motorR
 11672   005818  6E16               	movwf	stop@mR^0,c
 11673   00581A  0E01               	movlw	high _motorR
 11674   00581C  6E17               	movwf	(stop@mR+1)^0,c
 11675   00581E  EC3F  F029         	call	_stop	;wreg free
 11676                           
 11677                           ;dc_motor.c: 257:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11678   005822  0E05               	movlw	5
 11679   005824  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11680   005826  0E0F               	movlw	15
 11681   005828  6E1E               	movwf	??_Forwardhalfblock^0,c
 11682   00582A  0EF1               	movlw	241
 11683   00582C                     u6137:
 11684   00582C  2EE8               	decfsz	wreg,f,c
 11685   00582E  D7FE               	bra	u6137
 11686   005830  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11687   005832  D7FC               	bra	u6137
 11688   005834  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11689   005836  D7FA               	bra	u6137
 11690   005838  F000               	nop	
 11691   00583A  0012               	return		;funcret
 11692   00583C                     __end_of_Forwardhalfblock:
 11693                           	callstack 0
 11694                           
 11695 ;; *************** function _stop *****************
 11696 ;; Defined at:
 11697 ;;		line 94 in file "dc_motor.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11700 ;;		 -> motorL(9), 
 11701 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11702 ;;		 -> motorR(9), 
 11703 ;; Auto vars:     Size  Location     Type
 11704 ;;		None
 11705 ;; Return value:  Size  Location     Type
 11706 ;;                  1    wreg      void 
 11707 ;; Registers used:
 11708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11709 ;; Tracked objects:
 11710 ;;		On entry : 0/0
 11711 ;;		On exit  : 0/0
 11712 ;;		Unchanged: 0/0
 11713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;Total ram usage:        6 bytes
 11719 ;; Hardware stack levels used: 1
 11720 ;; Hardware stack levels required when called: 3
 11721 ;; This function calls:
 11722 ;;		_setMotorPWM
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;;		_turnRight45
 11726 ;;		_turnLeft45
 11727 ;;		_reverseDetect
 11728 ;;		_reverseOneBlock
 11729 ;;		_ForwardOneBlock
 11730 ;;		_Forwardhalfblock
 11731 ;;		_quaterForward
 11732 ;;		_Backhalfblock
 11733 ;;		_RetryMove
 11734 ;;		_go_Home
 11735 ;;		_homeReverse
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739                           	psect	text72
 11740   00527E                     __ptext72:
 11741                           	callstack 0
 11742   00527E                     _stop:
 11743                           	callstack 25
 11744   00527E                     
 11745                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11746   00527E  EF65  F029         	goto	l4148
 11747   005282                     l4140:
 11748                           
 11749                           ;dc_motor.c: 98:         mL->power-=10;
 11750   005282  C014  FFD9         	movff	stop@mL,fsr2l
 11751   005286  C015  FFDA         	movff	stop@mL+1,fsr2h
 11752   00528A  0E0A               	movlw	10
 11753   00528C  5EDF               	subwf	indf2,f,c
 11754                           
 11755                           ;dc_motor.c: 99:         mR->power-=10;
 11756   00528E  C016  FFD9         	movff	stop@mR,fsr2l
 11757   005292  C017  FFDA         	movff	stop@mR+1,fsr2h
 11758   005296  0E0A               	movlw	10
 11759   005298  5EDF               	subwf	indf2,f,c
 11760   00529A                     
 11761                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11762   00529A  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11763   00529E  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11764   0052A2  EC0E  F023         	call	_setMotorPWM	;wreg free
 11765   0052A6                     
 11766                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11767   0052A6  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11768   0052AA  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11769   0052AE  EC0E  F023         	call	_setMotorPWM	;wreg free
 11770   0052B2                     
 11771                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11772   0052B2  0E02               	movlw	2
 11773   0052B4  6E19               	movwf	(??_stop+1)^0,c
 11774   0052B6  0EA0               	movlw	160
 11775   0052B8  6E18               	movwf	??_stop^0,c
 11776   0052BA  0E92               	movlw	146
 11777   0052BC                     u6147:
 11778   0052BC  2EE8               	decfsz	wreg,f,c
 11779   0052BE  D7FE               	bra	u6147
 11780   0052C0  2E18               	decfsz	??_stop^0,f,c
 11781   0052C2  D7FC               	bra	u6147
 11782   0052C4  2E19               	decfsz	(??_stop+1)^0,f,c
 11783   0052C6  D7FA               	bra	u6147
 11784   0052C8  D000               	nop2	
 11785   0052CA                     l4148:
 11786                           
 11787                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11788   0052CA  C014  FFD9         	movff	stop@mL,fsr2l
 11789   0052CE  C015  FFDA         	movff	stop@mL+1,fsr2h
 11790   0052D2  50DF               	movf	indf2,w,c
 11791   0052D4  A4D8               	btfss	status,2,c
 11792   0052D6  EF6F  F029         	goto	u3431
 11793   0052DA  EF71  F029         	goto	u3430
 11794   0052DE                     u3431:
 11795   0052DE  EF41  F029         	goto	l4140
 11796   0052E2                     u3430:
 11797   0052E2  C016  FFD9         	movff	stop@mR,fsr2l
 11798   0052E6  C017  FFDA         	movff	stop@mR+1,fsr2h
 11799   0052EA  50DF               	movf	indf2,w,c
 11800   0052EC  A4D8               	btfss	status,2,c
 11801   0052EE  EF7B  F029         	goto	u3441
 11802   0052F2  EF7D  F029         	goto	u3440
 11803   0052F6                     u3441:
 11804   0052F6  EF41  F029         	goto	l4140
 11805   0052FA                     u3440:
 11806   0052FA  0012               	return		;funcret
 11807   0052FC                     __end_of_stop:
 11808                           	callstack 0
 11809                           
 11810 ;; *************** function _fullSpeedAhead *****************
 11811 ;; Defined at:
 11812 ;;		line 148 in file "dc_motor.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11815 ;;		 -> motorL(9), 
 11816 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11817 ;;		 -> motorR(9), 
 11818 ;; Auto vars:     Size  Location     Type
 11819 ;;		None
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  1    wreg      void 
 11822 ;; Registers used:
 11823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11833 ;;Total ram usage:        6 bytes
 11834 ;; Hardware stack levels used: 1
 11835 ;; Hardware stack levels required when called: 3
 11836 ;; This function calls:
 11837 ;;		_setMotorPWM
 11838 ;; This function is called by:
 11839 ;;		_main
 11840 ;;		_ForwardOneBlock
 11841 ;;		_Forwardhalfblock
 11842 ;;		_quaterForward
 11843 ;;		_RetryMove
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text73
 11848   005158                     __ptext73:
 11849                           	callstack 0
 11850   005158                     _fullSpeedAhead:
 11851                           	callstack 24
 11852   005158                     
 11853                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11854   005158  EE20 F001          	lfsr	2,1
 11855   00515C  5014               	movf	fullSpeedAhead@mL^0,w,c
 11856   00515E  26D9               	addwf	fsr2l,f,c
 11857   005160  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11858   005162  22DA               	addwfc	fsr2h,f,c
 11859   005164  0E01               	movlw	1
 11860   005166  6EDF               	movwf	indf2,c
 11861                           
 11862                           ;dc_motor.c: 152:     mR->direction =1;
 11863   005168  EE20 F001          	lfsr	2,1
 11864   00516C  5016               	movf	fullSpeedAhead@mR^0,w,c
 11865   00516E  26D9               	addwf	fsr2l,f,c
 11866   005170  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11867   005172  22DA               	addwfc	fsr2h,f,c
 11868   005174  0E01               	movlw	1
 11869   005176  6EDF               	movwf	indf2,c
 11870                           
 11871                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11872   005178  EFE2  F028         	goto	l4134
 11873   00517C                     l4126:
 11874                           
 11875                           ;dc_motor.c: 155:         mL->power+=10;
 11876   00517C  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11877   005180  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11878   005184  0E0A               	movlw	10
 11879   005186  26DF               	addwf	indf2,f,c
 11880                           
 11881                           ;dc_motor.c: 156:         mR->power+=10;
 11882   005188  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11883   00518C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11884   005190  0E0A               	movlw	10
 11885   005192  26DF               	addwf	indf2,f,c
 11886   005194                     
 11887                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11888   005194  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11889   005198  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11890   00519C  EC0E  F023         	call	_setMotorPWM	;wreg free
 11891   0051A0                     
 11892                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11893   0051A0  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11894   0051A4  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11895   0051A8  EC0E  F023         	call	_setMotorPWM	;wreg free
 11896   0051AC                     
 11897                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11898   0051AC  0E02               	movlw	2
 11899   0051AE  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11900   0051B0  0EA0               	movlw	160
 11901   0051B2  6E18               	movwf	??_fullSpeedAhead^0,c
 11902   0051B4  0E92               	movlw	146
 11903   0051B6                     u6157:
 11904   0051B6  2EE8               	decfsz	wreg,f,c
 11905   0051B8  D7FE               	bra	u6157
 11906   0051BA  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11907   0051BC  D7FC               	bra	u6157
 11908   0051BE  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11909   0051C0  D7FA               	bra	u6157
 11910   0051C2  D000               	nop2	
 11911   0051C4                     l4134:
 11912   0051C4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11913   0051C8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11914   0051CC  0E32               	movlw	50
 11915   0051CE  60DF               	cpfslt	indf2,c
 11916   0051D0  EFEC  F028         	goto	u3411
 11917   0051D4  EFEE  F028         	goto	u3410
 11918   0051D8                     u3411:
 11919   0051D8  EFFA  F028         	goto	l454
 11920   0051DC                     u3410:
 11921   0051DC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11922   0051E0  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11923   0051E4  0E31               	movlw	49
 11924   0051E6  64DF               	cpfsgt	indf2,c
 11925   0051E8  EFF8  F028         	goto	u3421
 11926   0051EC  EFFA  F028         	goto	u3420
 11927   0051F0                     u3421:
 11928   0051F0  EFBE  F028         	goto	l4126
 11929   0051F4                     u3420:
 11930   0051F4                     l454:
 11931   0051F4  0012               	return		;funcret
 11932   0051F6                     __end_of_fullSpeedAhead:
 11933                           	callstack 0
 11934                           
 11935 ;; *************** function _setMotorPWM *****************
 11936 ;; Defined at:
 11937 ;;		line 69 in file "dc_motor.c"
 11938 ;; Parameters:    Size  Location     Type
 11939 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11940 ;;		 -> motorR(9), motorL(9), 
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;  negDuty         1   18[COMRAM] unsigned char 
 11943 ;;  posDuty         1   17[COMRAM] unsigned char 
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      void 
 11946 ;; Registers used:
 11947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11956 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11957 ;;Total ram usage:        6 bytes
 11958 ;; Hardware stack levels used: 1
 11959 ;; Hardware stack levels required when called: 2
 11960 ;; This function calls:
 11961 ;;		___lwdiv
 11962 ;;		___wmul
 11963 ;; This function is called by:
 11964 ;;		_stop
 11965 ;;		_turnLeft
 11966 ;;		_turnRight
 11967 ;;		_fullSpeedAhead
 11968 ;;		_timed_forward
 11969 ;;		_fullSpeedBack
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           	psect	text74
 11974   00461C                     __ptext74:
 11975                           	callstack 0
 11976   00461C                     _setMotorPWM:
 11977                           	callstack 25
 11978   00461C                     
 11979                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11980   00461C  EE20 F002          	lfsr	2,2
 11981   004620  500E               	movf	setMotorPWM@m^0,w,c
 11982   004622  26D9               	addwf	fsr2l,f,c
 11983   004624  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11984   004626  22DA               	addwfc	fsr2h,f,c
 11985   004628  50DF               	movf	indf2,w,c
 11986   00462A  B4D8               	btfsc	status,2,c
 11987   00462C  EF1A  F023         	goto	u2991
 11988   004630  EF1C  F023         	goto	u2990
 11989   004634                     u2991:
 11990   004634  EF50  F023         	goto	l3904
 11991   004638                     u2990:
 11992   004638                     
 11993                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11994   004638  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11995   00463C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11996   004640  50DF               	movf	indf2,w,c
 11997   004642  6E10               	movwf	??_setMotorPWM^0,c
 11998   004644  5010               	movf	??_setMotorPWM^0,w,c
 11999   004646  6E01               	movwf	___wmul@multiplier^0,c
 12000   004648  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12001   00464A  EE20 F003          	lfsr	2,3
 12002   00464E  500E               	movf	setMotorPWM@m^0,w,c
 12003   004650  26D9               	addwf	fsr2l,f,c
 12004   004652  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12005   004654  22DA               	addwfc	fsr2h,f,c
 12006   004656  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12007   00465A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12008   00465E  EC66  F030         	call	___wmul	;wreg free
 12009   004662  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12010   004666  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12011   00466A  0E00               	movlw	0
 12012   00466C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12013   00466E  0E64               	movlw	100
 12014   004670  6E09               	movwf	___lwdiv@divisor^0,c
 12015   004672  ECF8  F029         	call	___lwdiv	;wreg free
 12016   004676  EE20 F003          	lfsr	2,3
 12017   00467A  500E               	movf	setMotorPWM@m^0,w,c
 12018   00467C  26D9               	addwf	fsr2l,f,c
 12019   00467E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12020   004680  22DA               	addwfc	fsr2h,f,c
 12021   004682  50DF               	movf	indf2,w,c
 12022   004684  6E11               	movwf	(??_setMotorPWM+1)^0,c
 12023   004686  5007               	movf	?___lwdiv^0,w,c
 12024   004688  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 12025   00468A  6E12               	movwf	setMotorPWM@posDuty^0,c
 12026   00468C                     
 12027                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 12028   00468C  EE20 F003          	lfsr	2,3
 12029   004690  500E               	movf	setMotorPWM@m^0,w,c
 12030   004692  26D9               	addwf	fsr2l,f,c
 12031   004694  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12032   004696  22DA               	addwfc	fsr2h,f,c
 12033   004698  50DF               	movf	indf2,w,c
 12034   00469A  6E13               	movwf	setMotorPWM@negDuty^0,c
 12035                           
 12036                           ;dc_motor.c: 76:     }
 12037   00469C  EF73  F023         	goto	l3908
 12038   0046A0                     l3904:
 12039                           
 12040                           ;dc_motor.c: 78:         posDuty=0;
 12041   0046A0  0E00               	movlw	0
 12042   0046A2  6E12               	movwf	setMotorPWM@posDuty^0,c
 12043   0046A4                     
 12044                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12045   0046A4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12046   0046A8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12047   0046AC  50DF               	movf	indf2,w,c
 12048   0046AE  6E10               	movwf	??_setMotorPWM^0,c
 12049   0046B0  5010               	movf	??_setMotorPWM^0,w,c
 12050   0046B2  6E01               	movwf	___wmul@multiplier^0,c
 12051   0046B4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12052   0046B6  EE20 F003          	lfsr	2,3
 12053   0046BA  500E               	movf	setMotorPWM@m^0,w,c
 12054   0046BC  26D9               	addwf	fsr2l,f,c
 12055   0046BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12056   0046C0  22DA               	addwfc	fsr2h,f,c
 12057   0046C2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12058   0046C6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12059   0046CA  EC66  F030         	call	___wmul	;wreg free
 12060   0046CE  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12061   0046D2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12062   0046D6  0E00               	movlw	0
 12063   0046D8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12064   0046DA  0E64               	movlw	100
 12065   0046DC  6E09               	movwf	___lwdiv@divisor^0,c
 12066   0046DE  ECF8  F029         	call	___lwdiv	;wreg free
 12067   0046E2  5007               	movf	?___lwdiv^0,w,c
 12068   0046E4  6E13               	movwf	setMotorPWM@negDuty^0,c
 12069   0046E6                     l3908:
 12070                           
 12071                           ;dc_motor.c: 82:     if (m->direction) {
 12072   0046E6  EE20 F001          	lfsr	2,1
 12073   0046EA  500E               	movf	setMotorPWM@m^0,w,c
 12074   0046EC  26D9               	addwf	fsr2l,f,c
 12075   0046EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12076   0046F0  22DA               	addwfc	fsr2h,f,c
 12077   0046F2  50DF               	movf	indf2,w,c
 12078   0046F4  B4D8               	btfsc	status,2,c
 12079   0046F6  EF7F  F023         	goto	u3001
 12080   0046FA  EF81  F023         	goto	u3000
 12081   0046FE                     u3001:
 12082   0046FE  EFA3  F023         	goto	l3912
 12083   004702                     u3000:
 12084   004702                     
 12085                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 12086   004702  EE20 F005          	lfsr	2,5
 12087   004706  500E               	movf	setMotorPWM@m^0,w,c
 12088   004708  26D9               	addwf	fsr2l,f,c
 12089   00470A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12090   00470C  22DA               	addwfc	fsr2h,f,c
 12091   00470E  CFDE F010          	movff	postinc2,??_setMotorPWM
 12092   004712  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12093   004716  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12094   00471A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12095   00471E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12096                           
 12097                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 12098   004722  EE20 F007          	lfsr	2,7
 12099   004726  500E               	movf	setMotorPWM@m^0,w,c
 12100   004728  26D9               	addwf	fsr2l,f,c
 12101   00472A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12102   00472C  22DA               	addwfc	fsr2h,f,c
 12103   00472E  CFDE F010          	movff	postinc2,??_setMotorPWM
 12104   004732  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12105   004736  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12106   00473A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12107   00473E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12108                           
 12109                           ;dc_motor.c: 87:     } else {
 12110   004742  EFC3  F023         	goto	l424
 12111   004746                     l3912:
 12112                           
 12113                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 12114   004746  EE20 F005          	lfsr	2,5
 12115   00474A  500E               	movf	setMotorPWM@m^0,w,c
 12116   00474C  26D9               	addwf	fsr2l,f,c
 12117   00474E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12118   004750  22DA               	addwfc	fsr2h,f,c
 12119   004752  CFDE F010          	movff	postinc2,??_setMotorPWM
 12120   004756  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12121   00475A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12122   00475E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12123   004762  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12124                           
 12125                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 12126   004766  EE20 F007          	lfsr	2,7
 12127   00476A  500E               	movf	setMotorPWM@m^0,w,c
 12128   00476C  26D9               	addwf	fsr2l,f,c
 12129   00476E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12130   004770  22DA               	addwfc	fsr2h,f,c
 12131   004772  CFDE F010          	movff	postinc2,??_setMotorPWM
 12132   004776  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12133   00477A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12134   00477E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12135   004782  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12136   004786                     l424:
 12137   004786  0012               	return		;funcret
 12138   004788                     __end_of_setMotorPWM:
 12139                           	callstack 0
 12140                           
 12141 ;; *************** function ___wmul *****************
 12142 ;; Defined at:
 12143 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;  multiplier      2    0[COMRAM] unsigned int 
 12146 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  product         2    4[COMRAM] unsigned int 
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  2    0[COMRAM] unsigned int 
 12151 ;; Registers used:
 12152 ;;		wreg, status,2, status,0, prodl, prodh
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12158 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12162 ;;Total ram usage:        6 bytes
 12163 ;; Hardware stack levels used: 1
 12164 ;; Hardware stack levels required when called: 1
 12165 ;; This function calls:
 12166 ;;		Nothing
 12167 ;; This function is called by:
 12168 ;;		_setMotorPWM
 12169 ;; This function uses a non-reentrant model
 12170 ;;
 12171                           
 12172                           	psect	text75
 12173   0060CC                     __ptext75:
 12174                           	callstack 0
 12175   0060CC                     ___wmul:
 12176                           	callstack 25
 12177   0060CC  5001               	movf	___wmul@multiplier^0,w,c
 12178   0060CE  0203               	mulwf	___wmul@multiplicand^0,c
 12179   0060D0  CFF3 F005          	movff	prodl,___wmul@product
 12180   0060D4  CFF4 F006          	movff	prodh,___wmul@product+1
 12181   0060D8  5001               	movf	___wmul@multiplier^0,w,c
 12182   0060DA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12183   0060DC  50F3               	movf	243,w,c
 12184   0060DE  2606               	addwf	(___wmul@product+1)^0,f,c
 12185   0060E0  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12186   0060E2  0203               	mulwf	___wmul@multiplicand^0,c
 12187   0060E4  50F3               	movf	243,w,c
 12188   0060E6  2606               	addwf	(___wmul@product+1)^0,f,c
 12189   0060E8  C005  F001         	movff	___wmul@product,?___wmul
 12190   0060EC  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12191   0060F0  0012               	return		;funcret
 12192   0060F2                     __end_of___wmul:
 12193                           	callstack 0
 12194                           
 12195 ;; *************** function ___lwdiv *****************
 12196 ;; Defined at:
 12197 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  dividend        2    6[COMRAM] unsigned int 
 12200 ;;  divisor         2    8[COMRAM] unsigned int 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  quotient        2   10[COMRAM] unsigned int 
 12203 ;;  counter         1   12[COMRAM] unsigned char 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  2    6[COMRAM] unsigned int 
 12206 ;; Registers used:
 12207 ;;		wreg, status,2, status,0
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12214 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12216 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12217 ;;Total ram usage:        7 bytes
 12218 ;; Hardware stack levels used: 1
 12219 ;; Hardware stack levels required when called: 1
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_setMotorPWM
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           	psect	text76
 12228   0053F0                     __ptext76:
 12229                           	callstack 0
 12230   0053F0                     ___lwdiv:
 12231                           	callstack 25
 12232   0053F0  0E00               	movlw	0
 12233   0053F2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12234   0053F4  0E00               	movlw	0
 12235   0053F6  6E0B               	movwf	___lwdiv@quotient^0,c
 12236   0053F8  5009               	movf	___lwdiv@divisor^0,w,c
 12237   0053FA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12238   0053FC  B4D8               	btfsc	status,2,c
 12239   0053FE  EF03  F02A         	goto	u2921
 12240   005402  EF05  F02A         	goto	u2920
 12241   005406                     u2921:
 12242   005406  EF2D  F02A         	goto	l1248
 12243   00540A                     u2920:
 12244   00540A  0E01               	movlw	1
 12245   00540C  6E0D               	movwf	___lwdiv@counter^0,c
 12246   00540E  EF0D  F02A         	goto	l3870
 12247   005412                     l3868:
 12248   005412  90D8               	bcf	status,0,c
 12249   005414  3609               	rlcf	___lwdiv@divisor^0,f,c
 12250   005416  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12251   005418  2A0D               	incf	___lwdiv@counter^0,f,c
 12252   00541A                     l3870:
 12253   00541A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 12254   00541C  EF12  F02A         	goto	u2931
 12255   005420  EF14  F02A         	goto	u2930
 12256   005424                     u2931:
 12257   005424  EF09  F02A         	goto	l3868
 12258   005428                     u2930:
 12259   005428                     l3872:
 12260   005428  90D8               	bcf	status,0,c
 12261   00542A  360B               	rlcf	___lwdiv@quotient^0,f,c
 12262   00542C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12263   00542E  5009               	movf	___lwdiv@divisor^0,w,c
 12264   005430  5C07               	subwf	___lwdiv@dividend^0,w,c
 12265   005432  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12266   005434  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12267   005436  A0D8               	btfss	status,0,c
 12268   005438  EF20  F02A         	goto	u2941
 12269   00543C  EF22  F02A         	goto	u2940
 12270   005440                     u2941:
 12271   005440  EF27  F02A         	goto	l3880
 12272   005444                     u2940:
 12273   005444  5009               	movf	___lwdiv@divisor^0,w,c
 12274   005446  5E07               	subwf	___lwdiv@dividend^0,f,c
 12275   005448  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12276   00544A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12277   00544C  800B               	bsf	___lwdiv@quotient^0,0,c
 12278   00544E                     l3880:
 12279   00544E  90D8               	bcf	status,0,c
 12280   005450  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12281   005452  3209               	rrcf	___lwdiv@divisor^0,f,c
 12282   005454  2E0D               	decfsz	___lwdiv@counter^0,f,c
 12283   005456  EF14  F02A         	goto	l3872
 12284   00545A                     l1248:
 12285   00545A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 12286   00545E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12287   005462  0012               	return		;funcret
 12288   005464                     __end_of___lwdiv:
 12289                           	callstack 0
 12290                           
 12291 ;; *************** function _Colour_decider *****************
 12292 ;; Defined at:
 12293 ;;		line 126 in file "color.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  vals            2   74[COMRAM] PTR struct RGB
 12296 ;;		 -> vals(8), 
 12297 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 12298 ;;		 -> rel(12), 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  RGB_col        12    6[BANK0 ] float [3]
 12301 ;;  Hue             4   28[BANK0 ] float 
 12302 ;;  Cmin            4   22[BANK0 ] float 
 12303 ;;  Cmax            4   18[BANK0 ] float 
 12304 ;;  i               2   26[BANK0 ] int 
 12305 ;;  Cmax_i          2    4[BANK0 ] int 
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  2   74[COMRAM] int 
 12308 ;; Registers used:
 12309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12316 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12318 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12319 ;;Total ram usage:       38 bytes
 12320 ;; Hardware stack levels used: 1
 12321 ;; Hardware stack levels required when called: 3
 12322 ;; This function calls:
 12323 ;;		___fladd
 12324 ;;		___fldiv
 12325 ;;		___fleq
 12326 ;;		___flge
 12327 ;;		___flmul
 12328 ;;		___flsub
 12329 ;;		___xxtofl
 12330 ;; This function is called by:
 12331 ;;		_main
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           	psect	text77
 12336   001838                     __ptext77:
 12337                           	callstack 0
 12338   001838                     _Colour_decider:
 12339                           	callstack 27
 12340   001838                     
 12341                           ;color.c: 127:     float Cmax = 0;
 12342   001838  0E00               	movlw	0
 12343   00183A  0100               	movlb	0	; () banked
 12344   00183C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12345   00183E  0E00               	movlw	0
 12346   001840  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12347   001842  0E00               	movlw	0
 12348   001844  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12349   001846  0E00               	movlw	0
 12350   001848  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12351                           
 12352                           ;color.c: 128:     float Cmin= 100000;
 12353   00184A  0E00               	movlw	0
 12354   00184C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12355   00184E  0E50               	movlw	80
 12356   001850  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12357   001852  0EC3               	movlw	195
 12358   001854  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12359   001856  0E47               	movlw	71
 12360   001858  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12361                           
 12362                           ;color.c: 129:     int Cmax_i =4;
 12363   00185A  0E00               	movlw	0
 12364   00185C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12365   00185E  0E04               	movlw	4
 12366   001860  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12367   001862                     
 12368                           ; BSR set to: 0
 12369                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12370   001862  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12371   001866  0E0B               	movlw	11
 12372   001868                     u5191:
 12373   001868  6ADE               	clrf	postinc2,c
 12374   00186A  06E8               	decf	wreg,f,c
 12375   00186C  E2FD               	bc	u5191
 12376   00186E                     
 12377                           ; BSR set to: 0
 12378   00186E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12379   001872  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12380   001876  CFDE F001          	movff	postinc2,___xxtofl@val
 12381   00187A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12382   00187E  0E00               	movlw	0
 12383   001880  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12384   001882  0EFF               	movlw	-1
 12385   001884  6E03               	movwf	(___xxtofl@val+2)^0,c
 12386   001886  6E04               	movwf	(___xxtofl@val+3)^0,c
 12387   001888  0E01               	movlw	1
 12388   00188A  EC9A  F020         	call	___xxtofl
 12389   00188E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12390   001892  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12391   001896  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12392   00189A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12393   00189E  EE20 F002          	lfsr	2,2
 12394   0018A2  504B               	movf	Colour_decider@vals^0,w,c
 12395   0018A4  26D9               	addwf	fsr2l,f,c
 12396   0018A6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12397   0018A8  22DA               	addwfc	fsr2h,f,c
 12398   0018AA  CFDE F001          	movff	postinc2,___xxtofl@val
 12399   0018AE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12400   0018B2  0E00               	movlw	0
 12401   0018B4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12402   0018B6  0EFF               	movlw	-1
 12403   0018B8  6E03               	movwf	(___xxtofl@val+2)^0,c
 12404   0018BA  6E04               	movwf	(___xxtofl@val+3)^0,c
 12405   0018BC  0E01               	movlw	1
 12406   0018BE  EC9A  F020         	call	___xxtofl
 12407   0018C2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12408   0018C6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12409   0018CA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12410   0018CE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12411   0018D2  EE20 F004          	lfsr	2,4
 12412   0018D6  504B               	movf	Colour_decider@vals^0,w,c
 12413   0018D8  26D9               	addwf	fsr2l,f,c
 12414   0018DA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12415   0018DC  22DA               	addwfc	fsr2h,f,c
 12416   0018DE  CFDE F001          	movff	postinc2,___xxtofl@val
 12417   0018E2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12418   0018E6  0E00               	movlw	0
 12419   0018E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12420   0018EA  0EFF               	movlw	-1
 12421   0018EC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12422   0018EE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12423   0018F0  0E01               	movlw	1
 12424   0018F2  EC9A  F020         	call	___xxtofl
 12425   0018F6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12426   0018FA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12427   0018FE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12428   001902  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12429   001906                     
 12430                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12431   001906  0E00               	movlw	0
 12432   001908  0100               	movlb	0	; () banked
 12433   00190A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12434   00190C  0E00               	movlw	0
 12435   00190E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12436   001910                     l5426:
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12440   001910  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12441   001914  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12442   001918  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12443   00191C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12444   001920  0E66               	movlw	low Colour_decider@RGB_col
 12445   001922  6E4F               	movwf	??_Colour_decider^0,c
 12446   001924  0E00               	movlw	high Colour_decider@RGB_col
 12447   001926  6E50               	movwf	(??_Colour_decider+1)^0,c
 12448   001928  90D8               	bcf	status,0,c
 12449   00192A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12450   00192C  6ED9               	movwf	fsr2l,c
 12451   00192E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12452   001930  6EDA               	movwf	fsr2h,c
 12453   001932  90D8               	bcf	status,0,c
 12454   001934  36D9               	rlcf	fsr2l,f,c
 12455   001936  36DA               	rlcf	fsr2h,f,c
 12456   001938  504F               	movf	??_Colour_decider^0,w,c
 12457   00193A  26D9               	addwf	fsr2l,f,c
 12458   00193C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12459   00193E  22DA               	addwfc	fsr2h,f,c
 12460   001940  CFDE F02E          	movff	postinc2,___flge@ff2
 12461   001944  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12462   001948  CFDE F030          	movff	postinc2,___flge@ff2+2
 12463   00194C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12464   001950  ECF9  F024         	call	___flge	;wreg free
 12465   001954  B0D8               	btfsc	status,0,c
 12466   001956  EFAF  F00C         	goto	u5201
 12467   00195A  EFB1  F00C         	goto	u5200
 12468   00195E                     u5201:
 12469   00195E  EFCE  F00C         	goto	l5432
 12470   001962                     u5200:
 12471   001962                     
 12472                           ;color.c: 138:             Cmax=RGB_col[i];
 12473   001962  0E66               	movlw	low Colour_decider@RGB_col
 12474   001964  6E4F               	movwf	??_Colour_decider^0,c
 12475   001966  0E00               	movlw	high Colour_decider@RGB_col
 12476   001968  6E50               	movwf	(??_Colour_decider+1)^0,c
 12477   00196A  90D8               	bcf	status,0,c
 12478   00196C  0100               	movlb	0	; () banked
 12479   00196E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12480   001970  6ED9               	movwf	fsr2l,c
 12481   001972  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12482   001974  6EDA               	movwf	fsr2h,c
 12483   001976  90D8               	bcf	status,0,c
 12484   001978  36D9               	rlcf	fsr2l,f,c
 12485   00197A  36DA               	rlcf	fsr2h,f,c
 12486   00197C  504F               	movf	??_Colour_decider^0,w,c
 12487   00197E  26D9               	addwf	fsr2l,f,c
 12488   001980  5050               	movf	(??_Colour_decider+1)^0,w,c
 12489   001982  22DA               	addwfc	fsr2h,f,c
 12490   001984  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12491   001988  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12492   00198C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12493   001990  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12494   001994                     
 12495                           ; BSR set to: 0
 12496                           ;color.c: 139:             Cmax_i=i;
 12497   001994  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12498   001998  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12499   00199C                     l5432:
 12500                           
 12501                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12502   00199C  0E66               	movlw	low Colour_decider@RGB_col
 12503   00199E  6E4F               	movwf	??_Colour_decider^0,c
 12504   0019A0  0E00               	movlw	high Colour_decider@RGB_col
 12505   0019A2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12506   0019A4  90D8               	bcf	status,0,c
 12507   0019A6  0100               	movlb	0	; () banked
 12508   0019A8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12509   0019AA  6ED9               	movwf	fsr2l,c
 12510   0019AC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12511   0019AE  6EDA               	movwf	fsr2h,c
 12512   0019B0  90D8               	bcf	status,0,c
 12513   0019B2  36D9               	rlcf	fsr2l,f,c
 12514   0019B4  36DA               	rlcf	fsr2h,f,c
 12515   0019B6  504F               	movf	??_Colour_decider^0,w,c
 12516   0019B8  26D9               	addwf	fsr2l,f,c
 12517   0019BA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12518   0019BC  22DA               	addwfc	fsr2h,f,c
 12519   0019BE  CFDE F02A          	movff	postinc2,___flge@ff1
 12520   0019C2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12521   0019C6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12522   0019CA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12523   0019CE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12524   0019D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12525   0019D6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12526   0019DA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12527   0019DE  ECF9  F024         	call	___flge	;wreg free
 12528   0019E2  B0D8               	btfsc	status,0,c
 12529   0019E4  EFF6  F00C         	goto	u5211
 12530   0019E8  EFF8  F00C         	goto	u5210
 12531   0019EC                     u5211:
 12532   0019EC  EF11  F00D         	goto	l5436
 12533   0019F0                     u5210:
 12534   0019F0  0E66               	movlw	low Colour_decider@RGB_col
 12535   0019F2  6E4F               	movwf	??_Colour_decider^0,c
 12536   0019F4  0E00               	movlw	high Colour_decider@RGB_col
 12537   0019F6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12538   0019F8  90D8               	bcf	status,0,c
 12539   0019FA  0100               	movlb	0	; () banked
 12540   0019FC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12541   0019FE  6ED9               	movwf	fsr2l,c
 12542   001A00  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12543   001A02  6EDA               	movwf	fsr2h,c
 12544   001A04  90D8               	bcf	status,0,c
 12545   001A06  36D9               	rlcf	fsr2l,f,c
 12546   001A08  36DA               	rlcf	fsr2h,f,c
 12547   001A0A  504F               	movf	??_Colour_decider^0,w,c
 12548   001A0C  26D9               	addwf	fsr2l,f,c
 12549   001A0E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12550   001A10  22DA               	addwfc	fsr2h,f,c
 12551   001A12  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12552   001A16  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12553   001A1A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12554   001A1E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12555   001A22                     l5436:
 12556                           
 12557                           ;color.c: 142:     }
 12558   001A22  0100               	movlb	0	; () banked
 12559   001A24  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12560   001A26  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12561   001A28                     
 12562                           ; BSR set to: 0
 12563   001A28  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12564   001A2A  EF20  F00D         	goto	u5221
 12565   001A2E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12566   001A30  E109               	bnz	u5220
 12567   001A32  0E03               	movlw	3
 12568   001A34  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12569   001A36  A0D8               	btfss	status,0,c
 12570   001A38  EF20  F00D         	goto	u5221
 12571   001A3C  EF22  F00D         	goto	u5220
 12572   001A40                     u5221:
 12573   001A40  EF88  F00C         	goto	l5426
 12574   001A44                     u5220:
 12575   001A44                     
 12576                           ; BSR set to: 0
 12577                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12578   001A44  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12579   001A48  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12580   001A4C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12581   001A50  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12582   001A54  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12583   001A58  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12584   001A5C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12585   001A60  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12586   001A64  ECD9  F02E         	call	___flsub	;wreg free
 12587   001A68  C02A  F032         	movff	?___flsub,___fleq@ff1
 12588   001A6C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12589   001A70  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12590   001A74  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12591   001A78  0E00               	movlw	0
 12592   001A7A  6E36               	movwf	___fleq@ff2^0,c
 12593   001A7C  0E00               	movlw	0
 12594   001A7E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12595   001A80  0E00               	movlw	0
 12596   001A82  6E38               	movwf	(___fleq@ff2+2)^0,c
 12597   001A84  0E00               	movlw	0
 12598   001A86  6E39               	movwf	(___fleq@ff2+3)^0,c
 12599   001A88  EC6A  F027         	call	___fleq	;wreg free
 12600   001A8C  A0D8               	btfss	status,0,c
 12601   001A8E  EF4B  F00D         	goto	u5231
 12602   001A92  EF4D  F00D         	goto	u5230
 12603   001A96                     u5231:
 12604   001A96  EF53  F00D         	goto	l5446
 12605   001A9A                     u5230:
 12606   001A9A                     l5442:
 12607   001A9A  0E00               	movlw	0
 12608   001A9C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12609   001A9E  0E00               	movlw	0
 12610   001AA0  6E4B               	movwf	?_Colour_decider^0,c
 12611   001AA2  EF15  F011         	goto	l80
 12612   001AA6                     l5446:
 12613                           
 12614                           ;color.c: 147:     if (Cmax_i==0){
 12615   001AA6  0100               	movlb	0	; () banked
 12616   001AA8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12617   001AAA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12618   001AAC  A4D8               	btfss	status,2,c
 12619   001AAE  EF5B  F00D         	goto	u5241
 12620   001AB2  EF5D  F00D         	goto	u5240
 12621   001AB6                     u5241:
 12622   001AB6  EFD1  F00D         	goto	l5454
 12623   001ABA                     u5240:
 12624   001ABA                     
 12625                           ; BSR set to: 0
 12626                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12627   001ABA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12628   001ABE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12629   001AC2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12630   001AC6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12631   001ACA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12632   001ACE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12633   001AD2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12634   001AD6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12635   001ADA  ECD9  F02E         	call	___flsub	;wreg free
 12636   001ADE  C02A  F036         	movff	?___flsub,___fldiv@a
 12637   001AE2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12638   001AE6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12639   001AEA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12640   001AEE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12641   001AF2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12642   001AF6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12643   001AFA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12644   001AFE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12645   001B02  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12646   001B06  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12647   001B0A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12648   001B0E  ECD9  F02E         	call	___flsub	;wreg free
 12649   001B12  C02A  F032         	movff	?___flsub,___fldiv@b
 12650   001B16  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12651   001B1A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12652   001B1E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12653   001B22  EC8B  F015         	call	___fldiv	;wreg free
 12654   001B26  C032  F011         	movff	?___fldiv,___flmul@b
 12655   001B2A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12656   001B2E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12657   001B32  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12658   001B36  0E00               	movlw	0
 12659   001B38  6E15               	movwf	___flmul@a^0,c
 12660   001B3A  0E00               	movlw	0
 12661   001B3C  6E16               	movwf	(___flmul@a+1)^0,c
 12662   001B3E  0E70               	movlw	112
 12663   001B40  6E17               	movwf	(___flmul@a+2)^0,c
 12664   001B42  0E42               	movlw	66
 12665   001B44  6E18               	movwf	(___flmul@a+3)^0,c
 12666   001B46  EC76  F013         	call	___flmul	;wreg free
 12667   001B4A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12668   001B4E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12669   001B52  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12670   001B56  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12671   001B5A                     
 12672                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12673   001B5A  0100               	movlb	0	; () banked
 12674   001B5C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12675   001B5E  EFB5  F00D         	goto	u5250
 12676   001B62  EFB3  F00D         	goto	u5251
 12677   001B66                     u5251:
 12678   001B66  EFB0  F00E         	goto	l5464
 12679   001B6A                     u5250:
 12680   001B6A                     
 12681                           ; BSR set to: 0
 12682   001B6A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12683   001B6E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12684   001B72  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12685   001B76  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12686   001B7A  0E00               	movlw	0
 12687   001B7C  6E05               	movwf	___fladd@a^0,c
 12688   001B7E  0E00               	movlw	0
 12689   001B80  6E06               	movwf	(___fladd@a+1)^0,c
 12690   001B82  0EB4               	movlw	180
 12691   001B84  6E07               	movwf	(___fladd@a+2)^0,c
 12692   001B86  0E43               	movlw	67
 12693   001B88  6E08               	movwf	(___fladd@a+3)^0,c
 12694   001B8A  EC16  F011         	call	___fladd	;wreg free
 12695   001B8E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12696   001B92  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12697   001B96  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12698   001B9A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12699   001B9E  EFB0  F00E         	goto	l5464
 12700   001BA2                     l5454:
 12701                           
 12702                           ; BSR set to: 0
 12703   001BA2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12704   001BA4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12705   001BA6  A4D8               	btfss	status,2,c
 12706   001BA8  EFD8  F00D         	goto	u5261
 12707   001BAC  EFDA  F00D         	goto	u5260
 12708   001BB0                     u5261:
 12709   001BB0  EF46  F00E         	goto	l5460
 12710   001BB4                     u5260:
 12711   001BB4                     
 12712                           ; BSR set to: 0
 12713                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12714   001BB4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12715   001BB8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12716   001BBC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12717   001BC0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12718   001BC4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12719   001BC8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12720   001BCC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12721   001BD0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12722   001BD4  ECD9  F02E         	call	___flsub	;wreg free
 12723   001BD8  C02A  F036         	movff	?___flsub,___fldiv@a
 12724   001BDC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12725   001BE0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12726   001BE4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12727   001BE8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12728   001BEC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12729   001BF0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12730   001BF4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12731   001BF8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12732   001BFC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12733   001C00  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12734   001C04  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12735   001C08  ECD9  F02E         	call	___flsub	;wreg free
 12736   001C0C  C02A  F032         	movff	?___flsub,___fldiv@b
 12737   001C10  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12738   001C14  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12739   001C18  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12740   001C1C  EC8B  F015         	call	___fldiv	;wreg free
 12741   001C20  C032  F060         	movff	?___fldiv,_Colour_decider$3283
 12742   001C24  C033  F061         	movff	?___fldiv+1,_Colour_decider$3283+1
 12743   001C28  C034  F062         	movff	?___fldiv+2,_Colour_decider$3283+2
 12744   001C2C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3283+3
 12745   001C30                     
 12746                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12747   001C30  0E00               	movlw	0
 12748   001C32  6E05               	movwf	___fladd@a^0,c
 12749   001C34  0E00               	movlw	0
 12750   001C36  6E06               	movwf	(___fladd@a+1)^0,c
 12751   001C38  0E00               	movlw	0
 12752   001C3A  6E07               	movwf	(___fladd@a+2)^0,c
 12753   001C3C  0E40               	movlw	64
 12754   001C3E  6E08               	movwf	(___fladd@a+3)^0,c
 12755   001C40  C060  F001         	movff	_Colour_decider$3283,___fladd@b
 12756   001C44  C061  F002         	movff	_Colour_decider$3283+1,___fladd@b+1
 12757   001C48  C062  F003         	movff	_Colour_decider$3283+2,___fladd@b+2
 12758   001C4C  C063  F004         	movff	_Colour_decider$3283+3,___fladd@b+3
 12759   001C50  EC16  F011         	call	___fladd	;wreg free
 12760   001C54  C001  F011         	movff	?___fladd,___flmul@b
 12761   001C58  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12762   001C5C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12763   001C60  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12764   001C64  0E00               	movlw	0
 12765   001C66  6E15               	movwf	___flmul@a^0,c
 12766   001C68  0E00               	movlw	0
 12767   001C6A  6E16               	movwf	(___flmul@a+1)^0,c
 12768   001C6C  0E70               	movlw	112
 12769   001C6E  6E17               	movwf	(___flmul@a+2)^0,c
 12770   001C70  0E42               	movlw	66
 12771   001C72  6E18               	movwf	(___flmul@a+3)^0,c
 12772   001C74  EC76  F013         	call	___flmul	;wreg free
 12773   001C78  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12774   001C7C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12775   001C80  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12776   001C84  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12777                           
 12778                           ;color.c: 156:     }
 12779   001C88  EFB0  F00E         	goto	l5464
 12780   001C8C                     l5460:
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12784   001C8C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12785   001C90  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12786   001C94  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12787   001C98  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12788   001C9C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12789   001CA0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12790   001CA4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12791   001CA8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12792   001CAC  ECD9  F02E         	call	___flsub	;wreg free
 12793   001CB0  C02A  F036         	movff	?___flsub,___fldiv@a
 12794   001CB4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12795   001CB8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12796   001CBC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12797   001CC0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12798   001CC4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12799   001CC8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12800   001CCC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12801   001CD0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12802   001CD4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12803   001CD8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12804   001CDC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12805   001CE0  ECD9  F02E         	call	___flsub	;wreg free
 12806   001CE4  C02A  F032         	movff	?___flsub,___fldiv@b
 12807   001CE8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12808   001CEC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12809   001CF0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12810   001CF4  EC8B  F015         	call	___fldiv	;wreg free
 12811   001CF8  C032  F060         	movff	?___fldiv,_Colour_decider$3283
 12812   001CFC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3283+1
 12813   001D00  C034  F062         	movff	?___fldiv+2,_Colour_decider$3283+2
 12814   001D04  C035  F063         	movff	?___fldiv+3,_Colour_decider$3283+3
 12815   001D08                     
 12816                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12817   001D08  0E00               	movlw	0
 12818   001D0A  6E05               	movwf	___fladd@a^0,c
 12819   001D0C  0E00               	movlw	0
 12820   001D0E  6E06               	movwf	(___fladd@a+1)^0,c
 12821   001D10  0E80               	movlw	128
 12822   001D12  6E07               	movwf	(___fladd@a+2)^0,c
 12823   001D14  0E40               	movlw	64
 12824   001D16  6E08               	movwf	(___fladd@a+3)^0,c
 12825   001D18  C060  F001         	movff	_Colour_decider$3283,___fladd@b
 12826   001D1C  C061  F002         	movff	_Colour_decider$3283+1,___fladd@b+1
 12827   001D20  C062  F003         	movff	_Colour_decider$3283+2,___fladd@b+2
 12828   001D24  C063  F004         	movff	_Colour_decider$3283+3,___fladd@b+3
 12829   001D28  EC16  F011         	call	___fladd	;wreg free
 12830   001D2C  C001  F011         	movff	?___fladd,___flmul@b
 12831   001D30  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12832   001D34  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12833   001D38  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12834   001D3C  0E00               	movlw	0
 12835   001D3E  6E15               	movwf	___flmul@a^0,c
 12836   001D40  0E00               	movlw	0
 12837   001D42  6E16               	movwf	(___flmul@a+1)^0,c
 12838   001D44  0E70               	movlw	112
 12839   001D46  6E17               	movwf	(___flmul@a+2)^0,c
 12840   001D48  0E42               	movlw	66
 12841   001D4A  6E18               	movwf	(___flmul@a+3)^0,c
 12842   001D4C  EC76  F013         	call	___flmul	;wreg free
 12843   001D50  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12844   001D54  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12845   001D58  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12846   001D5C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12847   001D60                     l5464:
 12848                           
 12849                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12850   001D60  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12851   001D64  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12852   001D68  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12853   001D6C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12854   001D70  0E00               	movlw	0
 12855   001D72  6E2E               	movwf	___flge@ff2^0,c
 12856   001D74  0E00               	movlw	0
 12857   001D76  6E2F               	movwf	(___flge@ff2+1)^0,c
 12858   001D78  0EA5               	movlw	165
 12859   001D7A  6E30               	movwf	(___flge@ff2+2)^0,c
 12860   001D7C  0E43               	movlw	67
 12861   001D7E  6E31               	movwf	(___flge@ff2+3)^0,c
 12862   001D80  ECF9  F024         	call	___flge	;wreg free
 12863   001D84  A0D8               	btfss	status,0,c
 12864   001D86  EFC7  F00E         	goto	u5271
 12865   001D8A  EFC9  F00E         	goto	u5270
 12866   001D8E                     u5271:
 12867   001D8E  EFE8  F00E         	goto	l5474
 12868   001D92                     u5270:
 12869   001D92  0E00               	movlw	0
 12870   001D94  6E2A               	movwf	___flge@ff1^0,c
 12871   001D96  0E00               	movlw	0
 12872   001D98  6E2B               	movwf	(___flge@ff1+1)^0,c
 12873   001D9A  0EB4               	movlw	180
 12874   001D9C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12875   001D9E  0E43               	movlw	67
 12876   001DA0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12877   001DA2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12878   001DA6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12879   001DAA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12880   001DAE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12881   001DB2  ECF9  F024         	call	___flge	;wreg free
 12882   001DB6  A0D8               	btfss	status,0,c
 12883   001DB8  EFE0  F00E         	goto	u5281
 12884   001DBC  EFE2  F00E         	goto	u5280
 12885   001DC0                     u5281:
 12886   001DC0  EFE8  F00E         	goto	l5474
 12887   001DC4                     u5280:
 12888   001DC4                     
 12889                           ;color.c: 164:         return 1;
 12890   001DC4  0E00               	movlw	0
 12891   001DC6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12892   001DC8  0E01               	movlw	1
 12893   001DCA  6E4B               	movwf	?_Colour_decider^0,c
 12894   001DCC  EF15  F011         	goto	l80
 12895   001DD0                     l5474:
 12896   001DD0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12897   001DD4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12898   001DD8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12899   001DDC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12900   001DE0  0E00               	movlw	0
 12901   001DE2  6E2E               	movwf	___flge@ff2^0,c
 12902   001DE4  0E00               	movlw	0
 12903   001DE6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12904   001DE8  0EA0               	movlw	160
 12905   001DEA  6E30               	movwf	(___flge@ff2+2)^0,c
 12906   001DEC  0E40               	movlw	64
 12907   001DEE  6E31               	movwf	(___flge@ff2+3)^0,c
 12908   001DF0  ECF9  F024         	call	___flge	;wreg free
 12909   001DF4  A0D8               	btfss	status,0,c
 12910   001DF6  EFFF  F00E         	goto	u5291
 12911   001DFA  EF01  F00F         	goto	u5290
 12912   001DFE                     u5291:
 12913   001DFE  EF20  F00F         	goto	l5484
 12914   001E02                     u5290:
 12915   001E02  0E00               	movlw	0
 12916   001E04  6E2A               	movwf	___flge@ff1^0,c
 12917   001E06  0E00               	movlw	0
 12918   001E08  6E2B               	movwf	(___flge@ff1+1)^0,c
 12919   001E0A  0E30               	movlw	48
 12920   001E0C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12921   001E0E  0E41               	movlw	65
 12922   001E10  6E2D               	movwf	(___flge@ff1+3)^0,c
 12923   001E12  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12924   001E16  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12925   001E1A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12926   001E1E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12927   001E22  ECF9  F024         	call	___flge	;wreg free
 12928   001E26  A0D8               	btfss	status,0,c
 12929   001E28  EF18  F00F         	goto	u5301
 12930   001E2C  EF1A  F00F         	goto	u5300
 12931   001E30                     u5301:
 12932   001E30  EF20  F00F         	goto	l5484
 12933   001E34                     u5300:
 12934   001E34                     
 12935                           ;color.c: 168:         return 2;
 12936   001E34  0E00               	movlw	0
 12937   001E36  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12938   001E38  0E02               	movlw	2
 12939   001E3A  6E4B               	movwf	?_Colour_decider^0,c
 12940   001E3C  EF15  F011         	goto	l80
 12941   001E40                     l5484:
 12942   001E40  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12943   001E44  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12944   001E48  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12945   001E4C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12946   001E50  0E00               	movlw	0
 12947   001E52  6E2E               	movwf	___flge@ff2^0,c
 12948   001E54  0E00               	movlw	0
 12949   001E56  6E2F               	movwf	(___flge@ff2+1)^0,c
 12950   001E58  0E90               	movlw	144
 12951   001E5A  6E30               	movwf	(___flge@ff2+2)^0,c
 12952   001E5C  0E41               	movlw	65
 12953   001E5E  6E31               	movwf	(___flge@ff2+3)^0,c
 12954   001E60  ECF9  F024         	call	___flge	;wreg free
 12955   001E64  A0D8               	btfss	status,0,c
 12956   001E66  EF37  F00F         	goto	u5311
 12957   001E6A  EF39  F00F         	goto	u5310
 12958   001E6E                     u5311:
 12959   001E6E  EFED  F00F         	goto	l5514
 12960   001E72                     u5310:
 12961   001E72  0E00               	movlw	0
 12962   001E74  6E2A               	movwf	___flge@ff1^0,c
 12963   001E76  0E00               	movlw	0
 12964   001E78  6E2B               	movwf	(___flge@ff1+1)^0,c
 12965   001E7A  0EC8               	movlw	200
 12966   001E7C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12967   001E7E  0E41               	movlw	65
 12968   001E80  6E2D               	movwf	(___flge@ff1+3)^0,c
 12969   001E82  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12970   001E86  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12971   001E8A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12972   001E8E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12973   001E92  ECF9  F024         	call	___flge	;wreg free
 12974   001E96  A0D8               	btfss	status,0,c
 12975   001E98  EF50  F00F         	goto	u5321
 12976   001E9C  EF52  F00F         	goto	u5320
 12977   001EA0                     u5321:
 12978   001EA0  EFED  F00F         	goto	l5514
 12979   001EA4                     u5320:
 12980   001EA4                     
 12981                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12982   001EA4  0EB8               	movlw	184
 12983   001EA6  6E2A               	movwf	___flge@ff1^0,c
 12984   001EA8  0E1E               	movlw	30
 12985   001EAA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12986   001EAC  0E85               	movlw	133
 12987   001EAE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12988   001EB0  0E3E               	movlw	62
 12989   001EB2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12990   001EB4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12991   001EB8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12992   001EBC  CFDE F02E          	movff	postinc2,___flge@ff2
 12993   001EC0  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12994   001EC4  CFDE F030          	movff	postinc2,___flge@ff2+2
 12995   001EC8  CFDE F031          	movff	postinc2,___flge@ff2+3
 12996   001ECC  ECF9  F024         	call	___flge	;wreg free
 12997   001ED0  A0D8               	btfss	status,0,c
 12998   001ED2  EF6D  F00F         	goto	u5331
 12999   001ED6  EF6F  F00F         	goto	u5330
 13000   001EDA                     u5331:
 13001   001EDA  EFA5  F00F         	goto	l5500
 13002   001EDE                     u5330:
 13003   001EDE  0ECD               	movlw	205
 13004   001EE0  6E2A               	movwf	___flge@ff1^0,c
 13005   001EE2  0ECC               	movlw	204
 13006   001EE4  6E2B               	movwf	(___flge@ff1+1)^0,c
 13007   001EE6  0ECC               	movlw	204
 13008   001EE8  6E2C               	movwf	(___flge@ff1+2)^0,c
 13009   001EEA  0E3D               	movlw	61
 13010   001EEC  6E2D               	movwf	(___flge@ff1+3)^0,c
 13011   001EEE  EE20 F008          	lfsr	2,8
 13012   001EF2  504D               	movf	Colour_decider@rel^0,w,c
 13013   001EF4  26D9               	addwf	fsr2l,f,c
 13014   001EF6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13015   001EF8  22DA               	addwfc	fsr2h,f,c
 13016   001EFA  CFDE F02E          	movff	postinc2,___flge@ff2
 13017   001EFE  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13018   001F02  CFDE F030          	movff	postinc2,___flge@ff2+2
 13019   001F06  CFDE F031          	movff	postinc2,___flge@ff2+3
 13020   001F0A  ECF9  F024         	call	___flge	;wreg free
 13021   001F0E  B0D8               	btfsc	status,0,c
 13022   001F10  EF8C  F00F         	goto	u5341
 13023   001F14  EF8E  F00F         	goto	u5340
 13024   001F18                     u5341:
 13025   001F18  EFA5  F00F         	goto	l5500
 13026   001F1C                     u5340:
 13027   001F1C  EE20 F006          	lfsr	2,6
 13028   001F20  504B               	movf	Colour_decider@vals^0,w,c
 13029   001F22  26D9               	addwf	fsr2l,f,c
 13030   001F24  504C               	movf	(Colour_decider@vals+1)^0,w,c
 13031   001F26  22DA               	addwfc	fsr2h,f,c
 13032   001F28  0E01               	movlw	1
 13033   001F2A  BEDB               	btfsc	plusw2,7,c
 13034   001F2C  EFA1  F00F         	goto	u5351
 13035   001F30  0EE9               	movlw	233
 13036   001F32  5CDE               	subwf	postinc2,w,c
 13037   001F34  0E03               	movlw	3
 13038   001F36  58DE               	subwfb	postinc2,w,c
 13039   001F38  A0D8               	btfss	status,0,c
 13040   001F3A  EFA1  F00F         	goto	u5351
 13041   001F3E  EFA3  F00F         	goto	u5350
 13042   001F42                     u5351:
 13043   001F42  EFA5  F00F         	goto	l5500
 13044   001F46                     u5350:
 13045   001F46  EF4D  F00D         	goto	l5442
 13046   001F4A                     l5500:
 13047   001F4A  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13048   001F4E  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13049   001F52  CFDE F02A          	movff	postinc2,___flge@ff1
 13050   001F56  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13051   001F5A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13052   001F5E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13053   001F62  0EB8               	movlw	184
 13054   001F64  6E2E               	movwf	___flge@ff2^0,c
 13055   001F66  0E1E               	movlw	30
 13056   001F68  6E2F               	movwf	(___flge@ff2+1)^0,c
 13057   001F6A  0E85               	movlw	133
 13058   001F6C  6E30               	movwf	(___flge@ff2+2)^0,c
 13059   001F6E  0E3E               	movlw	62
 13060   001F70  6E31               	movwf	(___flge@ff2+3)^0,c
 13061   001F72  ECF9  F024         	call	___flge	;wreg free
 13062   001F76  A0D8               	btfss	status,0,c
 13063   001F78  EFC0  F00F         	goto	u5361
 13064   001F7C  EFC2  F00F         	goto	u5360
 13065   001F80                     u5361:
 13066   001F80  EFE7  F00F         	goto	l5510
 13067   001F84                     u5360:
 13068   001F84  EE20 F008          	lfsr	2,8
 13069   001F88  504D               	movf	Colour_decider@rel^0,w,c
 13070   001F8A  26D9               	addwf	fsr2l,f,c
 13071   001F8C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13072   001F8E  22DA               	addwfc	fsr2h,f,c
 13073   001F90  CFDE F02A          	movff	postinc2,___flge@ff1
 13074   001F94  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13075   001F98  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13076   001F9C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13077   001FA0  0ECD               	movlw	205
 13078   001FA2  6E2E               	movwf	___flge@ff2^0,c
 13079   001FA4  0ECC               	movlw	204
 13080   001FA6  6E2F               	movwf	(___flge@ff2+1)^0,c
 13081   001FA8  0ECC               	movlw	204
 13082   001FAA  6E30               	movwf	(___flge@ff2+2)^0,c
 13083   001FAC  0E3D               	movlw	61
 13084   001FAE  6E31               	movwf	(___flge@ff2+3)^0,c
 13085   001FB0  ECF9  F024         	call	___flge	;wreg free
 13086   001FB4  B0D8               	btfsc	status,0,c
 13087   001FB6  EFDF  F00F         	goto	u5371
 13088   001FBA  EFE1  F00F         	goto	u5370
 13089   001FBE                     u5371:
 13090   001FBE  EFE7  F00F         	goto	l5510
 13091   001FC2                     u5370:
 13092   001FC2                     
 13093                           ;color.c: 177:             return 3;
 13094   001FC2  0E00               	movlw	0
 13095   001FC4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13096   001FC6  0E03               	movlw	3
 13097   001FC8  6E4B               	movwf	?_Colour_decider^0,c
 13098   001FCA  EF15  F011         	goto	l80
 13099   001FCE                     l5510:
 13100                           
 13101                           ;color.c: 180:             return 10;
 13102   001FCE  0E00               	movlw	0
 13103   001FD0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13104   001FD2  0E0A               	movlw	10
 13105   001FD4  6E4B               	movwf	?_Colour_decider^0,c
 13106   001FD6  EF15  F011         	goto	l80
 13107   001FDA                     l5514:
 13108   001FDA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13109   001FDE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13110   001FE2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13111   001FE6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13112   001FEA  0E00               	movlw	0
 13113   001FEC  6E2E               	movwf	___flge@ff2^0,c
 13114   001FEE  0E00               	movlw	0
 13115   001FF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13116   001FF2  0EAA               	movlw	170
 13117   001FF4  6E30               	movwf	(___flge@ff2+2)^0,c
 13118   001FF6  0E42               	movlw	66
 13119   001FF8  6E31               	movwf	(___flge@ff2+3)^0,c
 13120   001FFA  ECF9  F024         	call	___flge	;wreg free
 13121   001FFE  A0D8               	btfss	status,0,c
 13122   002000  EF04  F010         	goto	u5381
 13123   002004  EF06  F010         	goto	u5380
 13124   002008                     u5381:
 13125   002008  EF25  F010         	goto	l5524
 13126   00200C                     u5380:
 13127   00200C  0E00               	movlw	0
 13128   00200E  6E2A               	movwf	___flge@ff1^0,c
 13129   002010  0E00               	movlw	0
 13130   002012  6E2B               	movwf	(___flge@ff1+1)^0,c
 13131   002014  0E20               	movlw	32
 13132   002016  6E2C               	movwf	(___flge@ff1+2)^0,c
 13133   002018  0E43               	movlw	67
 13134   00201A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13135   00201C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13136   002020  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13137   002024  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13138   002028  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13139   00202C  ECF9  F024         	call	___flge	;wreg free
 13140   002030  A0D8               	btfss	status,0,c
 13141   002032  EF1D  F010         	goto	u5391
 13142   002036  EF1F  F010         	goto	u5390
 13143   00203A                     u5391:
 13144   00203A  EF25  F010         	goto	l5524
 13145   00203E                     u5390:
 13146   00203E                     
 13147                           ;color.c: 186:         return 4;
 13148   00203E  0E00               	movlw	0
 13149   002040  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13150   002042  0E04               	movlw	4
 13151   002044  6E4B               	movwf	?_Colour_decider^0,c
 13152   002046  EF15  F011         	goto	l80
 13153   00204A                     l5524:
 13154   00204A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13155   00204E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13156   002052  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13157   002056  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13158   00205A  0E00               	movlw	0
 13159   00205C  6E2E               	movwf	___flge@ff2^0,c
 13160   00205E  0E00               	movlw	0
 13161   002060  6E2F               	movwf	(___flge@ff2+1)^0,c
 13162   002062  0E70               	movlw	112
 13163   002064  6E30               	movwf	(___flge@ff2+2)^0,c
 13164   002066  0E42               	movlw	66
 13165   002068  6E31               	movwf	(___flge@ff2+3)^0,c
 13166   00206A  ECF9  F024         	call	___flge	;wreg free
 13167   00206E  A0D8               	btfss	status,0,c
 13168   002070  EF3C  F010         	goto	u5401
 13169   002074  EF3E  F010         	goto	u5400
 13170   002078                     u5401:
 13171   002078  EFDF  F010         	goto	l5552
 13172   00207C                     u5400:
 13173   00207C  0E00               	movlw	0
 13174   00207E  6E2A               	movwf	___flge@ff1^0,c
 13175   002080  0E00               	movlw	0
 13176   002082  6E2B               	movwf	(___flge@ff1+1)^0,c
 13177   002084  0E9A               	movlw	154
 13178   002086  6E2C               	movwf	(___flge@ff1+2)^0,c
 13179   002088  0E42               	movlw	66
 13180   00208A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13181   00208C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13182   002090  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13183   002094  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13184   002098  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13185   00209C  ECF9  F024         	call	___flge	;wreg free
 13186   0020A0  A0D8               	btfss	status,0,c
 13187   0020A2  EF55  F010         	goto	u5411
 13188   0020A6  EF57  F010         	goto	u5410
 13189   0020AA                     u5411:
 13190   0020AA  EFDF  F010         	goto	l5552
 13191   0020AE                     u5410:
 13192   0020AE                     
 13193                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 13194   0020AE  EE20 F008          	lfsr	2,8
 13195   0020B2  504D               	movf	Colour_decider@rel^0,w,c
 13196   0020B4  26D9               	addwf	fsr2l,f,c
 13197   0020B6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13198   0020B8  22DA               	addwfc	fsr2h,f,c
 13199   0020BA  CFDE F02A          	movff	postinc2,___flge@ff1
 13200   0020BE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13201   0020C2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13202   0020C6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13203   0020CA  0E8F               	movlw	143
 13204   0020CC  6E2E               	movwf	___flge@ff2^0,c
 13205   0020CE  0EC2               	movlw	194
 13206   0020D0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13207   0020D2  0EF5               	movlw	245
 13208   0020D4  6E30               	movwf	(___flge@ff2+2)^0,c
 13209   0020D6  0E3D               	movlw	61
 13210   0020D8  6E31               	movwf	(___flge@ff2+3)^0,c
 13211   0020DA  ECF9  F024         	call	___flge	;wreg free
 13212   0020DE  A0D8               	btfss	status,0,c
 13213   0020E0  EF74  F010         	goto	u5421
 13214   0020E4  EF76  F010         	goto	u5420
 13215   0020E8                     u5421:
 13216   0020E8  EF9B  F010         	goto	l5538
 13217   0020EC                     u5420:
 13218   0020EC  EE20 F004          	lfsr	2,4
 13219   0020F0  504D               	movf	Colour_decider@rel^0,w,c
 13220   0020F2  26D9               	addwf	fsr2l,f,c
 13221   0020F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13222   0020F6  22DA               	addwfc	fsr2h,f,c
 13223   0020F8  CFDE F02A          	movff	postinc2,___flge@ff1
 13224   0020FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13225   002100  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13226   002104  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13227   002108  0E3D               	movlw	61
 13228   00210A  6E2E               	movwf	___flge@ff2^0,c
 13229   00210C  0E0A               	movlw	10
 13230   00210E  6E2F               	movwf	(___flge@ff2+1)^0,c
 13231   002110  0E57               	movlw	87
 13232   002112  6E30               	movwf	(___flge@ff2+2)^0,c
 13233   002114  0E3E               	movlw	62
 13234   002116  6E31               	movwf	(___flge@ff2+3)^0,c
 13235   002118  ECF9  F024         	call	___flge	;wreg free
 13236   00211C  B0D8               	btfsc	status,0,c
 13237   00211E  EF93  F010         	goto	u5431
 13238   002122  EF95  F010         	goto	u5430
 13239   002126                     u5431:
 13240   002126  EF9B  F010         	goto	l5538
 13241   00212A                     u5430:
 13242   00212A                     
 13243                           ;color.c: 192:             return 6;
 13244   00212A  0E00               	movlw	0
 13245   00212C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13246   00212E  0E06               	movlw	6
 13247   002130  6E4B               	movwf	?_Colour_decider^0,c
 13248   002132  EF15  F011         	goto	l80
 13249   002136                     l5538:
 13250   002136  EE20 F008          	lfsr	2,8
 13251   00213A  504D               	movf	Colour_decider@rel^0,w,c
 13252   00213C  26D9               	addwf	fsr2l,f,c
 13253   00213E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13254   002140  22DA               	addwfc	fsr2h,f,c
 13255   002142  CFDE F02A          	movff	postinc2,___flge@ff1
 13256   002146  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13257   00214A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13258   00214E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13259   002152  0E8F               	movlw	143
 13260   002154  6E2E               	movwf	___flge@ff2^0,c
 13261   002156  0EC2               	movlw	194
 13262   002158  6E2F               	movwf	(___flge@ff2+1)^0,c
 13263   00215A  0EF5               	movlw	245
 13264   00215C  6E30               	movwf	(___flge@ff2+2)^0,c
 13265   00215E  0E3D               	movlw	61
 13266   002160  6E31               	movwf	(___flge@ff2+3)^0,c
 13267   002162  ECF9  F024         	call	___flge	;wreg free
 13268   002166  B0D8               	btfsc	status,0,c
 13269   002168  EFB8  F010         	goto	u5441
 13270   00216C  EFBA  F010         	goto	u5440
 13271   002170                     u5441:
 13272   002170  EFE7  F00F         	goto	l5510
 13273   002174                     u5440:
 13274   002174  0E3D               	movlw	61
 13275   002176  6E2A               	movwf	___flge@ff1^0,c
 13276   002178  0E0A               	movlw	10
 13277   00217A  6E2B               	movwf	(___flge@ff1+1)^0,c
 13278   00217C  0E57               	movlw	87
 13279   00217E  6E2C               	movwf	(___flge@ff1+2)^0,c
 13280   002180  0E3E               	movlw	62
 13281   002182  6E2D               	movwf	(___flge@ff1+3)^0,c
 13282   002184  EE20 F004          	lfsr	2,4
 13283   002188  504D               	movf	Colour_decider@rel^0,w,c
 13284   00218A  26D9               	addwf	fsr2l,f,c
 13285   00218C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13286   00218E  22DA               	addwfc	fsr2h,f,c
 13287   002190  CFDE F02E          	movff	postinc2,___flge@ff2
 13288   002194  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13289   002198  CFDE F030          	movff	postinc2,___flge@ff2+2
 13290   00219C  CFDE F031          	movff	postinc2,___flge@ff2+3
 13291   0021A0  ECF9  F024         	call	___flge	;wreg free
 13292   0021A4  B0D8               	btfsc	status,0,c
 13293   0021A6  EFD7  F010         	goto	u5451
 13294   0021AA  EFD9  F010         	goto	u5450
 13295   0021AE                     u5451:
 13296   0021AE  EFE7  F00F         	goto	l5510
 13297   0021B2                     u5450:
 13298   0021B2                     
 13299                           ;color.c: 195:             return 5;
 13300   0021B2  0E00               	movlw	0
 13301   0021B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13302   0021B6  0E05               	movlw	5
 13303   0021B8  6E4B               	movwf	?_Colour_decider^0,c
 13304   0021BA  EF15  F011         	goto	l80
 13305   0021BE                     l5552:
 13306   0021BE  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13307   0021C2  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13308   0021C6  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13309   0021CA  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13310   0021CE  0E00               	movlw	0
 13311   0021D0  6E2E               	movwf	___flge@ff2^0,c
 13312   0021D2  0E00               	movlw	0
 13313   0021D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13314   0021D6  0E40               	movlw	64
 13315   0021D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13316   0021DA  0E41               	movlw	65
 13317   0021DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13318   0021DE  ECF9  F024         	call	___flge	;wreg free
 13319   0021E2  A0D8               	btfss	status,0,c
 13320   0021E4  EFF6  F010         	goto	u5461
 13321   0021E8  EFF8  F010         	goto	u5460
 13322   0021EC                     u5461:
 13323   0021EC  EFE7  F00F         	goto	l5510
 13324   0021F0                     u5460:
 13325   0021F0  0E00               	movlw	0
 13326   0021F2  6E2A               	movwf	___flge@ff1^0,c
 13327   0021F4  0E00               	movlw	0
 13328   0021F6  6E2B               	movwf	(___flge@ff1+1)^0,c
 13329   0021F8  0E88               	movlw	136
 13330   0021FA  6E2C               	movwf	(___flge@ff1+2)^0,c
 13331   0021FC  0E41               	movlw	65
 13332   0021FE  6E2D               	movwf	(___flge@ff1+3)^0,c
 13333   002200  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13334   002204  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13335   002208  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13336   00220C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13337   002210  ECF9  F024         	call	___flge	;wreg free
 13338   002214  A0D8               	btfss	status,0,c
 13339   002216  EF0F  F011         	goto	u5471
 13340   00221A  EF11  F011         	goto	u5470
 13341   00221E                     u5471:
 13342   00221E  EFE7  F00F         	goto	l5510
 13343   002222                     u5470:
 13344   002222                     
 13345                           ;color.c: 204:             return 7;
 13346   002222  0E00               	movlw	0
 13347   002224  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13348   002226  0E07               	movlw	7
 13349   002228  6E4B               	movwf	?_Colour_decider^0,c
 13350   00222A                     l80:
 13351   00222A  0012               	return		;funcret
 13352   00222C                     __end_of_Colour_decider:
 13353                           	callstack 0
 13354                           
 13355 ;; *************** function ___xxtofl *****************
 13356 ;; Defined at:
 13357 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;  sign            1    wreg     unsigned char 
 13360 ;;  val             4    0[COMRAM] long 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  sign            1    8[COMRAM] unsigned char 
 13363 ;;  arg             4   10[COMRAM] unsigned long 
 13364 ;;  exp             1    9[COMRAM] unsigned char 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  4    0[COMRAM] unsigned char 
 13367 ;; Registers used:
 13368 ;;		wreg, status,2, status,0
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13375 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13377 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13378 ;;Total ram usage:       14 bytes
 13379 ;; Hardware stack levels used: 1
 13380 ;; Hardware stack levels required when called: 1
 13381 ;; This function calls:
 13382 ;;		Nothing
 13383 ;; This function is called by:
 13384 ;;		_colour_rel
 13385 ;;		_Colour_decider
 13386 ;;		_reverseOneBlock
 13387 ;;		_ForwardOneBlock
 13388 ;;		_Forwardhalfblock
 13389 ;;		_Backhalfblock
 13390 ;; This function uses a non-reentrant model
 13391 ;;
 13392                           
 13393                           	psect	text78
 13394   004134                     __ptext78:
 13395                           	callstack 0
 13396   004134                     ___xxtofl:
 13397                           	callstack 28
 13398                           
 13399                           ;incstack = 0
 13400                           ;___xxtofl@sign stored from wreg
 13401   004134  6E09               	movwf	___xxtofl@sign^0,c
 13402   004136  5009               	movf	___xxtofl@sign^0,w,c
 13403   004138  B4D8               	btfsc	status,2,c
 13404   00413A  EFA1  F020         	goto	u5081
 13405   00413E  EFA3  F020         	goto	u5080
 13406   004142                     u5081:
 13407   004142  EFC5  F020         	goto	l1412
 13408   004146                     u5080:
 13409   004146  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13410   004148  EFAA  F020         	goto	u5090
 13411   00414C  EFA8  F020         	goto	u5091
 13412   004150                     u5091:
 13413   004150  EFC5  F020         	goto	l1412
 13414   004154                     u5090:
 13415   004154  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13416   004158  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13417   00415C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13418   004160  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13419   004164  1E05               	comf	??___xxtofl^0,f,c
 13420   004166  1E06               	comf	(??___xxtofl+1)^0,f,c
 13421   004168  1E07               	comf	(??___xxtofl+2)^0,f,c
 13422   00416A  1E08               	comf	(??___xxtofl+3)^0,f,c
 13423   00416C  2A05               	incf	??___xxtofl^0,f,c
 13424   00416E  0E00               	movlw	0
 13425   004170  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13426   004172  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13427   004174  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13428   004176  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13429   00417A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13430   00417E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13431   004182  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13432   004186  EFCD  F020         	goto	l5312
 13433   00418A                     l1412:
 13434   00418A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13435   00418E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13436   004192  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13437   004196  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13438   00419A                     l5312:
 13439   00419A  5001               	movf	___xxtofl@val^0,w,c
 13440   00419C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13441   00419E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13442   0041A0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13443   0041A2  A4D8               	btfss	status,2,c
 13444   0041A4  EFD6  F020         	goto	u5101
 13445   0041A8  EFD8  F020         	goto	u5100
 13446   0041AC                     u5101:
 13447   0041AC  EFE2  F020         	goto	l5318
 13448   0041B0                     u5100:
 13449   0041B0  0E00               	movlw	0
 13450   0041B2  6E01               	movwf	?___xxtofl^0,c
 13451   0041B4  0E00               	movlw	0
 13452   0041B6  6E02               	movwf	(?___xxtofl+1)^0,c
 13453   0041B8  0E00               	movlw	0
 13454   0041BA  6E03               	movwf	(?___xxtofl+2)^0,c
 13455   0041BC  0E00               	movlw	0
 13456   0041BE  6E04               	movwf	(?___xxtofl+3)^0,c
 13457   0041C0  EF73  F021         	goto	l1415
 13458   0041C4                     l5318:
 13459   0041C4  0E96               	movlw	150
 13460   0041C6  6E0A               	movwf	___xxtofl@exp^0,c
 13461   0041C8  EFEC  F020         	goto	l5322
 13462   0041CC                     l5320:
 13463   0041CC  2A0A               	incf	___xxtofl@exp^0,f,c
 13464   0041CE  90D8               	bcf	status,0,c
 13465   0041D0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13466   0041D2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13467   0041D4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13468   0041D6  320B               	rrcf	___xxtofl@arg^0,f,c
 13469   0041D8                     l5322:
 13470   0041D8  0E00               	movlw	0
 13471   0041DA  140B               	andwf	___xxtofl@arg^0,w,c
 13472   0041DC  6E05               	movwf	??___xxtofl^0,c
 13473   0041DE  0E00               	movlw	0
 13474   0041E0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13475   0041E2  6E06               	movwf	(??___xxtofl+1)^0,c
 13476   0041E4  0E00               	movlw	0
 13477   0041E6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13478   0041E8  6E07               	movwf	(??___xxtofl+2)^0,c
 13479   0041EA  0EFE               	movlw	254
 13480   0041EC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13481   0041EE  6E08               	movwf	(??___xxtofl+3)^0,c
 13482   0041F0  5005               	movf	??___xxtofl^0,w,c
 13483   0041F2  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13484   0041F4  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13485   0041F6  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13486   0041F8  A4D8               	btfss	status,2,c
 13487   0041FA  EF01  F021         	goto	u5111
 13488   0041FE  EF03  F021         	goto	u5110
 13489   004202                     u5111:
 13490   004202  EFE6  F020         	goto	l5320
 13491   004206                     u5110:
 13492   004206  EF11  F021         	goto	l1419
 13493   00420A                     l5324:
 13494   00420A  2A0A               	incf	___xxtofl@exp^0,f,c
 13495   00420C  0E01               	movlw	1
 13496   00420E  260B               	addwf	___xxtofl@arg^0,f,c
 13497   004210  0E00               	movlw	0
 13498   004212  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13499   004214  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13500   004216  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13501   004218  90D8               	bcf	status,0,c
 13502   00421A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13503   00421C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13504   00421E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13505   004220  320B               	rrcf	___xxtofl@arg^0,f,c
 13506   004222                     l1419:
 13507   004222  0E00               	movlw	0
 13508   004224  140B               	andwf	___xxtofl@arg^0,w,c
 13509   004226  6E05               	movwf	??___xxtofl^0,c
 13510   004228  0E00               	movlw	0
 13511   00422A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13512   00422C  6E06               	movwf	(??___xxtofl+1)^0,c
 13513   00422E  0E00               	movlw	0
 13514   004230  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13515   004232  6E07               	movwf	(??___xxtofl+2)^0,c
 13516   004234  0EFF               	movlw	255
 13517   004236  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13518   004238  6E08               	movwf	(??___xxtofl+3)^0,c
 13519   00423A  5005               	movf	??___xxtofl^0,w,c
 13520   00423C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13521   00423E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13522   004240  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13523   004242  A4D8               	btfss	status,2,c
 13524   004244  EF26  F021         	goto	u5121
 13525   004248  EF28  F021         	goto	u5120
 13526   00424C                     u5121:
 13527   00424C  EF05  F021         	goto	l5324
 13528   004250                     u5120:
 13529   004250  EF30  F021         	goto	l5332
 13530   004254                     l5330:
 13531   004254  060A               	decf	___xxtofl@exp^0,f,c
 13532   004256  90D8               	bcf	status,0,c
 13533   004258  360B               	rlcf	___xxtofl@arg^0,f,c
 13534   00425A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13535   00425C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13536   00425E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13537   004260                     l5332:
 13538   004260  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13539   004262  EF35  F021         	goto	u5131
 13540   004266  EF37  F021         	goto	u5130
 13541   00426A                     u5131:
 13542   00426A  EF3F  F021         	goto	l1426
 13543   00426E                     u5130:
 13544   00426E  0E02               	movlw	2
 13545   004270  600A               	cpfslt	___xxtofl@exp^0,c
 13546   004272  EF3D  F021         	goto	u5141
 13547   004276  EF3F  F021         	goto	u5140
 13548   00427A                     u5141:
 13549   00427A  EF2A  F021         	goto	l5330
 13550   00427E                     u5140:
 13551   00427E                     l1426:
 13552   00427E  B00A               	btfsc	___xxtofl@exp^0,0,c
 13553   004280  EF44  F021         	goto	u5151
 13554   004284  EF46  F021         	goto	u5150
 13555   004288                     u5151:
 13556   004288  EF47  F021         	goto	l5338
 13557   00428C                     u5150:
 13558   00428C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13559   00428E                     l5338:
 13560   00428E  90D8               	bcf	status,0,c
 13561   004290  320A               	rrcf	___xxtofl@exp^0,f,c
 13562   004292  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13563   004296  6A06               	clrf	(??___xxtofl+1)^0,c
 13564   004298  6A07               	clrf	(??___xxtofl+2)^0,c
 13565   00429A  6A08               	clrf	(??___xxtofl+3)^0,c
 13566   00429C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13567   0042A0  6A07               	clrf	(??___xxtofl+2)^0,c
 13568   0042A2  6A06               	clrf	(??___xxtofl+1)^0,c
 13569   0042A4  6A05               	clrf	??___xxtofl^0,c
 13570   0042A6  5005               	movf	??___xxtofl^0,w,c
 13571   0042A8  120B               	iorwf	___xxtofl@arg^0,f,c
 13572   0042AA  5006               	movf	(??___xxtofl+1)^0,w,c
 13573   0042AC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13574   0042AE  5007               	movf	(??___xxtofl+2)^0,w,c
 13575   0042B0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13576   0042B2  5008               	movf	(??___xxtofl+3)^0,w,c
 13577   0042B4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13578   0042B6  5009               	movf	___xxtofl@sign^0,w,c
 13579   0042B8  B4D8               	btfsc	status,2,c
 13580   0042BA  EF61  F021         	goto	u5161
 13581   0042BE  EF63  F021         	goto	u5160
 13582   0042C2                     u5161:
 13583   0042C2  EF6B  F021         	goto	l5348
 13584   0042C6                     u5160:
 13585   0042C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13586   0042C8  EF6A  F021         	goto	u5170
 13587   0042CC  EF68  F021         	goto	u5171
 13588   0042D0                     u5171:
 13589   0042D0  EF6B  F021         	goto	l5348
 13590   0042D4                     u5170:
 13591   0042D4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13592   0042D6                     l5348:
 13593   0042D6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13594   0042DA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13595   0042DE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13596   0042E2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13597   0042E6                     l1415:
 13598   0042E6  0012               	return		;funcret
 13599   0042E8                     __end_of___xxtofl:
 13600                           	callstack 0
 13601                           
 13602 ;; *************** function ___flsub *****************
 13603 ;; Defined at:
 13604 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  b               4   41[COMRAM] unsigned char 
 13607 ;;  a               4   45[COMRAM] unsigned char 
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  4   41[COMRAM] unsigned char 
 13612 ;; Registers used:
 13613 ;;		wreg, status,2, status,0, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13622 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13623 ;;Total ram usage:        8 bytes
 13624 ;; Hardware stack levels used: 1
 13625 ;; Hardware stack levels required when called: 2
 13626 ;; This function calls:
 13627 ;;		___fladd
 13628 ;; This function is called by:
 13629 ;;		_Colour_decider
 13630 ;;		_efgtoa
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text79
 13635   005DB2                     __ptext79:
 13636                           	callstack 0
 13637   005DB2                     ___flsub:
 13638                           	callstack 24
 13639   005DB2  0E00               	movlw	0
 13640   005DB4  1A2E               	xorwf	___flsub@a^0,f,c
 13641   005DB6  0E00               	movlw	0
 13642   005DB8  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13643   005DBA  0E00               	movlw	0
 13644   005DBC  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13645   005DBE  0E80               	movlw	128
 13646   005DC0  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13647   005DC2  C02A  F001         	movff	___flsub@b,___fladd@b
 13648   005DC6  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13649   005DCA  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13650   005DCE  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13651   005DD2  C02E  F005         	movff	___flsub@a,___fladd@a
 13652   005DD6  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13653   005DDA  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13654   005DDE  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13655   005DE2  EC16  F011         	call	___fladd	;wreg free
 13656   005DE6  C001  F02A         	movff	?___fladd,?___flsub
 13657   005DEA  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13658   005DEE  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13659   005DF2  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13660   005DF6  0012               	return		;funcret
 13661   005DF8                     __end_of___flsub:
 13662                           	callstack 0
 13663                           
 13664 ;; *************** function ___fladd *****************
 13665 ;; Defined at:
 13666 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;  b               4    0[COMRAM] unsigned char 
 13669 ;;  a               4    4[COMRAM] unsigned char 
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;  grs             1   15[COMRAM] unsigned char 
 13672 ;;  bexp            1   14[COMRAM] unsigned char 
 13673 ;;  aexp            1   13[COMRAM] unsigned char 
 13674 ;;  signs           1   12[COMRAM] unsigned char 
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  4    0[COMRAM] unsigned char 
 13677 ;; Registers used:
 13678 ;;		wreg, status,2, status,0
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13684 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13685 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13687 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;Total ram usage:       16 bytes
 13689 ;; Hardware stack levels used: 1
 13690 ;; Hardware stack levels required when called: 1
 13691 ;; This function calls:
 13692 ;;		Nothing
 13693 ;; This function is called by:
 13694 ;;		_colour_rel
 13695 ;;		_Colour_decider
 13696 ;;		___flsub
 13697 ;;		_efgtoa
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text80
 13702   00222C                     __ptext80:
 13703                           	callstack 0
 13704   00222C                     ___fladd:
 13705                           	callstack 24
 13706   00222C  5004               	movf	(___fladd@b+3)^0,w,c
 13707   00222E  0B80               	andlw	128
 13708   002230  6E0D               	movwf	___fladd@signs^0,c
 13709   002232  5004               	movf	(___fladd@b+3)^0,w,c
 13710   002234  2404               	addwf	(___fladd@b+3)^0,w,c
 13711   002236  6E0F               	movwf	___fladd@bexp^0,c
 13712   002238  AE03               	btfss	(___fladd@b+2)^0,7,c
 13713   00223A  EF21  F011         	goto	u3011
 13714   00223E  EF23  F011         	goto	u3010
 13715   002242                     u3011:
 13716   002242  EF24  F011         	goto	l3920
 13717   002246                     u3010:
 13718   002246  800F               	bsf	___fladd@bexp^0,0,c
 13719   002248                     l3920:
 13720   002248  500F               	movf	___fladd@bexp^0,w,c
 13721   00224A  B4D8               	btfsc	status,2,c
 13722   00224C  EF2A  F011         	goto	u3021
 13723   002250  EF2C  F011         	goto	u3020
 13724   002254                     u3021:
 13725   002254  EF41  F011         	goto	l3930
 13726   002258                     u3020:
 13727   002258  280F               	incf	___fladd@bexp^0,w,c
 13728   00225A  A4D8               	btfss	status,2,c
 13729   00225C  EF32  F011         	goto	u3031
 13730   002260  EF34  F011         	goto	u3030
 13731   002264                     u3031:
 13732   002264  EF3C  F011         	goto	l3926
 13733   002268                     u3030:
 13734   002268  0E00               	movlw	0
 13735   00226A  6E01               	movwf	___fladd@b^0,c
 13736   00226C  0E00               	movlw	0
 13737   00226E  6E02               	movwf	(___fladd@b+1)^0,c
 13738   002270  0E00               	movlw	0
 13739   002272  6E03               	movwf	(___fladd@b+2)^0,c
 13740   002274  0E00               	movlw	0
 13741   002276  6E04               	movwf	(___fladd@b+3)^0,c
 13742   002278                     l3926:
 13743   002278  8E03               	bsf	(___fladd@b+2)^0,7,c
 13744   00227A  0E00               	movlw	0
 13745   00227C  6E04               	movwf	(___fladd@b+3)^0,c
 13746   00227E  EF49  F011         	goto	l3932
 13747   002282                     l3930:
 13748   002282  0E00               	movlw	0
 13749   002284  6E01               	movwf	___fladd@b^0,c
 13750   002286  0E00               	movlw	0
 13751   002288  6E02               	movwf	(___fladd@b+1)^0,c
 13752   00228A  0E00               	movlw	0
 13753   00228C  6E03               	movwf	(___fladd@b+2)^0,c
 13754   00228E  0E00               	movlw	0
 13755   002290  6E04               	movwf	(___fladd@b+3)^0,c
 13756   002292                     l3932:
 13757   002292  5008               	movf	(___fladd@a+3)^0,w,c
 13758   002294  0B80               	andlw	128
 13759   002296  6E0E               	movwf	___fladd@aexp^0,c
 13760   002298  500D               	movf	___fladd@signs^0,w,c
 13761   00229A  180E               	xorwf	___fladd@aexp^0,w,c
 13762   00229C  B4D8               	btfsc	status,2,c
 13763   00229E  EF53  F011         	goto	u3041
 13764   0022A2  EF55  F011         	goto	u3040
 13765   0022A6                     u3041:
 13766   0022A6  EF56  F011         	goto	l3938
 13767   0022AA                     u3040:
 13768   0022AA  8C0D               	bsf	___fladd@signs^0,6,c
 13769   0022AC                     l3938:
 13770   0022AC  5008               	movf	(___fladd@a+3)^0,w,c
 13771   0022AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13772   0022B0  6E0E               	movwf	___fladd@aexp^0,c
 13773   0022B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13774   0022B4  EF5E  F011         	goto	u3051
 13775   0022B8  EF60  F011         	goto	u3050
 13776   0022BC                     u3051:
 13777   0022BC  EF61  F011         	goto	l3944
 13778   0022C0                     u3050:
 13779   0022C0  800E               	bsf	___fladd@aexp^0,0,c
 13780   0022C2                     l3944:
 13781   0022C2  500E               	movf	___fladd@aexp^0,w,c
 13782   0022C4  B4D8               	btfsc	status,2,c
 13783   0022C6  EF67  F011         	goto	u3061
 13784   0022CA  EF69  F011         	goto	u3060
 13785   0022CE                     u3061:
 13786   0022CE  EF7E  F011         	goto	l3954
 13787   0022D2                     u3060:
 13788   0022D2  280E               	incf	___fladd@aexp^0,w,c
 13789   0022D4  A4D8               	btfss	status,2,c
 13790   0022D6  EF6F  F011         	goto	u3071
 13791   0022DA  EF71  F011         	goto	u3070
 13792   0022DE                     u3071:
 13793   0022DE  EF79  F011         	goto	l3950
 13794   0022E2                     u3070:
 13795   0022E2  0E00               	movlw	0
 13796   0022E4  6E05               	movwf	___fladd@a^0,c
 13797   0022E6  0E00               	movlw	0
 13798   0022E8  6E06               	movwf	(___fladd@a+1)^0,c
 13799   0022EA  0E00               	movlw	0
 13800   0022EC  6E07               	movwf	(___fladd@a+2)^0,c
 13801   0022EE  0E00               	movlw	0
 13802   0022F0  6E08               	movwf	(___fladd@a+3)^0,c
 13803   0022F2                     l3950:
 13804   0022F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13805   0022F4  0E00               	movlw	0
 13806   0022F6  6E08               	movwf	(___fladd@a+3)^0,c
 13807   0022F8  EF86  F011         	goto	l3956
 13808   0022FC                     l3954:
 13809   0022FC  0E00               	movlw	0
 13810   0022FE  6E05               	movwf	___fladd@a^0,c
 13811   002300  0E00               	movlw	0
 13812   002302  6E06               	movwf	(___fladd@a+1)^0,c
 13813   002304  0E00               	movlw	0
 13814   002306  6E07               	movwf	(___fladd@a+2)^0,c
 13815   002308  0E00               	movlw	0
 13816   00230A  6E08               	movwf	(___fladd@a+3)^0,c
 13817   00230C                     l3956:
 13818   00230C  500F               	movf	___fladd@bexp^0,w,c
 13819   00230E  5C0E               	subwf	___fladd@aexp^0,w,c
 13820   002310  B0D8               	btfsc	status,0,c
 13821   002312  EF8D  F011         	goto	u3081
 13822   002316  EF8F  F011         	goto	u3080
 13823   00231A                     u3081:
 13824   00231A  EFB6  F011         	goto	l3992
 13825   00231E                     u3080:
 13826   00231E  AC0D               	btfss	___fladd@signs^0,6,c
 13827   002320  EF94  F011         	goto	u3091
 13828   002324  EF96  F011         	goto	u3090
 13829   002328                     u3091:
 13830   002328  EF98  F011         	goto	l3962
 13831   00232C                     u3090:
 13832   00232C  0E80               	movlw	128
 13833   00232E  1A0D               	xorwf	___fladd@signs^0,f,c
 13834   002330                     l3962:
 13835   002330  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13836   002334  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13837   002338  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13838   00233C  C001  F010         	movff	___fladd@b,___fladd@grs
 13839   002340  C005  F001         	movff	___fladd@a,___fladd@b
 13840   002344  C010  F005         	movff	___fladd@grs,___fladd@a
 13841   002348  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13842   00234C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13843   002350  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13844   002354  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13845   002358  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13846   00235C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13847   002360  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13848   002364  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13849   002368  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13850   00236C                     l3992:
 13851   00236C  0E00               	movlw	0
 13852   00236E  6E10               	movwf	___fladd@grs^0,c
 13853   002370  500F               	movf	___fladd@bexp^0,w,c
 13854   002372  C00E  F009         	movff	___fladd@aexp,??___fladd
 13855   002376  6A0A               	clrf	(??___fladd+1)^0,c
 13856   002378  5E09               	subwf	??___fladd^0,f,c
 13857   00237A  0E00               	movlw	0
 13858   00237C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13859   00237E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13860   002380  EFCB  F011         	goto	u3101
 13861   002384  500A               	movf	(??___fladd+1)^0,w,c
 13862   002386  E109               	bnz	u3100
 13863   002388  0E1A               	movlw	26
 13864   00238A  5C09               	subwf	??___fladd^0,w,c
 13865   00238C  A0D8               	btfss	status,0,c
 13866   00238E  EFCB  F011         	goto	u3101
 13867   002392  EFCD  F011         	goto	u3100
 13868   002396                     u3101:
 13869   002396  EF04  F012         	goto	l1286
 13870   00239A                     u3100:
 13871   00239A  5001               	movf	___fladd@b^0,w,c
 13872   00239C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13873   00239E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13874   0023A0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13875   0023A2  A4D8               	btfss	status,2,c
 13876   0023A4  EFD6  F011         	goto	u3111
 13877   0023A8  EFD9  F011         	goto	u3110
 13878   0023AC                     u3111:
 13879   0023AC  0E01               	movlw	1
 13880   0023AE  EFDA  F011         	goto	u3120
 13881   0023B2                     u3110:
 13882   0023B2  0E00               	movlw	0
 13883   0023B4                     u3120:
 13884   0023B4  6E10               	movwf	___fladd@grs^0,c
 13885   0023B6  0E00               	movlw	0
 13886   0023B8  6E01               	movwf	___fladd@b^0,c
 13887   0023BA  0E00               	movlw	0
 13888   0023BC  6E02               	movwf	(___fladd@b+1)^0,c
 13889   0023BE  0E00               	movlw	0
 13890   0023C0  6E03               	movwf	(___fladd@b+2)^0,c
 13891   0023C2  0E00               	movlw	0
 13892   0023C4  6E04               	movwf	(___fladd@b+3)^0,c
 13893   0023C6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13894   0023CA  EF0D  F012         	goto	l1285
 13895   0023CE                     l1287:
 13896   0023CE  A010               	btfss	___fladd@grs^0,0,c
 13897   0023D0  EFEC  F011         	goto	u3131
 13898   0023D4  EFEE  F011         	goto	u3130
 13899   0023D8                     u3131:
 13900   0023D8  EFF4  F011         	goto	l4004
 13901   0023DC                     u3130:
 13902   0023DC  90D8               	bcf	status,0,c
 13903   0023DE  3010               	rrcf	___fladd@grs^0,w,c
 13904   0023E0  0901               	iorlw	1
 13905   0023E2  6E10               	movwf	___fladd@grs^0,c
 13906   0023E4  EFF6  F011         	goto	l4006
 13907   0023E8                     l4004:
 13908   0023E8  90D8               	bcf	status,0,c
 13909   0023EA  3210               	rrcf	___fladd@grs^0,f,c
 13910   0023EC                     l4006:
 13911   0023EC  A001               	btfss	___fladd@b^0,0,c
 13912   0023EE  EFFB  F011         	goto	u3141
 13913   0023F2  EFFD  F011         	goto	u3140
 13914   0023F6                     u3141:
 13915   0023F6  EFFE  F011         	goto	l4010
 13916   0023FA                     u3140:
 13917   0023FA  8E10               	bsf	___fladd@grs^0,7,c
 13918   0023FC                     l4010:
 13919   0023FC  3404               	rlcf	(___fladd@b+3)^0,w,c
 13920   0023FE  3204               	rrcf	(___fladd@b+3)^0,f,c
 13921   002400  3203               	rrcf	(___fladd@b+2)^0,f,c
 13922   002402  3202               	rrcf	(___fladd@b+1)^0,f,c
 13923   002404  3201               	rrcf	___fladd@b^0,f,c
 13924   002406  2A0F               	incf	___fladd@bexp^0,f,c
 13925   002408                     l1286:
 13926   002408  500E               	movf	___fladd@aexp^0,w,c
 13927   00240A  5C0F               	subwf	___fladd@bexp^0,w,c
 13928   00240C  A0D8               	btfss	status,0,c
 13929   00240E  EF0B  F012         	goto	u3151
 13930   002412  EF0D  F012         	goto	u3150
 13931   002416                     u3151:
 13932   002416  EFE7  F011         	goto	l1287
 13933   00241A                     u3150:
 13934   00241A                     l1285:
 13935   00241A  BC0D               	btfsc	___fladd@signs^0,6,c
 13936   00241C  EF12  F012         	goto	u3161
 13937   002420  EF14  F012         	goto	u3160
 13938   002424                     u3161:
 13939   002424  EF54  F012         	goto	l4038
 13940   002428                     u3160:
 13941   002428  500F               	movf	___fladd@bexp^0,w,c
 13942   00242A  A4D8               	btfss	status,2,c
 13943   00242C  EF1A  F012         	goto	u3171
 13944   002430  EF1C  F012         	goto	u3170
 13945   002434                     u3171:
 13946   002434  EF26  F012         	goto	l4020
 13947   002438                     u3170:
 13948   002438  0E00               	movlw	0
 13949   00243A  6E01               	movwf	?___fladd^0,c
 13950   00243C  0E00               	movlw	0
 13951   00243E  6E02               	movwf	(?___fladd+1)^0,c
 13952   002440  0E00               	movlw	0
 13953   002442  6E03               	movwf	(?___fladd+2)^0,c
 13954   002444  0E00               	movlw	0
 13955   002446  6E04               	movwf	(?___fladd+3)^0,c
 13956   002448  EF75  F013         	goto	l1294
 13957   00244C                     l4020:
 13958   00244C  5005               	movf	___fladd@a^0,w,c
 13959   00244E  2601               	addwf	___fladd@b^0,f,c
 13960   002450  5006               	movf	(___fladd@a+1)^0,w,c
 13961   002452  2202               	addwfc	(___fladd@b+1)^0,f,c
 13962   002454  5007               	movf	(___fladd@a+2)^0,w,c
 13963   002456  2203               	addwfc	(___fladd@b+2)^0,f,c
 13964   002458  5008               	movf	(___fladd@a+3)^0,w,c
 13965   00245A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13966   00245C  A004               	btfss	(___fladd@b+3)^0,0,c
 13967   00245E  EF33  F012         	goto	u3181
 13968   002462  EF35  F012         	goto	u3180
 13969   002466                     u3181:
 13970   002466  EFE1  F012         	goto	l4074
 13971   00246A                     u3180:
 13972   00246A  A010               	btfss	___fladd@grs^0,0,c
 13973   00246C  EF3A  F012         	goto	u3191
 13974   002470  EF3C  F012         	goto	u3190
 13975   002474                     u3191:
 13976   002474  EF42  F012         	goto	l4028
 13977   002478                     u3190:
 13978   002478  90D8               	bcf	status,0,c
 13979   00247A  3010               	rrcf	___fladd@grs^0,w,c
 13980   00247C  0901               	iorlw	1
 13981   00247E  6E10               	movwf	___fladd@grs^0,c
 13982   002480  EF44  F012         	goto	l4030
 13983   002484                     l4028:
 13984   002484  90D8               	bcf	status,0,c
 13985   002486  3210               	rrcf	___fladd@grs^0,f,c
 13986   002488                     l4030:
 13987   002488  A001               	btfss	___fladd@b^0,0,c
 13988   00248A  EF49  F012         	goto	u3201
 13989   00248E  EF4B  F012         	goto	u3200
 13990   002492                     u3201:
 13991   002492  EF4C  F012         	goto	l4034
 13992   002496                     u3200:
 13993   002496  8E10               	bsf	___fladd@grs^0,7,c
 13994   002498                     l4034:
 13995   002498  3404               	rlcf	(___fladd@b+3)^0,w,c
 13996   00249A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13997   00249C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13998   00249E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13999   0024A0  3201               	rrcf	___fladd@b^0,f,c
 14000   0024A2  2A0F               	incf	___fladd@bexp^0,f,c
 14001   0024A4  EFE1  F012         	goto	l4074
 14002   0024A8                     l4038:
 14003   0024A8  5005               	movf	___fladd@a^0,w,c
 14004   0024AA  5C01               	subwf	___fladd@b^0,w,c
 14005   0024AC  5006               	movf	(___fladd@a+1)^0,w,c
 14006   0024AE  5802               	subwfb	(___fladd@b+1)^0,w,c
 14007   0024B0  5007               	movf	(___fladd@a+2)^0,w,c
 14008   0024B2  5803               	subwfb	(___fladd@b+2)^0,w,c
 14009   0024B4  5004               	movf	(___fladd@b+3)^0,w,c
 14010   0024B6  0A80               	xorlw	128
 14011   0024B8  6E09               	movwf	??___fladd^0,c
 14012   0024BA  5008               	movf	(___fladd@a+3)^0,w,c
 14013   0024BC  0A80               	xorlw	128
 14014   0024BE  5809               	subwfb	??___fladd^0,w,c
 14015   0024C0  B0D8               	btfsc	status,0,c
 14016   0024C2  EF65  F012         	goto	u3211
 14017   0024C6  EF67  F012         	goto	u3210
 14018   0024CA                     u3211:
 14019   0024CA  EF92  F012         	goto	l4048
 14020   0024CE                     u3210:
 14021   0024CE  5001               	movf	___fladd@b^0,w,c
 14022   0024D0  5C05               	subwf	___fladd@a^0,w,c
 14023   0024D2  6E09               	movwf	??___fladd^0,c
 14024   0024D4  5002               	movf	(___fladd@b+1)^0,w,c
 14025   0024D6  5806               	subwfb	(___fladd@a+1)^0,w,c
 14026   0024D8  6E0A               	movwf	(??___fladd+1)^0,c
 14027   0024DA  5003               	movf	(___fladd@b+2)^0,w,c
 14028   0024DC  5807               	subwfb	(___fladd@a+2)^0,w,c
 14029   0024DE  6E0B               	movwf	(??___fladd+2)^0,c
 14030   0024E0  5004               	movf	(___fladd@b+3)^0,w,c
 14031   0024E2  5808               	subwfb	(___fladd@a+3)^0,w,c
 14032   0024E4  6E0C               	movwf	(??___fladd+3)^0,c
 14033   0024E6  0EFF               	movlw	255
 14034   0024E8  2409               	addwf	??___fladd^0,w,c
 14035   0024EA  6E01               	movwf	___fladd@b^0,c
 14036   0024EC  0EFF               	movlw	255
 14037   0024EE  200A               	addwfc	(??___fladd+1)^0,w,c
 14038   0024F0  6E02               	movwf	(___fladd@b+1)^0,c
 14039   0024F2  0EFF               	movlw	255
 14040   0024F4  200B               	addwfc	(??___fladd+2)^0,w,c
 14041   0024F6  6E03               	movwf	(___fladd@b+2)^0,c
 14042   0024F8  0EFF               	movlw	255
 14043   0024FA  200C               	addwfc	(??___fladd+3)^0,w,c
 14044   0024FC  6E04               	movwf	(___fladd@b+3)^0,c
 14045   0024FE  0E80               	movlw	128
 14046   002500  1A0D               	xorwf	___fladd@signs^0,f,c
 14047   002502  6C10               	negf	___fladd@grs^0,c
 14048   002504  5010               	movf	___fladd@grs^0,w,c
 14049   002506  A4D8               	btfss	status,2,c
 14050   002508  EF88  F012         	goto	u3221
 14051   00250C  EF8A  F012         	goto	u3220
 14052   002510                     u3221:
 14053   002510  EF9A  F012         	goto	l1302
 14054   002514                     u3220:
 14055   002514  0E01               	movlw	1
 14056   002516  2601               	addwf	___fladd@b^0,f,c
 14057   002518  0E00               	movlw	0
 14058   00251A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14059   00251C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14060   00251E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14061   002520  EF9A  F012         	goto	l1302
 14062   002524                     l4048:
 14063   002524  5005               	movf	___fladd@a^0,w,c
 14064   002526  5E01               	subwf	___fladd@b^0,f,c
 14065   002528  5006               	movf	(___fladd@a+1)^0,w,c
 14066   00252A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 14067   00252C  5007               	movf	(___fladd@a+2)^0,w,c
 14068   00252E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 14069   002530  5008               	movf	(___fladd@a+3)^0,w,c
 14070   002532  5A04               	subwfb	(___fladd@b+3)^0,f,c
 14071   002534                     l1302:
 14072   002534  5001               	movf	___fladd@b^0,w,c
 14073   002536  1002               	iorwf	(___fladd@b+1)^0,w,c
 14074   002538  1003               	iorwf	(___fladd@b+2)^0,w,c
 14075   00253A  1004               	iorwf	(___fladd@b+3)^0,w,c
 14076   00253C  A4D8               	btfss	status,2,c
 14077   00253E  EFA3  F012         	goto	u3231
 14078   002542  EFA5  F012         	goto	u3230
 14079   002546                     u3231:
 14080   002546  EFDA  F012         	goto	l4072
 14081   00254A                     u3230:
 14082   00254A  5010               	movf	___fladd@grs^0,w,c
 14083   00254C  A4D8               	btfss	status,2,c
 14084   00254E  EFAB  F012         	goto	u3241
 14085   002552  EFAD  F012         	goto	u3240
 14086   002556                     u3241:
 14087   002556  EFDA  F012         	goto	l4072
 14088   00255A                     u3240:
 14089   00255A  0E00               	movlw	0
 14090   00255C  6E01               	movwf	?___fladd^0,c
 14091   00255E  0E00               	movlw	0
 14092   002560  6E02               	movwf	(?___fladd+1)^0,c
 14093   002562  0E00               	movlw	0
 14094   002564  6E03               	movwf	(?___fladd+2)^0,c
 14095   002566  0E00               	movlw	0
 14096   002568  6E04               	movwf	(?___fladd+3)^0,c
 14097   00256A  EF75  F013         	goto	l1294
 14098   00256E                     l4056:
 14099   00256E  90D8               	bcf	status,0,c
 14100   002570  3601               	rlcf	___fladd@b^0,f,c
 14101   002572  3602               	rlcf	(___fladd@b+1)^0,f,c
 14102   002574  3603               	rlcf	(___fladd@b+2)^0,f,c
 14103   002576  3604               	rlcf	(___fladd@b+3)^0,f,c
 14104   002578  AE10               	btfss	___fladd@grs^0,7,c
 14105   00257A  EFC1  F012         	goto	u3251
 14106   00257E  EFC3  F012         	goto	u3250
 14107   002582                     u3251:
 14108   002582  EFC4  F012         	goto	l4062
 14109   002586                     u3250:
 14110   002586  8001               	bsf	___fladd@b^0,0,c
 14111   002588                     l4062:
 14112   002588  A010               	btfss	___fladd@grs^0,0,c
 14113   00258A  EFC9  F012         	goto	u3261
 14114   00258E  EFCB  F012         	goto	u3260
 14115   002592                     u3261:
 14116   002592  EFCF  F012         	goto	l4066
 14117   002596                     u3260:
 14118   002596  80D8               	bsf	status,0,c
 14119   002598  3610               	rlcf	___fladd@grs^0,f,c
 14120   00259A  EFD1  F012         	goto	l4068
 14121   00259E                     l4066:
 14122   00259E  90D8               	bcf	status,0,c
 14123   0025A0  3610               	rlcf	___fladd@grs^0,f,c
 14124   0025A2                     l4068:
 14125   0025A2  500F               	movf	___fladd@bexp^0,w,c
 14126   0025A4  B4D8               	btfsc	status,2,c
 14127   0025A6  EFD7  F012         	goto	u3271
 14128   0025AA  EFD9  F012         	goto	u3270
 14129   0025AE                     u3271:
 14130   0025AE  EFDA  F012         	goto	l4072
 14131   0025B2                     u3270:
 14132   0025B2  060F               	decf	___fladd@bexp^0,f,c
 14133   0025B4                     l4072:
 14134   0025B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 14135   0025B6  EFDF  F012         	goto	u3281
 14136   0025BA  EFE1  F012         	goto	u3280
 14137   0025BE                     u3281:
 14138   0025BE  EFB7  F012         	goto	l4056
 14139   0025C2                     u3280:
 14140   0025C2                     l4074:
 14141   0025C2  0E00               	movlw	0
 14142   0025C4  6E0E               	movwf	___fladd@aexp^0,c
 14143   0025C6  AE10               	btfss	___fladd@grs^0,7,c
 14144   0025C8  EFE8  F012         	goto	u3291
 14145   0025CC  EFEA  F012         	goto	u3290
 14146   0025D0                     u3291:
 14147   0025D0  EF02  F013         	goto	l1311
 14148   0025D4                     u3290:
 14149   0025D4  C010  F009         	movff	___fladd@grs,??___fladd
 14150   0025D8  0E7F               	movlw	127
 14151   0025DA  1609               	andwf	??___fladd^0,f,c
 14152   0025DC  B4D8               	btfsc	status,2,c
 14153   0025DE  EFF3  F012         	goto	u3301
 14154   0025E2  EFF5  F012         	goto	u3300
 14155   0025E6                     u3301:
 14156   0025E6  EFF9  F012         	goto	l1312
 14157   0025EA                     u3300:
 14158   0025EA                     l4080:
 14159   0025EA  0E01               	movlw	1
 14160   0025EC  6E0E               	movwf	___fladd@aexp^0,c
 14161   0025EE  EF02  F013         	goto	l1311
 14162   0025F2                     l1312:
 14163   0025F2  A001               	btfss	___fladd@b^0,0,c
 14164   0025F4  EFFE  F012         	goto	u3311
 14165   0025F8  EF00  F013         	goto	u3310
 14166   0025FC                     u3311:
 14167   0025FC  EF02  F013         	goto	l1311
 14168   002600                     u3310:
 14169   002600  EFF5  F012         	goto	l4080
 14170   002604                     l1311:
 14171   002604  500E               	movf	___fladd@aexp^0,w,c
 14172   002606  B4D8               	btfsc	status,2,c
 14173   002608  EF08  F013         	goto	u3321
 14174   00260C  EF0A  F013         	goto	u3320
 14175   002610                     u3321:
 14176   002610  EF35  F013         	goto	l4092
 14177   002614                     u3320:
 14178   002614  0E01               	movlw	1
 14179   002616  2601               	addwf	___fladd@b^0,f,c
 14180   002618  0E00               	movlw	0
 14181   00261A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14182   00261C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14183   00261E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14184   002620  A004               	btfss	(___fladd@b+3)^0,0,c
 14185   002622  EF15  F013         	goto	u3331
 14186   002626  EF17  F013         	goto	u3330
 14187   00262A                     u3331:
 14188   00262A  EF35  F013         	goto	l4092
 14189   00262E                     u3330:
 14190   00262E  C001  F009         	movff	___fladd@b,??___fladd
 14191   002632  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 14192   002636  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 14193   00263A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 14194   00263E  340C               	rlcf	(??___fladd+3)^0,w,c
 14195   002640  320C               	rrcf	(??___fladd+3)^0,f,c
 14196   002642  320B               	rrcf	(??___fladd+2)^0,f,c
 14197   002644  320A               	rrcf	(??___fladd+1)^0,f,c
 14198   002646  3209               	rrcf	??___fladd^0,f,c
 14199   002648  C009  F001         	movff	??___fladd,___fladd@b
 14200   00264C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 14201   002650  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 14202   002654  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 14203   002658  280F               	incf	___fladd@bexp^0,w,c
 14204   00265A  B4D8               	btfsc	status,2,c
 14205   00265C  EF32  F013         	goto	u3341
 14206   002660  EF34  F013         	goto	u3340
 14207   002664                     u3341:
 14208   002664  EF35  F013         	goto	l4092
 14209   002668                     u3340:
 14210   002668  2A0F               	incf	___fladd@bexp^0,f,c
 14211   00266A                     l4092:
 14212   00266A  280F               	incf	___fladd@bexp^0,w,c
 14213   00266C  B4D8               	btfsc	status,2,c
 14214   00266E  EF3B  F013         	goto	u3351
 14215   002672  EF3D  F013         	goto	u3350
 14216   002676                     u3351:
 14217   002676  EF45  F013         	goto	l4096
 14218   00267A                     u3350:
 14219   00267A  500F               	movf	___fladd@bexp^0,w,c
 14220   00267C  A4D8               	btfss	status,2,c
 14221   00267E  EF43  F013         	goto	u3361
 14222   002682  EF45  F013         	goto	u3360
 14223   002686                     u3361:
 14224   002686  EF57  F013         	goto	l4100
 14225   00268A                     u3360:
 14226   00268A                     l4096:
 14227   00268A  0E00               	movlw	0
 14228   00268C  6E01               	movwf	___fladd@b^0,c
 14229   00268E  0E00               	movlw	0
 14230   002690  6E02               	movwf	(___fladd@b+1)^0,c
 14231   002692  0E00               	movlw	0
 14232   002694  6E03               	movwf	(___fladd@b+2)^0,c
 14233   002696  0E00               	movlw	0
 14234   002698  6E04               	movwf	(___fladd@b+3)^0,c
 14235   00269A  500F               	movf	___fladd@bexp^0,w,c
 14236   00269C  A4D8               	btfss	status,2,c
 14237   00269E  EF53  F013         	goto	u3371
 14238   0026A2  EF55  F013         	goto	u3370
 14239   0026A6                     u3371:
 14240   0026A6  EF57  F013         	goto	l4100
 14241   0026AA                     u3370:
 14242   0026AA  0E00               	movlw	0
 14243   0026AC  6E0D               	movwf	___fladd@signs^0,c
 14244   0026AE                     l4100:
 14245   0026AE  A00F               	btfss	___fladd@bexp^0,0,c
 14246   0026B0  EF5C  F013         	goto	u3381
 14247   0026B4  EF5E  F013         	goto	u3380
 14248   0026B8                     u3381:
 14249   0026B8  EF61  F013         	goto	l4104
 14250   0026BC                     u3380:
 14251   0026BC  8E03               	bsf	(___fladd@b+2)^0,7,c
 14252   0026BE  EF62  F013         	goto	l4106
 14253   0026C2                     l4104:
 14254   0026C2  9E03               	bcf	(___fladd@b+2)^0,7,c
 14255   0026C4                     l4106:
 14256   0026C4  90D8               	bcf	status,0,c
 14257   0026C6  300F               	rrcf	___fladd@bexp^0,w,c
 14258   0026C8  6E04               	movwf	(___fladd@b+3)^0,c
 14259   0026CA  AE0D               	btfss	___fladd@signs^0,7,c
 14260   0026CC  EF6A  F013         	goto	u3391
 14261   0026D0  EF6C  F013         	goto	u3390
 14262   0026D4                     u3391:
 14263   0026D4  EF6D  F013         	goto	l4112
 14264   0026D8                     u3390:
 14265   0026D8  8E04               	bsf	(___fladd@b+3)^0,7,c
 14266   0026DA                     l4112:
 14267   0026DA  C001  F001         	movff	___fladd@b,?___fladd
 14268   0026DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14269   0026E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14270   0026E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14271   0026EA                     l1294:
 14272   0026EA  0012               	return		;funcret
 14273   0026EC                     __end_of___fladd:
 14274                           	callstack 0
 14275                           
 14276 ;; *************** function ___flmul *****************
 14277 ;; Defined at:
 14278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;  b               4   16[COMRAM] unsigned char 
 14281 ;;  a               4   20[COMRAM] unsigned char 
 14282 ;; Auto vars:     Size  Location     Type
 14283 ;;  prod            4   35[COMRAM] struct .
 14284 ;;  grs             4   29[COMRAM] unsigned long 
 14285 ;;  temp            2   39[COMRAM] struct .
 14286 ;;  bexp            1   34[COMRAM] unsigned char 
 14287 ;;  aexp            1   33[COMRAM] unsigned char 
 14288 ;;  sign            1   28[COMRAM] unsigned char 
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  4   16[COMRAM] unsigned char 
 14291 ;; Registers used:
 14292 ;;		wreg, status,2, status,0, prodl, prodh
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14298 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14299 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14301 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14302 ;;Total ram usage:       25 bytes
 14303 ;; Hardware stack levels used: 1
 14304 ;; Hardware stack levels required when called: 1
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_Colour_decider
 14309 ;;		_reverseOneBlock
 14310 ;;		_ForwardOneBlock
 14311 ;;		_Forwardhalfblock
 14312 ;;		_Backhalfblock
 14313 ;;		_efgtoa
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           	psect	text81
 14318   0026EC                     __ptext81:
 14319                           	callstack 0
 14320   0026EC                     ___flmul:
 14321                           	callstack 25
 14322   0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 14323   0026EE  0B80               	andlw	128
 14324   0026F0  6E1D               	movwf	___flmul@sign^0,c
 14325   0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 14326   0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 14327   0026F6  6E23               	movwf	___flmul@bexp^0,c
 14328   0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14329   0026FA  EF81  F013         	goto	u3881
 14330   0026FE  EF83  F013         	goto	u3880
 14331   002702                     u3881:
 14332   002702  EF84  F013         	goto	l4424
 14333   002706                     u3880:
 14334   002706  8023               	bsf	___flmul@bexp^0,0,c
 14335   002708                     l4424:
 14336   002708  5023               	movf	___flmul@bexp^0,w,c
 14337   00270A  B4D8               	btfsc	status,2,c
 14338   00270C  EF8A  F013         	goto	u3891
 14339   002710  EF8C  F013         	goto	u3890
 14340   002714                     u3891:
 14341   002714  EF9F  F013         	goto	l4432
 14342   002718                     u3890:
 14343   002718  2823               	incf	___flmul@bexp^0,w,c
 14344   00271A  A4D8               	btfss	status,2,c
 14345   00271C  EF92  F013         	goto	u3901
 14346   002720  EF94  F013         	goto	u3900
 14347   002724                     u3901:
 14348   002724  EF9C  F013         	goto	l4430
 14349   002728                     u3900:
 14350   002728  0E00               	movlw	0
 14351   00272A  6E11               	movwf	___flmul@b^0,c
 14352   00272C  0E00               	movlw	0
 14353   00272E  6E12               	movwf	(___flmul@b+1)^0,c
 14354   002730  0E00               	movlw	0
 14355   002732  6E13               	movwf	(___flmul@b+2)^0,c
 14356   002734  0E00               	movlw	0
 14357   002736  6E14               	movwf	(___flmul@b+3)^0,c
 14358   002738                     l4430:
 14359   002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 14360   00273A  EFA7  F013         	goto	l4434
 14361   00273E                     l4432:
 14362   00273E  0E00               	movlw	0
 14363   002740  6E11               	movwf	___flmul@b^0,c
 14364   002742  0E00               	movlw	0
 14365   002744  6E12               	movwf	(___flmul@b+1)^0,c
 14366   002746  0E00               	movlw	0
 14367   002748  6E13               	movwf	(___flmul@b+2)^0,c
 14368   00274A  0E00               	movlw	0
 14369   00274C  6E14               	movwf	(___flmul@b+3)^0,c
 14370   00274E                     l4434:
 14371   00274E  5018               	movf	(___flmul@a+3)^0,w,c
 14372   002750  0B80               	andlw	128
 14373   002752  1A1D               	xorwf	___flmul@sign^0,f,c
 14374   002754  5018               	movf	(___flmul@a+3)^0,w,c
 14375   002756  2418               	addwf	(___flmul@a+3)^0,w,c
 14376   002758  6E22               	movwf	___flmul@aexp^0,c
 14377   00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14378   00275C  EFB2  F013         	goto	u3911
 14379   002760  EFB4  F013         	goto	u3910
 14380   002764                     u3911:
 14381   002764  EFB5  F013         	goto	l4442
 14382   002768                     u3910:
 14383   002768  8022               	bsf	___flmul@aexp^0,0,c
 14384   00276A                     l4442:
 14385   00276A  5022               	movf	___flmul@aexp^0,w,c
 14386   00276C  B4D8               	btfsc	status,2,c
 14387   00276E  EFBB  F013         	goto	u3921
 14388   002772  EFBD  F013         	goto	u3920
 14389   002776                     u3921:
 14390   002776  EFD0  F013         	goto	l4450
 14391   00277A                     u3920:
 14392   00277A  2822               	incf	___flmul@aexp^0,w,c
 14393   00277C  A4D8               	btfss	status,2,c
 14394   00277E  EFC3  F013         	goto	u3931
 14395   002782  EFC5  F013         	goto	u3930
 14396   002786                     u3931:
 14397   002786  EFCD  F013         	goto	l4448
 14398   00278A                     u3930:
 14399   00278A  0E00               	movlw	0
 14400   00278C  6E15               	movwf	___flmul@a^0,c
 14401   00278E  0E00               	movlw	0
 14402   002790  6E16               	movwf	(___flmul@a+1)^0,c
 14403   002792  0E00               	movlw	0
 14404   002794  6E17               	movwf	(___flmul@a+2)^0,c
 14405   002796  0E00               	movlw	0
 14406   002798  6E18               	movwf	(___flmul@a+3)^0,c
 14407   00279A                     l4448:
 14408   00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14409   00279C  EFD8  F013         	goto	l1371
 14410   0027A0                     l4450:
 14411   0027A0  0E00               	movlw	0
 14412   0027A2  6E15               	movwf	___flmul@a^0,c
 14413   0027A4  0E00               	movlw	0
 14414   0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 14415   0027A8  0E00               	movlw	0
 14416   0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 14417   0027AC  0E00               	movlw	0
 14418   0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 14419   0027B0                     l1371:
 14420   0027B0  5022               	movf	___flmul@aexp^0,w,c
 14421   0027B2  B4D8               	btfsc	status,2,c
 14422   0027B4  EFDE  F013         	goto	u3941
 14423   0027B8  EFE0  F013         	goto	u3940
 14424   0027BC                     u3941:
 14425   0027BC  EFE8  F013         	goto	l4454
 14426   0027C0                     u3940:
 14427   0027C0  5023               	movf	___flmul@bexp^0,w,c
 14428   0027C2  A4D8               	btfss	status,2,c
 14429   0027C4  EFE6  F013         	goto	u3951
 14430   0027C8  EFE8  F013         	goto	u3950
 14431   0027CC                     u3951:
 14432   0027CC  EFF2  F013         	goto	l4458
 14433   0027D0                     u3950:
 14434   0027D0                     l4454:
 14435   0027D0  0E00               	movlw	0
 14436   0027D2  6E11               	movwf	?___flmul^0,c
 14437   0027D4  0E00               	movlw	0
 14438   0027D6  6E12               	movwf	(?___flmul+1)^0,c
 14439   0027D8  0E00               	movlw	0
 14440   0027DA  6E13               	movwf	(?___flmul+2)^0,c
 14441   0027DC  0E00               	movlw	0
 14442   0027DE  6E14               	movwf	(?___flmul+3)^0,c
 14443   0027E0  EF8A  F015         	goto	l1375
 14444   0027E4                     l4458:
 14445   0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 14446   0027E6  0211               	mulwf	___flmul@b^0,c
 14447   0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 14448   0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14449   0027F0  5028               	movf	___flmul@temp^0,w,c
 14450   0027F2  6E1E               	movwf	___flmul@grs^0,c
 14451   0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14452   0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 14453   0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 14454   0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 14455   0027FC  6E24               	movwf	___flmul@prod^0,c
 14456   0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 14457   002800  6A26               	clrf	(___flmul@prod+2)^0,c
 14458   002802  6A27               	clrf	(___flmul@prod+3)^0,c
 14459   002804  5016               	movf	(___flmul@a+1)^0,w,c
 14460   002806  0212               	mulwf	(___flmul@b+1)^0,c
 14461   002808  CFF3 F028          	movff	prodl,___flmul@temp
 14462   00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14463   002810  5028               	movf	___flmul@temp^0,w,c
 14464   002812  261E               	addwf	___flmul@grs^0,f,c
 14465   002814  0E00               	movlw	0
 14466   002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14467   002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14468   00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14469   00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 14470   00281E  2624               	addwf	___flmul@prod^0,f,c
 14471   002820  0E00               	movlw	0
 14472   002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14473   002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14474   002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14475   002828  5015               	movf	___flmul@a^0,w,c
 14476   00282A  0213               	mulwf	(___flmul@b+2)^0,c
 14477   00282C  CFF3 F028          	movff	prodl,___flmul@temp
 14478   002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 14479   002834  5028               	movf	___flmul@temp^0,w,c
 14480   002836  261E               	addwf	___flmul@grs^0,f,c
 14481   002838  0E00               	movlw	0
 14482   00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14483   00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14484   00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14485   002840  5029               	movf	(___flmul@temp+1)^0,w,c
 14486   002842  2624               	addwf	___flmul@prod^0,f,c
 14487   002844  0E00               	movlw	0
 14488   002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14489   002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14490   00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14491   00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14492   002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14493   002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14494   002858  6A1E               	clrf	___flmul@grs^0,c
 14495   00285A  5015               	movf	___flmul@a^0,w,c
 14496   00285C  0212               	mulwf	(___flmul@b+1)^0,c
 14497   00285E  CFF3 F028          	movff	prodl,___flmul@temp
 14498   002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 14499   002866  5028               	movf	___flmul@temp^0,w,c
 14500   002868  261E               	addwf	___flmul@grs^0,f,c
 14501   00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 14502   00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14503   00286E  0E00               	movlw	0
 14504   002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14505   002872  0E00               	movlw	0
 14506   002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14507   002876  5016               	movf	(___flmul@a+1)^0,w,c
 14508   002878  0211               	mulwf	___flmul@b^0,c
 14509   00287A  CFF3 F028          	movff	prodl,___flmul@temp
 14510   00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14511   002882  5028               	movf	___flmul@temp^0,w,c
 14512   002884  261E               	addwf	___flmul@grs^0,f,c
 14513   002886  5029               	movf	(___flmul@temp+1)^0,w,c
 14514   002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14515   00288A  0E00               	movlw	0
 14516   00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14517   00288E  0E00               	movlw	0
 14518   002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14519   002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14520   002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14521   00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14522   00289E  6A1E               	clrf	___flmul@grs^0,c
 14523   0028A0  5015               	movf	___flmul@a^0,w,c
 14524   0028A2  0211               	mulwf	___flmul@b^0,c
 14525   0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 14526   0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14527   0028AC  5028               	movf	___flmul@temp^0,w,c
 14528   0028AE  261E               	addwf	___flmul@grs^0,f,c
 14529   0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 14530   0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14531   0028B4  0E00               	movlw	0
 14532   0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14533   0028B8  0E00               	movlw	0
 14534   0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14535   0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 14536   0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 14537   0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 14538   0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14539   0028C8  5028               	movf	___flmul@temp^0,w,c
 14540   0028CA  2624               	addwf	___flmul@prod^0,f,c
 14541   0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 14542   0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14543   0028D0  0E00               	movlw	0
 14544   0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14545   0028D4  0E00               	movlw	0
 14546   0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14547   0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 14548   0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 14549   0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 14550   0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14551   0028E4  5028               	movf	___flmul@temp^0,w,c
 14552   0028E6  2624               	addwf	___flmul@prod^0,f,c
 14553   0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 14554   0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14555   0028EC  0E00               	movlw	0
 14556   0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14557   0028F0  0E00               	movlw	0
 14558   0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14559   0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 14560   0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 14561   0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 14562   0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14563   002900  5028               	movf	___flmul@temp^0,w,c
 14564   002902  6E19               	movwf	??___flmul^0,c
 14565   002904  5029               	movf	(___flmul@temp+1)^0,w,c
 14566   002906  6E1A               	movwf	(??___flmul+1)^0,c
 14567   002908  6A1B               	clrf	(??___flmul+2)^0,c
 14568   00290A  6A1C               	clrf	(??___flmul+3)^0,c
 14569   00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14570   002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14571   002914  C019  F01A         	movff	??___flmul,??___flmul+1
 14572   002918  6A19               	clrf	??___flmul^0,c
 14573   00291A  5019               	movf	??___flmul^0,w,c
 14574   00291C  2624               	addwf	___flmul@prod^0,f,c
 14575   00291E  501A               	movf	(??___flmul+1)^0,w,c
 14576   002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14577   002922  501B               	movf	(??___flmul+2)^0,w,c
 14578   002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14579   002926  501C               	movf	(??___flmul+3)^0,w,c
 14580   002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14581   00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 14582   00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14583   002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14584   002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14585   00293A  0E19               	movlw	25
 14586   00293C  EFA5  F014         	goto	u3960
 14587   002940                     u3965:
 14588   002940  90D8               	bcf	status,0,c
 14589   002942  321C               	rrcf	(??___flmul+3)^0,f,c
 14590   002944  321B               	rrcf	(??___flmul+2)^0,f,c
 14591   002946  321A               	rrcf	(??___flmul+1)^0,f,c
 14592   002948  3219               	rrcf	??___flmul^0,f,c
 14593   00294A                     u3960:
 14594   00294A  2EE8               	decfsz	wreg,f,c
 14595   00294C  EFA0  F014         	goto	u3965
 14596   002950  5019               	movf	??___flmul^0,w,c
 14597   002952  2624               	addwf	___flmul@prod^0,f,c
 14598   002954  501A               	movf	(??___flmul+1)^0,w,c
 14599   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14600   002958  501B               	movf	(??___flmul+2)^0,w,c
 14601   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14602   00295C  501C               	movf	(??___flmul+3)^0,w,c
 14603   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14604   002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14605   002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14606   002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14607   00296C  6A1E               	clrf	___flmul@grs^0,c
 14608   00296E  5022               	movf	___flmul@aexp^0,w,c
 14609   002970  C023  F019         	movff	___flmul@bexp,??___flmul
 14610   002974  6A1A               	clrf	(??___flmul+1)^0,c
 14611   002976  2619               	addwf	??___flmul^0,f,c
 14612   002978  0E00               	movlw	0
 14613   00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 14614   00297C  0E82               	movlw	130
 14615   00297E  2419               	addwf	??___flmul^0,w,c
 14616   002980  6E28               	movwf	___flmul@temp^0,c
 14617   002982  0EFF               	movlw	255
 14618   002984  201A               	addwfc	(??___flmul+1)^0,w,c
 14619   002986  6E29               	movwf	(___flmul@temp+1)^0,c
 14620   002988  EFDB  F014         	goto	l4506
 14621   00298C                     l4500:
 14622   00298C  90D8               	bcf	status,0,c
 14623   00298E  3624               	rlcf	___flmul@prod^0,f,c
 14624   002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14625   002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14626   002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14627   002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14628   002998  EFD0  F014         	goto	u3971
 14629   00299C  EFD2  F014         	goto	u3970
 14630   0029A0                     u3971:
 14631   0029A0  EFD3  F014         	goto	l1378
 14632   0029A4                     u3970:
 14633   0029A4  8024               	bsf	___flmul@prod^0,0,c
 14634   0029A6                     l1378:
 14635   0029A6  90D8               	bcf	status,0,c
 14636   0029A8  361E               	rlcf	___flmul@grs^0,f,c
 14637   0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14638   0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14639   0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14640   0029B0  0628               	decf	___flmul@temp^0,f,c
 14641   0029B2  A0D8               	btfss	status,0,c
 14642   0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14643   0029B6                     l4506:
 14644   0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14645   0029B8  EFE0  F014         	goto	u3981
 14646   0029BC  EFE2  F014         	goto	u3980
 14647   0029C0                     u3981:
 14648   0029C0  EFC6  F014         	goto	l4500
 14649   0029C4                     u3980:
 14650   0029C4  0E00               	movlw	0
 14651   0029C6  6E22               	movwf	___flmul@aexp^0,c
 14652   0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14653   0029CA  EFE9  F014         	goto	u3991
 14654   0029CE  EFEB  F014         	goto	u3990
 14655   0029D2                     u3991:
 14656   0029D2  EF0F  F015         	goto	l1380
 14657   0029D6                     u3990:
 14658   0029D6  0EFF               	movlw	255
 14659   0029D8  141E               	andwf	___flmul@grs^0,w,c
 14660   0029DA  6E19               	movwf	??___flmul^0,c
 14661   0029DC  0EFF               	movlw	255
 14662   0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14663   0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 14664   0029E2  0EFF               	movlw	255
 14665   0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14666   0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 14667   0029E8  0E7F               	movlw	127
 14668   0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14669   0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 14670   0029EE  5019               	movf	??___flmul^0,w,c
 14671   0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14672   0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14673   0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14674   0029F6  B4D8               	btfsc	status,2,c
 14675   0029F8  EF00  F015         	goto	u4001
 14676   0029FC  EF02  F015         	goto	u4000
 14677   002A00                     u4001:
 14678   002A00  EF06  F015         	goto	l1381
 14679   002A04                     u4000:
 14680   002A04                     l4514:
 14681   002A04  0E01               	movlw	1
 14682   002A06  6E22               	movwf	___flmul@aexp^0,c
 14683   002A08  EF0F  F015         	goto	l1380
 14684   002A0C                     l1381:
 14685   002A0C  A024               	btfss	___flmul@prod^0,0,c
 14686   002A0E  EF0B  F015         	goto	u4011
 14687   002A12  EF0D  F015         	goto	u4010
 14688   002A16                     u4011:
 14689   002A16  EF0F  F015         	goto	l1380
 14690   002A1A                     u4010:
 14691   002A1A  EF02  F015         	goto	l4514
 14692   002A1E                     l1380:
 14693   002A1E  5022               	movf	___flmul@aexp^0,w,c
 14694   002A20  B4D8               	btfsc	status,2,c
 14695   002A22  EF15  F015         	goto	u4021
 14696   002A26  EF17  F015         	goto	u4020
 14697   002A2A                     u4021:
 14698   002A2A  EF3B  F015         	goto	l4526
 14699   002A2E                     u4020:
 14700   002A2E  0E01               	movlw	1
 14701   002A30  2624               	addwf	___flmul@prod^0,f,c
 14702   002A32  0E00               	movlw	0
 14703   002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14704   002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14705   002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14706   002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14707   002A3C  EF22  F015         	goto	u4031
 14708   002A40  EF24  F015         	goto	u4030
 14709   002A44                     u4031:
 14710   002A44  EF3B  F015         	goto	l4526
 14711   002A48                     u4030:
 14712   002A48  C024  F019         	movff	___flmul@prod,??___flmul
 14713   002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14714   002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14715   002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14716   002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 14717   002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 14718   002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 14719   002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 14720   002A60  3219               	rrcf	??___flmul^0,f,c
 14721   002A62  C019  F024         	movff	??___flmul,___flmul@prod
 14722   002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14723   002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14724   002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14725   002A72  4A28               	infsnz	___flmul@temp^0,f,c
 14726   002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 14727   002A76                     l4526:
 14728   002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14729   002A78  EF46  F015         	goto	u4041
 14730   002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 14731   002A7E  E108               	bnz	u4040
 14732   002A80  2828               	incf	___flmul@temp^0,w,c
 14733   002A82  A0D8               	btfss	status,0,c
 14734   002A84  EF46  F015         	goto	u4041
 14735   002A88  EF48  F015         	goto	u4040
 14736   002A8C                     u4041:
 14737   002A8C  EF52  F015         	goto	l4530
 14738   002A90                     u4040:
 14739   002A90  0E00               	movlw	0
 14740   002A92  6E24               	movwf	___flmul@prod^0,c
 14741   002A94  0E00               	movlw	0
 14742   002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 14743   002A98  0E80               	movlw	128
 14744   002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 14745   002A9C  0E7F               	movlw	127
 14746   002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 14747   002AA0  EF80  F015         	goto	l4542
 14748   002AA4                     l4530:
 14749   002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14750   002AA6  EF5F  F015         	goto	u4050
 14751   002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 14752   002AAC  E106               	bnz	u4051
 14753   002AAE  0428               	decf	___flmul@temp^0,w,c
 14754   002AB0  B0D8               	btfsc	status,0,c
 14755   002AB2  EF5D  F015         	goto	u4051
 14756   002AB6  EF5F  F015         	goto	u4050
 14757   002ABA                     u4051:
 14758   002ABA  EF6B  F015         	goto	l1388
 14759   002ABE                     u4050:
 14760   002ABE  0E00               	movlw	0
 14761   002AC0  6E24               	movwf	___flmul@prod^0,c
 14762   002AC2  0E00               	movlw	0
 14763   002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 14764   002AC6  0E00               	movlw	0
 14765   002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 14766   002ACA  0E00               	movlw	0
 14767   002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 14768   002ACE  0E00               	movlw	0
 14769   002AD0  6E1D               	movwf	___flmul@sign^0,c
 14770   002AD2  EF80  F015         	goto	l4542
 14771   002AD6                     l1388:
 14772   002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14773   002ADA  0EFF               	movlw	255
 14774   002ADC  1624               	andwf	___flmul@prod^0,f,c
 14775   002ADE  0EFF               	movlw	255
 14776   002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14777   002AE2  0E7F               	movlw	127
 14778   002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14779   002AE6  0E00               	movlw	0
 14780   002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14781   002AEA  A023               	btfss	___flmul@bexp^0,0,c
 14782   002AEC  EF7A  F015         	goto	u4061
 14783   002AF0  EF7C  F015         	goto	u4060
 14784   002AF4                     u4061:
 14785   002AF4  EF7D  F015         	goto	l4540
 14786   002AF8                     u4060:
 14787   002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14788   002AFA                     l4540:
 14789   002AFA  90D8               	bcf	status,0,c
 14790   002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 14791   002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 14792   002B00                     l4542:
 14793   002B00  501D               	movf	___flmul@sign^0,w,c
 14794   002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14795   002B04  C024  F011         	movff	___flmul@prod,?___flmul
 14796   002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14797   002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14798   002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14799   002B14                     l1375:
 14800   002B14  0012               	return		;funcret
 14801   002B16                     __end_of___flmul:
 14802                           	callstack 0
 14803                           
 14804 ;; *************** function ___flge *****************
 14805 ;; Defined at:
 14806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14807 ;; Parameters:    Size  Location     Type
 14808 ;;  ff1             4   41[COMRAM] unsigned char 
 14809 ;;  ff2             4   45[COMRAM] unsigned char 
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;		None
 14812 ;; Return value:  Size  Location     Type
 14813 ;;		None               void
 14814 ;; Registers used:
 14815 ;;		wreg, status,2, status,0
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14821 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14823 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14824 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14825 ;;Total ram usage:       12 bytes
 14826 ;; Hardware stack levels used: 1
 14827 ;; Hardware stack levels required when called: 1
 14828 ;; This function calls:
 14829 ;;		Nothing
 14830 ;; This function is called by:
 14831 ;;		_Colour_decider
 14832 ;;		_efgtoa
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text82
 14837   0049F2                     __ptext82:
 14838                           	callstack 0
 14839   0049F2                     ___flge:
 14840                           	callstack 25
 14841   0049F2  0E00               	movlw	0
 14842   0049F4  142A               	andwf	___flge@ff1^0,w,c
 14843   0049F6  6E32               	movwf	??___flge^0,c
 14844   0049F8  0E00               	movlw	0
 14845   0049FA  142B               	andwf	(___flge@ff1+1)^0,w,c
 14846   0049FC  6E33               	movwf	(??___flge+1)^0,c
 14847   0049FE  0E80               	movlw	128
 14848   004A00  142C               	andwf	(___flge@ff1+2)^0,w,c
 14849   004A02  6E34               	movwf	(??___flge+2)^0,c
 14850   004A04  0E7F               	movlw	127
 14851   004A06  142D               	andwf	(___flge@ff1+3)^0,w,c
 14852   004A08  6E35               	movwf	(??___flge+3)^0,c
 14853   004A0A  5032               	movf	??___flge^0,w,c
 14854   004A0C  1033               	iorwf	(??___flge+1)^0,w,c
 14855   004A0E  1034               	iorwf	(??___flge+2)^0,w,c
 14856   004A10  1035               	iorwf	(??___flge+3)^0,w,c
 14857   004A12  A4D8               	btfss	status,2,c
 14858   004A14  EF0E  F025         	goto	u4101
 14859   004A18  EF10  F025         	goto	u4100
 14860   004A1C                     u4101:
 14861   004A1C  EF18  F025         	goto	l4574
 14862   004A20                     u4100:
 14863   004A20  0E00               	movlw	0
 14864   004A22  6E2A               	movwf	___flge@ff1^0,c
 14865   004A24  0E00               	movlw	0
 14866   004A26  6E2B               	movwf	(___flge@ff1+1)^0,c
 14867   004A28  0E00               	movlw	0
 14868   004A2A  6E2C               	movwf	(___flge@ff1+2)^0,c
 14869   004A2C  0E00               	movlw	0
 14870   004A2E  6E2D               	movwf	(___flge@ff1+3)^0,c
 14871   004A30                     l4574:
 14872   004A30  0E00               	movlw	0
 14873   004A32  142E               	andwf	___flge@ff2^0,w,c
 14874   004A34  6E32               	movwf	??___flge^0,c
 14875   004A36  0E00               	movlw	0
 14876   004A38  142F               	andwf	(___flge@ff2+1)^0,w,c
 14877   004A3A  6E33               	movwf	(??___flge+1)^0,c
 14878   004A3C  0E80               	movlw	128
 14879   004A3E  1430               	andwf	(___flge@ff2+2)^0,w,c
 14880   004A40  6E34               	movwf	(??___flge+2)^0,c
 14881   004A42  0E7F               	movlw	127
 14882   004A44  1431               	andwf	(___flge@ff2+3)^0,w,c
 14883   004A46  6E35               	movwf	(??___flge+3)^0,c
 14884   004A48  5032               	movf	??___flge^0,w,c
 14885   004A4A  1033               	iorwf	(??___flge+1)^0,w,c
 14886   004A4C  1034               	iorwf	(??___flge+2)^0,w,c
 14887   004A4E  1035               	iorwf	(??___flge+3)^0,w,c
 14888   004A50  A4D8               	btfss	status,2,c
 14889   004A52  EF2D  F025         	goto	u4111
 14890   004A56  EF2F  F025         	goto	u4110
 14891   004A5A                     u4111:
 14892   004A5A  EF37  F025         	goto	l4578
 14893   004A5E                     u4110:
 14894   004A5E  0E00               	movlw	0
 14895   004A60  6E2E               	movwf	___flge@ff2^0,c
 14896   004A62  0E00               	movlw	0
 14897   004A64  6E2F               	movwf	(___flge@ff2+1)^0,c
 14898   004A66  0E00               	movlw	0
 14899   004A68  6E30               	movwf	(___flge@ff2+2)^0,c
 14900   004A6A  0E00               	movlw	0
 14901   004A6C  6E31               	movwf	(___flge@ff2+3)^0,c
 14902   004A6E                     l4578:
 14903   004A6E  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14904   004A70  EF3C  F025         	goto	u4121
 14905   004A74  EF3E  F025         	goto	u4120
 14906   004A78                     u4121:
 14907   004A78  EF47  F025         	goto	l4582
 14908   004A7C                     u4120:
 14909   004A7C  6C2A               	negf	___flge@ff1^0,c
 14910   004A7E  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14911   004A80  B0D8               	btfsc	status,0,c
 14912   004A82  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14913   004A84  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14914   004A86  B0D8               	btfsc	status,0,c
 14915   004A88  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14916   004A8A  0E80               	movlw	128
 14917   004A8C  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14918   004A8E                     l4582:
 14919   004A8E  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14920   004A90  EF4C  F025         	goto	u4131
 14921   004A94  EF4E  F025         	goto	u4130
 14922   004A98                     u4131:
 14923   004A98  EF57  F025         	goto	l1022
 14924   004A9C                     u4130:
 14925   004A9C  6C2E               	negf	___flge@ff2^0,c
 14926   004A9E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14927   004AA0  B0D8               	btfsc	status,0,c
 14928   004AA2  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14929   004AA4  1E30               	comf	(___flge@ff2+2)^0,f,c
 14930   004AA6  B0D8               	btfsc	status,0,c
 14931   004AA8  2A30               	incf	(___flge@ff2+2)^0,f,c
 14932   004AAA  0E80               	movlw	128
 14933   004AAC  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14934   004AAE                     l1022:
 14935   004AAE  0E00               	movlw	0
 14936   004AB0  1A2A               	xorwf	___flge@ff1^0,f,c
 14937   004AB2  0E00               	movlw	0
 14938   004AB4  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14939   004AB6  0E00               	movlw	0
 14940   004AB8  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14941   004ABA  0E80               	movlw	128
 14942   004ABC  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14943   004ABE  0E00               	movlw	0
 14944   004AC0  1A2E               	xorwf	___flge@ff2^0,f,c
 14945   004AC2  0E00               	movlw	0
 14946   004AC4  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14947   004AC6  0E00               	movlw	0
 14948   004AC8  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14949   004ACA  0E80               	movlw	128
 14950   004ACC  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14951   004ACE  502E               	movf	___flge@ff2^0,w,c
 14952   004AD0  5C2A               	subwf	___flge@ff1^0,w,c
 14953   004AD2  502F               	movf	(___flge@ff2+1)^0,w,c
 14954   004AD4  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14955   004AD6  5030               	movf	(___flge@ff2+2)^0,w,c
 14956   004AD8  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14957   004ADA  5031               	movf	(___flge@ff2+3)^0,w,c
 14958   004ADC  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14959   004ADE  B0D8               	btfsc	status,0,c
 14960   004AE0  EF74  F025         	goto	u4141
 14961   004AE4  EF76  F025         	goto	u4140
 14962   004AE8                     u4141:
 14963   004AE8  EF79  F025         	goto	l4588
 14964   004AEC                     u4140:
 14965   004AEC  90D8               	bcf	status,0,c
 14966   004AEE  EF7A  F025         	goto	l1027
 14967   004AF2                     l4588:
 14968   004AF2  80D8               	bsf	status,0,c
 14969   004AF4                     l1027:
 14970   004AF4  0012               	return		;funcret
 14971   004AF6                     __end_of___flge:
 14972                           	callstack 0
 14973                           
 14974 ;; *************** function ___fleq *****************
 14975 ;; Defined at:
 14976 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14977 ;; Parameters:    Size  Location     Type
 14978 ;;  ff1             4   49[COMRAM] unsigned char 
 14979 ;;  ff2             4   53[COMRAM] unsigned char 
 14980 ;; Auto vars:     Size  Location     Type
 14981 ;;		None
 14982 ;; Return value:  Size  Location     Type
 14983 ;;		None               void
 14984 ;; Registers used:
 14985 ;;		wreg, status,2, status,0
 14986 ;; Tracked objects:
 14987 ;;		On entry : 0/0
 14988 ;;		On exit  : 0/0
 14989 ;;		Unchanged: 0/0
 14990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14993 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14994 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14995 ;;Total ram usage:       12 bytes
 14996 ;; Hardware stack levels used: 1
 14997 ;; Hardware stack levels required when called: 1
 14998 ;; This function calls:
 14999 ;;		Nothing
 15000 ;; This function is called by:
 15001 ;;		_Colour_decider
 15002 ;;		_efgtoa
 15003 ;; This function uses a non-reentrant model
 15004 ;;
 15005                           
 15006                           	psect	text83
 15007   004ED4                     __ptext83:
 15008                           	callstack 0
 15009   004ED4                     ___fleq:
 15010                           	callstack 25
 15011   004ED4  0E00               	movlw	0
 15012   004ED6  1432               	andwf	___fleq@ff1^0,w,c
 15013   004ED8  6E3A               	movwf	??___fleq^0,c
 15014   004EDA  0E00               	movlw	0
 15015   004EDC  1433               	andwf	(___fleq@ff1+1)^0,w,c
 15016   004EDE  6E3B               	movwf	(??___fleq+1)^0,c
 15017   004EE0  0E80               	movlw	128
 15018   004EE2  1434               	andwf	(___fleq@ff1+2)^0,w,c
 15019   004EE4  6E3C               	movwf	(??___fleq+2)^0,c
 15020   004EE6  0E7F               	movlw	127
 15021   004EE8  1435               	andwf	(___fleq@ff1+3)^0,w,c
 15022   004EEA  6E3D               	movwf	(??___fleq+3)^0,c
 15023   004EEC  503A               	movf	??___fleq^0,w,c
 15024   004EEE  103B               	iorwf	(??___fleq+1)^0,w,c
 15025   004EF0  103C               	iorwf	(??___fleq+2)^0,w,c
 15026   004EF2  103D               	iorwf	(??___fleq+3)^0,w,c
 15027   004EF4  A4D8               	btfss	status,2,c
 15028   004EF6  EF7F  F027         	goto	u4071
 15029   004EFA  EF81  F027         	goto	u4070
 15030   004EFE                     u4071:
 15031   004EFE  EF89  F027         	goto	l4558
 15032   004F02                     u4070:
 15033   004F02  0E00               	movlw	0
 15034   004F04  6E32               	movwf	___fleq@ff1^0,c
 15035   004F06  0E00               	movlw	0
 15036   004F08  6E33               	movwf	(___fleq@ff1+1)^0,c
 15037   004F0A  0E00               	movlw	0
 15038   004F0C  6E34               	movwf	(___fleq@ff1+2)^0,c
 15039   004F0E  0E00               	movlw	0
 15040   004F10  6E35               	movwf	(___fleq@ff1+3)^0,c
 15041   004F12                     l4558:
 15042   004F12  0E00               	movlw	0
 15043   004F14  1436               	andwf	___fleq@ff2^0,w,c
 15044   004F16  6E3A               	movwf	??___fleq^0,c
 15045   004F18  0E00               	movlw	0
 15046   004F1A  1437               	andwf	(___fleq@ff2+1)^0,w,c
 15047   004F1C  6E3B               	movwf	(??___fleq+1)^0,c
 15048   004F1E  0E80               	movlw	128
 15049   004F20  1438               	andwf	(___fleq@ff2+2)^0,w,c
 15050   004F22  6E3C               	movwf	(??___fleq+2)^0,c
 15051   004F24  0E7F               	movlw	127
 15052   004F26  1439               	andwf	(___fleq@ff2+3)^0,w,c
 15053   004F28  6E3D               	movwf	(??___fleq+3)^0,c
 15054   004F2A  503A               	movf	??___fleq^0,w,c
 15055   004F2C  103B               	iorwf	(??___fleq+1)^0,w,c
 15056   004F2E  103C               	iorwf	(??___fleq+2)^0,w,c
 15057   004F30  103D               	iorwf	(??___fleq+3)^0,w,c
 15058   004F32  A4D8               	btfss	status,2,c
 15059   004F34  EF9E  F027         	goto	u4081
 15060   004F38  EFA0  F027         	goto	u4080
 15061   004F3C                     u4081:
 15062   004F3C  EFA8  F027         	goto	l4562
 15063   004F40                     u4080:
 15064   004F40  0E00               	movlw	0
 15065   004F42  6E36               	movwf	___fleq@ff2^0,c
 15066   004F44  0E00               	movlw	0
 15067   004F46  6E37               	movwf	(___fleq@ff2+1)^0,c
 15068   004F48  0E00               	movlw	0
 15069   004F4A  6E38               	movwf	(___fleq@ff2+2)^0,c
 15070   004F4C  0E00               	movlw	0
 15071   004F4E  6E39               	movwf	(___fleq@ff2+3)^0,c
 15072   004F50                     l4562:
 15073   004F50  5036               	movf	___fleq@ff2^0,w,c
 15074   004F52  1832               	xorwf	___fleq@ff1^0,w,c
 15075   004F54  E10F               	bnz	u4090
 15076   004F56  5037               	movf	(___fleq@ff2+1)^0,w,c
 15077   004F58  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 15078   004F5A  E10C               	bnz	u4090
 15079   004F5C  5038               	movf	(___fleq@ff2+2)^0,w,c
 15080   004F5E  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 15081   004F60  E109               	bnz	u4090
 15082   004F62  5039               	movf	(___fleq@ff2+3)^0,w,c
 15083   004F64  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 15084   004F66  B4D8               	btfsc	status,2,c
 15085   004F68  EFB8  F027         	goto	u4091
 15086   004F6C  EFBA  F027         	goto	u4090
 15087   004F70                     u4091:
 15088   004F70  EFBD  F027         	goto	l4566
 15089   004F74                     u4090:
 15090   004F74  90D8               	bcf	status,0,c
 15091   004F76  EFBE  F027         	goto	l1016
 15092   004F7A                     l4566:
 15093   004F7A  80D8               	bsf	status,0,c
 15094   004F7C                     l1016:
 15095   004F7C  0012               	return		;funcret
 15096   004F7E                     __end_of___fleq:
 15097                           	callstack 0
 15098                           
 15099 ;; *************** function ___fldiv *****************
 15100 ;; Defined at:
 15101 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  b               4   49[COMRAM] unsigned char 
 15104 ;;  a               4   53[COMRAM] unsigned char 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;  grs             4   68[COMRAM] unsigned long 
 15107 ;;  rem             4   61[COMRAM] unsigned long 
 15108 ;;  new_exp         2   66[COMRAM] short 
 15109 ;;  aexp            1   73[COMRAM] unsigned char 
 15110 ;;  bexp            1   72[COMRAM] unsigned char 
 15111 ;;  sign            1   65[COMRAM] unsigned char 
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  4   49[COMRAM] unsigned char 
 15114 ;; Registers used:
 15115 ;;		wreg, status,2, status,0
 15116 ;; Tracked objects:
 15117 ;;		On entry : 0/0
 15118 ;;		On exit  : 0/0
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15121 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15122 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15124 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15125 ;;Total ram usage:       25 bytes
 15126 ;; Hardware stack levels used: 1
 15127 ;; Hardware stack levels required when called: 1
 15128 ;; This function calls:
 15129 ;;		Nothing
 15130 ;; This function is called by:
 15131 ;;		_colour_rel
 15132 ;;		_Colour_decider
 15133 ;;		_efgtoa
 15134 ;; This function uses a non-reentrant model
 15135 ;;
 15136                           
 15137                           	psect	text84
 15138   002B16                     __ptext84:
 15139                           	callstack 0
 15140   002B16                     ___fldiv:
 15141                           	callstack 25
 15142   002B16  5035               	movf	(___fldiv@b+3)^0,w,c
 15143   002B18  0B80               	andlw	128
 15144   002B1A  6E42               	movwf	___fldiv@sign^0,c
 15145   002B1C  5035               	movf	(___fldiv@b+3)^0,w,c
 15146   002B1E  2435               	addwf	(___fldiv@b+3)^0,w,c
 15147   002B20  6E49               	movwf	___fldiv@bexp^0,c
 15148   002B22  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15149   002B24  EF96  F015         	goto	u3651
 15150   002B28  EF98  F015         	goto	u3650
 15151   002B2C                     u3651:
 15152   002B2C  EF99  F015         	goto	l4286
 15153   002B30                     u3650:
 15154   002B30  8049               	bsf	___fldiv@bexp^0,0,c
 15155   002B32                     l4286:
 15156   002B32  5049               	movf	___fldiv@bexp^0,w,c
 15157   002B34  B4D8               	btfsc	status,2,c
 15158   002B36  EF9F  F015         	goto	u3661
 15159   002B3A  EFA1  F015         	goto	u3660
 15160   002B3E                     u3661:
 15161   002B3E  EFB6  F015         	goto	l4296
 15162   002B42                     u3660:
 15163   002B42  2849               	incf	___fldiv@bexp^0,w,c
 15164   002B44  A4D8               	btfss	status,2,c
 15165   002B46  EFA7  F015         	goto	u3671
 15166   002B4A  EFA9  F015         	goto	u3670
 15167   002B4E                     u3671:
 15168   002B4E  EFB1  F015         	goto	l4292
 15169   002B52                     u3670:
 15170   002B52  0E00               	movlw	0
 15171   002B54  6E32               	movwf	___fldiv@b^0,c
 15172   002B56  0E00               	movlw	0
 15173   002B58  6E33               	movwf	(___fldiv@b+1)^0,c
 15174   002B5A  0E00               	movlw	0
 15175   002B5C  6E34               	movwf	(___fldiv@b+2)^0,c
 15176   002B5E  0E00               	movlw	0
 15177   002B60  6E35               	movwf	(___fldiv@b+3)^0,c
 15178   002B62                     l4292:
 15179   002B62  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15180   002B64  0E00               	movlw	0
 15181   002B66  6E35               	movwf	(___fldiv@b+3)^0,c
 15182   002B68  EFBE  F015         	goto	l4298
 15183   002B6C                     l4296:
 15184   002B6C  0E00               	movlw	0
 15185   002B6E  6E32               	movwf	___fldiv@b^0,c
 15186   002B70  0E00               	movlw	0
 15187   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
 15188   002B74  0E00               	movlw	0
 15189   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
 15190   002B78  0E00               	movlw	0
 15191   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
 15192   002B7C                     l4298:
 15193   002B7C  5039               	movf	(___fldiv@a+3)^0,w,c
 15194   002B7E  0B80               	andlw	128
 15195   002B80  1A42               	xorwf	___fldiv@sign^0,f,c
 15196   002B82  5039               	movf	(___fldiv@a+3)^0,w,c
 15197   002B84  2439               	addwf	(___fldiv@a+3)^0,w,c
 15198   002B86  6E4A               	movwf	___fldiv@aexp^0,c
 15199   002B88  AE38               	btfss	(___fldiv@a+2)^0,7,c
 15200   002B8A  EFC9  F015         	goto	u3681
 15201   002B8E  EFCB  F015         	goto	u3680
 15202   002B92                     u3681:
 15203   002B92  EFCC  F015         	goto	l4306
 15204   002B96                     u3680:
 15205   002B96  804A               	bsf	___fldiv@aexp^0,0,c
 15206   002B98                     l4306:
 15207   002B98  504A               	movf	___fldiv@aexp^0,w,c
 15208   002B9A  B4D8               	btfsc	status,2,c
 15209   002B9C  EFD2  F015         	goto	u3691
 15210   002BA0  EFD4  F015         	goto	u3690
 15211   002BA4                     u3691:
 15212   002BA4  EFE9  F015         	goto	l4316
 15213   002BA8                     u3690:
 15214   002BA8  284A               	incf	___fldiv@aexp^0,w,c
 15215   002BAA  A4D8               	btfss	status,2,c
 15216   002BAC  EFDA  F015         	goto	u3701
 15217   002BB0  EFDC  F015         	goto	u3700
 15218   002BB4                     u3701:
 15219   002BB4  EFE4  F015         	goto	l4312
 15220   002BB8                     u3700:
 15221   002BB8  0E00               	movlw	0
 15222   002BBA  6E36               	movwf	___fldiv@a^0,c
 15223   002BBC  0E00               	movlw	0
 15224   002BBE  6E37               	movwf	(___fldiv@a+1)^0,c
 15225   002BC0  0E00               	movlw	0
 15226   002BC2  6E38               	movwf	(___fldiv@a+2)^0,c
 15227   002BC4  0E00               	movlw	0
 15228   002BC6  6E39               	movwf	(___fldiv@a+3)^0,c
 15229   002BC8                     l4312:
 15230   002BC8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 15231   002BCA  0E00               	movlw	0
 15232   002BCC  6E39               	movwf	(___fldiv@a+3)^0,c
 15233   002BCE  EFF1  F015         	goto	l4318
 15234   002BD2                     l4316:
 15235   002BD2  0E00               	movlw	0
 15236   002BD4  6E36               	movwf	___fldiv@a^0,c
 15237   002BD6  0E00               	movlw	0
 15238   002BD8  6E37               	movwf	(___fldiv@a+1)^0,c
 15239   002BDA  0E00               	movlw	0
 15240   002BDC  6E38               	movwf	(___fldiv@a+2)^0,c
 15241   002BDE  0E00               	movlw	0
 15242   002BE0  6E39               	movwf	(___fldiv@a+3)^0,c
 15243   002BE2                     l4318:
 15244   002BE2  5036               	movf	___fldiv@a^0,w,c
 15245   002BE4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 15246   002BE6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 15247   002BE8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 15248   002BEA  A4D8               	btfss	status,2,c
 15249   002BEC  EFFA  F015         	goto	u3711
 15250   002BF0  EFFC  F015         	goto	u3710
 15251   002BF4                     u3711:
 15252   002BF4  EF14  F016         	goto	l4330
 15253   002BF8                     u3710:
 15254   002BF8  0E00               	movlw	0
 15255   002BFA  6E32               	movwf	___fldiv@b^0,c
 15256   002BFC  0E00               	movlw	0
 15257   002BFE  6E33               	movwf	(___fldiv@b+1)^0,c
 15258   002C00  0E00               	movlw	0
 15259   002C02  6E34               	movwf	(___fldiv@b+2)^0,c
 15260   002C04  0E00               	movlw	0
 15261   002C06  6E35               	movwf	(___fldiv@b+3)^0,c
 15262   002C08  0E80               	movlw	128
 15263   002C0A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15264   002C0C  0E7F               	movlw	127
 15265   002C0E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15266   002C10                     l4324:
 15267   002C10  5042               	movf	___fldiv@sign^0,w,c
 15268   002C12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15269   002C14  C032  F032         	movff	___fldiv@b,?___fldiv
 15270   002C18  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15271   002C1C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15272   002C20  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15273   002C24  EF57  F017         	goto	l1339
 15274   002C28                     l4330:
 15275   002C28  5049               	movf	___fldiv@bexp^0,w,c
 15276   002C2A  A4D8               	btfss	status,2,c
 15277   002C2C  EF1A  F016         	goto	u3721
 15278   002C30  EF1C  F016         	goto	u3720
 15279   002C34                     u3721:
 15280   002C34  EF26  F016         	goto	l4338
 15281   002C38                     u3720:
 15282   002C38  0E00               	movlw	0
 15283   002C3A  6E32               	movwf	?___fldiv^0,c
 15284   002C3C  0E00               	movlw	0
 15285   002C3E  6E33               	movwf	(?___fldiv+1)^0,c
 15286   002C40  0E00               	movlw	0
 15287   002C42  6E34               	movwf	(?___fldiv+2)^0,c
 15288   002C44  0E00               	movlw	0
 15289   002C46  6E35               	movwf	(?___fldiv+3)^0,c
 15290   002C48  EF57  F017         	goto	l1339
 15291   002C4C                     l4338:
 15292   002C4C  504A               	movf	___fldiv@aexp^0,w,c
 15293   002C4E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15294   002C52  6A3B               	clrf	(??___fldiv+1)^0,c
 15295   002C54  5E3A               	subwf	??___fldiv^0,f,c
 15296   002C56  0E00               	movlw	0
 15297   002C58  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15298   002C5A  0E7F               	movlw	127
 15299   002C5C  243A               	addwf	??___fldiv^0,w,c
 15300   002C5E  6E43               	movwf	___fldiv@new_exp^0,c
 15301   002C60  0E00               	movlw	0
 15302   002C62  203B               	addwfc	(??___fldiv+1)^0,w,c
 15303   002C64  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15304   002C66  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15305   002C6A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15306   002C6E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15307   002C72  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15308   002C76  0E00               	movlw	0
 15309   002C78  6E32               	movwf	___fldiv@b^0,c
 15310   002C7A  0E00               	movlw	0
 15311   002C7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15312   002C7E  0E00               	movlw	0
 15313   002C80  6E34               	movwf	(___fldiv@b+2)^0,c
 15314   002C82  0E00               	movlw	0
 15315   002C84  6E35               	movwf	(___fldiv@b+3)^0,c
 15316   002C86  0E00               	movlw	0
 15317   002C88  6E45               	movwf	___fldiv@grs^0,c
 15318   002C8A  0E00               	movlw	0
 15319   002C8C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15320   002C8E  0E00               	movlw	0
 15321   002C90  6E47               	movwf	(___fldiv@grs+2)^0,c
 15322   002C92  0E00               	movlw	0
 15323   002C94  6E48               	movwf	(___fldiv@grs+3)^0,c
 15324   002C96  0E00               	movlw	0
 15325   002C98  6E4A               	movwf	___fldiv@aexp^0,c
 15326   002C9A  EF87  F016         	goto	l1341
 15327   002C9E                     l4348:
 15328   002C9E  504A               	movf	___fldiv@aexp^0,w,c
 15329   002CA0  B4D8               	btfsc	status,2,c
 15330   002CA2  EF55  F016         	goto	u3731
 15331   002CA6  EF57  F016         	goto	u3730
 15332   002CAA                     u3731:
 15333   002CAA  EF6E  F016         	goto	l4356
 15334   002CAE                     u3730:
 15335   002CAE  90D8               	bcf	status,0,c
 15336   002CB0  363E               	rlcf	___fldiv@rem^0,f,c
 15337   002CB2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15338   002CB4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15339   002CB6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15340   002CB8  90D8               	bcf	status,0,c
 15341   002CBA  3632               	rlcf	___fldiv@b^0,f,c
 15342   002CBC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15343   002CBE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15344   002CC0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15345   002CC2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15346   002CC4  EF66  F016         	goto	u3741
 15347   002CC8  EF68  F016         	goto	u3740
 15348   002CCC                     u3741:
 15349   002CCC  EF69  F016         	goto	l1344
 15350   002CD0                     u3740:
 15351   002CD0  8032               	bsf	___fldiv@b^0,0,c
 15352   002CD2                     l1344:
 15353   002CD2  90D8               	bcf	status,0,c
 15354   002CD4  3645               	rlcf	___fldiv@grs^0,f,c
 15355   002CD6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15356   002CD8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15357   002CDA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15358   002CDC                     l4356:
 15359   002CDC  5036               	movf	___fldiv@a^0,w,c
 15360   002CDE  5C3E               	subwf	___fldiv@rem^0,w,c
 15361   002CE0  5037               	movf	(___fldiv@a+1)^0,w,c
 15362   002CE2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15363   002CE4  5038               	movf	(___fldiv@a+2)^0,w,c
 15364   002CE6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15365   002CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15366   002CEA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15367   002CEC  A0D8               	btfss	status,0,c
 15368   002CEE  EF7B  F016         	goto	u3751
 15369   002CF2  EF7D  F016         	goto	u3750
 15370   002CF6                     u3751:
 15371   002CF6  EF86  F016         	goto	l4362
 15372   002CFA                     u3750:
 15373   002CFA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15374   002CFC  5036               	movf	___fldiv@a^0,w,c
 15375   002CFE  5E3E               	subwf	___fldiv@rem^0,f,c
 15376   002D00  5037               	movf	(___fldiv@a+1)^0,w,c
 15377   002D02  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15378   002D04  5038               	movf	(___fldiv@a+2)^0,w,c
 15379   002D06  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15380   002D08  5039               	movf	(___fldiv@a+3)^0,w,c
 15381   002D0A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15382   002D0C                     l4362:
 15383   002D0C  2A4A               	incf	___fldiv@aexp^0,f,c
 15384   002D0E                     l1341:
 15385   002D0E  0E19               	movlw	25
 15386   002D10  644A               	cpfsgt	___fldiv@aexp^0,c
 15387   002D12  EF8D  F016         	goto	u3761
 15388   002D16  EF8F  F016         	goto	u3760
 15389   002D1A                     u3761:
 15390   002D1A  EF4F  F016         	goto	l4348
 15391   002D1E                     u3760:
 15392   002D1E  503E               	movf	___fldiv@rem^0,w,c
 15393   002D20  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15394   002D22  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15395   002D24  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15396   002D26  B4D8               	btfsc	status,2,c
 15397   002D28  EF98  F016         	goto	u3771
 15398   002D2C  EF9A  F016         	goto	u3770
 15399   002D30                     u3771:
 15400   002D30  EFB2  F016         	goto	l4374
 15401   002D34                     u3770:
 15402   002D34  8045               	bsf	___fldiv@grs^0,0,c
 15403   002D36  EFB2  F016         	goto	l4374
 15404   002D3A                     l4368:
 15405   002D3A  90D8               	bcf	status,0,c
 15406   002D3C  3632               	rlcf	___fldiv@b^0,f,c
 15407   002D3E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15408   002D40  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15409   002D42  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15410   002D44  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15411   002D46  EFA7  F016         	goto	u3781
 15412   002D4A  EFA9  F016         	goto	u3780
 15413   002D4E                     u3781:
 15414   002D4E  EFAA  F016         	goto	l1350
 15415   002D52                     u3780:
 15416   002D52  8032               	bsf	___fldiv@b^0,0,c
 15417   002D54                     l1350:
 15418   002D54  90D8               	bcf	status,0,c
 15419   002D56  3645               	rlcf	___fldiv@grs^0,f,c
 15420   002D58  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15421   002D5A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15422   002D5C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15423   002D5E  0643               	decf	___fldiv@new_exp^0,f,c
 15424   002D60  A0D8               	btfss	status,0,c
 15425   002D62  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15426   002D64                     l4374:
 15427   002D64  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15428   002D66  EFB7  F016         	goto	u3791
 15429   002D6A  EFB9  F016         	goto	u3790
 15430   002D6E                     u3791:
 15431   002D6E  EF9D  F016         	goto	l4368
 15432   002D72                     u3790:
 15433   002D72  0E00               	movlw	0
 15434   002D74  6E4A               	movwf	___fldiv@aexp^0,c
 15435   002D76  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15436   002D78  EFC0  F016         	goto	u3801
 15437   002D7C  EFC2  F016         	goto	u3800
 15438   002D80                     u3801:
 15439   002D80  EFE6  F016         	goto	l1352
 15440   002D84                     u3800:
 15441   002D84  0EFF               	movlw	255
 15442   002D86  1445               	andwf	___fldiv@grs^0,w,c
 15443   002D88  6E3A               	movwf	??___fldiv^0,c
 15444   002D8A  0EFF               	movlw	255
 15445   002D8C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15446   002D8E  6E3B               	movwf	(??___fldiv+1)^0,c
 15447   002D90  0EFF               	movlw	255
 15448   002D92  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15449   002D94  6E3C               	movwf	(??___fldiv+2)^0,c
 15450   002D96  0E7F               	movlw	127
 15451   002D98  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15452   002D9A  6E3D               	movwf	(??___fldiv+3)^0,c
 15453   002D9C  503A               	movf	??___fldiv^0,w,c
 15454   002D9E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15455   002DA0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15456   002DA2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15457   002DA4  B4D8               	btfsc	status,2,c
 15458   002DA6  EFD7  F016         	goto	u3811
 15459   002DAA  EFD9  F016         	goto	u3810
 15460   002DAE                     u3811:
 15461   002DAE  EFDD  F016         	goto	l1353
 15462   002DB2                     u3810:
 15463   002DB2                     l4382:
 15464   002DB2  0E01               	movlw	1
 15465   002DB4  6E4A               	movwf	___fldiv@aexp^0,c
 15466   002DB6  EFE6  F016         	goto	l1352
 15467   002DBA                     l1353:
 15468   002DBA  A032               	btfss	___fldiv@b^0,0,c
 15469   002DBC  EFE2  F016         	goto	u3821
 15470   002DC0  EFE4  F016         	goto	u3820
 15471   002DC4                     u3821:
 15472   002DC4  EFE6  F016         	goto	l1352
 15473   002DC8                     u3820:
 15474   002DC8  EFD9  F016         	goto	l4382
 15475   002DCC                     l1352:
 15476   002DCC  504A               	movf	___fldiv@aexp^0,w,c
 15477   002DCE  B4D8               	btfsc	status,2,c
 15478   002DD0  EFEC  F016         	goto	u3831
 15479   002DD4  EFEE  F016         	goto	u3830
 15480   002DD8                     u3831:
 15481   002DD8  EF12  F017         	goto	l4394
 15482   002DDC                     u3830:
 15483   002DDC  0E01               	movlw	1
 15484   002DDE  2632               	addwf	___fldiv@b^0,f,c
 15485   002DE0  0E00               	movlw	0
 15486   002DE2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15487   002DE4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15488   002DE6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15489   002DE8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15490   002DEA  EFF9  F016         	goto	u3841
 15491   002DEE  EFFB  F016         	goto	u3840
 15492   002DF2                     u3841:
 15493   002DF2  EF12  F017         	goto	l4394
 15494   002DF6                     u3840:
 15495   002DF6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15496   002DFA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15497   002DFE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15498   002E02  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15499   002E06  343D               	rlcf	(??___fldiv+3)^0,w,c
 15500   002E08  323D               	rrcf	(??___fldiv+3)^0,f,c
 15501   002E0A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15502   002E0C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15503   002E0E  323A               	rrcf	??___fldiv^0,f,c
 15504   002E10  C03A  F032         	movff	??___fldiv,___fldiv@b
 15505   002E14  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15506   002E18  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15507   002E1C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15508   002E20  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15509   002E22  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15510   002E24                     l4394:
 15511   002E24  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15512   002E26  EF1D  F017         	goto	u3851
 15513   002E2A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15514   002E2C  E108               	bnz	u3850
 15515   002E2E  2843               	incf	___fldiv@new_exp^0,w,c
 15516   002E30  A0D8               	btfss	status,0,c
 15517   002E32  EF1D  F017         	goto	u3851
 15518   002E36  EF1F  F017         	goto	u3850
 15519   002E3A                     u3851:
 15520   002E3A  EF2A  F017         	goto	l4398
 15521   002E3E                     u3850:
 15522   002E3E  0E00               	movlw	0
 15523   002E40  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15524   002E42  6843               	setf	___fldiv@new_exp^0,c
 15525   002E44  0E00               	movlw	0
 15526   002E46  6E32               	movwf	___fldiv@b^0,c
 15527   002E48  0E00               	movlw	0
 15528   002E4A  6E33               	movwf	(___fldiv@b+1)^0,c
 15529   002E4C  0E00               	movlw	0
 15530   002E4E  6E34               	movwf	(___fldiv@b+2)^0,c
 15531   002E50  0E00               	movlw	0
 15532   002E52  6E35               	movwf	(___fldiv@b+3)^0,c
 15533   002E54                     l4398:
 15534   002E54  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15535   002E56  EF37  F017         	goto	u3860
 15536   002E5A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15537   002E5C  E106               	bnz	u3861
 15538   002E5E  0443               	decf	___fldiv@new_exp^0,w,c
 15539   002E60  B0D8               	btfsc	status,0,c
 15540   002E62  EF35  F017         	goto	u3861
 15541   002E66  EF37  F017         	goto	u3860
 15542   002E6A                     u3861:
 15543   002E6A  EF45  F017         	goto	l4402
 15544   002E6E                     u3860:
 15545   002E6E  0E00               	movlw	0
 15546   002E70  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15547   002E72  0E00               	movlw	0
 15548   002E74  6E43               	movwf	___fldiv@new_exp^0,c
 15549   002E76  0E00               	movlw	0
 15550   002E78  6E32               	movwf	___fldiv@b^0,c
 15551   002E7A  0E00               	movlw	0
 15552   002E7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15553   002E7E  0E00               	movlw	0
 15554   002E80  6E34               	movwf	(___fldiv@b+2)^0,c
 15555   002E82  0E00               	movlw	0
 15556   002E84  6E35               	movwf	(___fldiv@b+3)^0,c
 15557   002E86  0E00               	movlw	0
 15558   002E88  6E42               	movwf	___fldiv@sign^0,c
 15559   002E8A                     l4402:
 15560   002E8A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15561   002E8E  A049               	btfss	___fldiv@bexp^0,0,c
 15562   002E90  EF4C  F017         	goto	u3871
 15563   002E94  EF4E  F017         	goto	u3870
 15564   002E98                     u3871:
 15565   002E98  EF51  F017         	goto	l4408
 15566   002E9C                     u3870:
 15567   002E9C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15568   002E9E  EF52  F017         	goto	l4410
 15569   002EA2                     l4408:
 15570   002EA2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15571   002EA4                     l4410:
 15572   002EA4  90D8               	bcf	status,0,c
 15573   002EA6  3049               	rrcf	___fldiv@bexp^0,w,c
 15574   002EA8  6E35               	movwf	(___fldiv@b+3)^0,c
 15575   002EAA  EF08  F016         	goto	l4324
 15576   002EAE                     l1339:
 15577   002EAE  0012               	return		;funcret
 15578   002EB0                     __end_of___fldiv:
 15579                           	callstack 0
 15580                           
 15581 ;; *************** function _Buttons_init *****************
 15582 ;; Defined at:
 15583 ;;		line 43 in file "LED_buttons.c"
 15584 ;; Parameters:    Size  Location     Type
 15585 ;;		None
 15586 ;; Auto vars:     Size  Location     Type
 15587 ;;		None
 15588 ;; Return value:  Size  Location     Type
 15589 ;;                  1    wreg      void 
 15590 ;; Registers used:
 15591 ;;		None
 15592 ;; Tracked objects:
 15593 ;;		On entry : 0/0
 15594 ;;		On exit  : 0/0
 15595 ;;		Unchanged: 0/0
 15596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15601 ;;Total ram usage:        0 bytes
 15602 ;; Hardware stack levels used: 1
 15603 ;; Hardware stack levels required when called: 1
 15604 ;; This function calls:
 15605 ;;		Nothing
 15606 ;; This function is called by:
 15607 ;;		_main
 15608 ;; This function uses a non-reentrant model
 15609 ;;
 15610                           
 15611                           	psect	text85
 15612   006180                     __ptext85:
 15613                           	callstack 0
 15614   006180                     _Buttons_init:
 15615                           	callstack 29
 15616   006180                     
 15617                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15618   006180  8486               	bsf	134,2,c	;volatile
 15619                           
 15620                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15621   006182  010E               	movlb	14	; () banked
 15622   006184  95B4               	bcf	180,2,b	;volatile
 15623                           
 15624                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15625   006186  8686               	bsf	134,3,c	;volatile
 15626                           
 15627                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15628   006188  97B4               	bcf	180,3,b	;volatile
 15629   00618A                     
 15630                           ; BSR set to: 14
 15631   00618A  0012               	return		;funcret
 15632   00618C                     __end_of_Buttons_init:
 15633                           	callstack 0
 15634                           
 15635 ;; *************** function _HighISR *****************
 15636 ;; Defined at:
 15637 ;;		line 23 in file "interrupts.c"
 15638 ;; Parameters:    Size  Location     Type
 15639 ;;		None
 15640 ;; Auto vars:     Size  Location     Type
 15641 ;;		None
 15642 ;; Return value:  Size  Location     Type
 15643 ;;                  1    wreg      void 
 15644 ;; Registers used:
 15645 ;;		wreg, status,2
 15646 ;; Tracked objects:
 15647 ;;		On entry : 0/0
 15648 ;;		On exit  : 0/0
 15649 ;;		Unchanged: 0/0
 15650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15655 ;;Total ram usage:        0 bytes
 15656 ;; Hardware stack levels used: 1
 15657 ;; This function calls:
 15658 ;;		Nothing
 15659 ;; This function is called by:
 15660 ;;		Interrupt level 2
 15661 ;; This function uses a non-reentrant model
 15662 ;;
 15663                           
 15664                           	psect	intcode
 15665   000008                     __pintcode:
 15666                           	callstack 0
 15667   000008                     _HighISR:
 15668                           	callstack 22
 15669                           
 15670                           ; BSR set to: 14
 15671                           ;incstack = 0
 15672   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15673   00000A                     
 15674                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15675   00000A  010E               	movlb	14	; () banked
 15676   00000C  AB33               	btfss	51,5,b	;volatile
 15677   00000E  EF0B  F000         	goto	i2u568_41
 15678   000012  EF0D  F000         	goto	i2u568_40
 15679   000016                     i2u568_41:
 15680   000016  EF18  F000         	goto	i2l227
 15681   00001A                     i2u568_40:
 15682   00001A                     
 15683                           ; BSR set to: 14
 15684                           ;interrupts.c: 26:         TMR0H=0;
 15685   00001A  0E00               	movlw	0
 15686   00001C  6ED4               	movwf	212,c	;volatile
 15687                           
 15688                           ;interrupts.c: 27:         TMR0L=0;
 15689   00001E  0E00               	movlw	0
 15690   000020  6ED3               	movwf	211,c	;volatile
 15691                           
 15692                           ;interrupts.c: 28:         lost_flag=1;
 15693   000022  0E00               	movlw	0
 15694   000024  0101               	movlb	1	; () banked
 15695   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15696   000028  0E01               	movlw	1
 15697   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15698   00002C                     
 15699                           ; BSR set to: 1
 15700                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15701   00002C  010E               	movlb	14	; () banked
 15702   00002E  9B33               	bcf	51,5,b	;volatile
 15703   000030                     i2l227:
 15704                           
 15705                           ; BSR set to: 14
 15706   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15707   000032  0011               	retfie		f
 15708   000034                     __end_of_HighISR:
 15709                           	callstack 0
 15710                           
 15711                           	psect	rparam
 15712   000000                     
 15713                           	psect	temp
 15714   00005F                     btemp:
 15715                           	callstack 0
 15716   00005F                     	ds	1
 15717   000000                     int$flags	set	btemp
 15718   000000                     wtemp8	set	btemp+1
 15719   000000                     ttemp5	set	btemp+1
 15720   000000                     ttemp6	set	btemp+4
 15721   000000                     ttemp7	set	btemp+8
 15722                           
 15723                           	psect	idloc
 15724                           
 15725                           ;Config register IDLOC0 @ 0x200000
 15726                           ;	unspecified, using default values
 15727   200000                     	org	2097152
 15728   200000  0FFF               	dw	4095
 15729                           
 15730                           ;Config register IDLOC1 @ 0x200002
 15731                           ;	unspecified, using default values
 15732   200002                     	org	2097154
 15733   200002  0FFF               	dw	4095
 15734                           
 15735                           ;Config register IDLOC2 @ 0x200004
 15736                           ;	unspecified, using default values
 15737   200004                     	org	2097156
 15738   200004  0FFF               	dw	4095
 15739                           
 15740                           ;Config register IDLOC3 @ 0x200006
 15741                           ;	unspecified, using default values
 15742   200006                     	org	2097158
 15743   200006  0FFF               	dw	4095
 15744                           
 15745                           ;Config register IDLOC4 @ 0x200008
 15746                           ;	unspecified, using default values
 15747   200008                     	org	2097160
 15748   200008  0FFF               	dw	4095
 15749                           
 15750                           ;Config register IDLOC5 @ 0x20000A
 15751                           ;	unspecified, using default values
 15752   20000A                     	org	2097162
 15753   20000A  0FFF               	dw	4095
 15754                           
 15755                           ;Config register IDLOC6 @ 0x20000C
 15756                           ;	unspecified, using default values
 15757   20000C                     	org	2097164
 15758   20000C  0FFF               	dw	4095
 15759                           
 15760                           ;Config register IDLOC7 @ 0x20000E
 15761                           ;	unspecified, using default values
 15762   20000E                     	org	2097166
 15763   20000E  0FFF               	dw	4095
 15764                           
 15765                           	psect	config
 15766                           
 15767                           ;Config register CONFIG1L @ 0x300000
 15768                           ;	External Oscillator mode Selection bits
 15769                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15770                           ;	Power-up default value for COSC bits
 15771                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15772   300000                     	org	3145728
 15773   300000  AA                 	db	170
 15774                           
 15775                           ;Config register CONFIG1H @ 0x300001
 15776                           ;	unspecified, using default values
 15777                           ;	Clock Out Enable bit
 15778                           ;	CLKOUTEN = 0x1, unprogrammed default
 15779                           ;	Clock Switch Enable bit
 15780                           ;	CSWEN = 0x1, unprogrammed default
 15781                           ;	Fail-Safe Clock Monitor Enable bit
 15782                           ;	FCMEN = 0x1, unprogrammed default
 15783   300001                     	org	3145729
 15784   300001  FF                 	db	255
 15785                           
 15786                           ;Config register CONFIG2L @ 0x300002
 15787                           ;	unspecified, using default values
 15788                           ;	Master Clear Enable bit
 15789                           ;	MCLRE = 0x1, unprogrammed default
 15790                           ;	Power-up Timer Enable bit
 15791                           ;	PWRTE = 0x1, unprogrammed default
 15792                           ;	Low-power BOR enable bit
 15793                           ;	LPBOREN = 0x1, unprogrammed default
 15794                           ;	Brown-out Reset Enable bits
 15795                           ;	BOREN = 0x3, unprogrammed default
 15796   300002                     	org	3145730
 15797   300002  FF                 	db	255
 15798                           
 15799                           ;Config register CONFIG2H @ 0x300003
 15800                           ;	unspecified, using default values
 15801                           ;	Brown Out Reset Voltage selection bits
 15802                           ;	BORV = 0x3, unprogrammed default
 15803                           ;	ZCD Disable bit
 15804                           ;	ZCD = 0x1, unprogrammed default
 15805                           ;	PPSLOCK bit One-Way Set Enable bit
 15806                           ;	PPS1WAY = 0x1, unprogrammed default
 15807                           ;	Stack Full/Underflow Reset Enable bit
 15808                           ;	STVREN = 0x1, unprogrammed default
 15809                           ;	Debugger Enable bit
 15810                           ;	DEBUG = 0x1, unprogrammed default
 15811                           ;	Extended Instruction Set Enable bit
 15812                           ;	XINST = 0x1, unprogrammed default
 15813   300003                     	org	3145731
 15814   300003  FF                 	db	255
 15815                           
 15816                           ;Config register CONFIG3L @ 0x300004
 15817                           ;	WDT Period Select bits
 15818                           ;	WDTCPS = 0x1F, unprogrammed default
 15819                           ;	WDT operating mode
 15820                           ;	WDTE = OFF, WDT Disabled
 15821   300004                     	org	3145732
 15822   300004  9F                 	db	159
 15823                           
 15824                           ;Config register CONFIG3H @ 0x300005
 15825                           ;	unspecified, using default values
 15826                           ;	WDT Window Select bits
 15827                           ;	WDTCWS = 0x7, unprogrammed default
 15828                           ;	WDT input clock selector
 15829                           ;	WDTCCS = 0x7, unprogrammed default
 15830   300005                     	org	3145733
 15831   300005  FF                 	db	255
 15832                           
 15833                           ;Config register CONFIG4L @ 0x300006
 15834                           ;	unspecified, using default values
 15835                           ;	Write Protection Block 0
 15836                           ;	WRT0 = 0x1, unprogrammed default
 15837                           ;	Write Protection Block 1
 15838                           ;	WRT1 = 0x1, unprogrammed default
 15839                           ;	Write Protection Block 2
 15840                           ;	WRT2 = 0x1, unprogrammed default
 15841                           ;	Write Protection Block 3
 15842                           ;	WRT3 = 0x1, unprogrammed default
 15843                           ;	Write Protection Block 3
 15844                           ;	WRT4 = 0x1, unprogrammed default
 15845                           ;	Write Protection Block 3
 15846                           ;	WRT5 = 0x1, unprogrammed default
 15847                           ;	Write Protection Block 3
 15848                           ;	WRT6 = 0x1, unprogrammed default
 15849                           ;	Write Protection Block 3
 15850                           ;	WRT7 = 0x1, unprogrammed default
 15851   300006                     	org	3145734
 15852   300006  FF                 	db	255
 15853                           
 15854                           ;Config register CONFIG4H @ 0x300007
 15855                           ;	unspecified, using default values
 15856                           ;	Configuration Register Write Protection bit
 15857                           ;	WRTC = 0x1, unprogrammed default
 15858                           ;	Boot Block Write Protection bit
 15859                           ;	WRTB = 0x1, unprogrammed default
 15860                           ;	Data EEPROM Write Protection bit
 15861                           ;	WRTD = 0x1, unprogrammed default
 15862                           ;	Scanner Enable bit
 15863                           ;	SCANE = 0x1, unprogrammed default
 15864                           ;	Low Voltage Programming Enable bit
 15865                           ;	LVP = 0x1, unprogrammed default
 15866   300007                     	org	3145735
 15867   300007  FF                 	db	255
 15868                           
 15869                           ;Config register CONFIG5L @ 0x300008
 15870                           ;	unspecified, using default values
 15871                           ;	UserNVM Program Memory Code Protection bit
 15872                           ;	CP = 0x1, unprogrammed default
 15873                           ;	DataNVM Memory Code Protection bit
 15874                           ;	CPD = 0x1, unprogrammed default
 15875   300008                     	org	3145736
 15876   300008  FF                 	db	255
 15877                           
 15878                           ;Config register CONFIG5H @ 0x300009
 15879                           ;	unspecified, using default values
 15880   300009                     	org	3145737
 15881   300009  FF                 	db	255
 15882                           
 15883                           ;Config register CONFIG6L @ 0x30000A
 15884                           ;	unspecified, using default values
 15885                           ;	Table Read Protection Block 0
 15886                           ;	EBTR0 = 0x1, unprogrammed default
 15887                           ;	Table Read Protection Block 1
 15888                           ;	EBTR1 = 0x1, unprogrammed default
 15889                           ;	Table Read Protection Block 2
 15890                           ;	EBTR2 = 0x1, unprogrammed default
 15891                           ;	Table Read Protection Block 3
 15892                           ;	EBTR3 = 0x1, unprogrammed default
 15893                           ;	Table Read Protection Block 4
 15894                           ;	EBTR4 = 0x1, unprogrammed default
 15895                           ;	Table Read Protection Block 5
 15896                           ;	EBTR5 = 0x1, unprogrammed default
 15897                           ;	Table Read Protection Block 6
 15898                           ;	EBTR6 = 0x1, unprogrammed default
 15899                           ;	Table Read Protection Block 7
 15900                           ;	EBTR7 = 0x1, unprogrammed default
 15901   30000A                     	org	3145738
 15902   30000A  FF                 	db	255
 15903                           
 15904                           ;Config register CONFIG6H @ 0x30000B
 15905                           ;	unspecified, using default values
 15906                           ;	Boot Block Table Read Protection bit
 15907                           ;	EBTRB = 0x1, unprogrammed default
 15908   30000B                     	org	3145739
 15909   30000B  FF                 	db	255
 15910                           tosu	equ	0xFFF
 15911                           tosh	equ	0xFFE
 15912                           tosl	equ	0xFFD
 15913                           stkptr	equ	0xFFC
 15914                           pclatu	equ	0xFFB
 15915                           pclath	equ	0xFFA
 15916                           pcl	equ	0xFF9
 15917                           tblptru	equ	0xFF8
 15918                           tblptrh	equ	0xFF7
 15919                           tblptrl	equ	0xFF6
 15920                           tablat	equ	0xFF5
 15921                           prodh	equ	0xFF4
 15922                           prodl	equ	0xFF3
 15923                           indf0	equ	0xFEF
 15924                           postinc0	equ	0xFEE
 15925                           postdec0	equ	0xFED
 15926                           preinc0	equ	0xFEC
 15927                           plusw0	equ	0xFEB
 15928                           fsr0h	equ	0xFEA
 15929                           fsr0l	equ	0xFE9
 15930                           wreg	equ	0xFE8
 15931                           indf1	equ	0xFE7
 15932                           postinc1	equ	0xFE6
 15933                           postdec1	equ	0xFE5
 15934                           preinc1	equ	0xFE4
 15935                           plusw1	equ	0xFE3
 15936                           fsr1h	equ	0xFE2
 15937                           fsr1l	equ	0xFE1
 15938                           bsr	equ	0xFE0
 15939                           indf2	equ	0xFDF
 15940                           postinc2	equ	0xFDE
 15941                           postdec2	equ	0xFDD
 15942                           preinc2	equ	0xFDC
 15943                           plusw2	equ	0xFDB
 15944                           fsr2h	equ	0xFDA
 15945                           fsr2l	equ	0xFD9
 15946                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseLightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseLightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseOrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseOrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2847$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2763$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2763$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    quaterForward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    quaterForward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_RedMove
    _go_Home->_ReverseLightBlueMove
    _go_Home->_ReverseOrangeMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _ReverseOrangeMove->_reverseDetect
    _ReverseOrangeMove->_turnLeft45
    _ReverseLightBlueMove->_reverseDetect
    _ReverseLightBlueMove->_turnRight45
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_Backhalfblock
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_quaterForward
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueMove->_quaterForward
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _quaterForward->_fullSpeedAhead
    _quaterForward->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  601993
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9809
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35323
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34968
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34615
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28769
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  346952
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  161835
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                            _RedMove
               _ReverseLightBlueMove
                  _ReverseOrangeMove
                        _ReversePink
                      _ReverseYellow
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   26189
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   26189
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7354
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _ReverseOrangeMove                                    4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReverseLightBlueMove                                 4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18987
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18987
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   26189
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _Backhalfblock                                        6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   26037
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   16228
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   26037
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    7202
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   26189
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9657
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   26189
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9657
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    9026
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _quaterForward                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    7202
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4089
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2917
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23353
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3702
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _Backhalfblock
         _fullSpeedBack
           _setMotorPWM
         _stop
       _reverseDetect
         _fullSpeedBack
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _quaterForward
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _quaterForward
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _BlueMove
       _GreenMove
       _RedMove
       _ReverseLightBlueMove
         _reverseDetect
         _turnRight45
       _ReverseOrangeMove
         _reverseDetect
         _turnLeft45
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 19:54:28 2023

               _color_read_Red 5C26                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5BD6                   ___fldiv@sign 0042                _color_read_Blue 5CC6  
                           l52 6110                             l61 5CC4                             l70 31DC  
                           l55 5C24                             l80 222A                             l64 5D14  
                           l49 5B84                             l58 5C74                             l67 572C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 42E8  
             _color_read_Green 5C76                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 6166                            l132 607C                            l221 617E  
                          l141 61A8                            l150 6172                            l206 6052  
                          l135 607E                            l144 6194                            l153 5EC0  
                          l138 60A4                            l147 619E                            l500 5942  
                          l332 3586                            l430 52FA                            l503 5786  
                          l424 4786                            l512 53EE                            l521 5606  
                          l601 3EF8                            l417 527C                            l506 5F3E  
                          l530 4D72                            l515 5AE0                            l524 566C  
                          l188 614E                            l348 37D4                            l509 5F7C  
                          l533 4E28                            l613 3F20                            l197 6152  
                          l454 51F4                            l470 5156                            l438 50B8  
                          l446 501A                            l518 5B32                            l462 4ED2  
                          l527 553A                            l607 3EF8                            l543 4306  
                          l536 5A3C                            l640 56CE                            l473 6008  
                          l553 4442                            l545 435C                            l482 5DB0  
                          l554 4478                            l546 43B6                            l491 58EA  
                          l539 5A8E                            l643 5FD6                            l555 4492  
                          l547 4426                            l636 6130                            l476 6022  
                          l548 43EE                            l485 57E0                            l494 5892  
                          l646 5FEC                            l671 60CA                            l479 5D62  
                          l497 583A                            l674 618A                            l746 3CCC  
                          l754 3CCC                            l757 60F0                            l871 461A  
                          l884 48EA                 ?_quaterForward 001A                            _abs 5EC2  
                          _pad 52FC                            _rel 014C                   ?_colour_move 002D  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1022 4AAE  
                         l1031 5FB4                           l1016 4F7C                           l1027 4AF4  
                         ?_abs 0013                           l1302 2534                           l1054 49F0  
                         l1311 2604                           l1312 25F2                           l1412 418A  
                         l1341 2D0E                           l1501 1836                           l1350 2D54  
                         l1327 5DF6                           l1415 42E6                           l1255 5462  
                         l1352 2DCC                           l1344 2CD2                           l4000 23C6  
                         l1248 545A                           l1504 11D0                           l1353 2DBA  
                         l4010 23FC                           l4002 23DC                           l1426 427E  
                         l1506 1016                           l1339 2EAE                           l1371 27B0  
                         l1419 4222                           l1435 59EA                           l1380 2A1E  
                         l4100 26AE                           l4020 244C                           l4012 2406  
                         l4004 23E8                           l1381 2A0C                           l1285 241A  
                         l4110 26D8                           l4102 26BC                           l4030 2488  
                         l4022 245C                           l1294 26EA                           l4014 2428  
                         l4006 23EC                           l1286 2408                           l1606 5590  
                         l1534 1618                           l1375 2B14                           l1287 23CE  
                         l1471 5374                           l1615 5BD4                           l4112 26DA  
                         l4104 26C2                           l4040 24CE                           l4032 2496  
                         l4024 246A                           l4016 2438                           l4008 23FA  
                         l4200 4494                           l4120 5E5A                           l5000 1652  
                         l1609 55A0                           l1378 29A6                           l4106 26C4  
                         l4050 254A                           l4042 2502                           l4034 2498  
                         l4026 2478                           l4130 51A0                           l4210 44D8  
                         l4202 4498                           l4122 5E5E                           l1490 3A54  
                         l5002 165A                           l5010 167A                           l1627 4CBC  
                         l1635 5E7E                           l1467 531E                           l1571 5998  
                         l4300 2B82                           l1388 2AD6                           l4108 26CA  
                         l4060 2586                           l4052 255A                           l4044 2504  
                         l4036 24A2                           l4028 2484                           l4132 51AC  
                         l4124 5158                           l4140 5282                           l5100 58BE  
                         l4220 452E                           l4212 44F8                           l4204 44A6  
                         l4116 5E3C                           l1476 3864                           l1644 5E3A  
                         l5020 1700                           l5012 168C                           l5004 166A  
                         l1581 4BF2                           l1549 34E2                           l4310 2BB8  
                         l4302 2B88                           l4070 25B2                           l4062 2588  
                         l4046 2514                           l4038 24A8                           l4126 517C  
                         l4134 51C4                           l4150 52E2                           l4142 529A  
                         l5102 58EC                           l5110 5F40                           l4230 45B0  
                         l4222 4542                           l4214 44FC                           l4206 44C6  
                         l1638 61B4                           l4118 5E48                           l1478 386C  
                         l5030 177A                           l5022 1734                           l5014 169E  
                         l5006 166E                           l1479 38B2                           l4400 2E6E  
                         l4320 2BF8                           l4312 2BC8                           l4304 2B96  
                         l4080 25EA                           l4064 2596                           l4056 256E  
                         l4072 25B4                           l4048 2524                           l4136 51DC  
                         l4128 5194                           l4144 52A6                           l5104 5900  
                         l4160 5070                           l4152 501C                           l5112 5376  
                         l5120 5A3E                           l4240 45FA                           l4232 45B2  
                         l4224 4550                           l4216 4508                           l4208 44CA  
                         l5040 17E8                           l5032 1782                           l5024 173C  
                         l5016 16A2                           l5008 1674                           l4410 2EA4  
                         l4402 2E8A                           l4322 2C08                           l4330 2C28  
                         l4314 2BCA                           l4306 2B98                           l4090 2668  
                         l4066 259E                           l4058 2578                           l4074 25C2  
                         l4146 52B2                           l4138 527E                           l5210 6066  
                         l5050 61A0                           l5106 5916                           l4154 5040  
                         l4162 5088                           l4170 4FBA                           l5114 4CBE  
                         l4234 45C4                           l4226 4562                           l4218 4526  
                         l4250 47BA                           l1586 5EF8                           l5042 17F8  
                         l5034 1792                           l5018 16A8                           l5026 1740  
                         l5130 3226                           l5122 31DE                           l1595 4132  
                         l4404 2E8E                           l4340 2C66                           l4332 2C38  
                         l4324 2C10                           l4308 2BA8                           l4316 2BD2  
                         l4500 298C                           l4420 26F8                           l4084 2614  
                         l4092 266A                           l4076 25C6                           l4068 25A2  
                         l4148 52CA                           l5212 6068                           l5204 6054  
                         l5052 61A4                           l5060 619A                           l4180 50BA  
                         l4164 50A0                           l4156 5058                           l4172 4FC6  
                         l5300 54D2                           l5108 5F02                           l5116 4D74  
                         l5220 5C1C                           l4228 4590                           l4236 45CA  
                         l4260 4812                           l4252 47BE                           l4244 4788  
                         l5044 180E                           l5036 17C2                           l5028 175E  
                         l5132 3236                           l5124 3206                           l1589 5F00  
                         l4406 2E9C                           l4350 2CAE                           l4342 2C76  
                         l4334 2C38                           l4326 2C14                           l4318 2BE2  
                         l4510 29C8                           l4502 2996                           l4430 2738  
                         l4422 2706                           l4094 267A                           l4086 2620  
                         l4078 25D4                           l5310 4154                           l5214 606A  
                         l5206 605E                           l5054 616A                           l4182 50DE  
                         l4190 5126                           l4158 5064                           l4174 4FD2  
                         l4166 4F7E                           l5302 550E                           l5118 59EC  
                         l5070 5E8E                           l5062 618C                           l5230 5C76  
                         l4238 45DA                           l4270 4894                           l4262 4826  
                         l4254 47CC                           l4246 478C                           l1598 4076  
                         l5046 1816                           l5038 17D0                           l5150 3332  
                         l5142 32FC                           l5134 3256                           l5126 3214  
                         l4408 2EA2                           l4360 2CFC                           l4352 2CC2  
                         l4344 2C86                           l4280 2B16                           l4520 2A3A  
                         l4512 29D6                           l4504 29A4                           l4440 2768  
                         l4432 273E                           l4424 2708                           l4096 268A  
                         l4088 262E                           l5320 41CC                           l5312 419A  
                         l5208 6064                           l5056 616E                           l5216 60F4  
                         l4192 513E                           l4184 50F6                           l4168 4FA2  
                         l4176 4FEA                           l5304 5526                           l5080 4E2A  
                         l5400 2FB0                           l5072 5E96                           l5064 6190  
                         l5232 5CBC                           l5224 5C26                           l4264 4834  
                         l4272 489A                           l4256 47EC                           l4248 479A  
                         l4600 48EC                           l5160 33C4                           l5144 330C  
                         l5136 3276                           l5128 3222                           l4370 2D44  
                         l4362 2D0C                           l4354 2CD0                           l4346 2C96  
                         l4338 2C4C                           l4290 2B52                           l4282 2B22  
                         l4530 2AA4                           l4522 2A48                           l4514 2A04  
                         l4506 29B6                           l4450 27A0                           l4442 276A  
                         l4434 274E                           l4426 2718                           l4418 26EC  
                         l4098 26AA                           l5330 4254                           l5322 41D8  
                         l5314 41B0                           l5306 4136                           l5410 1838  
                         l5058 6196                           l4186 5102                           l4194 5FEE  
                         l4178 5002                           l5082 4E4E                           l5090 4E96  
                         l5250 3CE4                           l5402 3044                           l5074 5EBC  
                         l5066 5E82                           l5226 5C6C                           l5218 5BD6  
                         l5242 6152                           l4274 48AA                           l4266 4862  
                         l4258 480A                           l4610 4942                           l4602 4902  
                         l5146 3322                           l5154 333A                           l5138 32CC  
                         l4380 2D84                           l4372 2D52                           l4364 2D1E  
                         l4356 2CDC                           l4348 2C9E                           l4292 2B62  
                         l4284 2B30                           l4540 2AFA                           l4532 2ABE  
                         l4524 2A72                           l4508 29C4                           l4460 27F0  
                         l4452 27C0                           l4444 277A                           l4436 2754  
                         l4428 2728                           l5340 4292                           l5332 4260  
                         l5324 420A                           l5308 4146                           l5500 1F4A  
                         l5420 1906                           l5412 1862                           l3900 4638  
                         l4188 510E                           l4196 5FF2                           l5092 4EAE  
                         l5084 4E66                           l5260 3D54                           l5252 3CEC  
                         l5404 3078                           l5076 5EBE                           l5068 5E86  
                         l5236 5CC6                           l5244 6162                           l4276 48CA  
                         l4268 4882                           l4612 4952                           l4700 3FBA  
                         l5164 33F8                           l6060 334E                           l5148 332A  
                         l5156 336C                           l5180 34B6                           l4390 2DF6  
                         l4382 2DB2                           l4366 2D34                           l4374 2D64  
                         l4358 2CFA                           l4294 2B64                           l4286 2B32  
                         l4534 2ADA                           l4542 2B00                           l4518 2A2E  
                         l4526 2A76                           l4470 2840                           l4462 27FA  
                         l4454 27D0                           l4446 278A                           l4438 275A  
                         l4550 5DC2                           l5342 42B6                           l5334 426E  
                         l5326 420C                           l5318 41C4                           l5502 1F84  
                         l5510 1FCE                           l5430 1994                           l5414 186E  
                         l3910 4702                           l3902 468C                           l4198 6002  
                         l5094 4EC6                           l5086 4E72                           l5270 3DF0  
                         l5262 3D6C                           l5246 3CCE                           l5406 3110  
                         l5238 5D0C                           l4622 497C                           l4614 4956  
                         l4606 4916                           l4710 40D6                           l5174 3474  
                         l6062 340C                           l5166 3422                           l5158 3390  
                         ?_pad 0011                           l4392 2E20                           l4376 2D72  
                         l4368 2D3A                           l4288 2B42                           l4296 2B6C  
                         l4560 4F40                           l4544 2B04                           l4536 2AEA  
                         l4528 2A90                           l4480 2882                           l4472 284C  
                         l4464 2810                           l4448 279A                           l3920 2248  
                         l5344 42C6                           l5336 428C                           l5328 4218  
                         l5504 1FC2                           l5440 1A44                           l5432 199C  
                         l5416 189E                           l3912 4746                           l3904 46A0  
                         l5096 5894                           l5088 4E7E                           l5280 3E9E  
                         l5272 3E1A                           l5264 3D96                           l5256 3CFE  
                         l5248 3CE2                           l5408 3144                           l5600 520E  
                         l4800 38BA                           l4640 49E0                           l4632 49A4  
                         l4624 4986                           l4616 4964                           l4608 4940  
                         l4712 40EA                           l4704 402A                           l4720 5B86  
                         l6064 3496                           l5168 3442                           l5176 34A4  
                         l5352 5944                           l4386 2DDC                           l4394 2E24  
                         l4378 2D76                           l4298 2B7C                           l4562 4F50  
                         l4554 4ED4                           l4570 49F2                           l4538 2AF8  
                         l4490 28E4                           l4482 2892                           l4474 285A  
                         l4466 281C                           l4458 27E4                           l3922 2258  
                         l3930 2282                           l3914 222C                           l5346 42D4  
                         l5338 428E                           l5530 20EC                           l5514 1FDA  
                         l5450 1B5A                           l5442 1A9A                           l5434 19F0  
                         l5426 1910                           l5418 18D2                           l3906 46A4  
                         l5370 5B5C                           l5362 5B34                           l5098 58A8  
                         l5282 3EB6                           l5274 3E32                           l5266 3DAE  
                         l5258 3D2C                           l5610 5258                           l5602 5224  
                         l4650 532A                           l4810 3958                           l4802 38C4  
                         l4634 49B0                           l4626 4990                           l4714 4112  
                         l4706 4066                           l4722 5B9A                           l4730 5BBA  
                         l5354 5950                           l4396 2E3E                           l4388 2DE8  
                         l4564 4F74                           l4556 4F02                           l4580 4A7C  
                         l4572 4A20                           l4492 2900                           l4484 28AC  
                         l4476 2866                           l4468 2834                           l3940 22B2  
                         l3932 2292                           l3924 2268                           l3916 2238  
                         l4548 5DB2                           l5348 42D6                           l5540 2174  
                         l5532 212A                           l5516 200C                           l5524 204A  
                         l5460 1C8C                           l5452 1B6A                           l5436 1A22  
                         l5428 1962                           l3908 46E6                           l4732 607E  
                         l5380 5B76                           l5372 5B66                           l5364 5B38  
                         l5292 5A90                           l4740 5FD2                           l5284 3EE0  
                         l5276 3E5C                           l5268 3DD8                           l5620 527A  
                         l5612 5262                           l5604 5228                           l4660 5EDC  
                         l4652 533E                           l4644 52FC                           l4820 3A1E  
                         l4804 38CA                           l4812 39BC                           l4636 49C0  
                         l4716 4122                           l4708 409A                           l4724 5BA6  
                         l4900 109E                           l5356 596E                           l5700 59D8  
                         l4398 2E54                           l4566 4F7A                           l4558 4F12  
                         l4582 4A8E                           l4574 4A30                           l4494 292A  
                         l4486 28BC                           l4478 2876                           l3950 22F2  
                         l3942 22C0                           l3934 2298                           l3926 2278  
                         l3918 2246                           l5542 21B2                           l5526 207C  
                         l5518 203E                           l5462 1D08                           l5454 1BA2  
                         l5446 1AA6                           l5438 1A28                           l3870 541A  
                         l3862 53F0                           l5622 6112                           l4734 608E  
                         l5390 5B80                           l5382 5B78                           l5374 5B70  
                         l5366 5B42                           l4750 5D64                           l4742 5D16  
                         l5294 5AE2                           l5286 3F0C                           l5278 3E74  
                         l5710 3A80                           l5614 5264                           l5606 524C  
                         l4654 5342                           l4646 530A                           l4822 3A24  
                         l4814 39D6                           l4806 394C                           l4638 49D0  
                         l4670 4B88                           l4662 4AF6                           l4726 5BAA  
                         l4910 115E                           l4902 10D0                           l4830 0E44  
                         l5358 598E                           l5630 42E8                           l4584 4A9C  
                         l4576 4A5E                           l4496 2960                           l4488 28D8  
                         l3960 232C                           l3952 22F4                           l3944 22C2  
                         l3936 22AA                           l3928 227A                           l5528 20AE  
                         l5552 21BE                           l5456 1BB4                           l5464 1D60  
                         l5448 1ABA                           l3880 544E                           l3872 5428  
                         l3864 53F8                           l3856 60CC                           l5624 611A  
                         l5392 5B82                           l5384 5B7A                           l5376 5B72  
                         l5368 5B52                           l4760 579C                           l4752 5D78  
                         l4744 5D2A                           l5296 55A2                           l4736 5FB6  
                         l5288 3F16                           l5800 3CAE                           l5720 3ACC  
                         l5712 3A84                           l5704 3A56                           l5616 526E  
                         l5608 5256                           l4656 5360                           l4648 5316  
                         l4824 3A34                           l4816 39F4                           l4808 3952  
                         l4592 5F7E                           l4680 4BEA                           l4664 4B16  
                         l4728 5BB6                           l4920 11F4                           l4904 110E  
                         l4840 0E94                           l4832 0E54                           l5640 4384  
                         l5632 42EA                           l4586 4AEC                           l4578 4A6E  
                         l4498 296E                           l3970 2340                           l3962 2330  
                         l3946 22D2                           l3954 22FC                           l3938 22AC  
                         l5554 21F0                           l5538 2136                           l5490 1EDE  
                         l5466 1D92                           l5474 1DD0                           l5458 1C30  
                         l3882 5454                           l3874 542E                           l3866 540A  
                         l3858 60E8                           l5626 6124                           l5386 5B7C  
                         l5378 5B74                           l4762 57B4                           l4754 5D84  
                         l5298 5608                           l4746 5D36                           l4770 572E  
                         l4738 5FC2                           l5802 3CB6                           l5730 3AFE  
                         l5722 3AD0                           l5714 3A96                           l5706 3A68  
                         l5618 5270                           l5570 613E                           l5394 56D0  
                         l4658 5EC2                           l3890 4C22                           l4818 3A0E  
                         l4594 5F94                           l4666 4B54                           l4674 4B94  
                         l4690 555A                           l4930 1228                           l4922 11FC  
                         l4906 1122                           l4914 119E                           l4850 0ED0  
                         l4842 0E9C                           l4834 0E62                           l5650 43C4  
                         l5642 4392                           l5634 4308                           l4588 4AF2  
                         l3980 2354                           l3972 2344                           l3964 2334  
                         l3956 230C                           l3948 22E2                           l5556 2222  
                         l5492 1F1C                           l5476 1E02                           l5484 1E40  
                         l5468 1DC4                           l3876 5444                           l3868 5412  
                         l5628 612E                           l5388 5B7E                           l4756 5D98  
                         l4748 5D4A                           l4772 5742                           l4764 583C  
                         l5732 3B12                           l5740 3B30                           l5724 3AD4  
                         l5708 3A7C                           l5716 3AA4                           l5396 2EB0  
                         l5572 6148                           l5580 6028                           l3892 4C40  
                         l3884 4BF4                           l4780 380C                           l4596 5FA4  
                         l4676 4BA6                           l4668 4B7C                           l4692 3F22  
                         l4684 5DF8                           l4940 1272                           l4932 1240  
                         l4924 1204                           l4916 11D8                           l4908 1156  
                         l4860 0F16                           l4844 0EAC                           l4852 0ED4  
                         l4836 0E66                           l4828 0E3E                           l5660 4406  
                         l5652 43CE                           l5644 4396                           l5636 435E  
                         l5900 36F4                           l5820 34F4                           l5812 34E4  
                         l5590 6180                           l3990 2368                           l3982 2358  
                         l3974 2348                           l3966 2338                           l3958 231E  
                         l5486 1E72                           l5478 1E34                           l3878 544C  
                         l4758 5788                           l4774 575A                           l4766 5850  
                         l5742 3B44                           l5734 3B16                           l5718 3AB8  
                         l5398 2F7C                           l5574 614A                           l5566 6132  
                         l5582 6036                           l3894 4C76                           l3886 4C06  
                         l4790 3884                           l4782 381C                           l4694 3F42  
                         l4686 5E08                           l4942 1286                           l4950 137C  
                         l4934 1252                           l4926 1208                           l4918 11E8  
                         l4862 0F1E                           l4854 0EFA                           l4870 0F60  
                         l4846 0EBC                           l4838 0E8A                           l5670 4444  
                         l5662 4408                           l5654 43D0                           l5646 43AE  
                         l5638 4376                           l5902 36FC                           l5910 378C  
                         l5830 3512                           l5822 34F8                           l5814 34E8  
                         l3984 235C                           l3976 234C                           l3968 233C  
                         l3992 236C                           l5488 1EA4                           l4768 5866  
                         l5760 3BA6                           l5744 3B58                           l5752 3B76  
                         l5736 3B1A                           l5728 3AEA                           l5680 5674  
                         l5592 51F6                           l5576 614C                           l5568 613C  
                         l5584 603A                           l3888 4C18                           l4792 388A  
                         l4784 383C                           l4776 37D8                           l4696 3F98  
                         l4688 553C                           l4960 1448                           l4952 139A  
                         l4944 12EA                           l4928 121A                           l4936 125A  
                         l4880 0FAA                           l4872 0F86                           l4864 0F36  
                         l4856 0F0C                           l4848 0EC8                           l5664 4420  
                         l5656 43E8                           l5648 43B0                           l5672 445C  
                         l5912 379E                           l5904 371A                           l5840 3532  
                         l5832 3516                           l5824 34FC                           l5816 34EC  
                         l3994 2370                           l3986 2360                           l3978 2350  
                         l3898 461C                           l5690 580E                           l5586 6174  
                         l5770 3BE8                           l5754 3B8A                           l5746 3B5C  
                         l5682 56A6                           l5594 5208                           l5578 6024  
                         l4794 389A                           l4786 3858                           l4778 37F8  
                         l4698 3FAC                           l4970 14F8                           l4962 1458  
                         l4954 13CE                           l4946 1342                           l4938 1262  
                         l4890 0FE0                           l4874 0F98                           l4866 0F40  
                         l4858 0F10                           l5674 446A                           l5658 43FC  
                         l5666 4426                           l5914 37A2                           l5906 3770  
                         l5850 354E                           l5842 3536                           l5834 351A  
                         l5826 3508                           l5818 34F0                           l3996 239A  
                         l3988 2364                           l5588 60A6                           l5780 3C2A  
                         l5772 3BEC                           l5756 3B9E                           l5764 3BBC  
                         l5748 3B60                           l5684 56B2                           l5596 520A  
                         l4796 38A6                           l4788 3874                           l4980 155C  
                         l4972 152C                           l4964 1468                           l4956 1400  
                         l4948 1376                           l4876 0F9C                           l5692 599A  
                         l5676 447A                           l5668 4434                           l5908 377C  
                         l5860 35AE                           l5852 3556                           l5844 353A  
                         l5836 3522                           l5828 350C                           l3998 23B6  
                         l5686 57E2                           l5790 3C5C                           l5782 3C2E  
                         l5766 3BD0                           l5758 3BA2                           l5678 566E  
                         l5598 520C                           l4798 38AE                           l4990 160E  
                         l4982 1562                           l4974 1540                           l4966 149C  
                         l4958 1416                           l4894 1026                           l4878 0FA2  
                         l5694 59AC                           l5870 35F0                           l5862 35B4  
                         l5918 37C0                           l5854 356A                           l5846 353E  
                         l5838 352A                           l5688 57F6                           l5792 3C62  
                         l5784 3C32                           l5768 3BE4                           l5776 3C02  
                         l4992 162A                           l4984 156A                           l4968 14F2  
                         l4976 1544                           l4896 102C                           l4888 0FC6  
                         l5696 59B4                           l5880 3644                           l5872 360E  
                         l5864 35BC                           l5856 356C                           l5848 3546  
                         l5794 3C7E                           l5778 3C16                           l4994 1638  
                         l4986 1576                           l4978 1554                           l4898 1060  
                         l5698 59BC                           l5890 369A                           l5882 3648  
                         l5874 3612                           l5866 35D0                           l5858 3594  
                         l5796 3C96                           l5788 3C48                           l4996 1648  
                         l4988 15EE                           l5892 36AE                           l5884 365C  
                         l5876 3628                           l5868 35DC                           l5798 3CAA  
                         l4998 164C                           l5894 36CA                           l5886 3674  
                         l5878 362C                           l5896 36E4                           l5888 368E  
                         l5898 36EC                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E34                           STR_5 0E38  
                         u3000 4702                           u3001 46FE                           u3010 2246  
                         u3011 2242                           u3100 239A                           u3020 2258  
                         u3101 2396                           u3021 2254                           u3110 23B2  
                         u3030 2268                           u3111 23AC                           u3031 2264  
                         u4000 2A04                           u3200 2496                           u3120 23B4  
                         u3040 22AA                   _BAUD4CONbits 000EE9                           u4001 2A00  
                         u3201 2492                           u3041 22A6                           u4010 2A1A  
                         u3210 24CE                           u3130 23DC                           u3050 22C0  
                         u4011 2A16                           u3211 24CA                           u3131 23D8  
                         u3051 22BC                           u4100 4A20                           u4020 2A2E  
                         u3300 25EA                           u3220 2514                           u3140 23FA  
                         u3060 22D2                           u4101 4A1C                           u4021 2A2A  
                         u3301 25E6                           u3221 2510                           u3141 23F6  
                         u3061 22CE                           u4110 4A5E                           u4030 2A48  
                         u3310 2600                           u3230 254A                           u3150 241A  
                         u3070 22E2                           u4111 4A5A                           u4031 2A44  
                         u3311 25FC                           u3231 2546                           u3151 2416  
                         u3071 22DE                           u4120 4A7C                           u4040 2A90  
                         u3320 2614                           u3240 255A                           u3160 2428  
                         u3080 231E                           u5000 3CFA                           u3400 5E7E  
                         u4200 49A0                           u4121 4A78                           u4041 2A8C  
                         u3321 2610                           u3241 2556                           u3161 2424  
                         u3081 231A                           u5001 3CF6                           u3401 5E7A  
                         u4201 499C                           u4130 4A9C                           u4050 2ABE  
                         u3330 262E                           u3250 2586                           u3170 2438  
                         u3090 232C                           u3410 51DC                           u5010 3D54  
                         u4210 49C0                           _T2PR 000FBC                           u4131 4A98  
                         u4051 2ABA                           u3331 262A                           u3251 2582  
                         u3171 2434                           u3091 2328                           u3411 51D8  
                         u5011 3D50                           u4211 49BC                           u4140 4AEC  
                         u4060 2AF8                           u3340 2668                           u3260 2596  
                         u3180 246A                           u5100 41B0                           u3420 51F4  
                         u3500 5156                           u5020 3D96                           u4220 49D0  
                         u4141 4AE8                           u4061 2AF4                           u3341 2664  
                         u3261 2592                           u3181 2466                           u5101 41AC  
                         u3421 51F0                           u3501 5152                           u5021 3D92  
                         u4221 49CC                           u4070 4F02                           u3350 267A  
                         u3270 25B2                           u3190 2478                           u5110 4206  
                         u3430 52E2                           u3510 6022                           u5030 3DD8  
                         u4230 530A                           u4150 5F94                           u4310 4BE0  
                         u4071 4EFE                           u3351 2676                           u3271 25AE  
                         u3191 2474                           u5111 4202                           u3431 52DE  
                         u3511 601E                           u5031 3DD4                           u4231 5306  
                         u4151 5F90                           u4311 4BDA                           u4080 4F40  
                         u3360 268A                           u3280 25C2                           u5120 4250  
                         u5200 1962                           u3440 52FA                           u5040 3E1A  
                         u3520 44A6                           u3600 47CC                           u4240 5360  
                         u4160 4902                           u4320 4BE2                           u4400 404A  
                         u4081 4F3C                           u3361 2686                           u3281 25BE  
                         u5121 424C                           u5201 195E                           u3441 52F6  
                         u5041 3E16                           u3521 44A2                           u3601 47C8  
                         u4241 535C                           u4161 48FE                           u4305 4BB8  
                         u4090 4F74                           u3370 26AA                           u3290 25D4  
                         u5130 426E                           u5210 19F0                           u3450 50A0  
                         u5050 3E5C                           u3530 44D8                           u3610 480A  
                         u4250 5EDC                           u4170 4936                           u4410 4066  
                         u4330 5E3A                           u4091 4F70                           u3371 26A6  
                         u3291 25D0                           u5131 426A                           u5211 19EC  
                         u3451 509C                           u5051 3E58                           u3531 44D4  
                         u3611 4806                           u4251 5ED8                           u4411 4062  
                         u4331 5E36                           u3700 2BB8                           u3380 26BC  
                         u5140 427E                           u5300 1E34                           u5220 1A44  
                         u3460 50B8                           u5060 3E9E                           u3620 4834  
                         u4500 380A                           u4180 4964                           u4260 4B36  
                         u4420 40BA                           u4340 555A                           u3701 2BB4  
                         u3381 26B8                           u5141 427A                           u5301 1E30  
                         u5221 1A40                           u3461 50B4                           u5061 3E9A  
                         u3541 4502                           u3621 4830                           u4181 4960  
                         u4405 4040                           u4341 5556                           u3710 2BF8  
                         u3390 26D8                           u5150 428C                           u5310 1E72  
                         u5230 1A9A                           u3470 5002                           u5070 3EE0  
                         u3550 4526                           u3630 4862                           u4510 381C  
                         u4190 4978                           u4270 4B54                           u4430 40D6  
                         u4350 3F6A                           u3711 2BF4                           u3391 26D4  
                         u5151 4288                           u5311 1E6E                           u5231 1A96  
                         u3471 4FFE                           u6007 58DC                           u5071 3EDC  
                         u3551 4522                           u3631 485E                           u4511 3818  
                         u4191 4974                           u4175 492C                           u4271 4B50  
                         u4431 40D2                           u3800 2D84                           u3720 2C38  
                         u5160 42C6                           u5080 4146                           u5400 207C  
                         u5320 1EA4                           u5240 1ABA                           u2920 540A  
                         u3480 501A                           u3560 4550                           u3640 48AA  
                         u4520 3858                           u4280 4B7C                           u4440 4112  
                         u4360 3F98                           u4600 0EAC                           u3801 2D80  
                         u3721 2C34                           u5161 42C2                           u5081 4142  
                         u5401 2078                           u5321 1EA0                           u5241 1AB6  
                         u2921 5406                           u3481 5016                           u6017 5D54  
                         u3561 454C                           u3641 48A6                           u4521 3854  
                         u4281 4B78                           u4265 4B2C                           u4441 410E  
                         u4425 40B0                           u4361 3F94                           u4601 0EA8  
                         u3810 2DB2                           u3730 2CAE                           u3650 2B30  
                         u5170 42D4                           u5090 4154                           u5410 20AE  
                         u5330 1EDE                           u5250 1B6A                           u2930 5428  
                         u3490 513E                           u3570 4590                           u4530 3884  
                         u4290 4BA6                           u4370 3FBA                           u4450 5BD4  
                         u4610 0EBC                           u3811 2DAE                           u3731 2CAA  
                         u3651 2B2C                           u5171 42D0                           u5091 4150  
                         u5411 20AA                           u5331 1EDA                           u5251 1B66  
                         u2931 5424                           u6107 5934                           u3491 513A  
                         u6027 4FDC                           u3571 458C                           u4531 3880  
                         u4291 4BA2                           u4371 3FB6                           u4355 3F60  
                         u4451 5BD0                           u4611 0EB8                           u3820 2DC8  
                         u3740 2CD0                           u3660 2B42                           u3900 2728  
                         u5420 20EC                           u5340 1F1C                           u5260 1BB4  
                         u2940 5444                           u4460 608E                           u3580 45DA  
                         u4540 389A                           u4700 119A                           u4620 0EFA  
                         u5180 598E                           u5500 4392                           u3821 2DC4  
                         u3741 2CCC                           u3661 2B3E                           u3901 2724  
                         u5421 20E8                           u5341 1F18                           u5261 1BB0  
                         u2941 5440                           u4461 608A                           u6117 5B48  
                         u6037 5DA2                           u3581 45D6                           u4541 3896  
                         u4701 1196                           u4621 0EF6                           u5181 598A  
                         u5501 438E                           u3830 2DDC                           u3750 2CFA  
                         u3670 2B52                           u3910 2768                           u5430 212A  
                         u5350 1F46                           u5270 1D92                           u4470 60A4  
                         u3590 479A                           u2950 4C06                           u4550 39D6  
                         u4390 4026                           u4710 11D0                           u4630 0F0C  
                         u5510 43C4                           u3831 2DD8                           u3751 2CF6  
                         u3671 2B4E                           u3911 2764                           u5431 2126  
                         u5351 1F42                           u5271 1D8E                           u5191 1868  
                         u6127 5800                           u4471 60A0                           u6047 507A  
                         u3591 4796                           u2951 4C02                           u4551 39D2  
                         u4391 4022                           u4711 11CC                           u4631 0F08  
                         u5511 43C0                           u3840 2DF6                           u3760 2D1E  
                         u3680 2B96                           u3920 277A                           u5440 2174  
                         u5360 1F84                           u5280 1DC4                           u4480 5FEC  
                         u5600 3AFE                           u2960 4C18                           u4560 39F4  
                         u4800 14F2                           u4720 11E8                           u4640 0F86  
                         u5520 43FC                           u3841 2DF2                           u3761 2D1A  
                         u3681 2B92                           u3921 2776                           u5441 2170  
                         u5361 1F80                           u5281 1DC0                           u6137 582C  
                         u6057 5FF8                           u4481 5FE8                           u5601 3AFA  
                         u2961 4C14                           u4561 39F0                           u4385 3FCE  
                         u4801 14EE                           u4721 11E4                           u4641 0F82  
                         u5521 43F8                           u3850 2E3E                           u3770 2D34  
                         u3690 2BA8                           u3930 278A                           u5450 21B2  
                         u5370 1FC2                           u5290 1E02                           u5610 3B44  
                         u2970 4C40                           u4570 3A0E                           u4490 3808  
                         u4386 3FD8                           u4810 1540                           u4730 121A  
                         u4650 0F98                           u5530 4434                           u3851 2E3A  
                         u3771 2D30                           u3691 2BA4                           u3931 2786  
                         u5451 21AE                           u5371 1FBE                           u5291 1DFE  
                         u6147 52BC                           u6067 57A6                           u5611 3B40  
                         u2971 4C3C                           u4571 3A0A                           u4491 3802  
                         u4387 3FE8                           u4811 153C                           u4731 1216  
                         u4651 0F94                           u5531 4430                           u3860 2E6E  
                         u3780 2D52                           u3940 27C0                           u5460 21F0  
                         u5380 200C                           u5620 3B8A                           u2980 4C76  
                         u4580 3A1E                           u4900 17F8                           u4820 15EE  
                         u4740 1228                           u4660 1012                           u5540 4442  
                         u5700 360E                           u3861 2E6A                           u3781 2D4E  
                         u3941 27BC                           u5461 21EC                           u5381 2008  
                         u6157 51B6                           u6077 57D2                           u5621 3B86  
                         u2981 4C72                           u4581 3A1A                           u4901 17F4  
                         u4821 15EA                           u4741 1224                           u4661 100E  
                         u5541 443E                           u5701 360A                           u3870 2E9C  
                         u3790 2D72                           u3950 27D0                           u5470 2222  
                         u5390 203E                           u2990 4638                           u5630 3BD0  
                         u4910 5EAA                           u4830 162A                           u4750 1252  
                         u4670 109E                           u4590 0E62                           u5550 446A  
                         u5710 3628                           u3871 2E98                           u3791 2D6E  
                         u3951 27CC                           u5471 221E                           u5391 203A  
                         u2991 4634                           u6087 5118                           u5631 3BCC  
                         u4911 5EA2                           u4831 1626                           u4751 124E  
                         u4671 109A                           u4591 0E5E                           u5551 4466  
                         u5711 3624                           u3960 294A                           u3880 2706  
                         u5640 3C16                           u5480 6052                           u4840 1638  
                         u4760 139A                           u4680 10D0                           u5560 4478  
                         u5720 36E4                           u3881 2702                           u6097 590A  
                         u5641 3C12                           u5481 604E                           u4841 1634  
                         u4761 1396                           u4681 10CC                           u5561 4474  
                         u5721 36E0                           u3970 29A4                           u3890 2718  
                         u4930 4EAE                           u5650 3C5C                           u5570 56A6  
                         u4850 168C                           u4770 1400                           u4690 110E  
                         u5490 4384                           u5730 371A                           u3971 29A0  
                         u3891 2714                           u4931 4EAA                           u5651 3C58  
                         u5571 56A2                           u4851 1688                           u4771 13FC  
                         u4691 110A                           u5491 4380                           u5731 3716  
                         u3980 29C4                           u4940 4EC6                           u5660 3C7E  
                         u5580 3A68                           u4860 175E                           u4780 1448  
                         u5740 379E                           u3981 29C0                           u3965 2940  
                         u4941 4EC2                           u5661 3C7A                           u5581 3A64  
                         u4861 175A                           u4781 1444                           u5741 379A  
                         u3990 29D6                           u5670 3CC8                           u5590 3AB8  
                         u4870 177A                           u4790 1458                           u4950 3206  
                         u5750 37D4                           u3991 29D2                           u5671 3CC4  
                         u5591 3AB4                           u4871 1776                           u4791 1454  
                         u4951 3202                           u5751 37D0                           u4928 5EAC  
                         u4880 17E2                           u4960 3256                           u4881 17DC  
                         u4961 3252                           u4890 17E4                           u4970 3276  
                         u5690 3594                           u4971 3272                           u5907 444E  
                         u5691 3590                           u5827 3578                           u4980 338C  
                         u4981 3388                           u5917 4484                           u5837 35A0  
                         u4990 6162                           u5927 4E88                           u4991 615E  
                         u5847 3680                           u5937 5FC8                           u5857 42F4  
                         u5947 585A                           u5867 4368                           u5957 5884  
                         u5877 43A0                           u5967 574C                           u5887 43DA  
                         u5977 5778                           u5897 4412                           u5987 5518  
                         u5997 58B2                  _LightBlueMove 5608                           abs@a 0013  
                         _dbuf 02A0                           _labs 553C                           _main 34E4  
                         _dtoa 37D8                           _prec 00E9                           _vals 016A  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 527E                  ___fpclassifyf 4AF6                           prodh 000FF4  
                         prodl 000FF3                           start 0034                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 5C76                __end_of_HighISR 0034         __end_of_color_read_lum 5C26  
                _Backhalfblock 572E                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F40                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5D16  
              _RunOneBlockTime 00F2               __end_of_LED_init 60CC                  ___fltol@sign1 0009  
              __end_of___aodiv 461C                          ?_labs 0001                __end_of___fladd 26EC  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 48EC  
              __end_of___fldiv 2EB0                __end_of___flneg 5FB6                __end_of___flmul 2B16  
              __end_of___flsub 5DF8                __end_of___fltol 49F2                    colour_rel@B 0074  
                  colour_rel@G 0070                          ?_stop 0014                    colour_rel@L 0060  
                  colour_rel@R 006C                __end_of___lwdiv 5464                          i2l227 0030  
                 vfpfcnvrt@fmt 0097                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 3F22        __end_of_sendCharSerial4 6168     __end_of_I2C_2_Master_Start 61AA  
   __end_of_I2C_2_Master_Write 6174                   YellowMove@mL 0020                          _flags 00ED  
                 YellowMove@mR 0022                          _fputc 4BF4                          _fputs 5E3C  
               delayed_ms@time 0001                          labs@a 0001                          pad@fp 0011  
                        _power 00F6                          _width 00E7                          _putch 61B4  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5                  ?_Buttons_init 0001  
                        plusw2 000FDB               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 59EC                 ?___fpclassifyf 0001  
       ??_ReverseLightBlueMove 0024        __end_of_color_read_Blue 5D16          _I2C_2_Master_RepStart 618C  
             __end_of_BlueMove 53F0                 ?_Backhalfblock 001A                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5464        __end_of_turnCalibration 4494                _reverseOneBlock 5894  
                 __end_of_labs 55A2                   __end_of_main 37D8                   __end_of_dtoa 3A56  
                 __end_of_stop 52FC                ??_quaterForward 001E                _colour_rel$3281 0064  
              _colour_rel$3282 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 4D74               __end_of_PinkMove 5B34  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                 ??_Buttons_init 0001                         _RG6PPS 000E88  
                       i2l5810 002C                         i2l5806 000A                         i2l5808 001A  
                    ??_HighISR 0001       __end_of_color_click_init 5B86                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 55A2               __end_of___xxtofl 42E8  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 49F2  
                       ___fleq 4ED4                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 60CC              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 0E3E                      ??___lwdiv 000B                         _floorf 3F22  
                       _memcpy 5B86                         clear_0 54AA                         clear_1 54B6  
                       clear_2 54C2                         _motorL 0161                         _motorR 0158  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5DF8                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 599A                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 50BA  
                   ___flge@ff1 002A                     _YellowMove 5A90                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 54C8        __end_of_reverseOneBlock 58EC                     ___flneg@f1 0001  
     __end_of_color_read_Green 5CC6         ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E  
                ___rparam_used 000001                      ?_LED_init 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 6174                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 50BA                   __pidataBANK0 61AA  
                 __pidataBANK1 61B0                  __end_of_fputc 4CBE                  __end_of_fputs 5E80  
                __end_of_putch 61B6              __end_of_GreenMove 5F7E            __end_of_Timer0_init 6132  
          __end_of_ReversePink 4E2A                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14376 00D3          __end_of_reverseDetect 57E2  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 57E2                     ??_LED_init 0001  
                   _getTMR0val 566E              __end_of_RetryMove 553C                      ?_PinkMove 0020  
            _color_writetoaddr 60F2                     _delayed_ms 5FB6                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 001A  
                      ?_memcpy 0001           __end_of_Buttons_init 618C              __end_of_TurnDelay 6024  
        __end_of_timed_forward 4ED4            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2EB0        __end_of_Interrupts_init 6180  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 6112  
                      _RedMove 5F02             _I2C_2_Master_Start 61A0                     ??_PinkMove 0024  
                   _initUSART4 6132             _I2C_2_Master_Write 6168                        __Hparam 0000  
                      _WayBack 011A                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 6112                    RetryMove@mL 0020                    RetryMove@mR 0022  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4D74                        ___aodiv 4494                        ___fladd 222C  
                      ___aomod 4788                        ___fldiv 2B16                        ___flneg 5F7E  
                      ___flmul 26EC                        ___flsub 5DB2                        ___fltol 48EC  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 53F0            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 5464                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3CCE                        __ptext0 34E4  
                      __ptext1 42E8                        __ptext2 599A                        __ptext3 5944  
                      __ptext4 31DE                        __ptext5 0E3E                        __ptext6 5DF8  
                      __ptext7 5B86                        __ptext8 553C                        __ptext9 3F22  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F1  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 599A  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 54C8  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 01DA                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022                     _lost_count 00EB              __end_of_vfpfcnvrt 34E4  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F4                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 51F6                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013          __end_of_quaterForward 5944              __end_of_turnRight 501C  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                 _consecuitive 0116                    _CCP1CONbits 000FAB                     main@colour 01D6  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5D64  
               __end_of___flge 4AF6                 __end_of___fleq 4F7E                 _fullSpeedAhead 5158  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 60F2                 __end_of_efgtoa 1838                 __end_of_floorf 4134  
               __end_of_memcpy 5BD6                     floorf@F526 00DF       __end_of_Forwardhalfblock 583C  
                ??_colour_move 002F                      _GreenMove 5F40                 __end_of_strcpy 5E3C  
          start_initialization 5464                    __end_of_abs 5F02                    __end_of_pad 5376  
                _TxBufWriteCnt 00EF          __end_of_LightBlueMove 566E                   ??_OrangeMove 0024  
                 _Buttons_init 6180          __end_of___fpclassifyf 4BF4            color_read_Green@tmp 000A  
 colour_move@recognized_colour 002D          __end_of_Backhalfblock 5788        __end_of_initDCmotorsPWM 527E  
                  vfprintf@fmt 00AA         __end_of_fullSpeedAhead 51F6                       ??___flge 0032  
                     ??___fleq 003A                      _RetryMove 54D2                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F2                    __pdataBANK1 01D8                _ForwardOneBlock 583C  
                     ??_floorf 004F                       ??_memcpy 0007                Backhalfblock@mL 001A  
              Backhalfblock@mR 001C                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4CBE                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 5608                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5FEE                  __pcstackBANK0 0060                  __pcstackBANK1 0172  
             ___aodiv@dividend 0001            __end_of_colour_move 3CCE                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2906 006F            ReverseOrangeMove@mL 0020            ReverseOrangeMove@mR 0022  
             ___lwdiv@dividend 0007                      _dtoa$2875 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 0020                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3283 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 5AE2           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 572E              _I2C_2_Master_Idle 607E  
            _I2C_2_Master_Init 6054              _I2C_2_Master_Read 5E80              _I2C_2_Master_Stop 6196  
                   ?_TurnDelay 0001                   _RxBufReadCnt 00F0             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00B0               getTMR0val@moving 0005                 colour_rel@vals 004B  
            _sendStringSerial4 6024            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                   ??_getTMR0val 0001  
                     _PIE0bits 000E29                       _LED_init 60A6             ?_sendStringSerial4 0002  
      __end_of_ForwardOneBlock 5894                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 0114                       _PIR0bits 000E33  
                     _PIR4bits 000E37                       i2u568_40 001A                       i2u568_41 0016  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 1838            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 31DE      __end_of_I2C_2_Master_Idle 60A6      __end_of_I2C_2_Master_Init 607E  
    __end_of_I2C_2_Master_Read 5EC2              ___wmul@multiplier 0001         ReverseLightBlueMove@mL 0020  
       ReverseLightBlueMove@mR 0022      __end_of_I2C_2_Master_Stop 61A0                   setMotorPWM@m 000E  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024                    _colour_move 3A56  
 __end_of_ReverseLightBlueMove 5A90              ??_color_read_Blue 0007             __end_of_getTMR0val 56D0  
                 _TxBufReadCnt 00EE                       _BlueMove 5376                      _turnRight 4F7E  
           __end_of_delayed_ms 5FEE                quaterForward@mL 001A                quaterForward@mR 001C  
                   vfpfcnvrt@c 00A5              ??_turnCalibration 0024                      copy_data0 5478  
                    copy_data1 5498      __end_of_sendStringSerial4 6054                   ??_colour_rel 004F  
                _reverseDetect 5788  __end_of_I2C_2_Master_RepStart 6196             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 4788                   ??_initUSART4 0001                       _PinkMove 5AE2  
                     __Hrparam 0000         __end_of_Colour_decider 222C                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5158                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 56D0                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 31DE  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4E2A                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4134                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6150                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4AF6                       __ptext11 48EC  
                     __ptext20 4494                       __ptext12 5F7E                       __ptext21 6024  
                     __ptext13 37D8                       __ptext30 6132                       __ptext22 6150  
                     __ptext14 52FC                       __ptext31 51F6                       __ptext23 56D0  
                     __ptext15 5E3C                       __ptext40 583C                       __ptext32 566E  
                     __ptext24 5BD6                       __ptext16 4BF4                       __ptext41 59EC  
                     __ptext33 2EB0                       __ptext25 5C26                       __ptext17 61B4  
                     __ptext50 5894                       __ptext42 5A3E                       __ptext34 3A56  
                     __ptext26 5C76                       __ptext18 5EC2                       __ptext51 55A2  
                     __ptext43 5F02                       __ptext35 3CCE                       __ptext27 5CC6  
                     __ptext19 4788                       __ptext60 58EC                       __ptext52 5D16  
                     __ptext44 5F40                       __ptext36 4E2A                       __ptext28 618C  
                     __ptext61 5B34                       __ptext53 4F7E                       __ptext45 5376  
                     __ptext37 5FB6                       __ptext29 5E80                       __ptext70 6174  
                     __ptext62 60F2                       __ptext54 5608                       __ptext46 572E  
                     __ptext38 4CBE                       __ptext71 57E2                       __ptext63 6168  
                     __ptext55 5D64                       __ptext47 5A90                       __ptext39 4D74  
                     __ptext80 222C                       __ptext72 527E                       __ptext64 6196  
                     __ptext56 501C                       __ptext48 54D2                       __ptext81 26EC  
                     __ptext73 5158                       __ptext65 61A0                       __ptext57 5FEE  
                     __ptext49 5AE2                       __ptext82 49F2                       __ptext74 461C  
                     __ptext66 607E                       __ptext58 5788                       __ptext83 4ED4  
                     __ptext75 60CC                       __ptext67 6054                       __ptext59 50BA  
                     __ptext84 2B16                       __ptext76 53F0                       __ptext68 6112  
                     __ptext85 6180                       __ptext77 1838                       __ptext69 60A6  
                     __ptext78 4134                       __ptext79 5DB2                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 5944                       _run_flag 01D8                  ??_turnRight45 001E  
                     _turnLeft 501C               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 461C  
                turnRight45@mL 001A                  turnRight45@mR 001C                       intlevel2 0000  
                    sprintf@ap 00C4               ??_fullSpeedAhead 0018              _ReverseOrangeMove 59EC  
                    strcpy@src 0003                 getTMR0val@temp 0003             ?_ReverseOrangeMove 0020  
                 ??_turnLeft45 001E           _ReverseLightBlueMove 5A3E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                    efgtoa@nmode 0073                ___aomod@divisor 0009  
          ??_ReverseOrangeMove 0024                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5B34                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  _quaterForward 58EC  
          __end_of_turnRight45 5D64                    _prev_colour 0118                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 5DB2  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012      __end_of_ReverseOrangeMove 5A3E  
              _sendCharSerial4 6150                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012          ?_ReverseLightBlueMove 0020  
