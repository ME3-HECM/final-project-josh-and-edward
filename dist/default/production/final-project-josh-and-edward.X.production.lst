

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 25 21:08:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 06/04/2022 GMT
    56                           ; 
    57                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   001BD8                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _DataFlag
    95   001BD8  01                 	db	1
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _SSP2ADD	set	3798
   105   000000                     _SSP2CON1bits	set	3801
   106   000000                     _RC4REG	set	3811
   107   000000                     _SP4BRGL	set	3813
   108   000000                     _TX4STAbits	set	3816
   109   000000                     _BAUD4CONbits	set	3817
   110   000000                     _SSP2CON2	set	3802
   111   000000                     _TRISDbits	set	3972
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _INTCONbits	set	4082
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIE2bits	set	3627
   116   000000                     _PIE4bits	set	3629
   117   000000                     _PIR4bits	set	3639
   118   000000                     _RC0PPS	set	3682
   119   000000                     _RD5PPS	set	3695
   120   000000                     _RD6PPS	set	3696
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     STR_1:
   127   000E01  72                 	db	114	;'r'
   128   000E02  65                 	db	101	;'e'
   129   000E03  64                 	db	100	;'d'
   130   000E04  3D                 	db	61	;'='
   131   000E05  25                 	db	37
   132   000E06  64                 	db	100	;'d'
   133   000E07  20                 	db	32
   134   000E08  67                 	db	103	;'g'
   135   000E09  72                 	db	114	;'r'
   136   000E0A  65                 	db	101	;'e'
   137   000E0B  65                 	db	101	;'e'
   138   000E0C  6E                 	db	110	;'n'
   139   000E0D  3D                 	db	61	;'='
   140   000E0E  25                 	db	37
   141   000E0F  64                 	db	100	;'d'
   142   000E10  20                 	db	32
   143   000E11  62                 	db	98	;'b'
   144   000E12  6C                 	db	108	;'l'
   145   000E13  75                 	db	117	;'u'
   146   000E14  65                 	db	101	;'e'
   147   000E15  3D                 	db	61	;'='
   148   000E16  25                 	db	37
   149   000E17  64                 	db	100	;'d'
   150   000E18  20                 	db	32
   151   000E19  6C                 	db	108	;'l'
   152   000E1A  75                 	db	117	;'u'
   153   000E1B  6D                 	db	109	;'m'
   154   000E1C  3D                 	db	61	;'='
   155   000E1D  25                 	db	37
   156   000E1E  64                 	db	100	;'d'
   157   000E1F  0D                 	db	13
   158   000E20  0A                 	db	10
   159   000E21  00                 	db	0
   160   000E22  00                 	db	0	; dummy byte at the end
   161   000000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165   0018DE                     __pcinit:
   166                           	callstack 0
   167   0018DE                     start_initialization:
   168                           	callstack 0
   169   0018DE                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to BANK0 (1 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174   0018DE  0ED8               	movlw	low __pidataBANK0
   175   0018E0  6EF6               	movwf	tblptrl,c
   176   0018E2  0E1B               	movlw	high __pidataBANK0
   177   0018E4  6EF7               	movwf	tblptrh,c
   178   0018E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179   0018E8  6EF8               	movwf	tblptru,c
   180   0018EA  0009               	tblrd		*+	;fetch initializer
   181   0018EC  CFF5 F0F2          	movff	tablat,__pdataBANK0
   182                           
   183                           ; Clear objects allocated to BANK1 (60 bytes)
   184   0018F0  EE01  F000         	lfsr	0,__pbssBANK1
   185   0018F4  0E3C               	movlw	60
   186   0018F6                     clear_0:
   187   0018F6  6AEE               	clrf	postinc0,c
   188   0018F8  06E8               	decf	wreg,f,c
   189   0018FA  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (65 bytes)
   192   0018FC  EE00  F0B1         	lfsr	0,__pbssBANK0
   193   001900  0E41               	movlw	65
   194   001902                     clear_1:
   195   001902  6AEE               	clrf	postinc0,c
   196   001904  06E8               	decf	wreg,f,c
   197   001906  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (4 bytes)
   200   001908  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   201   00190A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   00190C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   00190E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   204   001910                     end_of_initialization:
   205                           	callstack 0
   206   001910                     __end_of__initialization:
   207                           	callstack 0
   208   001910  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   001912  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   001914  0E00               	movlw	low (__Lsmallconst shr (0+16))
   211   001916  6EF8               	movwf	tblptru,c
   212   001918  0E0E               	movlw	high __Lsmallconst
   213   00191A  6EF7               	movwf	tblptrh,c
   214   00191C  0100               	movlb	0
   215   00191E  EFD2  F00A         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218   000057                     __pbssCOMRAM:
   219                           	callstack 0
   220   000057                     _TxBufReadCnt:
   221                           	callstack 0
   222   000057                     	ds	1
   223   000058                     _TxBufWriteCnt:
   224                           	callstack 0
   225   000058                     	ds	1
   226   000059                     _RxBufReadCnt:
   227                           	callstack 0
   228   000059                     	ds	1
   229   00005A                     _RxBufWriteCnt:
   230                           	callstack 0
   231   00005A                     	ds	1
   232                           
   233                           	psect	bssBANK0
   234   0000B1                     __pbssBANK0:
   235                           	callstack 0
   236   0000B1                     _EUSART4RXbuf:
   237                           	callstack 0
   238   0000B1                     	ds	20
   239   0000C5                     _width:
   240                           	callstack 0
   241   0000C5                     	ds	2
   242   0000C7                     _prec:
   243                           	callstack 0
   244   0000C7                     	ds	2
   245   0000C9                     _flags:
   246                           	callstack 0
   247   0000C9                     	ds	1
   248   0000CA                     _dbuf:
   249                           	callstack 0
   250   0000CA                     	ds	32
   251   0000EA                     _vals:
   252                           	callstack 0
   253   0000EA                     	ds	8
   254                           
   255                           	psect	dataBANK0
   256   0000F2                     __pdataBANK0:
   257                           	callstack 0
   258   0000F2                     _DataFlag:
   259                           	callstack 0
   260   0000F2                     	ds	1
   261                           
   262                           	psect	bssBANK1
   263   000100                     __pbssBANK1:
   264                           	callstack 0
   265   000100                     _EUSART4TXbuf:
   266                           	callstack 0
   267   000100                     	ds	60
   268                           
   269                           	psect	cstackBANK0
   270   000060                     __pcstackBANK0:
   271                           	callstack 0
   272   000060                     ?_vfprintf:
   273                           	callstack 0
   274   000060                     vfprintf@fp:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x0
   278   000060                     	ds	2
   279   000062                     vfprintf@fmt:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x2
   283   000062                     	ds	2
   284   000064                     vfprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x4
   288   000064                     	ds	2
   289   000066                     ?_sprintf:
   290                           	callstack 0
   291   000066                     sprintf@s:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x6
   295   000066                     	ds	2
   296   000068                     sprintf@fmt:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x8
   300   000068                     	ds	10
   301   000072                     sprintf@ap:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x12
   305   000072                     	ds	2
   306   000074                     sprintf@f:
   307                           	callstack 0
   308                           
   309                           ; 11 bytes @ 0x14
   310   000074                     	ds	11
   311   00007F                     main@buf:
   312                           	callstack 0
   313                           
   314                           ; 50 bytes @ 0x1F
   315   00007F                     	ds	50
   316                           
   317                           	psect	cstackCOMRAM
   318   000001                     __pcstackCOMRAM:
   319                           	callstack 0
   320   000001                     ??_getCharFromTxBuf:
   321   000001                     putCharToRxBuf@byte:
   322                           	callstack 0
   323   000001                     
   324                           ; 1 bytes @ 0x0
   325   000001                     	ds	2
   326   000003                     ??_HighISR:
   327                           
   328                           ; 1 bytes @ 0x2
   329   000003                     	ds	2
   330   000005                     ??_I2C_2_Master_Idle:
   331   000005                     ?___aodiv:
   332                           	callstack 0
   333   000005                     ?___aomod:
   334                           	callstack 0
   335   000005                     putCharToTxBuf@byte:
   336                           	callstack 0
   337   000005                     fputc@c:
   338                           	callstack 0
   339   000005                     ___aodiv@dividend:
   340                           	callstack 0
   341   000005                     ___aomod@dividend:
   342                           	callstack 0
   343                           
   344                           ; 8 bytes @ 0x4
   345   000005                     	ds	1
   346   000006                     ??_I2C_2_Master_Read:
   347   000006                     I2C_2_Master_Write@data_byte:
   348                           	callstack 0
   349   000006                     TxBufferedString@string:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x5
   353   000006                     	ds	1
   354   000007                     color_writetoaddr@value:
   355                           	callstack 0
   356   000007                     I2C_2_Master_Read@ack:
   357                           	callstack 0
   358   000007                     fputc@fp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x6
   362   000007                     	ds	1
   363   000008                     color_writetoaddr@address:
   364                           	callstack 0
   365   000008                     I2C_2_Master_Read@tmp:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x7
   369   000008                     	ds	1
   370   000009                     ??_fputc:
   371   000009                     ??_color_click_init:
   372   000009                     ?_color_read_lum:
   373                           	callstack 0
   374   000009                     ?_color_read_Red:
   375                           	callstack 0
   376   000009                     ?_color_read_Green:
   377                           	callstack 0
   378   000009                     ?_color_read_Blue:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x8
   382   000009                     	ds	2
   383   00000B                     ??_color_read_lum:
   384   00000B                     ??_color_read_Red:
   385   00000B                     ??_color_read_Green:
   386   00000B                     ??_color_read_Blue:
   387                           
   388                           ; 1 bytes @ 0xA
   389   00000B                     	ds	2
   390   00000D                     ___aodiv@divisor:
   391                           	callstack 0
   392   00000D                     ___aomod@divisor:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0xC
   396   00000D                     	ds	1
   397   00000E                     color_read_lum@tmp:
   398                           	callstack 0
   399   00000E                     color_read_Red@tmp:
   400                           	callstack 0
   401   00000E                     color_read_Green@tmp:
   402                           	callstack 0
   403   00000E                     color_read_Blue@tmp:
   404                           	callstack 0
   405   00000E                     fputs@s:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xD
   409   00000E                     	ds	2
   410   000010                     readColours@vals:
   411                           	callstack 0
   412   000010                     fputs@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xF
   416   000010                     	ds	2
   417   000012                     fputs@c:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x11
   421   000012                     	ds	1
   422   000013                     fputs@i:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x12
   426   000013                     	ds	2
   427   000015                     ___aodiv@counter:
   428                           	callstack 0
   429   000015                     ___aomod@counter:
   430                           	callstack 0
   431   000015                     pad@fp:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x14
   435   000015                     	ds	1
   436   000016                     ___aodiv@sign:
   437                           	callstack 0
   438   000016                     ___aomod@sign:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x15
   442   000016                     	ds	1
   443   000017                     ?_abs:
   444                           	callstack 0
   445   000017                     pad@buf:
   446                           	callstack 0
   447   000017                     abs@a:
   448                           	callstack 0
   449   000017                     ___aodiv@quotient:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x16
   453   000017                     	ds	2
   454   000019                     ??_abs:
   455   000019                     pad@p:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x18
   459   000019                     	ds	2
   460   00001B                     ??_pad:
   461                           
   462                           ; 1 bytes @ 0x1A
   463   00001B                     	ds	1
   464   00001C                     pad@i:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1B
   468   00001C                     	ds	2
   469   00001E                     pad@w:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1D
   473   00001E                     	ds	2
   474   000020                     dtoa@fp:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x1F
   478   000020                     	ds	2
   479   000022                     dtoa@d:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x21
   483   000022                     	ds	8
   484   00002A                     ??_dtoa:
   485                           
   486                           ; 1 bytes @ 0x29
   487   00002A                     	ds	8
   488   000032                     _dtoa$1152:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x31
   492   000032                     	ds	2
   493   000034                     dtoa@p:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x33
   497   000034                     	ds	2
   498   000036                     dtoa@w:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x35
   502   000036                     	ds	2
   503   000038                     dtoa@n:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x37
   507   000038                     	ds	8
   508   000040                     dtoa@s:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x3F
   512   000040                     	ds	1
   513   000041                     dtoa@i:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x40
   517   000041                     	ds	2
   518   000043                     vfpfcnvrt@fp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x42
   522   000043                     	ds	2
   523   000045                     vfpfcnvrt@fmt:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x44
   527   000045                     	ds	2
   528   000047                     vfpfcnvrt@ap:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x46
   532   000047                     	ds	2
   533   000049                     ??_vfpfcnvrt:
   534                           
   535                           ; 1 bytes @ 0x48
   536   000049                     	ds	2
   537   00004B                     vfpfcnvrt@convarg:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x4A
   541   00004B                     	ds	8
   542   000053                     vfpfcnvrt@cp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x52
   546   000053                     	ds	2
   547   000055                     vfprintf@cfmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x54
   551   000055                     	ds	2
   552   000057                     
   553                           ; 1 bytes @ 0x56
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 25 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  buf            50   31[BANK0 ] unsigned char [50]
   564 ;;  ADC             2    0        unsigned int 
   565 ;;  frac_part       2    0        unsigned int 
   566 ;;  int_part        2    0        unsigned int 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   577 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   579 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   580 ;;Total ram usage:       50 bytes
   581 ;; Hardware stack levels required when called: 10
   582 ;; This function calls:
   583 ;;		_I2C_2_Master_Init
   584 ;;		_Interrupts_init
   585 ;;		_TxBufferedString
   586 ;;		_color_click_init
   587 ;;		_initUSART4
   588 ;;		_readColours
   589 ;;		_sendTxBuf
   590 ;;		_sprintf
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597   0015A4                     __ptext0:
   598                           	callstack 0
   599   0015A4                     _main:
   600                           	callstack 21
   601   0015A4                     
   602                           ;main.c: 26:     initUSART4();
   603   0015A4  ECB4  F00D         	call	_initUSART4	;wreg free
   604   0015A8                     
   605                           ;main.c: 27:     Interrupts_init();
   606   0015A8  ECCF  F00D         	call	_Interrupts_init	;wreg free
   607   0015AC                     
   608                           ;main.c: 28:     color_click_init();
   609   0015AC  ECF4  F00C         	call	_color_click_init	;wreg free
   610   0015B0                     
   611                           ;main.c: 29:     I2C_2_Master_Init();
   612   0015B0  EC51  F00D         	call	_I2C_2_Master_Init	;wreg free
   613   0015B4                     l2090:
   614                           
   615                           ;main.c: 36:     {;main.c: 38:     readColours(&vals);
   616   0015B4  0EEA               	movlw	low _vals
   617   0015B6  6E10               	movwf	readColours@vals^0,c
   618   0015B8  0E00               	movlw	high _vals
   619   0015BA  6E11               	movwf	(readColours@vals+1)^0,c
   620   0015BC  EC4F  F00B         	call	_readColours	;wreg free
   621   0015C0                     
   622                           ;main.c: 39:     sprintf(buf,"red=%d green=%d blue=%d lum=%d\r\n",vals.R,vals.G,vals.B,v
      +                          als.L);
   623   0015C0  0E7F               	movlw	low main@buf
   624   0015C2  0100               	movlb	0	; () banked
   625   0015C4  6F66               	movwf	sprintf@s& (0+255),b
   626   0015C6  0E00               	movlw	high main@buf
   627   0015C8  6F67               	movwf	(sprintf@s+1)& (0+255),b
   628   0015CA  0E01               	movlw	low STR_1
   629   0015CC  6F68               	movwf	sprintf@fmt& (0+255),b
   630   0015CE  0E0E               	movlw	high STR_1
   631   0015D0  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   632   0015D2  C0EA  F06A         	movff	_vals,?_sprintf+4
   633   0015D6  C0EB  F06B         	movff	_vals+1,?_sprintf+5
   634   0015DA  C0EC  F06C         	movff	_vals+2,?_sprintf+6
   635   0015DE  C0ED  F06D         	movff	_vals+3,?_sprintf+7
   636   0015E2  C0EE  F06E         	movff	_vals+4,?_sprintf+8
   637   0015E6  C0EF  F06F         	movff	_vals+5,?_sprintf+9
   638   0015EA  C0F0  F070         	movff	_vals+6,?_sprintf+10
   639   0015EE  C0F1  F071         	movff	_vals+7,?_sprintf+11
   640   0015F2  EC7E  F00B         	call	_sprintf	;wreg free
   641   0015F6                     
   642                           ;main.c: 40:     TxBufferedString(buf);
   643   0015F6  0E7F               	movlw	low main@buf
   644   0015F8  6E06               	movwf	TxBufferedString@string^0,c
   645   0015FA  0E00               	movlw	high main@buf
   646   0015FC  6E07               	movwf	(TxBufferedString@string+1)^0,c
   647   0015FE  EC0E  F00D         	call	_TxBufferedString	;wreg free
   648                           
   649                           ;main.c: 42:     while (DataFlag){
   650   001602  EF05  F00B         	goto	l2098
   651   001606                     l2096:
   652                           
   653                           ; BSR set to: 0
   654                           ;main.c: 43:         sendTxBuf();
   655   001606  EC3C  F00D         	call	_sendTxBuf	;wreg free
   656   00160A                     l2098:
   657                           
   658                           ;main.c: 42:     while (DataFlag){
   659   00160A  0100               	movlb	0	; () banked
   660   00160C  51F2               	movf	_DataFlag& (0+255),w,b	;volatile
   661   00160E  A4D8               	btfss	status,2,c
   662   001610  EF0C  F00B         	goto	u1391
   663   001614  EF0E  F00B         	goto	u1390
   664   001618                     u1391:
   665   001618  EF03  F00B         	goto	l2096
   666   00161C                     u1390:
   667   00161C  EFDA  F00A         	goto	l2090
   668   001620  EF25  F000         	goto	start
   669   001624                     __end_of_main:
   670                           	callstack 0
   671                           
   672 ;; *************** function _sprintf *****************
   673 ;; Defined at:
   674 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  s               2    6[BANK0 ] PTR unsigned char 
   677 ;;		 -> main@buf(50), 
   678 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   679 ;;		 -> STR_1(33), 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  f              11   20[BANK0 ] struct _IO_FILE
   682 ;;  ap              2   18[BANK0 ] PTR void [1]
   683 ;;		 -> ?_sprintf(2), 
   684 ;;  ret             2    0        int 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    6[BANK0 ] int 
   687 ;; Registers used:
   688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   694 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   695 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;Total ram usage:       25 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 9
   701 ;; This function calls:
   702 ;;		_vfprintf
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text1
   709   0016FC                     __ptext1:
   710                           	callstack 0
   711   0016FC                     _sprintf:
   712                           	callstack 21
   713   0016FC  0E6A               	movlw	low (?_sprintf+4)
   714   0016FE  0100               	movlb	0	; () banked
   715   001700  6F72               	movwf	sprintf@ap& (0+255),b
   716   001702  0E00               	movlw	high (?_sprintf+4)
   717   001704  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   718   001706  C066  F074         	movff	sprintf@s,sprintf@f
   719   00170A  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   720   00170E                     
   721                           ; BSR set to: 0
   722   00170E  0E00               	movlw	0
   723   001710  6F78               	movwf	(sprintf@f+4)& (0+255),b
   724   001712  0E00               	movlw	0
   725   001714  6F77               	movwf	(sprintf@f+3)& (0+255),b
   726   001716                     
   727                           ; BSR set to: 0
   728   001716  0E00               	movlw	0
   729   001718  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   730   00171A  0E00               	movlw	0
   731   00171C  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   732   00171E                     
   733                           ; BSR set to: 0
   734   00171E  0E74               	movlw	low sprintf@f
   735   001720  6F60               	movwf	vfprintf@fp& (0+255),b
   736   001722  0E00               	movlw	high sprintf@f
   737   001724  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   738   001726  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   739   00172A  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   740   00172E  0E72               	movlw	low sprintf@ap
   741   001730  6F64               	movwf	vfprintf@ap& (0+255),b
   742   001732  0E00               	movlw	high sprintf@ap
   743   001734  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   744   001736  ECA7  F00B         	call	_vfprintf	;wreg free
   745   00173A  0100               	movlb	0	; () banked
   746   00173C  5177               	movf	(sprintf@f+3)& (0+255),w,b
   747   00173E  2566               	addwf	sprintf@s& (0+255),w,b
   748   001740  6ED9               	movwf	fsr2l,c
   749   001742  5178               	movf	(sprintf@f+4)& (0+255),w,b
   750   001744  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   751   001746  6EDA               	movwf	fsr2h,c
   752   001748  0E00               	movlw	0
   753   00174A  6EDF               	movwf	indf2,c
   754   00174C                     
   755                           ; BSR set to: 0
   756   00174C  0012               	return		;funcret
   757   00174E                     __end_of_sprintf:
   758                           	callstack 0
   759                           
   760 ;; *************** function _vfprintf *****************
   761 ;; Defined at:
   762 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   765 ;;		 -> sprintf@f(11), 
   766 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   767 ;;		 -> STR_1(33), 
   768 ;;  ap              2    4[BANK0 ] PTR PTR void 
   769 ;;		 -> sprintf@ap(2), 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   772 ;;		 -> STR_1(33), 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2    0[BANK0 ] int 
   775 ;; Registers used:
   776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;Total ram usage:        8 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 8
   789 ;; This function calls:
   790 ;;		_vfpfcnvrt
   791 ;; This function is called by:
   792 ;;		_sprintf
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text2
   797   00174E                     __ptext2:
   798                           	callstack 0
   799   00174E                     _vfprintf:
   800                           	callstack 21
   801   00174E                     
   802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   803   00174E  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   804   001752  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   805                           
   806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   807   001756  EFBB  F00B         	goto	l2064
   808   00175A                     l2062:
   809                           
   810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   811   00175A  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   812   00175E  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   813   001762  0E55               	movlw	low vfprintf@cfmt
   814   001764  6E45               	movwf	vfpfcnvrt@fmt^0,c
   815   001766  0E00               	movlw	high vfprintf@cfmt
   816   001768  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   817   00176A  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   818   00176E  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   819   001772  ECC6  F009         	call	_vfpfcnvrt	;wreg free
   820   001776                     l2064:
   821                           
   822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   823   001776  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   824   00177A  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   825   00177E                     	if	0	;tblptru may be non-zero
   826   00177E                     	endif
   827   00177E                     	if	0	;tblptru may be non-zero
   828   00177E                     	endif
   829   00177E  0008               	tblrd		*
   830   001780  50F5               	movf	tablat,w,c
   831   001782  0900               	iorlw	0
   832   001784  A4D8               	btfss	status,2,c
   833   001786  EFC7  F00B         	goto	u1381
   834   00178A  EFC9  F00B         	goto	u1380
   835   00178E                     u1381:
   836   00178E  EFAD  F00B         	goto	l2062
   837   001792                     u1380:
   838   001792                     
   839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   840   001792  0E00               	movlw	0
   841   001794  0100               	movlb	0	; () banked
   842   001796  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   843   001798  0E00               	movlw	0
   844   00179A  6F60               	movwf	?_vfprintf& (0+255),b
   845   00179C                     
   846                           ; BSR set to: 0
   847   00179C  0012               	return		;funcret
   848   00179E                     __end_of_vfprintf:
   849                           	callstack 0
   850                           
   851 ;; *************** function _vfpfcnvrt *****************
   852 ;; Defined at:
   853 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   856 ;;		 -> sprintf@f(11), 
   857 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   858 ;;		 -> vfprintf@cfmt(2), 
   859 ;;  ap              2   70[COMRAM] PTR PTR void 
   860 ;;		 -> sprintf@ap(2), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  convarg         8   74[COMRAM] struct .
   863 ;;  cp              2   82[COMRAM] PTR unsigned char 
   864 ;;		 -> STR_1(33), 
   865 ;;  i               2    0        int 
   866 ;;  done            2    0        int 
   867 ;;  c               1    0        unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   877 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;Total ram usage:       18 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 7
   884 ;; This function calls:
   885 ;;		_dtoa
   886 ;;		_fputc
   887 ;; This function is called by:
   888 ;;		_vfprintf
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893   00138C                     __ptext3:
   894                           	callstack 0
   895   00138C                     _vfpfcnvrt:
   896                           	callstack 21
   897   00138C                     
   898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
   899   00138C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   900   001390  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   901   001394  CFDE FFF6          	movff	postinc2,tblptrl
   902   001398  CFDD FFF7          	movff	postdec2,tblptrh
   903   00139C                     	if	0	;tblptru may be non-zero
   904   00139C                     	endif
   905   00139C                     	if	0	;tblptru may be non-zero
   906   00139C                     	endif
   907   00139C  0008               	tblrd		*
   908   00139E  50F5               	movf	tablat,w,c
   909   0013A0  0A25               	xorlw	37
   910   0013A2  A4D8               	btfss	status,2,c
   911   0013A4  EFD6  F009         	goto	u1351
   912   0013A8  EFD8  F009         	goto	u1350
   913   0013AC                     u1351:
   914   0013AC  EF58  F00A         	goto	l2054
   915   0013B0                     u1350:
   916   0013B0                     
   917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   918   0013B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   919   0013B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   920   0013B8  2ADE               	incf	postinc2,f,c
   921   0013BA  0E00               	movlw	0
   922   0013BC  22DD               	addwfc	postdec2,f,c
   923   0013BE                     
   924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   925   0013BE  0E00               	movlw	0
   926   0013C0  0100               	movlb	0	; () banked
   927   0013C2  6FC6               	movwf	(_width+1)& (0+255),b
   928   0013C4  0E00               	movlw	0
   929   0013C6  6FC5               	movwf	_width& (0+255),b
   930   0013C8  C0C5  F0C9         	movff	_width,_flags
   931   0013CC                     
   932                           ; BSR set to: 0
   933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   934   0013CC  69C7               	setf	_prec& (0+255),b
   935   0013CE  69C8               	setf	(_prec+1)& (0+255),b
   936   0013D0                     
   937                           ; BSR set to: 0
   938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   939   0013D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   940   0013D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   941   0013D8  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
   942   0013DC  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
   943   0013E0                     
   944                           ; BSR set to: 0
   945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   946   0013E0  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   947   0013E4  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   948   0013E8                     	if	0	;tblptru may be non-zero
   949   0013E8                     	endif
   950   0013E8                     	if	0	;tblptru may be non-zero
   951   0013E8                     	endif
   952   0013E8  0008               	tblrd		*
   953   0013EA  50F5               	movf	tablat,w,c
   954   0013EC  0A64               	xorlw	100
   955   0013EE  B4D8               	btfsc	status,2,c
   956   0013F0  EFFC  F009         	goto	u1361
   957   0013F4  EFFE  F009         	goto	u1360
   958   0013F8                     u1361:
   959   0013F8  EF0C  F00A         	goto	l2044
   960   0013FC                     u1360:
   961   0013FC                     
   962                           ; BSR set to: 0
   963   0013FC  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   964   001400  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   965   001404                     	if	0	;tblptru may be non-zero
   966   001404                     	endif
   967   001404                     	if	0	;tblptru may be non-zero
   968   001404                     	endif
   969   001404  0008               	tblrd		*
   970   001406  50F5               	movf	tablat,w,c
   971   001408  0A69               	xorlw	105
   972   00140A  A4D8               	btfss	status,2,c
   973   00140C  EF0A  F00A         	goto	u1371
   974   001410  EF0C  F00A         	goto	u1370
   975   001414                     u1371:
   976   001414  EF4F  F00A         	goto	l2050
   977   001418                     u1370:
   978   001418                     l2044:
   979                           
   980                           ; BSR set to: 0
   981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   982   001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   983   00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   984   001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
   985   001424  0E02               	movlw	2
   986   001426  26DE               	addwf	postinc2,f,c
   987   001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
   988   00142C  0E00               	movlw	0
   989   00142E  22DD               	addwfc	postdec2,f,c
   990   001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
   991   001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   992   001438  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
   993   00143C  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
   994   001440  0E00               	movlw	0
   995   001442  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   996   001444  0EFF               	movlw	-1
   997   001446  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
   998   001448  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
   999   00144A  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1000   00144C  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1001   00144E  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1002   001450  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1005   001452  0E01               	movlw	1
  1006   001454  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1007   001456  6E49               	movwf	??_vfpfcnvrt^0,c
  1008   001458  0E00               	movlw	0
  1009   00145A  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1010   00145C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1011   00145E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1012   001462  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1013   001466  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1014   00146A  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1015   00146E                     
  1016                           ; BSR set to: 0
  1017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1018   00146E  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1019   001472  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1020   001476  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1021   00147A  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1022   00147E  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1023   001482  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1024   001486  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1025   00148A  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1026   00148E  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1027   001492  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1028   001496  EC12  F007         	call	_dtoa	;wreg free
  1029   00149A  EF6C  F00A         	goto	l996
  1030   00149E                     l2050:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1033   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1034   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1035   0014A6  2ADE               	incf	postinc2,f,c
  1036   0014A8  0E00               	movlw	0
  1037   0014AA  22DD               	addwfc	postdec2,f,c
  1038   0014AC  EF6C  F00A         	goto	l996
  1039   0014B0                     l2054:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1042   0014B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043   0014B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044   0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  1045   0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  1046   0014C0                     	if	0	;tblptru may be non-zero
  1047   0014C0                     	endif
  1048   0014C0                     	if	0	;tblptru may be non-zero
  1049   0014C0                     	endif
  1050   0014C0  0008               	tblrd		*
  1051   0014C2  50F5               	movf	tablat,w,c
  1052   0014C4  6E05               	movwf	fputc@c^0,c
  1053   0014C6  6A06               	clrf	(fputc@c+1)^0,c
  1054   0014C8  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1055   0014CC  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1056   0014D0  EC6D  F00A         	call	_fputc	;wreg free
  1057   0014D4  EF4F  F00A         	goto	l2050
  1058   0014D8                     l996:
  1059   0014D8  0012               	return		;funcret
  1060   0014DA                     __end_of_vfpfcnvrt:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _dtoa *****************
  1064 ;; Defined at:
  1065 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1068 ;;		 -> sprintf@f(11), 
  1069 ;;  d               8   33[COMRAM] long long 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  n               8   55[COMRAM] long long 
  1072 ;;  i               2   64[COMRAM] int 
  1073 ;;  w               2   53[COMRAM] int 
  1074 ;;  p               2   51[COMRAM] int 
  1075 ;;  s               1   63[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1085 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;Total ram usage:       35 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 6
  1092 ;; This function calls:
  1093 ;;		___aodiv
  1094 ;;		___aomod
  1095 ;;		_abs
  1096 ;;		_pad
  1097 ;; This function is called by:
  1098 ;;		_vfpfcnvrt
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text4
  1103   000E24                     __ptext4:
  1104                           	callstack 0
  1105   000E24                     _dtoa:
  1106                           	callstack 21
  1107   000E24                     
  1108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1109   000E24  C022  F038         	movff	dtoa@d,dtoa@n
  1110   000E28  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1111   000E2C  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1112   000E30  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1113   000E34  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1114   000E38  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1115   000E3C  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1116   000E40  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1117   000E44                     
  1118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1119   000E44  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1120   000E46  EF27  F007         	goto	u1251
  1121   000E4A  EF2A  F007         	goto	u1250
  1122   000E4E                     u1251:
  1123   000E4E  0E01               	movlw	1
  1124   000E50  EF2B  F007         	goto	u1260
  1125   000E54                     u1250:
  1126   000E54  0E00               	movlw	0
  1127   000E56                     u1260:
  1128   000E56  6E40               	movwf	dtoa@s^0,c
  1129   000E58                     
  1130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1131   000E58  5040               	movf	dtoa@s^0,w,c
  1132   000E5A  B4D8               	btfsc	status,2,c
  1133   000E5C  EF32  F007         	goto	u1271
  1134   000E60  EF34  F007         	goto	u1270
  1135   000E64                     u1271:
  1136   000E64  EF44  F007         	goto	l1986
  1137   000E68                     u1270:
  1138   000E68                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1140   000E68  1E3F               	comf	(dtoa@n+7)^0,f,c
  1141   000E6A  1E3E               	comf	(dtoa@n+6)^0,f,c
  1142   000E6C  1E3D               	comf	(dtoa@n+5)^0,f,c
  1143   000E6E  1E3C               	comf	(dtoa@n+4)^0,f,c
  1144   000E70  1E3B               	comf	(dtoa@n+3)^0,f,c
  1145   000E72  1E3A               	comf	(dtoa@n+2)^0,f,c
  1146   000E74  1E39               	comf	(dtoa@n+1)^0,f,c
  1147   000E76  6C38               	negf	dtoa@n^0,c
  1148   000E78  0E00               	movlw	0
  1149   000E7A  2239               	addwfc	(dtoa@n+1)^0,f,c
  1150   000E7C  223A               	addwfc	(dtoa@n+2)^0,f,c
  1151   000E7E  223B               	addwfc	(dtoa@n+3)^0,f,c
  1152   000E80  223C               	addwfc	(dtoa@n+4)^0,f,c
  1153   000E82  223D               	addwfc	(dtoa@n+5)^0,f,c
  1154   000E84  223E               	addwfc	(dtoa@n+6)^0,f,c
  1155   000E86  223F               	addwfc	(dtoa@n+7)^0,f,c
  1156   000E88                     l1986:
  1157                           
  1158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1159   000E88  0100               	movlb	0	; () banked
  1160   000E8A  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  1161   000E8C  EF52  F007         	goto	u1280
  1162   000E90  51C8               	movf	(_prec+1)& (0+255),w,b
  1163   000E92  E106               	bnz	u1281
  1164   000E94  05C7               	decf	_prec& (0+255),w,b
  1165   000E96  B0D8               	btfsc	status,0,c
  1166   000E98  EF50  F007         	goto	u1281
  1167   000E9C  EF52  F007         	goto	u1280
  1168   000EA0                     u1281:
  1169   000EA0  EF58  F007         	goto	l975
  1170   000EA4                     u1280:
  1171   000EA4                     
  1172                           ; BSR set to: 0
  1173   000EA4  0E00               	movlw	0
  1174   000EA6  6E35               	movwf	(dtoa@p+1)^0,c
  1175   000EA8  0E01               	movlw	1
  1176   000EAA  6E34               	movwf	dtoa@p^0,c
  1177   000EAC  EF5C  F007         	goto	l977
  1178   000EB0                     l975:
  1179                           
  1180                           ; BSR set to: 0
  1181   000EB0  C0C7  F034         	movff	_prec,dtoa@p
  1182   000EB4  C0C8  F035         	movff	_prec+1,dtoa@p+1
  1183   000EB8                     l977:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1187   000EB8  C0C5  F036         	movff	_width,dtoa@w
  1188   000EBC  C0C6  F037         	movff	_width+1,dtoa@w+1
  1189   000EC0                     
  1190                           ; BSR set to: 0
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1192   000EC0  5040               	movf	dtoa@s^0,w,c
  1193   000EC2  B4D8               	btfsc	status,2,c
  1194   000EC4  EF66  F007         	goto	u1291
  1195   000EC8  EF68  F007         	goto	u1290
  1196   000ECC                     u1291:
  1197   000ECC  EF7F  F007         	goto	l978
  1198   000ED0                     u1290:
  1199   000ED0                     
  1200                           ; BSR set to: 0
  1201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1202   000ED0  0636               	decf	dtoa@w^0,f,c
  1203   000ED2  A0D8               	btfss	status,0,c
  1204   000ED4  0637               	decf	(dtoa@w+1)^0,f,c
  1205   000ED6                     
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1208   000ED6  5040               	movf	dtoa@s^0,w,c
  1209   000ED8  A4D8               	btfss	status,2,c
  1210   000EDA  EF71  F007         	goto	u1301
  1211   000EDE  EF73  F007         	goto	u1300
  1212   000EE2                     u1301:
  1213   000EE2  EF79  F007         	goto	l1998
  1214   000EE6                     u1300:
  1215   000EE6                     
  1216                           ; BSR set to: 0
  1217   000EE6  0E00               	movlw	0
  1218   000EE8  6E33               	movwf	(_dtoa$1152+1)^0,c
  1219   000EEA  0E2B               	movlw	43
  1220   000EEC  6E32               	movwf	_dtoa$1152^0,c
  1221   000EEE  EF7D  F007         	goto	l2000
  1222   000EF2                     l1998:
  1223                           
  1224                           ; BSR set to: 0
  1225   000EF2  0E00               	movlw	0
  1226   000EF4  6E33               	movwf	(_dtoa$1152+1)^0,c
  1227   000EF6  0E2D               	movlw	45
  1228   000EF8  6E32               	movwf	_dtoa$1152^0,c
  1229   000EFA                     l2000:
  1230                           
  1231                           ; BSR set to: 0
  1232   000EFA  C032  F040         	movff	_dtoa$1152,dtoa@s
  1233   000EFE                     l978:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1237   000EFE  0E00               	movlw	0
  1238   000F00  6E42               	movwf	(dtoa@i+1)^0,c
  1239   000F02  0E1F               	movlw	31
  1240   000F04  6E41               	movwf	dtoa@i^0,c
  1241   000F06                     
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1244   000F06  0E00               	movlw	0
  1245   000F08  6FE9               	movwf	(_dbuf+31)& (0+255),b
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1248   000F0A  EF03  F008         	goto	l2014
  1249   000F0E                     l2004:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1252   000F0E  0641               	decf	dtoa@i^0,f,c
  1253   000F10  A0D8               	btfss	status,0,c
  1254   000F12  0642               	decf	(dtoa@i+1)^0,f,c
  1255   000F14                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1257   000F14  0ECA               	movlw	low _dbuf
  1258   000F16  2441               	addwf	dtoa@i^0,w,c
  1259   000F18  6ED9               	movwf	fsr2l,c
  1260   000F1A  0E00               	movlw	high _dbuf
  1261   000F1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1262   000F1E  6EDA               	movwf	fsr2h,c
  1263   000F20  C038  F005         	movff	dtoa@n,___aomod@dividend
  1264   000F24  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1265   000F28  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1266   000F2C  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1267   000F30  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1268   000F34  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1269   000F38  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1270   000F3C  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1271   000F40  0E0A               	movlw	10
  1272   000F42  6E0D               	movwf	___aomod@divisor^0,c
  1273   000F44  0E00               	movlw	0
  1274   000F46  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1275   000F48  0E00               	movlw	0
  1276   000F4A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1277   000F4C  0E00               	movlw	0
  1278   000F4E  6E10               	movwf	(___aomod@divisor+3)^0,c
  1279   000F50  0E00               	movlw	0
  1280   000F52  6E11               	movwf	(___aomod@divisor+4)^0,c
  1281   000F54  0E00               	movlw	0
  1282   000F56  6E12               	movwf	(___aomod@divisor+5)^0,c
  1283   000F58  0E00               	movlw	0
  1284   000F5A  6E13               	movwf	(___aomod@divisor+6)^0,c
  1285   000F5C  0E00               	movlw	0
  1286   000F5E  6E14               	movwf	(___aomod@divisor+7)^0,c
  1287   000F60  EC14  F009         	call	___aomod	;wreg free
  1288   000F64  C005  F02A         	movff	?___aomod,??_dtoa
  1289   000F68  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1290   000F6C  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1291   000F70  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1292   000F74  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1293   000F78  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1294   000F7C  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1295   000F80  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1296   000F84  C02A  F017         	movff	??_dtoa,abs@a
  1297   000F88  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1298   000F8C  ECD4  F00C         	call	_abs	;wreg free
  1299   000F90  5017               	movf	?_abs^0,w,c
  1300   000F92  0F30               	addlw	48
  1301   000F94  6EDF               	movwf	indf2,c
  1302   000F96                     
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1304   000F96  0634               	decf	dtoa@p^0,f,c
  1305   000F98  A0D8               	btfss	status,0,c
  1306   000F9A  0635               	decf	(dtoa@p+1)^0,f,c
  1307   000F9C                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1309   000F9C  0636               	decf	dtoa@w^0,f,c
  1310   000F9E  A0D8               	btfss	status,0,c
  1311   000FA0  0637               	decf	(dtoa@w+1)^0,f,c
  1312   000FA2                     
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1314   000FA2  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1315   000FA6  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1316   000FAA  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1317   000FAE  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1318   000FB2  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1319   000FB6  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1320   000FBA  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1321   000FBE  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1322   000FC2  0E0A               	movlw	10
  1323   000FC4  6E0D               	movwf	___aodiv@divisor^0,c
  1324   000FC6  0E00               	movlw	0
  1325   000FC8  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1326   000FCA  0E00               	movlw	0
  1327   000FCC  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1328   000FCE  0E00               	movlw	0
  1329   000FD0  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1330   000FD2  0E00               	movlw	0
  1331   000FD4  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1332   000FD6  0E00               	movlw	0
  1333   000FD8  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1334   000FDA  0E00               	movlw	0
  1335   000FDC  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1336   000FDE  0E00               	movlw	0
  1337   000FE0  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1338   000FE2  EC50  F008         	call	___aodiv	;wreg free
  1339   000FE6  C005  F038         	movff	?___aodiv,dtoa@n
  1340   000FEA  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1341   000FEE  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1342   000FF2  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1343   000FF6  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1344   000FFA  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1345   000FFE  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1346   001002  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1347   001006                     l2014:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1350   001006  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1351   001008  EF0E  F008         	goto	u1311
  1352   00100C  5042               	movf	(dtoa@i+1)^0,w,c
  1353   00100E  E108               	bnz	u1310
  1354   001010  0441               	decf	dtoa@i^0,w,c
  1355   001012  A0D8               	btfss	status,0,c
  1356   001014  EF0E  F008         	goto	u1311
  1357   001018  EF10  F008         	goto	u1310
  1358   00101C                     u1311:
  1359   00101C  EF2C  F008         	goto	l2020
  1360   001020                     u1310:
  1361   001020  5038               	movf	dtoa@n^0,w,c
  1362   001022  1039               	iorwf	(dtoa@n+1)^0,w,c
  1363   001024  103A               	iorwf	(dtoa@n+2)^0,w,c
  1364   001026  103B               	iorwf	(dtoa@n+3)^0,w,c
  1365   001028  103C               	iorwf	(dtoa@n+4)^0,w,c
  1366   00102A  103D               	iorwf	(dtoa@n+5)^0,w,c
  1367   00102C  103E               	iorwf	(dtoa@n+6)^0,w,c
  1368   00102E  103F               	iorwf	(dtoa@n+7)^0,w,c
  1369   001030  A4D8               	btfss	status,2,c
  1370   001032  EF1D  F008         	goto	u1321
  1371   001036  EF1F  F008         	goto	u1320
  1372   00103A                     u1321:
  1373   00103A  EF87  F007         	goto	l2004
  1374   00103E                     u1320:
  1375   00103E  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1376   001040  EF2C  F008         	goto	u1330
  1377   001044  5035               	movf	(dtoa@p+1)^0,w,c
  1378   001046  E106               	bnz	u1331
  1379   001048  0434               	decf	dtoa@p^0,w,c
  1380   00104A  B0D8               	btfsc	status,0,c
  1381   00104C  EF2A  F008         	goto	u1331
  1382   001050  EF2C  F008         	goto	u1330
  1383   001054                     u1331:
  1384   001054  EF87  F007         	goto	l2004
  1385   001058                     u1330:
  1386   001058                     l2020:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1389   001058  5040               	movf	dtoa@s^0,w,c
  1390   00105A  B4D8               	btfsc	status,2,c
  1391   00105C  EF32  F008         	goto	u1341
  1392   001060  EF34  F008         	goto	u1340
  1393   001064                     u1341:
  1394   001064  EF3F  F008         	goto	l2026
  1395   001068                     u1340:
  1396   001068                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1398   001068  0641               	decf	dtoa@i^0,f,c
  1399   00106A  A0D8               	btfss	status,0,c
  1400   00106C  0642               	decf	(dtoa@i+1)^0,f,c
  1401   00106E                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1403   00106E  0ECA               	movlw	low _dbuf
  1404   001070  2441               	addwf	dtoa@i^0,w,c
  1405   001072  6ED9               	movwf	fsr2l,c
  1406   001074  0E00               	movlw	high _dbuf
  1407   001076  2042               	addwfc	(dtoa@i+1)^0,w,c
  1408   001078  6EDA               	movwf	fsr2h,c
  1409   00107A  C040  FFDF         	movff	dtoa@s,indf2
  1410   00107E                     l2026:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1413   00107E  C020  F015         	movff	dtoa@fp,pad@fp
  1414   001082  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1415   001086  0ECA               	movlw	low _dbuf
  1416   001088  2441               	addwf	dtoa@i^0,w,c
  1417   00108A  6E17               	movwf	pad@buf^0,c
  1418   00108C  0E00               	movlw	high _dbuf
  1419   00108E  2042               	addwfc	(dtoa@i+1)^0,w,c
  1420   001090  6E18               	movwf	(pad@buf+1)^0,c
  1421   001092  C036  F019         	movff	dtoa@w,pad@p
  1422   001096  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1423   00109A  EC12  F00B         	call	_pad	;wreg free
  1424   00109E  0012               	return		;funcret
  1425   0010A0                     __end_of_dtoa:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _pad *****************
  1429 ;; Defined at:
  1430 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1433 ;;		 -> sprintf@f(11), 
  1434 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1435 ;;		 -> dbuf(32), 
  1436 ;;  p               2   24[COMRAM] int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  w               2   29[COMRAM] int 
  1439 ;;  i               2   27[COMRAM] int 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;Total ram usage:       11 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 5
  1456 ;; This function calls:
  1457 ;;		_fputc
  1458 ;;		_fputs
  1459 ;; This function is called by:
  1460 ;;		_dtoa
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text5
  1465   001624                     __ptext5:
  1466                           	callstack 0
  1467   001624                     _pad:
  1468                           	callstack 21
  1469   001624                     
  1470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1471   001624  BE1A               	btfsc	(pad@p+1)^0,7,c
  1472   001626  EF17  F00B         	goto	u1221
  1473   00162A  EF19  F00B         	goto	u1220
  1474   00162E                     u1221:
  1475   00162E  EF1F  F00B         	goto	l1964
  1476   001632                     u1220:
  1477   001632  C019  F01E         	movff	pad@p,pad@w
  1478   001636  C01A  F01F         	movff	pad@p+1,pad@w+1
  1479   00163A  EF23  F00B         	goto	l966
  1480   00163E                     l1964:
  1481   00163E  0E00               	movlw	0
  1482   001640  6E1F               	movwf	(pad@w+1)^0,c
  1483   001642  0E00               	movlw	0
  1484   001644  6E1E               	movwf	pad@w^0,c
  1485   001646                     l966:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1488   001646  0E00               	movlw	0
  1489   001648  6E1D               	movwf	(pad@i+1)^0,c
  1490   00164A  0E00               	movlw	0
  1491   00164C  6E1C               	movwf	pad@i^0,c
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1494   00164E  EF35  F00B         	goto	l1970
  1495   001652                     l1966:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1498   001652  0E00               	movlw	0
  1499   001654  6E06               	movwf	(fputc@c+1)^0,c
  1500   001656  0E20               	movlw	32
  1501   001658  6E05               	movwf	fputc@c^0,c
  1502   00165A  C015  F007         	movff	pad@fp,fputc@fp
  1503   00165E  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1504   001662  EC6D  F00A         	call	_fputc	;wreg free
  1505   001666                     
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1507   001666  4A1C               	infsnz	pad@i^0,f,c
  1508   001668  2A1D               	incf	(pad@i+1)^0,f,c
  1509   00166A                     l1970:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1512   00166A  501E               	movf	pad@w^0,w,c
  1513   00166C  5C1C               	subwf	pad@i^0,w,c
  1514   00166E  501D               	movf	(pad@i+1)^0,w,c
  1515   001670  0A80               	xorlw	128
  1516   001672  6E1B               	movwf	??_pad^0,c
  1517   001674  501F               	movf	(pad@w+1)^0,w,c
  1518   001676  0A80               	xorlw	128
  1519   001678  581B               	subwfb	??_pad^0,w,c
  1520   00167A  A0D8               	btfss	status,0,c
  1521   00167C  EF42  F00B         	goto	u1231
  1522   001680  EF44  F00B         	goto	u1230
  1523   001684                     u1231:
  1524   001684  EF29  F00B         	goto	l1966
  1525   001688                     u1230:
  1526   001688                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1528   001688  C017  F00E         	movff	pad@buf,fputs@s
  1529   00168C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1530   001690  C015  F010         	movff	pad@fp,fputs@fp
  1531   001694  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1532   001698  EC91  F00C         	call	_fputs	;wreg free
  1533   00169C  0012               	return		;funcret
  1534   00169E                     __end_of_pad:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _fputs *****************
  1538 ;; Defined at:
  1539 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1542 ;;		 -> dbuf(32), 
  1543 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1544 ;;		 -> sprintf@f(11), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  i               2   18[COMRAM] int 
  1547 ;;  c               1   17[COMRAM] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   13[COMRAM] int 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;Total ram usage:        7 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 4
  1564 ;; This function calls:
  1565 ;;		_fputc
  1566 ;; This function is called by:
  1567 ;;		_pad
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572   001922                     __ptext6:
  1573                           	callstack 0
  1574   001922                     _fputs:
  1575                           	callstack 21
  1576   001922  0E00               	movlw	0
  1577   001924  6E14               	movwf	(fputs@i+1)^0,c
  1578   001926  0E00               	movlw	0
  1579   001928  6E13               	movwf	fputs@i^0,c
  1580   00192A  EFA2  F00C         	goto	l1878
  1581   00192E                     l1874:
  1582   00192E  C012  F005         	movff	fputs@c,fputc@c
  1583   001932  6A06               	clrf	(fputc@c+1)^0,c
  1584   001934  C010  F007         	movff	fputs@fp,fputc@fp
  1585   001938  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1586   00193C  EC6D  F00A         	call	_fputc	;wreg free
  1587   001940  4A13               	infsnz	fputs@i^0,f,c
  1588   001942  2A14               	incf	(fputs@i+1)^0,f,c
  1589   001944                     l1878:
  1590   001944  5013               	movf	fputs@i^0,w,c
  1591   001946  240E               	addwf	fputs@s^0,w,c
  1592   001948  6ED9               	movwf	fsr2l,c
  1593   00194A  5014               	movf	(fputs@i+1)^0,w,c
  1594   00194C  200F               	addwfc	(fputs@s+1)^0,w,c
  1595   00194E  6EDA               	movwf	fsr2h,c
  1596   001950  50DF               	movf	indf2,w,c
  1597   001952  6E12               	movwf	fputs@c^0,c
  1598   001954  5012               	movf	fputs@c^0,w,c
  1599   001956  A4D8               	btfss	status,2,c
  1600   001958  EFB0  F00C         	goto	u1081
  1601   00195C  EFB2  F00C         	goto	u1080
  1602   001960                     u1081:
  1603   001960  EF97  F00C         	goto	l1874
  1604   001964                     u1080:
  1605   001964  0012               	return		;funcret
  1606   001966                     __end_of_fputs:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _fputc *****************
  1610 ;; Defined at:
  1611 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  c               2    4[COMRAM] int 
  1614 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1615 ;;		 -> sprintf@f(11), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    4[COMRAM] int 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;Total ram usage:        9 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 3
  1634 ;; This function calls:
  1635 ;;		_putch
  1636 ;; This function is called by:
  1637 ;;		_pad
  1638 ;;		_vfpfcnvrt
  1639 ;;		_fputs
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text7
  1644   0014DA                     __ptext7:
  1645                           	callstack 0
  1646   0014DA                     _fputc:
  1647                           	callstack 24
  1648   0014DA  5007               	movf	fputc@fp^0,w,c
  1649   0014DC  1008               	iorwf	(fputc@fp+1)^0,w,c
  1650   0014DE  B4D8               	btfsc	status,2,c
  1651   0014E0  EF74  F00A         	goto	u1041
  1652   0014E4  EF76  F00A         	goto	u1040
  1653   0014E8                     u1041:
  1654   0014E8  EF7F  F00A         	goto	l1862
  1655   0014EC                     u1040:
  1656   0014EC  5007               	movf	fputc@fp^0,w,c
  1657   0014EE  1008               	iorwf	(fputc@fp+1)^0,w,c
  1658   0014F0  A4D8               	btfss	status,2,c
  1659   0014F2  EF7D  F00A         	goto	u1051
  1660   0014F6  EF7F  F00A         	goto	u1050
  1661   0014FA                     u1051:
  1662   0014FA  EF84  F00A         	goto	l1864
  1663   0014FE                     u1050:
  1664   0014FE                     l1862:
  1665   0014FE  5005               	movf	fputc@c^0,w,c
  1666   001500  ECEB  F00D         	call	_putch
  1667   001504  EFD1  F00A         	goto	l1021
  1668   001508                     l1864:
  1669   001508  EE20 F009          	lfsr	2,9
  1670   00150C  5007               	movf	fputc@fp^0,w,c
  1671   00150E  26D9               	addwf	fsr2l,f,c
  1672   001510  5008               	movf	(fputc@fp+1)^0,w,c
  1673   001512  22DA               	addwfc	fsr2h,f,c
  1674   001514  50DE               	movf	postinc2,w,c
  1675   001516  10DE               	iorwf	postinc2,w,c
  1676   001518  B4D8               	btfsc	status,2,c
  1677   00151A  EF91  F00A         	goto	u1061
  1678   00151E  EF93  F00A         	goto	u1060
  1679   001522                     u1061:
  1680   001522  EFAE  F00A         	goto	l1868
  1681   001526                     u1060:
  1682   001526  EE20 F009          	lfsr	2,9
  1683   00152A  5007               	movf	fputc@fp^0,w,c
  1684   00152C  26D9               	addwf	fsr2l,f,c
  1685   00152E  5008               	movf	(fputc@fp+1)^0,w,c
  1686   001530  22DA               	addwfc	fsr2h,f,c
  1687   001532  EE10 F003          	lfsr	1,3
  1688   001536  5007               	movf	fputc@fp^0,w,c
  1689   001538  26E1               	addwf	fsr1l,f,c
  1690   00153A  5008               	movf	(fputc@fp+1)^0,w,c
  1691   00153C  22E2               	addwfc	fsr1h,f,c
  1692   00153E  50DE               	movf	postinc2,w,c
  1693   001540  5CE6               	subwf	postinc1,w,c
  1694   001542  50E6               	movf	postinc1,w,c
  1695   001544  0A80               	xorlw	128
  1696   001546  6E0D               	movwf	(??_fputc+4)^0,c
  1697   001548  50DE               	movf	postinc2,w,c
  1698   00154A  0A80               	xorlw	128
  1699   00154C  580D               	subwfb	(??_fputc+4)^0,w,c
  1700   00154E  B0D8               	btfsc	status,0,c
  1701   001550  EFAC  F00A         	goto	u1071
  1702   001554  EFAE  F00A         	goto	u1070
  1703   001558                     u1071:
  1704   001558  EFD1  F00A         	goto	l1021
  1705   00155C                     u1070:
  1706   00155C                     l1868:
  1707   00155C  EE20 F003          	lfsr	2,3
  1708   001560  5007               	movf	fputc@fp^0,w,c
  1709   001562  26D9               	addwf	fsr2l,f,c
  1710   001564  5008               	movf	(fputc@fp+1)^0,w,c
  1711   001566  22DA               	addwfc	fsr2h,f,c
  1712   001568  CFDE F009          	movff	postinc2,??_fputc
  1713   00156C  CFDD F00A          	movff	postdec2,??_fputc+1
  1714   001570  C007  FFD9         	movff	fputc@fp,fsr2l
  1715   001574  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1716   001578  CFDE F00B          	movff	postinc2,??_fputc+2
  1717   00157C  CFDD F00C          	movff	postdec2,??_fputc+3
  1718   001580  5009               	movf	??_fputc^0,w,c
  1719   001582  240B               	addwf	(??_fputc+2)^0,w,c
  1720   001584  6ED9               	movwf	fsr2l,c
  1721   001586  500A               	movf	(??_fputc+1)^0,w,c
  1722   001588  200C               	addwfc	(??_fputc+3)^0,w,c
  1723   00158A  6EDA               	movwf	fsr2h,c
  1724   00158C  C005  FFDF         	movff	fputc@c,indf2
  1725   001590  EE20 F003          	lfsr	2,3
  1726   001594  5007               	movf	fputc@fp^0,w,c
  1727   001596  26D9               	addwf	fsr2l,f,c
  1728   001598  5008               	movf	(fputc@fp+1)^0,w,c
  1729   00159A  22DA               	addwfc	fsr2h,f,c
  1730   00159C  2ADE               	incf	postinc2,f,c
  1731   00159E  0E00               	movlw	0
  1732   0015A0  22DD               	addwfc	postdec2,f,c
  1733   0015A2                     l1021:
  1734   0015A2  0012               	return		;funcret
  1735   0015A4                     __end_of_fputc:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _putch *****************
  1739 ;; Defined at:
  1740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  c               1    wreg     unsigned char 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  c               1    0[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 2
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_fputc
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text8
  1769   001BD6                     __ptext8:
  1770                           	callstack 0
  1771   001BD6                     _putch:
  1772                           	callstack 24
  1773   001BD6  0012               	return		;funcret
  1774   001BD8                     __end_of_putch:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _abs *****************
  1778 ;; Defined at:
  1779 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  a               2   22[COMRAM] int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2   22[COMRAM] int 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;Total ram usage:        4 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 2
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_dtoa
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text9
  1808   0019A8                     __ptext9:
  1809                           	callstack 0
  1810   0019A8                     _abs:
  1811                           	callstack 24
  1812   0019A8  BE18               	btfsc	(abs@a+1)^0,7,c
  1813   0019AA  EFE1  F00C         	goto	u1240
  1814   0019AE  5018               	movf	(abs@a+1)^0,w,c
  1815   0019B0  E106               	bnz	u1241
  1816   0019B2  0417               	decf	abs@a^0,w,c
  1817   0019B4  B0D8               	btfsc	status,0,c
  1818   0019B6  EFDF  F00C         	goto	u1241
  1819   0019BA  EFE1  F00C         	goto	u1240
  1820   0019BE                     u1241:
  1821   0019BE  EFEF  F00C         	goto	l1006
  1822   0019C2                     u1240:
  1823   0019C2  C017  F019         	movff	abs@a,??_abs
  1824   0019C6  C018  F01A         	movff	abs@a+1,??_abs+1
  1825   0019CA  1E19               	comf	??_abs^0,f,c
  1826   0019CC  1E1A               	comf	(??_abs+1)^0,f,c
  1827   0019CE  4A19               	infsnz	??_abs^0,f,c
  1828   0019D0  2A1A               	incf	(??_abs+1)^0,f,c
  1829   0019D2  C019  F017         	movff	??_abs,?_abs
  1830   0019D6  C01A  F018         	movff	??_abs+1,?_abs+1
  1831   0019DA  EFF3  F00C         	goto	l1009
  1832   0019DE                     l1006:
  1833   0019DE  C017  F017         	movff	abs@a,?_abs
  1834   0019E2  C018  F018         	movff	abs@a+1,?_abs+1
  1835   0019E6                     l1009:
  1836   0019E6  0012               	return		;funcret
  1837   0019E8                     __end_of_abs:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function ___aomod *****************
  1841 ;; Defined at:
  1842 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  dividend        8    4[COMRAM] long long 
  1845 ;;  divisor         8   12[COMRAM] long long 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  sign            1   21[COMRAM] unsigned char 
  1848 ;;  counter         1   20[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  8    4[COMRAM] long long 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1858 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;Total ram usage:       18 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 2
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_dtoa
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text10
  1873   001228                     __ptext10:
  1874                           	callstack 0
  1875   001228                     ___aomod:
  1876                           	callstack 24
  1877   001228  0E00               	movlw	0
  1878   00122A  6E16               	movwf	___aomod@sign^0,c
  1879   00122C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  1880   00122E  EF1D  F009         	goto	u1160
  1881   001232  EF1B  F009         	goto	u1161
  1882   001236                     u1161:
  1883   001236  EF2F  F009         	goto	l1932
  1884   00123A                     u1160:
  1885   00123A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  1886   00123C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  1887   00123E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  1888   001240  1E09               	comf	(___aomod@dividend+4)^0,f,c
  1889   001242  1E08               	comf	(___aomod@dividend+3)^0,f,c
  1890   001244  1E07               	comf	(___aomod@dividend+2)^0,f,c
  1891   001246  1E06               	comf	(___aomod@dividend+1)^0,f,c
  1892   001248  6C05               	negf	___aomod@dividend^0,c
  1893   00124A  0E00               	movlw	0
  1894   00124C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  1895   00124E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  1896   001250  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  1897   001252  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  1898   001254  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  1899   001256  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  1900   001258  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  1901   00125A  0E01               	movlw	1
  1902   00125C  6E16               	movwf	___aomod@sign^0,c
  1903   00125E                     l1932:
  1904   00125E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  1905   001260  EF36  F009         	goto	u1170
  1906   001264  EF34  F009         	goto	u1171
  1907   001268                     u1171:
  1908   001268  EF46  F009         	goto	l1936
  1909   00126C                     u1170:
  1910   00126C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  1911   00126E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  1912   001270  1E12               	comf	(___aomod@divisor+5)^0,f,c
  1913   001272  1E11               	comf	(___aomod@divisor+4)^0,f,c
  1914   001274  1E10               	comf	(___aomod@divisor+3)^0,f,c
  1915   001276  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  1916   001278  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  1917   00127A  6C0D               	negf	___aomod@divisor^0,c
  1918   00127C  0E00               	movlw	0
  1919   00127E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  1920   001280  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  1921   001282  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  1922   001284  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  1923   001286  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  1924   001288  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  1925   00128A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  1926   00128C                     l1936:
  1927   00128C  500D               	movf	___aomod@divisor^0,w,c
  1928   00128E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  1929   001290  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  1930   001292  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  1931   001294  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  1932   001296  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  1933   001298  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  1934   00129A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  1935   00129C  B4D8               	btfsc	status,2,c
  1936   00129E  EF53  F009         	goto	u1181
  1937   0012A2  EF55  F009         	goto	u1180
  1938   0012A6                     u1181:
  1939   0012A6  EF9D  F009         	goto	l1952
  1940   0012AA                     u1180:
  1941   0012AA  0E01               	movlw	1
  1942   0012AC  6E15               	movwf	___aomod@counter^0,c
  1943   0012AE  EF63  F009         	goto	l1942
  1944   0012B2                     l1940:
  1945   0012B2  90D8               	bcf	status,0,c
  1946   0012B4  360D               	rlcf	___aomod@divisor^0,f,c
  1947   0012B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  1948   0012B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  1949   0012BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  1950   0012BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  1951   0012BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  1952   0012C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  1953   0012C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  1954   0012C4  2A15               	incf	___aomod@counter^0,f,c
  1955   0012C6                     l1942:
  1956   0012C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  1957   0012C8  EF68  F009         	goto	u1191
  1958   0012CC  EF6A  F009         	goto	u1190
  1959   0012D0                     u1191:
  1960   0012D0  EF59  F009         	goto	l1940
  1961   0012D4                     u1190:
  1962   0012D4                     l1944:
  1963   0012D4  500D               	movf	___aomod@divisor^0,w,c
  1964   0012D6  5C05               	subwf	___aomod@dividend^0,w,c
  1965   0012D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  1966   0012DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  1967   0012DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  1968   0012DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  1969   0012E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  1970   0012E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  1971   0012E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  1972   0012E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  1973   0012E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  1974   0012EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  1975   0012EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  1976   0012EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  1977   0012F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  1978   0012F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  1979   0012F4  A0D8               	btfss	status,0,c
  1980   0012F6  EF7F  F009         	goto	u1201
  1981   0012FA  EF81  F009         	goto	u1200
  1982   0012FE                     u1201:
  1983   0012FE  EF91  F009         	goto	l1948
  1984   001302                     u1200:
  1985   001302  500D               	movf	___aomod@divisor^0,w,c
  1986   001304  5E05               	subwf	___aomod@dividend^0,f,c
  1987   001306  500E               	movf	(___aomod@divisor+1)^0,w,c
  1988   001308  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  1989   00130A  500F               	movf	(___aomod@divisor+2)^0,w,c
  1990   00130C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  1991   00130E  5010               	movf	(___aomod@divisor+3)^0,w,c
  1992   001310  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  1993   001312  5011               	movf	(___aomod@divisor+4)^0,w,c
  1994   001314  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  1995   001316  5012               	movf	(___aomod@divisor+5)^0,w,c
  1996   001318  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  1997   00131A  5013               	movf	(___aomod@divisor+6)^0,w,c
  1998   00131C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  1999   00131E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2000   001320  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2001   001322                     l1948:
  2002   001322  90D8               	bcf	status,0,c
  2003   001324  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2004   001326  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2005   001328  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2006   00132A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2007   00132C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2008   00132E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2009   001330  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2010   001332  320D               	rrcf	___aomod@divisor^0,f,c
  2011   001334  2E15               	decfsz	___aomod@counter^0,f,c
  2012   001336  EF6A  F009         	goto	l1944
  2013   00133A                     l1952:
  2014   00133A  5016               	movf	___aomod@sign^0,w,c
  2015   00133C  B4D8               	btfsc	status,2,c
  2016   00133E  EFA3  F009         	goto	u1211
  2017   001342  EFA5  F009         	goto	u1210
  2018   001346                     u1211:
  2019   001346  EFB5  F009         	goto	l1956
  2020   00134A                     u1210:
  2021   00134A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2022   00134C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2023   00134E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2024   001350  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2025   001352  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2026   001354  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2027   001356  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2028   001358  6C05               	negf	___aomod@dividend^0,c
  2029   00135A  0E00               	movlw	0
  2030   00135C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2031   00135E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2032   001360  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2033   001362  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2034   001364  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2035   001366  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2036   001368  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2037   00136A                     l1956:
  2038   00136A  C005  F005         	movff	___aomod@dividend,?___aomod
  2039   00136E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2040   001372  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2041   001376  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2042   00137A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2043   00137E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2044   001382  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2045   001386  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2046   00138A  0012               	return		;funcret
  2047   00138C                     __end_of___aomod:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function ___aodiv *****************
  2051 ;; Defined at:
  2052 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  dividend        8    4[COMRAM] long long 
  2055 ;;  divisor         8   12[COMRAM] long long 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  quotient        8   22[COMRAM] long long 
  2058 ;;  sign            1   21[COMRAM] unsigned char 
  2059 ;;  counter         1   20[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  8    4[COMRAM] long long 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2069 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;Total ram usage:       26 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 2
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_dtoa
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text11
  2084   0010A0                     __ptext11:
  2085                           	callstack 0
  2086   0010A0                     ___aodiv:
  2087                           	callstack 24
  2088   0010A0  0E00               	movlw	0
  2089   0010A2  6E16               	movwf	___aodiv@sign^0,c
  2090   0010A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2091   0010A6  EF59  F008         	goto	u1090
  2092   0010AA  EF57  F008         	goto	u1091
  2093   0010AE                     u1091:
  2094   0010AE  EF6B  F008         	goto	l1888
  2095   0010B2                     u1090:
  2096   0010B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2097   0010B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2098   0010B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2099   0010B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2100   0010BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2101   0010BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2102   0010BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2103   0010C0  6C0D               	negf	___aodiv@divisor^0,c
  2104   0010C2  0E00               	movlw	0
  2105   0010C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2106   0010C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2107   0010C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2108   0010CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2109   0010CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2110   0010CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2111   0010D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2112   0010D2  0E01               	movlw	1
  2113   0010D4  6E16               	movwf	___aodiv@sign^0,c
  2114   0010D6                     l1888:
  2115   0010D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2116   0010D8  EF72  F008         	goto	u1100
  2117   0010DC  EF70  F008         	goto	u1101
  2118   0010E0                     u1101:
  2119   0010E0  EF84  F008         	goto	l1894
  2120   0010E4                     u1100:
  2121   0010E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2122   0010E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2123   0010E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2124   0010EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2125   0010EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2126   0010EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2127   0010F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2128   0010F2  6C05               	negf	___aodiv@dividend^0,c
  2129   0010F4  0E00               	movlw	0
  2130   0010F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2131   0010F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2132   0010FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2133   0010FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2134   0010FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2135   001100  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2136   001102  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2137   001104  0E01               	movlw	1
  2138   001106  1A16               	xorwf	___aodiv@sign^0,f,c
  2139   001108                     l1894:
  2140   001108  EE20  F017         	lfsr	2,___aodiv@quotient
  2141   00110C  0E07               	movlw	7
  2142   00110E                     u1111:
  2143   00110E  6ADE               	clrf	postinc2,c
  2144   001110  06E8               	decf	wreg,f,c
  2145   001112  E2FD               	bc	u1111
  2146   001114  500D               	movf	___aodiv@divisor^0,w,c
  2147   001116  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2148   001118  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2149   00111A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2150   00111C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2151   00111E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2152   001120  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2153   001122  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2154   001124  B4D8               	btfsc	status,2,c
  2155   001126  EF97  F008         	goto	u1121
  2156   00112A  EF99  F008         	goto	u1120
  2157   00112E                     u1121:
  2158   00112E  EFEB  F008         	goto	l1916
  2159   001132                     u1120:
  2160   001132  0E01               	movlw	1
  2161   001134  6E15               	movwf	___aodiv@counter^0,c
  2162   001136  EFA7  F008         	goto	l1902
  2163   00113A                     l1900:
  2164   00113A  90D8               	bcf	status,0,c
  2165   00113C  360D               	rlcf	___aodiv@divisor^0,f,c
  2166   00113E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2167   001140  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2168   001142  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2169   001144  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2170   001146  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2171   001148  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2172   00114A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2173   00114C  2A15               	incf	___aodiv@counter^0,f,c
  2174   00114E                     l1902:
  2175   00114E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2176   001150  EFAC  F008         	goto	u1131
  2177   001154  EFAE  F008         	goto	u1130
  2178   001158                     u1131:
  2179   001158  EF9D  F008         	goto	l1900
  2180   00115C                     u1130:
  2181   00115C                     l1904:
  2182   00115C  90D8               	bcf	status,0,c
  2183   00115E  3617               	rlcf	___aodiv@quotient^0,f,c
  2184   001160  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2185   001162  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2186   001164  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2187   001166  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2188   001168  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2189   00116A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2190   00116C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2191   00116E  500D               	movf	___aodiv@divisor^0,w,c
  2192   001170  5C05               	subwf	___aodiv@dividend^0,w,c
  2193   001172  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2194   001174  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2195   001176  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2196   001178  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2197   00117A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2198   00117C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2199   00117E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2200   001180  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2201   001182  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2202   001184  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2203   001186  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2204   001188  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2205   00118A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2206   00118C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2207   00118E  A0D8               	btfss	status,0,c
  2208   001190  EFCC  F008         	goto	u1141
  2209   001194  EFCE  F008         	goto	u1140
  2210   001198                     u1141:
  2211   001198  EFDF  F008         	goto	l1912
  2212   00119C                     u1140:
  2213   00119C  500D               	movf	___aodiv@divisor^0,w,c
  2214   00119E  5E05               	subwf	___aodiv@dividend^0,f,c
  2215   0011A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2216   0011A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2217   0011A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2218   0011A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2219   0011A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2220   0011AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2221   0011AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2222   0011AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2223   0011B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2224   0011B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2225   0011B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2226   0011B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2227   0011B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2228   0011BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2229   0011BC  8017               	bsf	___aodiv@quotient^0,0,c
  2230   0011BE                     l1912:
  2231   0011BE  90D8               	bcf	status,0,c
  2232   0011C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2233   0011C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2234   0011C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2235   0011C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2236   0011C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2237   0011CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2238   0011CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2239   0011CE  320D               	rrcf	___aodiv@divisor^0,f,c
  2240   0011D0  2E15               	decfsz	___aodiv@counter^0,f,c
  2241   0011D2  EFAE  F008         	goto	l1904
  2242   0011D6                     l1916:
  2243   0011D6  5016               	movf	___aodiv@sign^0,w,c
  2244   0011D8  B4D8               	btfsc	status,2,c
  2245   0011DA  EFF1  F008         	goto	u1151
  2246   0011DE  EFF3  F008         	goto	u1150
  2247   0011E2                     u1151:
  2248   0011E2  EF03  F009         	goto	l1920
  2249   0011E6                     u1150:
  2250   0011E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2251   0011E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2252   0011EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2253   0011EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2254   0011EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2255   0011F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2256   0011F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2257   0011F4  6C17               	negf	___aodiv@quotient^0,c
  2258   0011F6  0E00               	movlw	0
  2259   0011F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2260   0011FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2261   0011FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2262   0011FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2263   001200  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2264   001202  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2265   001204  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2266   001206                     l1920:
  2267   001206  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2268   00120A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2269   00120E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2270   001212  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2271   001216  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2272   00121A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2273   00121E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2274   001222  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2275   001226  0012               	return		;funcret
  2276   001228                     __end_of___aodiv:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _sendTxBuf *****************
  2280 ;; Defined at:
  2281 ;;		line 93 in file "serial.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		_isDataInTxBuf
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text12
  2310   001A78                     __ptext12:
  2311                           	callstack 0
  2312   001A78                     _sendTxBuf:
  2313                           	callstack 27
  2314   001A78                     
  2315                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  2316   001A78  ECC3  F00D         	call	_isDataInTxBuf	;wreg free
  2317   001A7C  0900               	iorlw	0
  2318   001A7E  B4D8               	btfsc	status,2,c
  2319   001A80  EF44  F00D         	goto	u991
  2320   001A84  EF46  F00D         	goto	u990
  2321   001A88                     u991:
  2322   001A88  EF4D  F00D         	goto	l1806
  2323   001A8C                     u990:
  2324   001A8C  010E               	movlb	14	; () banked
  2325   001A8E  852D               	bsf	45,2,b	;volatile
  2326   001A90                     
  2327                           ; BSR set to: 14
  2328                           ;serial.c: 95:     DataFlag =1;}
  2329   001A90  0E01               	movlw	1
  2330   001A92  0100               	movlb	0	; () banked
  2331   001A94  6FF2               	movwf	_DataFlag& (0+255),b	;volatile
  2332   001A96  EF50  F00D         	goto	l177
  2333   001A9A                     l1806:
  2334                           
  2335                           ;serial.c: 97:         DataFlag=0;}
  2336   001A9A  0E00               	movlw	0
  2337   001A9C  0100               	movlb	0	; () banked
  2338   001A9E  6FF2               	movwf	_DataFlag& (0+255),b	;volatile
  2339   001AA0                     l177:
  2340                           
  2341                           ; BSR set to: 0
  2342   001AA0  0012               	return		;funcret
  2343   001AA2                     __end_of_sendTxBuf:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _isDataInTxBuf *****************
  2347 ;; Defined at:
  2348 ;;		line 80 in file "serial.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      unsigned char 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_sendTxBuf
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text13
  2377   001B86                     __ptext13:
  2378                           	callstack 0
  2379   001B86                     _isDataInTxBuf:
  2380                           	callstack 27
  2381   001B86                     
  2382                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  2383   001B86  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2384   001B88  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2385   001B8A  A4D8               	btfss	status,2,c
  2386   001B8C  EFCA  F00D         	goto	u931
  2387   001B90  EFCD  F00D         	goto	u930
  2388   001B94                     u931:
  2389   001B94  0E01               	movlw	1
  2390   001B96  EFCE  F00D         	goto	u940
  2391   001B9A                     u930:
  2392   001B9A  0E00               	movlw	0
  2393   001B9C                     u940:
  2394   001B9C  0012               	return		;funcret
  2395   001B9E                     __end_of_isDataInTxBuf:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _readColours *****************
  2399 ;; Defined at:
  2400 ;;		line 85 in file "color.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  vals            2   15[COMRAM] PTR struct RGB
  2403 ;;		 -> vals(8), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 5
  2422 ;; This function calls:
  2423 ;;		_color_read_Blue
  2424 ;;		_color_read_Green
  2425 ;;		_color_read_Red
  2426 ;;		_color_read_lum
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text14
  2433   00169E                     __ptext14:
  2434                           	callstack 0
  2435   00169E                     _readColours:
  2436                           	callstack 25
  2437   00169E                     
  2438                           ;color.c: 86:     vals ->R = color_read_Red();
  2439   00169E  ECF7  F00B         	call	_color_read_Red	;wreg free
  2440   0016A2  C010  FFD9         	movff	readColours@vals,fsr2l
  2441   0016A6  C011  FFDA         	movff	readColours@vals+1,fsr2h
  2442   0016AA  C009  FFDE         	movff	?_color_read_Red,postinc2
  2443   0016AE  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2444                           
  2445                           ;color.c: 87:     vals ->B = color_read_Blue();
  2446   0016B2  EC47  F00C         	call	_color_read_Blue	;wreg free
  2447   0016B6  EE20 F004          	lfsr	2,4
  2448   0016BA  5010               	movf	readColours@vals^0,w,c
  2449   0016BC  26D9               	addwf	fsr2l,f,c
  2450   0016BE  5011               	movf	(readColours@vals+1)^0,w,c
  2451   0016C0  22DA               	addwfc	fsr2h,f,c
  2452   0016C2  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2453   0016C6  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2454                           
  2455                           ;color.c: 88:     vals ->G = color_read_Green();
  2456   0016CA  EC1F  F00C         	call	_color_read_Green	;wreg free
  2457   0016CE  EE20 F002          	lfsr	2,2
  2458   0016D2  5010               	movf	readColours@vals^0,w,c
  2459   0016D4  26D9               	addwf	fsr2l,f,c
  2460   0016D6  5011               	movf	(readColours@vals+1)^0,w,c
  2461   0016D8  22DA               	addwfc	fsr2h,f,c
  2462   0016DA  C009  FFDE         	movff	?_color_read_Green,postinc2
  2463   0016DE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2464                           
  2465                           ;color.c: 89:     vals ->L = color_read_lum();
  2466   0016E2  ECCF  F00B         	call	_color_read_lum	;wreg free
  2467   0016E6  EE20 F006          	lfsr	2,6
  2468   0016EA  5010               	movf	readColours@vals^0,w,c
  2469   0016EC  26D9               	addwf	fsr2l,f,c
  2470   0016EE  5011               	movf	(readColours@vals+1)^0,w,c
  2471   0016F0  22DA               	addwfc	fsr2h,f,c
  2472   0016F2  C009  FFDE         	movff	?_color_read_lum,postinc2
  2473   0016F6  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  2474   0016FA  0012               	return		;funcret
  2475   0016FC                     __end_of_readColours:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _color_read_lum *****************
  2479 ;; Defined at:
  2480 ;;		line 29 in file "color.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  tmp             2   13[COMRAM] unsigned int 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2    8[COMRAM] unsigned int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;Total ram usage:        7 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 4
  2501 ;; This function calls:
  2502 ;;		_I2C_2_Master_Read
  2503 ;;		_I2C_2_Master_RepStart
  2504 ;;		_I2C_2_Master_Start
  2505 ;;		_I2C_2_Master_Stop
  2506 ;;		_I2C_2_Master_Write
  2507 ;; This function is called by:
  2508 ;;		_readColours
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text15
  2513   00179E                     __ptext15:
  2514                           	callstack 0
  2515   00179E                     _color_read_lum:
  2516                           	callstack 25
  2517   00179E                     
  2518                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2519   00179E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2520                           
  2521                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2522   0017A2  0E52               	movlw	82
  2523   0017A4  ECD6  F00D         	call	_I2C_2_Master_Write
  2524                           
  2525                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x14);
  2526   0017A8  0EB4               	movlw	180
  2527   0017AA  ECD6  F00D         	call	_I2C_2_Master_Write
  2528                           
  2529                           ;color.c: 35:  I2C_2_Master_RepStart();
  2530   0017AE  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2531                           
  2532                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2533   0017B2  0E53               	movlw	83
  2534   0017B4  ECD6  F00D         	call	_I2C_2_Master_Write
  2535                           
  2536                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2537   0017B8  0E01               	movlw	1
  2538   0017BA  ECB3  F00C         	call	_I2C_2_Master_Read
  2539   0017BE  6E0B               	movwf	??_color_read_lum^0,c
  2540   0017C0  500B               	movf	??_color_read_lum^0,w,c
  2541   0017C2  6E0E               	movwf	color_read_lum@tmp^0,c
  2542   0017C4  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  2543                           
  2544                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2545   0017C6  0E00               	movlw	0
  2546   0017C8  ECB3  F00C         	call	_I2C_2_Master_Read
  2547   0017CC  6E0B               	movwf	??_color_read_lum^0,c
  2548   0017CE  500B               	movf	??_color_read_lum^0,w,c
  2549   0017D0  6E0D               	movwf	(??_color_read_lum+2)^0,c
  2550   0017D2  6A0C               	clrf	(??_color_read_lum+1)^0,c
  2551   0017D4  500E               	movf	color_read_lum@tmp^0,w,c
  2552   0017D6  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  2553   0017D8  6E0E               	movwf	color_read_lum@tmp^0,c
  2554   0017DA  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  2555   0017DC  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  2556   0017DE  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  2557                           
  2558                           ;color.c: 39:  I2C_2_Master_Stop();
  2559   0017E0  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2560   0017E4                     
  2561                           ;color.c: 40:  return tmp;
  2562   0017E4  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  2563   0017E8  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  2564   0017EC  0012               	return		;funcret
  2565   0017EE                     __end_of_color_read_lum:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _color_read_Red *****************
  2569 ;; Defined at:
  2570 ;;		line 43 in file "color.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  tmp             2   13[COMRAM] unsigned int 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    8[COMRAM] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;Total ram usage:        7 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 4
  2591 ;; This function calls:
  2592 ;;		_I2C_2_Master_Read
  2593 ;;		_I2C_2_Master_RepStart
  2594 ;;		_I2C_2_Master_Start
  2595 ;;		_I2C_2_Master_Stop
  2596 ;;		_I2C_2_Master_Write
  2597 ;; This function is called by:
  2598 ;;		_readColours
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text16
  2603   0017EE                     __ptext16:
  2604                           	callstack 0
  2605   0017EE                     _color_read_Red:
  2606                           	callstack 25
  2607   0017EE                     
  2608                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  2609   0017EE  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2610                           
  2611                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  2612   0017F2  0E52               	movlw	82
  2613   0017F4  ECD6  F00D         	call	_I2C_2_Master_Write
  2614                           
  2615                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x16);
  2616   0017F8  0EB6               	movlw	182
  2617   0017FA  ECD6  F00D         	call	_I2C_2_Master_Write
  2618                           
  2619                           ;color.c: 49:  I2C_2_Master_RepStart();
  2620   0017FE  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2621                           
  2622                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  2623   001802  0E53               	movlw	83
  2624   001804  ECD6  F00D         	call	_I2C_2_Master_Write
  2625                           
  2626                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  2627   001808  0E01               	movlw	1
  2628   00180A  ECB3  F00C         	call	_I2C_2_Master_Read
  2629   00180E  6E0B               	movwf	??_color_read_Red^0,c
  2630   001810  500B               	movf	??_color_read_Red^0,w,c
  2631   001812  6E0E               	movwf	color_read_Red@tmp^0,c
  2632   001814  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2633                           
  2634                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2635   001816  0E00               	movlw	0
  2636   001818  ECB3  F00C         	call	_I2C_2_Master_Read
  2637   00181C  6E0B               	movwf	??_color_read_Red^0,c
  2638   00181E  500B               	movf	??_color_read_Red^0,w,c
  2639   001820  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2640   001822  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2641   001824  500E               	movf	color_read_Red@tmp^0,w,c
  2642   001826  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2643   001828  6E0E               	movwf	color_read_Red@tmp^0,c
  2644   00182A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2645   00182C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2646   00182E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2647                           
  2648                           ;color.c: 53:  I2C_2_Master_Stop();
  2649   001830  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2650   001834                     
  2651                           ;color.c: 54:  return tmp;
  2652   001834  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2653   001838  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2654   00183C  0012               	return		;funcret
  2655   00183E                     __end_of_color_read_Red:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _color_read_Green *****************
  2659 ;; Defined at:
  2660 ;;		line 56 in file "color.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  tmp             2   13[COMRAM] unsigned int 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    8[COMRAM] unsigned int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:        7 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 4
  2681 ;; This function calls:
  2682 ;;		_I2C_2_Master_Read
  2683 ;;		_I2C_2_Master_RepStart
  2684 ;;		_I2C_2_Master_Start
  2685 ;;		_I2C_2_Master_Stop
  2686 ;;		_I2C_2_Master_Write
  2687 ;; This function is called by:
  2688 ;;		_readColours
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text17
  2693   00183E                     __ptext17:
  2694                           	callstack 0
  2695   00183E                     _color_read_Green:
  2696                           	callstack 25
  2697   00183E                     
  2698                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2699   00183E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2700                           
  2701                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2702   001842  0E52               	movlw	82
  2703   001844  ECD6  F00D         	call	_I2C_2_Master_Write
  2704                           
  2705                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
  2706   001848  0EB6               	movlw	182
  2707   00184A  ECD6  F00D         	call	_I2C_2_Master_Write
  2708                           
  2709                           ;color.c: 62:  I2C_2_Master_RepStart();
  2710   00184E  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2711                           
  2712                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2713   001852  0E53               	movlw	83
  2714   001854  ECD6  F00D         	call	_I2C_2_Master_Write
  2715                           
  2716                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2717   001858  0E01               	movlw	1
  2718   00185A  ECB3  F00C         	call	_I2C_2_Master_Read
  2719   00185E  6E0B               	movwf	??_color_read_Green^0,c
  2720   001860  500B               	movf	??_color_read_Green^0,w,c
  2721   001862  6E0E               	movwf	color_read_Green@tmp^0,c
  2722   001864  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2723                           
  2724                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2725   001866  0E00               	movlw	0
  2726   001868  ECB3  F00C         	call	_I2C_2_Master_Read
  2727   00186C  6E0B               	movwf	??_color_read_Green^0,c
  2728   00186E  500B               	movf	??_color_read_Green^0,w,c
  2729   001870  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2730   001872  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2731   001874  500E               	movf	color_read_Green@tmp^0,w,c
  2732   001876  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2733   001878  6E0E               	movwf	color_read_Green@tmp^0,c
  2734   00187A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2735   00187C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2736   00187E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2737                           
  2738                           ;color.c: 66:  I2C_2_Master_Stop();
  2739   001880  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2740   001884                     
  2741                           ;color.c: 67:  return tmp;
  2742   001884  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2743   001888  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2744   00188C  0012               	return		;funcret
  2745   00188E                     __end_of_color_read_Green:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _color_read_Blue *****************
  2749 ;; Defined at:
  2750 ;;		line 70 in file "color.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  tmp             2   13[COMRAM] unsigned int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    8[COMRAM] unsigned int 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;Total ram usage:        7 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 4
  2771 ;; This function calls:
  2772 ;;		_I2C_2_Master_Read
  2773 ;;		_I2C_2_Master_RepStart
  2774 ;;		_I2C_2_Master_Start
  2775 ;;		_I2C_2_Master_Stop
  2776 ;;		_I2C_2_Master_Write
  2777 ;; This function is called by:
  2778 ;;		_readColours
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text18
  2783   00188E                     __ptext18:
  2784                           	callstack 0
  2785   00188E                     _color_read_Blue:
  2786                           	callstack 25
  2787   00188E                     
  2788                           ;color.c: 72:  unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2789   00188E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2790                           
  2791                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2792   001892  0E52               	movlw	82
  2793   001894  ECD6  F00D         	call	_I2C_2_Master_Write
  2794                           
  2795                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x1A);
  2796   001898  0EBA               	movlw	186
  2797   00189A  ECD6  F00D         	call	_I2C_2_Master_Write
  2798                           
  2799                           ;color.c: 76:  I2C_2_Master_RepStart();
  2800   00189E  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2801                           
  2802                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2803   0018A2  0E53               	movlw	83
  2804   0018A4  ECD6  F00D         	call	_I2C_2_Master_Write
  2805                           
  2806                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2807   0018A8  0E01               	movlw	1
  2808   0018AA  ECB3  F00C         	call	_I2C_2_Master_Read
  2809   0018AE  6E0B               	movwf	??_color_read_Blue^0,c
  2810   0018B0  500B               	movf	??_color_read_Blue^0,w,c
  2811   0018B2  6E0E               	movwf	color_read_Blue@tmp^0,c
  2812   0018B4  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2813                           
  2814                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2815   0018B6  0E00               	movlw	0
  2816   0018B8  ECB3  F00C         	call	_I2C_2_Master_Read
  2817   0018BC  6E0B               	movwf	??_color_read_Blue^0,c
  2818   0018BE  500B               	movf	??_color_read_Blue^0,w,c
  2819   0018C0  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2820   0018C2  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2821   0018C4  500E               	movf	color_read_Blue@tmp^0,w,c
  2822   0018C6  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2823   0018C8  6E0E               	movwf	color_read_Blue@tmp^0,c
  2824   0018CA  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2825   0018CC  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2826   0018CE  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2827                           
  2828                           ;color.c: 80:  I2C_2_Master_Stop();
  2829   0018D0  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2830   0018D4                     
  2831                           ;color.c: 81:  return tmp;
  2832   0018D4  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2833   0018D8  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2834   0018DC  0012               	return		;funcret
  2835   0018DE                     __end_of_color_read_Blue:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _I2C_2_Master_RepStart *****************
  2839 ;; Defined at:
  2840 ;;		line 33 in file "i2c.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 3
  2861 ;; This function calls:
  2862 ;;		_I2C_2_Master_Idle
  2863 ;; This function is called by:
  2864 ;;		_color_read_lum
  2865 ;;		_color_read_Red
  2866 ;;		_color_read_Green
  2867 ;;		_color_read_Blue
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text19
  2872   001BB8                     __ptext19:
  2873                           	callstack 0
  2874   001BB8                     _I2C_2_Master_RepStart:
  2875                           	callstack 25
  2876   001BB8                     
  2877                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2878   001BB8  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2879   001BBC                     
  2880                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2881   001BBC  010E               	movlb	14	; () banked
  2882   001BBE  83DA               	bsf	218,1,b	;volatile
  2883   001BC0                     
  2884                           ; BSR set to: 14
  2885   001BC0  0012               	return		;funcret
  2886   001BC2                     __end_of_I2C_2_Master_RepStart:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _I2C_2_Master_Read *****************
  2890 ;; Defined at:
  2891 ;;		line 51 in file "i2c.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  ack             1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  ack             1    6[COMRAM] unsigned char 
  2896 ;;  tmp             1    7[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        3 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 3
  2913 ;; This function calls:
  2914 ;;		_I2C_2_Master_Idle
  2915 ;; This function is called by:
  2916 ;;		_color_read_lum
  2917 ;;		_color_read_Red
  2918 ;;		_color_read_Green
  2919 ;;		_color_read_Blue
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text20
  2924   001966                     __ptext20:
  2925                           	callstack 0
  2926   001966                     _I2C_2_Master_Read:
  2927                           	callstack 25
  2928                           
  2929                           ; BSR set to: 14
  2930                           ;incstack = 0
  2931                           ;I2C_2_Master_Read@ack stored from wreg
  2932   001966  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2933   001968                     
  2934                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2935   001968  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2936   00196C                     
  2937                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2938   00196C  010E               	movlb	14	; () banked
  2939   00196E  87DA               	bsf	218,3,b	;volatile
  2940                           
  2941                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2942   001970  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2943   001974                     
  2944                           ;i2c.c: 57:   tmp = SSP2BUF;
  2945   001974  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2946                           
  2947                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2948   001978  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2949   00197C                     
  2950                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2951   00197C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2952   00197E  B4D8               	btfsc	status,2,c
  2953   001980  EFC4  F00C         	goto	u871
  2954   001984  EFC8  F00C         	goto	u870
  2955   001988                     u871:
  2956   001988  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2957   00198A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2958   00198C  EFC9  F00C         	goto	u888
  2959   001990                     u870:
  2960   001990  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2961   001992                     u888:
  2962   001992  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2963   001994  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2964   001996  010E               	movlb	14	; () banked
  2965   001998  51DA               	movf	218,w,b	;volatile
  2966   00199A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2967   00199C  0BDF               	andlw	-33
  2968   00199E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2969   0019A0  6FDA               	movwf	218,b	;volatile
  2970   0019A2                     
  2971                           ; BSR set to: 14
  2972                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2973   0019A2  89DA               	bsf	218,4,b	;volatile
  2974   0019A4                     
  2975                           ; BSR set to: 14
  2976                           ;i2c.c: 61:   return tmp;
  2977   0019A4  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2978   0019A6                     
  2979                           ; BSR set to: 14
  2980   0019A6  0012               	return		;funcret
  2981   0019A8                     __end_of_I2C_2_Master_Read:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _initUSART4 *****************
  2985 ;; Defined at:
  2986 ;;		line 4 in file "serial.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text21
  3015   001B68                     __ptext21:
  3016                           	callstack 0
  3017   001B68                     _initUSART4:
  3018                           	callstack 28
  3019   001B68                     
  3020                           ;serial.c: 5:     RC0PPS = 0x12;
  3021   001B68  0E12               	movlw	18
  3022   001B6A  010E               	movlb	14	; () banked
  3023   001B6C  6F62               	movwf	98,b	;volatile
  3024                           
  3025                           ;serial.c: 6:     RX4PPS = 0x11;
  3026   001B6E  0E11               	movlw	17
  3027   001B70  6F15               	movwf	21,b	;volatile
  3028   001B72                     
  3029                           ; BSR set to: 14
  3030                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3031   001B72  97E9               	bcf	233,3,b	;volatile
  3032   001B74                     
  3033                           ; BSR set to: 14
  3034                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3035   001B74  95E8               	bcf	232,2,b	;volatile
  3036                           
  3037                           ;serial.c: 9:     SP4BRGL = 51;
  3038   001B76  0E33               	movlw	51
  3039   001B78  6FE5               	movwf	229,b	;volatile
  3040                           
  3041                           ;serial.c: 10:     SP4BRGH = 0;
  3042   001B7A  0E00               	movlw	0
  3043   001B7C  6FE6               	movwf	230,b	;volatile
  3044   001B7E                     
  3045                           ; BSR set to: 14
  3046                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3047   001B7E  89E7               	bsf	231,4,b	;volatile
  3048   001B80                     
  3049                           ; BSR set to: 14
  3050                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3051   001B80  8BE8               	bsf	232,5,b	;volatile
  3052   001B82                     
  3053                           ; BSR set to: 14
  3054                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3055   001B82  8FE7               	bsf	231,7,b	;volatile
  3056   001B84                     
  3057                           ; BSR set to: 14
  3058   001B84  0012               	return		;funcret
  3059   001B86                     __end_of_initUSART4:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _color_click_init *****************
  3063 ;; Defined at:
  3064 ;;		line 5 in file "color.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 5
  3085 ;; This function calls:
  3086 ;;		_I2C_2_Master_Init
  3087 ;;		_color_writetoaddr
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text22
  3094   0019E8                     __ptext22:
  3095                           	callstack 0
  3096   0019E8                     _color_click_init:
  3097                           	callstack 25
  3098   0019E8                     
  3099                           ;color.c: 8:     I2C_2_Master_Init();
  3100   0019E8  EC51  F00D         	call	_I2C_2_Master_Init	;wreg free
  3101   0019EC                     
  3102                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3103   0019EC  0E01               	movlw	1
  3104   0019EE  6E07               	movwf	color_writetoaddr@value^0,c
  3105   0019F0  0E00               	movlw	0
  3106   0019F2  ECA4  F00D         	call	_color_writetoaddr
  3107   0019F6                     
  3108                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3109   0019F6  0E3F               	movlw	63
  3110   0019F8  6E09               	movwf	??_color_click_init^0,c
  3111   0019FA  0E55               	movlw	85
  3112   0019FC                     u1407:
  3113   0019FC  2EE8               	decfsz	wreg,f,c
  3114   0019FE  D7FE               	bra	u1407
  3115   001A00  2E09               	decfsz	??_color_click_init^0,f,c
  3116   001A02  D7FC               	bra	u1407
  3117   001A04  F000               	nop	
  3118   001A06                     
  3119                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3120   001A06  0E03               	movlw	3
  3121   001A08  6E07               	movwf	color_writetoaddr@value^0,c
  3122   001A0A  0E00               	movlw	0
  3123   001A0C  ECA4  F00D         	call	_color_writetoaddr
  3124   001A10                     
  3125                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3126   001A10  0ED5               	movlw	213
  3127   001A12  6E07               	movwf	color_writetoaddr@value^0,c
  3128   001A14  0E01               	movlw	1
  3129   001A16  ECA4  F00D         	call	_color_writetoaddr
  3130   001A1A  0012               	return		;funcret
  3131   001A1C                     __end_of_color_click_init:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _color_writetoaddr *****************
  3135 ;; Defined at:
  3136 ;;		line 21 in file "color.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  address         1    wreg     unsigned char 
  3139 ;;  value           1    6[COMRAM] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  address         1    7[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_I2C_2_Master_Start
  3160 ;;		_I2C_2_Master_Stop
  3161 ;;		_I2C_2_Master_Write
  3162 ;; This function is called by:
  3163 ;;		_color_click_init
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text23
  3168   001B48                     __ptext23:
  3169                           	callstack 0
  3170   001B48                     _color_writetoaddr:
  3171                           	callstack 25
  3172                           
  3173                           ;incstack = 0
  3174                           ;color_writetoaddr@address stored from wreg
  3175   001B48  6E08               	movwf	color_writetoaddr@address^0,c
  3176   001B4A                     
  3177                           ;color.c: 22:     I2C_2_Master_Start();
  3178   001B4A  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  3179                           
  3180                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3181   001B4E  0E52               	movlw	82
  3182   001B50  ECD6  F00D         	call	_I2C_2_Master_Write
  3183                           
  3184                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3185   001B54  5008               	movf	color_writetoaddr@address^0,w,c
  3186   001B56  0980               	iorlw	128
  3187   001B58  ECD6  F00D         	call	_I2C_2_Master_Write
  3188                           
  3189                           ;color.c: 25:     I2C_2_Master_Write(value);
  3190   001B5C  5007               	movf	color_writetoaddr@value^0,w,c
  3191   001B5E  ECD6  F00D         	call	_I2C_2_Master_Write
  3192                           
  3193                           ;color.c: 26:     I2C_2_Master_Stop();
  3194   001B62  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3195   001B66  0012               	return		;funcret
  3196   001B68                     __end_of_color_writetoaddr:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _I2C_2_Master_Write *****************
  3200 ;; Defined at:
  3201 ;;		line 45 in file "i2c.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  data_byte       1    wreg     unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  data_byte       1    5[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 3
  3222 ;; This function calls:
  3223 ;;		_I2C_2_Master_Idle
  3224 ;; This function is called by:
  3225 ;;		_color_writetoaddr
  3226 ;;		_color_read_lum
  3227 ;;		_color_read_Red
  3228 ;;		_color_read_Green
  3229 ;;		_color_read_Blue
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text24
  3234   001BAC                     __ptext24:
  3235                           	callstack 0
  3236   001BAC                     _I2C_2_Master_Write:
  3237                           	callstack 25
  3238                           
  3239                           ;incstack = 0
  3240                           ;I2C_2_Master_Write@data_byte stored from wreg
  3241   001BAC  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3242   001BAE                     
  3243                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3244   001BAE  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3245   001BB2                     
  3246                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3247   001BB2  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3248   001BB6  0012               	return		;funcret
  3249   001BB8                     __end_of_I2C_2_Master_Write:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _I2C_2_Master_Stop *****************
  3253 ;; Defined at:
  3254 ;;		line 39 in file "i2c.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 3
  3275 ;; This function calls:
  3276 ;;		_I2C_2_Master_Idle
  3277 ;; This function is called by:
  3278 ;;		_color_writetoaddr
  3279 ;;		_color_read_lum
  3280 ;;		_color_read_Red
  3281 ;;		_color_read_Green
  3282 ;;		_color_read_Blue
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text25
  3287   001BC2                     __ptext25:
  3288                           	callstack 0
  3289   001BC2                     _I2C_2_Master_Stop:
  3290                           	callstack 25
  3291   001BC2                     
  3292                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3293   001BC2  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3294   001BC6                     
  3295                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3296   001BC6  010E               	movlb	14	; () banked
  3297   001BC8  85DA               	bsf	218,2,b	;volatile
  3298   001BCA                     
  3299                           ; BSR set to: 14
  3300   001BCA  0012               	return		;funcret
  3301   001BCC                     __end_of_I2C_2_Master_Stop:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _I2C_2_Master_Start *****************
  3305 ;; Defined at:
  3306 ;;		line 27 in file "i2c.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 3
  3327 ;; This function calls:
  3328 ;;		_I2C_2_Master_Idle
  3329 ;; This function is called by:
  3330 ;;		_color_writetoaddr
  3331 ;;		_color_read_lum
  3332 ;;		_color_read_Red
  3333 ;;		_color_read_Green
  3334 ;;		_color_read_Blue
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text26
  3339   001BCC                     __ptext26:
  3340                           	callstack 0
  3341   001BCC                     _I2C_2_Master_Start:
  3342                           	callstack 25
  3343   001BCC                     
  3344                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3345   001BCC  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3346   001BD0                     
  3347                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3348   001BD0  010E               	movlb	14	; () banked
  3349   001BD2  81DA               	bsf	218,0,b	;volatile
  3350   001BD4                     
  3351                           ; BSR set to: 14
  3352   001BD4  0012               	return		;funcret
  3353   001BD6                     __end_of_I2C_2_Master_Start:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _I2C_2_Master_Idle *****************
  3357 ;; Defined at:
  3358 ;;		line 22 in file "i2c.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;Total ram usage:        1 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 2
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_I2C_2_Master_Start
  3383 ;;		_I2C_2_Master_RepStart
  3384 ;;		_I2C_2_Master_Stop
  3385 ;;		_I2C_2_Master_Write
  3386 ;;		_I2C_2_Master_Read
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text27
  3391   001B20                     __ptext27:
  3392                           	callstack 0
  3393   001B20                     _I2C_2_Master_Idle:
  3394                           	callstack 25
  3395   001B20                     l69:
  3396   001B20  010E               	movlb	14	; () banked
  3397   001B22  B5D8               	btfsc	216,2,b	;volatile
  3398   001B24  EF96  F00D         	goto	u751
  3399   001B28  EF98  F00D         	goto	u750
  3400   001B2C                     u751:
  3401   001B2C  EF90  F00D         	goto	l69
  3402   001B30                     u750:
  3403   001B30                     
  3404                           ; BSR set to: 14
  3405   001B30  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3406   001B34  0E1F               	movlw	31
  3407   001B36  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3408   001B38  A4D8               	btfss	status,2,c
  3409   001B3A  EFA1  F00D         	goto	u761
  3410   001B3E  EFA3  F00D         	goto	u760
  3411   001B42                     u761:
  3412   001B42  EF90  F00D         	goto	l69
  3413   001B46                     u760:
  3414   001B46                     
  3415                           ; BSR set to: 14
  3416   001B46  0012               	return		;funcret
  3417   001B48                     __end_of_I2C_2_Master_Idle:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _I2C_2_Master_Init *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "i2c.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 2
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_color_click_init
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text28
  3452   001AA2                     __ptext28:
  3453                           	callstack 0
  3454   001AA2                     _I2C_2_Master_Init:
  3455                           	callstack 27
  3456   001AA2                     
  3457                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3458   001AA2  010E               	movlb	14	; () banked
  3459   001AA4  51D9               	movf	217,w,b	;volatile
  3460   001AA6  0BF0               	andlw	-16
  3461   001AA8  0908               	iorlw	8
  3462   001AAA  6FD9               	movwf	217,b	;volatile
  3463   001AAC                     
  3464                           ; BSR set to: 14
  3465                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3466   001AAC  8BD9               	bsf	217,5,b	;volatile
  3467                           
  3468                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3469   001AAE  0E9F               	movlw	159
  3470   001AB0  6FD6               	movwf	214,b	;volatile
  3471   001AB2                     
  3472                           ; BSR set to: 14
  3473                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3474   001AB2  8A84               	bsf	132,5,c	;volatile
  3475   001AB4                     
  3476                           ; BSR set to: 14
  3477                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3478   001AB4  8C84               	bsf	132,6,c	;volatile
  3479   001AB6                     
  3480                           ; BSR set to: 14
  3481                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3482   001AB6  9BA7               	bcf	167,5,b	;volatile
  3483   001AB8                     
  3484                           ; BSR set to: 14
  3485                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3486   001AB8  9DA7               	bcf	167,6,b	;volatile
  3487                           
  3488                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3489   001ABA  0E1D               	movlw	29
  3490   001ABC  6F1D               	movwf	29,b	;volatile
  3491                           
  3492                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3493   001ABE  0E1E               	movlw	30
  3494   001AC0  6F1C               	movwf	28,b	;volatile
  3495                           
  3496                           ;i2c.c: 18:   RD5PPS=0x1C;
  3497   001AC2  0E1C               	movlw	28
  3498   001AC4  6F6F               	movwf	111,b	;volatile
  3499                           
  3500                           ;i2c.c: 19:   RD6PPS=0x1B;
  3501   001AC6  0E1B               	movlw	27
  3502   001AC8  6F70               	movwf	112,b	;volatile
  3503   001ACA                     
  3504                           ; BSR set to: 14
  3505   001ACA  0012               	return		;funcret
  3506   001ACC                     __end_of_I2C_2_Master_Init:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _TxBufferedString *****************
  3510 ;; Defined at:
  3511 ;;		line 85 in file "serial.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  string          2    5[COMRAM] PTR unsigned char 
  3514 ;;		 -> main@buf(50), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 3
  3533 ;; This function calls:
  3534 ;;		_putCharToTxBuf
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text29
  3541   001A1C                     __ptext29:
  3542                           	callstack 0
  3543   001A1C                     _TxBufferedString:
  3544                           	callstack 27
  3545   001A1C                     
  3546                           ;serial.c: 86:  while (*string!=0){
  3547   001A1C  EF19  F00D         	goto	l1798
  3548   001A20                     l1794:
  3549                           
  3550                           ;serial.c: 87:         putCharToTxBuf(*string++);
  3551   001A20  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3552   001A24  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3553   001A28  50DF               	movf	indf2,w,c
  3554   001A2A  EC66  F00D         	call	_putCharToTxBuf
  3555   001A2E  4A06               	infsnz	TxBufferedString@string^0,f,c
  3556   001A30  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3557   001A32                     l1798:
  3558                           
  3559                           ;serial.c: 86:  while (*string!=0){
  3560   001A32  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3561   001A36  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3562   001A3A  50DF               	movf	indf2,w,c
  3563   001A3C  A4D8               	btfss	status,2,c
  3564   001A3E  EF23  F00D         	goto	u981
  3565   001A42  EF25  F00D         	goto	u980
  3566   001A46                     u981:
  3567   001A46  EF10  F00D         	goto	l1794
  3568   001A4A                     u980:
  3569   001A4A  0012               	return		;funcret
  3570   001A4C                     __end_of_TxBufferedString:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _putCharToTxBuf *****************
  3574 ;; Defined at:
  3575 ;;		line 72 in file "serial.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  byte            1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  byte            1    4[COMRAM] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        1 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 2
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_TxBufferedString
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text30
  3604   001ACC                     __ptext30:
  3605                           	callstack 0
  3606   001ACC                     _putCharToTxBuf:
  3607                           	callstack 27
  3608                           
  3609                           ;incstack = 0
  3610                           ;putCharToTxBuf@byte stored from wreg
  3611   001ACC  6E05               	movwf	putCharToTxBuf@byte^0,c
  3612   001ACE                     
  3613                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3614   001ACE  0E3B               	movlw	59
  3615   001AD0  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3616   001AD2  EF6D  F00D         	goto	u921
  3617   001AD6  EF6F  F00D         	goto	u920
  3618   001ADA                     u921:
  3619   001ADA  EF71  F00D         	goto	l1734
  3620   001ADE                     u920:
  3621   001ADE  0E00               	movlw	0
  3622   001AE0  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  3623   001AE2                     l1734:
  3624                           
  3625                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3626   001AE2  0E00               	movlw	low _EUSART4TXbuf
  3627   001AE4  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3628   001AE6  6ED9               	movwf	fsr2l,c
  3629   001AE8  6ADA               	clrf	fsr2h,c
  3630   001AEA  0E01               	movlw	high _EUSART4TXbuf
  3631   001AEC  22DA               	addwfc	fsr2h,f,c
  3632   001AEE  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3633   001AF2  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3634   001AF4  0012               	return		;funcret
  3635   001AF6                     __end_of_putCharToTxBuf:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _Interrupts_init *****************
  3639 ;; Defined at:
  3640 ;;		line 10 in file "interrupts.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text31
  3669   001B9E                     __ptext31:
  3670                           	callstack 0
  3671   001B9E                     _Interrupts_init:
  3672                           	callstack 28
  3673   001B9E                     
  3674                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  3675   001B9E  9AF2               	bcf	242,5,c	;volatile
  3676                           
  3677                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  3678   001BA0  010E               	movlb	14	; () banked
  3679   001BA2  812B               	bsf	43,0,b	;volatile
  3680                           
  3681                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  3682   001BA4  8CF2               	bsf	242,6,c	;volatile
  3683                           
  3684                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  3685   001BA6  8EF2               	bsf	242,7,c	;volatile
  3686                           
  3687                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3688   001BA8  872D               	bsf	45,3,b	;volatile
  3689   001BAA                     
  3690                           ; BSR set to: 14
  3691   001BAA  0012               	return		;funcret
  3692   001BAC                     __end_of_Interrupts_init:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _HighISR *****************
  3696 ;; Defined at:
  3697 ;;		line 25 in file "interrupts.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		_getCharFromTxBuf
  3720 ;;		_putCharToRxBuf
  3721 ;; This function is called by:
  3722 ;;		Interrupt level 2
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	intcode
  3727   000008                     __pintcode:
  3728                           	callstack 0
  3729   000008                     _HighISR:
  3730                           	callstack 21
  3731                           
  3732                           ; BSR set to: 14
  3733                           ;incstack = 0
  3734   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3735   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3736   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3737   000012                     
  3738                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  3739   000012  010E               	movlb	14	; () banked
  3740   000014  A537               	btfss	55,2,b	;volatile
  3741   000016  EF0F  F000         	goto	i2u101_41
  3742   00001A  EF11  F000         	goto	i2u101_40
  3743   00001E                     i2u101_41:
  3744   00001E  EF15  F000         	goto	i2l216
  3745   000022                     i2u101_40:
  3746   000022                     
  3747                           ; BSR set to: 14
  3748                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  3749   000022  EC26  F00D         	call	_getCharFromTxBuf	;wreg free
  3750   000026  010E               	movlb	14	; () banked
  3751   000028  6FE4               	movwf	228,b	;volatile
  3752   00002A                     i2l216:
  3753                           
  3754                           ; BSR set to: 14
  3755                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  3756   00002A  A737               	btfss	55,3,b	;volatile
  3757   00002C  EF1A  F000         	goto	i2u102_41
  3758   000030  EF1C  F000         	goto	i2u102_40
  3759   000034                     i2u102_41:
  3760   000034  EF1F  F000         	goto	i2l218
  3761   000038                     i2u102_40:
  3762   000038                     
  3763                           ; BSR set to: 14
  3764                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  3765   000038  51E3               	movf	227,w,b	;volatile
  3766   00003A  EC7B  F00D         	call	_putCharToRxBuf
  3767   00003E                     i2l218:
  3768   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3769   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  3770   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3771   000048  0011               	retfie		f
  3772   00004A                     __end_of_HighISR:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _putCharToRxBuf *****************
  3776 ;; Defined at:
  3777 ;;		line 52 in file "serial.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  byte            1    wreg     unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  byte            1    0[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;Total ram usage:        1 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_HighISR
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text33
  3805   001AF6                     __ptext33:
  3806                           	callstack 0
  3807   001AF6                     _putCharToRxBuf:
  3808                           	callstack 21
  3809                           
  3810                           ;incstack = 0
  3811                           ;putCharToRxBuf@byte stored from wreg
  3812   001AF6  6E01               	movwf	putCharToRxBuf@byte^0,c
  3813   001AF8                     
  3814                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3815   001AF8  0E13               	movlw	19
  3816   001AFA  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3817   001AFC  EF82  F00D         	goto	i2u96_41
  3818   001B00  EF84  F00D         	goto	i2u96_40
  3819   001B04                     i2u96_41:
  3820   001B04  EF86  F00D         	goto	i2l1780
  3821   001B08                     i2u96_40:
  3822   001B08  0E00               	movlw	0
  3823   001B0A  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3824   001B0C                     i2l1780:
  3825                           
  3826                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3827   001B0C  0EB1               	movlw	low _EUSART4RXbuf
  3828   001B0E  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3829   001B10  6ED9               	movwf	fsr2l,c
  3830   001B12  6ADA               	clrf	fsr2h,c
  3831   001B14  0E00               	movlw	high _EUSART4RXbuf
  3832   001B16  22DA               	addwfc	fsr2h,f,c
  3833   001B18  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3834   001B1C  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3835   001B1E  0012               	return		;funcret
  3836   001B20                     __end_of_putCharToRxBuf:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _getCharFromTxBuf *****************
  3840 ;; Defined at:
  3841 ;;		line 66 in file "serial.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      unsigned char 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;Total ram usage:        2 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_HighISR
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text34
  3869   001A4C                     __ptext34:
  3870                           	callstack 0
  3871   001A4C                     _getCharFromTxBuf:
  3872                           	callstack 21
  3873   001A4C                     
  3874                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3875   001A4C  0E3B               	movlw	59
  3876   001A4E  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3877   001A50  EF2C  F00D         	goto	i2u97_41
  3878   001A54  EF2E  F00D         	goto	i2u97_40
  3879   001A58                     i2u97_41:
  3880   001A58  EF30  F00D         	goto	i2l1788
  3881   001A5C                     i2u97_40:
  3882   001A5C  0E00               	movlw	0
  3883   001A5E  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  3884   001A60                     i2l1788:
  3885                           
  3886                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  3887   001A60  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  3888   001A62  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  3889   001A64  6E01               	movwf	??_getCharFromTxBuf^0,c
  3890   001A66  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3891   001A68  0E00               	movlw	low _EUSART4TXbuf
  3892   001A6A  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3893   001A6C  6ED9               	movwf	fsr2l,c
  3894   001A6E  0E01               	movlw	high _EUSART4TXbuf
  3895   001A70  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3896   001A72  6EDA               	movwf	fsr2h,c
  3897   001A74  50DF               	movf	indf2,w,c
  3898   001A76  0012               	return		;funcret
  3899   001A78                     __end_of_getCharFromTxBuf:
  3900                           	callstack 0
  3901                           
  3902                           	psect	rparam
  3903   000000                     
  3904                           	psect	temp
  3905   00005B                     btemp:
  3906                           	callstack 0
  3907   00005B                     	ds	1
  3908   000000                     int$flags	set	btemp
  3909   000000                     wtemp8	set	btemp+1
  3910   000000                     ttemp5	set	btemp+1
  3911   000000                     ttemp6	set	btemp+4
  3912   000000                     ttemp7	set	btemp+8
  3913                           
  3914                           	psect	idloc
  3915                           
  3916                           ;Config register IDLOC0 @ 0x200000
  3917                           ;	unspecified, using default values
  3918   200000                     	org	2097152
  3919   200000  0FFF               	dw	4095
  3920                           
  3921                           ;Config register IDLOC1 @ 0x200002
  3922                           ;	unspecified, using default values
  3923   200002                     	org	2097154
  3924   200002  0FFF               	dw	4095
  3925                           
  3926                           ;Config register IDLOC2 @ 0x200004
  3927                           ;	unspecified, using default values
  3928   200004                     	org	2097156
  3929   200004  0FFF               	dw	4095
  3930                           
  3931                           ;Config register IDLOC3 @ 0x200006
  3932                           ;	unspecified, using default values
  3933   200006                     	org	2097158
  3934   200006  0FFF               	dw	4095
  3935                           
  3936                           ;Config register IDLOC4 @ 0x200008
  3937                           ;	unspecified, using default values
  3938   200008                     	org	2097160
  3939   200008  0FFF               	dw	4095
  3940                           
  3941                           ;Config register IDLOC5 @ 0x20000A
  3942                           ;	unspecified, using default values
  3943   20000A                     	org	2097162
  3944   20000A  0FFF               	dw	4095
  3945                           
  3946                           ;Config register IDLOC6 @ 0x20000C
  3947                           ;	unspecified, using default values
  3948   20000C                     	org	2097164
  3949   20000C  0FFF               	dw	4095
  3950                           
  3951                           ;Config register IDLOC7 @ 0x20000E
  3952                           ;	unspecified, using default values
  3953   20000E                     	org	2097166
  3954   20000E  0FFF               	dw	4095
  3955                           
  3956                           	psect	config
  3957                           
  3958                           ;Config register CONFIG1L @ 0x300000
  3959                           ;	External Oscillator mode Selection bits
  3960                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3961                           ;	Power-up default value for COSC bits
  3962                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3963   300000                     	org	3145728
  3964   300000  AA                 	db	170
  3965                           
  3966                           ;Config register CONFIG1H @ 0x300001
  3967                           ;	unspecified, using default values
  3968                           ;	Clock Out Enable bit
  3969                           ;	CLKOUTEN = 0x1, unprogrammed default
  3970                           ;	Clock Switch Enable bit
  3971                           ;	CSWEN = 0x1, unprogrammed default
  3972                           ;	Fail-Safe Clock Monitor Enable bit
  3973                           ;	FCMEN = 0x1, unprogrammed default
  3974   300001                     	org	3145729
  3975   300001  FF                 	db	255
  3976                           
  3977                           ;Config register CONFIG2L @ 0x300002
  3978                           ;	unspecified, using default values
  3979                           ;	Master Clear Enable bit
  3980                           ;	MCLRE = 0x1, unprogrammed default
  3981                           ;	Power-up Timer Enable bit
  3982                           ;	PWRTE = 0x1, unprogrammed default
  3983                           ;	Low-power BOR enable bit
  3984                           ;	LPBOREN = 0x1, unprogrammed default
  3985                           ;	Brown-out Reset Enable bits
  3986                           ;	BOREN = 0x3, unprogrammed default
  3987   300002                     	org	3145730
  3988   300002  FF                 	db	255
  3989                           
  3990                           ;Config register CONFIG2H @ 0x300003
  3991                           ;	unspecified, using default values
  3992                           ;	Brown Out Reset Voltage selection bits
  3993                           ;	BORV = 0x3, unprogrammed default
  3994                           ;	ZCD Disable bit
  3995                           ;	ZCD = 0x1, unprogrammed default
  3996                           ;	PPSLOCK bit One-Way Set Enable bit
  3997                           ;	PPS1WAY = 0x1, unprogrammed default
  3998                           ;	Stack Full/Underflow Reset Enable bit
  3999                           ;	STVREN = 0x1, unprogrammed default
  4000                           ;	Debugger Enable bit
  4001                           ;	DEBUG = 0x1, unprogrammed default
  4002                           ;	Extended Instruction Set Enable bit
  4003                           ;	XINST = 0x1, unprogrammed default
  4004   300003                     	org	3145731
  4005   300003  FF                 	db	255
  4006                           
  4007                           ;Config register CONFIG3L @ 0x300004
  4008                           ;	WDT Period Select bits
  4009                           ;	WDTCPS = 0x1F, unprogrammed default
  4010                           ;	WDT operating mode
  4011                           ;	WDTE = OFF, WDT Disabled
  4012   300004                     	org	3145732
  4013   300004  9F                 	db	159
  4014                           
  4015                           ;Config register CONFIG3H @ 0x300005
  4016                           ;	unspecified, using default values
  4017                           ;	WDT Window Select bits
  4018                           ;	WDTCWS = 0x7, unprogrammed default
  4019                           ;	WDT input clock selector
  4020                           ;	WDTCCS = 0x7, unprogrammed default
  4021   300005                     	org	3145733
  4022   300005  FF                 	db	255
  4023                           
  4024                           ;Config register CONFIG4L @ 0x300006
  4025                           ;	unspecified, using default values
  4026                           ;	Write Protection Block 0
  4027                           ;	WRT0 = 0x1, unprogrammed default
  4028                           ;	Write Protection Block 1
  4029                           ;	WRT1 = 0x1, unprogrammed default
  4030                           ;	Write Protection Block 2
  4031                           ;	WRT2 = 0x1, unprogrammed default
  4032                           ;	Write Protection Block 3
  4033                           ;	WRT3 = 0x1, unprogrammed default
  4034                           ;	Write Protection Block 3
  4035                           ;	WRT4 = 0x1, unprogrammed default
  4036                           ;	Write Protection Block 3
  4037                           ;	WRT5 = 0x1, unprogrammed default
  4038                           ;	Write Protection Block 3
  4039                           ;	WRT6 = 0x1, unprogrammed default
  4040                           ;	Write Protection Block 3
  4041                           ;	WRT7 = 0x1, unprogrammed default
  4042   300006                     	org	3145734
  4043   300006  FF                 	db	255
  4044                           
  4045                           ;Config register CONFIG4H @ 0x300007
  4046                           ;	unspecified, using default values
  4047                           ;	Configuration Register Write Protection bit
  4048                           ;	WRTC = 0x1, unprogrammed default
  4049                           ;	Boot Block Write Protection bit
  4050                           ;	WRTB = 0x1, unprogrammed default
  4051                           ;	Data EEPROM Write Protection bit
  4052                           ;	WRTD = 0x1, unprogrammed default
  4053                           ;	Scanner Enable bit
  4054                           ;	SCANE = 0x1, unprogrammed default
  4055                           ;	Low Voltage Programming Enable bit
  4056                           ;	LVP = 0x1, unprogrammed default
  4057   300007                     	org	3145735
  4058   300007  FF                 	db	255
  4059                           
  4060                           ;Config register CONFIG5L @ 0x300008
  4061                           ;	unspecified, using default values
  4062                           ;	UserNVM Program Memory Code Protection bit
  4063                           ;	CP = 0x1, unprogrammed default
  4064                           ;	DataNVM Memory Code Protection bit
  4065                           ;	CPD = 0x1, unprogrammed default
  4066   300008                     	org	3145736
  4067   300008  FF                 	db	255
  4068                           
  4069                           ;Config register CONFIG5H @ 0x300009
  4070                           ;	unspecified, using default values
  4071   300009                     	org	3145737
  4072   300009  FF                 	db	255
  4073                           
  4074                           ;Config register CONFIG6L @ 0x30000A
  4075                           ;	unspecified, using default values
  4076                           ;	Table Read Protection Block 0
  4077                           ;	EBTR0 = 0x1, unprogrammed default
  4078                           ;	Table Read Protection Block 1
  4079                           ;	EBTR1 = 0x1, unprogrammed default
  4080                           ;	Table Read Protection Block 2
  4081                           ;	EBTR2 = 0x1, unprogrammed default
  4082                           ;	Table Read Protection Block 3
  4083                           ;	EBTR3 = 0x1, unprogrammed default
  4084                           ;	Table Read Protection Block 4
  4085                           ;	EBTR4 = 0x1, unprogrammed default
  4086                           ;	Table Read Protection Block 5
  4087                           ;	EBTR5 = 0x1, unprogrammed default
  4088                           ;	Table Read Protection Block 6
  4089                           ;	EBTR6 = 0x1, unprogrammed default
  4090                           ;	Table Read Protection Block 7
  4091                           ;	EBTR7 = 0x1, unprogrammed default
  4092   30000A                     	org	3145738
  4093   30000A  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG6H @ 0x30000B
  4096                           ;	unspecified, using default values
  4097                           ;	Boot Block Table Read Protection bit
  4098                           ;	EBTRB = 0x1, unprogrammed default
  4099   30000B                     	org	3145739
  4100   30000B  FF                 	db	255
  4101                           tosu	equ	0xFFF
  4102                           tosh	equ	0xFFE
  4103                           tosl	equ	0xFFD
  4104                           stkptr	equ	0xFFC
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           pcl	equ	0xFF9
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           prodh	equ	0xFF4
  4113                           prodl	equ	0xFF3
  4114                           indf0	equ	0xFEF
  4115                           postinc0	equ	0xFEE
  4116                           postdec0	equ	0xFED
  4117                           preinc0	equ	0xFEC
  4118                           plusw0	equ	0xFEB
  4119                           fsr0h	equ	0xFEA
  4120                           fsr0l	equ	0xFE9
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postinc1	equ	0xFE6
  4124                           postdec1	equ	0xFE5
  4125                           preinc1	equ	0xFE4
  4126                           plusw1	equ	0xFE3
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           bsr	equ	0xFE0
  4130                           indf2	equ	0xFDF
  4131                           postinc2	equ	0xFDE
  4132                           postdec2	equ	0xFDD
  4133                           preinc2	equ	0xFDC
  4134                           plusw2	equ	0xFDB
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        1
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     81     147
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1124$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1071$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1071$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    8449
                                             31 BANK0     50    50      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      93       5       91.9%
BITBIGSFRhlh        9A      0       0      34        0.0%
BITBIGSFRhhl        6D      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllhh      36      0       0      38        0.0%
BITBIGSFRllh        2D      0       0      37        0.0%
BITBIGSFRlllhll     2A      0       0      40        0.0%
BITBIGSFRlllll      26      0       0      45        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhll      D      0       0      43        0.0%
BITBIGSFRlllhlh      C      0       0      39        0.0%
BITBIGSFRlllhll      9      0       0      41        0.0%
BITBIGSFRhllll       8      0       0      35        0.0%
BITBIGSFRllllh       6      0       0      44        0.0%
BITBIGSFRlllhll      1      0       0      42        0.0%
BITBIGSFRlh          1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      46        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 25 21:08:49 2023

               _color_read_Red 17EE                 _color_read_lum 179E                _color_read_Blue 188E  
                           l21 1A1A                             l30 183C                             l24 1B66  
                           l33 188C                             l27 17EC                             l36 18DC  
                           l39 16FA                             l72 1B46                             l81 1BCA  
                           l66 1ACA                             l75 1BD4                             l84 1BB6  
                           l69 1B20                             l78 1BC0                             l87 19A6  
             _color_read_Green 183E                readColours@vals 0010              ??_Interrupts_init 0005  
                          l210 1BAA                            l126 1B84                            l163 1AF4  
                          l172 1A4A                            l166 1B9C                            l177 1AA0  
                          l380 1226                            l393 138A                            l944 174C  
                          l970 169C                            l966 1646                            l975 0EB0  
                          l977 0EB8                            l978 0EFE                            l996 14D8  
                          l989 109E                            u750 1B30                            u751 1B2C  
                          u920 1ADE                            u760 1B46                            u921 1ADA  
                          u761 1B42                            u930 1B9A                            u931 1B94  
                          u940 1B9C                            u870 1990                            u871 1988  
                          u980 1A4A                            u981 1A46                            u990 1A8C  
                          u991 1A88                            u888 1992                            _abs 19A8  
                          _pad 1624                            wreg 000FE8                           l1002 179C  
                         l1021 15A2                           l1006 19DE                           l1032 1BD6  
                         l2000 0EFA                           l1009 19E6                           l2010 0F9C  
                         l2002 0F06                           ?_abs 0017                           l2020 1058  
                         l2012 0FA2                           l2004 0F0E                           l1029 1964  
                         l2022 1068                           l2006 0F14                           l2014 1006  
                         l2030 138C                           l2024 106E                           l2016 1020  
                         l2008 0F96                           l2040 13E0                           l2032 13B0  
                         l2026 107E                           l2018 103E                           l2050 149E  
                         l2042 13FC                           l2034 13BE                           l2044 1418  
                         l2036 13CC                           l2060 174E                           l2046 146E  
                         l2038 13D0                           l2054 14B0                           l2062 175A  
                         l2070 16FC                           l2064 1776                           l2072 170E  
                         l2066 1792                           l2074 1716                           l2090 15B4  
                         l2082 15A4                           l1700 1AB6                           l2076 171E  
                         l2092 15C0                           l2084 15A8                           l1702 1AB8  
                         l2078 173A                           l2094 15F6                           l2086 15AC  
                         l1632 1BCC                           l1640 1BC2                           l1704 1B4A  
                         l1720 1884                           l1712 17EE                           l1800 1A78  
                         l2096 1606                           l2088 15B0                           l1730 1ACE  
                         l1634 1BD0                           l1642 1BC6                           l1650 196C  
                         l1714 1834                           l1706 179E                           l1802 1A8C  
                         l2098 160A                           l1732 1ADE                           l1636 1BAE  
                         l1652 1974                           l1644 1BB8                           l1724 188E  
                         l1708 17E4                           l1804 1A90                           l1900 113A  
                         l1734 1AE2                           l1638 1BB2                           l1654 197C  
                         l1646 1BBC                           l1726 18D4                           l1718 183E  
                         l1806 1A9A                           l1910 11BC                           l1902 114E  
                         l1808 1B9E                           l1736 1AF2                           l1576 1B20  
                         l1760 1A10                           l1752 19E8                           l1656 19A2  
                         l1648 1968                           l1920 1206                           l1912 11BE  
                         l1904 115C                           l1578 1B30                           l1754 19EC  
                         l1770 1B7E                           l1658 19A4                           l1762 169E  
                         l1738 1B86                           l1914 11D0                           l1906 116E  
                         l1930 125A                           l1692 1AA2                           l1756 19F6  
                         l1772 1B80                           l1764 1B68                           l1908 119C  
                         l1916 11D6                           l1940 12B2                           l1932 125E  
                         l1924 1228                           l1860 14EC                           l1694 1AAC  
                         l1758 1A06                           l1774 1B82                           l1766 1B72  
                         l1918 11E6                           l1950 1334                           l1942 12C6  
                         l1934 126C                           l1926 122C                           l1862 14FE  
                         l1792 1A1C                           l1696 1AB2                           l1768 1B74  
                         l1880 10A0                           l1944 12D4                           l1952 133A  
                         l1936 128C                           l1928 123A                           l1864 1508  
                         l1872 1922                           l1960 1624                           l1794 1A20  
                         l1698 1AB4                           l1890 10E4                           l1882 10A4  
                         l1954 134A                           l1946 1302                           l1938 12AA  
                         l1866 1526                           l1858 14DA                           l1874 192E  
                         l1970 166A                           l1962 1632                           l1796 1A2E  
                         l1892 1104                           l1884 10B2                           l1956 136A  
                         l1948 1322                           l1868 155C                           l1876 1940  
                         l1972 1688                           l1964 163E                           l1980 0E44  
                         l1798 1A32                           l1894 1108                           l1886 10D2  
                         l1974 19A8                           l1878 1944                           l1966 1652  
                         l1990 0EC0                           l1982 0E58                           ?_pad 0015  
                         l1896 1114                           l1888 10D6                           l1976 19C2  
                         l1968 1666                           l1992 0ED0                           l1984 0E68  
                         l1898 1132                           l1994 0ED6                           l1986 0E88  
                         l1978 0E24                           l1996 0EE6                           l1988 0EA4  
                         l1998 0EF2                           STR_1 0E01                           u1100 10E4  
                         u1101 10E0                           u1111 110E                           u1120 1132  
                         u1200 1302                           u1040 14EC                           u1121 112E  
                         u1201 12FE                           u1041 14E8                           u1130 115C  
                         u1210 134A                           u1050 14FE                           u1131 1158  
                         u1211 1346                           u1051 14FA                           u1140 119C  
                         u1060 1526                           u1220 1632                           u1300 0EE6  
                         u1141 1198                           u1061 1522                           u1221 162E  
                         u1301 0EE2                           u1150 11E6                           u1070 155C  
                         u1230 1688                           u1310 1020                           u1151 11E2  
                         u1071 1558                           u1231 1684                           u1311 101C  
                         u1160 123A                           u1240 19C2                           u1080 1964  
                         u1320 103E                           u1161 1236                           u1241 19BE  
                         u1081 1960                           u1321 103A                           u1090 10B2  
                         u1170 126C                           u1330 1058                           u1250 0E54  
                         u1091 10AE                           u1171 1268                           u1331 1054  
                         u1251 0E4E                           u1180 12AA                           u1340 1068  
                         u1260 0E56                           u1181 12A6                           u1341 1064  
                         u1190 12D4                           u1270 0E68                           u1350 13B0  
                         u1407 19FC                           u1191 12D0                           u1271 0E64  
                         u1351 13AC                           u1280 0EA4                           u1360 13FC  
                 _BAUD4CONbits 000EE9                           u1281 0EA0                           u1361 13F8  
                         u1290 0ED0                           u1370 1418                           u1291 0ECC  
                         u1371 1414                           u1380 1792                           u1381 178E  
                         u1390 161C                           u1391 1618                           abs@a 0017  
                         _dbuf 00CA                           _main 15A4                           _dtoa 0E24  
                         _prec 00C7                           _vals 00EA                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                           start 004A  
       __end_of_color_read_Red 183E                __end_of_HighISR 004A         __end_of_color_read_lum 17EE  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
                 ?_readColours 0010                __end_of___aodiv 1228                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 138C                          i2l152 1B1E  
                        i2l216 002A                          i2l218 003E                          i2l159 1A76  
                 vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 1BD6     __end_of_I2C_2_Master_Write 1BB8  
                        _flags 00C9                          _fputc 14DA                          _fputs 1922  
                        pad@fp 0015                          _width 00C5                          _putch 1BD6  
                        dtoa@d 0022                          dtoa@i 0041                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0040                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 174E        __end_of_color_read_Blue 18DE          _I2C_2_Master_RepStart 1BB8  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                ?_color_read_lum 0009  
              __initialization 18DE                   __end_of_main 1624                   __end_of_dtoa 10A0  
           putCharToTxBuf@byte 0005                         ??_main 0057                         ??_dtoa 002A  
                __activetblptr 000001                         ?_fputc 0005                         ?_fputs 000E  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                         i2l1832 0012  
                       i2l1834 0022                         i2l1780 1B0C                         i2l1782 1B1C  
                       i2l1838 0038                         i2l1784 1A4C                         i2l1776 1AF8  
                       i2l1786 1A5C                         i2l1778 1B08                         i2l1788 1A60  
                    ??_HighISR 0003       __end_of_color_click_init 1A1C                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   vfprintf@cfmt 0055               _getCharFromTxBuf 1A4C  
                    ??___aodiv 0015                      ??___aomod 0015                         clear_0 18F6  
                       clear_1 1902                         isa$std 000001                         pad@buf 0017  
                       dtoa@fp 0020                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 179E                      ??_sprintf 0057          __end_of_isDataInTxBuf 1B9E  
                   __accesstop 0060        __end_of__initialization 1910       __end_of_color_read_Green 188E  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0009  
              _Interrupts_init 1B9E                 __pcstackCOMRAM 0001                   __pidataBANK0 1BD8  
                __end_of_fputc 15A4                  __end_of_fputs 1966                  __end_of_putch 1BD8  
                      ??_fputc 0009                        ??_fputs 0012                        ??_putch 0005  
                   __pbssBANK0 00B1                     __pbssBANK1 0100              _color_writetoaddr 1B48  
           ?_color_writetoaddr 0007            ??_color_writetoaddr 0008                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u96_40 1B08                        i2u96_41 1B04  
                      i2u97_40 1A5C                        i2u97_41 1A58                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 1BAC         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 1B68             _I2C_2_Master_Start 1BCC                     _initUSART4 1B68  
           _I2C_2_Master_Write 1BAC                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 10A0                        ___aomod 1228  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0060  
                 __psmallconst 0E00                        __pcinit 18DE                        __ramtop 0E00  
                      __ptext0 15A4                        __ptext1 16FC                        __ptext2 174E  
                      __ptext3 138C                        __ptext4 0E24                        __ptext5 1624  
                      __ptext6 1922                        __ptext7 14DA                        __ptext8 1BD6  
                      __ptext9 19A8                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 1A78  
            color_read_lum@tmp 000E                        main@buf 007F                        _sprintf 16FC  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1910  
            __end_of_sendTxBuf 1AA2                        fputc@fp 0007                        fputs@fp 0010  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 14DA  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0055  
                    _TRISDbits 000F84       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 00B1                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0009                    ?_initUSART4 0001             ??_color_read_Green 000B  
                  vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043  
          start_initialization 18DE                    __end_of_abs 19E8                    __end_of_pad 169E  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E                    vfprintf@fmt 0062  
                ??_readColours 0012                 _putCharToRxBuf 1AF6                 _putCharToTxBuf 1ACC  
                  __pdataBANK0 00F2                    __pbssCOMRAM 0057                  __pcstackBANK0 0060  
             ___aodiv@dividend 0005                       ?_HighISR 0001                      _dtoa$1152 0032  
       __end_of_putCharToRxBuf 1B20         __end_of_putCharToTxBuf 1AF6                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00            __end_of_readColours 16FC              _I2C_2_Master_Idle 1B20  
            _I2C_2_Master_Init 1AA2              _I2C_2_Master_Read 1966              _I2C_2_Master_Stop 1BC2  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 0066  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006            ??_I2C_2_Master_Stop 0006  
                _isDataInTxBuf 1B86               _TxBufferedString 1A1C                      _sendTxBuf 1A78  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u101_40 0022  
                     i2u101_41 001E                       i2u102_40 0038                       i2u102_41 0034  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 138C  
    __end_of_I2C_2_Master_Idle 1B48      __end_of_I2C_2_Master_Init 1ACC      __end_of_I2C_2_Master_Read 19A8  
    __end_of_I2C_2_Master_Stop 1BCC                       _DataFlag 00F2    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 1BC2             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                  _readColours 169E                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015                     _ANSELDbits 000EA7                     sprintf@fmt 0068  
           __end_of_initUSART4 1B86                       __ptext10 1228                       __ptext11 10A0  
                     __ptext20 1966                       __ptext12 1A78                       __ptext21 1B68  
                     __ptext13 1B86                       __ptext30 1ACC                       __ptext22 19E8  
                     __ptext14 169E                       __ptext31 1B9E                       __ptext23 1B48  
                     __ptext15 179E                       __ptext24 1BAC                       __ptext16 17EE  
                     __ptext33 1AF6                       __ptext25 1BC2                       __ptext17 183E  
                     __ptext34 1A4C                       __ptext26 1BCC                       __ptext18 188E  
                     __ptext27 1B20                       __ptext19 1BB8                       __ptext28 1AA2  
                     __ptext29 1A1C                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 174E               ___aomod@dividend 0005                     _INTCONbits 000FF2  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 0072  
                  ??_sendTxBuf 0005                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 19E8       __end_of_TxBufferedString 1A4C  
                     sprintf@f 0074                       sprintf@s 0066                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005                   ___aomod@sign 0016  
