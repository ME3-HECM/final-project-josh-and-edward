

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 22:44:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    98                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    99                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   100                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   101                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   102   000000                     
   103                           ; Generated 06/04/2022 GMT
   104                           ; 
   105                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution. Publication is not required when
   119                           ;        this file is used in an embedded application.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F67K40 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137   000000                     
   138                           	psect	idataBANK0
   139   0060CA                     __pidataBANK0:
   140                           	callstack 0
   141                           
   142                           ;initializer for _RunOneBlockTime
   143   0060CA  041A               	dw	1050
   144                           
   145                           ;initializer for _Turn45Delay
   146   0060CC  003C               	dw	60
   147                           
   148                           ;initializer for _power
   149   0060CE  0032               	dw	50
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISEbits	set	3973
   152   000000                     _TX4REG	set	3812
   153   000000                     _RC4STAbits	set	3815
   154   000000                     _SP4BRGH	set	3814
   155   000000                     _SSP2CON2bits	set	3802
   156   000000                     _RX4PPS	set	3605
   157   000000                     _SSP2CLKPPS	set	3612
   158   000000                     _SSP2DATPPS	set	3613
   159   000000                     _ANSELDbits	set	3751
   160   000000                     _SSP2ADD	set	3798
   161   000000                     _SSP2CON1bits	set	3801
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATFbits	set	3966
   164   000000                     _LATGbits	set	3967
   165   000000                     _TRISAbits	set	3969
   166   000000                     _TRISGbits	set	3975
   167   000000                     _TRISHbits	set	3976
   168   000000                     _PORTFbits	set	3982
   169   000000                     _TMR0L	set	4051
   170   000000                     _TMR0H	set	4052
   171   000000                     _INTCONbits	set	4082
   172   000000                     _CCPR2H	set	4006
   173   000000                     _CCPR1H	set	4010
   174   000000                     _TRISCbits	set	3971
   175   000000                     _TRISDbits	set	3972
   176   000000                     _TRISFbits	set	3974
   177   000000                     _LATDbits	set	3964
   178   000000                     _RC4REG	set	3811
   179   000000                     _SP4BRGL	set	3813
   180   000000                     _TX4STAbits	set	3816
   181   000000                     _BAUD4CONbits	set	3817
   182   000000                     _SSP2CON2	set	3802
   183   000000                     _SSP2STAT	set	3800
   184   000000                     _ANSELFbits	set	3764
   185   000000                     _SSP2BUF	set	3797
   186   000000                     _PIE0bits	set	3625
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189   000000                     _RD5PPS	set	3695
   190   000000                     _RE2PPS	set	3700
   191   000000                     _RD6PPS	set	3696
   192   000000                     _RC7PPS	set	3689
   193   000000                     _CCPR4H	set	3873
   194   000000                     _CCPR3H	set	3877
   195   000000                     _PIR0bits	set	3635
   196   000000                     _T0CON1bits	set	4054
   197   000000                     _T0CON0bits	set	4053
   198   000000                     _CCP1CONbits	set	4011
   199   000000                     _CCPTMRS0bits	set	4013
   200   000000                     _T2PR	set	4028
   201   000000                     _T2CONbits	set	4029
   202   000000                     _CCP2CONbits	set	4007
   203   000000                     _CCP3CONbits	set	3878
   204   000000                     _CCP4CONbits	set	3874
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _T2CLKCONbits	set	4031
   208   000000                     _T2HLTbits	set	4030
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215                           
   216                           ; BSR set to: 14
   217   000E01  72                 	db	114	;'r'
   218   000E02  65                 	db	101	;'e'
   219   000E03  64                 	db	100	;'d'
   220   000E04  3D                 	db	61	;'='
   221   000E05  25                 	db	37
   222   000E06  66                 	db	102	;'f'
   223   000E07  20                 	db	32
   224   000E08  67                 	db	103	;'g'
   225   000E09  72                 	db	114	;'r'
   226   000E0A  65                 	db	101	;'e'
   227   000E0B  65                 	db	101	;'e'
   228   000E0C  6E                 	db	110	;'n'
   229   000E0D  3D                 	db	61	;'='
   230   000E0E  25                 	db	37
   231   000E0F  66                 	db	102	;'f'
   232   000E10  20                 	db	32
   233   000E11  62                 	db	98	;'b'
   234   000E12  6C                 	db	108	;'l'
   235   000E13  75                 	db	117	;'u'
   236   000E14  65                 	db	101	;'e'
   237   000E15  3D                 	db	61	;'='
   238   000E16  25                 	db	37
   239   000E17  66                 	db	102	;'f'
   240   000E18  20                 	db	32
   241   000E19  6C                 	db	108	;'l'
   242   000E1A  75                 	db	117	;'u'
   243   000E1B  6D                 	db	109	;'m'
   244   000E1C  3D                 	db	61	;'='
   245   000E1D  25                 	db	37
   246   000E1E  64                 	db	100	;'d'
   247   000E1F  20                 	db	32
   248   000E20  61                 	db	97	;'a'
   249   000E21  63                 	db	99	;'c'
   250   000E22  74                 	db	116	;'t'
   251   000E23  75                 	db	117	;'u'
   252   000E24  61                 	db	97	;'a'
   253   000E25  6C                 	db	108	;'l'
   254   000E26  5F                 	db	95	;'_'
   255   000E27  63                 	db	99	;'c'
   256   000E28  6F                 	db	111	;'o'
   257   000E29  6C                 	db	108	;'l'
   258   000E2A  6F                 	db	111	;'o'
   259   000E2B  75                 	db	117	;'u'
   260   000E2C  72                 	db	114	;'r'
   261   000E2D  3D                 	db	61	;'='
   262   000E2E  25                 	db	37
   263   000E2F  64                 	db	100	;'d'
   264   000E30  20                 	db	32
   265   000E31  0D                 	db	13
   266   000E32  0A                 	db	10
   267   000E33  00                 	db	0
   268   000E34                     STR_2:
   269                           
   270                           ; BSR set to: 14
   271   000E34  69                 	db	105	;'i'
   272   000E35  6E                 	db	110	;'n'
   273   000E36  66                 	db	102	;'f'
   274   000E37  00                 	db	0
   275   000E38                     STR_5:
   276                           
   277                           ; BSR set to: 14
   278   000E38  6E                 	db	110	;'n'
   279   000E39  61                 	db	97	;'a'
   280   000E3A  6E                 	db	110	;'n'
   281   000E3B  00                 	db	0
   282   000E3C  00                 	db	0	; dummy byte at the end
   283   000000                     
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287   005BE8                     __pcinit:
   288                           	callstack 0
   289   005BE8                     start_initialization:
   290                           	callstack 0
   291   005BE8                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to BANK0 (6 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296   005BE8  0ECA               	movlw	low __pidataBANK0
   297   005BEA  6EF6               	movwf	tblptrl,c
   298   005BEC  0E60               	movlw	high __pidataBANK0
   299   005BEE  6EF7               	movwf	tblptrh,c
   300   005BF0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301   005BF2  6EF8               	movwf	tblptru,c
   302   005BF4  EE00  F0F0         	lfsr	0,__pdataBANK0
   303   005BF8  EE10 F006          	lfsr	1,6
   304   005BFC                     copy_data0:
   305   005BFC  0009               	tblrd		*+
   306   005BFE  CFF5 FFEE          	movff	tablat,postinc0
   307   005C02  50E5               	movf	postdec1,w,c
   308   005C04  50E1               	movf	fsr1l,w,c
   309   005C06  E1FA               	bnz	copy_data0
   310                           
   311                           ; Clear objects allocated to BANK2 (240 bytes)
   312   005C08  EE02  F000         	lfsr	0,__pbssBANK2
   313   005C0C  0EF0               	movlw	240
   314   005C0E                     clear_0:
   315   005C0E  6AEE               	clrf	postinc0,c
   316   005C10  06E8               	decf	wreg,f,c
   317   005C12  E1FD               	bnz	clear_0
   318                           
   319                           ; Clear objects allocated to BANK1 (114 bytes)
   320   005C14  EE01  F000         	lfsr	0,__pbssBANK1
   321   005C18  0E72               	movlw	114
   322   005C1A                     clear_1:
   323   005C1A  6AEE               	clrf	postinc0,c
   324   005C1C  06E8               	decf	wreg,f,c
   325   005C1E  E1FD               	bnz	clear_1
   326                           
   327                           ; Clear objects allocated to BANK0 (29 bytes)
   328   005C20  EE00  F0D3         	lfsr	0,__pbssBANK0
   329   005C24  0E1D               	movlw	29
   330   005C26                     clear_2:
   331   005C26  6AEE               	clrf	postinc0,c
   332   005C28  06E8               	decf	wreg,f,c
   333   005C2A  E1FD               	bnz	clear_2
   334   005C2C                     end_of_initialization:
   335                           	callstack 0
   336   005C2C                     __end_of__initialization:
   337                           	callstack 0
   338   005C2C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   339   005C2E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   340   005C30  0100               	movlb	0
   341   005C32  EF4C  F011         	goto	_main	;jump to C main() function
   342                           
   343                           	psect	bssBANK0
   344   0000D3                     __pbssBANK0:
   345                           	callstack 0
   346   0000D3                     	ds	12
   347   0000DF                     floorf@F526:
   348                           	callstack 0
   349   0000DF                     	ds	4
   350   0000E3                     ___fpclassifyf@F465:
   351                           	callstack 0
   352   0000E3                     	ds	4
   353   0000E7                     _width:
   354                           	callstack 0
   355   0000E7                     	ds	2
   356   0000E9                     _prec:
   357                           	callstack 0
   358   0000E9                     	ds	2
   359   0000EB                     _flags:
   360                           	callstack 0
   361   0000EB                     	ds	1
   362   0000EC                     _TxBufReadCnt:
   363                           	callstack 0
   364   0000EC                     	ds	1
   365   0000ED                     _TxBufWriteCnt:
   366                           	callstack 0
   367   0000ED                     	ds	1
   368   0000EE                     _RxBufReadCnt:
   369                           	callstack 0
   370   0000EE                     	ds	1
   371   0000EF                     _RxBufWriteCnt:
   372                           	callstack 0
   373   0000EF                     	ds	1
   374                           
   375                           	psect	dataBANK0
   376   0000F0                     __pdataBANK0:
   377                           	callstack 0
   378   0000F0                     _RunOneBlockTime:
   379                           	callstack 0
   380   0000F0                     	ds	2
   381   0000F2                     _Turn45Delay:
   382                           	callstack 0
   383   0000F2                     	ds	2
   384   0000F4                     _power:
   385                           	callstack 0
   386   0000F4                     	ds	2
   387                           
   388                           	psect	bssBANK1
   389   000100                     __pbssBANK1:
   390                           	callstack 0
   391   000100                     _EUSART4RXbuf:
   392                           	callstack 0
   393   000100                     	ds	20
   394   000114                     _move_count:
   395                           	callstack 0
   396   000114                     	ds	2
   397   000116                     _run_flag:
   398                           	callstack 0
   399   000116                     	ds	2
   400   000118                     _lost_flag:
   401                           	callstack 0
   402   000118                     	ds	2
   403   00011A                     _WayBack:
   404                           	callstack 0
   405   00011A                     	ds	50
   406   00014C                     _rel:
   407                           	callstack 0
   408   00014C                     	ds	12
   409   000158                     _motorR:
   410                           	callstack 0
   411   000158                     	ds	9
   412   000161                     _motorL:
   413                           	callstack 0
   414   000161                     	ds	9
   415   00016A                     _vals:
   416                           	callstack 0
   417   00016A                     	ds	8
   418                           
   419                           	psect	bssBANK2
   420   000200                     __pbssBANK2:
   421                           	callstack 0
   422   000200                     _EUSART4TXbuf:
   423                           	callstack 0
   424   000200                     	ds	60
   425   00023C                     _Time_forward:
   426                           	callstack 0
   427   00023C                     	ds	100
   428   0002A0                     _dbuf:
   429                           	callstack 0
   430   0002A0                     	ds	80
   431                           
   432                           	psect	cstackBANK1
   433   000172                     __pcstackBANK1:
   434                           	callstack 0
   435   000172                     main@buf:
   436                           	callstack 0
   437                           
   438                           ; 100 bytes @ 0x0
   439   000172                     	ds	100
   440   0001D6                     main@consecuitive:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x64
   444   0001D6                     	ds	2
   445   0001D8                     main@colour:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x66
   449   0001D8                     	ds	2
   450   0001DA                     main@lost_count:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x68
   454   0001DA                     	ds	2
   455   0001DC                     main@prev_colour:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x6A
   459   0001DC                     	ds	2
   460                           
   461                           	psect	cstackBANK0
   462   000060                     __pcstackBANK0:
   463                           	callstack 0
   464   000060                     efgtoa@fp:
   465                           	callstack 0
   466   000060                     colour_rel@L:
   467                           	callstack 0
   468   000060                     _Colour_decider$3237:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x0
   472   000060                     	ds	2
   473   000062                     efgtoa@f:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x2
   477   000062                     	ds	2
   478   000064                     Colour_decider@Cmax_i:
   479                           	callstack 0
   480   000064                     _colour_rel$3235:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x4
   484   000064                     	ds	2
   485   000066                     efgtoa@c:
   486                           	callstack 0
   487   000066                     Colour_decider@RGB_col:
   488                           	callstack 0
   489                           
   490                           ; 12 bytes @ 0x6
   491   000066                     	ds	1
   492   000067                     ??_efgtoa:
   493                           
   494                           ; 1 bytes @ 0x7
   495   000067                     	ds	1
   496   000068                     _colour_rel$3236:
   497                           	callstack 0
   498                           
   499                           ; 4 bytes @ 0x8
   500   000068                     	ds	1
   501   000069                     efgtoa@ne:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x9
   505   000069                     	ds	2
   506   00006B                     efgtoa@p:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xB
   510   00006B                     	ds	1
   511   00006C                     colour_rel@R:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0xC
   515   00006C                     	ds	1
   516   00006D                     efgtoa@t:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xD
   520   00006D                     	ds	2
   521   00006F                     _efgtoa$2884:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xF
   525   00006F                     	ds	1
   526   000070                     colour_rel@G:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x10
   530   000070                     	ds	1
   531   000071                     efgtoa@pp:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x11
   535   000071                     	ds	1
   536   000072                     efgtoa@mode:
   537                           	callstack 0
   538   000072                     Colour_decider@Cmax:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x12
   542   000072                     	ds	1
   543   000073                     efgtoa@nmode:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x13
   547   000073                     	ds	1
   548   000074                     efgtoa@d:
   549                           	callstack 0
   550   000074                     colour_rel@B:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x14
   554   000074                     	ds	2
   555   000076                     efgtoa@m:
   556                           	callstack 0
   557   000076                     Colour_decider@Cmin:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x16
   561   000076                     	ds	2
   562   000078                     efgtoa@e:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x18
   566   000078                     	ds	2
   567   00007A                     Colour_decider@i:
   568                           	callstack 0
   569   00007A                     efgtoa@w:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1A
   573   00007A                     	ds	2
   574   00007C                     Colour_decider@Hue:
   575                           	callstack 0
   576   00007C                     efgtoa@ou:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x1C
   580   00007C                     	ds	4
   581   000080                     efgtoa@i:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x20
   585   000080                     	ds	2
   586   000082                     efgtoa@h:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x22
   590   000082                     	ds	4
   591   000086                     efgtoa@l:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x26
   595   000086                     	ds	4
   596   00008A                     efgtoa@sign:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x2A
   600   00008A                     	ds	1
   601   00008B                     efgtoa@n:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x2B
   605   00008B                     	ds	2
   606   00008D                     efgtoa@g:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x2D
   610   00008D                     	ds	4
   611   000091                     efgtoa@u:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x31
   615   000091                     	ds	4
   616   000095                     vfpfcnvrt@fp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x35
   620   000095                     	ds	2
   621   000097                     vfpfcnvrt@fmt:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x37
   625   000097                     	ds	2
   626   000099                     vfpfcnvrt@ap:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x39
   630   000099                     	ds	2
   631   00009B                     ??_vfpfcnvrt:
   632                           
   633                           ; 1 bytes @ 0x3B
   634   00009B                     	ds	2
   635   00009D                     vfpfcnvrt@convarg:
   636                           	callstack 0
   637                           
   638                           ; 8 bytes @ 0x3D
   639   00009D                     	ds	8
   640   0000A5                     vfpfcnvrt@c:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x45
   644   0000A5                     	ds	1
   645   0000A6                     vfpfcnvrt@cp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x46
   649   0000A6                     	ds	2
   650   0000A8                     ?_vfprintf:
   651                           	callstack 0
   652   0000A8                     vfprintf@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x48
   656   0000A8                     	ds	2
   657   0000AA                     vfprintf@fmt:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x4A
   661   0000AA                     	ds	2
   662   0000AC                     vfprintf@ap:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x4C
   666   0000AC                     	ds	2
   667   0000AE                     vfprintf@cfmt:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x4E
   671   0000AE                     	ds	2
   672   0000B0                     ?_sprintf:
   673                           	callstack 0
   674   0000B0                     sprintf@s:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x50
   678   0000B0                     	ds	2
   679   0000B2                     sprintf@fmt:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x52
   683   0000B2                     	ds	18
   684   0000C4                     sprintf@ap:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x64
   688   0000C4                     	ds	2
   689   0000C6                     sprintf@f:
   690                           	callstack 0
   691                           
   692                           ; 11 bytes @ 0x66
   693   0000C6                     	ds	11
   694   0000D1                     ??_main:
   695                           
   696                           ; 1 bytes @ 0x71
   697   0000D1                     	ds	2
   698                           
   699                           	psect	cstackCOMRAM
   700   000001                     __pcstackCOMRAM:
   701                           	callstack 0
   702   000001                     ??_getTMR0val:
   703   000001                     ??_I2C_2_Master_Idle:
   704   000001                     ?___fpclassifyf:
   705                           	callstack 0
   706   000001                     ?___wmul:
   707                           	callstack 0
   708   000001                     ?___fladd:
   709                           	callstack 0
   710   000001                     ?_labs:
   711                           	callstack 0
   712   000001                     ?___flneg:
   713                           	callstack 0
   714   000001                     ?___fltol:
   715                           	callstack 0
   716   000001                     ?___xxtofl:
   717                           	callstack 0
   718   000001                     ?___aodiv:
   719                           	callstack 0
   720   000001                     ?___aomod:
   721                           	callstack 0
   722   000001                     sendCharSerial4@charToSend:
   723                           	callstack 0
   724   000001                     initDCmotorsPWM@PWMperiod:
   725                           	callstack 0
   726   000001                     TurnDelay@Turn45Delay:
   727                           	callstack 0
   728   000001                     delayed_ms@time:
   729                           	callstack 0
   730   000001                     ___wmul@multiplier:
   731                           	callstack 0
   732   000001                     memcpy@d1:
   733                           	callstack 0
   734   000001                     fputc@c:
   735                           	callstack 0
   736   000001                     strcpy@dest:
   737                           	callstack 0
   738   000001                     ___flneg@f1:
   739                           	callstack 0
   740   000001                     ___fltol@f1:
   741                           	callstack 0
   742   000001                     ___fladd@b:
   743                           	callstack 0
   744   000001                     ___xxtofl@val:
   745                           	callstack 0
   746   000001                     ___fpclassifyf@x:
   747                           	callstack 0
   748   000001                     labs@a:
   749                           	callstack 0
   750   000001                     ___aodiv@dividend:
   751                           	callstack 0
   752   000001                     ___aomod@dividend:
   753                           	callstack 0
   754                           
   755                           ; 8 bytes @ 0x0
   756   000001                     	ds	1
   757   000002                     ??_I2C_2_Master_Read:
   758   000002                     I2C_2_Master_Write@data_byte:
   759                           	callstack 0
   760   000002                     sendStringSerial4@string:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x1
   764   000002                     	ds	1
   765   000003                     ??_delayed_ms:
   766   000003                     ??_TurnDelay:
   767   000003                     color_writetoaddr@value:
   768                           	callstack 0
   769   000003                     I2C_2_Master_Read@ack:
   770                           	callstack 0
   771   000003                     getTMR0val@temp:
   772                           	callstack 0
   773   000003                     ___wmul@multiplicand:
   774                           	callstack 0
   775   000003                     memcpy@s1:
   776                           	callstack 0
   777   000003                     fputc@fp:
   778                           	callstack 0
   779   000003                     strcpy@src:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783   000003                     	ds	1
   784   000004                     color_writetoaddr@address:
   785                           	callstack 0
   786   000004                     I2C_2_Master_Read@tmp:
   787                           	callstack 0
   788   000004                     delayed_ms@i:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x3
   792   000004                     	ds	1
   793   000005                     ??_fputc:
   794   000005                     ??___fpclassifyf:
   795   000005                     ??_labs:
   796   000005                     ??_color_click_init:
   797   000005                     ??___fltol:
   798   000005                     ??___xxtofl:
   799   000005                     ?_color_read_lum:
   800                           	callstack 0
   801   000005                     ?_color_read_Red:
   802                           	callstack 0
   803   000005                     ?_color_read_Green:
   804                           	callstack 0
   805   000005                     ?_color_read_Blue:
   806                           	callstack 0
   807   000005                     getTMR0val@moving:
   808                           	callstack 0
   809   000005                     ___wmul@product:
   810                           	callstack 0
   811   000005                     memcpy@n:
   812                           	callstack 0
   813   000005                     strcpy@s:
   814                           	callstack 0
   815   000005                     ___fladd@a:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x4
   819   000005                     	ds	2
   820   000007                     ??_color_read_lum:
   821   000007                     ??_color_read_Red:
   822   000007                     ??_color_read_Green:
   823   000007                     ??_color_read_Blue:
   824   000007                     ?___lwdiv:
   825                           	callstack 0
   826   000007                     ___lwdiv@dividend:
   827                           	callstack 0
   828   000007                     memcpy@d:
   829                           	callstack 0
   830   000007                     strcpy@d:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x6
   834   000007                     	ds	2
   835   000009                     ??___fladd:
   836   000009                     ___fltol@sign1:
   837                           	callstack 0
   838   000009                     ___xxtofl@sign:
   839                           	callstack 0
   840   000009                     ___lwdiv@divisor:
   841                           	callstack 0
   842   000009                     ___fpclassifyf@e:
   843                           	callstack 0
   844   000009                     memcpy@s:
   845                           	callstack 0
   846   000009                     ___aodiv@divisor:
   847                           	callstack 0
   848   000009                     ___aomod@divisor:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x8
   852   000009                     	ds	1
   853   00000A                     ___fltol@exp1:
   854                           	callstack 0
   855   00000A                     ___xxtofl@exp:
   856                           	callstack 0
   857   00000A                     color_read_lum@tmp:
   858                           	callstack 0
   859   00000A                     color_read_Red@tmp:
   860                           	callstack 0
   861   00000A                     color_read_Green@tmp:
   862                           	callstack 0
   863   00000A                     color_read_Blue@tmp:
   864                           	callstack 0
   865   00000A                     fputs@s:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x9
   869   00000A                     	ds	1
   870   00000B                     memcpy@tmp:
   871                           	callstack 0
   872   00000B                     ___lwdiv@quotient:
   873                           	callstack 0
   874   00000B                     ___xxtofl@arg:
   875                           	callstack 0
   876   00000B                     ___fpclassifyf@u:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0xA
   880   00000B                     	ds	1
   881   00000C                     readColours@vals:
   882                           	callstack 0
   883   00000C                     fputs@fp:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0xB
   887   00000C                     	ds	1
   888   00000D                     ___lwdiv@counter:
   889                           	callstack 0
   890   00000D                     ___fladd@signs:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0xC
   894   00000D                     	ds	1
   895   00000E                     ___fladd@aexp:
   896                           	callstack 0
   897   00000E                     fputs@c:
   898                           	callstack 0
   899   00000E                     setMotorPWM@m:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0xD
   903   00000E                     	ds	1
   904   00000F                     ___fladd@bexp:
   905                           	callstack 0
   906   00000F                     fputs@i:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0xE
   910   00000F                     	ds	1
   911   000010                     ??_setMotorPWM:
   912   000010                     ___fladd@grs:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0xF
   916   000010                     	ds	1
   917   000011                     ?___flmul:
   918                           	callstack 0
   919   000011                     ___aodiv@counter:
   920                           	callstack 0
   921   000011                     ___aomod@counter:
   922                           	callstack 0
   923   000011                     pad@fp:
   924                           	callstack 0
   925   000011                     ___flmul@b:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x10
   929   000011                     	ds	1
   930   000012                     setMotorPWM@posDuty:
   931                           	callstack 0
   932   000012                     ___aodiv@sign:
   933                           	callstack 0
   934   000012                     ___aomod@sign:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x11
   938   000012                     	ds	1
   939   000013                     ?_abs:
   940                           	callstack 0
   941   000013                     setMotorPWM@negDuty:
   942                           	callstack 0
   943   000013                     pad@buf:
   944                           	callstack 0
   945   000013                     abs@a:
   946                           	callstack 0
   947   000013                     ___aodiv@quotient:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x12
   951   000013                     	ds	1
   952   000014                     stop@mL:
   953                           	callstack 0
   954   000014                     turnLeft@mL:
   955                           	callstack 0
   956   000014                     turnRight@mL:
   957                           	callstack 0
   958   000014                     fullSpeedAhead@mL:
   959                           	callstack 0
   960   000014                     timed_forward@mL:
   961                           	callstack 0
   962   000014                     fullSpeedBack@mL:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x13
   966   000014                     	ds	1
   967   000015                     ??_abs:
   968   000015                     pad@p:
   969                           	callstack 0
   970   000015                     ___flmul@a:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x14
   974   000015                     	ds	1
   975   000016                     stop@mR:
   976                           	callstack 0
   977   000016                     turnLeft@mR:
   978                           	callstack 0
   979   000016                     turnRight@mR:
   980                           	callstack 0
   981   000016                     fullSpeedAhead@mR:
   982                           	callstack 0
   983   000016                     timed_forward@mR:
   984                           	callstack 0
   985   000016                     fullSpeedBack@mR:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x15
   989   000016                     	ds	1
   990   000017                     ??_pad:
   991                           
   992                           ; 1 bytes @ 0x16
   993   000017                     	ds	1
   994   000018                     ??_fullSpeedAhead:
   995   000018                     ??_stop:
   996   000018                     ??_turnLeft:
   997   000018                     ??_turnRight:
   998   000018                     ??_fullSpeedBack:
   999   000018                     timed_forward@time:
  1000                           	callstack 0
  1001   000018                     pad@i:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x17
  1005   000018                     	ds	1
  1006   000019                     ??___flmul:
  1007                           
  1008                           ; 1 bytes @ 0x18
  1009   000019                     	ds	1
  1010   00001A                     ??_timed_forward:
  1011   00001A                     turnRight45@mL:
  1012                           	callstack 0
  1013   00001A                     turnLeft45@mL:
  1014                           	callstack 0
  1015   00001A                     reverseDetect@mL:
  1016                           	callstack 0
  1017   00001A                     reverseOneBlock@mL:
  1018                           	callstack 0
  1019   00001A                     ForwardOneBlock@mL:
  1020                           	callstack 0
  1021   00001A                     Forwardhalfblock@mL:
  1022                           	callstack 0
  1023   00001A                     pad@w:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x19
  1027   00001A                     	ds	2
  1028   00001C                     turnRight45@mR:
  1029                           	callstack 0
  1030   00001C                     turnLeft45@mR:
  1031                           	callstack 0
  1032   00001C                     reverseDetect@mR:
  1033                           	callstack 0
  1034   00001C                     reverseOneBlock@mR:
  1035                           	callstack 0
  1036   00001C                     ForwardOneBlock@mR:
  1037                           	callstack 0
  1038   00001C                     Forwardhalfblock@mR:
  1039                           	callstack 0
  1040   00001C                     dtoa@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x1B
  1044   00001C                     	ds	1
  1045   00001D                     ___flmul@sign:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x1C
  1049   00001D                     	ds	1
  1050   00001E                     ??_Forwardhalfblock:
  1051   00001E                     ??_turnRight45:
  1052   00001E                     ??_turnLeft45:
  1053   00001E                     ??_reverseDetect:
  1054   00001E                     ??_reverseOneBlock:
  1055   00001E                     ??_ForwardOneBlock:
  1056   00001E                     ___flmul@grs:
  1057                           	callstack 0
  1058   00001E                     dtoa@d:
  1059                           	callstack 0
  1060                           
  1061                           ; 8 bytes @ 0x1D
  1062   00001E                     	ds	2
  1063   000020                     RedMove@mL:
  1064                           	callstack 0
  1065   000020                     GreenMove@mL:
  1066                           	callstack 0
  1067   000020                     BlueMove@mL:
  1068                           	callstack 0
  1069   000020                     YellowMove@mL:
  1070                           	callstack 0
  1071   000020                     PinkMove@mL:
  1072                           	callstack 0
  1073   000020                     OrangeMove@mL:
  1074                           	callstack 0
  1075   000020                     LightBlueMove@mL:
  1076                           	callstack 0
  1077   000020                     RetryMove@mL:
  1078                           	callstack 0
  1079   000020                     ReverseYellow@mL:
  1080                           	callstack 0
  1081   000020                     ReversePink@mL:
  1082                           	callstack 0
  1083   000020                     turnCalibration@mL:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x1F
  1087   000020                     	ds	2
  1088   000022                     ___flmul@aexp:
  1089                           	callstack 0
  1090   000022                     RedMove@mR:
  1091                           	callstack 0
  1092   000022                     GreenMove@mR:
  1093                           	callstack 0
  1094   000022                     BlueMove@mR:
  1095                           	callstack 0
  1096   000022                     YellowMove@mR:
  1097                           	callstack 0
  1098   000022                     PinkMove@mR:
  1099                           	callstack 0
  1100   000022                     OrangeMove@mR:
  1101                           	callstack 0
  1102   000022                     LightBlueMove@mR:
  1103                           	callstack 0
  1104   000022                     RetryMove@mR:
  1105                           	callstack 0
  1106   000022                     ReverseYellow@mR:
  1107                           	callstack 0
  1108   000022                     ReversePink@mR:
  1109                           	callstack 0
  1110   000022                     turnCalibration@mR:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x21
  1114   000022                     	ds	1
  1115   000023                     ___flmul@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x22
  1119   000023                     	ds	1
  1120   000024                     ??_turnCalibration:
  1121   000024                     ??_RetryMove:
  1122   000024                     go_Home@WayBack:
  1123                           	callstack 0
  1124   000024                     ___flmul@prod:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x23
  1128   000024                     	ds	2
  1129   000026                     ??_dtoa:
  1130   000026                     go_Home@Time_forward:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x25
  1134   000026                     	ds	2
  1135   000028                     ??_go_Home:
  1136   000028                     ___flmul@temp:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x27
  1140   000028                     	ds	2
  1141   00002A                     ?___flsub:
  1142                           	callstack 0
  1143   00002A                     ___flge@ff1:
  1144                           	callstack 0
  1145   00002A                     ___flsub@b:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x29
  1149   00002A                     	ds	1
  1150   00002B                     go_Home@i:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154   00002B                     	ds	3
  1155   00002E                     _dtoa$2853:
  1156                           	callstack 0
  1157   00002E                     ___flge@ff2:
  1158                           	callstack 0
  1159   00002E                     ___flsub@a:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x2D
  1163   00002E                     	ds	2
  1164   000030                     dtoa@p:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x2F
  1168   000030                     	ds	2
  1169   000032                     ??___flge:
  1170   000032                     ?___fldiv:
  1171                           	callstack 0
  1172   000032                     dtoa@w:
  1173                           	callstack 0
  1174   000032                     ___fleq@ff1:
  1175                           	callstack 0
  1176   000032                     ___fldiv@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x31
  1180   000032                     	ds	2
  1181   000034                     dtoa@n:
  1182                           	callstack 0
  1183                           
  1184                           ; 8 bytes @ 0x33
  1185   000034                     	ds	2
  1186   000036                     ___fleq@ff2:
  1187                           	callstack 0
  1188   000036                     ___fldiv@a:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x35
  1192   000036                     	ds	4
  1193   00003A                     ??___fldiv:
  1194   00003A                     ??___fleq:
  1195                           
  1196                           ; 1 bytes @ 0x39
  1197   00003A                     	ds	2
  1198   00003C                     dtoa@i:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x3B
  1202   00003C                     	ds	2
  1203   00003E                     dtoa@s:
  1204                           	callstack 0
  1205   00003E                     ___fldiv@rem:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x3D
  1209   00003E                     	ds	4
  1210   000042                     ___fldiv@sign:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x41
  1214   000042                     	ds	1
  1215   000043                     ___fldiv@new_exp:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x42
  1219   000043                     	ds	2
  1220   000045                     ___fldiv@grs:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x44
  1224   000045                     	ds	4
  1225   000049                     ___fldiv@bexp:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x48
  1229   000049                     	ds	1
  1230   00004A                     ___fldiv@aexp:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x49
  1234   00004A                     	ds	1
  1235   00004B                     ?_Colour_decider:
  1236                           	callstack 0
  1237   00004B                     ?_floorf:
  1238                           	callstack 0
  1239   00004B                     colour_rel@vals:
  1240                           	callstack 0
  1241   00004B                     Colour_decider@vals:
  1242                           	callstack 0
  1243   00004B                     floorf@x:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x4A
  1247   00004B                     	ds	2
  1248   00004D                     colour_rel@rel:
  1249                           	callstack 0
  1250   00004D                     Colour_decider@rel:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x4C
  1254   00004D                     	ds	2
  1255   00004F                     ??_floorf:
  1256   00004F                     ??_Colour_decider:
  1257                           
  1258                           ; 1 bytes @ 0x4E
  1259   00004F                     	ds	6
  1260   000055                     floorf@m:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x54
  1264   000055                     	ds	4
  1265   000059                     floorf@e:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x58
  1269   000059                     	ds	2
  1270   00005B                     floorf@u:
  1271                           	callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x5A
  1274   00005B                     	ds	4
  1275   00005F                     
  1276                           ; 1 bytes @ 0x5E
  1277 ;;
  1278 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1279 ;;
  1280 ;; *************** function _main *****************
  1281 ;; Defined at:
  1282 ;;		line 31 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  colour          2  102[BANK1 ] int 
  1287 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1288 ;;  prev_colour     2  106[BANK1 ] int 
  1289 ;;  lost_count      2  104[BANK1 ] int 
  1290 ;;  consecuitive    2  100[BANK1 ] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;Total ram usage:      110 bytes
  1305 ;; Hardware stack levels required when called: 9
  1306 ;; This function calls:
  1307 ;;		_BlueMove
  1308 ;;		_Buttons_init
  1309 ;;		_Colour_decider
  1310 ;;		_Forwardhalfblock
  1311 ;;		_GreenMove
  1312 ;;		_I2C_2_Master_Init
  1313 ;;		_Interrupts_init
  1314 ;;		_LED_init
  1315 ;;		_LightBlueMove
  1316 ;;		_OrangeMove
  1317 ;;		_PinkMove
  1318 ;;		_RedMove
  1319 ;;		_RetryMove
  1320 ;;		_Timer0_init
  1321 ;;		_YellowMove
  1322 ;;		_color_click_init
  1323 ;;		_colour_rel
  1324 ;;		_fullSpeedAhead
  1325 ;;		_getTMR0val
  1326 ;;		_go_Home
  1327 ;;		_initDCmotorsPWM
  1328 ;;		_initUSART4
  1329 ;;		_readColours
  1330 ;;		_sendStringSerial4
  1331 ;;		_sprintf
  1332 ;;		_stop
  1333 ;;		_turnCalibration
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340   002298                     __ptext0:
  1341                           	callstack 0
  1342   002298                     _main:
  1343                           	callstack 22
  1344   002298                     
  1345                           ;main.c: 32:     initUSART4();
  1346   002298  EC29  F030         	call	_initUSART4	;wreg free
  1347   00229C                     
  1348                           ;main.c: 33:     Interrupts_init();
  1349   00229C  EC4A  F030         	call	_Interrupts_init	;wreg free
  1350   0022A0                     
  1351                           ;main.c: 34:     color_click_init();
  1352   0022A0  ECB1  F02C         	call	_color_click_init	;wreg free
  1353   0022A4                     
  1354                           ;main.c: 35:     I2C_2_Master_Init();
  1355   0022A4  ECBA  F02F         	call	_I2C_2_Master_Init	;wreg free
  1356   0022A8                     
  1357                           ;main.c: 36:     LED_init();
  1358   0022A8  ECE3  F02F         	call	_LED_init	;wreg free
  1359   0022AC                     
  1360                           ;main.c: 37:     Buttons_init();
  1361   0022AC  EC50  F030         	call	_Buttons_init	;wreg free
  1362   0022B0                     
  1363                           ;main.c: 38:     initDCmotorsPWM(200);
  1364   0022B0  0E00               	movlw	0
  1365   0022B2  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1366   0022B4  0EC8               	movlw	200
  1367   0022B6  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1368   0022B8  EC64  F029         	call	_initDCmotorsPWM	;wreg free
  1369   0022BC                     
  1370                           ;main.c: 39:     Timer0_init();
  1371   0022BC  EC19  F030         	call	_Timer0_init	;wreg free
  1372   0022C0                     
  1373                           ;main.c: 40:     char buf[100];;main.c: 42:     motorL.power=0;
  1374   0022C0  0E00               	movlw	0
  1375   0022C2  0101               	movlb	1	; () banked
  1376   0022C4  6F61               	movwf	_motorL& (0+255),b
  1377   0022C6                     
  1378                           ; BSR set to: 1
  1379                           ;main.c: 43:     motorL.direction=1;
  1380   0022C6  0E01               	movlw	1
  1381   0022C8  6F62               	movwf	(_motorL+1)& (0+255),b
  1382   0022CA                     
  1383                           ; BSR set to: 1
  1384                           ;main.c: 44:     motorL.brakemode=1;
  1385   0022CA  0E01               	movlw	1
  1386   0022CC  6F63               	movwf	(_motorL+2)& (0+255),b
  1387   0022CE                     
  1388                           ; BSR set to: 1
  1389                           ;main.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1390   0022CE  0EAA               	movlw	170
  1391   0022D0  6F66               	movwf	(_motorL+5)& (0+255),b
  1392   0022D2  0E0F               	movlw	15
  1393   0022D4  6F67               	movwf	(_motorL+6)& (0+255),b
  1394   0022D6                     
  1395                           ; BSR set to: 1
  1396                           ;main.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1397   0022D6  0EA6               	movlw	166
  1398   0022D8  6F68               	movwf	(_motorL+7)& (0+255),b
  1399   0022DA  0E0F               	movlw	15
  1400   0022DC  6F69               	movwf	(_motorL+8)& (0+255),b
  1401   0022DE                     
  1402                           ; BSR set to: 1
  1403                           ;main.c: 47:     motorL.PWMperiod=200;
  1404   0022DE  0E00               	movlw	0
  1405   0022E0  6F65               	movwf	(_motorL+4)& (0+255),b
  1406   0022E2  0EC8               	movlw	200
  1407   0022E4  6F64               	movwf	(_motorL+3)& (0+255),b
  1408   0022E6                     
  1409                           ; BSR set to: 1
  1410                           ;main.c: 48:     motorR.power=0;
  1411   0022E6  0E00               	movlw	0
  1412   0022E8  6F58               	movwf	_motorR& (0+255),b
  1413   0022EA                     
  1414                           ; BSR set to: 1
  1415                           ;main.c: 49:     motorR.direction=1;
  1416   0022EA  0E01               	movlw	1
  1417   0022EC  6F59               	movwf	(_motorR+1)& (0+255),b
  1418   0022EE                     
  1419                           ; BSR set to: 1
  1420                           ;main.c: 50:     motorR.brakemode=1;
  1421   0022EE  0E01               	movlw	1
  1422   0022F0  6F5A               	movwf	(_motorR+2)& (0+255),b
  1423   0022F2                     
  1424                           ; BSR set to: 1
  1425                           ;main.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1426   0022F2  0E25               	movlw	37
  1427   0022F4  6F5D               	movwf	(_motorR+5)& (0+255),b
  1428   0022F6  0E0F               	movlw	15
  1429   0022F8  6F5E               	movwf	(_motorR+6)& (0+255),b
  1430   0022FA                     
  1431                           ; BSR set to: 1
  1432                           ;main.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1433   0022FA  0E21               	movlw	33
  1434   0022FC  6F5F               	movwf	(_motorR+7)& (0+255),b
  1435   0022FE  0E0F               	movlw	15
  1436   002300  6F60               	movwf	(_motorR+8)& (0+255),b
  1437   002302                     
  1438                           ; BSR set to: 1
  1439                           ;main.c: 53:     motorR.PWMperiod=200;
  1440   002302  0E00               	movlw	0
  1441   002304  6F5C               	movwf	(_motorR+4)& (0+255),b
  1442   002306  0EC8               	movlw	200
  1443   002308  6F5B               	movwf	(_motorR+3)& (0+255),b
  1444   00230A                     
  1445                           ; BSR set to: 1
  1446                           ;main.c: 56:     int prev_colour =0;
  1447   00230A  0E00               	movlw	0
  1448   00230C  6FDD               	movwf	(main@prev_colour+1)& (0+255),b
  1449   00230E  0E00               	movlw	0
  1450   002310  6FDC               	movwf	main@prev_colour& (0+255),b
  1451   002312                     
  1452                           ; BSR set to: 1
  1453                           ;main.c: 57:     run_flag=1;
  1454   002312  0E00               	movlw	0
  1455   002314  6F17               	movwf	(_run_flag+1)& (0+255),b
  1456   002316  0E01               	movlw	1
  1457   002318  6F16               	movwf	_run_flag& (0+255),b
  1458   00231A                     
  1459                           ; BSR set to: 1
  1460                           ;main.c: 58:     move_count=-1;
  1461   00231A  6914               	setf	_move_count& (0+255),b	;volatile
  1462   00231C  6915               	setf	(_move_count+1)& (0+255),b	;volatile
  1463   00231E                     
  1464                           ; BSR set to: 1
  1465                           ;main.c: 59:     int lost_count=0;
  1466   00231E  0E00               	movlw	0
  1467   002320  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1468   002322  0E00               	movlw	0
  1469   002324  6FDA               	movwf	main@lost_count& (0+255),b
  1470   002326                     
  1471                           ; BSR set to: 1
  1472                           ;main.c: 60:     turnCalibration(&motorL,&motorR);
  1473   002326  0E61               	movlw	low _motorL
  1474   002328  6E20               	movwf	turnCalibration@mL^0,c
  1475   00232A  0E01               	movlw	high _motorL
  1476   00232C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1477   00232E  0E58               	movlw	low _motorR
  1478   002330  6E22               	movwf	turnCalibration@mR^0,c
  1479   002332  0E01               	movlw	high _motorR
  1480   002334  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1481   002336  ECDD  F021         	call	_turnCalibration	;wreg free
  1482   00233A                     
  1483                           ;main.c: 62:     LATFbits.LATF0=0;
  1484   00233A  907E               	bcf	126,0,c	;volatile
  1485   00233C                     
  1486                           ;main.c: 63:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1487   00233C  0E52               	movlw	82
  1488   00233E  0100               	movlb	0	; () banked
  1489   002340  6FD2               	movwf	(??_main+1)& (0+255),b
  1490   002342  0E2B               	movlw	43
  1491   002344  6FD1               	movwf	??_main& (0+255),b
  1492   002346  0E00               	movlw	0
  1493   002348                     u5847:
  1494   002348  2EE8               	decfsz	wreg,f,c
  1495   00234A  D7FE               	bra	u5847
  1496   00234C  2FD1               	decfsz	??_main& (0+255),f,b
  1497   00234E  D7FC               	bra	u5847
  1498   002350  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1499   002352  D7FA               	bra	u5847
  1500   002354  F000               	nop	
  1501   002356                     l340:
  1502   002356  B48E               	btfsc	142,2,c	;volatile
  1503   002358  EFB0  F011         	goto	u5621
  1504   00235C  EFB2  F011         	goto	u5620
  1505   002360                     u5621:
  1506   002360  EFAB  F011         	goto	l340
  1507   002364                     u5620:
  1508   002364                     
  1509                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1510   002364  0E52               	movlw	82
  1511   002366  0100               	movlb	0	; () banked
  1512   002368  6FD2               	movwf	(??_main+1)& (0+255),b
  1513   00236A  0E2B               	movlw	43
  1514   00236C  6FD1               	movwf	??_main& (0+255),b
  1515   00236E  0E00               	movlw	0
  1516   002370                     u5857:
  1517   002370  2EE8               	decfsz	wreg,f,c
  1518   002372  D7FE               	bra	u5857
  1519   002374  2FD1               	decfsz	??_main& (0+255),f,b
  1520   002376  D7FC               	bra	u5857
  1521   002378  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1522   00237A  D7FA               	bra	u5857
  1523   00237C  F000               	nop	
  1524   00237E                     
  1525                           ;main.c: 67:     T0CON0bits.T0EN=1;
  1526   00237E  8ED5               	bsf	213,7,c	;volatile
  1527                           
  1528                           ;main.c: 68:     while (run_flag)
  1529   002380  EFE3  F013         	goto	l5839
  1530   002384                     l5689:
  1531                           
  1532                           ; BSR set to: 1
  1533                           ;main.c: 69:     {;main.c: 70:         consecuitive=0;
  1534   002384  0E00               	movlw	0
  1535   002386  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1536   002388  0E00               	movlw	0
  1537   00238A  6FD6               	movwf	main@consecuitive& (0+255),b
  1538   00238C                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1541   00238C  0E61               	movlw	low _motorL
  1542   00238E  6E14               	movwf	fullSpeedAhead@mL^0,c
  1543   002390  0E01               	movlw	high _motorL
  1544   002392  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1545   002394  0E58               	movlw	low _motorR
  1546   002396  6E16               	movwf	fullSpeedAhead@mR^0,c
  1547   002398  0E01               	movlw	high _motorR
  1548   00239A  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1549   00239C  EC15  F029         	call	_fullSpeedAhead	;wreg free
  1550   0023A0                     
  1551                           ;main.c: 74:         readColours(&vals);
  1552   0023A0  0E6A               	movlw	low _vals
  1553   0023A2  6E0C               	movwf	readColours@vals^0,c
  1554   0023A4  0E01               	movlw	high _vals
  1555   0023A6  6E0D               	movwf	(readColours@vals+1)^0,c
  1556   0023A8  EC2A  F02B         	call	_readColours	;wreg free
  1557   0023AC                     
  1558                           ;main.c: 77:         colour_rel(&vals, &rel);
  1559   0023AC  0E6A               	movlw	low _vals
  1560   0023AE  6E4B               	movwf	colour_rel@vals^0,c
  1561   0023B0  0E01               	movlw	high _vals
  1562   0023B2  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1563   0023B4  0E4C               	movlw	low _rel
  1564   0023B6  6E4D               	movwf	colour_rel@rel^0,c
  1565   0023B8  0E01               	movlw	high _rel
  1566   0023BA  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1567   0023BC  EC31  F01A         	call	_colour_rel	;wreg free
  1568   0023C0                     
  1569                           ;main.c: 80:         if (vals.L>=500){
  1570   0023C0  0101               	movlb	1	; () banked
  1571   0023C2  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1572   0023C4  EFED  F011         	goto	u5631
  1573   0023C8  0EF4               	movlw	244
  1574   0023CA  5D70               	subwf	(_vals+6)& (0+255),w,b
  1575   0023CC  0E01               	movlw	1
  1576   0023CE  5971               	subwfb	(_vals+7)& (0+255),w,b
  1577   0023D0  A0D8               	btfss	status,0,c
  1578   0023D2  EFED  F011         	goto	u5631
  1579   0023D6  EFEF  F011         	goto	u5630
  1580   0023DA                     u5631:
  1581   0023DA  EFC9  F013         	goto	l5831
  1582   0023DE                     u5630:
  1583   0023DE                     
  1584                           ; BSR set to: 1
  1585                           ;main.c: 81:             move_count++;
  1586   0023DE  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  1587   0023E0  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1588   0023E2                     
  1589                           ; BSR set to: 1
  1590                           ;main.c: 82:             getTMR0val();
  1591   0023E2  ECF9  F02A         	call	_getTMR0val	;wreg free
  1592   0023E6                     
  1593                           ;main.c: 84:             Forwardhalfblock(&motorL,&motorR);
  1594   0023E6  0E61               	movlw	low _motorL
  1595   0023E8  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1596   0023EA  0E01               	movlw	high _motorL
  1597   0023EC  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1598   0023EE  0E58               	movlw	low _motorR
  1599   0023F0  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1600   0023F2  0E01               	movlw	high _motorR
  1601   0023F4  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1602   0023F6  EC86  F02B         	call	_Forwardhalfblock	;wreg free
  1603   0023FA                     
  1604                           ;main.c: 86:             stop(&motorL, &motorR);
  1605   0023FA  0E61               	movlw	low _motorL
  1606   0023FC  6E14               	movwf	stop@mL^0,c
  1607   0023FE  0E01               	movlw	high _motorL
  1608   002400  6E15               	movwf	(stop@mL+1)^0,c
  1609   002402  0E58               	movlw	low _motorR
  1610   002404  6E16               	movwf	stop@mR^0,c
  1611   002406  0E01               	movlw	high _motorR
  1612   002408  6E17               	movwf	(stop@mR+1)^0,c
  1613   00240A  ECA8  F029         	call	_stop	;wreg free
  1614                           
  1615                           ;main.c: 91:             while (consecuitive<20){
  1616   00240E  EF4D  F012         	goto	l5723
  1617   002412                     l5707:
  1618                           
  1619                           ; BSR set to: 1
  1620                           ;main.c: 92:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1621   002412  0E09               	movlw	9
  1622   002414  0100               	movlb	0	; () banked
  1623   002416  6FD2               	movwf	(??_main+1)& (0+255),b
  1624   002418  0E1E               	movlw	30
  1625   00241A  6FD1               	movwf	??_main& (0+255),b
  1626   00241C  0EE4               	movlw	228
  1627   00241E                     u5867:
  1628   00241E  2EE8               	decfsz	wreg,f,c
  1629   002420  D7FE               	bra	u5867
  1630   002422  2FD1               	decfsz	??_main& (0+255),f,b
  1631   002424  D7FC               	bra	u5867
  1632   002426  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1633   002428  D7FA               	bra	u5867
  1634   00242A  F000               	nop	
  1635   00242C                     
  1636                           ;main.c: 93:                 readColours(&vals);
  1637   00242C  0E6A               	movlw	low _vals
  1638   00242E  6E0C               	movwf	readColours@vals^0,c
  1639   002430  0E01               	movlw	high _vals
  1640   002432  6E0D               	movwf	(readColours@vals+1)^0,c
  1641   002434  EC2A  F02B         	call	_readColours	;wreg free
  1642   002438                     
  1643                           ;main.c: 94:                 colour_rel(&vals, &rel);
  1644   002438  0E6A               	movlw	low _vals
  1645   00243A  6E4B               	movwf	colour_rel@vals^0,c
  1646   00243C  0E01               	movlw	high _vals
  1647   00243E  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1648   002440  0E4C               	movlw	low _rel
  1649   002442  6E4D               	movwf	colour_rel@rel^0,c
  1650   002444  0E01               	movlw	high _rel
  1651   002446  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1652   002448  EC31  F01A         	call	_colour_rel	;wreg free
  1653   00244C                     
  1654                           ;main.c: 95:                 int colour = Colour_decider(&vals, &rel);
  1655   00244C  0E6A               	movlw	low _vals
  1656   00244E  6E4B               	movwf	Colour_decider@vals^0,c
  1657   002450  0E01               	movlw	high _vals
  1658   002452  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1659   002454  0E4C               	movlw	low _rel
  1660   002456  6E4D               	movwf	Colour_decider@rel^0,c
  1661   002458  0E01               	movlw	high _rel
  1662   00245A  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1663   00245C  EC1F  F007         	call	_Colour_decider	;wreg free
  1664   002460  C04B  F1D8         	movff	?_Colour_decider,main@colour
  1665   002464  C04C  F1D9         	movff	?_Colour_decider+1,main@colour+1
  1666   002468                     
  1667                           ;main.c: 96:                 if (colour==prev_colour){
  1668   002468  0101               	movlb	1	; () banked
  1669   00246A  51DC               	movf	main@prev_colour& (0+255),w,b
  1670   00246C  19D8               	xorwf	main@colour& (0+255),w,b
  1671   00246E  E107               	bnz	u5641
  1672   002470  51DD               	movf	(main@prev_colour+1)& (0+255),w,b
  1673   002472  19D9               	xorwf	(main@colour+1)& (0+255),w,b
  1674   002474  A4D8               	btfss	status,2,c
  1675   002476  EF3F  F012         	goto	u5641
  1676   00247A  EF41  F012         	goto	u5640
  1677   00247E                     u5641:
  1678   00247E  EF45  F012         	goto	l5719
  1679   002482                     u5640:
  1680   002482                     
  1681                           ; BSR set to: 1
  1682                           ;main.c: 97:                     consecuitive++;
  1683   002482  4BD6               	infsnz	main@consecuitive& (0+255),f,b
  1684   002484  2BD7               	incf	(main@consecuitive+1)& (0+255),f,b
  1685                           
  1686                           ;main.c: 98:                 }
  1687   002486  EF49  F012         	goto	l5721
  1688   00248A                     l5719:
  1689                           
  1690                           ; BSR set to: 1
  1691                           ;main.c: 100:                     consecuitive=0;
  1692   00248A  0E00               	movlw	0
  1693   00248C  6FD7               	movwf	(main@consecuitive+1)& (0+255),b
  1694   00248E  0E00               	movlw	0
  1695   002490  6FD6               	movwf	main@consecuitive& (0+255),b
  1696   002492                     l5721:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;main.c: 102:                 prev_colour=colour;
  1700   002492  C1D8  F1DC         	movff	main@colour,main@prev_colour
  1701   002496  C1D9  F1DD         	movff	main@colour+1,main@prev_colour+1
  1702   00249A                     l5723:
  1703                           
  1704                           ;main.c: 91:             while (consecuitive<20){
  1705   00249A  0101               	movlb	1	; () banked
  1706   00249C  BFD7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1707   00249E  EF5A  F012         	goto	u5651
  1708   0024A2  51D7               	movf	(main@consecuitive+1)& (0+255),w,b
  1709   0024A4  E109               	bnz	u5650
  1710   0024A6  0E14               	movlw	20
  1711   0024A8  5DD6               	subwf	main@consecuitive& (0+255),w,b
  1712   0024AA  A0D8               	btfss	status,0,c
  1713   0024AC  EF5A  F012         	goto	u5651
  1714   0024B0  EF5C  F012         	goto	u5650
  1715   0024B4                     u5651:
  1716   0024B4  EF09  F012         	goto	l5707
  1717   0024B8                     u5650:
  1718   0024B8                     
  1719                           ; BSR set to: 1
  1720                           ;main.c: 107:             sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=%d \
      +                          r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1721   0024B8  0E72               	movlw	low main@buf
  1722   0024BA  0100               	movlb	0	; () banked
  1723   0024BC  6FB0               	movwf	sprintf@s& (0+255),b
  1724   0024BE  0E01               	movlw	high main@buf
  1725   0024C0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1726   0024C2  0E01               	movlw	low STR_1
  1727   0024C4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1728   0024C6  0E0E               	movlw	high STR_1
  1729   0024C8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1730   0024CA  C14C  F0B4         	movff	_rel,?_sprintf+4
  1731   0024CE  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1732   0024D2  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1733   0024D6  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1734   0024DA  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1735   0024DE  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1736   0024E2  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1737   0024E6  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1738   0024EA  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1739   0024EE  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1740   0024F2  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1741   0024F6  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1742   0024FA  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1743   0024FE  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1744   002502  C1DC  F0C2         	movff	main@prev_colour,?_sprintf+18
  1745   002506  C1DD  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1746   00250A  EC36  F02C         	call	_sprintf	;wreg free
  1747   00250E                     
  1748                           ;main.c: 108:             sendStringSerial4(buf);
  1749   00250E  0E72               	movlw	low main@buf
  1750   002510  6E02               	movwf	sendStringSerial4@string^0,c
  1751   002512  0E01               	movlw	high main@buf
  1752   002514  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1753   002516  ECA2  F02F         	call	_sendStringSerial4	;wreg free
  1754   00251A                     
  1755                           ;main.c: 110:             if (prev_colour==1){
  1756   00251A  0101               	movlb	1	; () banked
  1757   00251C  05DC               	decf	main@prev_colour& (0+255),w,b
  1758   00251E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1759   002520  A4D8               	btfss	status,2,c
  1760   002522  EF95  F012         	goto	u5661
  1761   002526  EF97  F012         	goto	u5660
  1762   00252A                     u5661:
  1763   00252A  EFB4  F012         	goto	l5741
  1764   00252E                     u5660:
  1765   00252E                     
  1766                           ; BSR set to: 1
  1767                           ;main.c: 111:                 RedMove(&motorL, &motorR);
  1768   00252E  0E61               	movlw	low _motorL
  1769   002530  6E20               	movwf	RedMove@mL^0,c
  1770   002532  0E01               	movlw	high _motorL
  1771   002534  6E21               	movwf	(RedMove@mL+1)^0,c
  1772   002536  0E58               	movlw	low _motorR
  1773   002538  6E22               	movwf	RedMove@mR^0,c
  1774   00253A  0E01               	movlw	high _motorR
  1775   00253C  6E23               	movwf	(RedMove@mR+1)^0,c
  1776   00253E  EC11  F02F         	call	_RedMove	;wreg free
  1777   002542                     
  1778                           ;main.c: 112:                 TMR0H=0;
  1779   002542  0E00               	movlw	0
  1780   002544  6ED4               	movwf	212,c	;volatile
  1781   002546                     
  1782                           ;main.c: 113:                 TMR0L=0;
  1783   002546  0E00               	movlw	0
  1784   002548  6ED3               	movwf	211,c	;volatile
  1785   00254A                     
  1786                           ;main.c: 114:                 WayBack[move_count]=1;
  1787   00254A  0E1A               	movlw	low _WayBack
  1788   00254C  0101               	movlb	1	; () banked
  1789   00254E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1790   002550  6ED9               	movwf	fsr2l,c
  1791   002552  0E01               	movlw	high _WayBack
  1792   002554  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1793   002556  6EDA               	movwf	fsr2h,c
  1794   002558  0E01               	movlw	1
  1795   00255A  6EDF               	movwf	indf2,c
  1796   00255C                     l5739:
  1797                           
  1798                           ; BSR set to: 1
  1799                           ;main.c: 115:                 lost_count=0;
  1800   00255C  0E00               	movlw	0
  1801   00255E  6FDB               	movwf	(main@lost_count+1)& (0+255),b
  1802   002560  0E00               	movlw	0
  1803   002562  6FDA               	movwf	main@lost_count& (0+255),b
  1804                           
  1805                           ;main.c: 116:             }
  1806   002564  EFE3  F013         	goto	l5839
  1807   002568                     l5741:
  1808                           
  1809                           ; BSR set to: 1
  1810   002568  0E02               	movlw	2
  1811   00256A  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1812   00256C  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1813   00256E  A4D8               	btfss	status,2,c
  1814   002570  EFBC  F012         	goto	u5671
  1815   002574  EFBE  F012         	goto	u5670
  1816   002578                     u5671:
  1817   002578  EFD7  F012         	goto	l5753
  1818   00257C                     u5670:
  1819   00257C                     
  1820                           ; BSR set to: 1
  1821                           ;main.c: 118:                 OrangeMove(&motorL, &motorR);
  1822   00257C  0E61               	movlw	low _motorL
  1823   00257E  6E20               	movwf	OrangeMove@mL^0,c
  1824   002580  0E01               	movlw	high _motorL
  1825   002582  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1826   002584  0E58               	movlw	low _motorR
  1827   002586  6E22               	movwf	OrangeMove@mR^0,c
  1828   002588  0E01               	movlw	high _motorR
  1829   00258A  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1830   00258C  EC5F  F02C         	call	_OrangeMove	;wreg free
  1831   002590                     
  1832                           ;main.c: 119:                 TMR0H=0;
  1833   002590  0E00               	movlw	0
  1834   002592  6ED4               	movwf	212,c	;volatile
  1835   002594                     
  1836                           ;main.c: 120:                 TMR0L=0;
  1837   002594  0E00               	movlw	0
  1838   002596  6ED3               	movwf	211,c	;volatile
  1839   002598                     
  1840                           ;main.c: 121:                 WayBack[move_count]=2;
  1841   002598  0E1A               	movlw	low _WayBack
  1842   00259A  0101               	movlb	1	; () banked
  1843   00259C  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1844   00259E  6ED9               	movwf	fsr2l,c
  1845   0025A0  0E01               	movlw	high _WayBack
  1846   0025A2  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1847   0025A4  6EDA               	movwf	fsr2h,c
  1848   0025A6  0E02               	movlw	2
  1849   0025A8  6EDF               	movwf	indf2,c
  1850   0025AA  EFAE  F012         	goto	l5739
  1851   0025AE                     l5753:
  1852                           
  1853                           ; BSR set to: 1
  1854   0025AE  0E03               	movlw	3
  1855   0025B0  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1856   0025B2  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1857   0025B4  A4D8               	btfss	status,2,c
  1858   0025B6  EFDF  F012         	goto	u5681
  1859   0025BA  EFE1  F012         	goto	u5680
  1860   0025BE                     u5681:
  1861   0025BE  EFFA  F012         	goto	l5765
  1862   0025C2                     u5680:
  1863   0025C2                     
  1864                           ; BSR set to: 1
  1865                           ;main.c: 125:                 YellowMove(&motorL, &motorR);
  1866   0025C2  0E61               	movlw	low _motorL
  1867   0025C4  6E20               	movwf	YellowMove@mL^0,c
  1868   0025C6  0E01               	movlw	high _motorL
  1869   0025C8  6E21               	movwf	(YellowMove@mL+1)^0,c
  1870   0025CA  0E58               	movlw	low _motorR
  1871   0025CC  6E22               	movwf	YellowMove@mR^0,c
  1872   0025CE  0E01               	movlw	high _motorR
  1873   0025D0  6E23               	movwf	(YellowMove@mR+1)^0,c
  1874   0025D2  ECDA  F02C         	call	_YellowMove	;wreg free
  1875   0025D6                     
  1876                           ;main.c: 126:                 TMR0H=0;
  1877   0025D6  0E00               	movlw	0
  1878   0025D8  6ED4               	movwf	212,c	;volatile
  1879   0025DA                     
  1880                           ;main.c: 127:                 TMR0L=0;
  1881   0025DA  0E00               	movlw	0
  1882   0025DC  6ED3               	movwf	211,c	;volatile
  1883   0025DE                     
  1884                           ;main.c: 128:                 WayBack[move_count]=3;
  1885   0025DE  0E1A               	movlw	low _WayBack
  1886   0025E0  0101               	movlb	1	; () banked
  1887   0025E2  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1888   0025E4  6ED9               	movwf	fsr2l,c
  1889   0025E6  0E01               	movlw	high _WayBack
  1890   0025E8  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1891   0025EA  6EDA               	movwf	fsr2h,c
  1892   0025EC  0E03               	movlw	3
  1893   0025EE  6EDF               	movwf	indf2,c
  1894   0025F0  EFAE  F012         	goto	l5739
  1895   0025F4                     l5765:
  1896                           
  1897                           ; BSR set to: 1
  1898   0025F4  0E04               	movlw	4
  1899   0025F6  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1900   0025F8  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1901   0025FA  A4D8               	btfss	status,2,c
  1902   0025FC  EF02  F013         	goto	u5691
  1903   002600  EF04  F013         	goto	u5690
  1904   002604                     u5691:
  1905   002604  EF1D  F013         	goto	l5777
  1906   002608                     u5690:
  1907   002608                     
  1908                           ; BSR set to: 1
  1909                           ;main.c: 132:                 BlueMove(&motorL, &motorR);
  1910   002608  0E61               	movlw	low _motorL
  1911   00260A  6E20               	movwf	BlueMove@mL^0,c
  1912   00260C  0E01               	movlw	high _motorL
  1913   00260E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1914   002610  0E58               	movlw	low _motorR
  1915   002612  6E22               	movwf	BlueMove@mR^0,c
  1916   002614  0E01               	movlw	high _motorR
  1917   002616  6E23               	movwf	(BlueMove@mR+1)^0,c
  1918   002618  ECC6  F02A         	call	_BlueMove	;wreg free
  1919   00261C                     
  1920                           ;main.c: 133:                 TMR0H=0;
  1921   00261C  0E00               	movlw	0
  1922   00261E  6ED4               	movwf	212,c	;volatile
  1923   002620                     
  1924                           ;main.c: 134:                 TMR0L=0;
  1925   002620  0E00               	movlw	0
  1926   002622  6ED3               	movwf	211,c	;volatile
  1927   002624                     
  1928                           ;main.c: 135:                 WayBack[move_count]=4;
  1929   002624  0E1A               	movlw	low _WayBack
  1930   002626  0101               	movlb	1	; () banked
  1931   002628  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1932   00262A  6ED9               	movwf	fsr2l,c
  1933   00262C  0E01               	movlw	high _WayBack
  1934   00262E  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1935   002630  6EDA               	movwf	fsr2h,c
  1936   002632  0E04               	movlw	4
  1937   002634  6EDF               	movwf	indf2,c
  1938   002636  EFAE  F012         	goto	l5739
  1939   00263A                     l5777:
  1940                           
  1941                           ; BSR set to: 1
  1942   00263A  0E05               	movlw	5
  1943   00263C  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1944   00263E  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1945   002640  A4D8               	btfss	status,2,c
  1946   002642  EF25  F013         	goto	u5701
  1947   002646  EF27  F013         	goto	u5700
  1948   00264A                     u5701:
  1949   00264A  EF40  F013         	goto	l5789
  1950   00264E                     u5700:
  1951   00264E                     
  1952                           ; BSR set to: 1
  1953                           ;main.c: 139:                 GreenMove(&motorL, &motorR);
  1954   00264E  0E61               	movlw	low _motorL
  1955   002650  6E20               	movwf	GreenMove@mL^0,c
  1956   002652  0E01               	movlw	high _motorL
  1957   002654  6E21               	movwf	(GreenMove@mL+1)^0,c
  1958   002656  0E58               	movlw	low _motorR
  1959   002658  6E22               	movwf	GreenMove@mR^0,c
  1960   00265A  0E01               	movlw	high _motorR
  1961   00265C  6E23               	movwf	(GreenMove@mR+1)^0,c
  1962   00265E  EC30  F02F         	call	_GreenMove	;wreg free
  1963   002662                     
  1964                           ;main.c: 140:                 TMR0H=0;
  1965   002662  0E00               	movlw	0
  1966   002664  6ED4               	movwf	212,c	;volatile
  1967   002666                     
  1968                           ;main.c: 141:                 TMR0L=0;
  1969   002666  0E00               	movlw	0
  1970   002668  6ED3               	movwf	211,c	;volatile
  1971   00266A                     
  1972                           ;main.c: 142:                 WayBack[move_count]=5;
  1973   00266A  0E1A               	movlw	low _WayBack
  1974   00266C  0101               	movlb	1	; () banked
  1975   00266E  2514               	addwf	_move_count& (0+255),w,b	;volatile
  1976   002670  6ED9               	movwf	fsr2l,c
  1977   002672  0E01               	movlw	high _WayBack
  1978   002674  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1979   002676  6EDA               	movwf	fsr2h,c
  1980   002678  0E05               	movlw	5
  1981   00267A  6EDF               	movwf	indf2,c
  1982   00267C  EFAE  F012         	goto	l5739
  1983   002680                     l5789:
  1984                           
  1985                           ; BSR set to: 1
  1986   002680  0E06               	movlw	6
  1987   002682  19DC               	xorwf	main@prev_colour& (0+255),w,b
  1988   002684  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1989   002686  A4D8               	btfss	status,2,c
  1990   002688  EF48  F013         	goto	u5711
  1991   00268C  EF4A  F013         	goto	u5710
  1992   002690                     u5711:
  1993   002690  EF63  F013         	goto	l5801
  1994   002694                     u5710:
  1995   002694                     
  1996                           ; BSR set to: 1
  1997                           ;main.c: 146:                 LightBlueMove(&motorL, &motorR);
  1998   002694  0E61               	movlw	low _motorL
  1999   002696  6E20               	movwf	LightBlueMove@mL^0,c
  2000   002698  0E01               	movlw	high _motorL
  2001   00269A  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2002   00269C  0E58               	movlw	low _motorR
  2003   00269E  6E22               	movwf	LightBlueMove@mR^0,c
  2004   0026A0  0E01               	movlw	high _motorR
  2005   0026A2  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2006   0026A4  EC88  F02C         	call	_LightBlueMove	;wreg free
  2007   0026A8                     
  2008                           ;main.c: 147:                 TMR0H=0;
  2009   0026A8  0E00               	movlw	0
  2010   0026AA  6ED4               	movwf	212,c	;volatile
  2011   0026AC                     
  2012                           ;main.c: 148:                 TMR0L=0;
  2013   0026AC  0E00               	movlw	0
  2014   0026AE  6ED3               	movwf	211,c	;volatile
  2015   0026B0                     
  2016                           ;main.c: 149:                 WayBack[move_count]=6;
  2017   0026B0  0E1A               	movlw	low _WayBack
  2018   0026B2  0101               	movlb	1	; () banked
  2019   0026B4  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2020   0026B6  6ED9               	movwf	fsr2l,c
  2021   0026B8  0E01               	movlw	high _WayBack
  2022   0026BA  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2023   0026BC  6EDA               	movwf	fsr2h,c
  2024   0026BE  0E06               	movlw	6
  2025   0026C0  6EDF               	movwf	indf2,c
  2026   0026C2  EFAE  F012         	goto	l5739
  2027   0026C6                     l5801:
  2028                           
  2029                           ; BSR set to: 1
  2030   0026C6  0E07               	movlw	7
  2031   0026C8  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2032   0026CA  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2033   0026CC  A4D8               	btfss	status,2,c
  2034   0026CE  EF6B  F013         	goto	u5721
  2035   0026D2  EF6D  F013         	goto	u5720
  2036   0026D6                     u5721:
  2037   0026D6  EF86  F013         	goto	l5813
  2038   0026DA                     u5720:
  2039   0026DA                     
  2040                           ; BSR set to: 1
  2041                           ;main.c: 153:                 PinkMove(&motorL, &motorR);
  2042   0026DA  0E61               	movlw	low _motorL
  2043   0026DC  6E20               	movwf	PinkMove@mL^0,c
  2044   0026DE  0E01               	movlw	high _motorL
  2045   0026E0  6E21               	movwf	(PinkMove@mL+1)^0,c
  2046   0026E2  0E58               	movlw	low _motorR
  2047   0026E4  6E22               	movwf	PinkMove@mR^0,c
  2048   0026E6  0E01               	movlw	high _motorR
  2049   0026E8  6E23               	movwf	(PinkMove@mR+1)^0,c
  2050   0026EA  EC03  F02D         	call	_PinkMove	;wreg free
  2051   0026EE                     
  2052                           ;main.c: 154:                 TMR0H=0;
  2053   0026EE  0E00               	movlw	0
  2054   0026F0  6ED4               	movwf	212,c	;volatile
  2055   0026F2                     
  2056                           ;main.c: 155:                 TMR0L=0;
  2057   0026F2  0E00               	movlw	0
  2058   0026F4  6ED3               	movwf	211,c	;volatile
  2059   0026F6                     
  2060                           ;main.c: 156:                 WayBack[move_count]=7;
  2061   0026F6  0E1A               	movlw	low _WayBack
  2062   0026F8  0101               	movlb	1	; () banked
  2063   0026FA  2514               	addwf	_move_count& (0+255),w,b	;volatile
  2064   0026FC  6ED9               	movwf	fsr2l,c
  2065   0026FE  0E01               	movlw	high _WayBack
  2066   002700  2115               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2067   002702  6EDA               	movwf	fsr2h,c
  2068   002704  0E07               	movlw	7
  2069   002706  6EDF               	movwf	indf2,c
  2070   002708  EFAE  F012         	goto	l5739
  2071   00270C                     l5813:
  2072                           
  2073                           ; BSR set to: 1
  2074   00270C  0E0A               	movlw	10
  2075   00270E  19DC               	xorwf	main@prev_colour& (0+255),w,b
  2076   002710  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2077   002712  A4D8               	btfss	status,2,c
  2078   002714  EF8E  F013         	goto	u5731
  2079   002718  EF90  F013         	goto	u5730
  2080   00271C                     u5731:
  2081   00271C  EFBC  F013         	goto	l5827
  2082   002720                     u5730:
  2083   002720                     
  2084                           ; BSR set to: 1
  2085                           ;main.c: 160:                 lost_count++;
  2086   002720  4BDA               	infsnz	main@lost_count& (0+255),f,b
  2087   002722  2BDB               	incf	(main@lost_count+1)& (0+255),f,b
  2088   002724                     
  2089                           ; BSR set to: 1
  2090                           ;main.c: 161:                 if (lost_count>=3){
  2091   002724  BFDB               	btfsc	(main@lost_count+1)& (0+255),7,b
  2092   002726  EF9E  F013         	goto	u5741
  2093   00272A  51DB               	movf	(main@lost_count+1)& (0+255),w,b
  2094   00272C  E109               	bnz	u5740
  2095   00272E  0E03               	movlw	3
  2096   002730  5DDA               	subwf	main@lost_count& (0+255),w,b
  2097   002732  A0D8               	btfss	status,0,c
  2098   002734  EF9E  F013         	goto	u5741
  2099   002738  EFA0  F013         	goto	u5740
  2100   00273C                     u5741:
  2101   00273C  EFAC  F013         	goto	l5821
  2102   002740                     u5740:
  2103   002740                     l5819:
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;main.c: 162:                     go_Home(WayBack, Time_forward);
  2107   002740  0E1A               	movlw	low _WayBack
  2108   002742  6E24               	movwf	go_Home@WayBack^0,c
  2109   002744  0E01               	movlw	high _WayBack
  2110   002746  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2111   002748  0E3C               	movlw	low _Time_forward
  2112   00274A  6E26               	movwf	go_Home@Time_forward^0,c
  2113   00274C  0E02               	movlw	high _Time_forward
  2114   00274E  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2115   002750  EC4B  F01D         	call	_go_Home	;wreg free
  2116                           
  2117                           ;main.c: 163:                 }
  2118   002754  EFE3  F013         	goto	l5839
  2119   002758                     l5821:
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;main.c: 165:                     RetryMove(&motorL, &motorR);
  2123   002758  0E61               	movlw	low _motorL
  2124   00275A  6E20               	movwf	RetryMove@mL^0,c
  2125   00275C  0E01               	movlw	high _motorL
  2126   00275E  6E21               	movwf	(RetryMove@mL+1)^0,c
  2127   002760  0E58               	movlw	low _motorR
  2128   002762  6E22               	movwf	RetryMove@mR^0,c
  2129   002764  0E01               	movlw	high _motorR
  2130   002766  6E23               	movwf	(RetryMove@mR+1)^0,c
  2131   002768  EC5E  F02A         	call	_RetryMove	;wreg free
  2132   00276C                     
  2133                           ;main.c: 166:                     TMR0H=0;
  2134   00276C  0E00               	movlw	0
  2135   00276E  6ED4               	movwf	212,c	;volatile
  2136   002770                     
  2137                           ;main.c: 167:                     TMR0L=0;
  2138   002770  0E00               	movlw	0
  2139   002772  6ED3               	movwf	211,c	;volatile
  2140   002774  EFE3  F013         	goto	l5839
  2141   002778                     l5827:
  2142                           
  2143                           ; BSR set to: 1
  2144   002778  51DC               	movf	main@prev_colour& (0+255),w,b
  2145   00277A  11DD               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2146   00277C  A4D8               	btfss	status,2,c
  2147   00277E  EFC3  F013         	goto	u5751
  2148   002782  EFC5  F013         	goto	u5750
  2149   002786                     u5751:
  2150   002786  EFC7  F013         	goto	l362
  2151   00278A                     u5750:
  2152   00278A  EFA0  F013         	goto	l5819
  2153   00278E                     l362:
  2154                           
  2155                           ; BSR set to: 1
  2156   00278E  EFE3  F013         	goto	l5839
  2157   002792                     l5831:
  2158                           
  2159                           ; BSR set to: 1
  2160   002792  5118               	movf	_lost_flag& (0+255),w,b
  2161   002794  1119               	iorwf	(_lost_flag+1)& (0+255),w,b
  2162   002796  B4D8               	btfsc	status,2,c
  2163   002798  EFD0  F013         	goto	u5761
  2164   00279C  EFD2  F013         	goto	u5760
  2165   0027A0                     u5761:
  2166   0027A0  EFE3  F013         	goto	l5839
  2167   0027A4                     u5760:
  2168   0027A4                     
  2169                           ; BSR set to: 1
  2170                           ;main.c: 174:             move_count++;
  2171   0027A4  4B14               	infsnz	_move_count& (0+255),f,b	;volatile
  2172   0027A6  2B15               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2173   0027A8                     
  2174                           ; BSR set to: 1
  2175                           ;main.c: 175:             Time_forward[move_count]=65535;
  2176   0027A8  90D8               	bcf	status,0,c
  2177   0027AA  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  2178   0027AC  6ED9               	movwf	fsr2l,c
  2179   0027AE  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  2180   0027B0  6EDA               	movwf	fsr2h,c
  2181   0027B2  0E3C               	movlw	low _Time_forward
  2182   0027B4  26D9               	addwf	fsr2l,f,c
  2183   0027B6  0E02               	movlw	high _Time_forward
  2184   0027B8  22DA               	addwfc	fsr2h,f,c
  2185   0027BA  0EFF               	movlw	255
  2186   0027BC  6EDE               	movwf	postinc2,c
  2187   0027BE  0EFF               	movlw	255
  2188   0027C0  6EDD               	movwf	postdec2,c
  2189   0027C2  EFA0  F013         	goto	l5819
  2190   0027C6                     l5839:
  2191                           
  2192                           ;main.c: 68:     while (run_flag)
  2193   0027C6  0101               	movlb	1	; () banked
  2194   0027C8  5116               	movf	_run_flag& (0+255),w,b
  2195   0027CA  1117               	iorwf	(_run_flag+1)& (0+255),w,b
  2196   0027CC  A4D8               	btfss	status,2,c
  2197   0027CE  EFEB  F013         	goto	u5771
  2198   0027D2  EFED  F013         	goto	u5770
  2199   0027D6                     u5771:
  2200   0027D6  EFC2  F011         	goto	l5689
  2201   0027DA                     u5770:
  2202   0027DA                     
  2203                           ; BSR set to: 1
  2204   0027DA  EF1A  F000         	goto	start
  2205   0027DE                     __end_of_main:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _turnCalibration *****************
  2209 ;; Defined at:
  2210 ;;		line 357 in file "dc_motor.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2213 ;;		 -> motorL(9), 
  2214 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2215 ;;		 -> motorR(9), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;Total ram usage:        6 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 5
  2234 ;; This function calls:
  2235 ;;		_turnLeft45
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text1
  2242   0043BA                     __ptext1:
  2243                           	callstack 0
  2244   0043BA                     _turnCalibration:
  2245                           	callstack 25
  2246   0043BA                     
  2247                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2248   0043BA  807E               	bsf	126,0,c	;volatile
  2249   0043BC                     
  2250                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2251   0043BC  0E52               	movlw	82
  2252   0043BE  6E25               	movwf	(??_turnCalibration+1)^0,c
  2253   0043C0  0E2B               	movlw	43
  2254   0043C2  6E24               	movwf	??_turnCalibration^0,c
  2255   0043C4  0E00               	movlw	0
  2256   0043C6                     u5877:
  2257   0043C6  2EE8               	decfsz	wreg,f,c
  2258   0043C8  D7FE               	bra	u5877
  2259   0043CA  2E24               	decfsz	??_turnCalibration^0,f,c
  2260   0043CC  D7FC               	bra	u5877
  2261   0043CE  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2262   0043D0  D7FA               	bra	u5877
  2263   0043D2  D000               	nop2	
  2264                           
  2265                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2266   0043D4  EF97  F022         	goto	l5535
  2267   0043D8                     l552:
  2268                           
  2269                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2270   0043D8  867C               	bsf	124,3,c	;volatile
  2271   0043DA                     
  2272                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2273   0043DA  0E61               	movlw	low _motorL
  2274   0043DC  6E1A               	movwf	turnLeft45@mL^0,c
  2275   0043DE  0E01               	movlw	high _motorL
  2276   0043E0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2277   0043E2  0E58               	movlw	low _motorR
  2278   0043E4  6E1C               	movwf	turnLeft45@mR^0,c
  2279   0043E6  0E01               	movlw	high _motorR
  2280   0043E8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2281   0043EA  EC42  F02E         	call	_turnLeft45	;wreg free
  2282                           
  2283                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2284   0043EE  0E61               	movlw	low _motorL
  2285   0043F0  6E1A               	movwf	turnLeft45@mL^0,c
  2286   0043F2  0E01               	movlw	high _motorL
  2287   0043F4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2288   0043F6  0E58               	movlw	low _motorR
  2289   0043F8  6E1C               	movwf	turnLeft45@mR^0,c
  2290   0043FA  0E01               	movlw	high _motorR
  2291   0043FC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2292   0043FE  EC42  F02E         	call	_turnLeft45	;wreg free
  2293                           
  2294                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2295   004402  0E61               	movlw	low _motorL
  2296   004404  6E1A               	movwf	turnLeft45@mL^0,c
  2297   004406  0E01               	movlw	high _motorL
  2298   004408  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2299   00440A  0E58               	movlw	low _motorR
  2300   00440C  6E1C               	movwf	turnLeft45@mR^0,c
  2301   00440E  0E01               	movlw	high _motorR
  2302   004410  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2303   004412  EC42  F02E         	call	_turnLeft45	;wreg free
  2304                           
  2305                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2306   004416  0E61               	movlw	low _motorL
  2307   004418  6E1A               	movwf	turnLeft45@mL^0,c
  2308   00441A  0E01               	movlw	high _motorL
  2309   00441C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2310   00441E  0E58               	movlw	low _motorR
  2311   004420  6E1C               	movwf	turnLeft45@mR^0,c
  2312   004422  0E01               	movlw	high _motorR
  2313   004424  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2314   004426  EC42  F02E         	call	_turnLeft45	;wreg free
  2315                           
  2316                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2317   00442A  EF7C  F022         	goto	l5529
  2318   00442E                     l554:
  2319                           
  2320                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2321   00442E  887C               	bsf	124,4,c	;volatile
  2322   004430                     
  2323                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2324   004430  0EA3               	movlw	163
  2325   004432  6E25               	movwf	(??_turnCalibration+1)^0,c
  2326   004434  0E57               	movlw	87
  2327   004436  6E24               	movwf	??_turnCalibration^0,c
  2328   004438  0E02               	movlw	2
  2329   00443A                     u5887:
  2330   00443A  2EE8               	decfsz	wreg,f,c
  2331   00443C  D7FE               	bra	u5887
  2332   00443E  2E24               	decfsz	??_turnCalibration^0,f,c
  2333   004440  D7FC               	bra	u5887
  2334   004442  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2335   004444  D7FA               	bra	u5887
  2336   004446  D000               	nop2	
  2337   004448                     
  2338                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  2339   004448  B68E               	btfsc	142,3,c	;volatile
  2340   00444A  EF29  F022         	goto	u5441
  2341   00444E  EF2B  F022         	goto	u5440
  2342   004452                     u5441:
  2343   004452  EF44  F022         	goto	l555
  2344   004456                     u5440:
  2345   004456  B48E               	btfsc	142,2,c	;volatile
  2346   004458  EF30  F022         	goto	u5451
  2347   00445C  EF32  F022         	goto	u5450
  2348   004460                     u5451:
  2349   004460  EF44  F022         	goto	l555
  2350   004464                     u5450:
  2351   004464                     
  2352                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2353   004464  8680               	bsf	128,3,c	;volatile
  2354                           
  2355                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2356   004466  8E7C               	bsf	124,7,c	;volatile
  2357   004468                     
  2358                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2359   004468  0E52               	movlw	82
  2360   00446A  6E25               	movwf	(??_turnCalibration+1)^0,c
  2361   00446C  0E2B               	movlw	43
  2362   00446E  6E24               	movwf	??_turnCalibration^0,c
  2363   004470  0E00               	movlw	0
  2364   004472                     u5897:
  2365   004472  2EE8               	decfsz	wreg,f,c
  2366   004474  D7FE               	bra	u5897
  2367   004476  2E24               	decfsz	??_turnCalibration^0,f,c
  2368   004478  D7FC               	bra	u5897
  2369   00447A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2370   00447C  D7FA               	bra	u5897
  2371   00447E  D000               	nop2	
  2372   004480                     
  2373                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2374   004480  9680               	bcf	128,3,c	;volatile
  2375   004482                     
  2376                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2377   004482  9E7C               	bcf	124,7,c	;volatile
  2378                           
  2379                           ;dc_motor.c: 380:             }
  2380   004484  EF7C  F022         	goto	l5529
  2381   004488                     l555:
  2382   004488  B68E               	btfsc	142,3,c	;volatile
  2383   00448A  EF49  F022         	goto	u5461
  2384   00448E  EF4B  F022         	goto	u5460
  2385   004492                     u5461:
  2386   004492  EF60  F022         	goto	l557
  2387   004496                     u5460:
  2388   004496                     
  2389                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2390   004496  0E0A               	movlw	10
  2391   004498  0100               	movlb	0	; () banked
  2392   00449A  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2393   00449C  0E00               	movlw	0
  2394   00449E  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2395   0044A0                     
  2396                           ; BSR set to: 0
  2397                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2398   0044A0  8680               	bsf	128,3,c	;volatile
  2399   0044A2                     
  2400                           ; BSR set to: 0
  2401                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2402   0044A2  0E52               	movlw	82
  2403   0044A4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2404   0044A6  0E2B               	movlw	43
  2405   0044A8  6E24               	movwf	??_turnCalibration^0,c
  2406   0044AA  0E00               	movlw	0
  2407   0044AC                     u5907:
  2408   0044AC  2EE8               	decfsz	wreg,f,c
  2409   0044AE  D7FE               	bra	u5907
  2410   0044B0  2E24               	decfsz	??_turnCalibration^0,f,c
  2411   0044B2  D7FC               	bra	u5907
  2412   0044B4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2413   0044B6  D7FA               	bra	u5907
  2414   0044B8  D000               	nop2	
  2415   0044BA                     
  2416                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2417   0044BA  9680               	bcf	128,3,c	;volatile
  2418                           
  2419                           ;dc_motor.c: 387:             }
  2420   0044BC  EF7C  F022         	goto	l5529
  2421   0044C0                     l557:
  2422   0044C0  B48E               	btfsc	142,2,c	;volatile
  2423   0044C2  EF65  F022         	goto	u5471
  2424   0044C6  EF67  F022         	goto	u5470
  2425   0044CA                     u5471:
  2426   0044CA  EF7C  F022         	goto	l556
  2427   0044CE                     u5470:
  2428   0044CE                     
  2429                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2430   0044CE  0100               	movlb	0	; () banked
  2431   0044D0  0EF6               	movlw	246
  2432   0044D2  27F2               	addwf	_Turn45Delay& (0+255),f,b
  2433   0044D4  0EFF               	movlw	255
  2434   0044D6  23F3               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2435   0044D8                     
  2436                           ; BSR set to: 0
  2437                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2438   0044D8  8E7C               	bsf	124,7,c	;volatile
  2439   0044DA                     
  2440                           ; BSR set to: 0
  2441                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2442   0044DA  0E52               	movlw	82
  2443   0044DC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2444   0044DE  0E2B               	movlw	43
  2445   0044E0  6E24               	movwf	??_turnCalibration^0,c
  2446   0044E2  0E00               	movlw	0
  2447   0044E4                     u5917:
  2448   0044E4  2EE8               	decfsz	wreg,f,c
  2449   0044E6  D7FE               	bra	u5917
  2450   0044E8  2E24               	decfsz	??_turnCalibration^0,f,c
  2451   0044EA  D7FC               	bra	u5917
  2452   0044EC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2453   0044EE  D7FA               	bra	u5917
  2454   0044F0  D000               	nop2	
  2455   0044F2                     
  2456                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2457   0044F2  9E7C               	bcf	124,7,c	;volatile
  2458   0044F4  EF7C  F022         	goto	l5529
  2459   0044F8                     l556:
  2460   0044F8                     l5529:
  2461                           
  2462                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2463   0044F8  A48E               	btfss	142,2,c	;volatile
  2464   0044FA  EF81  F022         	goto	u5481
  2465   0044FE  EF83  F022         	goto	u5480
  2466   004502                     u5481:
  2467   004502  EF8A  F022         	goto	l562
  2468   004506                     u5480:
  2469   004506  B68E               	btfsc	142,3,c	;volatile
  2470   004508  EF88  F022         	goto	u5491
  2471   00450C  EF8A  F022         	goto	u5490
  2472   004510                     u5491:
  2473   004510  EF17  F022         	goto	l554
  2474   004514                     u5490:
  2475   004514                     l562:
  2476                           
  2477                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2478   004514  987C               	bcf	124,4,c	;volatile
  2479   004516                     
  2480                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2481   004516  0EA3               	movlw	163
  2482   004518  6E25               	movwf	(??_turnCalibration+1)^0,c
  2483   00451A  0E57               	movlw	87
  2484   00451C  6E24               	movwf	??_turnCalibration^0,c
  2485   00451E  0E02               	movlw	2
  2486   004520                     u5927:
  2487   004520  2EE8               	decfsz	wreg,f,c
  2488   004522  D7FE               	bra	u5927
  2489   004524  2E24               	decfsz	??_turnCalibration^0,f,c
  2490   004526  D7FC               	bra	u5927
  2491   004528  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2492   00452A  D7FA               	bra	u5927
  2493   00452C  D000               	nop2	
  2494   00452E                     l5535:
  2495                           
  2496                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2497   00452E  B48E               	btfsc	142,2,c	;volatile
  2498   004530  EF9C  F022         	goto	u5501
  2499   004534  EF9E  F022         	goto	u5500
  2500   004538                     u5501:
  2501   004538  EFEC  F021         	goto	l552
  2502   00453C                     u5500:
  2503   00453C  B68E               	btfsc	142,3,c	;volatile
  2504   00453E  EFA3  F022         	goto	u5511
  2505   004542  EFA5  F022         	goto	u5510
  2506   004546                     u5511:
  2507   004546  EFEC  F021         	goto	l552
  2508   00454A                     u5510:
  2509   00454A                     
  2510                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2511   00454A  967C               	bcf	124,3,c	;volatile
  2512   00454C                     
  2513                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2514   00454C  0EA3               	movlw	163
  2515   00454E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2516   004550  0E57               	movlw	87
  2517   004552  6E24               	movwf	??_turnCalibration^0,c
  2518   004554  0E02               	movlw	2
  2519   004556                     u5937:
  2520   004556  2EE8               	decfsz	wreg,f,c
  2521   004558  D7FE               	bra	u5937
  2522   00455A  2E24               	decfsz	??_turnCalibration^0,f,c
  2523   00455C  D7FC               	bra	u5937
  2524   00455E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2525   004560  D7FA               	bra	u5937
  2526   004562  D000               	nop2	
  2527   004564  0012               	return		;funcret
  2528   004566                     __end_of_turnCalibration:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function _sprintf *****************
  2532 ;; Defined at:
  2533 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2536 ;;		 -> main@buf(100), 
  2537 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2538 ;;		 -> STR_1(51), 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2541 ;;  ap              2  100[BANK0 ] PTR void [1]
  2542 ;;		 -> ?_sprintf(2), 
  2543 ;;  ret             2    0        int 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  2   80[BANK0 ] int 
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2553 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2554 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2556 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;Total ram usage:       33 bytes
  2558 ;; Hardware stack levels used: 1
  2559 ;; Hardware stack levels required when called: 8
  2560 ;; This function calls:
  2561 ;;		_vfprintf
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text2
  2568   00586C                     __ptext2:
  2569                           	callstack 0
  2570   00586C                     _sprintf:
  2571                           	callstack 22
  2572   00586C  0EB4               	movlw	low (?_sprintf+4)
  2573   00586E  0100               	movlb	0	; () banked
  2574   005870  6FC4               	movwf	sprintf@ap& (0+255),b
  2575   005872  0E00               	movlw	high (?_sprintf+4)
  2576   005874  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2577   005876  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2578   00587A  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2579   00587E                     
  2580                           ; BSR set to: 0
  2581   00587E  0E00               	movlw	0
  2582   005880  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2583   005882  0E00               	movlw	0
  2584   005884  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2585   005886                     
  2586                           ; BSR set to: 0
  2587   005886  0E00               	movlw	0
  2588   005888  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2589   00588A  0E00               	movlw	0
  2590   00588C  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2591   00588E                     
  2592                           ; BSR set to: 0
  2593   00588E  0EC6               	movlw	low sprintf@f
  2594   005890  6FA8               	movwf	vfprintf@fp& (0+255),b
  2595   005892  0E00               	movlw	high sprintf@f
  2596   005894  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2597   005896  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2598   00589A  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2599   00589E  0EC4               	movlw	low sprintf@ap
  2600   0058A0  6FAC               	movwf	vfprintf@ap& (0+255),b
  2601   0058A2  0E00               	movlw	high sprintf@ap
  2602   0058A4  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2603   0058A6  EC0B  F02C         	call	_vfprintf	;wreg free
  2604   0058AA  0100               	movlb	0	; () banked
  2605   0058AC  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2606   0058AE  25B0               	addwf	sprintf@s& (0+255),w,b
  2607   0058B0  6ED9               	movwf	fsr2l,c
  2608   0058B2  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2609   0058B4  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2610   0058B6  6EDA               	movwf	fsr2h,c
  2611   0058B8  0E00               	movlw	0
  2612   0058BA  6EDF               	movwf	indf2,c
  2613   0058BC                     
  2614                           ; BSR set to: 0
  2615   0058BC  0012               	return		;funcret
  2616   0058BE                     __end_of_sprintf:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _vfprintf *****************
  2620 ;; Defined at:
  2621 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2624 ;;		 -> sprintf@f(11), 
  2625 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2626 ;;		 -> STR_1(51), 
  2627 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2628 ;;		 -> sprintf@ap(2), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2631 ;;		 -> STR_1(51), 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2   72[BANK0 ] int 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2641 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;Total ram usage:        8 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 7
  2648 ;; This function calls:
  2649 ;;		_vfpfcnvrt
  2650 ;; This function is called by:
  2651 ;;		_sprintf
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text3
  2656   005816                     __ptext3:
  2657                           	callstack 0
  2658   005816                     _vfprintf:
  2659                           	callstack 22
  2660   005816                     
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2662   005816  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2663   00581A  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2666   00581E  EF20  F02C         	goto	l5209
  2667   005822                     l5207:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2670   005822  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2671   005826  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2672   00582A  0EAE               	movlw	low vfprintf@cfmt
  2673   00582C  0100               	movlb	0	; () banked
  2674   00582E  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2675   005830  0E00               	movlw	high vfprintf@cfmt
  2676   005832  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2677   005834  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2678   005838  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2679   00583C  ECC8  F01B         	call	_vfpfcnvrt	;wreg free
  2680   005840                     l5209:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2683   005840  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2684   005844  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2685   005848                     	if	0	;tblptru may be non-zero
  2686   005848                     	endif
  2687   005848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2688   005848  0E00               	movlw	low (__mediumconst shr (0+16))
  2689   00584A  6EF8               	movwf	tblptru,c
  2690   00584C                     	endif
  2691   00584C  0008               	tblrd		*
  2692   00584E  50F5               	movf	tablat,w,c
  2693   005850  0900               	iorlw	0
  2694   005852  A4D8               	btfss	status,2,c
  2695   005854  EF2E  F02C         	goto	u5111
  2696   005858  EF30  F02C         	goto	u5110
  2697   00585C                     u5111:
  2698   00585C  EF11  F02C         	goto	l5207
  2699   005860                     u5110:
  2700   005860                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2702   005860  0E00               	movlw	0
  2703   005862  0100               	movlb	0	; () banked
  2704   005864  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2705   005866  0E00               	movlw	0
  2706   005868  6FA8               	movwf	?_vfprintf& (0+255),b
  2707   00586A                     
  2708                           ; BSR set to: 0
  2709   00586A  0012               	return		;funcret
  2710   00586C                     __end_of_vfprintf:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function _vfpfcnvrt *****************
  2714 ;; Defined at:
  2715 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2718 ;;		 -> sprintf@f(11), 
  2719 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2720 ;;		 -> vfprintf@cfmt(2), 
  2721 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2722 ;;		 -> sprintf@ap(2), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  convarg         8   61[BANK0 ] struct .
  2725 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2726 ;;		 -> STR_1(51), 
  2727 ;;  i               2    0        int 
  2728 ;;  done            2    0        int 
  2729 ;;  c               1   69[BANK0 ] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2739 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2740 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;Total ram usage:       19 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 6
  2746 ;; This function calls:
  2747 ;;		_dtoa
  2748 ;;		_efgtoa
  2749 ;;		_fputc
  2750 ;; This function is called by:
  2751 ;;		_vfprintf
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text4
  2756   003790                     __ptext4:
  2757                           	callstack 0
  2758   003790                     _vfpfcnvrt:
  2759                           	callstack 22
  2760   003790                     
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2762   003790  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2763   003794  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2764   003798  CFDE FFF6          	movff	postinc2,tblptrl
  2765   00379C  CFDD FFF7          	movff	postdec2,tblptrh
  2766   0037A0                     	if	0	;tblptru may be non-zero
  2767   0037A0                     	endif
  2768   0037A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2769   0037A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2770   0037A2  6EF8               	movwf	tblptru,c
  2771   0037A4                     	endif
  2772   0037A4  0008               	tblrd		*
  2773   0037A6  50F5               	movf	tablat,w,c
  2774   0037A8  0A25               	xorlw	37
  2775   0037AA  A4D8               	btfss	status,2,c
  2776   0037AC  EFDA  F01B         	goto	u4941
  2777   0037B0  EFDC  F01B         	goto	u4940
  2778   0037B4                     u4941:
  2779   0037B4  EF34  F01D         	goto	l5057
  2780   0037B8                     u4940:
  2781   0037B8                     
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2783   0037B8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2784   0037BC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2785   0037C0  2ADE               	incf	postinc2,f,c
  2786   0037C2  0E00               	movlw	0
  2787   0037C4  22DD               	addwfc	postdec2,f,c
  2788   0037C6                     
  2789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2790   0037C6  0E00               	movlw	0
  2791   0037C8  0100               	movlb	0	; () banked
  2792   0037CA  6FE8               	movwf	(_width+1)& (0+255),b
  2793   0037CC  0E00               	movlw	0
  2794   0037CE  6FE7               	movwf	_width& (0+255),b
  2795   0037D0  C0E7  F0EB         	movff	_width,_flags
  2796   0037D4                     
  2797                           ; BSR set to: 0
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2799   0037D4  69E9               	setf	_prec& (0+255),b
  2800   0037D6  69EA               	setf	(_prec+1)& (0+255),b
  2801   0037D8                     
  2802                           ; BSR set to: 0
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2804   0037D8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805   0037DC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806   0037E0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2807   0037E4  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2808   0037E8                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2811   0037E8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2812   0037EC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2813   0037F0                     	if	0	;tblptru may be non-zero
  2814   0037F0                     	endif
  2815   0037F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2816   0037F0  0E00               	movlw	low (__mediumconst shr (0+16))
  2817   0037F2  6EF8               	movwf	tblptru,c
  2818   0037F4                     	endif
  2819   0037F4  0008               	tblrd		*
  2820   0037F6  50F5               	movf	tablat,w,c
  2821   0037F8  0A64               	xorlw	100
  2822   0037FA  B4D8               	btfsc	status,2,c
  2823   0037FC  EF02  F01C         	goto	u4951
  2824   003800  EF04  F01C         	goto	u4950
  2825   003804                     u4951:
  2826   003804  EF14  F01C         	goto	l5013
  2827   003808                     u4950:
  2828   003808                     
  2829                           ; BSR set to: 0
  2830   003808  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2831   00380C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2832   003810                     	if	0	;tblptru may be non-zero
  2833   003810                     	endif
  2834   003810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2835   003810  0E00               	movlw	low (__mediumconst shr (0+16))
  2836   003812  6EF8               	movwf	tblptru,c
  2837   003814                     	endif
  2838   003814  0008               	tblrd		*
  2839   003816  50F5               	movf	tablat,w,c
  2840   003818  0A69               	xorlw	105
  2841   00381A  A4D8               	btfss	status,2,c
  2842   00381C  EF12  F01C         	goto	u4961
  2843   003820  EF14  F01C         	goto	u4960
  2844   003824                     u4961:
  2845   003824  EF57  F01C         	goto	l5019
  2846   003828                     u4960:
  2847   003828                     l5013:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2851   003828  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2852   00382C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2853   003830  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2854   003834  0E02               	movlw	2
  2855   003836  26DE               	addwf	postinc2,f,c
  2856   003838  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2857   00383C  0E00               	movlw	0
  2858   00383E  22DD               	addwfc	postdec2,f,c
  2859   003840  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2860   003844  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2861   003848  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2862   00384C  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2863   003850  0E00               	movlw	0
  2864   003852  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2865   003854  0EFF               	movlw	-1
  2866   003856  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2867   003858  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2868   00385A  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2869   00385C  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2870   00385E  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2871   003860  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2874   003862  0E01               	movlw	1
  2875   003864  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2876   003866  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2877   003868  0E00               	movlw	0
  2878   00386A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2879   00386C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2880   00386E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2881   003872  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2882   003876  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2883   00387A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2884   00387E                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2887   00387E  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2888   003882  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2889   003886  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2890   00388A  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2891   00388E  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2892   003892  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2893   003896  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2894   00389A  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2895   00389E  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2896   0038A2  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2897   0038A6  ECBB  F01E         	call	_dtoa	;wreg free
  2898   0038AA  EF4A  F01D         	goto	l1478
  2899   0038AE                     l5019:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2903   0038AE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904   0038B2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905   0038B6  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2906   0038BA  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2907   0038BE                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2910   0038BE  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2911   0038C2  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2912   0038C6                     	if	0	;tblptru may be non-zero
  2913   0038C6                     	endif
  2914   0038C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2915   0038C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2916   0038C8  6EF8               	movwf	tblptru,c
  2917   0038CA                     	endif
  2918   0038CA  0008               	tblrd		*
  2919   0038CC  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2922   0038D0  EF76  F01C         	goto	l5031
  2923   0038D4                     l5023:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2927   0038D4  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2928   0038D6  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2931   0038D8  EF8F  F01C         	goto	l5033
  2932   0038DC                     l5025:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2936   0038DC  0E6C               	movlw	108
  2937   0038DE  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2940   0038E0  EF8F  F01C         	goto	l5033
  2941   0038E4                     l5027:
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2945   0038E4  0E00               	movlw	0
  2946   0038E6  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2949   0038E8  EF8F  F01C         	goto	l5033
  2950   0038EC                     l5031:
  2951                           
  2952                           ; BSR set to: 0
  2953   0038EC  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2954   0038EE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2955   0038F0  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2956                           
  2957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2958                           ; Switch size 1, requested type "simple"
  2959                           ; Number of cases is 1, Range of values is 0 to 0
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte            4     3 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964   0038F2  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2965   0038F4  0A00               	xorlw	0	; case 0
  2966   0038F6  B4D8               	btfsc	status,2,c
  2967   0038F8  EF80  F01C         	goto	l5981
  2968   0038FC  EF72  F01C         	goto	l5027
  2969   003900                     l5981:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ; Switch size 1, requested type "simple"
  2973                           ; Number of cases is 3, Range of values is 76 to 108
  2974                           ; switch strategies available:
  2975                           ; Name         Instructions Cycles
  2976                           ; simple_byte           10     6 (average)
  2977                           ;	Chosen strategy is simple_byte
  2978   003900  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2979   003902  0A4C               	xorlw	76	; case 76
  2980   003904  B4D8               	btfsc	status,2,c
  2981   003906  EF6A  F01C         	goto	l5023
  2982   00390A  0A2A               	xorlw	42	; case 102
  2983   00390C  B4D8               	btfsc	status,2,c
  2984   00390E  EF6E  F01C         	goto	l5025
  2985   003912  0A0A               	xorlw	10	; case 108
  2986   003914  B4D8               	btfsc	status,2,c
  2987   003916  EF6A  F01C         	goto	l5023
  2988   00391A  EF72  F01C         	goto	l5027
  2989   00391E                     l5033:
  2990                           
  2991                           ; BSR set to: 0
  2992   00391E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2993   003922  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2994   003926                     	if	0	;tblptru may be non-zero
  2995   003926                     	endif
  2996   003926                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2997   003926  0E00               	movlw	low (__mediumconst shr (0+16))
  2998   003928  6EF8               	movwf	tblptru,c
  2999   00392A                     	endif
  3000   00392A  0008               	tblrd		*
  3001   00392C  50F5               	movf	tablat,w,c
  3002   00392E  0A66               	xorlw	102
  3003   003930  A4D8               	btfss	status,2,c
  3004   003932  EF9D  F01C         	goto	u4971
  3005   003936  EF9F  F01C         	goto	u4970
  3006   00393A                     u4971:
  3007   00393A  EF2B  F01D         	goto	l5053
  3008   00393E                     u4970:
  3009   00393E  EFD5  F01C         	goto	l5041
  3010   003942                     l5035:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3014   003942  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3015   003946  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3016   00394A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3017   00394E  0E04               	movlw	4
  3018   003950  26DE               	addwf	postinc2,f,c
  3019   003952  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3020   003956  0E00               	movlw	0
  3021   003958  22DD               	addwfc	postdec2,f,c
  3022   00395A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3023   00395E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3024   003962  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3025   003966  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3026   00396A  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3027   00396E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3030   003972  EFEA  F01C         	goto	l5043
  3031   003976                     l5037:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3035   003976  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3036   00397A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3037   00397E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3038   003982  0E04               	movlw	4
  3039   003984  26DE               	addwf	postinc2,f,c
  3040   003986  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3041   00398A  0E00               	movlw	0
  3042   00398C  22DD               	addwfc	postdec2,f,c
  3043   00398E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3044   003992  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3045   003996  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3046   00399A  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3047   00399E  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3048   0039A2  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3049                           
  3050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3051   0039A6  EFEA  F01C         	goto	l5043
  3052   0039AA                     l5041:
  3053                           
  3054                           ; BSR set to: 0
  3055   0039AA  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3056   0039AC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3057   0039AE  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3058                           
  3059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3060                           ; Switch size 1, requested type "simple"
  3061                           ; Number of cases is 1, Range of values is 0 to 0
  3062                           ; switch strategies available:
  3063                           ; Name         Instructions Cycles
  3064                           ; simple_byte            4     3 (average)
  3065                           ;	Chosen strategy is simple_byte
  3066   0039B0  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3067   0039B2  0A00               	xorlw	0	; case 0
  3068   0039B4  B4D8               	btfsc	status,2,c
  3069   0039B6  EFDF  F01C         	goto	l5983
  3070   0039BA  EFEA  F01C         	goto	l5043
  3071   0039BE                     l5983:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ; Switch size 1, requested type "simple"
  3075                           ; Number of cases is 2, Range of values is 76 to 108
  3076                           ; switch strategies available:
  3077                           ; Name         Instructions Cycles
  3078                           ; simple_byte            7     4 (average)
  3079                           ;	Chosen strategy is simple_byte
  3080   0039BE  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3081   0039C0  0A4C               	xorlw	76	; case 76
  3082   0039C2  B4D8               	btfsc	status,2,c
  3083   0039C4  EFBB  F01C         	goto	l5037
  3084   0039C8  0A20               	xorlw	32	; case 108
  3085   0039CA  B4D8               	btfsc	status,2,c
  3086   0039CC  EFA1  F01C         	goto	l5035
  3087   0039D0  EFEA  F01C         	goto	l5043
  3088   0039D4                     l5043:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3092   0039D4  0E01               	movlw	1
  3093   0039D6  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3094   0039D8  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3095   0039DA  0E00               	movlw	0
  3096   0039DC  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3097   0039DE  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3098   0039E0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3099   0039E4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3100   0039E8  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3101   0039EC  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3104   0039F0  EF13  F01D         	goto	l5051
  3105   0039F4                     l5045:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3109   0039F4  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3110   0039F8  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3111   0039FC  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3112   003A00  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3113   003A04  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3114   003A08  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3115   003A0C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3116   003A10  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3117   003A14                     	if	0	;tblptru may be non-zero
  3118   003A14                     	endif
  3119   003A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3120   003A14  0E00               	movlw	low (__mediumconst shr (0+16))
  3121   003A16  6EF8               	movwf	tblptru,c
  3122   003A18                     	endif
  3123   003A18  0008               	tblrd		*
  3124   003A1A  CFF5 F066          	movff	tablat,efgtoa@c
  3125   003A1E  EC4F  F00C         	call	_efgtoa	;wreg free
  3126   003A22  EF4A  F01D         	goto	l1478
  3127   003A26                     l5051:
  3128                           
  3129                           ; BSR set to: 0
  3130   003A26  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3131   003A2A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3132   003A2E                     	if	0	;tblptru may be non-zero
  3133   003A2E                     	endif
  3134   003A2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3135   003A2E  0E00               	movlw	low (__mediumconst shr (0+16))
  3136   003A30  6EF8               	movwf	tblptru,c
  3137   003A32                     	endif
  3138   003A32  0008               	tblrd		*
  3139   003A34  50F5               	movf	tablat,w,c
  3140   003A36  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3141   003A38  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3142                           
  3143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3144                           ; Switch size 1, requested type "simple"
  3145                           ; Number of cases is 1, Range of values is 0 to 0
  3146                           ; switch strategies available:
  3147                           ; Name         Instructions Cycles
  3148                           ; simple_byte            4     3 (average)
  3149                           ;	Chosen strategy is simple_byte
  3150   003A3A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3151   003A3C  0A00               	xorlw	0	; case 0
  3152   003A3E  B4D8               	btfsc	status,2,c
  3153   003A40  EF24  F01D         	goto	l5985
  3154   003A44  EF2B  F01D         	goto	l5053
  3155   003A48                     l5985:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ; Switch size 1, requested type "simple"
  3159                           ; Number of cases is 1, Range of values is 102 to 102
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte            4     3 (average)
  3163                           ;	Chosen strategy is simple_byte
  3164   003A48  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3165   003A4A  0A66               	xorlw	102	; case 102
  3166   003A4C  B4D8               	btfsc	status,2,c
  3167   003A4E  EFFA  F01C         	goto	l5045
  3168   003A52  EF2B  F01D         	goto	l5053
  3169   003A56                     l5053:
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3172   003A56  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3173   003A5A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3174   003A5E  2ADE               	incf	postinc2,f,c
  3175   003A60  0E00               	movlw	0
  3176   003A62  22DD               	addwfc	postdec2,f,c
  3177   003A64  EF4A  F01D         	goto	l1478
  3178   003A68                     l5057:
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3181   003A68  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3182   003A6C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3183   003A70  CFDE FFF6          	movff	postinc2,tblptrl
  3184   003A74  CFDD FFF7          	movff	postdec2,tblptrh
  3185   003A78                     	if	0	;tblptru may be non-zero
  3186   003A78                     	endif
  3187   003A78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3188   003A78  0E00               	movlw	low (__mediumconst shr (0+16))
  3189   003A7A  6EF8               	movwf	tblptru,c
  3190   003A7C                     	endif
  3191   003A7C  0008               	tblrd		*
  3192   003A7E  50F5               	movf	tablat,w,c
  3193   003A80  6E01               	movwf	fputc@c^0,c
  3194   003A82  6A02               	clrf	(fputc@c+1)^0,c
  3195   003A84  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3196   003A88  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3197   003A8C  EC63  F026         	call	_fputc	;wreg free
  3198   003A90  EF2B  F01D         	goto	l5053
  3199   003A94                     l1478:
  3200   003A94  0012               	return		;funcret
  3201   003A96                     __end_of_vfpfcnvrt:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function _efgtoa *****************
  3205 ;; Defined at:
  3206 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3209 ;;		 -> sprintf@f(11), 
  3210 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3211 ;;  c               1    6[BANK0 ] unsigned char 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  u               4   49[BANK0 ] struct flui
  3214 ;;  g               4   45[BANK0 ] struct flui
  3215 ;;  l               4   38[BANK0 ] struct flui
  3216 ;;  h               4   34[BANK0 ] struct flui
  3217 ;;  ou              4   28[BANK0 ] struct flui
  3218 ;;  n               2   43[BANK0 ] int 
  3219 ;;  i               2   32[BANK0 ] int 
  3220 ;;  w               2   26[BANK0 ] int 
  3221 ;;  e               2   24[BANK0 ] int 
  3222 ;;  m               2   22[BANK0 ] int 
  3223 ;;  d               2   20[BANK0 ] int 
  3224 ;;  t               2   13[BANK0 ] int 
  3225 ;;  p               2   11[BANK0 ] int 
  3226 ;;  ne              2    9[BANK0 ] int 
  3227 ;;  sign            1   42[BANK0 ] unsigned char 
  3228 ;;  nmode           1   19[BANK0 ] unsigned char 
  3229 ;;  mode            1   18[BANK0 ] unsigned char 
  3230 ;;  pp              1   17[BANK0 ] unsigned char 
  3231 ;;  esign           1    0        unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      void 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3241 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;Total ram usage:       53 bytes
  3246 ;; Hardware stack levels used: 1
  3247 ;; Hardware stack levels required when called: 5
  3248 ;; This function calls:
  3249 ;;		___fladd
  3250 ;;		___fldiv
  3251 ;;		___fleq
  3252 ;;		___flge
  3253 ;;		___flmul
  3254 ;;		___flneg
  3255 ;;		___flsub
  3256 ;;		___fltol
  3257 ;;		___fpclassifyf
  3258 ;;		_floorf
  3259 ;;		_labs
  3260 ;;		_memcpy
  3261 ;;		_pad
  3262 ;;		_strcpy
  3263 ;; This function is called by:
  3264 ;;		_vfpfcnvrt
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text5
  3269   00189E                     __ptext5:
  3270                           	callstack 0
  3271   00189E                     _efgtoa:
  3272                           	callstack 22
  3273   00189E                     
  3274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3275   00189E  0E00               	movlw	0
  3276   0018A0  0100               	movlb	0	; () banked
  3277   0018A2  6F8A               	movwf	efgtoa@sign& (0+255),b
  3278   0018A4                     
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3281   0018A4  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3282   0018A8  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3283   0018AC  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3284   0018B0  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3285   0018B4                     
  3286                           ; BSR set to: 0
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3288   0018B4  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3289   0018B6  EF61  F00C         	goto	u4590
  3290   0018BA  EF5F  F00C         	goto	u4591
  3291   0018BE                     u4591:
  3292   0018BE  EF75  F00C         	goto	l4723
  3293   0018C2                     u4590:
  3294   0018C2                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3297   0018C2  0E01               	movlw	1
  3298   0018C4  6F8A               	movwf	efgtoa@sign& (0+255),b
  3299   0018C6                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3302   0018C6  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3303   0018CA  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3304   0018CE  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3305   0018D2  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3306   0018D6  EC4F  F02F         	call	___flneg	;wreg free
  3307   0018DA  C001  F08D         	movff	?___flneg,efgtoa@g
  3308   0018DE  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3309   0018E2  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3310   0018E6  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3311   0018EA                     l4723:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3314   0018EA  0E00               	movlw	0
  3315   0018EC  0100               	movlb	0	; () banked
  3316   0018EE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3317   0018F0  0E00               	movlw	0
  3318   0018F2  6F8B               	movwf	efgtoa@n& (0+255),b
  3319   0018F4                     
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3322   0018F4  C0E7  F07A         	movff	_width,efgtoa@w
  3323   0018F8  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  3324   0018FC                     
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3327   0018FC  518A               	movf	efgtoa@sign& (0+255),w,b
  3328   0018FE  B4D8               	btfsc	status,2,c
  3329   001900  EF84  F00C         	goto	u4601
  3330   001904  EF86  F00C         	goto	u4600
  3331   001908                     u4601:
  3332   001908  EF9A  F00C         	goto	l4737
  3333   00190C                     u4600:
  3334   00190C                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3337   00190C  518A               	movf	efgtoa@sign& (0+255),w,b
  3338   00190E  A4D8               	btfss	status,2,c
  3339   001910  EF8C  F00C         	goto	u4611
  3340   001914  EF8E  F00C         	goto	u4610
  3341   001918                     u4611:
  3342   001918  EF94  F00C         	goto	l4733
  3343   00191C                     u4610:
  3344   00191C                     
  3345                           ; BSR set to: 0
  3346   00191C  0E00               	movlw	0
  3347   00191E  6F70               	movwf	(_efgtoa$2884+1)& (0+255),b
  3348   001920  0E2B               	movlw	43
  3349   001922  6F6F               	movwf	_efgtoa$2884& (0+255),b
  3350   001924  EF98  F00C         	goto	l4735
  3351   001928                     l4733:
  3352                           
  3353                           ; BSR set to: 0
  3354   001928  0E00               	movlw	0
  3355   00192A  6F70               	movwf	(_efgtoa$2884+1)& (0+255),b
  3356   00192C  0E2D               	movlw	45
  3357   00192E  6F6F               	movwf	_efgtoa$2884& (0+255),b
  3358   001930                     l4735:
  3359                           
  3360                           ; BSR set to: 0
  3361   001930  C06F  F08A         	movff	_efgtoa$2884,efgtoa@sign
  3362   001934                     l4737:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3366   001934  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3367   001938  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3368   00193C  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3369   001940  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3370   001944  ECE4  F025         	call	___fpclassifyf	;wreg free
  3371   001948  0401               	decf	?___fpclassifyf^0,w,c
  3372   00194A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3373   00194C  A4D8               	btfss	status,2,c
  3374   00194E  EFAB  F00C         	goto	u4621
  3375   001952  EFAD  F00C         	goto	u4620
  3376   001956                     u4621:
  3377   001956  EFE0  F00C         	goto	l4755
  3378   00195A                     u4620:
  3379   00195A                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3381   00195A  0100               	movlb	0	; () banked
  3382   00195C  518A               	movf	efgtoa@sign& (0+255),w,b
  3383   00195E  B4D8               	btfsc	status,2,c
  3384   001960  EFB4  F00C         	goto	u4631
  3385   001964  EFB6  F00C         	goto	u4630
  3386   001968                     u4631:
  3387   001968  EFBF  F00C         	goto	l4747
  3388   00196C                     u4630:
  3389   00196C                     
  3390                           ; BSR set to: 0
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3392   00196C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3393   001970                     
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3396   001970  077A               	decf	efgtoa@w& (0+255),f,b
  3397   001972  A0D8               	btfss	status,0,c
  3398   001974  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3399   001976                     
  3400                           ; BSR set to: 0
  3401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3402   001976  0E00               	movlw	0
  3403   001978  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3404   00197A  0E01               	movlw	1
  3405   00197C  6F8B               	movwf	efgtoa@n& (0+255),b
  3406   00197E                     l4747:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3410   00197E  0EA0               	movlw	low _dbuf
  3411   001980  258B               	addwf	efgtoa@n& (0+255),w,b
  3412   001982  6E01               	movwf	strcpy@dest^0,c
  3413   001984  0E02               	movlw	high _dbuf
  3414   001986  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3415   001988  6E02               	movwf	(strcpy@dest+1)^0,c
  3416   00198A  0E34               	movlw	low STR_2
  3417   00198C  6E03               	movwf	strcpy@src^0,c
  3418   00198E  0E0E               	movlw	high STR_2
  3419   001990  6E04               	movwf	(strcpy@src+1)^0,c
  3420   001992  EC8C  F02E         	call	_strcpy	;wreg free
  3421   001996                     l4749:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3424   001996  0100               	movlb	0	; () banked
  3425   001998  0EFD               	movlw	253
  3426   00199A  277A               	addwf	efgtoa@w& (0+255),f,b
  3427   00199C  0EFF               	movlw	255
  3428   00199E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3429   0019A0                     
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3432   0019A0  C060  F011         	movff	efgtoa@fp,pad@fp
  3433   0019A4  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3434   0019A8  0EA0               	movlw	low _dbuf
  3435   0019AA  6E13               	movwf	pad@buf^0,c
  3436   0019AC  0E02               	movlw	high _dbuf
  3437   0019AE  6E14               	movwf	(pad@buf+1)^0,c
  3438   0019B0  C07A  F015         	movff	efgtoa@w,pad@p
  3439   0019B4  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3440   0019B8  ECE7  F029         	call	_pad	;wreg free
  3441   0019BC  EF4B  F011         	goto	l1430
  3442   0019C0                     l4755:
  3443                           
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3445   0019C0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3446   0019C4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3447   0019C8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3448   0019CC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3449   0019D0  ECE4  F025         	call	___fpclassifyf	;wreg free
  3450   0019D4  5001               	movf	?___fpclassifyf^0,w,c
  3451   0019D6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3452   0019D8  A4D8               	btfss	status,2,c
  3453   0019DA  EFF1  F00C         	goto	u4641
  3454   0019DE  EFF3  F00C         	goto	u4640
  3455   0019E2                     u4641:
  3456   0019E2  EF13  F00D         	goto	l4773
  3457   0019E6                     u4640:
  3458   0019E6                     
  3459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3460   0019E6  0100               	movlb	0	; () banked
  3461   0019E8  518A               	movf	efgtoa@sign& (0+255),w,b
  3462   0019EA  B4D8               	btfsc	status,2,c
  3463   0019EC  EFFA  F00C         	goto	u4651
  3464   0019F0  EFFC  F00C         	goto	u4650
  3465   0019F4                     u4651:
  3466   0019F4  EF05  F00D         	goto	l4765
  3467   0019F8                     u4650:
  3468   0019F8                     
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3471   0019F8  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3472   0019FC                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3475   0019FC  077A               	decf	efgtoa@w& (0+255),f,b
  3476   0019FE  A0D8               	btfss	status,0,c
  3477   001A00  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3478   001A02                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3481   001A02  0E00               	movlw	0
  3482   001A04  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3483   001A06  0E01               	movlw	1
  3484   001A08  6F8B               	movwf	efgtoa@n& (0+255),b
  3485   001A0A                     l4765:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3489   001A0A  0EA0               	movlw	low _dbuf
  3490   001A0C  258B               	addwf	efgtoa@n& (0+255),w,b
  3491   001A0E  6E01               	movwf	strcpy@dest^0,c
  3492   001A10  0E02               	movlw	high _dbuf
  3493   001A12  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3494   001A14  6E02               	movwf	(strcpy@dest+1)^0,c
  3495   001A16  0E38               	movlw	low STR_5
  3496   001A18  6E03               	movwf	strcpy@src^0,c
  3497   001A1A  0E0E               	movlw	high STR_5
  3498   001A1C  6E04               	movwf	(strcpy@src+1)^0,c
  3499   001A1E  EC8C  F02E         	call	_strcpy	;wreg free
  3500   001A22  EFCB  F00C         	goto	l4749
  3501   001A26                     l4773:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3504   001A26  0E00               	movlw	0
  3505   001A28  0100               	movlb	0	; () banked
  3506   001A2A  6F91               	movwf	efgtoa@u& (0+255),b
  3507   001A2C  0E00               	movlw	0
  3508   001A2E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3509   001A30  0E80               	movlw	128
  3510   001A32  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3511   001A34  0E3F               	movlw	63
  3512   001A36  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3515   001A38  0E00               	movlw	0
  3516   001A3A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3517   001A3C  0E00               	movlw	0
  3518   001A3E  6F78               	movwf	efgtoa@e& (0+255),b
  3519   001A40                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3522   001A40  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3523   001A44  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3524   001A48  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3525   001A4C  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3526   001A50  0E00               	movlw	0
  3527   001A52  6E36               	movwf	___fleq@ff2^0,c
  3528   001A54  0E00               	movlw	0
  3529   001A56  6E37               	movwf	(___fleq@ff2+1)^0,c
  3530   001A58  0E00               	movlw	0
  3531   001A5A  6E38               	movwf	(___fleq@ff2+2)^0,c
  3532   001A5C  0E00               	movlw	0
  3533   001A5E  6E39               	movwf	(___fleq@ff2+3)^0,c
  3534   001A60  ECD3  F027         	call	___fleq	;wreg free
  3535   001A64  B0D8               	btfsc	status,0,c
  3536   001A66  EF37  F00D         	goto	u4661
  3537   001A6A  EF39  F00D         	goto	u4660
  3538   001A6E                     u4661:
  3539   001A6E  EF18  F00E         	goto	l1433
  3540   001A72                     u4660:
  3541   001A72  EF46  F00D         	goto	l4781
  3542   001A76                     l1435:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3545   001A76  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3546   001A7A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3547   001A7E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3548   001A82  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3549   001A86                     
  3550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3551   001A86  0100               	movlb	0	; () banked
  3552   001A88  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3553   001A8A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3554   001A8C                     l4781:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3557   001A8C  C091  F011         	movff	efgtoa@u,___flmul@b
  3558   001A90  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3559   001A94  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3560   001A98  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3561   001A9C  0E00               	movlw	0
  3562   001A9E  6E15               	movwf	___flmul@a^0,c
  3563   001AA0  0E00               	movlw	0
  3564   001AA2  6E16               	movwf	(___flmul@a+1)^0,c
  3565   001AA4  0E20               	movlw	32
  3566   001AA6  6E17               	movwf	(___flmul@a+2)^0,c
  3567   001AA8  0E41               	movlw	65
  3568   001AAA  6E18               	movwf	(___flmul@a+3)^0,c
  3569   001AAC  EC4F  F016         	call	___flmul	;wreg free
  3570   001AB0  C011  F07C         	movff	?___flmul,efgtoa@ou
  3571   001AB4  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3572   001AB8  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3573   001ABC  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3574   001AC0  0100               	movlb	0	; () banked
  3575   001AC2  517C               	movf	efgtoa@ou& (0+255),w,b
  3576   001AC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3577   001AC6  6E01               	movwf	labs@a^0,c
  3578   001AC8  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3579   001ACA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3580   001ACC  6E02               	movwf	(labs@a+1)^0,c
  3581   001ACE  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3582   001AD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3583   001AD2  6E03               	movwf	(labs@a+2)^0,c
  3584   001AD4  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3585   001AD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3586   001AD8  6E04               	movwf	(labs@a+3)^0,c
  3587   001ADA  EC93  F02A         	call	_labs	;wreg free
  3588   001ADE  BE04               	btfsc	(?_labs+3)^0,7,c
  3589   001AE0  EF7D  F00D         	goto	u4671
  3590   001AE4  5004               	movf	(?_labs+3)^0,w,c
  3591   001AE6  1003               	iorwf	(?_labs+2)^0,w,c
  3592   001AE8  1002               	iorwf	(?_labs+1)^0,w,c
  3593   001AEA  E109               	bnz	u4670
  3594   001AEC  0E02               	movlw	2
  3595   001AEE  5C01               	subwf	?_labs^0,w,c
  3596   001AF0  A0D8               	btfss	status,0,c
  3597   001AF2  EF7D  F00D         	goto	u4671
  3598   001AF6  EF7F  F00D         	goto	u4670
  3599   001AFA                     u4671:
  3600   001AFA  EF3B  F00D         	goto	l1435
  3601   001AFE                     u4670:
  3602   001AFE  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3603   001B02  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3604   001B06  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3605   001B0A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3606   001B0E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3607   001B12  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3608   001B16  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3609   001B1A  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3610   001B1E  EC62  F025         	call	___flge	;wreg free
  3611   001B22  A0D8               	btfss	status,0,c
  3612   001B24  EF96  F00D         	goto	u4681
  3613   001B28  EF98  F00D         	goto	u4680
  3614   001B2C                     u4681:
  3615   001B2C  EF3B  F00D         	goto	l1435
  3616   001B30                     u4680:
  3617   001B30                     
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3619   001B30  0100               	movlb	0	; () banked
  3620   001B32  5191               	movf	efgtoa@u& (0+255),w,b
  3621   001B34  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3622   001B36  6E01               	movwf	labs@a^0,c
  3623   001B38  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3624   001B3A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3625   001B3C  6E02               	movwf	(labs@a+1)^0,c
  3626   001B3E  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3627   001B40  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3628   001B42  6E03               	movwf	(labs@a+2)^0,c
  3629   001B44  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3630   001B46  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3631   001B48  6E04               	movwf	(labs@a+3)^0,c
  3632   001B4A  EC93  F02A         	call	_labs	;wreg free
  3633   001B4E  BE04               	btfsc	(?_labs+3)^0,7,c
  3634   001B50  EFB7  F00D         	goto	u4690
  3635   001B54  5004               	movf	(?_labs+3)^0,w,c
  3636   001B56  1003               	iorwf	(?_labs+2)^0,w,c
  3637   001B58  1002               	iorwf	(?_labs+1)^0,w,c
  3638   001B5A  E107               	bnz	u4691
  3639   001B5C  0E02               	movlw	2
  3640   001B5E  5C01               	subwf	?_labs^0,w,c
  3641   001B60  B0D8               	btfsc	status,0,c
  3642   001B62  EFB5  F00D         	goto	u4691
  3643   001B66  EFB7  F00D         	goto	u4690
  3644   001B6A                     u4691:
  3645   001B6A  EFFF  F00D         	goto	l4799
  3646   001B6E                     u4690:
  3647   001B6E                     l4789:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3650   001B6E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3651   001B72  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3652   001B76  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3653   001B7A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3656   001B7E  EF18  F00E         	goto	l1433
  3657   001B82                     l4791:
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3660   001B82  C091  F032         	movff	efgtoa@u,___fldiv@b
  3661   001B86  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3662   001B8A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3663   001B8E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3664   001B92  0E00               	movlw	0
  3665   001B94  6E36               	movwf	___fldiv@a^0,c
  3666   001B96  0E00               	movlw	0
  3667   001B98  6E37               	movwf	(___fldiv@a+1)^0,c
  3668   001B9A  0E20               	movlw	32
  3669   001B9C  6E38               	movwf	(___fldiv@a+2)^0,c
  3670   001B9E  0E41               	movlw	65
  3671   001BA0  6E39               	movwf	(___fldiv@a+3)^0,c
  3672   001BA2  EC64  F018         	call	___fldiv	;wreg free
  3673   001BA6  C032  F091         	movff	?___fldiv,efgtoa@u
  3674   001BAA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3675   001BAE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3676   001BB2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3677   001BB6                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3679   001BB6  0100               	movlb	0	; () banked
  3680   001BB8  0778               	decf	efgtoa@e& (0+255),f,b
  3681   001BBA  A0D8               	btfss	status,0,c
  3682   001BBC  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3683   001BBE                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3686   001BBE  5191               	movf	efgtoa@u& (0+255),w,b
  3687   001BC0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3688   001BC2  6E01               	movwf	labs@a^0,c
  3689   001BC4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3690   001BC6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3691   001BC8  6E02               	movwf	(labs@a+1)^0,c
  3692   001BCA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3693   001BCC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3694   001BCE  6E03               	movwf	(labs@a+2)^0,c
  3695   001BD0  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3696   001BD2  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3697   001BD4  6E04               	movwf	(labs@a+3)^0,c
  3698   001BD6  EC93  F02A         	call	_labs	;wreg free
  3699   001BDA  BE04               	btfsc	(?_labs+3)^0,7,c
  3700   001BDC  EFFD  F00D         	goto	u4700
  3701   001BE0  5004               	movf	(?_labs+3)^0,w,c
  3702   001BE2  1003               	iorwf	(?_labs+2)^0,w,c
  3703   001BE4  1002               	iorwf	(?_labs+1)^0,w,c
  3704   001BE6  E107               	bnz	u4701
  3705   001BE8  0E02               	movlw	2
  3706   001BEA  5C01               	subwf	?_labs^0,w,c
  3707   001BEC  B0D8               	btfsc	status,0,c
  3708   001BEE  EFFB  F00D         	goto	u4701
  3709   001BF2  EFFD  F00D         	goto	u4700
  3710   001BF6                     u4701:
  3711   001BF6  EFFF  F00D         	goto	l4799
  3712   001BFA                     u4700:
  3713   001BFA  EFB7  F00D         	goto	l4789
  3714   001BFE                     l4799:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3717   001BFE  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3718   001C02  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3719   001C06  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3720   001C0A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3721   001C0E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3722   001C12  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3723   001C16  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3724   001C1A  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3725   001C1E  EC62  F025         	call	___flge	;wreg free
  3726   001C22  A0D8               	btfss	status,0,c
  3727   001C24  EF16  F00E         	goto	u4711
  3728   001C28  EF18  F00E         	goto	u4710
  3729   001C2C                     u4711:
  3730   001C2C  EFC1  F00D         	goto	l4791
  3731   001C30                     u4710:
  3732   001C30                     l1433:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3735   001C30  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3738   001C34  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3739   001C38                     
  3740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3741   001C38  0100               	movlb	0	; () banked
  3742   001C3A  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3743   001C3C  EF22  F00E         	goto	u4721
  3744   001C40  EF24  F00E         	goto	u4720
  3745   001C44                     u4721:
  3746   001C44  EF2A  F00E         	goto	l4805
  3747   001C48                     u4720:
  3748   001C48                     
  3749                           ; BSR set to: 0
  3750   001C48  C0E9  F06B         	movff	_prec,efgtoa@p
  3751   001C4C  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3752   001C50  EF2E  F00E         	goto	l4807
  3753   001C54                     l4805:
  3754                           
  3755                           ; BSR set to: 0
  3756   001C54  0E00               	movlw	0
  3757   001C56  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3758   001C58  0E06               	movlw	6
  3759   001C5A  6F6B               	movwf	efgtoa@p& (0+255),b
  3760   001C5C                     l4807:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3764   001C5C  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3765   001C60  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3766   001C64                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3769   001C64  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3770   001C66  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3771   001C68                     
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3774   001C68  0E66               	movlw	102
  3775   001C6A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3776   001C6C  A4D8               	btfss	status,2,c
  3777   001C6E  EF3B  F00E         	goto	u4731
  3778   001C72  EF3D  F00E         	goto	u4730
  3779   001C76                     u4731:
  3780   001C76  EF5D  F00E         	goto	l4821
  3781   001C7A                     u4730:
  3782   001C7A                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3785   001C7A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3786   001C7C  EF44  F00E         	goto	u4740
  3787   001C80  EF42  F00E         	goto	u4741
  3788   001C84                     u4741:
  3789   001C84  EF50  F00E         	goto	l4817
  3790   001C88                     u4740:
  3791   001C88                     
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3794   001C88  0E00               	movlw	0
  3795   001C8A  6F91               	movwf	efgtoa@u& (0+255),b
  3796   001C8C  0E00               	movlw	0
  3797   001C8E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3798   001C90  0E80               	movlw	128
  3799   001C92  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3800   001C94  0E3F               	movlw	63
  3801   001C96  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3802                           
  3803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3804   001C98  0E00               	movlw	0
  3805   001C9A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3806   001C9C  0E00               	movlw	0
  3807   001C9E  6F78               	movwf	efgtoa@e& (0+255),b
  3808   001CA0                     l4817:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3812   001CA0  0E67               	movlw	103
  3813   001CA2  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3814   001CA4  B4D8               	btfsc	status,2,c
  3815   001CA6  EF57  F00E         	goto	u4751
  3816   001CAA  EF59  F00E         	goto	u4750
  3817   001CAE                     u4751:
  3818   001CAE  EF5D  F00E         	goto	l4821
  3819   001CB2                     u4750:
  3820   001CB2                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3823   001CB2  5178               	movf	efgtoa@e& (0+255),w,b
  3824   001CB4  2776               	addwf	efgtoa@m& (0+255),f,b
  3825   001CB6  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3826   001CB8  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3827   001CBA                     l4821:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3831   001CBA  0E00               	movlw	0
  3832   001CBC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3833   001CBE  0E00               	movlw	0
  3834   001CC0  6F80               	movwf	efgtoa@i& (0+255),b
  3835   001CC2                     
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3838   001CC2  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3839   001CC6  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3840   001CCA  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3841   001CCE  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3842   001CD2                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3845   001CD2  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3846   001CD6  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3847   001CDA  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3848   001CDE  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3851   001CE2  EFEE  F00E         	goto	l4835
  3852   001CE6                     l4827:
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3856   001CE6  C082  F032         	movff	efgtoa@h,___fldiv@b
  3857   001CEA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3858   001CEE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3859   001CF2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3860   001CF6  C091  F036         	movff	efgtoa@u,___fldiv@a
  3861   001CFA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3862   001CFE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3863   001D02  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3864   001D06  EC64  F018         	call	___fldiv	;wreg free
  3865   001D0A  C032  F04B         	movff	?___fldiv,floorf@x
  3866   001D0E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3867   001D12  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3868   001D16  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3869   001D1A  ECFA  F01F         	call	_floorf	;wreg free
  3870   001D1E  C04B  F086         	movff	?_floorf,efgtoa@l
  3871   001D22  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3872   001D26  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3873   001D2A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3876   001D2E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3877   001D32  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3878   001D36  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3879   001D3A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3880   001D3E  ECDF  F024         	call	___fltol	;wreg free
  3881   001D42  C001  F074         	movff	?___fltol,efgtoa@d
  3882   001D46  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3883   001D4A                     
  3884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3885   001D4A  C082  F02A         	movff	efgtoa@h,___flsub@b
  3886   001D4E  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3887   001D52  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3888   001D56  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3889   001D5A  C086  F015         	movff	efgtoa@l,___flmul@a
  3890   001D5E  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3891   001D62  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3892   001D66  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3893   001D6A  C091  F011         	movff	efgtoa@u,___flmul@b
  3894   001D6E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3895   001D72  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3896   001D76  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3897   001D7A  EC4F  F016         	call	___flmul	;wreg free
  3898   001D7E  C011  F02E         	movff	?___flmul,___flsub@a
  3899   001D82  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3900   001D86  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3901   001D8A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3902   001D8E  EC69  F02E         	call	___flsub	;wreg free
  3903   001D92  C02A  F082         	movff	?___flsub,efgtoa@h
  3904   001D96  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3905   001D9A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3906   001D9E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3907   001DA2                     
  3908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3909   001DA2  C091  F032         	movff	efgtoa@u,___fldiv@b
  3910   001DA6  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3911   001DAA  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3912   001DAE  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3913   001DB2  0E00               	movlw	0
  3914   001DB4  6E36               	movwf	___fldiv@a^0,c
  3915   001DB6  0E00               	movlw	0
  3916   001DB8  6E37               	movwf	(___fldiv@a+1)^0,c
  3917   001DBA  0E20               	movlw	32
  3918   001DBC  6E38               	movwf	(___fldiv@a+2)^0,c
  3919   001DBE  0E41               	movlw	65
  3920   001DC0  6E39               	movwf	(___fldiv@a+3)^0,c
  3921   001DC2  EC64  F018         	call	___fldiv	;wreg free
  3922   001DC6  C032  F091         	movff	?___fldiv,efgtoa@u
  3923   001DCA  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3924   001DCE  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3925   001DD2  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3926   001DD6                     
  3927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3928   001DD6  0100               	movlb	0	; () banked
  3929   001DD8  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3930   001DDA  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3931   001DDC                     l4835:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3935   001DDC  5176               	movf	efgtoa@m& (0+255),w,b
  3936   001DDE  5D80               	subwf	efgtoa@i& (0+255),w,b
  3937   001DE0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3938   001DE2  0A80               	xorlw	128
  3939   001DE4  6F67               	movwf	??_efgtoa& (0+255),b
  3940   001DE6  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3941   001DE8  0A80               	xorlw	128
  3942   001DEA  5967               	subwfb	??_efgtoa& (0+255),w,b
  3943   001DEC  A0D8               	btfss	status,0,c
  3944   001DEE  EFFB  F00E         	goto	u4761
  3945   001DF2  EFFD  F00E         	goto	u4760
  3946   001DF6                     u4761:
  3947   001DF6  EF73  F00E         	goto	l4827
  3948   001DFA                     u4760:
  3949   001DFA                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3952   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  3953   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3954   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3955   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3956   001E0A  0E00               	movlw	0
  3957   001E0C  6E15               	movwf	___flmul@a^0,c
  3958   001E0E  0E00               	movlw	0
  3959   001E10  6E16               	movwf	(___flmul@a+1)^0,c
  3960   001E12  0EA0               	movlw	160
  3961   001E14  6E17               	movwf	(___flmul@a+2)^0,c
  3962   001E16  0E40               	movlw	64
  3963   001E18  6E18               	movwf	(___flmul@a+3)^0,c
  3964   001E1A  EC4F  F016         	call	___flmul	;wreg free
  3965   001E1E  C011  F086         	movff	?___flmul,efgtoa@l
  3966   001E22  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3967   001E26  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3968   001E2A  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3969   001E2E                     
  3970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3971   001E2E  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3972   001E32  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3973   001E36  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3974   001E3A  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3975   001E3E  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3976   001E42  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3977   001E46  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3978   001E4A  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3979   001E4E  EC62  F025         	call	___flge	;wreg free
  3980   001E52  B0D8               	btfsc	status,0,c
  3981   001E54  EF2E  F00F         	goto	u4771
  3982   001E58  EF30  F00F         	goto	u4770
  3983   001E5C                     u4771:
  3984   001E5C  EF3B  F00F         	goto	l4843
  3985   001E60                     u4770:
  3986   001E60                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3988   001E60  0E00               	movlw	0
  3989   001E62  0100               	movlb	0	; () banked
  3990   001E64  6F86               	movwf	efgtoa@l& (0+255),b
  3991   001E66  0E00               	movlw	0
  3992   001E68  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3993   001E6A  0E00               	movlw	0
  3994   001E6C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3995   001E6E  0E00               	movlw	0
  3996   001E70  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3997                           
  3998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3999   001E72  EF64  F00F         	goto	l4849
  4000   001E76                     l4843:
  4001                           
  4002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4003   001E76  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4004   001E7A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4005   001E7E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4006   001E82  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4007   001E86  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4008   001E8A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4009   001E8E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4010   001E92  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4011   001E96  ECD3  F027         	call	___fleq	;wreg free
  4012   001E9A  A0D8               	btfss	status,0,c
  4013   001E9C  EF52  F00F         	goto	u4781
  4014   001EA0  EF54  F00F         	goto	u4780
  4015   001EA4                     u4781:
  4016   001EA4  EF64  F00F         	goto	l4849
  4017   001EA8                     u4780:
  4018   001EA8  0100               	movlb	0	; () banked
  4019   001EAA  B174               	btfsc	efgtoa@d& (0+255),0,b
  4020   001EAC  EF5A  F00F         	goto	u4791
  4021   001EB0  EF5C  F00F         	goto	u4790
  4022   001EB4                     u4791:
  4023   001EB4  EF64  F00F         	goto	l4849
  4024   001EB8                     u4790:
  4025   001EB8                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4028   001EB8  0E00               	movlw	0
  4029   001EBA  6F86               	movwf	efgtoa@l& (0+255),b
  4030   001EBC  0E00               	movlw	0
  4031   001EBE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4032   001EC0  0E00               	movlw	0
  4033   001EC2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4034   001EC4  0E00               	movlw	0
  4035   001EC6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4036   001EC8                     l4849:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4039   001EC8  C08D  F001         	movff	efgtoa@g,___fladd@b
  4040   001ECC  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4041   001ED0  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4042   001ED4  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4043   001ED8  C086  F005         	movff	efgtoa@l,___fladd@a
  4044   001EDC  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4045   001EE0  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4046   001EE4  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4047   001EE8  ECEF  F013         	call	___fladd	;wreg free
  4048   001EEC  C001  F082         	movff	?___fladd,efgtoa@h
  4049   001EF0  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4050   001EF4  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4051   001EF8  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4052   001EFC                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4054   001EFC  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4055   001F00  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4056   001F04  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4057   001F08  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4058   001F0C  0E00               	movlw	0
  4059   001F0E  6E15               	movwf	___flmul@a^0,c
  4060   001F10  0E00               	movlw	0
  4061   001F12  6E16               	movwf	(___flmul@a+1)^0,c
  4062   001F14  0E20               	movlw	32
  4063   001F16  6E17               	movwf	(___flmul@a+2)^0,c
  4064   001F18  0E41               	movlw	65
  4065   001F1A  6E18               	movwf	(___flmul@a+3)^0,c
  4066   001F1C  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4067   001F20  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4068   001F24  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4069   001F28  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4070   001F2C  EC4F  F016         	call	___flmul	;wreg free
  4071   001F30  C011  F02E         	movff	?___flmul,___flge@ff2
  4072   001F34  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4073   001F38  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4074   001F3C  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4075   001F40  EC62  F025         	call	___flge	;wreg free
  4076   001F44  A0D8               	btfss	status,0,c
  4077   001F46  EFA7  F00F         	goto	u4801
  4078   001F4A  EFA9  F00F         	goto	u4800
  4079   001F4E                     u4801:
  4080   001F4E  EFD2  F00F         	goto	l4861
  4081   001F52                     u4800:
  4082   001F52                     
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4084   001F52  0100               	movlb	0	; () banked
  4085   001F54  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4086   001F56  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4087   001F58                     
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4090   001F58  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4091   001F5C  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4092   001F60  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4093   001F64  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4094   001F68  0E00               	movlw	0
  4095   001F6A  6E15               	movwf	___flmul@a^0,c
  4096   001F6C  0E00               	movlw	0
  4097   001F6E  6E16               	movwf	(___flmul@a+1)^0,c
  4098   001F70  0E20               	movlw	32
  4099   001F72  6E17               	movwf	(___flmul@a+2)^0,c
  4100   001F74  0E41               	movlw	65
  4101   001F76  6E18               	movwf	(___flmul@a+3)^0,c
  4102   001F78  EC4F  F016         	call	___flmul	;wreg free
  4103   001F7C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4104   001F80  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4105   001F84  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4106   001F88  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4107   001F8C                     
  4108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4109   001F8C  0E66               	movlw	102
  4110   001F8E  0100               	movlb	0	; () banked
  4111   001F90  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4112   001F92  A4D8               	btfss	status,2,c
  4113   001F94  EFCE  F00F         	goto	u4811
  4114   001F98  EFD0  F00F         	goto	u4810
  4115   001F9C                     u4811:
  4116   001F9C  EFD2  F00F         	goto	l4861
  4117   001FA0                     u4810:
  4118   001FA0                     
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4121   001FA0  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4122   001FA2  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4123   001FA4                     l4861:
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4126   001FA4  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4127   001FA8  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4128   001FAC  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4129   001FB0  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4130   001FB4                     
  4131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4132   001FB4  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4133   001FB8  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4134   001FBC                     
  4135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4136   001FBC  0E00               	movlw	0
  4137   001FBE  0100               	movlb	0	; () banked
  4138   001FC0  6F71               	movwf	efgtoa@pp& (0+255),b
  4139   001FC2                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4142   001FC2  0E00               	movlw	0
  4143   001FC4  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4144   001FC6  0E00               	movlw	0
  4145   001FC8  6F6D               	movwf	efgtoa@t& (0+255),b
  4146   001FCA                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4149   001FCA  0E00               	movlw	0
  4150   001FCC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4151   001FCE  0E00               	movlw	0
  4152   001FD0  6F80               	movwf	efgtoa@i& (0+255),b
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4155   001FD2  EFD0  F010         	goto	l4911
  4156   001FD6                     l4871:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4160   001FD6  C082  F032         	movff	efgtoa@h,___fldiv@b
  4161   001FDA  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4162   001FDE  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4163   001FE2  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4164   001FE6  C091  F036         	movff	efgtoa@u,___fldiv@a
  4165   001FEA  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4166   001FEE  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4167   001FF2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4168   001FF6  EC64  F018         	call	___fldiv	;wreg free
  4169   001FFA  C032  F04B         	movff	?___fldiv,floorf@x
  4170   001FFE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4171   002002  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4172   002006  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4173   00200A  ECFA  F01F         	call	_floorf	;wreg free
  4174   00200E  C04B  F086         	movff	?_floorf,efgtoa@l
  4175   002012  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4176   002016  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4177   00201A  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4180   00201E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4181   002022  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4182   002026  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4183   00202A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4184   00202E  ECDF  F024         	call	___fltol	;wreg free
  4185   002032  BE02               	btfsc	(?___fltol+1)^0,7,c
  4186   002034  EF27  F010         	goto	u4820
  4187   002038  5002               	movf	(?___fltol+1)^0,w,c
  4188   00203A  E107               	bnz	u4821
  4189   00203C  0E0A               	movlw	10
  4190   00203E  5C01               	subwf	?___fltol^0,w,c
  4191   002040  B0D8               	btfsc	status,0,c
  4192   002042  EF25  F010         	goto	u4821
  4193   002046  EF27  F010         	goto	u4820
  4194   00204A                     u4821:
  4195   00204A  EF37  F010         	goto	l4875
  4196   00204E                     u4820:
  4197   00204E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4198   002052  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4199   002056  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4200   00205A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4201   00205E  ECDF  F024         	call	___fltol	;wreg free
  4202   002062  C001  F074         	movff	?___fltol,efgtoa@d
  4203   002066  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4204   00206A  EF3C  F010         	goto	l1463
  4205   00206E                     l4875:
  4206   00206E  0E00               	movlw	0
  4207   002070  0100               	movlb	0	; () banked
  4208   002072  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4209   002074  0E09               	movlw	9
  4210   002076  6F74               	movwf	efgtoa@d& (0+255),b
  4211   002078                     l1463:
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4214   002078  0100               	movlb	0	; () banked
  4215   00207A  5171               	movf	efgtoa@pp& (0+255),w,b
  4216   00207C  A4D8               	btfss	status,2,c
  4217   00207E  EF43  F010         	goto	u4831
  4218   002082  EF45  F010         	goto	u4830
  4219   002086                     u4831:
  4220   002086  EF6D  F010         	goto	l4895
  4221   00208A                     u4830:
  4222   00208A                     
  4223                           ; BSR set to: 0
  4224   00208A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4225   00208C  EF4C  F010         	goto	u4840
  4226   002090  EF4A  F010         	goto	u4841
  4227   002094                     u4841:
  4228   002094  EF6D  F010         	goto	l4895
  4229   002098                     u4840:
  4230   002098                     
  4231                           ; BSR set to: 0
  4232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4233   002098  0EA0               	movlw	low _dbuf
  4234   00209A  258B               	addwf	efgtoa@n& (0+255),w,b
  4235   00209C  6ED9               	movwf	fsr2l,c
  4236   00209E  0E02               	movlw	high _dbuf
  4237   0020A0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4238   0020A2  6EDA               	movwf	fsr2h,c
  4239   0020A4  0E2E               	movlw	46
  4240   0020A6  6EDF               	movwf	indf2,c
  4241   0020A8                     
  4242                           ; BSR set to: 0
  4243   0020A8  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4244   0020AA  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4245   0020AC                     
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4248   0020AC  077A               	decf	efgtoa@w& (0+255),f,b
  4249   0020AE  A0D8               	btfss	status,0,c
  4250   0020B0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4251   0020B2                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4254   0020B2  0E01               	movlw	1
  4255   0020B4  6F71               	movwf	efgtoa@pp& (0+255),b
  4256   0020B6  EF6D  F010         	goto	l4895
  4257   0020BA                     l4887:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4261   0020BA  0EA0               	movlw	low _dbuf
  4262   0020BC  258B               	addwf	efgtoa@n& (0+255),w,b
  4263   0020BE  6ED9               	movwf	fsr2l,c
  4264   0020C0  0E02               	movlw	high _dbuf
  4265   0020C2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4266   0020C4  6EDA               	movwf	fsr2h,c
  4267   0020C6  0E30               	movlw	48
  4268   0020C8  6EDF               	movwf	indf2,c
  4269   0020CA                     
  4270                           ; BSR set to: 0
  4271   0020CA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4272   0020CC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4273   0020CE                     
  4274                           ; BSR set to: 0
  4275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4276   0020CE  077A               	decf	efgtoa@w& (0+255),f,b
  4277   0020D0  A0D8               	btfss	status,0,c
  4278   0020D2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4279   0020D4                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4282   0020D4  076D               	decf	efgtoa@t& (0+255),f,b
  4283   0020D6  A0D8               	btfss	status,0,c
  4284   0020D8  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4285   0020DA                     l4895:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4289   0020DA  516D               	movf	efgtoa@t& (0+255),w,b
  4290   0020DC  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4291   0020DE  A4D8               	btfss	status,2,c
  4292   0020E0  EF74  F010         	goto	u4851
  4293   0020E4  EF76  F010         	goto	u4850
  4294   0020E8                     u4851:
  4295   0020E8  EF5D  F010         	goto	l4887
  4296   0020EC                     u4850:
  4297   0020EC                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4300   0020EC  0EA0               	movlw	low _dbuf
  4301   0020EE  258B               	addwf	efgtoa@n& (0+255),w,b
  4302   0020F0  6ED9               	movwf	fsr2l,c
  4303   0020F2  0E02               	movlw	high _dbuf
  4304   0020F4  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4305   0020F6  6EDA               	movwf	fsr2h,c
  4306   0020F8  5174               	movf	efgtoa@d& (0+255),w,b
  4307   0020FA  0F30               	addlw	48
  4308   0020FC  6EDF               	movwf	indf2,c
  4309   0020FE                     
  4310                           ; BSR set to: 0
  4311   0020FE  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4312   002100  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4313   002102                     
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4316   002102  077A               	decf	efgtoa@w& (0+255),f,b
  4317   002104  A0D8               	btfss	status,0,c
  4318   002106  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4319   002108                     
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4322   002108  C082  F02A         	movff	efgtoa@h,___flsub@b
  4323   00210C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4324   002110  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4325   002114  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4326   002118  C086  F015         	movff	efgtoa@l,___flmul@a
  4327   00211C  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4328   002120  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4329   002124  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4330   002128  C091  F011         	movff	efgtoa@u,___flmul@b
  4331   00212C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4332   002130  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4333   002134  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4334   002138  EC4F  F016         	call	___flmul	;wreg free
  4335   00213C  C011  F02E         	movff	?___flmul,___flsub@a
  4336   002140  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4337   002144  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4338   002148  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4339   00214C  EC69  F02E         	call	___flsub	;wreg free
  4340   002150  C02A  F082         	movff	?___flsub,efgtoa@h
  4341   002154  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4342   002158  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4343   00215C  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4344   002160                     
  4345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4346   002160  C091  F032         	movff	efgtoa@u,___fldiv@b
  4347   002164  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4348   002168  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4349   00216C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4350   002170  0E00               	movlw	0
  4351   002172  6E36               	movwf	___fldiv@a^0,c
  4352   002174  0E00               	movlw	0
  4353   002176  6E37               	movwf	(___fldiv@a+1)^0,c
  4354   002178  0E20               	movlw	32
  4355   00217A  6E38               	movwf	(___fldiv@a+2)^0,c
  4356   00217C  0E41               	movlw	65
  4357   00217E  6E39               	movwf	(___fldiv@a+3)^0,c
  4358   002180  EC64  F018         	call	___fldiv	;wreg free
  4359   002184  C032  F091         	movff	?___fldiv,efgtoa@u
  4360   002188  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4361   00218C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4362   002190  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4363   002194                     
  4364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4365   002194  0100               	movlb	0	; () banked
  4366   002196  0769               	decf	efgtoa@ne& (0+255),f,b
  4367   002198  A0D8               	btfss	status,0,c
  4368   00219A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4369   00219C                     
  4370                           ; BSR set to: 0
  4371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4372   00219C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4373   00219E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4374   0021A0                     l4911:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4378   0021A0  5176               	movf	efgtoa@m& (0+255),w,b
  4379   0021A2  5D80               	subwf	efgtoa@i& (0+255),w,b
  4380   0021A4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4381   0021A6  0A80               	xorlw	128
  4382   0021A8  6F67               	movwf	??_efgtoa& (0+255),b
  4383   0021AA  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4384   0021AC  0A80               	xorlw	128
  4385   0021AE  5967               	subwfb	??_efgtoa& (0+255),w,b
  4386   0021B0  B0D8               	btfsc	status,0,c
  4387   0021B2  EFDD  F010         	goto	u4861
  4388   0021B6  EFDF  F010         	goto	u4860
  4389   0021BA                     u4861:
  4390   0021BA  EFED  F010         	goto	l4915
  4391   0021BE                     u4860:
  4392   0021BE                     
  4393                           ; BSR set to: 0
  4394   0021BE  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4395   0021C0  EFEB  F010         	goto	u4871
  4396   0021C4  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4397   0021C6  E109               	bnz	u4870
  4398   0021C8  0E4B               	movlw	75
  4399   0021CA  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4400   0021CC  A0D8               	btfss	status,0,c
  4401   0021CE  EFEB  F010         	goto	u4871
  4402   0021D2  EFED  F010         	goto	u4870
  4403   0021D6                     u4871:
  4404   0021D6  EFEB  F00F         	goto	l4871
  4405   0021DA                     u4870:
  4406   0021DA                     l4915:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4410   0021DA  0E00               	movlw	0
  4411   0021DC  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4412   0021DE  0E4F               	movlw	79
  4413   0021E0  6F80               	movwf	efgtoa@i& (0+255),b
  4414   0021E2                     
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4417   0021E2  0EA0               	movlw	low _dbuf
  4418   0021E4  2580               	addwf	efgtoa@i& (0+255),w,b
  4419   0021E6  6ED9               	movwf	fsr2l,c
  4420   0021E8  0E02               	movlw	high _dbuf
  4421   0021EA  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4422   0021EC  6EDA               	movwf	fsr2h,c
  4423   0021EE  0E00               	movlw	0
  4424   0021F0  6EDF               	movwf	indf2,c
  4425   0021F2                     
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4428   0021F2  0EA0               	movlw	low _dbuf
  4429   0021F4  6F67               	movwf	??_efgtoa& (0+255),b
  4430   0021F6  0E02               	movlw	high _dbuf
  4431   0021F8  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4432   0021FA  518B               	movf	efgtoa@n& (0+255),w,b
  4433   0021FC  5F67               	subwf	??_efgtoa& (0+255),f,b
  4434   0021FE  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4435   002200  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4436   002202  5180               	movf	efgtoa@i& (0+255),w,b
  4437   002204  2567               	addwf	??_efgtoa& (0+255),w,b
  4438   002206  6E01               	movwf	memcpy@d1^0,c
  4439   002208  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4440   00220A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4441   00220C  6E02               	movwf	(memcpy@d1+1)^0,c
  4442   00220E  0EA0               	movlw	low _dbuf
  4443   002210  6E03               	movwf	memcpy@s1^0,c
  4444   002212  0E02               	movlw	high _dbuf
  4445   002214  6E04               	movwf	(memcpy@s1+1)^0,c
  4446   002216  C08B  F005         	movff	efgtoa@n,memcpy@n
  4447   00221A  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4448   00221E  EC2C  F02D         	call	_memcpy	;wreg free
  4449   002222                     
  4450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4451   002222  0100               	movlb	0	; () banked
  4452   002224  518B               	movf	efgtoa@n& (0+255),w,b
  4453   002226  5D80               	subwf	efgtoa@i& (0+255),w,b
  4454   002228  6F8B               	movwf	efgtoa@n& (0+255),b
  4455   00222A  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4456   00222C  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4457   00222E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4458   002230                     
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4461   002230  518A               	movf	efgtoa@sign& (0+255),w,b
  4462   002232  A4D8               	btfss	status,2,c
  4463   002234  EF1E  F011         	goto	u4881
  4464   002238  EF21  F011         	goto	u4880
  4465   00223C                     u4881:
  4466   00223C  0E01               	movlw	1
  4467   00223E  EF22  F011         	goto	u4890
  4468   002242                     u4880:
  4469   002242  0E00               	movlw	0
  4470   002244                     u4890:
  4471   002244  6F80               	movwf	efgtoa@i& (0+255),b
  4472   002246  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4473   002248                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4476   002248  518A               	movf	efgtoa@sign& (0+255),w,b
  4477   00224A  B4D8               	btfsc	status,2,c
  4478   00224C  EF2A  F011         	goto	u4901
  4479   002250  EF2C  F011         	goto	u4900
  4480   002254                     u4901:
  4481   002254  EF37  F011         	goto	l4929
  4482   002258                     u4900:
  4483   002258                     
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4486   002258  078B               	decf	efgtoa@n& (0+255),f,b
  4487   00225A  A0D8               	btfss	status,0,c
  4488   00225C  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4489   00225E  0EA0               	movlw	low _dbuf
  4490   002260  258B               	addwf	efgtoa@n& (0+255),w,b
  4491   002262  6ED9               	movwf	fsr2l,c
  4492   002264  0E02               	movlw	high _dbuf
  4493   002266  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4494   002268  6EDA               	movwf	fsr2h,c
  4495   00226A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4496   00226E                     l4929:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4500   00226E  5180               	movf	efgtoa@i& (0+255),w,b
  4501   002270  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4502   002272  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4503   002274  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4504   002276                     
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4507   002276  C060  F011         	movff	efgtoa@fp,pad@fp
  4508   00227A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4509   00227E  0EA0               	movlw	low _dbuf
  4510   002280  258B               	addwf	efgtoa@n& (0+255),w,b
  4511   002282  6E13               	movwf	pad@buf^0,c
  4512   002284  0E02               	movlw	high _dbuf
  4513   002286  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4514   002288  6E14               	movwf	(pad@buf+1)^0,c
  4515   00228A  C07A  F015         	movff	efgtoa@w,pad@p
  4516   00228E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4517   002292  ECE7  F029         	call	_pad	;wreg free
  4518   002296                     l1430:
  4519   002296  0012               	return		;funcret
  4520   002298                     __end_of_efgtoa:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _strcpy *****************
  4524 ;; Defined at:
  4525 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4528 ;;		 -> dbuf(80), 
  4529 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4530 ;;		 -> STR_5(4), STR_2(4), 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  d               2    6[COMRAM] PTR unsigned char 
  4533 ;;		 -> dbuf(80), 
  4534 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4535 ;;		 -> STR_5(4), STR_2(4), 
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  2    0[COMRAM] PTR unsigned char 
  4538 ;; Registers used:
  4539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;Total ram usage:        8 bytes
  4550 ;; Hardware stack levels used: 1
  4551 ;; Hardware stack levels required when called: 1
  4552 ;; This function calls:
  4553 ;;		Nothing
  4554 ;; This function is called by:
  4555 ;;		_efgtoa
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text6
  4560   005D18                     __ptext6:
  4561                           	callstack 0
  4562   005D18                     _strcpy:
  4563                           	callstack 25
  4564   005D18  C003  F005         	movff	strcpy@src,strcpy@s
  4565   005D1C  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4566   005D20  C001  F007         	movff	strcpy@dest,strcpy@d
  4567   005D24  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4568   005D28                     l4535:
  4569   005D28  C005  FFF6         	movff	strcpy@s,tblptrl
  4570   005D2C  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4571   005D30  4A05               	infsnz	strcpy@s^0,f,c
  4572   005D32  2A06               	incf	(strcpy@s+1)^0,f,c
  4573   005D34                     	if	0	;tblptru may be non-zero
  4574   005D34                     	endif
  4575   005D34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4576   005D34  0E00               	movlw	low (__mediumconst shr (0+16))
  4577   005D36  6EF8               	movwf	tblptru,c
  4578   005D38                     	endif
  4579   005D38  C007  FFD9         	movff	strcpy@d,fsr2l
  4580   005D3C  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4581   005D40  4A07               	infsnz	strcpy@d^0,f,c
  4582   005D42  2A08               	incf	(strcpy@d+1)^0,f,c
  4583   005D44  0008               	tblrd		*
  4584   005D46  CFF5 FFDF          	movff	tablat,indf2
  4585   005D4A  50DF               	movf	indf2,w,c
  4586   005D4C  A4D8               	btfss	status,2,c
  4587   005D4E  EFAB  F02E         	goto	u4231
  4588   005D52  EFAD  F02E         	goto	u4230
  4589   005D56                     u4231:
  4590   005D56  EF94  F02E         	goto	l4535
  4591   005D5A                     u4230:
  4592   005D5A  0012               	return		;funcret
  4593   005D5C                     __end_of_strcpy:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function _memcpy *****************
  4597 ;; Defined at:
  4598 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  d1              2    0[COMRAM] PTR void 
  4601 ;;		 -> dbuf(80), 
  4602 ;;  s1              2    2[COMRAM] PTR const void 
  4603 ;;		 -> dbuf(80), 
  4604 ;;  n               2    4[COMRAM] unsigned int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4607 ;;		 -> dbuf(80), 
  4608 ;;  d               2    6[COMRAM] PTR unsigned char 
  4609 ;;		 -> dbuf(80), 
  4610 ;;  tmp             1   10[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    0[COMRAM] PTR void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4620 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;Total ram usage:       11 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 1
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_efgtoa
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text7
  4635   005A58                     __ptext7:
  4636                           	callstack 0
  4637   005A58                     _memcpy:
  4638                           	callstack 25
  4639   005A58  C003  F009         	movff	memcpy@s1,memcpy@s
  4640   005A5C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4641   005A60  C001  F007         	movff	memcpy@d1,memcpy@d
  4642   005A64  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4643   005A68  EF46  F02D         	goto	l4579
  4644   005A6C                     l4571:
  4645   005A6C  C009  FFD9         	movff	memcpy@s,fsr2l
  4646   005A70  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4647   005A74  50DF               	movf	indf2,w,c
  4648   005A76  6E0B               	movwf	memcpy@tmp^0,c
  4649   005A78  4A09               	infsnz	memcpy@s^0,f,c
  4650   005A7A  2A0A               	incf	(memcpy@s+1)^0,f,c
  4651   005A7C  C007  FFD9         	movff	memcpy@d,fsr2l
  4652   005A80  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4653   005A84  C00B  FFDF         	movff	memcpy@tmp,indf2
  4654   005A88  4A07               	infsnz	memcpy@d^0,f,c
  4655   005A8A  2A08               	incf	(memcpy@d+1)^0,f,c
  4656   005A8C                     l4579:
  4657   005A8C  0605               	decf	memcpy@n^0,f,c
  4658   005A8E  A0D8               	btfss	status,0,c
  4659   005A90  0606               	decf	(memcpy@n+1)^0,f,c
  4660   005A92  2805               	incf	memcpy@n^0,w,c
  4661   005A94  E106               	bnz	u4351
  4662   005A96  2806               	incf	(memcpy@n+1)^0,w,c
  4663   005A98  A4D8               	btfss	status,2,c
  4664   005A9A  EF51  F02D         	goto	u4351
  4665   005A9E  EF53  F02D         	goto	u4350
  4666   005AA2                     u4351:
  4667   005AA2  EF36  F02D         	goto	l4571
  4668   005AA6                     u4350:
  4669   005AA6  0012               	return		;funcret
  4670   005AA8                     __end_of_memcpy:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _labs *****************
  4674 ;; Defined at:
  4675 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  a               4    0[COMRAM] long 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  4    0[COMRAM] long 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;Total ram usage:        8 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_efgtoa
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text8
  4704   005526                     __ptext8:
  4705                           	callstack 0
  4706   005526                     _labs:
  4707                           	callstack 25
  4708   005526  BE04               	btfsc	(labs@a+3)^0,7,c
  4709   005528  EFA2  F02A         	goto	u4240
  4710   00552C  5004               	movf	(labs@a+3)^0,w,c
  4711   00552E  1003               	iorwf	(labs@a+2)^0,w,c
  4712   005530  1002               	iorwf	(labs@a+1)^0,w,c
  4713   005532  E106               	bnz	u4241
  4714   005534  0401               	decf	labs@a^0,w,c
  4715   005536  B0D8               	btfsc	status,0,c
  4716   005538  EFA0  F02A         	goto	u4241
  4717   00553C  EFA2  F02A         	goto	u4240
  4718   005540                     u4241:
  4719   005540  EFBD  F02A         	goto	l1535
  4720   005544                     u4240:
  4721   005544  C001  F005         	movff	labs@a,??_labs
  4722   005548  C002  F006         	movff	labs@a+1,??_labs+1
  4723   00554C  C003  F007         	movff	labs@a+2,??_labs+2
  4724   005550  C004  F008         	movff	labs@a+3,??_labs+3
  4725   005554  1E05               	comf	??_labs^0,f,c
  4726   005556  1E06               	comf	(??_labs+1)^0,f,c
  4727   005558  1E07               	comf	(??_labs+2)^0,f,c
  4728   00555A  1E08               	comf	(??_labs+3)^0,f,c
  4729   00555C  2A05               	incf	??_labs^0,f,c
  4730   00555E  0E00               	movlw	0
  4731   005560  2206               	addwfc	(??_labs+1)^0,f,c
  4732   005562  2207               	addwfc	(??_labs+2)^0,f,c
  4733   005564  2208               	addwfc	(??_labs+3)^0,f,c
  4734   005566  C005  F001         	movff	??_labs,?_labs
  4735   00556A  C006  F002         	movff	??_labs+1,?_labs+1
  4736   00556E  C007  F003         	movff	??_labs+2,?_labs+2
  4737   005572  C008  F004         	movff	??_labs+3,?_labs+3
  4738   005576  EFC5  F02A         	goto	l1538
  4739   00557A                     l1535:
  4740   00557A  C001  F001         	movff	labs@a,?_labs
  4741   00557E  C002  F002         	movff	labs@a+1,?_labs+1
  4742   005582  C003  F003         	movff	labs@a+2,?_labs+2
  4743   005586  C004  F004         	movff	labs@a+3,?_labs+3
  4744   00558A                     l1538:
  4745   00558A  0012               	return		;funcret
  4746   00558C                     __end_of_labs:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _floorf *****************
  4750 ;; Defined at:
  4751 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  x               4   74[COMRAM] float 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  u               4   90[COMRAM] struct .
  4756 ;;  m               4   84[COMRAM] unsigned long 
  4757 ;;  e               2   88[COMRAM] int 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  4   74[COMRAM] float 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;Total ram usage:       20 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_efgtoa
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text9
  4782   003FF4                     __ptext9:
  4783                           	callstack 0
  4784   003FF4                     _floorf:
  4785                           	callstack 25
  4786   003FF4  C0DF  F05B         	movff	floorf@F526,floorf@u
  4787   003FF8  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4788   003FFC  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4789   004000  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4790   004004  C04B  F05B         	movff	floorf@x,floorf@u
  4791   004008  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4792   00400C  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4793   004010  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4794   004014  0E81               	movlw	129
  4795   004016  6E4F               	movwf	??_floorf^0,c
  4796   004018  0EFF               	movlw	255
  4797   00401A  6E50               	movwf	(??_floorf+1)^0,c
  4798   00401C  C05B  F051         	movff	floorf@u,??_floorf+2
  4799   004020  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4800   004024  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4801   004028  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4802   00402C  0E18               	movlw	24
  4803   00402E  EF1E  F020         	goto	u4250
  4804   004032                     u4255:
  4805   004032  90D8               	bcf	status,0,c
  4806   004034  3254               	rrcf	(??_floorf+5)^0,f,c
  4807   004036  3253               	rrcf	(??_floorf+4)^0,f,c
  4808   004038  3252               	rrcf	(??_floorf+3)^0,f,c
  4809   00403A  3251               	rrcf	(??_floorf+2)^0,f,c
  4810   00403C                     u4250:
  4811   00403C  2EE8               	decfsz	wreg,f,c
  4812   00403E  EF19  F020         	goto	u4255
  4813   004042  5051               	movf	(??_floorf+2)^0,w,c
  4814   004044  244F               	addwf	??_floorf^0,w,c
  4815   004046  6E59               	movwf	floorf@e^0,c
  4816   004048  0E00               	movlw	0
  4817   00404A  2050               	addwfc	(??_floorf+1)^0,w,c
  4818   00404C  6E5A               	movwf	(floorf@e+1)^0,c
  4819   00404E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4820   004050  EF33  F020         	goto	u4261
  4821   004054  505A               	movf	(floorf@e+1)^0,w,c
  4822   004056  E109               	bnz	u4260
  4823   004058  0E17               	movlw	23
  4824   00405A  5C59               	subwf	floorf@e^0,w,c
  4825   00405C  A0D8               	btfss	status,0,c
  4826   00405E  EF33  F020         	goto	u4261
  4827   004062  EF35  F020         	goto	u4260
  4828   004066                     u4261:
  4829   004066  EF3F  F020         	goto	l4547
  4830   00406A                     u4260:
  4831   00406A                     l4545:
  4832   00406A  C04B  F04B         	movff	floorf@x,?_floorf
  4833   00406E  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4834   004072  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4835   004076  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4836   00407A  EF02  F021         	goto	l1524
  4837   00407E                     l4547:
  4838   00407E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4839   004080  EF44  F020         	goto	u4271
  4840   004084  EF46  F020         	goto	u4270
  4841   004088                     u4271:
  4842   004088  EFB6  F020         	goto	l4557
  4843   00408C                     u4270:
  4844   00408C  C059  F04F         	movff	floorf@e,??_floorf
  4845   004090  0EFF               	movlw	255
  4846   004092  6E50               	movwf	(??_floorf+1)^0,c
  4847   004094  0EFF               	movlw	255
  4848   004096  6E51               	movwf	(??_floorf+2)^0,c
  4849   004098  0E7F               	movlw	127
  4850   00409A  6E52               	movwf	(??_floorf+3)^0,c
  4851   00409C  0E00               	movlw	0
  4852   00409E  6E53               	movwf	(??_floorf+4)^0,c
  4853   0040A0                     u4285:
  4854   0040A0  664F               	tstfsz	??_floorf^0,c
  4855   0040A2  EF55  F020         	goto	u4286
  4856   0040A6  EF5D  F020         	goto	u4287
  4857   0040AA                     u4286:
  4858   0040AA  3453               	rlcf	(??_floorf+4)^0,w,c
  4859   0040AC  3253               	rrcf	(??_floorf+4)^0,f,c
  4860   0040AE  3252               	rrcf	(??_floorf+3)^0,f,c
  4861   0040B0  3251               	rrcf	(??_floorf+2)^0,f,c
  4862   0040B2  3250               	rrcf	(??_floorf+1)^0,f,c
  4863   0040B4  2E4F               	decfsz	??_floorf^0,f,c
  4864   0040B6  EF50  F020         	goto	u4285
  4865   0040BA                     u4287:
  4866   0040BA  C050  F055         	movff	??_floorf+1,floorf@m
  4867   0040BE  C051  F056         	movff	??_floorf+2,floorf@m+1
  4868   0040C2  C052  F057         	movff	??_floorf+3,floorf@m+2
  4869   0040C6  C053  F058         	movff	??_floorf+4,floorf@m+3
  4870   0040CA  5055               	movf	floorf@m^0,w,c
  4871   0040CC  145B               	andwf	floorf@u^0,w,c
  4872   0040CE  6E4F               	movwf	??_floorf^0,c
  4873   0040D0  5056               	movf	(floorf@m+1)^0,w,c
  4874   0040D2  145C               	andwf	(floorf@u+1)^0,w,c
  4875   0040D4  6E50               	movwf	(??_floorf+1)^0,c
  4876   0040D6  5057               	movf	(floorf@m+2)^0,w,c
  4877   0040D8  145D               	andwf	(floorf@u+2)^0,w,c
  4878   0040DA  6E51               	movwf	(??_floorf+2)^0,c
  4879   0040DC  5058               	movf	(floorf@m+3)^0,w,c
  4880   0040DE  145E               	andwf	(floorf@u+3)^0,w,c
  4881   0040E0  6E52               	movwf	(??_floorf+3)^0,c
  4882   0040E2  504F               	movf	??_floorf^0,w,c
  4883   0040E4  1050               	iorwf	(??_floorf+1)^0,w,c
  4884   0040E6  1051               	iorwf	(??_floorf+2)^0,w,c
  4885   0040E8  1052               	iorwf	(??_floorf+3)^0,w,c
  4886   0040EA  A4D8               	btfss	status,2,c
  4887   0040EC  EF7A  F020         	goto	u4291
  4888   0040F0  EF7C  F020         	goto	u4290
  4889   0040F4                     u4291:
  4890   0040F4  EF7E  F020         	goto	l4553
  4891   0040F8                     u4290:
  4892   0040F8  EF35  F020         	goto	l4545
  4893   0040FC                     l4553:
  4894   0040FC  C05B  F04F         	movff	floorf@u,??_floorf
  4895   004100  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4896   004104  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4897   004108  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4898   00410C  0E20               	movlw	32
  4899   00410E  EF8E  F020         	goto	u4300
  4900   004112                     u4305:
  4901   004112  90D8               	bcf	status,0,c
  4902   004114  3252               	rrcf	(??_floorf+3)^0,f,c
  4903   004116  3251               	rrcf	(??_floorf+2)^0,f,c
  4904   004118  3250               	rrcf	(??_floorf+1)^0,f,c
  4905   00411A  324F               	rrcf	??_floorf^0,f,c
  4906   00411C                     u4300:
  4907   00411C  2EE8               	decfsz	wreg,f,c
  4908   00411E  EF89  F020         	goto	u4305
  4909   004122  504F               	movf	??_floorf^0,w,c
  4910   004124  1050               	iorwf	(??_floorf+1)^0,w,c
  4911   004126  1051               	iorwf	(??_floorf+2)^0,w,c
  4912   004128  1052               	iorwf	(??_floorf+3)^0,w,c
  4913   00412A  B4D8               	btfsc	status,2,c
  4914   00412C  EF9A  F020         	goto	u4311
  4915   004130  EF9C  F020         	goto	u4310
  4916   004134                     u4311:
  4917   004134  EFA4  F020         	goto	l1527
  4918   004138                     u4310:
  4919   004138  5055               	movf	floorf@m^0,w,c
  4920   00413A  265B               	addwf	floorf@u^0,f,c
  4921   00413C  5056               	movf	(floorf@m+1)^0,w,c
  4922   00413E  225C               	addwfc	(floorf@u+1)^0,f,c
  4923   004140  5057               	movf	(floorf@m+2)^0,w,c
  4924   004142  225D               	addwfc	(floorf@u+2)^0,f,c
  4925   004144  5058               	movf	(floorf@m+3)^0,w,c
  4926   004146  225E               	addwfc	(floorf@u+3)^0,f,c
  4927   004148                     l1527:
  4928   004148  1C55               	comf	floorf@m^0,w,c
  4929   00414A  6E4F               	movwf	??_floorf^0,c
  4930   00414C  1C56               	comf	(floorf@m+1)^0,w,c
  4931   00414E  6E50               	movwf	(??_floorf+1)^0,c
  4932   004150  1C57               	comf	(floorf@m+2)^0,w,c
  4933   004152  6E51               	movwf	(??_floorf+2)^0,c
  4934   004154  1C58               	comf	(floorf@m+3)^0,w,c
  4935   004156  6E52               	movwf	(??_floorf+3)^0,c
  4936   004158  504F               	movf	??_floorf^0,w,c
  4937   00415A  165B               	andwf	floorf@u^0,f,c
  4938   00415C  5050               	movf	(??_floorf+1)^0,w,c
  4939   00415E  165C               	andwf	(floorf@u+1)^0,f,c
  4940   004160  5051               	movf	(??_floorf+2)^0,w,c
  4941   004162  165D               	andwf	(floorf@u+2)^0,f,c
  4942   004164  5052               	movf	(??_floorf+3)^0,w,c
  4943   004166  165E               	andwf	(floorf@u+3)^0,f,c
  4944   004168  EFFA  F020         	goto	l4565
  4945   00416C                     l4557:
  4946   00416C  C05B  F04F         	movff	floorf@u,??_floorf
  4947   004170  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4948   004174  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4949   004178  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4950   00417C  0E20               	movlw	32
  4951   00417E  EFC6  F020         	goto	u4320
  4952   004182                     u4325:
  4953   004182  90D8               	bcf	status,0,c
  4954   004184  3252               	rrcf	(??_floorf+3)^0,f,c
  4955   004186  3251               	rrcf	(??_floorf+2)^0,f,c
  4956   004188  3250               	rrcf	(??_floorf+1)^0,f,c
  4957   00418A  324F               	rrcf	??_floorf^0,f,c
  4958   00418C                     u4320:
  4959   00418C  2EE8               	decfsz	wreg,f,c
  4960   00418E  EFC1  F020         	goto	u4325
  4961   004192  504F               	movf	??_floorf^0,w,c
  4962   004194  1050               	iorwf	(??_floorf+1)^0,w,c
  4963   004196  1051               	iorwf	(??_floorf+2)^0,w,c
  4964   004198  1052               	iorwf	(??_floorf+3)^0,w,c
  4965   00419A  A4D8               	btfss	status,2,c
  4966   00419C  EFD2  F020         	goto	u4331
  4967   0041A0  EFD4  F020         	goto	u4330
  4968   0041A4                     u4331:
  4969   0041A4  EFDE  F020         	goto	l4561
  4970   0041A8                     u4330:
  4971   0041A8  0E00               	movlw	0
  4972   0041AA  6E5B               	movwf	floorf@u^0,c
  4973   0041AC  0E00               	movlw	0
  4974   0041AE  6E5C               	movwf	(floorf@u+1)^0,c
  4975   0041B0  0E00               	movlw	0
  4976   0041B2  6E5D               	movwf	(floorf@u+2)^0,c
  4977   0041B4  0E00               	movlw	0
  4978   0041B6  6E5E               	movwf	(floorf@u+3)^0,c
  4979   0041B8  EFFA  F020         	goto	l4565
  4980   0041BC                     l4561:
  4981   0041BC  90D8               	bcf	status,0,c
  4982   0041BE  345B               	rlcf	floorf@u^0,w,c
  4983   0041C0  6E4F               	movwf	??_floorf^0,c
  4984   0041C2  345C               	rlcf	(floorf@u+1)^0,w,c
  4985   0041C4  6E50               	movwf	(??_floorf+1)^0,c
  4986   0041C6  345D               	rlcf	(floorf@u+2)^0,w,c
  4987   0041C8  6E51               	movwf	(??_floorf+2)^0,c
  4988   0041CA  345E               	rlcf	(floorf@u+3)^0,w,c
  4989   0041CC  6E52               	movwf	(??_floorf+3)^0,c
  4990   0041CE  504F               	movf	??_floorf^0,w,c
  4991   0041D0  1050               	iorwf	(??_floorf+1)^0,w,c
  4992   0041D2  1051               	iorwf	(??_floorf+2)^0,w,c
  4993   0041D4  1052               	iorwf	(??_floorf+3)^0,w,c
  4994   0041D6  B4D8               	btfsc	status,2,c
  4995   0041D8  EFF0  F020         	goto	u4341
  4996   0041DC  EFF2  F020         	goto	u4340
  4997   0041E0                     u4341:
  4998   0041E0  EFFA  F020         	goto	l4565
  4999   0041E4                     u4340:
  5000   0041E4  0E00               	movlw	0
  5001   0041E6  6E5B               	movwf	floorf@u^0,c
  5002   0041E8  0E00               	movlw	0
  5003   0041EA  6E5C               	movwf	(floorf@u+1)^0,c
  5004   0041EC  0E80               	movlw	128
  5005   0041EE  6E5D               	movwf	(floorf@u+2)^0,c
  5006   0041F0  0EBF               	movlw	191
  5007   0041F2  6E5E               	movwf	(floorf@u+3)^0,c
  5008   0041F4                     l4565:
  5009   0041F4  C05B  F04B         	movff	floorf@u,?_floorf
  5010   0041F8  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5011   0041FC  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5012   004200  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5013   004204                     l1524:
  5014   004204  0012               	return		;funcret
  5015   004206                     __end_of_floorf:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function ___fpclassifyf *****************
  5019 ;; Defined at:
  5020 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  x               4    0[COMRAM] float 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  u               4   10[COMRAM] struct .
  5025 ;;  e               2    8[COMRAM] int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5038 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5039 ;;Total ram usage:       14 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 1
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_efgtoa
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text10
  5050   004BC8                     __ptext10:
  5051                           	callstack 0
  5052   004BC8                     ___fpclassifyf:
  5053                           	callstack 25
  5054   004BC8  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5055   004BCC  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5056   004BD0  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5057   004BD4  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5058   004BD8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5059   004BDC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5060   004BE0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5061   004BE4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5062   004BE8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5063   004BEC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5064   004BF0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5065   004BF4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5066   004BF8  0E18               	movlw	24
  5067   004BFA  EF04  F026         	goto	u4160
  5068   004BFE                     u4165:
  5069   004BFE  90D8               	bcf	status,0,c
  5070   004C00  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5071   004C02  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5072   004C04  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5073   004C06  3205               	rrcf	??___fpclassifyf^0,f,c
  5074   004C08                     u4160:
  5075   004C08  2EE8               	decfsz	wreg,f,c
  5076   004C0A  EFFF  F025         	goto	u4165
  5077   004C0E  5005               	movf	??___fpclassifyf^0,w,c
  5078   004C10  6E09               	movwf	___fpclassifyf@e^0,c
  5079   004C12  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5080   004C14  5009               	movf	___fpclassifyf@e^0,w,c
  5081   004C16  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5082   004C18  A4D8               	btfss	status,2,c
  5083   004C1A  EF11  F026         	goto	u4171
  5084   004C1E  EF13  F026         	goto	u4170
  5085   004C22                     u4171:
  5086   004C22  EF33  F026         	goto	l4523
  5087   004C26                     u4170:
  5088   004C26  90D8               	bcf	status,0,c
  5089   004C28  340B               	rlcf	___fpclassifyf@u^0,w,c
  5090   004C2A  6E05               	movwf	??___fpclassifyf^0,c
  5091   004C2C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5092   004C2E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5093   004C30  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5094   004C32  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5095   004C34  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5096   004C36  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5097   004C38  5005               	movf	??___fpclassifyf^0,w,c
  5098   004C3A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5099   004C3C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5100   004C3E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5101   004C40  A4D8               	btfss	status,2,c
  5102   004C42  EF25  F026         	goto	u4181
  5103   004C46  EF27  F026         	goto	u4180
  5104   004C4A                     u4181:
  5105   004C4A  EF2D  F026         	goto	l4519
  5106   004C4E                     u4180:
  5107   004C4E  0E00               	movlw	0
  5108   004C50  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5109   004C52  0E02               	movlw	2
  5110   004C54  6E01               	movwf	?___fpclassifyf^0,c
  5111   004C56  EF62  F026         	goto	l1510
  5112   004C5A                     l4519:
  5113   004C5A  0E00               	movlw	0
  5114   004C5C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5115   004C5E  0E03               	movlw	3
  5116   004C60  6E01               	movwf	?___fpclassifyf^0,c
  5117   004C62  EF62  F026         	goto	l1510
  5118   004C66                     l4523:
  5119   004C66  2809               	incf	___fpclassifyf@e^0,w,c
  5120   004C68  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5121   004C6A  A4D8               	btfss	status,2,c
  5122   004C6C  EF3A  F026         	goto	u4191
  5123   004C70  EF3C  F026         	goto	u4190
  5124   004C74                     u4191:
  5125   004C74  EF5E  F026         	goto	l4529
  5126   004C78                     u4190:
  5127   004C78  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5128   004C7C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5129   004C80  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5130   004C84  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5131   004C88  0E09               	movlw	9
  5132   004C8A                     u4205:
  5133   004C8A  90D8               	bcf	status,0,c
  5134   004C8C  3605               	rlcf	??___fpclassifyf^0,f,c
  5135   004C8E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5136   004C90  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5137   004C92  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5138   004C94  2EE8               	decfsz	wreg,f,c
  5139   004C96  EF45  F026         	goto	u4205
  5140   004C9A  5005               	movf	??___fpclassifyf^0,w,c
  5141   004C9C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5142   004C9E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5143   004CA0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5144   004CA2  B4D8               	btfsc	status,2,c
  5145   004CA4  EF56  F026         	goto	u4211
  5146   004CA8  EF59  F026         	goto	u4210
  5147   004CAC                     u4211:
  5148   004CAC  0E01               	movlw	1
  5149   004CAE  EF5A  F026         	goto	u4220
  5150   004CB2                     u4210:
  5151   004CB2  0E00               	movlw	0
  5152   004CB4                     u4220:
  5153   004CB4  6E01               	movwf	?___fpclassifyf^0,c
  5154   004CB6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5155   004CB8  EF62  F026         	goto	l1510
  5156   004CBC                     l4529:
  5157   004CBC  0E00               	movlw	0
  5158   004CBE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5159   004CC0  0E04               	movlw	4
  5160   004CC2  6E01               	movwf	?___fpclassifyf^0,c
  5161   004CC4                     l1510:
  5162   004CC4  0012               	return		;funcret
  5163   004CC6                     __end_of___fpclassifyf:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function ___fltol *****************
  5167 ;; Defined at:
  5168 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  f1              4    0[COMRAM] int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  exp1            1    9[COMRAM] unsigned char 
  5173 ;;  sign1           1    8[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  4    0[COMRAM] long 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5186 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5187 ;;Total ram usage:       10 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_reverseOneBlock
  5194 ;;		_ForwardOneBlock
  5195 ;;		_Forwardhalfblock
  5196 ;;		_efgtoa
  5197 ;;		_Backhalfblock
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text11
  5202   0049BE                     __ptext11:
  5203                           	callstack 0
  5204   0049BE                     ___fltol:
  5205                           	callstack 25
  5206   0049BE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5207   0049C0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5208   0049C2  6E0A               	movwf	___fltol@exp1^0,c
  5209   0049C4  500A               	movf	___fltol@exp1^0,w,c
  5210   0049C6  A4D8               	btfss	status,2,c
  5211   0049C8  EFE8  F024         	goto	u4061
  5212   0049CC  EFEA  F024         	goto	u4060
  5213   0049D0                     u4061:
  5214   0049D0  EFF4  F024         	goto	l4455
  5215   0049D4                     u4060:
  5216   0049D4                     l4451:
  5217   0049D4  0E00               	movlw	0
  5218   0049D6  6E01               	movwf	?___fltol^0,c
  5219   0049D8  0E00               	movlw	0
  5220   0049DA  6E02               	movwf	(?___fltol+1)^0,c
  5221   0049DC  0E00               	movlw	0
  5222   0049DE  6E03               	movwf	(?___fltol+2)^0,c
  5223   0049E0  0E00               	movlw	0
  5224   0049E2  6E04               	movwf	(?___fltol+3)^0,c
  5225   0049E4  EF61  F025         	goto	l983
  5226   0049E8                     l4455:
  5227   0049E8  C001  F005         	movff	___fltol@f1,??___fltol
  5228   0049EC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5229   0049F0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5230   0049F4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5231   0049F8  0E20               	movlw	32
  5232   0049FA  EF04  F025         	goto	u4070
  5233   0049FE                     u4075:
  5234   0049FE  90D8               	bcf	status,0,c
  5235   004A00  3208               	rrcf	(??___fltol+3)^0,f,c
  5236   004A02  3207               	rrcf	(??___fltol+2)^0,f,c
  5237   004A04  3206               	rrcf	(??___fltol+1)^0,f,c
  5238   004A06  3205               	rrcf	??___fltol^0,f,c
  5239   004A08                     u4070:
  5240   004A08  2EE8               	decfsz	wreg,f,c
  5241   004A0A  EFFF  F024         	goto	u4075
  5242   004A0E  5005               	movf	??___fltol^0,w,c
  5243   004A10  6E09               	movwf	___fltol@sign1^0,c
  5244   004A12  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5245   004A14  0EFF               	movlw	255
  5246   004A16  1601               	andwf	___fltol@f1^0,f,c
  5247   004A18  0EFF               	movlw	255
  5248   004A1A  1602               	andwf	(___fltol@f1+1)^0,f,c
  5249   004A1C  0EFF               	movlw	255
  5250   004A1E  1603               	andwf	(___fltol@f1+2)^0,f,c
  5251   004A20  0E00               	movlw	0
  5252   004A22  1604               	andwf	(___fltol@f1+3)^0,f,c
  5253   004A24  0E96               	movlw	150
  5254   004A26  5E0A               	subwf	___fltol@exp1^0,f,c
  5255   004A28  BE0A               	btfsc	___fltol@exp1^0,7,c
  5256   004A2A  EF1B  F025         	goto	u4080
  5257   004A2E  EF19  F025         	goto	u4081
  5258   004A32                     u4081:
  5259   004A32  EF31  F025         	goto	l4475
  5260   004A36                     u4080:
  5261   004A36  500A               	movf	___fltol@exp1^0,w,c
  5262   004A38  0A80               	xorlw	128
  5263   004A3A  0F97               	addlw	151
  5264   004A3C  B0D8               	btfsc	status,0,c
  5265   004A3E  EF23  F025         	goto	u4091
  5266   004A42  EF25  F025         	goto	u4090
  5267   004A46                     u4091:
  5268   004A46  EF27  F025         	goto	l4471
  5269   004A4A                     u4090:
  5270   004A4A  EFEA  F024         	goto	l4451
  5271   004A4E                     l4471:
  5272   004A4E  90D8               	bcf	status,0,c
  5273   004A50  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5274   004A52  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5275   004A54  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5276   004A56  3201               	rrcf	___fltol@f1^0,f,c
  5277   004A58  3E0A               	incfsz	___fltol@exp1^0,f,c
  5278   004A5A  EF27  F025         	goto	l4471
  5279   004A5E  EF49  F025         	goto	l4485
  5280   004A62                     l4475:
  5281   004A62  0E1F               	movlw	31
  5282   004A64  640A               	cpfsgt	___fltol@exp1^0,c
  5283   004A66  EF37  F025         	goto	u4101
  5284   004A6A  EF39  F025         	goto	u4100
  5285   004A6E                     u4101:
  5286   004A6E  EF41  F025         	goto	l4483
  5287   004A72                     u4100:
  5288   004A72  EFEA  F024         	goto	l4451
  5289   004A76                     l4481:
  5290   004A76  90D8               	bcf	status,0,c
  5291   004A78  3601               	rlcf	___fltol@f1^0,f,c
  5292   004A7A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5293   004A7C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5294   004A7E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5295   004A80  060A               	decf	___fltol@exp1^0,f,c
  5296   004A82                     l4483:
  5297   004A82  500A               	movf	___fltol@exp1^0,w,c
  5298   004A84  A4D8               	btfss	status,2,c
  5299   004A86  EF47  F025         	goto	u4111
  5300   004A8A  EF49  F025         	goto	u4110
  5301   004A8E                     u4111:
  5302   004A8E  EF3B  F025         	goto	l4481
  5303   004A92                     u4110:
  5304   004A92                     l4485:
  5305   004A92  5009               	movf	___fltol@sign1^0,w,c
  5306   004A94  B4D8               	btfsc	status,2,c
  5307   004A96  EF4F  F025         	goto	u4121
  5308   004A9A  EF51  F025         	goto	u4120
  5309   004A9E                     u4121:
  5310   004A9E  EF59  F025         	goto	l4489
  5311   004AA2                     u4120:
  5312   004AA2  1E04               	comf	(___fltol@f1+3)^0,f,c
  5313   004AA4  1E03               	comf	(___fltol@f1+2)^0,f,c
  5314   004AA6  1E02               	comf	(___fltol@f1+1)^0,f,c
  5315   004AA8  6C01               	negf	___fltol@f1^0,c
  5316   004AAA  0E00               	movlw	0
  5317   004AAC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5318   004AAE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5319   004AB0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5320   004AB2                     l4489:
  5321   004AB2  C001  F001         	movff	___fltol@f1,?___fltol
  5322   004AB6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5323   004ABA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5324   004ABE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5325   004AC2                     l983:
  5326   004AC2  0012               	return		;funcret
  5327   004AC4                     __end_of___fltol:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function ___flneg *****************
  5331 ;; Defined at:
  5332 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  f1              4    0[COMRAM] long 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  4    0[COMRAM] long 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5350 ;;Total ram usage:        4 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 1
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_efgtoa
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text12
  5361   005E9E                     __ptext12:
  5362                           	callstack 0
  5363   005E9E                     ___flneg:
  5364                           	callstack 25
  5365   005E9E  5001               	movf	___flneg@f1^0,w,c
  5366   005EA0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5367   005EA2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5368   005EA4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5369   005EA6  B4D8               	btfsc	status,2,c
  5370   005EA8  EF58  F02F         	goto	u4051
  5371   005EAC  EF5A  F02F         	goto	u4050
  5372   005EB0                     u4051:
  5373   005EB0  EF62  F02F         	goto	l4445
  5374   005EB4                     u4050:
  5375   005EB4  0E00               	movlw	0
  5376   005EB6  1A01               	xorwf	___flneg@f1^0,f,c
  5377   005EB8  0E00               	movlw	0
  5378   005EBA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5379   005EBC  0E00               	movlw	0
  5380   005EBE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5381   005EC0  0E80               	movlw	128
  5382   005EC2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5383   005EC4                     l4445:
  5384   005EC4  C001  F001         	movff	___flneg@f1,?___flneg
  5385   005EC8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5386   005ECC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5387   005ED0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5388   005ED4  0012               	return		;funcret
  5389   005ED6                     __end_of___flneg:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _dtoa *****************
  5393 ;; Defined at:
  5394 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5397 ;;		 -> sprintf@f(11), 
  5398 ;;  d               8   29[COMRAM] long long 
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  n               8   51[COMRAM] long long 
  5401 ;;  i               2   59[COMRAM] int 
  5402 ;;  w               2   49[COMRAM] int 
  5403 ;;  p               2   47[COMRAM] int 
  5404 ;;  s               1   61[COMRAM] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5414 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;Total ram usage:       35 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 5
  5421 ;; This function calls:
  5422 ;;		___aodiv
  5423 ;;		___aomod
  5424 ;;		_abs
  5425 ;;		_pad
  5426 ;; This function is called by:
  5427 ;;		_vfpfcnvrt
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text13
  5432   003D76                     __ptext13:
  5433                           	callstack 0
  5434   003D76                     _dtoa:
  5435                           	callstack 22
  5436   003D76                     
  5437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5438   003D76  C01E  F034         	movff	dtoa@d,dtoa@n
  5439   003D7A  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5440   003D7E  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5441   003D82  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5442   003D86  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5443   003D8A  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5444   003D8E  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5445   003D92  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5446   003D96                     
  5447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5448   003D96  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5449   003D98  EFD0  F01E         	goto	u4491
  5450   003D9C  EFD3  F01E         	goto	u4490
  5451   003DA0                     u4491:
  5452   003DA0  0E01               	movlw	1
  5453   003DA2  EFD4  F01E         	goto	u4500
  5454   003DA6                     u4490:
  5455   003DA6  0E00               	movlw	0
  5456   003DA8                     u4500:
  5457   003DA8  6E3E               	movwf	dtoa@s^0,c
  5458   003DAA                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5460   003DAA  503E               	movf	dtoa@s^0,w,c
  5461   003DAC  B4D8               	btfsc	status,2,c
  5462   003DAE  EFDB  F01E         	goto	u4511
  5463   003DB2  EFDD  F01E         	goto	u4510
  5464   003DB6                     u4511:
  5465   003DB6  EFED  F01E         	goto	l4669
  5466   003DBA                     u4510:
  5467   003DBA                     
  5468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5469   003DBA  1E3B               	comf	(dtoa@n+7)^0,f,c
  5470   003DBC  1E3A               	comf	(dtoa@n+6)^0,f,c
  5471   003DBE  1E39               	comf	(dtoa@n+5)^0,f,c
  5472   003DC0  1E38               	comf	(dtoa@n+4)^0,f,c
  5473   003DC2  1E37               	comf	(dtoa@n+3)^0,f,c
  5474   003DC4  1E36               	comf	(dtoa@n+2)^0,f,c
  5475   003DC6  1E35               	comf	(dtoa@n+1)^0,f,c
  5476   003DC8  6C34               	negf	dtoa@n^0,c
  5477   003DCA  0E00               	movlw	0
  5478   003DCC  2235               	addwfc	(dtoa@n+1)^0,f,c
  5479   003DCE  2236               	addwfc	(dtoa@n+2)^0,f,c
  5480   003DD0  2237               	addwfc	(dtoa@n+3)^0,f,c
  5481   003DD2  2238               	addwfc	(dtoa@n+4)^0,f,c
  5482   003DD4  2239               	addwfc	(dtoa@n+5)^0,f,c
  5483   003DD6  223A               	addwfc	(dtoa@n+6)^0,f,c
  5484   003DD8  223B               	addwfc	(dtoa@n+7)^0,f,c
  5485   003DDA                     l4669:
  5486                           
  5487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5488   003DDA  0100               	movlb	0	; () banked
  5489   003DDC  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5490   003DDE  EFFB  F01E         	goto	u4520
  5491   003DE2  51EA               	movf	(_prec+1)& (0+255),w,b
  5492   003DE4  E106               	bnz	u4521
  5493   003DE6  05E9               	decf	_prec& (0+255),w,b
  5494   003DE8  B0D8               	btfsc	status,0,c
  5495   003DEA  EFF9  F01E         	goto	u4521
  5496   003DEE  EFFB  F01E         	goto	u4520
  5497   003DF2                     u4521:
  5498   003DF2  EF01  F01F         	goto	l1405
  5499   003DF6                     u4520:
  5500   003DF6                     
  5501                           ; BSR set to: 0
  5502   003DF6  0E00               	movlw	0
  5503   003DF8  6E31               	movwf	(dtoa@p+1)^0,c
  5504   003DFA  0E01               	movlw	1
  5505   003DFC  6E30               	movwf	dtoa@p^0,c
  5506   003DFE  EF05  F01F         	goto	l1407
  5507   003E02                     l1405:
  5508                           
  5509                           ; BSR set to: 0
  5510   003E02  C0E9  F030         	movff	_prec,dtoa@p
  5511   003E06  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5512   003E0A                     l1407:
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5516   003E0A  C0E7  F032         	movff	_width,dtoa@w
  5517   003E0E  C0E8  F033         	movff	_width+1,dtoa@w+1
  5518   003E12                     
  5519                           ; BSR set to: 0
  5520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5521   003E12  503E               	movf	dtoa@s^0,w,c
  5522   003E14  B4D8               	btfsc	status,2,c
  5523   003E16  EF0F  F01F         	goto	u4531
  5524   003E1A  EF11  F01F         	goto	u4530
  5525   003E1E                     u4531:
  5526   003E1E  EF28  F01F         	goto	l1408
  5527   003E22                     u4530:
  5528   003E22                     
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5531   003E22  0632               	decf	dtoa@w^0,f,c
  5532   003E24  A0D8               	btfss	status,0,c
  5533   003E26  0633               	decf	(dtoa@w+1)^0,f,c
  5534   003E28                     
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5537   003E28  503E               	movf	dtoa@s^0,w,c
  5538   003E2A  A4D8               	btfss	status,2,c
  5539   003E2C  EF1A  F01F         	goto	u4541
  5540   003E30  EF1C  F01F         	goto	u4540
  5541   003E34                     u4541:
  5542   003E34  EF22  F01F         	goto	l4681
  5543   003E38                     u4540:
  5544   003E38                     
  5545                           ; BSR set to: 0
  5546   003E38  0E00               	movlw	0
  5547   003E3A  6E2F               	movwf	(_dtoa$2853+1)^0,c
  5548   003E3C  0E2B               	movlw	43
  5549   003E3E  6E2E               	movwf	_dtoa$2853^0,c
  5550   003E40  EF26  F01F         	goto	l4683
  5551   003E44                     l4681:
  5552                           
  5553                           ; BSR set to: 0
  5554   003E44  0E00               	movlw	0
  5555   003E46  6E2F               	movwf	(_dtoa$2853+1)^0,c
  5556   003E48  0E2D               	movlw	45
  5557   003E4A  6E2E               	movwf	_dtoa$2853^0,c
  5558   003E4C                     l4683:
  5559                           
  5560                           ; BSR set to: 0
  5561   003E4C  C02E  F03E         	movff	_dtoa$2853,dtoa@s
  5562   003E50                     l1408:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5566   003E50  0E00               	movlw	0
  5567   003E52  6E3D               	movwf	(dtoa@i+1)^0,c
  5568   003E54  0E4F               	movlw	79
  5569   003E56  6E3C               	movwf	dtoa@i^0,c
  5570   003E58                     
  5571                           ; BSR set to: 0
  5572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5573   003E58  0E00               	movlw	0
  5574   003E5A  0102               	movlb	2	; () banked
  5575   003E5C  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5576                           
  5577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5578   003E5E  EFAD  F01F         	goto	l4697
  5579   003E62                     l4687:
  5580                           
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5582   003E62  063C               	decf	dtoa@i^0,f,c
  5583   003E64  A0D8               	btfss	status,0,c
  5584   003E66  063D               	decf	(dtoa@i+1)^0,f,c
  5585   003E68                     
  5586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5587   003E68  0EA0               	movlw	low _dbuf
  5588   003E6A  243C               	addwf	dtoa@i^0,w,c
  5589   003E6C  6ED9               	movwf	fsr2l,c
  5590   003E6E  0E02               	movlw	high _dbuf
  5591   003E70  203D               	addwfc	(dtoa@i+1)^0,w,c
  5592   003E72  6EDA               	movwf	fsr2h,c
  5593   003E74  C034  F001         	movff	dtoa@n,___aomod@dividend
  5594   003E78  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5595   003E7C  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5596   003E80  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5597   003E84  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5598   003E88  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5599   003E8C  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5600   003E90  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5601   003E94  0E0A               	movlw	10
  5602   003E96  6E09               	movwf	___aomod@divisor^0,c
  5603   003E98  0E00               	movlw	0
  5604   003E9A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5605   003E9C  0E00               	movlw	0
  5606   003E9E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5607   003EA0  0E00               	movlw	0
  5608   003EA2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5609   003EA4  0E00               	movlw	0
  5610   003EA6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5611   003EA8  0E00               	movlw	0
  5612   003EAA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5613   003EAC  0E00               	movlw	0
  5614   003EAE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5615   003EB0  0E00               	movlw	0
  5616   003EB2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5617   003EB4  EC2D  F024         	call	___aomod	;wreg free
  5618   003EB8  C001  F026         	movff	?___aomod,??_dtoa
  5619   003EBC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5620   003EC0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5621   003EC4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5622   003EC8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5623   003ECC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5624   003ED0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5625   003ED4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5626   003ED8  C026  F013         	movff	??_dtoa,abs@a
  5627   003EDC  C027  F014         	movff	??_dtoa+1,abs@a+1
  5628   003EE0  ECF1  F02E         	call	_abs	;wreg free
  5629   003EE4  5013               	movf	?_abs^0,w,c
  5630   003EE6  0F30               	addlw	48
  5631   003EE8  6EDF               	movwf	indf2,c
  5632   003EEA                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5634   003EEA  0630               	decf	dtoa@p^0,f,c
  5635   003EEC  A0D8               	btfss	status,0,c
  5636   003EEE  0631               	decf	(dtoa@p+1)^0,f,c
  5637   003EF0                     
  5638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5639   003EF0  0632               	decf	dtoa@w^0,f,c
  5640   003EF2  A0D8               	btfss	status,0,c
  5641   003EF4  0633               	decf	(dtoa@w+1)^0,f,c
  5642   003EF6                     
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5644   003EF6  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5645   003EFA  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5646   003EFE  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5647   003F02  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5648   003F06  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5649   003F0A  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5650   003F0E  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5651   003F12  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5652   003F16  0E0A               	movlw	10
  5653   003F18  6E09               	movwf	___aodiv@divisor^0,c
  5654   003F1A  0E00               	movlw	0
  5655   003F1C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5656   003F1E  0E00               	movlw	0
  5657   003F20  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5658   003F22  0E00               	movlw	0
  5659   003F24  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5660   003F26  0E00               	movlw	0
  5661   003F28  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5662   003F2A  0E00               	movlw	0
  5663   003F2C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5664   003F2E  0E00               	movlw	0
  5665   003F30  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5666   003F32  0E00               	movlw	0
  5667   003F34  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5668   003F36  ECB3  F022         	call	___aodiv	;wreg free
  5669   003F3A  C001  F034         	movff	?___aodiv,dtoa@n
  5670   003F3E  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5671   003F42  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5672   003F46  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5673   003F4A  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5674   003F4E  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5675   003F52  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5676   003F56  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5677   003F5A                     l4697:
  5678                           
  5679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5680   003F5A  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5681   003F5C  EFB8  F01F         	goto	u4551
  5682   003F60  503D               	movf	(dtoa@i+1)^0,w,c
  5683   003F62  E108               	bnz	u4550
  5684   003F64  043C               	decf	dtoa@i^0,w,c
  5685   003F66  A0D8               	btfss	status,0,c
  5686   003F68  EFB8  F01F         	goto	u4551
  5687   003F6C  EFBA  F01F         	goto	u4550
  5688   003F70                     u4551:
  5689   003F70  EFD6  F01F         	goto	l4703
  5690   003F74                     u4550:
  5691   003F74  5034               	movf	dtoa@n^0,w,c
  5692   003F76  1035               	iorwf	(dtoa@n+1)^0,w,c
  5693   003F78  1036               	iorwf	(dtoa@n+2)^0,w,c
  5694   003F7A  1037               	iorwf	(dtoa@n+3)^0,w,c
  5695   003F7C  1038               	iorwf	(dtoa@n+4)^0,w,c
  5696   003F7E  1039               	iorwf	(dtoa@n+5)^0,w,c
  5697   003F80  103A               	iorwf	(dtoa@n+6)^0,w,c
  5698   003F82  103B               	iorwf	(dtoa@n+7)^0,w,c
  5699   003F84  A4D8               	btfss	status,2,c
  5700   003F86  EFC7  F01F         	goto	u4561
  5701   003F8A  EFC9  F01F         	goto	u4560
  5702   003F8E                     u4561:
  5703   003F8E  EF31  F01F         	goto	l4687
  5704   003F92                     u4560:
  5705   003F92  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5706   003F94  EFD6  F01F         	goto	u4570
  5707   003F98  5031               	movf	(dtoa@p+1)^0,w,c
  5708   003F9A  E106               	bnz	u4571
  5709   003F9C  0430               	decf	dtoa@p^0,w,c
  5710   003F9E  B0D8               	btfsc	status,0,c
  5711   003FA0  EFD4  F01F         	goto	u4571
  5712   003FA4  EFD6  F01F         	goto	u4570
  5713   003FA8                     u4571:
  5714   003FA8  EF31  F01F         	goto	l4687
  5715   003FAC                     u4570:
  5716   003FAC                     l4703:
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5719   003FAC  503E               	movf	dtoa@s^0,w,c
  5720   003FAE  B4D8               	btfsc	status,2,c
  5721   003FB0  EFDC  F01F         	goto	u4581
  5722   003FB4  EFDE  F01F         	goto	u4580
  5723   003FB8                     u4581:
  5724   003FB8  EFE9  F01F         	goto	l4709
  5725   003FBC                     u4580:
  5726   003FBC                     
  5727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5728   003FBC  063C               	decf	dtoa@i^0,f,c
  5729   003FBE  A0D8               	btfss	status,0,c
  5730   003FC0  063D               	decf	(dtoa@i+1)^0,f,c
  5731   003FC2                     
  5732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5733   003FC2  0EA0               	movlw	low _dbuf
  5734   003FC4  243C               	addwf	dtoa@i^0,w,c
  5735   003FC6  6ED9               	movwf	fsr2l,c
  5736   003FC8  0E02               	movlw	high _dbuf
  5737   003FCA  203D               	addwfc	(dtoa@i+1)^0,w,c
  5738   003FCC  6EDA               	movwf	fsr2h,c
  5739   003FCE  C03E  FFDF         	movff	dtoa@s,indf2
  5740   003FD2                     l4709:
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5743   003FD2  C01C  F011         	movff	dtoa@fp,pad@fp
  5744   003FD6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5745   003FDA  0EA0               	movlw	low _dbuf
  5746   003FDC  243C               	addwf	dtoa@i^0,w,c
  5747   003FDE  6E13               	movwf	pad@buf^0,c
  5748   003FE0  0E02               	movlw	high _dbuf
  5749   003FE2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5750   003FE4  6E14               	movwf	(pad@buf+1)^0,c
  5751   003FE6  C032  F015         	movff	dtoa@w,pad@p
  5752   003FEA  C033  F016         	movff	dtoa@w+1,pad@p+1
  5753   003FEE  ECE7  F029         	call	_pad	;wreg free
  5754   003FF2  0012               	return		;funcret
  5755   003FF4                     __end_of_dtoa:
  5756                           	callstack 0
  5757                           
  5758 ;; *************** function _pad *****************
  5759 ;; Defined at:
  5760 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5763 ;;		 -> sprintf@f(11), 
  5764 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5765 ;;		 -> dbuf(80), 
  5766 ;;  p               2   20[COMRAM] int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  w               2   25[COMRAM] int 
  5769 ;;  i               2   23[COMRAM] int 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;Total ram usage:       11 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 4
  5786 ;; This function calls:
  5787 ;;		_fputc
  5788 ;;		_fputs
  5789 ;; This function is called by:
  5790 ;;		_dtoa
  5791 ;;		_efgtoa
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text14
  5796   0053CE                     __ptext14:
  5797                           	callstack 0
  5798   0053CE                     _pad:
  5799                           	callstack 22
  5800   0053CE                     
  5801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5802   0053CE  BE16               	btfsc	(pad@p+1)^0,7,c
  5803   0053D0  EFEC  F029         	goto	u4131
  5804   0053D4  EFEE  F029         	goto	u4130
  5805   0053D8                     u4131:
  5806   0053D8  EFF4  F029         	goto	l4497
  5807   0053DC                     u4130:
  5808   0053DC  C015  F01A         	movff	pad@p,pad@w
  5809   0053E0  C016  F01B         	movff	pad@p+1,pad@w+1
  5810   0053E4  EFF8  F029         	goto	l1396
  5811   0053E8                     l4497:
  5812   0053E8  0E00               	movlw	0
  5813   0053EA  6E1B               	movwf	(pad@w+1)^0,c
  5814   0053EC  0E00               	movlw	0
  5815   0053EE  6E1A               	movwf	pad@w^0,c
  5816   0053F0                     l1396:
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5819   0053F0  0E00               	movlw	0
  5820   0053F2  6E19               	movwf	(pad@i+1)^0,c
  5821   0053F4  0E00               	movlw	0
  5822   0053F6  6E18               	movwf	pad@i^0,c
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5825   0053F8  EF0A  F02A         	goto	l4503
  5826   0053FC                     l4499:
  5827                           
  5828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5829   0053FC  0E00               	movlw	0
  5830   0053FE  6E02               	movwf	(fputc@c+1)^0,c
  5831   005400  0E20               	movlw	32
  5832   005402  6E01               	movwf	fputc@c^0,c
  5833   005404  C011  F003         	movff	pad@fp,fputc@fp
  5834   005408  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5835   00540C  EC63  F026         	call	_fputc	;wreg free
  5836   005410                     
  5837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5838   005410  4A18               	infsnz	pad@i^0,f,c
  5839   005412  2A19               	incf	(pad@i+1)^0,f,c
  5840   005414                     l4503:
  5841                           
  5842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5843   005414  501A               	movf	pad@w^0,w,c
  5844   005416  5C18               	subwf	pad@i^0,w,c
  5845   005418  5019               	movf	(pad@i+1)^0,w,c
  5846   00541A  0A80               	xorlw	128
  5847   00541C  6E17               	movwf	??_pad^0,c
  5848   00541E  501B               	movf	(pad@w+1)^0,w,c
  5849   005420  0A80               	xorlw	128
  5850   005422  5817               	subwfb	??_pad^0,w,c
  5851   005424  A0D8               	btfss	status,0,c
  5852   005426  EF17  F02A         	goto	u4141
  5853   00542A  EF19  F02A         	goto	u4140
  5854   00542E                     u4141:
  5855   00542E  EFFE  F029         	goto	l4499
  5856   005432                     u4140:
  5857   005432                     
  5858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5859   005432  C013  F00A         	movff	pad@buf,fputs@s
  5860   005436  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5861   00543A  C011  F00C         	movff	pad@fp,fputs@fp
  5862   00543E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5863   005442  ECAE  F02E         	call	_fputs	;wreg free
  5864   005446  0012               	return		;funcret
  5865   005448                     __end_of_pad:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _fputs *****************
  5869 ;; Defined at:
  5870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5873 ;;		 -> dbuf(80), 
  5874 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5875 ;;		 -> sprintf@f(11), 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  i               2   14[COMRAM] int 
  5878 ;;  c               1   13[COMRAM] unsigned char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  2    9[COMRAM] int 
  5881 ;; Registers used:
  5882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;Total ram usage:        7 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 3
  5895 ;; This function calls:
  5896 ;;		_fputc
  5897 ;; This function is called by:
  5898 ;;		_pad
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text15
  5903   005D5C                     __ptext15:
  5904                           	callstack 0
  5905   005D5C                     _fputs:
  5906                           	callstack 22
  5907   005D5C  0E00               	movlw	0
  5908   005D5E  6E10               	movwf	(fputs@i+1)^0,c
  5909   005D60  0E00               	movlw	0
  5910   005D62  6E0F               	movwf	fputs@i^0,c
  5911   005D64  EFBF  F02E         	goto	l4031
  5912   005D68                     l4027:
  5913   005D68  C00E  F001         	movff	fputs@c,fputc@c
  5914   005D6C  6A02               	clrf	(fputc@c+1)^0,c
  5915   005D6E  C00C  F003         	movff	fputs@fp,fputc@fp
  5916   005D72  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5917   005D76  EC63  F026         	call	_fputc	;wreg free
  5918   005D7A  4A0F               	infsnz	fputs@i^0,f,c
  5919   005D7C  2A10               	incf	(fputs@i+1)^0,f,c
  5920   005D7E                     l4031:
  5921   005D7E  500F               	movf	fputs@i^0,w,c
  5922   005D80  240A               	addwf	fputs@s^0,w,c
  5923   005D82  6ED9               	movwf	fsr2l,c
  5924   005D84  5010               	movf	(fputs@i+1)^0,w,c
  5925   005D86  200B               	addwfc	(fputs@s+1)^0,w,c
  5926   005D88  6EDA               	movwf	fsr2h,c
  5927   005D8A  50DF               	movf	indf2,w,c
  5928   005D8C  6E0E               	movwf	fputs@c^0,c
  5929   005D8E  500E               	movf	fputs@c^0,w,c
  5930   005D90  A4D8               	btfss	status,2,c
  5931   005D92  EFCD  F02E         	goto	u3391
  5932   005D96  EFCF  F02E         	goto	u3390
  5933   005D9A                     u3391:
  5934   005D9A  EFB4  F02E         	goto	l4027
  5935   005D9E                     u3390:
  5936   005D9E  0012               	return		;funcret
  5937   005DA0                     __end_of_fputs:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _fputc *****************
  5941 ;; Defined at:
  5942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  c               2    0[COMRAM] int 
  5945 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5946 ;;		 -> sprintf@f(11), 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2    0[COMRAM] int 
  5951 ;; Registers used:
  5952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;Total ram usage:        9 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; Hardware stack levels required when called: 2
  5965 ;; This function calls:
  5966 ;;		_putch
  5967 ;; This function is called by:
  5968 ;;		_pad
  5969 ;;		_vfpfcnvrt
  5970 ;;		_fputs
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text16
  5975   004CC6                     __ptext16:
  5976                           	callstack 0
  5977   004CC6                     _fputc:
  5978                           	callstack 25
  5979   004CC6  5003               	movf	fputc@fp^0,w,c
  5980   004CC8  1004               	iorwf	(fputc@fp+1)^0,w,c
  5981   004CCA  B4D8               	btfsc	status,2,c
  5982   004CCC  EF6A  F026         	goto	u2931
  5983   004CD0  EF6C  F026         	goto	u2930
  5984   004CD4                     u2931:
  5985   004CD4  EF75  F026         	goto	l3785
  5986   004CD8                     u2930:
  5987   004CD8  5003               	movf	fputc@fp^0,w,c
  5988   004CDA  1004               	iorwf	(fputc@fp+1)^0,w,c
  5989   004CDC  A4D8               	btfss	status,2,c
  5990   004CDE  EF73  F026         	goto	u2941
  5991   004CE2  EF75  F026         	goto	u2940
  5992   004CE6                     u2941:
  5993   004CE6  EF7A  F026         	goto	l3787
  5994   004CEA                     u2940:
  5995   004CEA                     l3785:
  5996   004CEA  5001               	movf	fputc@c^0,w,c
  5997   004CEC  EC68  F030         	call	_putch
  5998   004CF0  EFC7  F026         	goto	l1556
  5999   004CF4                     l3787:
  6000   004CF4  EE20 F009          	lfsr	2,9
  6001   004CF8  5003               	movf	fputc@fp^0,w,c
  6002   004CFA  26D9               	addwf	fsr2l,f,c
  6003   004CFC  5004               	movf	(fputc@fp+1)^0,w,c
  6004   004CFE  22DA               	addwfc	fsr2h,f,c
  6005   004D00  50DE               	movf	postinc2,w,c
  6006   004D02  10DE               	iorwf	postinc2,w,c
  6007   004D04  B4D8               	btfsc	status,2,c
  6008   004D06  EF87  F026         	goto	u2951
  6009   004D0A  EF89  F026         	goto	u2950
  6010   004D0E                     u2951:
  6011   004D0E  EFA4  F026         	goto	l3791
  6012   004D12                     u2950:
  6013   004D12  EE20 F009          	lfsr	2,9
  6014   004D16  5003               	movf	fputc@fp^0,w,c
  6015   004D18  26D9               	addwf	fsr2l,f,c
  6016   004D1A  5004               	movf	(fputc@fp+1)^0,w,c
  6017   004D1C  22DA               	addwfc	fsr2h,f,c
  6018   004D1E  EE10 F003          	lfsr	1,3
  6019   004D22  5003               	movf	fputc@fp^0,w,c
  6020   004D24  26E1               	addwf	fsr1l,f,c
  6021   004D26  5004               	movf	(fputc@fp+1)^0,w,c
  6022   004D28  22E2               	addwfc	fsr1h,f,c
  6023   004D2A  50DE               	movf	postinc2,w,c
  6024   004D2C  5CE6               	subwf	postinc1,w,c
  6025   004D2E  50E6               	movf	postinc1,w,c
  6026   004D30  0A80               	xorlw	128
  6027   004D32  6E09               	movwf	(??_fputc+4)^0,c
  6028   004D34  50DE               	movf	postinc2,w,c
  6029   004D36  0A80               	xorlw	128
  6030   004D38  5809               	subwfb	(??_fputc+4)^0,w,c
  6031   004D3A  B0D8               	btfsc	status,0,c
  6032   004D3C  EFA2  F026         	goto	u2961
  6033   004D40  EFA4  F026         	goto	u2960
  6034   004D44                     u2961:
  6035   004D44  EFC7  F026         	goto	l1556
  6036   004D48                     u2960:
  6037   004D48                     l3791:
  6038   004D48  EE20 F003          	lfsr	2,3
  6039   004D4C  5003               	movf	fputc@fp^0,w,c
  6040   004D4E  26D9               	addwf	fsr2l,f,c
  6041   004D50  5004               	movf	(fputc@fp+1)^0,w,c
  6042   004D52  22DA               	addwfc	fsr2h,f,c
  6043   004D54  CFDE F005          	movff	postinc2,??_fputc
  6044   004D58  CFDD F006          	movff	postdec2,??_fputc+1
  6045   004D5C  C003  FFD9         	movff	fputc@fp,fsr2l
  6046   004D60  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6047   004D64  CFDE F007          	movff	postinc2,??_fputc+2
  6048   004D68  CFDD F008          	movff	postdec2,??_fputc+3
  6049   004D6C  5005               	movf	??_fputc^0,w,c
  6050   004D6E  2407               	addwf	(??_fputc+2)^0,w,c
  6051   004D70  6ED9               	movwf	fsr2l,c
  6052   004D72  5006               	movf	(??_fputc+1)^0,w,c
  6053   004D74  2008               	addwfc	(??_fputc+3)^0,w,c
  6054   004D76  6EDA               	movwf	fsr2h,c
  6055   004D78  C001  FFDF         	movff	fputc@c,indf2
  6056   004D7C  EE20 F003          	lfsr	2,3
  6057   004D80  5003               	movf	fputc@fp^0,w,c
  6058   004D82  26D9               	addwf	fsr2l,f,c
  6059   004D84  5004               	movf	(fputc@fp+1)^0,w,c
  6060   004D86  22DA               	addwfc	fsr2h,f,c
  6061   004D88  2ADE               	incf	postinc2,f,c
  6062   004D8A  0E00               	movlw	0
  6063   004D8C  22DD               	addwfc	postdec2,f,c
  6064   004D8E                     l1556:
  6065   004D8E  0012               	return		;funcret
  6066   004D90                     __end_of_fputc:
  6067                           	callstack 0
  6068                           
  6069 ;; *************** function _putch *****************
  6070 ;; Defined at:
  6071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  c               1    wreg     unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  c               1    0[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;Total ram usage:        0 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_fputc
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text17
  6100   0060D0                     __ptext17:
  6101                           	callstack 0
  6102   0060D0                     _putch:
  6103                           	callstack 25
  6104   0060D0  0012               	return		;funcret
  6105   0060D2                     __end_of_putch:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _abs *****************
  6109 ;; Defined at:
  6110 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  a               2   18[COMRAM] int 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2   18[COMRAM] int 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        4 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 1
  6131 ;; This function calls:
  6132 ;;		Nothing
  6133 ;; This function is called by:
  6134 ;;		_dtoa
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text18
  6139   005DE2                     __ptext18:
  6140                           	callstack 0
  6141   005DE2                     _abs:
  6142                           	callstack 25
  6143   005DE2  BE14               	btfsc	(abs@a+1)^0,7,c
  6144   005DE4  EFFE  F02E         	goto	u4150
  6145   005DE8  5014               	movf	(abs@a+1)^0,w,c
  6146   005DEA  E106               	bnz	u4151
  6147   005DEC  0413               	decf	abs@a^0,w,c
  6148   005DEE  B0D8               	btfsc	status,0,c
  6149   005DF0  EFFC  F02E         	goto	u4151
  6150   005DF4  EFFE  F02E         	goto	u4150
  6151   005DF8                     u4151:
  6152   005DF8  EF0C  F02F         	goto	l1515
  6153   005DFC                     u4150:
  6154   005DFC  C013  F015         	movff	abs@a,??_abs
  6155   005E00  C014  F016         	movff	abs@a+1,??_abs+1
  6156   005E04  1E15               	comf	??_abs^0,f,c
  6157   005E06  1E16               	comf	(??_abs+1)^0,f,c
  6158   005E08  4A15               	infsnz	??_abs^0,f,c
  6159   005E0A  2A16               	incf	(??_abs+1)^0,f,c
  6160   005E0C  C015  F013         	movff	??_abs,?_abs
  6161   005E10  C016  F014         	movff	??_abs+1,?_abs+1
  6162   005E14  EF10  F02F         	goto	l1518
  6163   005E18                     l1515:
  6164   005E18  C013  F013         	movff	abs@a,?_abs
  6165   005E1C  C014  F014         	movff	abs@a+1,?_abs+1
  6166   005E20                     l1518:
  6167   005E20  0012               	return		;funcret
  6168   005E22                     __end_of_abs:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function ___aomod *****************
  6172 ;; Defined at:
  6173 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  dividend        8    0[COMRAM] long long 
  6176 ;;  divisor         8    8[COMRAM] long long 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  sign            1   17[COMRAM] unsigned char 
  6179 ;;  counter         1   16[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  8    0[COMRAM] long long 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6189 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6192 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6193 ;;Total ram usage:       18 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 1
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_dtoa
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text19
  6204   00485A                     __ptext19:
  6205                           	callstack 0
  6206   00485A                     ___aomod:
  6207                           	callstack 25
  6208   00485A  0E00               	movlw	0
  6209   00485C  6E12               	movwf	___aomod@sign^0,c
  6210   00485E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6211   004860  EF36  F024         	goto	u3490
  6212   004864  EF34  F024         	goto	u3491
  6213   004868                     u3491:
  6214   004868  EF48  F024         	goto	l4101
  6215   00486C                     u3490:
  6216   00486C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6217   00486E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6218   004870  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6219   004872  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6220   004874  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6221   004876  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6222   004878  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6223   00487A  6C01               	negf	___aomod@dividend^0,c
  6224   00487C  0E00               	movlw	0
  6225   00487E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6226   004880  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6227   004882  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6228   004884  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6229   004886  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6230   004888  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6231   00488A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6232   00488C  0E01               	movlw	1
  6233   00488E  6E12               	movwf	___aomod@sign^0,c
  6234   004890                     l4101:
  6235   004890  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6236   004892  EF4F  F024         	goto	u3500
  6237   004896  EF4D  F024         	goto	u3501
  6238   00489A                     u3501:
  6239   00489A  EF5F  F024         	goto	l4105
  6240   00489E                     u3500:
  6241   00489E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6242   0048A0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6243   0048A2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6244   0048A4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6245   0048A6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6246   0048A8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6247   0048AA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6248   0048AC  6C09               	negf	___aomod@divisor^0,c
  6249   0048AE  0E00               	movlw	0
  6250   0048B0  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6251   0048B2  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6252   0048B4  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6253   0048B6  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6254   0048B8  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6255   0048BA  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6256   0048BC  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6257   0048BE                     l4105:
  6258   0048BE  5009               	movf	___aomod@divisor^0,w,c
  6259   0048C0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6260   0048C2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6261   0048C4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6262   0048C6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6263   0048C8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6264   0048CA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6265   0048CC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6266   0048CE  B4D8               	btfsc	status,2,c
  6267   0048D0  EF6C  F024         	goto	u3511
  6268   0048D4  EF6E  F024         	goto	u3510
  6269   0048D8                     u3511:
  6270   0048D8  EFB6  F024         	goto	l4121
  6271   0048DC                     u3510:
  6272   0048DC  0E01               	movlw	1
  6273   0048DE  6E11               	movwf	___aomod@counter^0,c
  6274   0048E0  EF7C  F024         	goto	l4111
  6275   0048E4                     l4109:
  6276   0048E4  90D8               	bcf	status,0,c
  6277   0048E6  3609               	rlcf	___aomod@divisor^0,f,c
  6278   0048E8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6279   0048EA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6280   0048EC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6281   0048EE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6282   0048F0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6283   0048F2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6284   0048F4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6285   0048F6  2A11               	incf	___aomod@counter^0,f,c
  6286   0048F8                     l4111:
  6287   0048F8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6288   0048FA  EF81  F024         	goto	u3521
  6289   0048FE  EF83  F024         	goto	u3520
  6290   004902                     u3521:
  6291   004902  EF72  F024         	goto	l4109
  6292   004906                     u3520:
  6293   004906                     l4113:
  6294   004906  5009               	movf	___aomod@divisor^0,w,c
  6295   004908  5C01               	subwf	___aomod@dividend^0,w,c
  6296   00490A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6297   00490C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6298   00490E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6299   004910  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6300   004912  500C               	movf	(___aomod@divisor+3)^0,w,c
  6301   004914  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6302   004916  500D               	movf	(___aomod@divisor+4)^0,w,c
  6303   004918  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6304   00491A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6305   00491C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6306   00491E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6307   004920  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6308   004922  5010               	movf	(___aomod@divisor+7)^0,w,c
  6309   004924  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6310   004926  A0D8               	btfss	status,0,c
  6311   004928  EF98  F024         	goto	u3531
  6312   00492C  EF9A  F024         	goto	u3530
  6313   004930                     u3531:
  6314   004930  EFAA  F024         	goto	l4117
  6315   004934                     u3530:
  6316   004934  5009               	movf	___aomod@divisor^0,w,c
  6317   004936  5E01               	subwf	___aomod@dividend^0,f,c
  6318   004938  500A               	movf	(___aomod@divisor+1)^0,w,c
  6319   00493A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6320   00493C  500B               	movf	(___aomod@divisor+2)^0,w,c
  6321   00493E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6322   004940  500C               	movf	(___aomod@divisor+3)^0,w,c
  6323   004942  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6324   004944  500D               	movf	(___aomod@divisor+4)^0,w,c
  6325   004946  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6326   004948  500E               	movf	(___aomod@divisor+5)^0,w,c
  6327   00494A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6328   00494C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6329   00494E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6330   004950  5010               	movf	(___aomod@divisor+7)^0,w,c
  6331   004952  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6332   004954                     l4117:
  6333   004954  90D8               	bcf	status,0,c
  6334   004956  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6335   004958  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6336   00495A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6337   00495C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6338   00495E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6339   004960  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6340   004962  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6341   004964  3209               	rrcf	___aomod@divisor^0,f,c
  6342   004966  2E11               	decfsz	___aomod@counter^0,f,c
  6343   004968  EF83  F024         	goto	l4113
  6344   00496C                     l4121:
  6345   00496C  5012               	movf	___aomod@sign^0,w,c
  6346   00496E  B4D8               	btfsc	status,2,c
  6347   004970  EFBC  F024         	goto	u3541
  6348   004974  EFBE  F024         	goto	u3540
  6349   004978                     u3541:
  6350   004978  EFCE  F024         	goto	l4125
  6351   00497C                     u3540:
  6352   00497C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6353   00497E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6354   004980  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6355   004982  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6356   004984  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6357   004986  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6358   004988  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6359   00498A  6C01               	negf	___aomod@dividend^0,c
  6360   00498C  0E00               	movlw	0
  6361   00498E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6362   004990  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6363   004992  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6364   004994  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6365   004996  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6366   004998  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6367   00499A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6368   00499C                     l4125:
  6369   00499C  C001  F001         	movff	___aomod@dividend,?___aomod
  6370   0049A0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6371   0049A4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6372   0049A8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6373   0049AC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6374   0049B0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6375   0049B4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6376   0049B8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6377   0049BC  0012               	return		;funcret
  6378   0049BE                     __end_of___aomod:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function ___aodiv *****************
  6382 ;; Defined at:
  6383 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  dividend        8    0[COMRAM] long long 
  6386 ;;  divisor         8    8[COMRAM] long long 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  quotient        8   18[COMRAM] long long 
  6389 ;;  sign            1   17[COMRAM] unsigned char 
  6390 ;;  counter         1   16[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  8    0[COMRAM] long long 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6400 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6404 ;;Total ram usage:       26 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_dtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text20
  6415   004566                     __ptext20:
  6416                           	callstack 0
  6417   004566                     ___aodiv:
  6418                           	callstack 25
  6419   004566  0E00               	movlw	0
  6420   004568  6E12               	movwf	___aodiv@sign^0,c
  6421   00456A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6422   00456C  EFBC  F022         	goto	u3420
  6423   004570  EFBA  F022         	goto	u3421
  6424   004574                     u3421:
  6425   004574  EFCE  F022         	goto	l4057
  6426   004578                     u3420:
  6427   004578  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6428   00457A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6429   00457C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6430   00457E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6431   004580  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6432   004582  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6433   004584  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6434   004586  6C09               	negf	___aodiv@divisor^0,c
  6435   004588  0E00               	movlw	0
  6436   00458A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6437   00458C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6438   00458E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6439   004590  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6440   004592  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6441   004594  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6442   004596  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6443   004598  0E01               	movlw	1
  6444   00459A  6E12               	movwf	___aodiv@sign^0,c
  6445   00459C                     l4057:
  6446   00459C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6447   00459E  EFD5  F022         	goto	u3430
  6448   0045A2  EFD3  F022         	goto	u3431
  6449   0045A6                     u3431:
  6450   0045A6  EFE7  F022         	goto	l4063
  6451   0045AA                     u3430:
  6452   0045AA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6453   0045AC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6454   0045AE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6455   0045B0  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6456   0045B2  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6457   0045B4  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6458   0045B6  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6459   0045B8  6C01               	negf	___aodiv@dividend^0,c
  6460   0045BA  0E00               	movlw	0
  6461   0045BC  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6462   0045BE  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6463   0045C0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6464   0045C2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6465   0045C4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6466   0045C6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6467   0045C8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6468   0045CA  0E01               	movlw	1
  6469   0045CC  1A12               	xorwf	___aodiv@sign^0,f,c
  6470   0045CE                     l4063:
  6471   0045CE  EE20  F013         	lfsr	2,___aodiv@quotient
  6472   0045D2  0E07               	movlw	7
  6473   0045D4                     u3441:
  6474   0045D4  6ADE               	clrf	postinc2,c
  6475   0045D6  06E8               	decf	wreg,f,c
  6476   0045D8  E2FD               	bc	u3441
  6477   0045DA  5009               	movf	___aodiv@divisor^0,w,c
  6478   0045DC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6479   0045DE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6480   0045E0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6481   0045E2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6482   0045E4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6483   0045E6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6484   0045E8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6485   0045EA  B4D8               	btfsc	status,2,c
  6486   0045EC  EFFA  F022         	goto	u3451
  6487   0045F0  EFFC  F022         	goto	u3450
  6488   0045F4                     u3451:
  6489   0045F4  EF4E  F023         	goto	l4085
  6490   0045F8                     u3450:
  6491   0045F8  0E01               	movlw	1
  6492   0045FA  6E11               	movwf	___aodiv@counter^0,c
  6493   0045FC  EF0A  F023         	goto	l4071
  6494   004600                     l4069:
  6495   004600  90D8               	bcf	status,0,c
  6496   004602  3609               	rlcf	___aodiv@divisor^0,f,c
  6497   004604  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6498   004606  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6499   004608  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6500   00460A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6501   00460C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6502   00460E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6503   004610  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6504   004612  2A11               	incf	___aodiv@counter^0,f,c
  6505   004614                     l4071:
  6506   004614  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6507   004616  EF0F  F023         	goto	u3461
  6508   00461A  EF11  F023         	goto	u3460
  6509   00461E                     u3461:
  6510   00461E  EF00  F023         	goto	l4069
  6511   004622                     u3460:
  6512   004622                     l4073:
  6513   004622  90D8               	bcf	status,0,c
  6514   004624  3613               	rlcf	___aodiv@quotient^0,f,c
  6515   004626  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6516   004628  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6517   00462A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6518   00462C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6519   00462E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6520   004630  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6521   004632  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6522   004634  5009               	movf	___aodiv@divisor^0,w,c
  6523   004636  5C01               	subwf	___aodiv@dividend^0,w,c
  6524   004638  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6525   00463A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6526   00463C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6527   00463E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6528   004640  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6529   004642  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6530   004644  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6531   004646  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6532   004648  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6533   00464A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6534   00464C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6535   00464E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6536   004650  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6537   004652  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6538   004654  A0D8               	btfss	status,0,c
  6539   004656  EF2F  F023         	goto	u3471
  6540   00465A  EF31  F023         	goto	u3470
  6541   00465E                     u3471:
  6542   00465E  EF42  F023         	goto	l4081
  6543   004662                     u3470:
  6544   004662  5009               	movf	___aodiv@divisor^0,w,c
  6545   004664  5E01               	subwf	___aodiv@dividend^0,f,c
  6546   004666  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6547   004668  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6548   00466A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6549   00466C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6550   00466E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6551   004670  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6552   004672  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6553   004674  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6554   004676  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6555   004678  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6556   00467A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6557   00467C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6558   00467E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6559   004680  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6560   004682  8013               	bsf	___aodiv@quotient^0,0,c
  6561   004684                     l4081:
  6562   004684  90D8               	bcf	status,0,c
  6563   004686  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6564   004688  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6565   00468A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6566   00468C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6567   00468E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6568   004690  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6569   004692  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6570   004694  3209               	rrcf	___aodiv@divisor^0,f,c
  6571   004696  2E11               	decfsz	___aodiv@counter^0,f,c
  6572   004698  EF11  F023         	goto	l4073
  6573   00469C                     l4085:
  6574   00469C  5012               	movf	___aodiv@sign^0,w,c
  6575   00469E  B4D8               	btfsc	status,2,c
  6576   0046A0  EF54  F023         	goto	u3481
  6577   0046A4  EF56  F023         	goto	u3480
  6578   0046A8                     u3481:
  6579   0046A8  EF66  F023         	goto	l4089
  6580   0046AC                     u3480:
  6581   0046AC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6582   0046AE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6583   0046B0  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6584   0046B2  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6585   0046B4  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6586   0046B6  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6587   0046B8  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6588   0046BA  6C13               	negf	___aodiv@quotient^0,c
  6589   0046BC  0E00               	movlw	0
  6590   0046BE  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6591   0046C0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6592   0046C2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6593   0046C4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6594   0046C6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6595   0046C8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6596   0046CA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6597   0046CC                     l4089:
  6598   0046CC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6599   0046D0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6600   0046D4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6601   0046D8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6602   0046DC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6603   0046E0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6604   0046E4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6605   0046E8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6606   0046EC  0012               	return		;funcret
  6607   0046EE                     __end_of___aodiv:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _sendStringSerial4 *****************
  6611 ;; Defined at:
  6612 ;;		line 33 in file "serial.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  string          2    1[COMRAM] PTR unsigned char 
  6615 ;;		 -> main@buf(100), 
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;		None
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;Total ram usage:        2 bytes
  6632 ;; Hardware stack levels used: 1
  6633 ;; Hardware stack levels required when called: 2
  6634 ;; This function calls:
  6635 ;;		_sendCharSerial4
  6636 ;; This function is called by:
  6637 ;;		_main
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text21
  6642   005F44                     __ptext21:
  6643                           	callstack 0
  6644   005F44                     _sendStringSerial4:
  6645                           	callstack 28
  6646   005F44                     
  6647                           ;serial.c: 34:     while (*string!=0){
  6648   005F44  EFAD  F02F         	goto	l5447
  6649   005F48                     l5443:
  6650                           
  6651                           ;serial.c: 35:         sendCharSerial4(*string++);
  6652   005F48  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6653   005F4C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6654   005F50  50DF               	movf	indf2,w,c
  6655   005F52  EC38  F030         	call	_sendCharSerial4
  6656   005F56  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6657   005F58  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6658   005F5A                     l5447:
  6659                           
  6660                           ;serial.c: 34:     while (*string!=0){
  6661   005F5A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6662   005F5E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6663   005F62  50DF               	movf	indf2,w,c
  6664   005F64  A4D8               	btfss	status,2,c
  6665   005F66  EFB7  F02F         	goto	u5431
  6666   005F6A  EFB9  F02F         	goto	u5430
  6667   005F6E                     u5431:
  6668   005F6E  EFA4  F02F         	goto	l5443
  6669   005F72                     u5430:
  6670   005F72  0012               	return		;funcret
  6671   005F74                     __end_of_sendStringSerial4:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function _sendCharSerial4 *****************
  6675 ;; Defined at:
  6676 ;;		line 26 in file "serial.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;  charToSend      1    wreg     unsigned char 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  charToSend      1    0[COMRAM] unsigned char 
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;Total ram usage:        1 bytes
  6695 ;; Hardware stack levels used: 1
  6696 ;; Hardware stack levels required when called: 1
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_sendStringSerial4
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text22
  6705   006070                     __ptext22:
  6706                           	callstack 0
  6707   006070                     _sendCharSerial4:
  6708                           	callstack 28
  6709                           
  6710                           ;incstack = 0
  6711                           ;sendCharSerial4@charToSend stored from wreg
  6712   006070  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6713   006072                     l195:
  6714   006072  010E               	movlb	14	; () banked
  6715   006074  A537               	btfss	55,2,b	;volatile
  6716   006076  EF3F  F030         	goto	u4981
  6717   00607A  EF41  F030         	goto	u4980
  6718   00607E                     u4981:
  6719   00607E  EF39  F030         	goto	l195
  6720   006082                     u4980:
  6721   006082                     
  6722                           ; BSR set to: 14
  6723                           ;serial.c: 28:     TX4REG = charToSend;
  6724   006082  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6725   006086                     
  6726                           ; BSR set to: 14
  6727   006086  0012               	return		;funcret
  6728   006088                     __end_of_sendCharSerial4:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _readColours *****************
  6732 ;; Defined at:
  6733 ;;		line 106 in file "color.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  vals            2   11[COMRAM] PTR struct RGB
  6736 ;;		 -> vals(8), 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;Total ram usage:        2 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 4
  6755 ;; This function calls:
  6756 ;;		_color_read_Blue
  6757 ;;		_color_read_Green
  6758 ;;		_color_read_Red
  6759 ;;		_color_read_lum
  6760 ;; This function is called by:
  6761 ;;		_main
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           	psect	text23
  6766   005654                     __ptext23:
  6767                           	callstack 0
  6768   005654                     _readColours:
  6769                           	callstack 26
  6770   005654                     
  6771                           ;color.c: 108:     vals ->R = color_read_Red();
  6772   005654  EC7C  F02D         	call	_color_read_Red	;wreg free
  6773   005658  C00C  FFD9         	movff	readColours@vals,fsr2l
  6774   00565C  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6775   005660  C005  FFDE         	movff	?_color_read_Red,postinc2
  6776   005664  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6777                           
  6778                           ;color.c: 109:     vals ->B = color_read_Blue();
  6779   005668  ECCC  F02D         	call	_color_read_Blue	;wreg free
  6780   00566C  EE20 F004          	lfsr	2,4
  6781   005670  500C               	movf	readColours@vals^0,w,c
  6782   005672  26D9               	addwf	fsr2l,f,c
  6783   005674  500D               	movf	(readColours@vals+1)^0,w,c
  6784   005676  22DA               	addwfc	fsr2h,f,c
  6785   005678  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6786   00567C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6787                           
  6788                           ;color.c: 110:     vals ->G = color_read_Green();
  6789   005680  ECA4  F02D         	call	_color_read_Green	;wreg free
  6790   005684  EE20 F002          	lfsr	2,2
  6791   005688  500C               	movf	readColours@vals^0,w,c
  6792   00568A  26D9               	addwf	fsr2l,f,c
  6793   00568C  500D               	movf	(readColours@vals+1)^0,w,c
  6794   00568E  22DA               	addwfc	fsr2h,f,c
  6795   005690  C005  FFDE         	movff	?_color_read_Green,postinc2
  6796   005694  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6797                           
  6798                           ;color.c: 111:     vals ->L = color_read_lum();
  6799   005698  EC54  F02D         	call	_color_read_lum	;wreg free
  6800   00569C  EE20 F006          	lfsr	2,6
  6801   0056A0  500C               	movf	readColours@vals^0,w,c
  6802   0056A2  26D9               	addwf	fsr2l,f,c
  6803   0056A4  500D               	movf	(readColours@vals+1)^0,w,c
  6804   0056A6  22DA               	addwfc	fsr2h,f,c
  6805   0056A8  C005  FFDE         	movff	?_color_read_lum,postinc2
  6806   0056AC  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6807   0056B0  0012               	return		;funcret
  6808   0056B2                     __end_of_readColours:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function _color_read_lum *****************
  6812 ;; Defined at:
  6813 ;;		line 50 in file "color.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  tmp             2    9[COMRAM] unsigned int 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  2    4[COMRAM] unsigned int 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;Total ram usage:        7 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 3
  6834 ;; This function calls:
  6835 ;;		_I2C_2_Master_Read
  6836 ;;		_I2C_2_Master_RepStart
  6837 ;;		_I2C_2_Master_Start
  6838 ;;		_I2C_2_Master_Stop
  6839 ;;		_I2C_2_Master_Write
  6840 ;; This function is called by:
  6841 ;;		_readColours
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           	psect	text24
  6846   005AA8                     __ptext24:
  6847                           	callstack 0
  6848   005AA8                     _color_read_lum:
  6849                           	callstack 26
  6850   005AA8                     
  6851                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6852   005AA8  EC60  F030         	call	_I2C_2_Master_Start	;wreg free
  6853                           
  6854                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6855   005AAC  0E52               	movlw	82
  6856   005AAE  EC44  F030         	call	_I2C_2_Master_Write
  6857                           
  6858                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6859   005AB2  0EB4               	movlw	180
  6860   005AB4  EC44  F030         	call	_I2C_2_Master_Write
  6861                           
  6862                           ;color.c: 56:  I2C_2_Master_RepStart();
  6863   005AB8  EC56  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6864                           
  6865                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6866   005ABC  0E53               	movlw	83
  6867   005ABE  EC44  F030         	call	_I2C_2_Master_Write
  6868                           
  6869                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6870   005AC2  0E01               	movlw	1
  6871   005AC4  ECD0  F02E         	call	_I2C_2_Master_Read
  6872   005AC8  6E07               	movwf	??_color_read_lum^0,c
  6873   005ACA  5007               	movf	??_color_read_lum^0,w,c
  6874   005ACC  6E0A               	movwf	color_read_lum@tmp^0,c
  6875   005ACE  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6876                           
  6877                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6878   005AD0  0E00               	movlw	0
  6879   005AD2  ECD0  F02E         	call	_I2C_2_Master_Read
  6880   005AD6  6E07               	movwf	??_color_read_lum^0,c
  6881   005AD8  5007               	movf	??_color_read_lum^0,w,c
  6882   005ADA  6E09               	movwf	(??_color_read_lum+2)^0,c
  6883   005ADC  6A08               	clrf	(??_color_read_lum+1)^0,c
  6884   005ADE  500A               	movf	color_read_lum@tmp^0,w,c
  6885   005AE0  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6886   005AE2  6E0A               	movwf	color_read_lum@tmp^0,c
  6887   005AE4  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6888   005AE6  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6889   005AE8  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6890                           
  6891                           ;color.c: 60:  I2C_2_Master_Stop();
  6892   005AEA  EC5B  F030         	call	_I2C_2_Master_Stop	;wreg free
  6893   005AEE                     
  6894                           ;color.c: 61:  return tmp;
  6895   005AEE  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6896   005AF2  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6897   005AF6  0012               	return		;funcret
  6898   005AF8                     __end_of_color_read_lum:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _color_read_Red *****************
  6902 ;; Defined at:
  6903 ;;		line 64 in file "color.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  tmp             2    9[COMRAM] unsigned int 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2    4[COMRAM] unsigned int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;Total ram usage:        7 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 3
  6924 ;; This function calls:
  6925 ;;		_I2C_2_Master_Read
  6926 ;;		_I2C_2_Master_RepStart
  6927 ;;		_I2C_2_Master_Start
  6928 ;;		_I2C_2_Master_Stop
  6929 ;;		_I2C_2_Master_Write
  6930 ;; This function is called by:
  6931 ;;		_readColours
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text25
  6936   005AF8                     __ptext25:
  6937                           	callstack 0
  6938   005AF8                     _color_read_Red:
  6939                           	callstack 26
  6940   005AF8                     
  6941                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6942   005AF8  EC60  F030         	call	_I2C_2_Master_Start	;wreg free
  6943                           
  6944                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6945   005AFC  0E52               	movlw	82
  6946   005AFE  EC44  F030         	call	_I2C_2_Master_Write
  6947                           
  6948                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6949   005B02  0EB6               	movlw	182
  6950   005B04  EC44  F030         	call	_I2C_2_Master_Write
  6951                           
  6952                           ;color.c: 70:  I2C_2_Master_RepStart();
  6953   005B08  EC56  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6954                           
  6955                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6956   005B0C  0E53               	movlw	83
  6957   005B0E  EC44  F030         	call	_I2C_2_Master_Write
  6958                           
  6959                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6960   005B12  0E01               	movlw	1
  6961   005B14  ECD0  F02E         	call	_I2C_2_Master_Read
  6962   005B18  6E07               	movwf	??_color_read_Red^0,c
  6963   005B1A  5007               	movf	??_color_read_Red^0,w,c
  6964   005B1C  6E0A               	movwf	color_read_Red@tmp^0,c
  6965   005B1E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6966                           
  6967                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6968   005B20  0E00               	movlw	0
  6969   005B22  ECD0  F02E         	call	_I2C_2_Master_Read
  6970   005B26  6E07               	movwf	??_color_read_Red^0,c
  6971   005B28  5007               	movf	??_color_read_Red^0,w,c
  6972   005B2A  6E09               	movwf	(??_color_read_Red+2)^0,c
  6973   005B2C  6A08               	clrf	(??_color_read_Red+1)^0,c
  6974   005B2E  500A               	movf	color_read_Red@tmp^0,w,c
  6975   005B30  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6976   005B32  6E0A               	movwf	color_read_Red@tmp^0,c
  6977   005B34  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6978   005B36  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6979   005B38  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6980                           
  6981                           ;color.c: 74:  I2C_2_Master_Stop();
  6982   005B3A  EC5B  F030         	call	_I2C_2_Master_Stop	;wreg free
  6983   005B3E                     
  6984                           ;color.c: 75:  return tmp;
  6985   005B3E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6986   005B42  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6987   005B46  0012               	return		;funcret
  6988   005B48                     __end_of_color_read_Red:
  6989                           	callstack 0
  6990                           
  6991 ;; *************** function _color_read_Green *****************
  6992 ;; Defined at:
  6993 ;;		line 77 in file "color.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;  tmp             2    9[COMRAM] unsigned int 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  2    4[COMRAM] unsigned int 
  7000 ;; Registers used:
  7001 ;;		wreg, status,2, status,0, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7011 ;;Total ram usage:        7 bytes
  7012 ;; Hardware stack levels used: 1
  7013 ;; Hardware stack levels required when called: 3
  7014 ;; This function calls:
  7015 ;;		_I2C_2_Master_Read
  7016 ;;		_I2C_2_Master_RepStart
  7017 ;;		_I2C_2_Master_Start
  7018 ;;		_I2C_2_Master_Stop
  7019 ;;		_I2C_2_Master_Write
  7020 ;; This function is called by:
  7021 ;;		_readColours
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text26
  7026   005B48                     __ptext26:
  7027                           	callstack 0
  7028   005B48                     _color_read_Green:
  7029                           	callstack 26
  7030   005B48                     
  7031                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  7032   005B48  EC60  F030         	call	_I2C_2_Master_Start	;wreg free
  7033                           
  7034                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  7035   005B4C  0E52               	movlw	82
  7036   005B4E  EC44  F030         	call	_I2C_2_Master_Write
  7037                           
  7038                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  7039   005B52  0EB8               	movlw	184
  7040   005B54  EC44  F030         	call	_I2C_2_Master_Write
  7041                           
  7042                           ;color.c: 83:  I2C_2_Master_RepStart();
  7043   005B58  EC56  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7044                           
  7045                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  7046   005B5C  0E53               	movlw	83
  7047   005B5E  EC44  F030         	call	_I2C_2_Master_Write
  7048                           
  7049                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  7050   005B62  0E01               	movlw	1
  7051   005B64  ECD0  F02E         	call	_I2C_2_Master_Read
  7052   005B68  6E07               	movwf	??_color_read_Green^0,c
  7053   005B6A  5007               	movf	??_color_read_Green^0,w,c
  7054   005B6C  6E0A               	movwf	color_read_Green@tmp^0,c
  7055   005B6E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7056                           
  7057                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7058   005B70  0E00               	movlw	0
  7059   005B72  ECD0  F02E         	call	_I2C_2_Master_Read
  7060   005B76  6E07               	movwf	??_color_read_Green^0,c
  7061   005B78  5007               	movf	??_color_read_Green^0,w,c
  7062   005B7A  6E09               	movwf	(??_color_read_Green+2)^0,c
  7063   005B7C  6A08               	clrf	(??_color_read_Green+1)^0,c
  7064   005B7E  500A               	movf	color_read_Green@tmp^0,w,c
  7065   005B80  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7066   005B82  6E0A               	movwf	color_read_Green@tmp^0,c
  7067   005B84  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7068   005B86  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7069   005B88  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7070                           
  7071                           ;color.c: 87:  I2C_2_Master_Stop();
  7072   005B8A  EC5B  F030         	call	_I2C_2_Master_Stop	;wreg free
  7073   005B8E                     
  7074                           ;color.c: 88:  return tmp;
  7075   005B8E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7076   005B92  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7077   005B96  0012               	return		;funcret
  7078   005B98                     __end_of_color_read_Green:
  7079                           	callstack 0
  7080                           
  7081 ;; *************** function _color_read_Blue *****************
  7082 ;; Defined at:
  7083 ;;		line 91 in file "color.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  tmp             2    9[COMRAM] unsigned int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2    4[COMRAM] unsigned int 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7099 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7100 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;Total ram usage:        7 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 3
  7104 ;; This function calls:
  7105 ;;		_I2C_2_Master_Read
  7106 ;;		_I2C_2_Master_RepStart
  7107 ;;		_I2C_2_Master_Start
  7108 ;;		_I2C_2_Master_Stop
  7109 ;;		_I2C_2_Master_Write
  7110 ;; This function is called by:
  7111 ;;		_readColours
  7112 ;; This function uses a non-reentrant model
  7113 ;;
  7114                           
  7115                           	psect	text27
  7116   005B98                     __ptext27:
  7117                           	callstack 0
  7118   005B98                     _color_read_Blue:
  7119                           	callstack 26
  7120   005B98                     
  7121                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  7122   005B98  EC60  F030         	call	_I2C_2_Master_Start	;wreg free
  7123                           
  7124                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  7125   005B9C  0E52               	movlw	82
  7126   005B9E  EC44  F030         	call	_I2C_2_Master_Write
  7127                           
  7128                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  7129   005BA2  0EBA               	movlw	186
  7130   005BA4  EC44  F030         	call	_I2C_2_Master_Write
  7131                           
  7132                           ;color.c: 97:  I2C_2_Master_RepStart();
  7133   005BA8  EC56  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7134                           
  7135                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  7136   005BAC  0E53               	movlw	83
  7137   005BAE  EC44  F030         	call	_I2C_2_Master_Write
  7138                           
  7139                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  7140   005BB2  0E01               	movlw	1
  7141   005BB4  ECD0  F02E         	call	_I2C_2_Master_Read
  7142   005BB8  6E07               	movwf	??_color_read_Blue^0,c
  7143   005BBA  5007               	movf	??_color_read_Blue^0,w,c
  7144   005BBC  6E0A               	movwf	color_read_Blue@tmp^0,c
  7145   005BBE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7146                           
  7147                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7148   005BC0  0E00               	movlw	0
  7149   005BC2  ECD0  F02E         	call	_I2C_2_Master_Read
  7150   005BC6  6E07               	movwf	??_color_read_Blue^0,c
  7151   005BC8  5007               	movf	??_color_read_Blue^0,w,c
  7152   005BCA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7153   005BCC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7154   005BCE  500A               	movf	color_read_Blue@tmp^0,w,c
  7155   005BD0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7156   005BD2  6E0A               	movwf	color_read_Blue@tmp^0,c
  7157   005BD4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7158   005BD6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7159   005BD8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7160                           
  7161                           ;color.c: 101:  I2C_2_Master_Stop();
  7162   005BDA  EC5B  F030         	call	_I2C_2_Master_Stop	;wreg free
  7163   005BDE                     
  7164                           ;color.c: 102:  return tmp;
  7165   005BDE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7166   005BE2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7167   005BE6  0012               	return		;funcret
  7168   005BE8                     __end_of_color_read_Blue:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _I2C_2_Master_RepStart *****************
  7172 ;; Defined at:
  7173 ;;		line 33 in file "i2c.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;		None
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;		None
  7178 ;; Return value:  Size  Location     Type
  7179 ;;                  1    wreg      void 
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;Total ram usage:        0 bytes
  7192 ;; Hardware stack levels used: 1
  7193 ;; Hardware stack levels required when called: 2
  7194 ;; This function calls:
  7195 ;;		_I2C_2_Master_Idle
  7196 ;; This function is called by:
  7197 ;;		_color_read_lum
  7198 ;;		_color_read_Red
  7199 ;;		_color_read_Green
  7200 ;;		_color_read_Blue
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text28
  7205   0060AC                     __ptext28:
  7206                           	callstack 0
  7207   0060AC                     _I2C_2_Master_RepStart:
  7208                           	callstack 26
  7209   0060AC                     
  7210                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7211   0060AC  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7212   0060B0                     
  7213                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7214   0060B0  010E               	movlb	14	; () banked
  7215   0060B2  83DA               	bsf	218,1,b	;volatile
  7216   0060B4                     
  7217                           ; BSR set to: 14
  7218   0060B4  0012               	return		;funcret
  7219   0060B6                     __end_of_I2C_2_Master_RepStart:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function _I2C_2_Master_Read *****************
  7223 ;; Defined at:
  7224 ;;		line 51 in file "i2c.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  ack             1    wreg     unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  ack             1    2[COMRAM] unsigned char 
  7229 ;;  tmp             1    3[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      unsigned char 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;Total ram usage:        3 bytes
  7244 ;; Hardware stack levels used: 1
  7245 ;; Hardware stack levels required when called: 2
  7246 ;; This function calls:
  7247 ;;		_I2C_2_Master_Idle
  7248 ;; This function is called by:
  7249 ;;		_color_read_lum
  7250 ;;		_color_read_Red
  7251 ;;		_color_read_Green
  7252 ;;		_color_read_Blue
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text29
  7257   005DA0                     __ptext29:
  7258                           	callstack 0
  7259   005DA0                     _I2C_2_Master_Read:
  7260                           	callstack 26
  7261                           
  7262                           ; BSR set to: 14
  7263                           ;incstack = 0
  7264                           ;I2C_2_Master_Read@ack stored from wreg
  7265   005DA0  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7266   005DA2                     
  7267                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7268   005DA2  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7269   005DA6                     
  7270                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7271   005DA6  010E               	movlb	14	; () banked
  7272   005DA8  87DA               	bsf	218,3,b	;volatile
  7273                           
  7274                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7275   005DAA  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7276   005DAE                     
  7277                           ;i2c.c: 57:   tmp = SSP2BUF;
  7278   005DAE  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7279                           
  7280                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7281   005DB2  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  7282   005DB6                     
  7283                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7284   005DB6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7285   005DB8  B4D8               	btfsc	status,2,c
  7286   005DBA  EFE1  F02E         	goto	u4911
  7287   005DBE  EFE5  F02E         	goto	u4910
  7288   005DC2                     u4911:
  7289   005DC2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7290   005DC4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7291   005DC6  EFE6  F02E         	goto	u4928
  7292   005DCA                     u4910:
  7293   005DCA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7294   005DCC                     u4928:
  7295   005DCC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7296   005DCE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7297   005DD0  010E               	movlb	14	; () banked
  7298   005DD2  51DA               	movf	218,w,b	;volatile
  7299   005DD4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7300   005DD6  0BDF               	andlw	-33
  7301   005DD8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7302   005DDA  6FDA               	movwf	218,b	;volatile
  7303   005DDC                     
  7304                           ; BSR set to: 14
  7305                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7306   005DDC  89DA               	bsf	218,4,b	;volatile
  7307   005DDE                     
  7308                           ; BSR set to: 14
  7309                           ;i2c.c: 61:   return tmp;
  7310   005DDE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7311   005DE0                     
  7312                           ; BSR set to: 14
  7313   005DE0  0012               	return		;funcret
  7314   005DE2                     __end_of_I2C_2_Master_Read:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function _initUSART4 *****************
  7318 ;; Defined at:
  7319 ;;		line 4 in file "serial.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;		None
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        0 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 1
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text30
  7348   006052                     __ptext30:
  7349                           	callstack 0
  7350   006052                     _initUSART4:
  7351                           	callstack 29
  7352   006052                     
  7353                           ;serial.c: 5:     RC0PPS = 0x12;
  7354   006052  0E12               	movlw	18
  7355   006054  010E               	movlb	14	; () banked
  7356   006056  6F62               	movwf	98,b	;volatile
  7357                           
  7358                           ;serial.c: 6:     RX4PPS = 0x11;
  7359   006058  0E11               	movlw	17
  7360   00605A  6F15               	movwf	21,b	;volatile
  7361   00605C                     
  7362                           ; BSR set to: 14
  7363                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7364   00605C  97E9               	bcf	233,3,b	;volatile
  7365   00605E                     
  7366                           ; BSR set to: 14
  7367                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7368   00605E  95E8               	bcf	232,2,b	;volatile
  7369                           
  7370                           ;serial.c: 9:     SP4BRGL = 51;
  7371   006060  0E33               	movlw	51
  7372   006062  6FE5               	movwf	229,b	;volatile
  7373                           
  7374                           ;serial.c: 10:     SP4BRGH = 0;
  7375   006064  0E00               	movlw	0
  7376   006066  6FE6               	movwf	230,b	;volatile
  7377   006068                     
  7378                           ; BSR set to: 14
  7379                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7380   006068  89E7               	bsf	231,4,b	;volatile
  7381   00606A                     
  7382                           ; BSR set to: 14
  7383                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7384   00606A  8BE8               	bsf	232,5,b	;volatile
  7385   00606C                     
  7386                           ; BSR set to: 14
  7387                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7388   00606C  8FE7               	bsf	231,7,b	;volatile
  7389   00606E                     
  7390                           ; BSR set to: 14
  7391   00606E  0012               	return		;funcret
  7392   006070                     __end_of_initUSART4:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _initDCmotorsPWM *****************
  7396 ;; Defined at:
  7397 ;;		line 7 in file "dc_motor.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;		None
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1    wreg      void 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;Total ram usage:        2 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; Hardware stack levels required when called: 1
  7418 ;; This function calls:
  7419 ;;		Nothing
  7420 ;; This function is called by:
  7421 ;;		_main
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text31
  7426   0052C8                     __ptext31:
  7427                           	callstack 0
  7428   0052C8                     _initDCmotorsPWM:
  7429                           	callstack 29
  7430   0052C8                     
  7431                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7432   0052C8  0E05               	movlw	5
  7433   0052CA  010E               	movlb	14	; () banked
  7434   0052CC  6F74               	movwf	116,b	;volatile
  7435                           
  7436                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7437   0052CE  0E06               	movlw	6
  7438   0052D0  6F76               	movwf	118,b	;volatile
  7439                           
  7440                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7441   0052D2  0E07               	movlw	7
  7442   0052D4  6F69               	movwf	105,b	;volatile
  7443                           
  7444                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7445   0052D6  0E08               	movlw	8
  7446   0052D8  6F88               	movwf	136,b	;volatile
  7447   0052DA                     
  7448                           ; BSR set to: 14
  7449                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7450   0052DA  9485               	bcf	133,2,c	;volatile
  7451   0052DC                     
  7452                           ; BSR set to: 14
  7453                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7454   0052DC  9885               	bcf	133,4,c	;volatile
  7455   0052DE                     
  7456                           ; BSR set to: 14
  7457                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7458   0052DE  9E83               	bcf	131,7,c	;volatile
  7459   0052E0                     
  7460                           ; BSR set to: 14
  7461                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7462   0052E0  9C87               	bcf	135,6,c	;volatile
  7463                           
  7464                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7465   0052E2  50BD               	movf	189,w,c	;volatile
  7466   0052E4  0B8F               	andlw	-113
  7467   0052E6  0930               	iorlw	48
  7468   0052E8  6EBD               	movwf	189,c	;volatile
  7469                           
  7470                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7471   0052EA  0EE0               	movlw	-32
  7472   0052EC  16BE               	andwf	190,f,c	;volatile
  7473                           
  7474                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7475   0052EE  50BF               	movf	191,w,c	;volatile
  7476   0052F0  0BF0               	andlw	-16
  7477   0052F2  0901               	iorlw	1
  7478   0052F4  6EBF               	movwf	191,c	;volatile
  7479   0052F6                     
  7480                           ; BSR set to: 14
  7481                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7482   0052F6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7483   0052FA                     
  7484                           ; BSR set to: 14
  7485                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7486   0052FA  8EBD               	bsf	189,7,c	;volatile
  7487                           
  7488                           ;dc_motor.c: 35:     CCPR1H=0;
  7489   0052FC  0E00               	movlw	0
  7490   0052FE  6EAA               	movwf	170,c	;volatile
  7491                           
  7492                           ;dc_motor.c: 36:     CCPR2H=0;
  7493   005300  0E00               	movlw	0
  7494   005302  6EA6               	movwf	166,c	;volatile
  7495                           
  7496                           ;dc_motor.c: 37:     CCPR3H=0;
  7497   005304  0E00               	movlw	0
  7498   005306  010F               	movlb	15	; () banked
  7499   005308  6F25               	movwf	37,b	;volatile
  7500                           
  7501                           ;dc_motor.c: 38:     CCPR4H=0;
  7502   00530A  0E00               	movlw	0
  7503   00530C  6F21               	movwf	33,b	;volatile
  7504                           
  7505                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7506   00530E  0EFC               	movlw	-4
  7507   005310  16AD               	andwf	173,f,c	;volatile
  7508                           
  7509                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7510   005312  0EF3               	movlw	-13
  7511   005314  16AD               	andwf	173,f,c	;volatile
  7512                           
  7513                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7514   005316  0ECF               	movlw	-49
  7515   005318  16AD               	andwf	173,f,c	;volatile
  7516                           
  7517                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7518   00531A  0E3F               	movlw	-193
  7519   00531C  16AD               	andwf	173,f,c	;volatile
  7520   00531E                     
  7521                           ; BSR set to: 15
  7522                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7523   00531E  88AB               	bsf	171,4,c	;volatile
  7524                           
  7525                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7526   005320  50AB               	movf	171,w,c	;volatile
  7527   005322  0BF0               	andlw	-16
  7528   005324  090C               	iorlw	12
  7529   005326  6EAB               	movwf	171,c	;volatile
  7530   005328                     
  7531                           ; BSR set to: 15
  7532                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7533   005328  8EAB               	bsf	171,7,c	;volatile
  7534   00532A                     
  7535                           ; BSR set to: 15
  7536                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7537   00532A  88A7               	bsf	167,4,c	;volatile
  7538                           
  7539                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7540   00532C  50A7               	movf	167,w,c	;volatile
  7541   00532E  0BF0               	andlw	-16
  7542   005330  090C               	iorlw	12
  7543   005332  6EA7               	movwf	167,c	;volatile
  7544   005334                     
  7545                           ; BSR set to: 15
  7546                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7547   005334  8EA7               	bsf	167,7,c	;volatile
  7548   005336                     
  7549                           ; BSR set to: 15
  7550                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7551   005336  8926               	bsf	38,4,b	;volatile
  7552                           
  7553                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7554   005338  5126               	movf	38,w,b	;volatile
  7555   00533A  0BF0               	andlw	-16
  7556   00533C  090C               	iorlw	12
  7557   00533E  6F26               	movwf	38,b	;volatile
  7558   005340                     
  7559                           ; BSR set to: 15
  7560                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7561   005340  8F26               	bsf	38,7,b	;volatile
  7562   005342                     
  7563                           ; BSR set to: 15
  7564                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7565   005342  8922               	bsf	34,4,b	;volatile
  7566                           
  7567                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7568   005344  5122               	movf	34,w,b	;volatile
  7569   005346  0BF0               	andlw	-16
  7570   005348  090C               	iorlw	12
  7571   00534A  6F22               	movwf	34,b	;volatile
  7572   00534C                     
  7573                           ; BSR set to: 15
  7574                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7575   00534C  8F22               	bsf	34,7,b	;volatile
  7576   00534E                     
  7577                           ; BSR set to: 15
  7578   00534E  0012               	return		;funcret
  7579   005350                     __end_of_initDCmotorsPWM:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function _go_Home *****************
  7583 ;; Defined at:
  7584 ;;		line 4 in file "Memory.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7587 ;;		 -> WayBack(50), 
  7588 ;;  Time_forward    2   37[COMRAM] PTR int 
  7589 ;;		 -> Time_forward(100), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  i               2   42[COMRAM] int 
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        9 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 6
  7608 ;; This function calls:
  7609 ;;		_BlueMove
  7610 ;;		_GreenMove
  7611 ;;		_LightBlueMove
  7612 ;;		_OrangeMove
  7613 ;;		_RedMove
  7614 ;;		_ReversePink
  7615 ;;		_ReverseYellow
  7616 ;;		_reverseDetect
  7617 ;;		_stop
  7618 ;;		_timed_forward
  7619 ;; This function is called by:
  7620 ;;		_main
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text32
  7625   003A96                     __ptext32:
  7626                           	callstack 0
  7627   003A96                     _go_Home:
  7628                           	callstack 24
  7629   003A96                     
  7630                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  7631   003A96  0E61               	movlw	low _motorL
  7632   003A98  6E20               	movwf	BlueMove@mL^0,c
  7633   003A9A  0E01               	movlw	high _motorL
  7634   003A9C  6E21               	movwf	(BlueMove@mL+1)^0,c
  7635   003A9E  0E58               	movlw	low _motorR
  7636   003AA0  6E22               	movwf	BlueMove@mR^0,c
  7637   003AA2  0E01               	movlw	high _motorR
  7638   003AA4  6E23               	movwf	(BlueMove@mR+1)^0,c
  7639   003AA6  ECC6  F02A         	call	_BlueMove	;wreg free
  7640   003AAA                     
  7641                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  7642   003AAA  9ED5               	bcf	213,7,c	;volatile
  7643   003AAC                     
  7644                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  7645   003AAC  C114  F02B         	movff	_move_count,go_Home@i	;volatile
  7646   003AB0  C115  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7647   003AB4                     l5577:
  7648   003AB4  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7649   003AB6  EF61  F01D         	goto	u5530
  7650   003ABA  EF5F  F01D         	goto	u5531
  7651   003ABE                     u5531:
  7652   003ABE  EF63  F01D         	goto	l5581
  7653   003AC2                     u5530:
  7654   003AC2  EFBA  F01E         	goto	l622
  7655   003AC6                     l5581:
  7656                           
  7657                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7658   003AC6  0E61               	movlw	low _motorL
  7659   003AC8  6E14               	movwf	timed_forward@mL^0,c
  7660   003ACA  0E01               	movlw	high _motorL
  7661   003ACC  6E15               	movwf	(timed_forward@mL+1)^0,c
  7662   003ACE  0E58               	movlw	low _motorR
  7663   003AD0  6E16               	movwf	timed_forward@mR^0,c
  7664   003AD2  0E01               	movlw	high _motorR
  7665   003AD4  6E17               	movwf	(timed_forward@mR+1)^0,c
  7666   003AD6  90D8               	bcf	status,0,c
  7667   003AD8  342B               	rlcf	go_Home@i^0,w,c
  7668   003ADA  6ED9               	movwf	fsr2l,c
  7669   003ADC  342C               	rlcf	(go_Home@i+1)^0,w,c
  7670   003ADE  6EDA               	movwf	fsr2h,c
  7671   003AE0  5026               	movf	go_Home@Time_forward^0,w,c
  7672   003AE2  26D9               	addwf	fsr2l,f,c
  7673   003AE4  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7674   003AE6  22DA               	addwfc	fsr2h,f,c
  7675   003AE8  CFDE F018          	movff	postinc2,timed_forward@time
  7676   003AEC  CFDD F019          	movff	postdec2,timed_forward@time+1
  7677   003AF0  EC7E  F027         	call	_timed_forward	;wreg free
  7678   003AF4                     
  7679                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  7680   003AF4  502B               	movf	go_Home@i^0,w,c
  7681   003AF6  2424               	addwf	go_Home@WayBack^0,w,c
  7682   003AF8  6E28               	movwf	??_go_Home^0,c
  7683   003AFA  502C               	movf	(go_Home@i+1)^0,w,c
  7684   003AFC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7685   003AFE  6E29               	movwf	(??_go_Home+1)^0,c
  7686   003B00  0EFF               	movlw	255
  7687   003B02  2428               	addwf	??_go_Home^0,w,c
  7688   003B04  6ED9               	movwf	fsr2l,c
  7689   003B06  0EFF               	movlw	255
  7690   003B08  2029               	addwfc	(??_go_Home+1)^0,w,c
  7691   003B0A  6EDA               	movwf	fsr2h,c
  7692   003B0C  04DE               	decf	postinc2,w,c
  7693   003B0E  A4D8               	btfss	status,2,c
  7694   003B10  EF8C  F01D         	goto	u5541
  7695   003B14  EF8E  F01D         	goto	u5540
  7696   003B18                     u5541:
  7697   003B18  EFA4  F01D         	goto	l5587
  7698   003B1C                     u5540:
  7699   003B1C                     
  7700                           ;Memory.c: 12:             reverseDetect(&motorL, &motorR);
  7701   003B1C  0E61               	movlw	low _motorL
  7702   003B1E  6E1A               	movwf	reverseDetect@mL^0,c
  7703   003B20  0E01               	movlw	high _motorL
  7704   003B22  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7705   003B24  0E58               	movlw	low _motorR
  7706   003B26  6E1C               	movwf	reverseDetect@mR^0,c
  7707   003B28  0E01               	movlw	high _motorR
  7708   003B2A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7709   003B2C  EC59  F02B         	call	_reverseDetect	;wreg free
  7710                           
  7711                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  7712   003B30  0E61               	movlw	low _motorL
  7713   003B32  6E20               	movwf	GreenMove@mL^0,c
  7714   003B34  0E01               	movlw	high _motorL
  7715   003B36  6E21               	movwf	(GreenMove@mL+1)^0,c
  7716   003B38  0E58               	movlw	low _motorR
  7717   003B3A  6E22               	movwf	GreenMove@mR^0,c
  7718   003B3C  0E01               	movlw	high _motorR
  7719   003B3E  6E23               	movwf	(GreenMove@mR+1)^0,c
  7720   003B40  EC30  F02F         	call	_GreenMove	;wreg free
  7721                           
  7722                           ;Memory.c: 14:         }
  7723   003B44  EFA6  F01E         	goto	l610
  7724   003B48                     l5587:
  7725   003B48  502B               	movf	go_Home@i^0,w,c
  7726   003B4A  2424               	addwf	go_Home@WayBack^0,w,c
  7727   003B4C  6E28               	movwf	??_go_Home^0,c
  7728   003B4E  502C               	movf	(go_Home@i+1)^0,w,c
  7729   003B50  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7730   003B52  6E29               	movwf	(??_go_Home+1)^0,c
  7731   003B54  0EFF               	movlw	255
  7732   003B56  2428               	addwf	??_go_Home^0,w,c
  7733   003B58  6ED9               	movwf	fsr2l,c
  7734   003B5A  0EFF               	movlw	255
  7735   003B5C  2029               	addwfc	(??_go_Home+1)^0,w,c
  7736   003B5E  6EDA               	movwf	fsr2h,c
  7737   003B60  0E02               	movlw	2
  7738   003B62  18DE               	xorwf	postinc2,w,c
  7739   003B64  A4D8               	btfss	status,2,c
  7740   003B66  EFB7  F01D         	goto	u5551
  7741   003B6A  EFB9  F01D         	goto	u5550
  7742   003B6E                     u5551:
  7743   003B6E  EFCF  F01D         	goto	l5591
  7744   003B72                     u5550:
  7745   003B72                     
  7746                           ;Memory.c: 16:             reverseDetect(&motorL, &motorR);
  7747   003B72  0E61               	movlw	low _motorL
  7748   003B74  6E1A               	movwf	reverseDetect@mL^0,c
  7749   003B76  0E01               	movlw	high _motorL
  7750   003B78  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7751   003B7A  0E58               	movlw	low _motorR
  7752   003B7C  6E1C               	movwf	reverseDetect@mR^0,c
  7753   003B7E  0E01               	movlw	high _motorR
  7754   003B80  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7755   003B82  EC59  F02B         	call	_reverseDetect	;wreg free
  7756                           
  7757                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  7758   003B86  0E61               	movlw	low _motorL
  7759   003B88  6E20               	movwf	LightBlueMove@mL^0,c
  7760   003B8A  0E01               	movlw	high _motorL
  7761   003B8C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7762   003B8E  0E58               	movlw	low _motorR
  7763   003B90  6E22               	movwf	LightBlueMove@mR^0,c
  7764   003B92  0E01               	movlw	high _motorR
  7765   003B94  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7766   003B96  EC88  F02C         	call	_LightBlueMove	;wreg free
  7767                           
  7768                           ;Memory.c: 18:         }
  7769   003B9A  EFA6  F01E         	goto	l610
  7770   003B9E                     l5591:
  7771   003B9E  502B               	movf	go_Home@i^0,w,c
  7772   003BA0  2424               	addwf	go_Home@WayBack^0,w,c
  7773   003BA2  6E28               	movwf	??_go_Home^0,c
  7774   003BA4  502C               	movf	(go_Home@i+1)^0,w,c
  7775   003BA6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7776   003BA8  6E29               	movwf	(??_go_Home+1)^0,c
  7777   003BAA  0EFF               	movlw	255
  7778   003BAC  2428               	addwf	??_go_Home^0,w,c
  7779   003BAE  6ED9               	movwf	fsr2l,c
  7780   003BB0  0EFF               	movlw	255
  7781   003BB2  2029               	addwfc	(??_go_Home+1)^0,w,c
  7782   003BB4  6EDA               	movwf	fsr2h,c
  7783   003BB6  0E03               	movlw	3
  7784   003BB8  18DE               	xorwf	postinc2,w,c
  7785   003BBA  A4D8               	btfss	status,2,c
  7786   003BBC  EFE2  F01D         	goto	u5561
  7787   003BC0  EFE4  F01D         	goto	u5560
  7788   003BC4                     u5561:
  7789   003BC4  EFFA  F01D         	goto	l5595
  7790   003BC8                     u5560:
  7791   003BC8                     
  7792                           ;Memory.c: 20:             reverseDetect(&motorL, &motorR);
  7793   003BC8  0E61               	movlw	low _motorL
  7794   003BCA  6E1A               	movwf	reverseDetect@mL^0,c
  7795   003BCC  0E01               	movlw	high _motorL
  7796   003BCE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7797   003BD0  0E58               	movlw	low _motorR
  7798   003BD2  6E1C               	movwf	reverseDetect@mR^0,c
  7799   003BD4  0E01               	movlw	high _motorR
  7800   003BD6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7801   003BD8  EC59  F02B         	call	_reverseDetect	;wreg free
  7802                           
  7803                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  7804   003BDC  0E61               	movlw	low _motorL
  7805   003BDE  6E20               	movwf	ReverseYellow@mL^0,c
  7806   003BE0  0E01               	movlw	high _motorL
  7807   003BE2  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  7808   003BE4  0E58               	movlw	low _motorR
  7809   003BE6  6E22               	movwf	ReverseYellow@mR^0,c
  7810   003BE8  0E01               	movlw	high _motorR
  7811   003BEA  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  7812   003BEC  ECC8  F026         	call	_ReverseYellow	;wreg free
  7813                           
  7814                           ;Memory.c: 22:         }
  7815   003BF0  EFA6  F01E         	goto	l610
  7816   003BF4                     l5595:
  7817   003BF4  502B               	movf	go_Home@i^0,w,c
  7818   003BF6  2424               	addwf	go_Home@WayBack^0,w,c
  7819   003BF8  6E28               	movwf	??_go_Home^0,c
  7820   003BFA  502C               	movf	(go_Home@i+1)^0,w,c
  7821   003BFC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7822   003BFE  6E29               	movwf	(??_go_Home+1)^0,c
  7823   003C00  0EFF               	movlw	255
  7824   003C02  2428               	addwf	??_go_Home^0,w,c
  7825   003C04  6ED9               	movwf	fsr2l,c
  7826   003C06  0EFF               	movlw	255
  7827   003C08  2029               	addwfc	(??_go_Home+1)^0,w,c
  7828   003C0A  6EDA               	movwf	fsr2h,c
  7829   003C0C  0E04               	movlw	4
  7830   003C0E  18DE               	xorwf	postinc2,w,c
  7831   003C10  A4D8               	btfss	status,2,c
  7832   003C12  EF0D  F01E         	goto	u5571
  7833   003C16  EF0F  F01E         	goto	u5570
  7834   003C1A                     u5571:
  7835   003C1A  EF25  F01E         	goto	l5599
  7836   003C1E                     u5570:
  7837   003C1E                     
  7838                           ;Memory.c: 24:             reverseDetect(&motorL, &motorR);
  7839   003C1E  0E61               	movlw	low _motorL
  7840   003C20  6E1A               	movwf	reverseDetect@mL^0,c
  7841   003C22  0E01               	movlw	high _motorL
  7842   003C24  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7843   003C26  0E58               	movlw	low _motorR
  7844   003C28  6E1C               	movwf	reverseDetect@mR^0,c
  7845   003C2A  0E01               	movlw	high _motorR
  7846   003C2C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7847   003C2E  EC59  F02B         	call	_reverseDetect	;wreg free
  7848                           
  7849                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  7850   003C32  0E61               	movlw	low _motorL
  7851   003C34  6E20               	movwf	BlueMove@mL^0,c
  7852   003C36  0E01               	movlw	high _motorL
  7853   003C38  6E21               	movwf	(BlueMove@mL+1)^0,c
  7854   003C3A  0E58               	movlw	low _motorR
  7855   003C3C  6E22               	movwf	BlueMove@mR^0,c
  7856   003C3E  0E01               	movlw	high _motorR
  7857   003C40  6E23               	movwf	(BlueMove@mR+1)^0,c
  7858   003C42  ECC6  F02A         	call	_BlueMove	;wreg free
  7859                           
  7860                           ;Memory.c: 26:         }
  7861   003C46  EFA6  F01E         	goto	l610
  7862   003C4A                     l5599:
  7863   003C4A  502B               	movf	go_Home@i^0,w,c
  7864   003C4C  2424               	addwf	go_Home@WayBack^0,w,c
  7865   003C4E  6E28               	movwf	??_go_Home^0,c
  7866   003C50  502C               	movf	(go_Home@i+1)^0,w,c
  7867   003C52  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7868   003C54  6E29               	movwf	(??_go_Home+1)^0,c
  7869   003C56  0EFF               	movlw	255
  7870   003C58  2428               	addwf	??_go_Home^0,w,c
  7871   003C5A  6ED9               	movwf	fsr2l,c
  7872   003C5C  0EFF               	movlw	255
  7873   003C5E  2029               	addwfc	(??_go_Home+1)^0,w,c
  7874   003C60  6EDA               	movwf	fsr2h,c
  7875   003C62  0E05               	movlw	5
  7876   003C64  18DE               	xorwf	postinc2,w,c
  7877   003C66  A4D8               	btfss	status,2,c
  7878   003C68  EF38  F01E         	goto	u5581
  7879   003C6C  EF3A  F01E         	goto	u5580
  7880   003C70                     u5581:
  7881   003C70  EF50  F01E         	goto	l5603
  7882   003C74                     u5580:
  7883   003C74                     
  7884                           ;Memory.c: 28:             reverseDetect(&motorL, &motorR);
  7885   003C74  0E61               	movlw	low _motorL
  7886   003C76  6E1A               	movwf	reverseDetect@mL^0,c
  7887   003C78  0E01               	movlw	high _motorL
  7888   003C7A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7889   003C7C  0E58               	movlw	low _motorR
  7890   003C7E  6E1C               	movwf	reverseDetect@mR^0,c
  7891   003C80  0E01               	movlw	high _motorR
  7892   003C82  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7893   003C84  EC59  F02B         	call	_reverseDetect	;wreg free
  7894                           
  7895                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  7896   003C88  0E61               	movlw	low _motorL
  7897   003C8A  6E20               	movwf	RedMove@mL^0,c
  7898   003C8C  0E01               	movlw	high _motorL
  7899   003C8E  6E21               	movwf	(RedMove@mL+1)^0,c
  7900   003C90  0E58               	movlw	low _motorR
  7901   003C92  6E22               	movwf	RedMove@mR^0,c
  7902   003C94  0E01               	movlw	high _motorR
  7903   003C96  6E23               	movwf	(RedMove@mR+1)^0,c
  7904   003C98  EC11  F02F         	call	_RedMove	;wreg free
  7905                           
  7906                           ;Memory.c: 30:         }
  7907   003C9C  EFA6  F01E         	goto	l610
  7908   003CA0                     l5603:
  7909   003CA0  502B               	movf	go_Home@i^0,w,c
  7910   003CA2  2424               	addwf	go_Home@WayBack^0,w,c
  7911   003CA4  6E28               	movwf	??_go_Home^0,c
  7912   003CA6  502C               	movf	(go_Home@i+1)^0,w,c
  7913   003CA8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7914   003CAA  6E29               	movwf	(??_go_Home+1)^0,c
  7915   003CAC  0EFF               	movlw	255
  7916   003CAE  2428               	addwf	??_go_Home^0,w,c
  7917   003CB0  6ED9               	movwf	fsr2l,c
  7918   003CB2  0EFF               	movlw	255
  7919   003CB4  2029               	addwfc	(??_go_Home+1)^0,w,c
  7920   003CB6  6EDA               	movwf	fsr2h,c
  7921   003CB8  0E06               	movlw	6
  7922   003CBA  18DE               	xorwf	postinc2,w,c
  7923   003CBC  A4D8               	btfss	status,2,c
  7924   003CBE  EF63  F01E         	goto	u5591
  7925   003CC2  EF65  F01E         	goto	u5590
  7926   003CC6                     u5591:
  7927   003CC6  EF7B  F01E         	goto	l5607
  7928   003CCA                     u5590:
  7929   003CCA                     
  7930                           ;Memory.c: 32:             reverseDetect(&motorL, &motorR);
  7931   003CCA  0E61               	movlw	low _motorL
  7932   003CCC  6E1A               	movwf	reverseDetect@mL^0,c
  7933   003CCE  0E01               	movlw	high _motorL
  7934   003CD0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7935   003CD2  0E58               	movlw	low _motorR
  7936   003CD4  6E1C               	movwf	reverseDetect@mR^0,c
  7937   003CD6  0E01               	movlw	high _motorR
  7938   003CD8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7939   003CDA  EC59  F02B         	call	_reverseDetect	;wreg free
  7940                           
  7941                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  7942   003CDE  0E61               	movlw	low _motorL
  7943   003CE0  6E20               	movwf	OrangeMove@mL^0,c
  7944   003CE2  0E01               	movlw	high _motorL
  7945   003CE4  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7946   003CE6  0E58               	movlw	low _motorR
  7947   003CE8  6E22               	movwf	OrangeMove@mR^0,c
  7948   003CEA  0E01               	movlw	high _motorR
  7949   003CEC  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7950   003CEE  EC5F  F02C         	call	_OrangeMove	;wreg free
  7951                           
  7952                           ;Memory.c: 34:         }
  7953   003CF2  EFA6  F01E         	goto	l610
  7954   003CF6                     l5607:
  7955   003CF6  502B               	movf	go_Home@i^0,w,c
  7956   003CF8  2424               	addwf	go_Home@WayBack^0,w,c
  7957   003CFA  6E28               	movwf	??_go_Home^0,c
  7958   003CFC  502C               	movf	(go_Home@i+1)^0,w,c
  7959   003CFE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7960   003D00  6E29               	movwf	(??_go_Home+1)^0,c
  7961   003D02  0EFF               	movlw	255
  7962   003D04  2428               	addwf	??_go_Home^0,w,c
  7963   003D06  6ED9               	movwf	fsr2l,c
  7964   003D08  0EFF               	movlw	255
  7965   003D0A  2029               	addwfc	(??_go_Home+1)^0,w,c
  7966   003D0C  6EDA               	movwf	fsr2h,c
  7967   003D0E  0E07               	movlw	7
  7968   003D10  18DE               	xorwf	postinc2,w,c
  7969   003D12  A4D8               	btfss	status,2,c
  7970   003D14  EF8E  F01E         	goto	u5601
  7971   003D18  EF90  F01E         	goto	u5600
  7972   003D1C                     u5601:
  7973   003D1C  EFA6  F01E         	goto	l616
  7974   003D20                     u5600:
  7975   003D20                     
  7976                           ;Memory.c: 36:             reverseDetect(&motorL, &motorR);
  7977   003D20  0E61               	movlw	low _motorL
  7978   003D22  6E1A               	movwf	reverseDetect@mL^0,c
  7979   003D24  0E01               	movlw	high _motorL
  7980   003D26  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7981   003D28  0E58               	movlw	low _motorR
  7982   003D2A  6E1C               	movwf	reverseDetect@mR^0,c
  7983   003D2C  0E01               	movlw	high _motorR
  7984   003D2E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7985   003D30  EC59  F02B         	call	_reverseDetect	;wreg free
  7986                           
  7987                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  7988   003D34  0E61               	movlw	low _motorL
  7989   003D36  6E20               	movwf	ReversePink@mL^0,c
  7990   003D38  0E01               	movlw	high _motorL
  7991   003D3A  6E21               	movwf	(ReversePink@mL+1)^0,c
  7992   003D3C  0E58               	movlw	low _motorR
  7993   003D3E  6E22               	movwf	ReversePink@mR^0,c
  7994   003D40  0E01               	movlw	high _motorR
  7995   003D42  6E23               	movwf	(ReversePink@mR+1)^0,c
  7996   003D44  EC23  F027         	call	_ReversePink	;wreg free
  7997   003D48  EFA6  F01E         	goto	l610
  7998   003D4C                     l616:
  7999   003D4C                     l610:
  8000                           
  8001                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8002   003D4C  0E61               	movlw	low _motorL
  8003   003D4E  6E14               	movwf	stop@mL^0,c
  8004   003D50  0E01               	movlw	high _motorL
  8005   003D52  6E15               	movwf	(stop@mL+1)^0,c
  8006   003D54  0E58               	movlw	low _motorR
  8007   003D56  6E16               	movwf	stop@mR^0,c
  8008   003D58  0E01               	movlw	high _motorR
  8009   003D5A  6E17               	movwf	(stop@mR+1)^0,c
  8010   003D5C  ECA8  F029         	call	_stop	;wreg free
  8011   003D60                     
  8012                           ;Memory.c: 40:         run_flag=0;
  8013   003D60  0E00               	movlw	0
  8014   003D62  0101               	movlb	1	; () banked
  8015   003D64  6F17               	movwf	(_run_flag+1)& (0+255),b
  8016   003D66  0E00               	movlw	0
  8017   003D68  6F16               	movwf	_run_flag& (0+255),b
  8018   003D6A                     
  8019                           ; BSR set to: 1
  8020                           ;Memory.c: 43:   }
  8021   003D6A  062B               	decf	go_Home@i^0,f,c
  8022   003D6C  A0D8               	btfss	status,0,c
  8023   003D6E  062C               	decf	(go_Home@i+1)^0,f,c
  8024   003D70  EF5A  F01D         	goto	l5577
  8025   003D74                     l622:
  8026   003D74  0012               	return		;funcret
  8027   003D76                     __end_of_go_Home:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _timed_forward *****************
  8031 ;; Defined at:
  8032 ;;		line 166 in file "dc_motor.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8035 ;;		 -> motorL(9), 
  8036 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8037 ;;		 -> motorR(9), 
  8038 ;;  time            2   23[COMRAM] int 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;		None
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  1    wreg      void 
  8043 ;; Registers used:
  8044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8050 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8052 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;Total ram usage:        8 bytes
  8055 ;; Hardware stack levels used: 1
  8056 ;; Hardware stack levels required when called: 3
  8057 ;; This function calls:
  8058 ;;		_delayed_ms
  8059 ;;		_setMotorPWM
  8060 ;; This function is called by:
  8061 ;;		_go_Home
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text33
  8066   004EFC                     __ptext33:
  8067                           	callstack 0
  8068   004EFC                     _timed_forward:
  8069                           	callstack 26
  8070   004EFC                     
  8071                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8072   004EFC  EE20 F001          	lfsr	2,1
  8073   004F00  5014               	movf	timed_forward@mL^0,w,c
  8074   004F02  26D9               	addwf	fsr2l,f,c
  8075   004F04  5015               	movf	(timed_forward@mL+1)^0,w,c
  8076   004F06  22DA               	addwfc	fsr2h,f,c
  8077   004F08  0E01               	movlw	1
  8078   004F0A  6EDF               	movwf	indf2,c
  8079                           
  8080                           ;dc_motor.c: 170:     mR->direction =1;
  8081   004F0C  EE20 F001          	lfsr	2,1
  8082   004F10  5016               	movf	timed_forward@mR^0,w,c
  8083   004F12  26D9               	addwf	fsr2l,f,c
  8084   004F14  5017               	movf	(timed_forward@mR+1)^0,w,c
  8085   004F16  22DA               	addwfc	fsr2h,f,c
  8086   004F18  0E01               	movlw	1
  8087   004F1A  6EDF               	movwf	indf2,c
  8088                           
  8089                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8090   004F1C  EFB4  F027         	goto	l5143
  8091   004F20                     l5135:
  8092                           
  8093                           ;dc_motor.c: 173:         mL->power+=10;
  8094   004F20  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8095   004F24  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8096   004F28  0E0A               	movlw	10
  8097   004F2A  26DF               	addwf	indf2,f,c
  8098                           
  8099                           ;dc_motor.c: 174:         mR->power+=10;
  8100   004F2C  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8101   004F30  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8102   004F34  0E0A               	movlw	10
  8103   004F36  26DF               	addwf	indf2,f,c
  8104   004F38                     
  8105                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8106   004F38  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8107   004F3C  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8108   004F40  EC77  F023         	call	_setMotorPWM	;wreg free
  8109   004F44                     
  8110                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8111   004F44  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8112   004F48  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8113   004F4C  EC77  F023         	call	_setMotorPWM	;wreg free
  8114   004F50                     
  8115                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8116   004F50  0E02               	movlw	2
  8117   004F52  6E1B               	movwf	(??_timed_forward+1)^0,c
  8118   004F54  0EA0               	movlw	160
  8119   004F56  6E1A               	movwf	??_timed_forward^0,c
  8120   004F58  0E92               	movlw	146
  8121   004F5A                     u5947:
  8122   004F5A  2EE8               	decfsz	wreg,f,c
  8123   004F5C  D7FE               	bra	u5947
  8124   004F5E  2E1A               	decfsz	??_timed_forward^0,f,c
  8125   004F60  D7FC               	bra	u5947
  8126   004F62  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8127   004F64  D7FA               	bra	u5947
  8128   004F66  D000               	nop2	
  8129   004F68                     l5143:
  8130   004F68  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8131   004F6C  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8132   004F70  0E32               	movlw	50
  8133   004F72  60DF               	cpfslt	indf2,c
  8134   004F74  EFBE  F027         	goto	u4991
  8135   004F78  EFC0  F027         	goto	u4990
  8136   004F7C                     u4991:
  8137   004F7C  EFCC  F027         	goto	l5147
  8138   004F80                     u4990:
  8139   004F80  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8140   004F84  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8141   004F88  0E31               	movlw	49
  8142   004F8A  64DF               	cpfsgt	indf2,c
  8143   004F8C  EFCA  F027         	goto	u5001
  8144   004F90  EFCC  F027         	goto	u5000
  8145   004F94                     u5001:
  8146   004F94  EF90  F027         	goto	l5135
  8147   004F98                     u5000:
  8148   004F98                     l5147:
  8149                           
  8150                           ;dc_motor.c: 182:     delayed_ms(time);
  8151   004F98  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8152   004F9C  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8153   004FA0  EC6B  F02F         	call	_delayed_ms	;wreg free
  8154   004FA4  0012               	return		;funcret
  8155   004FA6                     __end_of_timed_forward:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _delayed_ms *****************
  8159 ;; Defined at:
  8160 ;;		line 43 in file "timers.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  time            2    0[COMRAM] int 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  i               2    3[COMRAM] unsigned int 
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;Total ram usage:        5 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; Hardware stack levels required when called: 1
  8181 ;; This function calls:
  8182 ;;		Nothing
  8183 ;; This function is called by:
  8184 ;;		_timed_forward
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text34
  8189   005ED6                     __ptext34:
  8190                           	callstack 0
  8191   005ED6                     _delayed_ms:
  8192                           	callstack 27
  8193   005ED6                     
  8194                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8195   005ED6  0E00               	movlw	0
  8196   005ED8  6E05               	movwf	(delayed_ms@i+1)^0,c
  8197   005EDA  0E00               	movlw	0
  8198   005EDC  6E04               	movwf	delayed_ms@i^0,c
  8199   005EDE  EF7B  F02F         	goto	l652
  8200   005EE2                     l4967:
  8201                           
  8202                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8203   005EE2  0E0B               	movlw	11
  8204   005EE4  6E03               	movwf	??_delayed_ms^0,c
  8205   005EE6  0E62               	movlw	98
  8206   005EE8                     u5957:
  8207   005EE8  2EE8               	decfsz	wreg,f,c
  8208   005EEA  D7FE               	bra	u5957
  8209   005EEC  2E03               	decfsz	??_delayed_ms^0,f,c
  8210   005EEE  D7FC               	bra	u5957
  8211   005EF0  D000               	nop2	
  8212   005EF2                     
  8213                           ;timers.c: 46:     }
  8214   005EF2  4A04               	infsnz	delayed_ms@i^0,f,c
  8215   005EF4  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8216   005EF6                     l652:
  8217   005EF6  5001               	movf	delayed_ms@time^0,w,c
  8218   005EF8  5C04               	subwf	delayed_ms@i^0,w,c
  8219   005EFA  5002               	movf	(delayed_ms@time+1)^0,w,c
  8220   005EFC  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8221   005EFE  A0D8               	btfss	status,0,c
  8222   005F00  EF84  F02F         	goto	u4931
  8223   005F04  EF86  F02F         	goto	u4930
  8224   005F08                     u4931:
  8225   005F08  EF71  F02F         	goto	l4967
  8226   005F0C                     u4930:
  8227   005F0C  0012               	return		;funcret
  8228   005F0E                     __end_of_delayed_ms:
  8229                           	callstack 0
  8230                           
  8231 ;; *************** function _ReverseYellow *****************
  8232 ;; Defined at:
  8233 ;;		line 334 in file "dc_motor.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8236 ;;		 -> motorL(9), 
  8237 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8238 ;;		 -> motorR(9), 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:        4 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 5
  8257 ;; This function calls:
  8258 ;;		_ForwardOneBlock
  8259 ;;		_reverseDetect
  8260 ;;		_turnRight45
  8261 ;; This function is called by:
  8262 ;;		_go_Home
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text35
  8267   004D90                     __ptext35:
  8268                           	callstack 0
  8269   004D90                     _ReverseYellow:
  8270                           	callstack 24
  8271   004D90                     
  8272                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8273   004D90  0E61               	movlw	low _motorL
  8274   004D92  6E1A               	movwf	reverseDetect@mL^0,c
  8275   004D94  0E01               	movlw	high _motorL
  8276   004D96  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8277   004D98  0E58               	movlw	low _motorR
  8278   004D9A  6E1C               	movwf	reverseDetect@mR^0,c
  8279   004D9C  0E01               	movlw	high _motorR
  8280   004D9E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8281   004DA0  EC59  F02B         	call	_reverseDetect	;wreg free
  8282                           
  8283                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8284   004DA4  0E61               	movlw	low _motorL
  8285   004DA6  6E1A               	movwf	turnRight45@mL^0,c
  8286   004DA8  0E01               	movlw	high _motorL
  8287   004DAA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8288   004DAC  0E58               	movlw	low _motorR
  8289   004DAE  6E1C               	movwf	turnRight45@mR^0,c
  8290   004DB0  0E01               	movlw	high _motorR
  8291   004DB2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8292   004DB4  EC1B  F02E         	call	_turnRight45	;wreg free
  8293                           
  8294                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8295   004DB8  0E61               	movlw	low _motorL
  8296   004DBA  6E1A               	movwf	turnRight45@mL^0,c
  8297   004DBC  0E01               	movlw	high _motorL
  8298   004DBE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8299   004DC0  0E58               	movlw	low _motorR
  8300   004DC2  6E1C               	movwf	turnRight45@mR^0,c
  8301   004DC4  0E01               	movlw	high _motorR
  8302   004DC6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8303   004DC8  EC1B  F02E         	call	_turnRight45	;wreg free
  8304                           
  8305                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8306   004DCC  0E61               	movlw	low _motorL
  8307   004DCE  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8308   004DD0  0E01               	movlw	high _motorL
  8309   004DD2  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8310   004DD4  0E58               	movlw	low _motorR
  8311   004DD6  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8312   004DD8  0E01               	movlw	high _motorR
  8313   004DDA  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8314   004DDC  ECB3  F02B         	call	_ForwardOneBlock	;wreg free
  8315                           
  8316                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8317   004DE0  0E61               	movlw	low _motorL
  8318   004DE2  6E1A               	movwf	reverseDetect@mL^0,c
  8319   004DE4  0E01               	movlw	high _motorL
  8320   004DE6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8321   004DE8  0E58               	movlw	low _motorR
  8322   004DEA  6E1C               	movwf	reverseDetect@mR^0,c
  8323   004DEC  0E01               	movlw	high _motorR
  8324   004DEE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8325   004DF0  EC59  F02B         	call	_reverseDetect	;wreg free
  8326                           
  8327                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8328   004DF4  0E61               	movlw	low _motorL
  8329   004DF6  6E1A               	movwf	turnRight45@mL^0,c
  8330   004DF8  0E01               	movlw	high _motorL
  8331   004DFA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8332   004DFC  0E58               	movlw	low _motorR
  8333   004DFE  6E1C               	movwf	turnRight45@mR^0,c
  8334   004E00  0E01               	movlw	high _motorR
  8335   004E02  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8336   004E04  EC1B  F02E         	call	_turnRight45	;wreg free
  8337                           
  8338                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8339   004E08  0E61               	movlw	low _motorL
  8340   004E0A  6E1A               	movwf	turnRight45@mL^0,c
  8341   004E0C  0E01               	movlw	high _motorL
  8342   004E0E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8343   004E10  0E58               	movlw	low _motorR
  8344   004E12  6E1C               	movwf	turnRight45@mR^0,c
  8345   004E14  0E01               	movlw	high _motorR
  8346   004E16  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8347   004E18  EC1B  F02E         	call	_turnRight45	;wreg free
  8348                           
  8349                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8350   004E1C  0E61               	movlw	low _motorL
  8351   004E1E  6E1A               	movwf	turnRight45@mL^0,c
  8352   004E20  0E01               	movlw	high _motorL
  8353   004E22  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8354   004E24  0E58               	movlw	low _motorR
  8355   004E26  6E1C               	movwf	turnRight45@mR^0,c
  8356   004E28  0E01               	movlw	high _motorR
  8357   004E2A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8358   004E2C  EC1B  F02E         	call	_turnRight45	;wreg free
  8359                           
  8360                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8361   004E30  0E61               	movlw	low _motorL
  8362   004E32  6E1A               	movwf	turnRight45@mL^0,c
  8363   004E34  0E01               	movlw	high _motorL
  8364   004E36  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8365   004E38  0E58               	movlw	low _motorR
  8366   004E3A  6E1C               	movwf	turnRight45@mR^0,c
  8367   004E3C  0E01               	movlw	high _motorR
  8368   004E3E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8369   004E40  EC1B  F02E         	call	_turnRight45	;wreg free
  8370   004E44  0012               	return		;funcret
  8371   004E46                     __end_of_ReverseYellow:
  8372                           	callstack 0
  8373                           
  8374 ;; *************** function _ReversePink *****************
  8375 ;; Defined at:
  8376 ;;		line 345 in file "dc_motor.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8379 ;;		 -> motorL(9), 
  8380 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8381 ;;		 -> motorR(9), 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;Total ram usage:        4 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; Hardware stack levels required when called: 5
  8400 ;; This function calls:
  8401 ;;		_ForwardOneBlock
  8402 ;;		_reverseDetect
  8403 ;;		_turnLeft45
  8404 ;; This function is called by:
  8405 ;;		_go_Home
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text36
  8410   004E46                     __ptext36:
  8411                           	callstack 0
  8412   004E46                     _ReversePink:
  8413                           	callstack 24
  8414   004E46                     
  8415                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8416   004E46  0E61               	movlw	low _motorL
  8417   004E48  6E1A               	movwf	reverseDetect@mL^0,c
  8418   004E4A  0E01               	movlw	high _motorL
  8419   004E4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8420   004E4E  0E58               	movlw	low _motorR
  8421   004E50  6E1C               	movwf	reverseDetect@mR^0,c
  8422   004E52  0E01               	movlw	high _motorR
  8423   004E54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8424   004E56  EC59  F02B         	call	_reverseDetect	;wreg free
  8425                           
  8426                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8427   004E5A  0E61               	movlw	low _motorL
  8428   004E5C  6E1A               	movwf	turnLeft45@mL^0,c
  8429   004E5E  0E01               	movlw	high _motorL
  8430   004E60  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8431   004E62  0E58               	movlw	low _motorR
  8432   004E64  6E1C               	movwf	turnLeft45@mR^0,c
  8433   004E66  0E01               	movlw	high _motorR
  8434   004E68  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8435   004E6A  EC42  F02E         	call	_turnLeft45	;wreg free
  8436                           
  8437                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8438   004E6E  0E61               	movlw	low _motorL
  8439   004E70  6E1A               	movwf	turnLeft45@mL^0,c
  8440   004E72  0E01               	movlw	high _motorL
  8441   004E74  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8442   004E76  0E58               	movlw	low _motorR
  8443   004E78  6E1C               	movwf	turnLeft45@mR^0,c
  8444   004E7A  0E01               	movlw	high _motorR
  8445   004E7C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8446   004E7E  EC42  F02E         	call	_turnLeft45	;wreg free
  8447                           
  8448                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8449   004E82  0E61               	movlw	low _motorL
  8450   004E84  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8451   004E86  0E01               	movlw	high _motorL
  8452   004E88  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8453   004E8A  0E58               	movlw	low _motorR
  8454   004E8C  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8455   004E8E  0E01               	movlw	high _motorR
  8456   004E90  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8457   004E92  ECB3  F02B         	call	_ForwardOneBlock	;wreg free
  8458                           
  8459                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8460   004E96  0E61               	movlw	low _motorL
  8461   004E98  6E1A               	movwf	reverseDetect@mL^0,c
  8462   004E9A  0E01               	movlw	high _motorL
  8463   004E9C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8464   004E9E  0E58               	movlw	low _motorR
  8465   004EA0  6E1C               	movwf	reverseDetect@mR^0,c
  8466   004EA2  0E01               	movlw	high _motorR
  8467   004EA4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8468   004EA6  EC59  F02B         	call	_reverseDetect	;wreg free
  8469                           
  8470                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8471   004EAA  0E61               	movlw	low _motorL
  8472   004EAC  6E1A               	movwf	turnLeft45@mL^0,c
  8473   004EAE  0E01               	movlw	high _motorL
  8474   004EB0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8475   004EB2  0E58               	movlw	low _motorR
  8476   004EB4  6E1C               	movwf	turnLeft45@mR^0,c
  8477   004EB6  0E01               	movlw	high _motorR
  8478   004EB8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8479   004EBA  EC42  F02E         	call	_turnLeft45	;wreg free
  8480                           
  8481                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8482   004EBE  0E61               	movlw	low _motorL
  8483   004EC0  6E1A               	movwf	turnLeft45@mL^0,c
  8484   004EC2  0E01               	movlw	high _motorL
  8485   004EC4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8486   004EC6  0E58               	movlw	low _motorR
  8487   004EC8  6E1C               	movwf	turnLeft45@mR^0,c
  8488   004ECA  0E01               	movlw	high _motorR
  8489   004ECC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8490   004ECE  EC42  F02E         	call	_turnLeft45	;wreg free
  8491                           
  8492                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8493   004ED2  0E61               	movlw	low _motorL
  8494   004ED4  6E1A               	movwf	turnLeft45@mL^0,c
  8495   004ED6  0E01               	movlw	high _motorL
  8496   004ED8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8497   004EDA  0E58               	movlw	low _motorR
  8498   004EDC  6E1C               	movwf	turnLeft45@mR^0,c
  8499   004EDE  0E01               	movlw	high _motorR
  8500   004EE0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8501   004EE2  EC42  F02E         	call	_turnLeft45	;wreg free
  8502                           
  8503                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8504   004EE6  0E61               	movlw	low _motorL
  8505   004EE8  6E1A               	movwf	turnLeft45@mL^0,c
  8506   004EEA  0E01               	movlw	high _motorL
  8507   004EEC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8508   004EEE  0E58               	movlw	low _motorR
  8509   004EF0  6E1C               	movwf	turnLeft45@mR^0,c
  8510   004EF2  0E01               	movlw	high _motorR
  8511   004EF4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8512   004EF6  EC42  F02E         	call	_turnLeft45	;wreg free
  8513   004EFA  0012               	return		;funcret
  8514   004EFC                     __end_of_ReversePink:
  8515                           	callstack 0
  8516                           
  8517 ;; *************** function _ForwardOneBlock *****************
  8518 ;; Defined at:
  8519 ;;		line 239 in file "dc_motor.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8522 ;;		 -> motorL(9), 
  8523 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8524 ;;		 -> motorR(9), 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;Total ram usage:        6 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 4
  8543 ;; This function calls:
  8544 ;;		_fullSpeedAhead
  8545 ;;		_stop
  8546 ;; This function is called by:
  8547 ;;		_ReverseYellow
  8548 ;;		_ReversePink
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text37
  8553   005766                     __ptext37:
  8554                           	callstack 0
  8555   005766                     _ForwardOneBlock:
  8556                           	callstack 24
  8557   005766                     
  8558                           ;dc_motor.c: 240:     fullSpeedAhead(mL,mR);
  8559   005766  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8560   00576A  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8561   00576E  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8562   005772  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8563   005776  EC15  F029         	call	_fullSpeedAhead	;wreg free
  8564   00577A                     
  8565                           ;dc_motor.c: 241:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8566   00577A  0E56               	movlw	86
  8567   00577C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8568   00577E  0E3A               	movlw	58
  8569   005780  6E1E               	movwf	??_ForwardOneBlock^0,c
  8570   005782  0EF4               	movlw	244
  8571   005784                     u5967:
  8572   005784  2EE8               	decfsz	wreg,f,c
  8573   005786  D7FE               	bra	u5967
  8574   005788  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8575   00578A  D7FC               	bra	u5967
  8576   00578C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8577   00578E  D7FA               	bra	u5967
  8578   005790                     
  8579                           ;dc_motor.c: 242:     stop(&motorL, &motorR);
  8580   005790  0E61               	movlw	low _motorL
  8581   005792  6E14               	movwf	stop@mL^0,c
  8582   005794  0E01               	movlw	high _motorL
  8583   005796  6E15               	movwf	(stop@mL+1)^0,c
  8584   005798  0E58               	movlw	low _motorR
  8585   00579A  6E16               	movwf	stop@mR^0,c
  8586   00579C  0E01               	movlw	high _motorR
  8587   00579E  6E17               	movwf	(stop@mR+1)^0,c
  8588   0057A0  ECA8  F029         	call	_stop	;wreg free
  8589                           
  8590                           ;dc_motor.c: 243:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8591   0057A4  0E05               	movlw	5
  8592   0057A6  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8593   0057A8  0E0F               	movlw	15
  8594   0057AA  6E1E               	movwf	??_ForwardOneBlock^0,c
  8595   0057AC  0EF1               	movlw	241
  8596   0057AE                     u5977:
  8597   0057AE  2EE8               	decfsz	wreg,f,c
  8598   0057B0  D7FE               	bra	u5977
  8599   0057B2  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8600   0057B4  D7FC               	bra	u5977
  8601   0057B6  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8602   0057B8  D7FA               	bra	u5977
  8603   0057BA  F000               	nop	
  8604   0057BC  0012               	return		;funcret
  8605   0057BE                     __end_of_ForwardOneBlock:
  8606                           	callstack 0
  8607                           
  8608 ;; *************** function _RedMove *****************
  8609 ;; Defined at:
  8610 ;;		line 263 in file "dc_motor.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8613 ;;		 -> motorL(9), 
  8614 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8615 ;;		 -> motorR(9), 
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;Total ram usage:        4 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 5
  8634 ;; This function calls:
  8635 ;;		_reverseDetect
  8636 ;;		_turnRight45
  8637 ;; This function is called by:
  8638 ;;		_main
  8639 ;;		_go_Home
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text38
  8644   005E22                     __ptext38:
  8645                           	callstack 0
  8646   005E22                     _RedMove:
  8647                           	callstack 24
  8648   005E22                     
  8649                           ;dc_motor.c: 264:     reverseDetect(&motorL, &motorR);
  8650   005E22  0E61               	movlw	low _motorL
  8651   005E24  6E1A               	movwf	reverseDetect@mL^0,c
  8652   005E26  0E01               	movlw	high _motorL
  8653   005E28  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8654   005E2A  0E58               	movlw	low _motorR
  8655   005E2C  6E1C               	movwf	reverseDetect@mR^0,c
  8656   005E2E  0E01               	movlw	high _motorR
  8657   005E30  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8658   005E32  EC59  F02B         	call	_reverseDetect	;wreg free
  8659                           
  8660                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8661   005E36  0E61               	movlw	low _motorL
  8662   005E38  6E1A               	movwf	turnRight45@mL^0,c
  8663   005E3A  0E01               	movlw	high _motorL
  8664   005E3C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8665   005E3E  0E58               	movlw	low _motorR
  8666   005E40  6E1C               	movwf	turnRight45@mR^0,c
  8667   005E42  0E01               	movlw	high _motorR
  8668   005E44  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8669   005E46  EC1B  F02E         	call	_turnRight45	;wreg free
  8670                           
  8671                           ;dc_motor.c: 267:     turnRight45(&motorL, &motorR);
  8672   005E4A  0E61               	movlw	low _motorL
  8673   005E4C  6E1A               	movwf	turnRight45@mL^0,c
  8674   005E4E  0E01               	movlw	high _motorL
  8675   005E50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8676   005E52  0E58               	movlw	low _motorR
  8677   005E54  6E1C               	movwf	turnRight45@mR^0,c
  8678   005E56  0E01               	movlw	high _motorR
  8679   005E58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8680   005E5A  EC1B  F02E         	call	_turnRight45	;wreg free
  8681   005E5E  0012               	return		;funcret
  8682   005E60                     __end_of_RedMove:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function _OrangeMove *****************
  8686 ;; Defined at:
  8687 ;;		line 309 in file "dc_motor.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8690 ;;		 -> motorL(9), 
  8691 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8692 ;;		 -> motorR(9), 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;		None
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      void 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;Total ram usage:        4 bytes
  8709 ;; Hardware stack levels used: 1
  8710 ;; Hardware stack levels required when called: 5
  8711 ;; This function calls:
  8712 ;;		_reverseDetect
  8713 ;;		_turnRight45
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;;		_go_Home
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text39
  8721   0058BE                     __ptext39:
  8722                           	callstack 0
  8723   0058BE                     _OrangeMove:
  8724                           	callstack 24
  8725   0058BE                     
  8726                           ;dc_motor.c: 310:     reverseDetect(&motorL, &motorR);
  8727   0058BE  0E61               	movlw	low _motorL
  8728   0058C0  6E1A               	movwf	reverseDetect@mL^0,c
  8729   0058C2  0E01               	movlw	high _motorL
  8730   0058C4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8731   0058C6  0E58               	movlw	low _motorR
  8732   0058C8  6E1C               	movwf	reverseDetect@mR^0,c
  8733   0058CA  0E01               	movlw	high _motorR
  8734   0058CC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8735   0058CE  EC59  F02B         	call	_reverseDetect	;wreg free
  8736                           
  8737                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8738   0058D2  0E61               	movlw	low _motorL
  8739   0058D4  6E1A               	movwf	turnRight45@mL^0,c
  8740   0058D6  0E01               	movlw	high _motorL
  8741   0058D8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8742   0058DA  0E58               	movlw	low _motorR
  8743   0058DC  6E1C               	movwf	turnRight45@mR^0,c
  8744   0058DE  0E01               	movlw	high _motorR
  8745   0058E0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8746   0058E2  EC1B  F02E         	call	_turnRight45	;wreg free
  8747                           
  8748                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8749   0058E6  0E61               	movlw	low _motorL
  8750   0058E8  6E1A               	movwf	turnRight45@mL^0,c
  8751   0058EA  0E01               	movlw	high _motorL
  8752   0058EC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8753   0058EE  0E58               	movlw	low _motorR
  8754   0058F0  6E1C               	movwf	turnRight45@mR^0,c
  8755   0058F2  0E01               	movlw	high _motorR
  8756   0058F4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8757   0058F6  EC1B  F02E         	call	_turnRight45	;wreg free
  8758                           
  8759                           ;dc_motor.c: 314:     turnRight45(&motorL, &motorR);
  8760   0058FA  0E61               	movlw	low _motorL
  8761   0058FC  6E1A               	movwf	turnRight45@mL^0,c
  8762   0058FE  0E01               	movlw	high _motorL
  8763   005900  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8764   005902  0E58               	movlw	low _motorR
  8765   005904  6E1C               	movwf	turnRight45@mR^0,c
  8766   005906  0E01               	movlw	high _motorR
  8767   005908  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8768   00590A  EC1B  F02E         	call	_turnRight45	;wreg free
  8769   00590E  0012               	return		;funcret
  8770   005910                     __end_of_OrangeMove:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _LightBlueMove *****************
  8774 ;; Defined at:
  8775 ;;		line 318 in file "dc_motor.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8778 ;;		 -> motorL(9), 
  8779 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8780 ;;		 -> motorR(9), 
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;Total ram usage:        4 bytes
  8797 ;; Hardware stack levels used: 1
  8798 ;; Hardware stack levels required when called: 5
  8799 ;; This function calls:
  8800 ;;		_reverseDetect
  8801 ;;		_turnLeft45
  8802 ;; This function is called by:
  8803 ;;		_main
  8804 ;;		_go_Home
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text40
  8809   005910                     __ptext40:
  8810                           	callstack 0
  8811   005910                     _LightBlueMove:
  8812                           	callstack 24
  8813   005910                     
  8814                           ;dc_motor.c: 319:     reverseDetect(&motorL, &motorR);
  8815   005910  0E61               	movlw	low _motorL
  8816   005912  6E1A               	movwf	reverseDetect@mL^0,c
  8817   005914  0E01               	movlw	high _motorL
  8818   005916  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8819   005918  0E58               	movlw	low _motorR
  8820   00591A  6E1C               	movwf	reverseDetect@mR^0,c
  8821   00591C  0E01               	movlw	high _motorR
  8822   00591E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8823   005920  EC59  F02B         	call	_reverseDetect	;wreg free
  8824                           
  8825                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  8826   005924  0E61               	movlw	low _motorL
  8827   005926  6E1A               	movwf	turnLeft45@mL^0,c
  8828   005928  0E01               	movlw	high _motorL
  8829   00592A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8830   00592C  0E58               	movlw	low _motorR
  8831   00592E  6E1C               	movwf	turnLeft45@mR^0,c
  8832   005930  0E01               	movlw	high _motorR
  8833   005932  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8834   005934  EC42  F02E         	call	_turnLeft45	;wreg free
  8835                           
  8836                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  8837   005938  0E61               	movlw	low _motorL
  8838   00593A  6E1A               	movwf	turnLeft45@mL^0,c
  8839   00593C  0E01               	movlw	high _motorL
  8840   00593E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8841   005940  0E58               	movlw	low _motorR
  8842   005942  6E1C               	movwf	turnLeft45@mR^0,c
  8843   005944  0E01               	movlw	high _motorR
  8844   005946  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8845   005948  EC42  F02E         	call	_turnLeft45	;wreg free
  8846                           
  8847                           ;dc_motor.c: 323:     turnLeft45(&motorL, &motorR);
  8848   00594C  0E61               	movlw	low _motorL
  8849   00594E  6E1A               	movwf	turnLeft45@mL^0,c
  8850   005950  0E01               	movlw	high _motorL
  8851   005952  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8852   005954  0E58               	movlw	low _motorR
  8853   005956  6E1C               	movwf	turnLeft45@mR^0,c
  8854   005958  0E01               	movlw	high _motorR
  8855   00595A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8856   00595C  EC42  F02E         	call	_turnLeft45	;wreg free
  8857   005960  0012               	return		;funcret
  8858   005962                     __end_of_LightBlueMove:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function _GreenMove *****************
  8862 ;; Defined at:
  8863 ;;		line 271 in file "dc_motor.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8866 ;;		 -> motorL(9), 
  8867 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8868 ;;		 -> motorR(9), 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;Total ram usage:        4 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 5
  8887 ;; This function calls:
  8888 ;;		_reverseDetect
  8889 ;;		_turnLeft45
  8890 ;; This function is called by:
  8891 ;;		_main
  8892 ;;		_go_Home
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text41
  8897   005E60                     __ptext41:
  8898                           	callstack 0
  8899   005E60                     _GreenMove:
  8900                           	callstack 24
  8901   005E60                     
  8902                           ;dc_motor.c: 272:     reverseDetect(&motorL, &motorR);
  8903   005E60  0E61               	movlw	low _motorL
  8904   005E62  6E1A               	movwf	reverseDetect@mL^0,c
  8905   005E64  0E01               	movlw	high _motorL
  8906   005E66  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8907   005E68  0E58               	movlw	low _motorR
  8908   005E6A  6E1C               	movwf	reverseDetect@mR^0,c
  8909   005E6C  0E01               	movlw	high _motorR
  8910   005E6E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8911   005E70  EC59  F02B         	call	_reverseDetect	;wreg free
  8912                           
  8913                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  8914   005E74  0E61               	movlw	low _motorL
  8915   005E76  6E1A               	movwf	turnLeft45@mL^0,c
  8916   005E78  0E01               	movlw	high _motorL
  8917   005E7A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8918   005E7C  0E58               	movlw	low _motorR
  8919   005E7E  6E1C               	movwf	turnLeft45@mR^0,c
  8920   005E80  0E01               	movlw	high _motorR
  8921   005E82  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8922   005E84  EC42  F02E         	call	_turnLeft45	;wreg free
  8923                           
  8924                           ;dc_motor.c: 275:     turnLeft45(&motorL, &motorR);
  8925   005E88  0E61               	movlw	low _motorL
  8926   005E8A  6E1A               	movwf	turnLeft45@mL^0,c
  8927   005E8C  0E01               	movlw	high _motorL
  8928   005E8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8929   005E90  0E58               	movlw	low _motorR
  8930   005E92  6E1C               	movwf	turnLeft45@mR^0,c
  8931   005E94  0E01               	movlw	high _motorR
  8932   005E96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8933   005E98  EC42  F02E         	call	_turnLeft45	;wreg free
  8934   005E9C  0012               	return		;funcret
  8935   005E9E                     __end_of_GreenMove:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function _BlueMove *****************
  8939 ;; Defined at:
  8940 ;;		line 279 in file "dc_motor.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8943 ;;		 -> motorL(9), 
  8944 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8945 ;;		 -> motorR(9), 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8961 ;;Total ram usage:        4 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 5
  8964 ;; This function calls:
  8965 ;;		_reverseDetect
  8966 ;;		_turnRight45
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;;		_go_Home
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text42
  8974   00558C                     __ptext42:
  8975                           	callstack 0
  8976   00558C                     _BlueMove:
  8977                           	callstack 24
  8978   00558C                     
  8979                           ;dc_motor.c: 280:     reverseDetect(&motorL, &motorR);
  8980   00558C  0E61               	movlw	low _motorL
  8981   00558E  6E1A               	movwf	reverseDetect@mL^0,c
  8982   005590  0E01               	movlw	high _motorL
  8983   005592  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8984   005594  0E58               	movlw	low _motorR
  8985   005596  6E1C               	movwf	reverseDetect@mR^0,c
  8986   005598  0E01               	movlw	high _motorR
  8987   00559A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8988   00559C  EC59  F02B         	call	_reverseDetect	;wreg free
  8989                           
  8990                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  8991   0055A0  0E61               	movlw	low _motorL
  8992   0055A2  6E1A               	movwf	turnRight45@mL^0,c
  8993   0055A4  0E01               	movlw	high _motorL
  8994   0055A6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8995   0055A8  0E58               	movlw	low _motorR
  8996   0055AA  6E1C               	movwf	turnRight45@mR^0,c
  8997   0055AC  0E01               	movlw	high _motorR
  8998   0055AE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8999   0055B0  EC1B  F02E         	call	_turnRight45	;wreg free
  9000                           
  9001                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9002   0055B4  0E61               	movlw	low _motorL
  9003   0055B6  6E1A               	movwf	turnRight45@mL^0,c
  9004   0055B8  0E01               	movlw	high _motorL
  9005   0055BA  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9006   0055BC  0E58               	movlw	low _motorR
  9007   0055BE  6E1C               	movwf	turnRight45@mR^0,c
  9008   0055C0  0E01               	movlw	high _motorR
  9009   0055C2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9010   0055C4  EC1B  F02E         	call	_turnRight45	;wreg free
  9011                           
  9012                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9013   0055C8  0E61               	movlw	low _motorL
  9014   0055CA  6E1A               	movwf	turnRight45@mL^0,c
  9015   0055CC  0E01               	movlw	high _motorL
  9016   0055CE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9017   0055D0  0E58               	movlw	low _motorR
  9018   0055D2  6E1C               	movwf	turnRight45@mR^0,c
  9019   0055D4  0E01               	movlw	high _motorR
  9020   0055D6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9021   0055D8  EC1B  F02E         	call	_turnRight45	;wreg free
  9022                           
  9023                           ;dc_motor.c: 285:     turnRight45(&motorL, &motorR);
  9024   0055DC  0E61               	movlw	low _motorL
  9025   0055DE  6E1A               	movwf	turnRight45@mL^0,c
  9026   0055E0  0E01               	movlw	high _motorL
  9027   0055E2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9028   0055E4  0E58               	movlw	low _motorR
  9029   0055E6  6E1C               	movwf	turnRight45@mR^0,c
  9030   0055E8  0E01               	movlw	high _motorR
  9031   0055EA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9032   0055EC  EC1B  F02E         	call	_turnRight45	;wreg free
  9033   0055F0  0012               	return		;funcret
  9034   0055F2                     __end_of_BlueMove:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function _getTMR0val *****************
  9038 ;; Defined at:
  9039 ;;		line 28 in file "timers.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;		None
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  moving          2    4[COMRAM] int 
  9044 ;;  temp            2    2[COMRAM] unsigned int 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;Total ram usage:        6 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; Hardware stack levels required when called: 1
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text43
  9069   0055F2                     __ptext43:
  9070                           	callstack 0
  9071   0055F2                     _getTMR0val:
  9072                           	callstack 29
  9073   0055F2                     
  9074                           ;timers.c: 30:     unsigned int temp= TMR0L;
  9075   0055F2  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  9076   0055F6  6A04               	clrf	(getTMR0val@temp+1)^0,c
  9077   0055F8                     
  9078                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  9079   0055F8  5003               	movf	getTMR0val@temp^0,w,c
  9080   0055FA  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  9081   0055FE  6A02               	clrf	(??_getTMR0val+1)^0,c
  9082   005600  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  9083   005604  6A01               	clrf	??_getTMR0val^0,c
  9084   005606  1001               	iorwf	??_getTMR0val^0,w,c
  9085   005608  6E05               	movwf	getTMR0val@moving^0,c
  9086   00560A  5002               	movf	(??_getTMR0val+1)^0,w,c
  9087   00560C  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9088                           
  9089                           ;timers.c: 33:     if (moving>700){
  9090   00560E  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  9091   005610  EF13  F02B         	goto	u5521
  9092   005614  0EBD               	movlw	189
  9093   005616  5C05               	subwf	getTMR0val@moving^0,w,c
  9094   005618  0E02               	movlw	2
  9095   00561A  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  9096   00561C  A0D8               	btfss	status,0,c
  9097   00561E  EF13  F02B         	goto	u5521
  9098   005622  EF15  F02B         	goto	u5520
  9099   005626                     u5521:
  9100   005626  EF1B  F02B         	goto	l5547
  9101   00562A                     u5520:
  9102   00562A                     
  9103                           ;timers.c: 34:         moving=moving-700;
  9104   00562A  0E44               	movlw	68
  9105   00562C  2405               	addwf	getTMR0val@moving^0,w,c
  9106   00562E  6E05               	movwf	getTMR0val@moving^0,c
  9107   005630  0EFD               	movlw	253
  9108   005632  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  9109   005634  6E06               	movwf	(getTMR0val@moving+1)^0,c
  9110   005636                     l5547:
  9111                           
  9112                           ;timers.c: 37:     Time_forward[move_count]=moving;
  9113   005636  90D8               	bcf	status,0,c
  9114   005638  0101               	movlb	1	; () banked
  9115   00563A  3514               	rlcf	_move_count& (0+255),w,b	;volatile
  9116   00563C  6ED9               	movwf	fsr2l,c
  9117   00563E  3515               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9118   005640  6EDA               	movwf	fsr2h,c
  9119   005642  0E3C               	movlw	low _Time_forward
  9120   005644  26D9               	addwf	fsr2l,f,c
  9121   005646  0E02               	movlw	high _Time_forward
  9122   005648  22DA               	addwfc	fsr2h,f,c
  9123   00564A  C005  FFDE         	movff	getTMR0val@moving,postinc2
  9124   00564E  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  9125   005652                     
  9126                           ; BSR set to: 1
  9127   005652  0012               	return		;funcret
  9128   005654                     __end_of_getTMR0val:
  9129                           	callstack 0
  9130                           
  9131 ;; *************** function _colour_rel *****************
  9132 ;; Defined at:
  9133 ;;		line 115 in file "color.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  vals            2   74[COMRAM] PTR struct RGB
  9136 ;;		 -> vals(8), 
  9137 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9138 ;;		 -> rel(12), 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;  B               4   20[BANK0 ] float 
  9141 ;;  G               4   16[BANK0 ] float 
  9142 ;;  R               4   12[BANK0 ] float 
  9143 ;;  L               4    0[BANK0 ] float 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;Total ram usage:       28 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 2
  9160 ;; This function calls:
  9161 ;;		___fladd
  9162 ;;		___fldiv
  9163 ;;		___xxtofl
  9164 ;; This function is called by:
  9165 ;;		_main
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text44
  9170   003462                     __ptext44:
  9171                           	callstack 0
  9172   003462                     _colour_rel:
  9173                           	callstack 28
  9174   003462                     
  9175                           ;color.c: 116:     float R = vals->R;
  9176   003462  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9177   003466  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9178   00346A  CFDE F001          	movff	postinc2,___xxtofl@val
  9179   00346E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9180   003472  0E00               	movlw	0
  9181   003474  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9182   003476  0EFF               	movlw	-1
  9183   003478  6E03               	movwf	(___xxtofl@val+2)^0,c
  9184   00347A  6E04               	movwf	(___xxtofl@val+3)^0,c
  9185   00347C  0E01               	movlw	1
  9186   00347E  EC03  F021         	call	___xxtofl
  9187   003482  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9188   003486  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9189   00348A  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9190   00348E  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9191                           
  9192                           ;color.c: 117:     float G = vals->G;
  9193   003492  EE20 F002          	lfsr	2,2
  9194   003496  504B               	movf	colour_rel@vals^0,w,c
  9195   003498  26D9               	addwf	fsr2l,f,c
  9196   00349A  504C               	movf	(colour_rel@vals+1)^0,w,c
  9197   00349C  22DA               	addwfc	fsr2h,f,c
  9198   00349E  CFDE F001          	movff	postinc2,___xxtofl@val
  9199   0034A2  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9200   0034A6  0E00               	movlw	0
  9201   0034A8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9202   0034AA  0EFF               	movlw	-1
  9203   0034AC  6E03               	movwf	(___xxtofl@val+2)^0,c
  9204   0034AE  6E04               	movwf	(___xxtofl@val+3)^0,c
  9205   0034B0  0E01               	movlw	1
  9206   0034B2  EC03  F021         	call	___xxtofl
  9207   0034B6  C001  F070         	movff	?___xxtofl,colour_rel@G
  9208   0034BA  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9209   0034BE  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9210   0034C2  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9211                           
  9212                           ;color.c: 118:     float B = vals->B;
  9213   0034C6  EE20 F004          	lfsr	2,4
  9214   0034CA  504B               	movf	colour_rel@vals^0,w,c
  9215   0034CC  26D9               	addwf	fsr2l,f,c
  9216   0034CE  504C               	movf	(colour_rel@vals+1)^0,w,c
  9217   0034D0  22DA               	addwfc	fsr2h,f,c
  9218   0034D2  CFDE F001          	movff	postinc2,___xxtofl@val
  9219   0034D6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9220   0034DA  0E00               	movlw	0
  9221   0034DC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9222   0034DE  0EFF               	movlw	-1
  9223   0034E0  6E03               	movwf	(___xxtofl@val+2)^0,c
  9224   0034E2  6E04               	movwf	(___xxtofl@val+3)^0,c
  9225   0034E4  0E01               	movlw	1
  9226   0034E6  EC03  F021         	call	___xxtofl
  9227   0034EA  C001  F074         	movff	?___xxtofl,colour_rel@B
  9228   0034EE  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9229   0034F2  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9230   0034F6  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9231                           
  9232                           ;color.c: 119:     float L = vals->L;
  9233   0034FA  EE20 F006          	lfsr	2,6
  9234   0034FE  504B               	movf	colour_rel@vals^0,w,c
  9235   003500  26D9               	addwf	fsr2l,f,c
  9236   003502  504C               	movf	(colour_rel@vals+1)^0,w,c
  9237   003504  22DA               	addwfc	fsr2h,f,c
  9238   003506  CFDE F001          	movff	postinc2,___xxtofl@val
  9239   00350A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9240   00350E  0E00               	movlw	0
  9241   003510  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9242   003512  0EFF               	movlw	-1
  9243   003514  6E03               	movwf	(___xxtofl@val+2)^0,c
  9244   003516  6E04               	movwf	(___xxtofl@val+3)^0,c
  9245   003518  0E01               	movlw	1
  9246   00351A  EC03  F021         	call	___xxtofl
  9247   00351E  C001  F060         	movff	?___xxtofl,colour_rel@L
  9248   003522  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9249   003526  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9250   00352A  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9251   00352E                     
  9252                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  9253   00352E  C070  F005         	movff	colour_rel@G,___fladd@a
  9254   003532  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9255   003536  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9256   00353A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9257   00353E  C06C  F001         	movff	colour_rel@R,___fladd@b
  9258   003542  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9259   003546  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9260   00354A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9261   00354E  ECEF  F013         	call	___fladd	;wreg free
  9262   003552  C001  F064         	movff	?___fladd,_colour_rel$3235
  9263   003556  C002  F065         	movff	?___fladd+1,_colour_rel$3235+1
  9264   00355A  C003  F066         	movff	?___fladd+2,_colour_rel$3235+2
  9265   00355E  C004  F067         	movff	?___fladd+3,_colour_rel$3235+3
  9266   003562                     
  9267                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  9268   003562  C074  F005         	movff	colour_rel@B,___fladd@a
  9269   003566  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9270   00356A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9271   00356E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9272   003572  C064  F001         	movff	_colour_rel$3235,___fladd@b
  9273   003576  C065  F002         	movff	_colour_rel$3235+1,___fladd@b+1
  9274   00357A  C066  F003         	movff	_colour_rel$3235+2,___fladd@b+2
  9275   00357E  C067  F004         	movff	_colour_rel$3235+3,___fladd@b+3
  9276   003582  ECEF  F013         	call	___fladd	;wreg free
  9277   003586  C001  F068         	movff	?___fladd,_colour_rel$3236
  9278   00358A  C002  F069         	movff	?___fladd+1,_colour_rel$3236+1
  9279   00358E  C003  F06A         	movff	?___fladd+2,_colour_rel$3236+2
  9280   003592  C004  F06B         	movff	?___fladd+3,_colour_rel$3236+3
  9281                           
  9282                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  9283   003596  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9284   00359A  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9285   00359E  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9286   0035A2  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9287   0035A6  C060  F005         	movff	colour_rel@L,___fladd@a
  9288   0035AA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9289   0035AE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9290   0035B2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9291   0035B6  C068  F001         	movff	_colour_rel$3236,___fladd@b
  9292   0035BA  C069  F002         	movff	_colour_rel$3236+1,___fladd@b+1
  9293   0035BE  C06A  F003         	movff	_colour_rel$3236+2,___fladd@b+2
  9294   0035C2  C06B  F004         	movff	_colour_rel$3236+3,___fladd@b+3
  9295   0035C6  ECEF  F013         	call	___fladd	;wreg free
  9296   0035CA  C001  F036         	movff	?___fladd,___fldiv@a
  9297   0035CE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9298   0035D2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9299   0035D6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9300   0035DA  EC64  F018         	call	___fldiv	;wreg free
  9301   0035DE  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9302   0035E2  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9303   0035E6  C032  FFDE         	movff	?___fldiv,postinc2
  9304   0035EA  C033  FFDE         	movff	?___fldiv+1,postinc2
  9305   0035EE  C034  FFDE         	movff	?___fldiv+2,postinc2
  9306   0035F2  C035  FFDE         	movff	?___fldiv+3,postinc2
  9307   0035F6                     
  9308                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  9309   0035F6  C070  F005         	movff	colour_rel@G,___fladd@a
  9310   0035FA  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9311   0035FE  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9312   003602  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9313   003606  C06C  F001         	movff	colour_rel@R,___fladd@b
  9314   00360A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9315   00360E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9316   003612  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9317   003616  ECEF  F013         	call	___fladd	;wreg free
  9318   00361A  C001  F064         	movff	?___fladd,_colour_rel$3235
  9319   00361E  C002  F065         	movff	?___fladd+1,_colour_rel$3235+1
  9320   003622  C003  F066         	movff	?___fladd+2,_colour_rel$3235+2
  9321   003626  C004  F067         	movff	?___fladd+3,_colour_rel$3235+3
  9322   00362A                     
  9323                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  9324   00362A  C074  F005         	movff	colour_rel@B,___fladd@a
  9325   00362E  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9326   003632  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9327   003636  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9328   00363A  C064  F001         	movff	_colour_rel$3235,___fladd@b
  9329   00363E  C065  F002         	movff	_colour_rel$3235+1,___fladd@b+1
  9330   003642  C066  F003         	movff	_colour_rel$3235+2,___fladd@b+2
  9331   003646  C067  F004         	movff	_colour_rel$3235+3,___fladd@b+3
  9332   00364A  ECEF  F013         	call	___fladd	;wreg free
  9333   00364E  C001  F068         	movff	?___fladd,_colour_rel$3236
  9334   003652  C002  F069         	movff	?___fladd+1,_colour_rel$3236+1
  9335   003656  C003  F06A         	movff	?___fladd+2,_colour_rel$3236+2
  9336   00365A  C004  F06B         	movff	?___fladd+3,_colour_rel$3236+3
  9337                           
  9338                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  9339   00365E  C074  F032         	movff	colour_rel@B,___fldiv@b
  9340   003662  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9341   003666  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9342   00366A  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9343   00366E  C060  F005         	movff	colour_rel@L,___fladd@a
  9344   003672  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9345   003676  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9346   00367A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9347   00367E  C068  F001         	movff	_colour_rel$3236,___fladd@b
  9348   003682  C069  F002         	movff	_colour_rel$3236+1,___fladd@b+1
  9349   003686  C06A  F003         	movff	_colour_rel$3236+2,___fladd@b+2
  9350   00368A  C06B  F004         	movff	_colour_rel$3236+3,___fladd@b+3
  9351   00368E  ECEF  F013         	call	___fladd	;wreg free
  9352   003692  C001  F036         	movff	?___fladd,___fldiv@a
  9353   003696  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9354   00369A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9355   00369E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9356   0036A2  EC64  F018         	call	___fldiv	;wreg free
  9357   0036A6  EE20 F008          	lfsr	2,8
  9358   0036AA  504D               	movf	colour_rel@rel^0,w,c
  9359   0036AC  26D9               	addwf	fsr2l,f,c
  9360   0036AE  504E               	movf	(colour_rel@rel+1)^0,w,c
  9361   0036B0  22DA               	addwfc	fsr2h,f,c
  9362   0036B2  C032  FFDE         	movff	?___fldiv,postinc2
  9363   0036B6  C033  FFDE         	movff	?___fldiv+1,postinc2
  9364   0036BA  C034  FFDE         	movff	?___fldiv+2,postinc2
  9365   0036BE  C035  FFDE         	movff	?___fldiv+3,postinc2
  9366   0036C2                     
  9367                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  9368   0036C2  C070  F005         	movff	colour_rel@G,___fladd@a
  9369   0036C6  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9370   0036CA  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9371   0036CE  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9372   0036D2  C06C  F001         	movff	colour_rel@R,___fladd@b
  9373   0036D6  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9374   0036DA  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9375   0036DE  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9376   0036E2  ECEF  F013         	call	___fladd	;wreg free
  9377   0036E6  C001  F064         	movff	?___fladd,_colour_rel$3235
  9378   0036EA  C002  F065         	movff	?___fladd+1,_colour_rel$3235+1
  9379   0036EE  C003  F066         	movff	?___fladd+2,_colour_rel$3235+2
  9380   0036F2  C004  F067         	movff	?___fladd+3,_colour_rel$3235+3
  9381   0036F6                     
  9382                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  9383   0036F6  C074  F005         	movff	colour_rel@B,___fladd@a
  9384   0036FA  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9385   0036FE  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9386   003702  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9387   003706  C064  F001         	movff	_colour_rel$3235,___fladd@b
  9388   00370A  C065  F002         	movff	_colour_rel$3235+1,___fladd@b+1
  9389   00370E  C066  F003         	movff	_colour_rel$3235+2,___fladd@b+2
  9390   003712  C067  F004         	movff	_colour_rel$3235+3,___fladd@b+3
  9391   003716  ECEF  F013         	call	___fladd	;wreg free
  9392   00371A  C001  F068         	movff	?___fladd,_colour_rel$3236
  9393   00371E  C002  F069         	movff	?___fladd+1,_colour_rel$3236+1
  9394   003722  C003  F06A         	movff	?___fladd+2,_colour_rel$3236+2
  9395   003726  C004  F06B         	movff	?___fladd+3,_colour_rel$3236+3
  9396                           
  9397                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  9398   00372A  C070  F032         	movff	colour_rel@G,___fldiv@b
  9399   00372E  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9400   003732  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9401   003736  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9402   00373A  C060  F005         	movff	colour_rel@L,___fladd@a
  9403   00373E  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9404   003742  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9405   003746  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9406   00374A  C068  F001         	movff	_colour_rel$3236,___fladd@b
  9407   00374E  C069  F002         	movff	_colour_rel$3236+1,___fladd@b+1
  9408   003752  C06A  F003         	movff	_colour_rel$3236+2,___fladd@b+2
  9409   003756  C06B  F004         	movff	_colour_rel$3236+3,___fladd@b+3
  9410   00375A  ECEF  F013         	call	___fladd	;wreg free
  9411   00375E  C001  F036         	movff	?___fladd,___fldiv@a
  9412   003762  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9413   003766  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9414   00376A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9415   00376E  EC64  F018         	call	___fldiv	;wreg free
  9416   003772  EE20 F004          	lfsr	2,4
  9417   003776  504D               	movf	colour_rel@rel^0,w,c
  9418   003778  26D9               	addwf	fsr2l,f,c
  9419   00377A  504E               	movf	(colour_rel@rel+1)^0,w,c
  9420   00377C  22DA               	addwfc	fsr2h,f,c
  9421   00377E  C032  FFDE         	movff	?___fldiv,postinc2
  9422   003782  C033  FFDE         	movff	?___fldiv+1,postinc2
  9423   003786  C034  FFDE         	movff	?___fldiv+2,postinc2
  9424   00378A  C035  FFDE         	movff	?___fldiv+3,postinc2
  9425   00378E  0012               	return		;funcret
  9426   003790                     __end_of_colour_rel:
  9427                           	callstack 0
  9428                           
  9429 ;; *************** function _color_click_init *****************
  9430 ;; Defined at:
  9431 ;;		line 8 in file "color.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;		None
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  1    wreg      void 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0, cstack
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9449 ;;Total ram usage:        1 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 4
  9452 ;; This function calls:
  9453 ;;		_I2C_2_Master_Init
  9454 ;;		_color_writetoaddr
  9455 ;; This function is called by:
  9456 ;;		_main
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text45
  9461   005962                     __ptext45:
  9462                           	callstack 0
  9463   005962                     _color_click_init:
  9464                           	callstack 26
  9465   005962                     
  9466                           ;color.c: 11:     I2C_2_Master_Init();
  9467   005962  ECBA  F02F         	call	_I2C_2_Master_Init	;wreg free
  9468   005966                     
  9469                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  9470   005966  0E01               	movlw	1
  9471   005968  6E03               	movwf	color_writetoaddr@value^0,c
  9472   00596A  0E00               	movlw	0
  9473   00596C  EC09  F030         	call	_color_writetoaddr
  9474   005970                     
  9475                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9476   005970  0E3F               	movlw	63
  9477   005972  6E05               	movwf	??_color_click_init^0,c
  9478   005974  0E55               	movlw	85
  9479   005976                     u5987:
  9480   005976  2EE8               	decfsz	wreg,f,c
  9481   005978  D7FE               	bra	u5987
  9482   00597A  2E05               	decfsz	??_color_click_init^0,f,c
  9483   00597C  D7FC               	bra	u5987
  9484   00597E  F000               	nop	
  9485   005980                     
  9486                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  9487   005980  0E03               	movlw	3
  9488   005982  6E03               	movwf	color_writetoaddr@value^0,c
  9489   005984  0E00               	movlw	0
  9490   005986  EC09  F030         	call	_color_writetoaddr
  9491   00598A                     
  9492                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  9493   00598A  0ED5               	movlw	213
  9494   00598C  6E03               	movwf	color_writetoaddr@value^0,c
  9495   00598E  0E01               	movlw	1
  9496   005990  EC09  F030         	call	_color_writetoaddr
  9497   005994                     
  9498                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
  9499   005994  0E00               	movlw	0
  9500   005996  6E03               	movwf	color_writetoaddr@value^0,c
  9501   005998  0E0F               	movlw	15
  9502   00599A  EC09  F030         	call	_color_writetoaddr
  9503   00599E                     
  9504                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
  9505   00599E  9287               	bcf	135,1,c	;volatile
  9506   0059A0                     
  9507                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
  9508   0059A0  9881               	bcf	129,4,c	;volatile
  9509   0059A2                     
  9510                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
  9511   0059A2  9E86               	bcf	134,7,c	;volatile
  9512   0059A4                     
  9513                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
  9514   0059A4  9684               	bcf	132,3,c	;volatile
  9515   0059A6                     
  9516                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
  9517   0059A6  9884               	bcf	132,4,c	;volatile
  9518   0059A8                     
  9519                           ;color.c: 29:     LATGbits.LATG1=0;
  9520   0059A8  927F               	bcf	127,1,c	;volatile
  9521   0059AA                     
  9522                           ;color.c: 30:     LATFbits.LATF7=0;
  9523   0059AA  9E7E               	bcf	126,7,c	;volatile
  9524   0059AC                     
  9525                           ;color.c: 31:     LATAbits.LATA4=0;
  9526   0059AC  9879               	bcf	121,4,c	;volatile
  9527   0059AE                     
  9528                           ;color.c: 33:     LATDbits.LATD3=0;
  9529   0059AE  967C               	bcf	124,3,c	;volatile
  9530   0059B0                     
  9531                           ;color.c: 34:     LATDbits.LATD4=0;
  9532   0059B0  987C               	bcf	124,4,c	;volatile
  9533   0059B2  0012               	return		;funcret
  9534   0059B4                     __end_of_color_click_init:
  9535                           	callstack 0
  9536                           
  9537 ;; *************** function _color_writetoaddr *****************
  9538 ;; Defined at:
  9539 ;;		line 42 in file "color.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  address         1    wreg     unsigned char 
  9542 ;;  value           1    2[COMRAM] unsigned char 
  9543 ;; Auto vars:     Size  Location     Type
  9544 ;;  address         1    3[COMRAM] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      void 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 0/0
  9551 ;;		On exit  : 0/0
  9552 ;;		Unchanged: 0/0
  9553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;Total ram usage:        2 bytes
  9559 ;; Hardware stack levels used: 1
  9560 ;; Hardware stack levels required when called: 3
  9561 ;; This function calls:
  9562 ;;		_I2C_2_Master_Start
  9563 ;;		_I2C_2_Master_Stop
  9564 ;;		_I2C_2_Master_Write
  9565 ;; This function is called by:
  9566 ;;		_color_click_init
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text46
  9571   006012                     __ptext46:
  9572                           	callstack 0
  9573   006012                     _color_writetoaddr:
  9574                           	callstack 26
  9575                           
  9576                           ;incstack = 0
  9577                           ;color_writetoaddr@address stored from wreg
  9578   006012  6E04               	movwf	color_writetoaddr@address^0,c
  9579   006014                     
  9580                           ;color.c: 43:     I2C_2_Master_Start();
  9581   006014  EC60  F030         	call	_I2C_2_Master_Start	;wreg free
  9582                           
  9583                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
  9584   006018  0E52               	movlw	82
  9585   00601A  EC44  F030         	call	_I2C_2_Master_Write
  9586                           
  9587                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
  9588   00601E  5004               	movf	color_writetoaddr@address^0,w,c
  9589   006020  0980               	iorlw	128
  9590   006022  EC44  F030         	call	_I2C_2_Master_Write
  9591                           
  9592                           ;color.c: 46:     I2C_2_Master_Write(value);
  9593   006026  5003               	movf	color_writetoaddr@value^0,w,c
  9594   006028  EC44  F030         	call	_I2C_2_Master_Write
  9595                           
  9596                           ;color.c: 47:     I2C_2_Master_Stop();
  9597   00602C  EC5B  F030         	call	_I2C_2_Master_Stop	;wreg free
  9598   006030  0012               	return		;funcret
  9599   006032                     __end_of_color_writetoaddr:
  9600                           	callstack 0
  9601                           
  9602 ;; *************** function _I2C_2_Master_Write *****************
  9603 ;; Defined at:
  9604 ;;		line 45 in file "i2c.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  data_byte       1    wreg     unsigned char 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;  data_byte       1    1[COMRAM] unsigned char 
  9609 ;; Return value:  Size  Location     Type
  9610 ;;                  1    wreg      void 
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;Total ram usage:        1 bytes
  9623 ;; Hardware stack levels used: 1
  9624 ;; Hardware stack levels required when called: 2
  9625 ;; This function calls:
  9626 ;;		_I2C_2_Master_Idle
  9627 ;; This function is called by:
  9628 ;;		_color_writetoaddr
  9629 ;;		_color_read_lum
  9630 ;;		_color_read_Red
  9631 ;;		_color_read_Green
  9632 ;;		_color_read_Blue
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text47
  9637   006088                     __ptext47:
  9638                           	callstack 0
  9639   006088                     _I2C_2_Master_Write:
  9640                           	callstack 26
  9641                           
  9642                           ;incstack = 0
  9643                           ;I2C_2_Master_Write@data_byte stored from wreg
  9644   006088  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9645   00608A                     
  9646                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9647   00608A  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9648   00608E                     
  9649                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9650   00608E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9651   006092  0012               	return		;funcret
  9652   006094                     __end_of_I2C_2_Master_Write:
  9653                           	callstack 0
  9654                           
  9655 ;; *************** function _I2C_2_Master_Stop *****************
  9656 ;; Defined at:
  9657 ;;		line 39 in file "i2c.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;		None
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0, cstack
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9675 ;;Total ram usage:        0 bytes
  9676 ;; Hardware stack levels used: 1
  9677 ;; Hardware stack levels required when called: 2
  9678 ;; This function calls:
  9679 ;;		_I2C_2_Master_Idle
  9680 ;; This function is called by:
  9681 ;;		_color_writetoaddr
  9682 ;;		_color_read_lum
  9683 ;;		_color_read_Red
  9684 ;;		_color_read_Green
  9685 ;;		_color_read_Blue
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text48
  9690   0060B6                     __ptext48:
  9691                           	callstack 0
  9692   0060B6                     _I2C_2_Master_Stop:
  9693                           	callstack 26
  9694   0060B6                     
  9695                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9696   0060B6  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9697   0060BA                     
  9698                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9699   0060BA  010E               	movlb	14	; () banked
  9700   0060BC  85DA               	bsf	218,2,b	;volatile
  9701   0060BE                     
  9702                           ; BSR set to: 14
  9703   0060BE  0012               	return		;funcret
  9704   0060C0                     __end_of_I2C_2_Master_Stop:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _I2C_2_Master_Start *****************
  9708 ;; Defined at:
  9709 ;;		line 27 in file "i2c.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;		None
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;		None
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, status,2, status,0, cstack
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9727 ;;Total ram usage:        0 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; Hardware stack levels required when called: 2
  9730 ;; This function calls:
  9731 ;;		_I2C_2_Master_Idle
  9732 ;; This function is called by:
  9733 ;;		_color_writetoaddr
  9734 ;;		_color_read_lum
  9735 ;;		_color_read_Red
  9736 ;;		_color_read_Green
  9737 ;;		_color_read_Blue
  9738 ;; This function uses a non-reentrant model
  9739 ;;
  9740                           
  9741                           	psect	text49
  9742   0060C0                     __ptext49:
  9743                           	callstack 0
  9744   0060C0                     _I2C_2_Master_Start:
  9745                           	callstack 26
  9746   0060C0                     
  9747                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9748   0060C0  ECCF  F02F         	call	_I2C_2_Master_Idle	;wreg free
  9749   0060C4                     
  9750                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9751   0060C4  010E               	movlb	14	; () banked
  9752   0060C6  81DA               	bsf	218,0,b	;volatile
  9753   0060C8                     
  9754                           ; BSR set to: 14
  9755   0060C8  0012               	return		;funcret
  9756   0060CA                     __end_of_I2C_2_Master_Start:
  9757                           	callstack 0
  9758                           
  9759 ;; *************** function _I2C_2_Master_Idle *****************
  9760 ;; Defined at:
  9761 ;;		line 22 in file "i2c.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;Total ram usage:        1 bytes
  9780 ;; Hardware stack levels used: 1
  9781 ;; Hardware stack levels required when called: 1
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_I2C_2_Master_Start
  9786 ;;		_I2C_2_Master_RepStart
  9787 ;;		_I2C_2_Master_Stop
  9788 ;;		_I2C_2_Master_Write
  9789 ;;		_I2C_2_Master_Read
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text50
  9794   005F9E                     __ptext50:
  9795                           	callstack 0
  9796   005F9E                     _I2C_2_Master_Idle:
  9797                           	callstack 26
  9798   005F9E                     l133:
  9799   005F9E  010E               	movlb	14	; () banked
  9800   005FA0  B5D8               	btfsc	216,2,b	;volatile
  9801   005FA2  EFD5  F02F         	goto	u4361
  9802   005FA6  EFD7  F02F         	goto	u4360
  9803   005FAA                     u4361:
  9804   005FAA  EFCF  F02F         	goto	l133
  9805   005FAE                     u4360:
  9806   005FAE                     
  9807                           ; BSR set to: 14
  9808   005FAE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9809   005FB2  0E1F               	movlw	31
  9810   005FB4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9811   005FB6  A4D8               	btfss	status,2,c
  9812   005FB8  EFE0  F02F         	goto	u4371
  9813   005FBC  EFE2  F02F         	goto	u4370
  9814   005FC0                     u4371:
  9815   005FC0  EFCF  F02F         	goto	l133
  9816   005FC4                     u4370:
  9817   005FC4                     
  9818                           ; BSR set to: 14
  9819   005FC4  0012               	return		;funcret
  9820   005FC6                     __end_of_I2C_2_Master_Idle:
  9821                           	callstack 0
  9822                           
  9823 ;; *************** function _I2C_2_Master_Init *****************
  9824 ;; Defined at:
  9825 ;;		line 4 in file "i2c.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;		None
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;		None
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      void 
  9832 ;; Registers used:
  9833 ;;		wreg, status,2
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9843 ;;Total ram usage:        0 bytes
  9844 ;; Hardware stack levels used: 1
  9845 ;; Hardware stack levels required when called: 1
  9846 ;; This function calls:
  9847 ;;		Nothing
  9848 ;; This function is called by:
  9849 ;;		_color_click_init
  9850 ;;		_main
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text51
  9855   005F74                     __ptext51:
  9856                           	callstack 0
  9857   005F74                     _I2C_2_Master_Init:
  9858                           	callstack 28
  9859   005F74                     
  9860                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9861   005F74  010E               	movlb	14	; () banked
  9862   005F76  51D9               	movf	217,w,b	;volatile
  9863   005F78  0BF0               	andlw	-16
  9864   005F7A  0908               	iorlw	8
  9865   005F7C  6FD9               	movwf	217,b	;volatile
  9866   005F7E                     
  9867                           ; BSR set to: 14
  9868                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9869   005F7E  8BD9               	bsf	217,5,b	;volatile
  9870                           
  9871                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9872   005F80  0E9F               	movlw	159
  9873   005F82  6FD6               	movwf	214,b	;volatile
  9874   005F84                     
  9875                           ; BSR set to: 14
  9876                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9877   005F84  8A84               	bsf	132,5,c	;volatile
  9878   005F86                     
  9879                           ; BSR set to: 14
  9880                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9881   005F86  8C84               	bsf	132,6,c	;volatile
  9882   005F88                     
  9883                           ; BSR set to: 14
  9884                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9885   005F88  9BA7               	bcf	167,5,b	;volatile
  9886   005F8A                     
  9887                           ; BSR set to: 14
  9888                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9889   005F8A  9DA7               	bcf	167,6,b	;volatile
  9890                           
  9891                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9892   005F8C  0E1D               	movlw	29
  9893   005F8E  6F1D               	movwf	29,b	;volatile
  9894                           
  9895                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9896   005F90  0E1E               	movlw	30
  9897   005F92  6F1C               	movwf	28,b	;volatile
  9898                           
  9899                           ;i2c.c: 18:   RD5PPS=0x1C;
  9900   005F94  0E1C               	movlw	28
  9901   005F96  6F6F               	movwf	111,b	;volatile
  9902                           
  9903                           ;i2c.c: 19:   RD6PPS=0x1B;
  9904   005F98  0E1B               	movlw	27
  9905   005F9A  6F70               	movwf	112,b	;volatile
  9906   005F9C                     
  9907                           ; BSR set to: 14
  9908   005F9C  0012               	return		;funcret
  9909   005F9E                     __end_of_I2C_2_Master_Init:
  9910                           	callstack 0
  9911                           
  9912 ;; *************** function _YellowMove *****************
  9913 ;; Defined at:
  9914 ;;		line 289 in file "dc_motor.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9917 ;;		 -> motorL(9), 
  9918 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9919 ;;		 -> motorR(9), 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;                  1    wreg      void 
  9924 ;; Registers used:
  9925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;Total ram usage:        4 bytes
  9936 ;; Hardware stack levels used: 1
  9937 ;; Hardware stack levels required when called: 5
  9938 ;; This function calls:
  9939 ;;		_reverseDetect
  9940 ;;		_reverseOneBlock
  9941 ;;		_turnRight45
  9942 ;; This function is called by:
  9943 ;;		_main
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           	psect	text52
  9948   0059B4                     __ptext52:
  9949                           	callstack 0
  9950   0059B4                     _YellowMove:
  9951                           	callstack 25
  9952   0059B4                     
  9953                           ;dc_motor.c: 290:     reverseDetect(&motorL, &motorR);
  9954   0059B4  0E61               	movlw	low _motorL
  9955   0059B6  6E1A               	movwf	reverseDetect@mL^0,c
  9956   0059B8  0E01               	movlw	high _motorL
  9957   0059BA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9958   0059BC  0E58               	movlw	low _motorR
  9959   0059BE  6E1C               	movwf	reverseDetect@mR^0,c
  9960   0059C0  0E01               	movlw	high _motorR
  9961   0059C2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9962   0059C4  EC59  F02B         	call	_reverseDetect	;wreg free
  9963                           
  9964                           ;dc_motor.c: 292:     reverseOneBlock(&motorL, &motorR);
  9965   0059C8  0E61               	movlw	low _motorL
  9966   0059CA  6E1A               	movwf	reverseOneBlock@mL^0,c
  9967   0059CC  0E01               	movlw	high _motorL
  9968   0059CE  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9969   0059D0  0E58               	movlw	low _motorR
  9970   0059D2  6E1C               	movwf	reverseOneBlock@mR^0,c
  9971   0059D4  0E01               	movlw	high _motorR
  9972   0059D6  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9973   0059D8  ECDF  F02B         	call	_reverseOneBlock	;wreg free
  9974                           
  9975                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
  9976   0059DC  0E61               	movlw	low _motorL
  9977   0059DE  6E1A               	movwf	turnRight45@mL^0,c
  9978   0059E0  0E01               	movlw	high _motorL
  9979   0059E2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9980   0059E4  0E58               	movlw	low _motorR
  9981   0059E6  6E1C               	movwf	turnRight45@mR^0,c
  9982   0059E8  0E01               	movlw	high _motorR
  9983   0059EA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9984   0059EC  EC1B  F02E         	call	_turnRight45	;wreg free
  9985                           
  9986                           ;dc_motor.c: 295:     turnRight45(&motorL, &motorR);
  9987   0059F0  0E61               	movlw	low _motorL
  9988   0059F2  6E1A               	movwf	turnRight45@mL^0,c
  9989   0059F4  0E01               	movlw	high _motorL
  9990   0059F6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9991   0059F8  0E58               	movlw	low _motorR
  9992   0059FA  6E1C               	movwf	turnRight45@mR^0,c
  9993   0059FC  0E01               	movlw	high _motorR
  9994   0059FE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9995   005A00  EC1B  F02E         	call	_turnRight45	;wreg free
  9996   005A04  0012               	return		;funcret
  9997   005A06                     __end_of_YellowMove:
  9998                           	callstack 0
  9999                           
 10000 ;; *************** function _turnRight45 *****************
 10001 ;; Defined at:
 10002 ;;		line 212 in file "dc_motor.c"
 10003 ;; Parameters:    Size  Location     Type
 10004 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10005 ;;		 -> motorL(9), 
 10006 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10007 ;;		 -> motorR(9), 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;Total ram usage:        6 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; Hardware stack levels required when called: 4
 10026 ;; This function calls:
 10027 ;;		_TurnDelay
 10028 ;;		_stop
 10029 ;;		_turnRight
 10030 ;; This function is called by:
 10031 ;;		_RedMove
 10032 ;;		_BlueMove
 10033 ;;		_YellowMove
 10034 ;;		_OrangeMove
 10035 ;;		_ReverseYellow
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text53
 10040   005C36                     __ptext53:
 10041                           	callstack 0
 10042   005C36                     _turnRight45:
 10043                           	callstack 24
 10044   005C36                     
 10045                           ;dc_motor.c: 213:     turnRight(mL,mR);
 10046   005C36  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10047   005C3A  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10048   005C3E  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10049   005C42  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10050   005C46  EC28  F028         	call	_turnRight	;wreg free
 10051   005C4A                     
 10052                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
 10053   005C4A  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10054   005C4E  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10055   005C52  EC87  F02F         	call	_TurnDelay	;wreg free
 10056   005C56                     
 10057                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
 10058   005C56  0E61               	movlw	low _motorL
 10059   005C58  6E14               	movwf	stop@mL^0,c
 10060   005C5A  0E01               	movlw	high _motorL
 10061   005C5C  6E15               	movwf	(stop@mL+1)^0,c
 10062   005C5E  0E58               	movlw	low _motorR
 10063   005C60  6E16               	movwf	stop@mR^0,c
 10064   005C62  0E01               	movlw	high _motorR
 10065   005C64  6E17               	movwf	(stop@mR+1)^0,c
 10066   005C66  ECA8  F029         	call	_stop	;wreg free
 10067   005C6A                     
 10068                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10069   005C6A  0E05               	movlw	5
 10070   005C6C  6E1F               	movwf	(??_turnRight45+1)^0,c
 10071   005C6E  0E0F               	movlw	15
 10072   005C70  6E1E               	movwf	??_turnRight45^0,c
 10073   005C72  0EF1               	movlw	241
 10074   005C74                     u5997:
 10075   005C74  2EE8               	decfsz	wreg,f,c
 10076   005C76  D7FE               	bra	u5997
 10077   005C78  2E1E               	decfsz	??_turnRight45^0,f,c
 10078   005C7A  D7FC               	bra	u5997
 10079   005C7C  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10080   005C7E  D7FA               	bra	u5997
 10081   005C80  F000               	nop	
 10082   005C82  0012               	return		;funcret
 10083   005C84                     __end_of_turnRight45:
 10084                           	callstack 0
 10085                           
 10086 ;; *************** function _turnRight *****************
 10087 ;; Defined at:
 10088 ;;		line 130 in file "dc_motor.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10091 ;;		 -> motorL(9), 
 10092 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10093 ;;		 -> motorR(9), 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;		None
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  1    wreg      void 
 10098 ;; Registers used:
 10099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;Total ram usage:        6 bytes
 10110 ;; Hardware stack levels used: 1
 10111 ;; Hardware stack levels required when called: 3
 10112 ;; This function calls:
 10113 ;;		_setMotorPWM
 10114 ;; This function is called by:
 10115 ;;		_turnRight45
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           	psect	text54
 10120   005050                     __ptext54:
 10121                           	callstack 0
 10122   005050                     _turnRight:
 10123                           	callstack 24
 10124   005050                     
 10125                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
 10126   005050  EE20 F001          	lfsr	2,1
 10127   005054  5014               	movf	turnRight@mL^0,w,c
 10128   005056  26D9               	addwf	fsr2l,f,c
 10129   005058  5015               	movf	(turnRight@mL+1)^0,w,c
 10130   00505A  22DA               	addwfc	fsr2h,f,c
 10131   00505C  0E01               	movlw	1
 10132   00505E  6EDF               	movwf	indf2,c
 10133                           
 10134                           ;dc_motor.c: 133:     mR->direction =0;
 10135   005060  EE20 F001          	lfsr	2,1
 10136   005064  5016               	movf	turnRight@mR^0,w,c
 10137   005066  26D9               	addwf	fsr2l,f,c
 10138   005068  5017               	movf	(turnRight@mR+1)^0,w,c
 10139   00506A  22DA               	addwfc	fsr2h,f,c
 10140   00506C  0E00               	movlw	0
 10141   00506E  6EDF               	movwf	indf2,c
 10142                           
 10143                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
 10144   005070  EF5E  F028         	goto	l4637
 10145   005074                     l4629:
 10146                           
 10147                           ;dc_motor.c: 137:         mL->power+=10;
 10148   005074  C014  FFD9         	movff	turnRight@mL,fsr2l
 10149   005078  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10150   00507C  0E0A               	movlw	10
 10151   00507E  26DF               	addwf	indf2,f,c
 10152                           
 10153                           ;dc_motor.c: 138:         mR->power+=10;
 10154   005080  C016  FFD9         	movff	turnRight@mR,fsr2l
 10155   005084  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10156   005088  0E0A               	movlw	10
 10157   00508A  26DF               	addwf	indf2,f,c
 10158   00508C                     
 10159                           ;dc_motor.c: 140:         setMotorPWM(mL);
 10160   00508C  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10161   005090  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10162   005094  EC77  F023         	call	_setMotorPWM	;wreg free
 10163   005098                     
 10164                           ;dc_motor.c: 141:         setMotorPWM(mR);
 10165   005098  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10166   00509C  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10167   0050A0  EC77  F023         	call	_setMotorPWM	;wreg free
 10168   0050A4                     
 10169                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10170   0050A4  0E02               	movlw	2
 10171   0050A6  6E19               	movwf	(??_turnRight+1)^0,c
 10172   0050A8  0EA0               	movlw	160
 10173   0050AA  6E18               	movwf	??_turnRight^0,c
 10174   0050AC  0E92               	movlw	146
 10175   0050AE                     u6007:
 10176   0050AE  2EE8               	decfsz	wreg,f,c
 10177   0050B0  D7FE               	bra	u6007
 10178   0050B2  2E18               	decfsz	??_turnRight^0,f,c
 10179   0050B4  D7FC               	bra	u6007
 10180   0050B6  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10181   0050B8  D7FA               	bra	u6007
 10182   0050BA  D000               	nop2	
 10183   0050BC                     l4637:
 10184   0050BC  C014  FFD9         	movff	turnRight@mL,fsr2l
 10185   0050C0  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10186   0050C4  0E32               	movlw	50
 10187   0050C6  60DF               	cpfslt	indf2,c
 10188   0050C8  EF68  F028         	goto	u4441
 10189   0050CC  EF6A  F028         	goto	u4440
 10190   0050D0                     u4441:
 10191   0050D0  EF76  F028         	goto	l467
 10192   0050D4                     u4440:
 10193   0050D4  C016  FFD9         	movff	turnRight@mR,fsr2l
 10194   0050D8  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10195   0050DC  0E31               	movlw	49
 10196   0050DE  64DF               	cpfsgt	indf2,c
 10197   0050E0  EF74  F028         	goto	u4451
 10198   0050E4  EF76  F028         	goto	u4450
 10199   0050E8                     u4451:
 10200   0050E8  EF3A  F028         	goto	l4629
 10201   0050EC                     u4450:
 10202   0050EC                     l467:
 10203   0050EC  0012               	return		;funcret
 10204   0050EE                     __end_of_turnRight:
 10205                           	callstack 0
 10206                           
 10207 ;; *************** function _Timer0_init *****************
 10208 ;; Defined at:
 10209 ;;		line 8 in file "timers.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used: 1
 10229 ;; Hardware stack levels required when called: 1
 10230 ;; This function calls:
 10231 ;;		Nothing
 10232 ;; This function is called by:
 10233 ;;		_main
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text55
 10238   006032                     __ptext55:
 10239                           	callstack 0
 10240   006032                     _Timer0_init:
 10241                           	callstack 29
 10242   006032                     
 10243                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10244   006032  50D6               	movf	214,w,c	;volatile
 10245   006034  0B1F               	andlw	-225
 10246   006036  0940               	iorlw	64
 10247   006038  6ED6               	movwf	214,c	;volatile
 10248   00603A                     
 10249                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10250   00603A  88D6               	bsf	214,4,c	;volatile
 10251                           
 10252                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 10253   00603C  50D6               	movf	214,w,c	;volatile
 10254   00603E  0BF0               	andlw	-16
 10255   006040  090D               	iorlw	13
 10256   006042  6ED6               	movwf	214,c	;volatile
 10257   006044                     
 10258                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10259   006044  88D5               	bsf	213,4,c	;volatile
 10260                           
 10261                           ;timers.c: 16:     TMR0H=0;
 10262   006046  0E00               	movlw	0
 10263   006048  6ED4               	movwf	212,c	;volatile
 10264                           
 10265                           ;timers.c: 17:     TMR0L=0;
 10266   00604A  0E00               	movlw	0
 10267   00604C  6ED3               	movwf	211,c	;volatile
 10268   00604E                     
 10269                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 10270   00604E  9ED5               	bcf	213,7,c	;volatile
 10271   006050  0012               	return		;funcret
 10272   006052                     __end_of_Timer0_init:
 10273                           	callstack 0
 10274                           
 10275 ;; *************** function _RetryMove *****************
 10276 ;; Defined at:
 10277 ;;		line 326 in file "dc_motor.c"
 10278 ;; Parameters:    Size  Location     Type
 10279 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10280 ;;		 -> motorL(9), 
 10281 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10282 ;;		 -> motorR(9), 
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10289 ;; Tracked objects:
 10290 ;;		On entry : 0/0
 10291 ;;		On exit  : 0/0
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10298 ;;Total ram usage:        6 bytes
 10299 ;; Hardware stack levels used: 1
 10300 ;; Hardware stack levels required when called: 5
 10301 ;; This function calls:
 10302 ;;		_fullSpeedAhead
 10303 ;;		_reverseDetect
 10304 ;;		_stop
 10305 ;; This function is called by:
 10306 ;;		_main
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	text56
 10311   0054BC                     __ptext56:
 10312                           	callstack 0
 10313   0054BC                     _RetryMove:
 10314                           	callstack 25
 10315   0054BC                     
 10316                           ;dc_motor.c: 327:     reverseDetect(&motorL, &motorR);
 10317   0054BC  0E61               	movlw	low _motorL
 10318   0054BE  6E1A               	movwf	reverseDetect@mL^0,c
 10319   0054C0  0E01               	movlw	high _motorL
 10320   0054C2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10321   0054C4  0E58               	movlw	low _motorR
 10322   0054C6  6E1C               	movwf	reverseDetect@mR^0,c
 10323   0054C8  0E01               	movlw	high _motorR
 10324   0054CA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10325   0054CC  EC59  F02B         	call	_reverseDetect	;wreg free
 10326                           
 10327                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10328   0054D0  0E61               	movlw	low _motorL
 10329   0054D2  6E14               	movwf	stop@mL^0,c
 10330   0054D4  0E01               	movlw	high _motorL
 10331   0054D6  6E15               	movwf	(stop@mL+1)^0,c
 10332   0054D8  0E58               	movlw	low _motorR
 10333   0054DA  6E16               	movwf	stop@mR^0,c
 10334   0054DC  0E01               	movlw	high _motorR
 10335   0054DE  6E17               	movwf	(stop@mR+1)^0,c
 10336   0054E0  ECA8  F029         	call	_stop	;wreg free
 10337                           
 10338                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10339   0054E4  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10340   0054E8  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10341   0054EC  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10342   0054F0  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10343   0054F4  EC15  F029         	call	_fullSpeedAhead	;wreg free
 10344   0054F8                     
 10345                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10346   0054F8  0E29               	movlw	41
 10347   0054FA  6E25               	movwf	(??_RetryMove+1)^0,c
 10348   0054FC  0E96               	movlw	150
 10349   0054FE  6E24               	movwf	??_RetryMove^0,c
 10350   005500  0E7F               	movlw	127
 10351   005502                     u6017:
 10352   005502  2EE8               	decfsz	wreg,f,c
 10353   005504  D7FE               	bra	u6017
 10354   005506  2E24               	decfsz	??_RetryMove^0,f,c
 10355   005508  D7FC               	bra	u6017
 10356   00550A  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10357   00550C  D7FA               	bra	u6017
 10358   00550E  F000               	nop	
 10359   005510                     
 10360                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10361   005510  0E61               	movlw	low _motorL
 10362   005512  6E14               	movwf	stop@mL^0,c
 10363   005514  0E01               	movlw	high _motorL
 10364   005516  6E15               	movwf	(stop@mL+1)^0,c
 10365   005518  0E58               	movlw	low _motorR
 10366   00551A  6E16               	movwf	stop@mR^0,c
 10367   00551C  0E01               	movlw	high _motorR
 10368   00551E  6E17               	movwf	(stop@mR+1)^0,c
 10369   005520  ECA8  F029         	call	_stop	;wreg free
 10370   005524  0012               	return		;funcret
 10371   005526                     __end_of_RetryMove:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function _PinkMove *****************
 10375 ;; Defined at:
 10376 ;;		line 299 in file "dc_motor.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10379 ;;		 -> motorL(9), 
 10380 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10381 ;;		 -> motorR(9), 
 10382 ;; Auto vars:     Size  Location     Type
 10383 ;;		None
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      void 
 10386 ;; Registers used:
 10387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10388 ;; Tracked objects:
 10389 ;;		On entry : 0/0
 10390 ;;		On exit  : 0/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;Total ram usage:        4 bytes
 10398 ;; Hardware stack levels used: 1
 10399 ;; Hardware stack levels required when called: 5
 10400 ;; This function calls:
 10401 ;;		_reverseDetect
 10402 ;;		_reverseOneBlock
 10403 ;;		_turnLeft45
 10404 ;; This function is called by:
 10405 ;;		_main
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text57
 10410   005A06                     __ptext57:
 10411                           	callstack 0
 10412   005A06                     _PinkMove:
 10413                           	callstack 25
 10414   005A06                     
 10415                           ;dc_motor.c: 300:     reverseDetect(&motorL, &motorR);
 10416   005A06  0E61               	movlw	low _motorL
 10417   005A08  6E1A               	movwf	reverseDetect@mL^0,c
 10418   005A0A  0E01               	movlw	high _motorL
 10419   005A0C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10420   005A0E  0E58               	movlw	low _motorR
 10421   005A10  6E1C               	movwf	reverseDetect@mR^0,c
 10422   005A12  0E01               	movlw	high _motorR
 10423   005A14  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10424   005A16  EC59  F02B         	call	_reverseDetect	;wreg free
 10425                           
 10426                           ;dc_motor.c: 302:     reverseOneBlock(&motorL, &motorR);
 10427   005A1A  0E61               	movlw	low _motorL
 10428   005A1C  6E1A               	movwf	reverseOneBlock@mL^0,c
 10429   005A1E  0E01               	movlw	high _motorL
 10430   005A20  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10431   005A22  0E58               	movlw	low _motorR
 10432   005A24  6E1C               	movwf	reverseOneBlock@mR^0,c
 10433   005A26  0E01               	movlw	high _motorR
 10434   005A28  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10435   005A2A  ECDF  F02B         	call	_reverseOneBlock	;wreg free
 10436                           
 10437                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10438   005A2E  0E61               	movlw	low _motorL
 10439   005A30  6E1A               	movwf	turnLeft45@mL^0,c
 10440   005A32  0E01               	movlw	high _motorL
 10441   005A34  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10442   005A36  0E58               	movlw	low _motorR
 10443   005A38  6E1C               	movwf	turnLeft45@mR^0,c
 10444   005A3A  0E01               	movlw	high _motorR
 10445   005A3C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10446   005A3E  EC42  F02E         	call	_turnLeft45	;wreg free
 10447                           
 10448                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
 10449   005A42  0E61               	movlw	low _motorL
 10450   005A44  6E1A               	movwf	turnLeft45@mL^0,c
 10451   005A46  0E01               	movlw	high _motorL
 10452   005A48  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10453   005A4A  0E58               	movlw	low _motorR
 10454   005A4C  6E1C               	movwf	turnLeft45@mR^0,c
 10455   005A4E  0E01               	movlw	high _motorR
 10456   005A50  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10457   005A52  EC42  F02E         	call	_turnLeft45	;wreg free
 10458   005A56  0012               	return		;funcret
 10459   005A58                     __end_of_PinkMove:
 10460                           	callstack 0
 10461                           
 10462 ;; *************** function _turnLeft45 *****************
 10463 ;; Defined at:
 10464 ;;		line 219 in file "dc_motor.c"
 10465 ;; Parameters:    Size  Location     Type
 10466 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10467 ;;		 -> motorL(9), 
 10468 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10469 ;;		 -> motorR(9), 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      void 
 10474 ;; Registers used:
 10475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10485 ;;Total ram usage:        6 bytes
 10486 ;; Hardware stack levels used: 1
 10487 ;; Hardware stack levels required when called: 4
 10488 ;; This function calls:
 10489 ;;		_TurnDelay
 10490 ;;		_stop
 10491 ;;		_turnLeft
 10492 ;; This function is called by:
 10493 ;;		_GreenMove
 10494 ;;		_PinkMove
 10495 ;;		_LightBlueMove
 10496 ;;		_ReversePink
 10497 ;;		_turnCalibration
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text58
 10502   005C84                     __ptext58:
 10503                           	callstack 0
 10504   005C84                     _turnLeft45:
 10505                           	callstack 25
 10506   005C84                     
 10507                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10508   005C84  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10509   005C88  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10510   005C8C  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10511   005C90  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10512   005C94  EC77  F028         	call	_turnLeft	;wreg free
 10513   005C98                     
 10514                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10515   005C98  C0F2  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10516   005C9C  C0F3  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10517   005CA0  EC87  F02F         	call	_TurnDelay	;wreg free
 10518   005CA4                     
 10519                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10520   005CA4  0E61               	movlw	low _motorL
 10521   005CA6  6E14               	movwf	stop@mL^0,c
 10522   005CA8  0E01               	movlw	high _motorL
 10523   005CAA  6E15               	movwf	(stop@mL+1)^0,c
 10524   005CAC  0E58               	movlw	low _motorR
 10525   005CAE  6E16               	movwf	stop@mR^0,c
 10526   005CB0  0E01               	movlw	high _motorR
 10527   005CB2  6E17               	movwf	(stop@mR+1)^0,c
 10528   005CB4  ECA8  F029         	call	_stop	;wreg free
 10529   005CB8                     
 10530                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10531   005CB8  0E05               	movlw	5
 10532   005CBA  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10533   005CBC  0E0F               	movlw	15
 10534   005CBE  6E1E               	movwf	??_turnLeft45^0,c
 10535   005CC0  0EF1               	movlw	241
 10536   005CC2                     u6027:
 10537   005CC2  2EE8               	decfsz	wreg,f,c
 10538   005CC4  D7FE               	bra	u6027
 10539   005CC6  2E1E               	decfsz	??_turnLeft45^0,f,c
 10540   005CC8  D7FC               	bra	u6027
 10541   005CCA  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10542   005CCC  D7FA               	bra	u6027
 10543   005CCE  F000               	nop	
 10544   005CD0  0012               	return		;funcret
 10545   005CD2                     __end_of_turnLeft45:
 10546                           	callstack 0
 10547                           
 10548 ;; *************** function _turnLeft *****************
 10549 ;; Defined at:
 10550 ;;		line 112 in file "dc_motor.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10553 ;;		 -> motorL(9), 
 10554 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10555 ;;		 -> motorR(9), 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10571 ;;Total ram usage:        6 bytes
 10572 ;; Hardware stack levels used: 1
 10573 ;; Hardware stack levels required when called: 3
 10574 ;; This function calls:
 10575 ;;		_setMotorPWM
 10576 ;; This function is called by:
 10577 ;;		_turnLeft45
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text59
 10582   0050EE                     __ptext59:
 10583                           	callstack 0
 10584   0050EE                     _turnLeft:
 10585                           	callstack 25
 10586   0050EE                     
 10587                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10588   0050EE  EE20 F001          	lfsr	2,1
 10589   0050F2  5014               	movf	turnLeft@mL^0,w,c
 10590   0050F4  26D9               	addwf	fsr2l,f,c
 10591   0050F6  5015               	movf	(turnLeft@mL+1)^0,w,c
 10592   0050F8  22DA               	addwfc	fsr2h,f,c
 10593   0050FA  0E00               	movlw	0
 10594   0050FC  6EDF               	movwf	indf2,c
 10595                           
 10596                           ;dc_motor.c: 115:     mR->direction =1;
 10597   0050FE  EE20 F001          	lfsr	2,1
 10598   005102  5016               	movf	turnLeft@mR^0,w,c
 10599   005104  26D9               	addwf	fsr2l,f,c
 10600   005106  5017               	movf	(turnLeft@mR+1)^0,w,c
 10601   005108  22DA               	addwfc	fsr2h,f,c
 10602   00510A  0E01               	movlw	1
 10603   00510C  6EDF               	movwf	indf2,c
 10604                           
 10605                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10606   00510E  EFAD  F028         	goto	l4623
 10607   005112                     l4615:
 10608                           
 10609                           ;dc_motor.c: 119:         mL->power+=10;
 10610   005112  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10611   005116  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10612   00511A  0E0A               	movlw	10
 10613   00511C  26DF               	addwf	indf2,f,c
 10614                           
 10615                           ;dc_motor.c: 120:         mR->power+=10;
 10616   00511E  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10617   005122  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10618   005126  0E0A               	movlw	10
 10619   005128  26DF               	addwf	indf2,f,c
 10620   00512A                     
 10621                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10622   00512A  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10623   00512E  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10624   005132  EC77  F023         	call	_setMotorPWM	;wreg free
 10625   005136                     
 10626                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10627   005136  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10628   00513A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10629   00513E  EC77  F023         	call	_setMotorPWM	;wreg free
 10630   005142                     
 10631                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10632   005142  0E02               	movlw	2
 10633   005144  6E19               	movwf	(??_turnLeft+1)^0,c
 10634   005146  0EA0               	movlw	160
 10635   005148  6E18               	movwf	??_turnLeft^0,c
 10636   00514A  0E92               	movlw	146
 10637   00514C                     u6037:
 10638   00514C  2EE8               	decfsz	wreg,f,c
 10639   00514E  D7FE               	bra	u6037
 10640   005150  2E18               	decfsz	??_turnLeft^0,f,c
 10641   005152  D7FC               	bra	u6037
 10642   005154  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10643   005156  D7FA               	bra	u6037
 10644   005158  D000               	nop2	
 10645   00515A                     l4623:
 10646   00515A  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10647   00515E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10648   005162  0E32               	movlw	50
 10649   005164  60DF               	cpfslt	indf2,c
 10650   005166  EFB7  F028         	goto	u4421
 10651   00516A  EFB9  F028         	goto	u4420
 10652   00516E                     u4421:
 10653   00516E  EFC5  F028         	goto	l459
 10654   005172                     u4420:
 10655   005172  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10656   005176  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10657   00517A  0E31               	movlw	49
 10658   00517C  64DF               	cpfsgt	indf2,c
 10659   00517E  EFC3  F028         	goto	u4431
 10660   005182  EFC5  F028         	goto	u4430
 10661   005186                     u4431:
 10662   005186  EF89  F028         	goto	l4615
 10663   00518A                     u4430:
 10664   00518A                     l459:
 10665   00518A  0012               	return		;funcret
 10666   00518C                     __end_of_turnLeft:
 10667                           	callstack 0
 10668                           
 10669 ;; *************** function _TurnDelay *****************
 10670 ;; Defined at:
 10671 ;;		line 205 in file "dc_motor.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  Turn45Delay     2    0[COMRAM] int 
 10674 ;; Auto vars:     Size  Location     Type
 10675 ;;		None
 10676 ;; Return value:  Size  Location     Type
 10677 ;;                  1    wreg      void 
 10678 ;; Registers used:
 10679 ;;		wreg, status,2, status,0
 10680 ;; Tracked objects:
 10681 ;;		On entry : 0/0
 10682 ;;		On exit  : 0/0
 10683 ;;		Unchanged: 0/0
 10684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10688 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10689 ;;Total ram usage:        3 bytes
 10690 ;; Hardware stack levels used: 1
 10691 ;; Hardware stack levels required when called: 1
 10692 ;; This function calls:
 10693 ;;		Nothing
 10694 ;; This function is called by:
 10695 ;;		_turnRight45
 10696 ;;		_turnLeft45
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text60
 10701   005F0E                     __ptext60:
 10702                           	callstack 0
 10703   005F0E                     _TurnDelay:
 10704                           	callstack 27
 10705   005F0E                     
 10706                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10707   005F0E  EF94  F02F         	goto	l494
 10708   005F12                     l4657:
 10709                           
 10710                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10711   005F12  0E15               	movlw	21
 10712   005F14  6E03               	movwf	??_TurnDelay^0,c
 10713   005F16  0EC6               	movlw	198
 10714   005F18                     u6047:
 10715   005F18  2EE8               	decfsz	wreg,f,c
 10716   005F1A  D7FE               	bra	u6047
 10717   005F1C  2E03               	decfsz	??_TurnDelay^0,f,c
 10718   005F1E  D7FC               	bra	u6047
 10719   005F20  D000               	nop2	
 10720   005F22                     
 10721                           ;dc_motor.c: 208:         Turn45Delay--;
 10722   005F22  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10723   005F24  A0D8               	btfss	status,0,c
 10724   005F26  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10725   005F28                     l494:
 10726                           
 10727                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10728   005F28  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10729   005F2A  EFA1  F02F         	goto	u4480
 10730   005F2E  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10731   005F30  E106               	bnz	u4481
 10732   005F32  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10733   005F34  B0D8               	btfsc	status,0,c
 10734   005F36  EF9F  F02F         	goto	u4481
 10735   005F3A  EFA1  F02F         	goto	u4480
 10736   005F3E                     u4481:
 10737   005F3E  EF89  F02F         	goto	l4657
 10738   005F42                     u4480:
 10739   005F42  0012               	return		;funcret
 10740   005F44                     __end_of_TurnDelay:
 10741                           	callstack 0
 10742                           
 10743 ;; *************** function _reverseOneBlock *****************
 10744 ;; Defined at:
 10745 ;;		line 233 in file "dc_motor.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10748 ;;		 -> motorL(9), 
 10749 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10750 ;;		 -> motorR(9), 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;		None
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;Total ram usage:        6 bytes
 10767 ;; Hardware stack levels used: 1
 10768 ;; Hardware stack levels required when called: 4
 10769 ;; This function calls:
 10770 ;;		_fullSpeedBack
 10771 ;;		_stop
 10772 ;; This function is called by:
 10773 ;;		_YellowMove
 10774 ;;		_PinkMove
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text61
 10779   0057BE                     __ptext61:
 10780                           	callstack 0
 10781   0057BE                     _reverseOneBlock:
 10782                           	callstack 25
 10783   0057BE                     
 10784                           ;dc_motor.c: 234:     fullSpeedBack(mL,mR);
 10785   0057BE  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10786   0057C2  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10787   0057C6  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10788   0057CA  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10789   0057CE  ECC6  F028         	call	_fullSpeedBack	;wreg free
 10790   0057D2                     
 10791                           ;dc_motor.c: 235:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10792   0057D2  0E56               	movlw	86
 10793   0057D4  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10794   0057D6  0E3A               	movlw	58
 10795   0057D8  6E1E               	movwf	??_reverseOneBlock^0,c
 10796   0057DA  0EF4               	movlw	244
 10797   0057DC                     u6057:
 10798   0057DC  2EE8               	decfsz	wreg,f,c
 10799   0057DE  D7FE               	bra	u6057
 10800   0057E0  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10801   0057E2  D7FC               	bra	u6057
 10802   0057E4  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10803   0057E6  D7FA               	bra	u6057
 10804   0057E8                     
 10805                           ;dc_motor.c: 236:     stop(&motorL, &motorR);
 10806   0057E8  0E61               	movlw	low _motorL
 10807   0057EA  6E14               	movwf	stop@mL^0,c
 10808   0057EC  0E01               	movlw	high _motorL
 10809   0057EE  6E15               	movwf	(stop@mL+1)^0,c
 10810   0057F0  0E58               	movlw	low _motorR
 10811   0057F2  6E16               	movwf	stop@mR^0,c
 10812   0057F4  0E01               	movlw	high _motorR
 10813   0057F6  6E17               	movwf	(stop@mR+1)^0,c
 10814   0057F8  ECA8  F029         	call	_stop	;wreg free
 10815                           
 10816                           ;dc_motor.c: 237:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10817   0057FC  0E05               	movlw	5
 10818   0057FE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10819   005800  0E0F               	movlw	15
 10820   005802  6E1E               	movwf	??_reverseOneBlock^0,c
 10821   005804  0EF1               	movlw	241
 10822   005806                     u6067:
 10823   005806  2EE8               	decfsz	wreg,f,c
 10824   005808  D7FE               	bra	u6067
 10825   00580A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10826   00580C  D7FC               	bra	u6067
 10827   00580E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10828   005810  D7FA               	bra	u6067
 10829   005812  F000               	nop	
 10830   005814  0012               	return		;funcret
 10831   005816                     __end_of_reverseOneBlock:
 10832                           	callstack 0
 10833                           
 10834 ;; *************** function _reverseDetect *****************
 10835 ;; Defined at:
 10836 ;;		line 226 in file "dc_motor.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10839 ;;		 -> motorL(9), 
 10840 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10841 ;;		 -> motorR(9), 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;Total ram usage:        6 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; Hardware stack levels required when called: 4
 10860 ;; This function calls:
 10861 ;;		_fullSpeedBack
 10862 ;;		_stop
 10863 ;; This function is called by:
 10864 ;;		_RedMove
 10865 ;;		_GreenMove
 10866 ;;		_BlueMove
 10867 ;;		_YellowMove
 10868 ;;		_PinkMove
 10869 ;;		_OrangeMove
 10870 ;;		_LightBlueMove
 10871 ;;		_RetryMove
 10872 ;;		_ReverseYellow
 10873 ;;		_ReversePink
 10874 ;;		_go_Home
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text62
 10879   0056B2                     __ptext62:
 10880                           	callstack 0
 10881   0056B2                     _reverseDetect:
 10882                           	callstack 25
 10883   0056B2                     
 10884                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10885   0056B2  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10886   0056B6  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10887   0056BA  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10888   0056BE  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10889   0056C2  ECC6  F028         	call	_fullSpeedBack	;wreg free
 10890   0056C6                     
 10891                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10892   0056C6  0E11               	movlw	17
 10893   0056C8  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10894   0056CA  0E3C               	movlw	60
 10895   0056CC  6E1E               	movwf	??_reverseDetect^0,c
 10896   0056CE  0ECB               	movlw	203
 10897   0056D0                     u6077:
 10898   0056D0  2EE8               	decfsz	wreg,f,c
 10899   0056D2  D7FE               	bra	u6077
 10900   0056D4  2E1E               	decfsz	??_reverseDetect^0,f,c
 10901   0056D6  D7FC               	bra	u6077
 10902   0056D8  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10903   0056DA  D7FA               	bra	u6077
 10904   0056DC  F000               	nop	
 10905   0056DE                     
 10906                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10907   0056DE  0E61               	movlw	low _motorL
 10908   0056E0  6E14               	movwf	stop@mL^0,c
 10909   0056E2  0E01               	movlw	high _motorL
 10910   0056E4  6E15               	movwf	(stop@mL+1)^0,c
 10911   0056E6  0E58               	movlw	low _motorR
 10912   0056E8  6E16               	movwf	stop@mR^0,c
 10913   0056EA  0E01               	movlw	high _motorR
 10914   0056EC  6E17               	movwf	(stop@mR+1)^0,c
 10915   0056EE  ECA8  F029         	call	_stop	;wreg free
 10916                           
 10917                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10918   0056F2  0E05               	movlw	5
 10919   0056F4  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10920   0056F6  0E0F               	movlw	15
 10921   0056F8  6E1E               	movwf	??_reverseDetect^0,c
 10922   0056FA  0EF1               	movlw	241
 10923   0056FC                     u6087:
 10924   0056FC  2EE8               	decfsz	wreg,f,c
 10925   0056FE  D7FE               	bra	u6087
 10926   005700  2E1E               	decfsz	??_reverseDetect^0,f,c
 10927   005702  D7FC               	bra	u6087
 10928   005704  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10929   005706  D7FA               	bra	u6087
 10930   005708  F000               	nop	
 10931   00570A  0012               	return		;funcret
 10932   00570C                     __end_of_reverseDetect:
 10933                           	callstack 0
 10934                           
 10935 ;; *************** function _fullSpeedBack *****************
 10936 ;; Defined at:
 10937 ;;		line 186 in file "dc_motor.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10940 ;;		 -> motorL(9), 
 10941 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10942 ;;		 -> motorR(9), 
 10943 ;; Auto vars:     Size  Location     Type
 10944 ;;		None
 10945 ;; Return value:  Size  Location     Type
 10946 ;;                  1    wreg      void 
 10947 ;; Registers used:
 10948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10949 ;; Tracked objects:
 10950 ;;		On entry : 0/0
 10951 ;;		On exit  : 0/0
 10952 ;;		Unchanged: 0/0
 10953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10958 ;;Total ram usage:        6 bytes
 10959 ;; Hardware stack levels used: 1
 10960 ;; Hardware stack levels required when called: 3
 10961 ;; This function calls:
 10962 ;;		_setMotorPWM
 10963 ;; This function is called by:
 10964 ;;		_reverseDetect
 10965 ;;		_reverseOneBlock
 10966 ;;		_Backhalfblock
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text63
 10971   00518C                     __ptext63:
 10972                           	callstack 0
 10973   00518C                     _fullSpeedBack:
 10974                           	callstack 25
 10975   00518C                     
 10976                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10977   00518C  EE20 F001          	lfsr	2,1
 10978   005190  5014               	movf	fullSpeedBack@mL^0,w,c
 10979   005192  26D9               	addwf	fsr2l,f,c
 10980   005194  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10981   005196  22DA               	addwfc	fsr2h,f,c
 10982   005198  0E00               	movlw	0
 10983   00519A  6EDF               	movwf	indf2,c
 10984                           
 10985                           ;dc_motor.c: 190:     mR->direction =0;
 10986   00519C  EE20 F001          	lfsr	2,1
 10987   0051A0  5016               	movf	fullSpeedBack@mR^0,w,c
 10988   0051A2  26D9               	addwf	fsr2l,f,c
 10989   0051A4  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10990   0051A6  22DA               	addwfc	fsr2h,f,c
 10991   0051A8  0E00               	movlw	0
 10992   0051AA  6EDF               	movwf	indf2,c
 10993                           
 10994                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10995   0051AC  EFFC  F028         	goto	l4651
 10996   0051B0                     l4643:
 10997                           
 10998                           ;dc_motor.c: 193:         mL->power+=10;
 10999   0051B0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11000   0051B4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11001   0051B8  0E0A               	movlw	10
 11002   0051BA  26DF               	addwf	indf2,f,c
 11003                           
 11004                           ;dc_motor.c: 194:         mR->power+=10;
 11005   0051BC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11006   0051C0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11007   0051C4  0E0A               	movlw	10
 11008   0051C6  26DF               	addwf	indf2,f,c
 11009   0051C8                     
 11010                           ;dc_motor.c: 196:         setMotorPWM(mL);
 11011   0051C8  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11012   0051CC  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11013   0051D0  EC77  F023         	call	_setMotorPWM	;wreg free
 11014   0051D4                     
 11015                           ;dc_motor.c: 197:         setMotorPWM(mR);
 11016   0051D4  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11017   0051D8  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11018   0051DC  EC77  F023         	call	_setMotorPWM	;wreg free
 11019   0051E0                     
 11020                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11021   0051E0  0E02               	movlw	2
 11022   0051E2  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11023   0051E4  0EA0               	movlw	160
 11024   0051E6  6E18               	movwf	??_fullSpeedBack^0,c
 11025   0051E8  0E92               	movlw	146
 11026   0051EA                     u6097:
 11027   0051EA  2EE8               	decfsz	wreg,f,c
 11028   0051EC  D7FE               	bra	u6097
 11029   0051EE  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11030   0051F0  D7FC               	bra	u6097
 11031   0051F2  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11032   0051F4  D7FA               	bra	u6097
 11033   0051F6  D000               	nop2	
 11034   0051F8                     l4651:
 11035   0051F8  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11036   0051FC  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11037   005200  0E32               	movlw	50
 11038   005202  60DF               	cpfslt	indf2,c
 11039   005204  EF06  F029         	goto	u4461
 11040   005208  EF08  F029         	goto	u4460
 11041   00520C                     u4461:
 11042   00520C  EF14  F029         	goto	l491
 11043   005210                     u4460:
 11044   005210  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11045   005214  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11046   005218  0E31               	movlw	49
 11047   00521A  64DF               	cpfsgt	indf2,c
 11048   00521C  EF12  F029         	goto	u4471
 11049   005220  EF14  F029         	goto	u4470
 11050   005224                     u4471:
 11051   005224  EFD8  F028         	goto	l4643
 11052   005228                     u4470:
 11053   005228                     l491:
 11054   005228  0012               	return		;funcret
 11055   00522A                     __end_of_fullSpeedBack:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _LED_init *****************
 11059 ;; Defined at:
 11060 ;;		line 6 in file "LED_buttons.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;		None
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  1    wreg      void 
 11067 ;; Registers used:
 11068 ;;		None
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;Total ram usage:        0 bytes
 11079 ;; Hardware stack levels used: 1
 11080 ;; Hardware stack levels required when called: 1
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_main
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           	psect	text64
 11089   005FC6                     __ptext64:
 11090                           	callstack 0
 11091   005FC6                     _LED_init:
 11092                           	callstack 29
 11093   005FC6                     
 11094                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11095   005FC6  9287               	bcf	135,1,c	;volatile
 11096                           
 11097                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11098   005FC8  9881               	bcf	129,4,c	;volatile
 11099                           
 11100                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11101   005FCA  9E86               	bcf	134,7,c	;volatile
 11102                           
 11103                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11104   005FCC  827F               	bsf	127,1,c	;volatile
 11105                           
 11106                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11107   005FCE  8879               	bsf	121,4,c	;volatile
 11108                           
 11109                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11110   005FD0  8E7E               	bsf	126,7,c	;volatile
 11111                           
 11112                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11113   005FD2  9E7C               	bcf	124,7,c	;volatile
 11114                           
 11115                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11116   005FD4  9E84               	bcf	132,7,c	;volatile
 11117                           
 11118                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11119   005FD6  9680               	bcf	128,3,c	;volatile
 11120                           
 11121                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11122   005FD8  9688               	bcf	136,3,c	;volatile
 11123                           
 11124                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11125   005FDA  9080               	bcf	128,0,c	;volatile
 11126                           
 11127                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11128   005FDC  9088               	bcf	136,0,c	;volatile
 11129                           
 11130                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11131   005FDE  907E               	bcf	126,0,c	;volatile
 11132                           
 11133                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11134   005FE0  9086               	bcf	134,0,c	;volatile
 11135                           
 11136                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11137   005FE2  987C               	bcf	124,4,c	;volatile
 11138                           
 11139                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11140   005FE4  9884               	bcf	132,4,c	;volatile
 11141                           
 11142                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11143   005FE6  967C               	bcf	124,3,c	;volatile
 11144                           
 11145                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11146   005FE8  9684               	bcf	132,3,c	;volatile
 11147   005FEA  0012               	return		;funcret
 11148   005FEC                     __end_of_LED_init:
 11149                           	callstack 0
 11150                           
 11151 ;; *************** function _Interrupts_init *****************
 11152 ;; Defined at:
 11153 ;;		line 9 in file "interrupts.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		None
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used: 1
 11173 ;; Hardware stack levels required when called: 1
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_main
 11178 ;; This function uses a non-reentrant model
 11179 ;;
 11180                           
 11181                           	psect	text65
 11182   006094                     __ptext65:
 11183                           	callstack 0
 11184   006094                     _Interrupts_init:
 11185                           	callstack 29
 11186   006094                     
 11187                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11188   006094  9AF2               	bcf	242,5,c	;volatile
 11189                           
 11190                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11191   006096  9CF2               	bcf	242,6,c	;volatile
 11192                           
 11193                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11194   006098  8EF2               	bsf	242,7,c	;volatile
 11195                           
 11196                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11197   00609A  010E               	movlb	14	; () banked
 11198   00609C  8B29               	bsf	41,5,b	;volatile
 11199   00609E                     
 11200                           ; BSR set to: 14
 11201   00609E  0012               	return		;funcret
 11202   0060A0                     __end_of_Interrupts_init:
 11203                           	callstack 0
 11204                           
 11205 ;; *************** function _Forwardhalfblock *****************
 11206 ;; Defined at:
 11207 ;;		line 246 in file "dc_motor.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11210 ;;		 -> motorL(9), 
 11211 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11212 ;;		 -> motorR(9), 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;		None
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      void 
 11217 ;; Registers used:
 11218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11228 ;;Total ram usage:        6 bytes
 11229 ;; Hardware stack levels used: 1
 11230 ;; Hardware stack levels required when called: 4
 11231 ;; This function calls:
 11232 ;;		_fullSpeedAhead
 11233 ;;		_stop
 11234 ;; This function is called by:
 11235 ;;		_main
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text66
 11240   00570C                     __ptext66:
 11241                           	callstack 0
 11242   00570C                     _Forwardhalfblock:
 11243                           	callstack 26
 11244   00570C                     
 11245                           ;dc_motor.c: 247:     fullSpeedAhead(mL,mR);
 11246   00570C  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11247   005710  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11248   005714  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11249   005718  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11250   00571C  EC15  F029         	call	_fullSpeedAhead	;wreg free
 11251   005720                     
 11252                           ;dc_motor.c: 248:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11253   005720  0E2B               	movlw	43
 11254   005722  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11255   005724  0E9D               	movlw	157
 11256   005726  6E1E               	movwf	??_Forwardhalfblock^0,c
 11257   005728  0EF9               	movlw	249
 11258   00572A                     u6107:
 11259   00572A  2EE8               	decfsz	wreg,f,c
 11260   00572C  D7FE               	bra	u6107
 11261   00572E  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11262   005730  D7FC               	bra	u6107
 11263   005732  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11264   005734  D7FA               	bra	u6107
 11265   005736  F000               	nop	
 11266   005738                     
 11267                           ;dc_motor.c: 249:     stop(&motorL, &motorR);
 11268   005738  0E61               	movlw	low _motorL
 11269   00573A  6E14               	movwf	stop@mL^0,c
 11270   00573C  0E01               	movlw	high _motorL
 11271   00573E  6E15               	movwf	(stop@mL+1)^0,c
 11272   005740  0E58               	movlw	low _motorR
 11273   005742  6E16               	movwf	stop@mR^0,c
 11274   005744  0E01               	movlw	high _motorR
 11275   005746  6E17               	movwf	(stop@mR+1)^0,c
 11276   005748  ECA8  F029         	call	_stop	;wreg free
 11277                           
 11278                           ;dc_motor.c: 250:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11279   00574C  0E05               	movlw	5
 11280   00574E  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11281   005750  0E0F               	movlw	15
 11282   005752  6E1E               	movwf	??_Forwardhalfblock^0,c
 11283   005754  0EF1               	movlw	241
 11284   005756                     u6117:
 11285   005756  2EE8               	decfsz	wreg,f,c
 11286   005758  D7FE               	bra	u6117
 11287   00575A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11288   00575C  D7FC               	bra	u6117
 11289   00575E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11290   005760  D7FA               	bra	u6117
 11291   005762  F000               	nop	
 11292   005764  0012               	return		;funcret
 11293   005766                     __end_of_Forwardhalfblock:
 11294                           	callstack 0
 11295                           
 11296 ;; *************** function _stop *****************
 11297 ;; Defined at:
 11298 ;;		line 94 in file "dc_motor.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11301 ;;		 -> motorL(9), 
 11302 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11303 ;;		 -> motorR(9), 
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;		None
 11306 ;; Return value:  Size  Location     Type
 11307 ;;                  1    wreg      void 
 11308 ;; Registers used:
 11309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11318 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11319 ;;Total ram usage:        6 bytes
 11320 ;; Hardware stack levels used: 1
 11321 ;; Hardware stack levels required when called: 3
 11322 ;; This function calls:
 11323 ;;		_setMotorPWM
 11324 ;; This function is called by:
 11325 ;;		_main
 11326 ;;		_turnRight45
 11327 ;;		_turnLeft45
 11328 ;;		_reverseDetect
 11329 ;;		_reverseOneBlock
 11330 ;;		_ForwardOneBlock
 11331 ;;		_Forwardhalfblock
 11332 ;;		_RetryMove
 11333 ;;		_go_Home
 11334 ;;		_Backhalfblock
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	text67
 11339   005350                     __ptext67:
 11340                           	callstack 0
 11341   005350                     _stop:
 11342                           	callstack 25
 11343   005350                     
 11344                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11345   005350  EFCE  F029         	goto	l4609
 11346   005354                     l4601:
 11347                           
 11348                           ;dc_motor.c: 98:         mL->power-=10;
 11349   005354  C014  FFD9         	movff	stop@mL,fsr2l
 11350   005358  C015  FFDA         	movff	stop@mL+1,fsr2h
 11351   00535C  0E0A               	movlw	10
 11352   00535E  5EDF               	subwf	indf2,f,c
 11353                           
 11354                           ;dc_motor.c: 99:         mR->power-=10;
 11355   005360  C016  FFD9         	movff	stop@mR,fsr2l
 11356   005364  C017  FFDA         	movff	stop@mR+1,fsr2h
 11357   005368  0E0A               	movlw	10
 11358   00536A  5EDF               	subwf	indf2,f,c
 11359   00536C                     
 11360                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11361   00536C  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11362   005370  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11363   005374  EC77  F023         	call	_setMotorPWM	;wreg free
 11364   005378                     
 11365                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11366   005378  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11367   00537C  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11368   005380  EC77  F023         	call	_setMotorPWM	;wreg free
 11369   005384                     
 11370                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11371   005384  0E02               	movlw	2
 11372   005386  6E19               	movwf	(??_stop+1)^0,c
 11373   005388  0EA0               	movlw	160
 11374   00538A  6E18               	movwf	??_stop^0,c
 11375   00538C  0E92               	movlw	146
 11376   00538E                     u6127:
 11377   00538E  2EE8               	decfsz	wreg,f,c
 11378   005390  D7FE               	bra	u6127
 11379   005392  2E18               	decfsz	??_stop^0,f,c
 11380   005394  D7FC               	bra	u6127
 11381   005396  2E19               	decfsz	(??_stop+1)^0,f,c
 11382   005398  D7FA               	bra	u6127
 11383   00539A  D000               	nop2	
 11384   00539C                     l4609:
 11385                           
 11386                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11387   00539C  C014  FFD9         	movff	stop@mL,fsr2l
 11388   0053A0  C015  FFDA         	movff	stop@mL+1,fsr2h
 11389   0053A4  50DF               	movf	indf2,w,c
 11390   0053A6  A4D8               	btfss	status,2,c
 11391   0053A8  EFD8  F029         	goto	u4401
 11392   0053AC  EFDA  F029         	goto	u4400
 11393   0053B0                     u4401:
 11394   0053B0  EFAA  F029         	goto	l4601
 11395   0053B4                     u4400:
 11396   0053B4  C016  FFD9         	movff	stop@mR,fsr2l
 11397   0053B8  C017  FFDA         	movff	stop@mR+1,fsr2h
 11398   0053BC  50DF               	movf	indf2,w,c
 11399   0053BE  A4D8               	btfss	status,2,c
 11400   0053C0  EFE4  F029         	goto	u4411
 11401   0053C4  EFE6  F029         	goto	u4410
 11402   0053C8                     u4411:
 11403   0053C8  EFAA  F029         	goto	l4601
 11404   0053CC                     u4410:
 11405   0053CC  0012               	return		;funcret
 11406   0053CE                     __end_of_stop:
 11407                           	callstack 0
 11408                           
 11409 ;; *************** function _fullSpeedAhead *****************
 11410 ;; Defined at:
 11411 ;;		line 148 in file "dc_motor.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11414 ;;		 -> motorL(9), 
 11415 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11416 ;;		 -> motorR(9), 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;		None
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11432 ;;Total ram usage:        6 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 3
 11435 ;; This function calls:
 11436 ;;		_setMotorPWM
 11437 ;; This function is called by:
 11438 ;;		_main
 11439 ;;		_ForwardOneBlock
 11440 ;;		_Forwardhalfblock
 11441 ;;		_RetryMove
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text68
 11446   00522A                     __ptext68:
 11447                           	callstack 0
 11448   00522A                     _fullSpeedAhead:
 11449                           	callstack 24
 11450   00522A                     
 11451                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11452   00522A  EE20 F001          	lfsr	2,1
 11453   00522E  5014               	movf	fullSpeedAhead@mL^0,w,c
 11454   005230  26D9               	addwf	fsr2l,f,c
 11455   005232  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11456   005234  22DA               	addwfc	fsr2h,f,c
 11457   005236  0E01               	movlw	1
 11458   005238  6EDF               	movwf	indf2,c
 11459                           
 11460                           ;dc_motor.c: 152:     mR->direction =1;
 11461   00523A  EE20 F001          	lfsr	2,1
 11462   00523E  5016               	movf	fullSpeedAhead@mR^0,w,c
 11463   005240  26D9               	addwf	fsr2l,f,c
 11464   005242  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11465   005244  22DA               	addwfc	fsr2h,f,c
 11466   005246  0E01               	movlw	1
 11467   005248  6EDF               	movwf	indf2,c
 11468                           
 11469                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11470   00524A  EF4B  F029         	goto	l4595
 11471   00524E                     l4587:
 11472                           
 11473                           ;dc_motor.c: 155:         mL->power+=10;
 11474   00524E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11475   005252  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11476   005256  0E0A               	movlw	10
 11477   005258  26DF               	addwf	indf2,f,c
 11478                           
 11479                           ;dc_motor.c: 156:         mR->power+=10;
 11480   00525A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11481   00525E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11482   005262  0E0A               	movlw	10
 11483   005264  26DF               	addwf	indf2,f,c
 11484   005266                     
 11485                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11486   005266  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11487   00526A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11488   00526E  EC77  F023         	call	_setMotorPWM	;wreg free
 11489   005272                     
 11490                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11491   005272  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11492   005276  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11493   00527A  EC77  F023         	call	_setMotorPWM	;wreg free
 11494   00527E                     
 11495                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11496   00527E  0E02               	movlw	2
 11497   005280  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11498   005282  0EA0               	movlw	160
 11499   005284  6E18               	movwf	??_fullSpeedAhead^0,c
 11500   005286  0E92               	movlw	146
 11501   005288                     u6137:
 11502   005288  2EE8               	decfsz	wreg,f,c
 11503   00528A  D7FE               	bra	u6137
 11504   00528C  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11505   00528E  D7FC               	bra	u6137
 11506   005290  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11507   005292  D7FA               	bra	u6137
 11508   005294  D000               	nop2	
 11509   005296                     l4595:
 11510   005296  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11511   00529A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11512   00529E  0E32               	movlw	50
 11513   0052A0  60DF               	cpfslt	indf2,c
 11514   0052A2  EF55  F029         	goto	u4381
 11515   0052A6  EF57  F029         	goto	u4380
 11516   0052AA                     u4381:
 11517   0052AA  EF63  F029         	goto	l475
 11518   0052AE                     u4380:
 11519   0052AE  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11520   0052B2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11521   0052B6  0E31               	movlw	49
 11522   0052B8  64DF               	cpfsgt	indf2,c
 11523   0052BA  EF61  F029         	goto	u4391
 11524   0052BE  EF63  F029         	goto	u4390
 11525   0052C2                     u4391:
 11526   0052C2  EF27  F029         	goto	l4587
 11527   0052C6                     u4390:
 11528   0052C6                     l475:
 11529   0052C6  0012               	return		;funcret
 11530   0052C8                     __end_of_fullSpeedAhead:
 11531                           	callstack 0
 11532                           
 11533 ;; *************** function _setMotorPWM *****************
 11534 ;; Defined at:
 11535 ;;		line 69 in file "dc_motor.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11538 ;;		 -> motorR(9), motorL(9), 
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;  negDuty         1   18[COMRAM] unsigned char 
 11541 ;;  posDuty         1   17[COMRAM] unsigned char 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  1    wreg      void 
 11544 ;; Registers used:
 11545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11554 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11555 ;;Total ram usage:        6 bytes
 11556 ;; Hardware stack levels used: 1
 11557 ;; Hardware stack levels required when called: 2
 11558 ;; This function calls:
 11559 ;;		___lwdiv
 11560 ;;		___wmul
 11561 ;; This function is called by:
 11562 ;;		_stop
 11563 ;;		_turnLeft
 11564 ;;		_turnRight
 11565 ;;		_fullSpeedAhead
 11566 ;;		_timed_forward
 11567 ;;		_fullSpeedBack
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text69
 11572   0046EE                     __ptext69:
 11573                           	callstack 0
 11574   0046EE                     _setMotorPWM:
 11575                           	callstack 25
 11576   0046EE                     
 11577                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11578   0046EE  EE20 F002          	lfsr	2,2
 11579   0046F2  500E               	movf	setMotorPWM@m^0,w,c
 11580   0046F4  26D9               	addwf	fsr2l,f,c
 11581   0046F6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11582   0046F8  22DA               	addwfc	fsr2h,f,c
 11583   0046FA  50DF               	movf	indf2,w,c
 11584   0046FC  B4D8               	btfsc	status,2,c
 11585   0046FE  EF83  F023         	goto	u3401
 11586   004702  EF85  F023         	goto	u3400
 11587   004706                     u3401:
 11588   004706  EFB9  F023         	goto	l4039
 11589   00470A                     u3400:
 11590   00470A                     
 11591                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11592   00470A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11593   00470E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11594   004712  50DF               	movf	indf2,w,c
 11595   004714  6E10               	movwf	??_setMotorPWM^0,c
 11596   004716  5010               	movf	??_setMotorPWM^0,w,c
 11597   004718  6E01               	movwf	___wmul@multiplier^0,c
 11598   00471A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11599   00471C  EE20 F003          	lfsr	2,3
 11600   004720  500E               	movf	setMotorPWM@m^0,w,c
 11601   004722  26D9               	addwf	fsr2l,f,c
 11602   004724  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11603   004726  22DA               	addwfc	fsr2h,f,c
 11604   004728  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11605   00472C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11606   004730  ECF6  F02F         	call	___wmul	;wreg free
 11607   004734  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11608   004738  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11609   00473C  0E00               	movlw	0
 11610   00473E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11611   004740  0E64               	movlw	100
 11612   004742  6E09               	movwf	___lwdiv@divisor^0,c
 11613   004744  EC24  F02A         	call	___lwdiv	;wreg free
 11614   004748  EE20 F003          	lfsr	2,3
 11615   00474C  500E               	movf	setMotorPWM@m^0,w,c
 11616   00474E  26D9               	addwf	fsr2l,f,c
 11617   004750  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11618   004752  22DA               	addwfc	fsr2h,f,c
 11619   004754  50DF               	movf	indf2,w,c
 11620   004756  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11621   004758  5007               	movf	?___lwdiv^0,w,c
 11622   00475A  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11623   00475C  6E12               	movwf	setMotorPWM@posDuty^0,c
 11624   00475E                     
 11625                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11626   00475E  EE20 F003          	lfsr	2,3
 11627   004762  500E               	movf	setMotorPWM@m^0,w,c
 11628   004764  26D9               	addwf	fsr2l,f,c
 11629   004766  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11630   004768  22DA               	addwfc	fsr2h,f,c
 11631   00476A  50DF               	movf	indf2,w,c
 11632   00476C  6E13               	movwf	setMotorPWM@negDuty^0,c
 11633                           
 11634                           ;dc_motor.c: 76:     }
 11635   00476E  EFDC  F023         	goto	l4043
 11636   004772                     l4039:
 11637                           
 11638                           ;dc_motor.c: 78:         posDuty=0;
 11639   004772  0E00               	movlw	0
 11640   004774  6E12               	movwf	setMotorPWM@posDuty^0,c
 11641   004776                     
 11642                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11643   004776  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11644   00477A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11645   00477E  50DF               	movf	indf2,w,c
 11646   004780  6E10               	movwf	??_setMotorPWM^0,c
 11647   004782  5010               	movf	??_setMotorPWM^0,w,c
 11648   004784  6E01               	movwf	___wmul@multiplier^0,c
 11649   004786  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11650   004788  EE20 F003          	lfsr	2,3
 11651   00478C  500E               	movf	setMotorPWM@m^0,w,c
 11652   00478E  26D9               	addwf	fsr2l,f,c
 11653   004790  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11654   004792  22DA               	addwfc	fsr2h,f,c
 11655   004794  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11656   004798  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11657   00479C  ECF6  F02F         	call	___wmul	;wreg free
 11658   0047A0  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11659   0047A4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11660   0047A8  0E00               	movlw	0
 11661   0047AA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11662   0047AC  0E64               	movlw	100
 11663   0047AE  6E09               	movwf	___lwdiv@divisor^0,c
 11664   0047B0  EC24  F02A         	call	___lwdiv	;wreg free
 11665   0047B4  5007               	movf	?___lwdiv^0,w,c
 11666   0047B6  6E13               	movwf	setMotorPWM@negDuty^0,c
 11667   0047B8                     l4043:
 11668                           
 11669                           ;dc_motor.c: 82:     if (m->direction) {
 11670   0047B8  EE20 F001          	lfsr	2,1
 11671   0047BC  500E               	movf	setMotorPWM@m^0,w,c
 11672   0047BE  26D9               	addwf	fsr2l,f,c
 11673   0047C0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11674   0047C2  22DA               	addwfc	fsr2h,f,c
 11675   0047C4  50DF               	movf	indf2,w,c
 11676   0047C6  B4D8               	btfsc	status,2,c
 11677   0047C8  EFE8  F023         	goto	u3411
 11678   0047CC  EFEA  F023         	goto	u3410
 11679   0047D0                     u3411:
 11680   0047D0  EF0C  F024         	goto	l4047
 11681   0047D4                     u3410:
 11682   0047D4                     
 11683                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 11684   0047D4  EE20 F005          	lfsr	2,5
 11685   0047D8  500E               	movf	setMotorPWM@m^0,w,c
 11686   0047DA  26D9               	addwf	fsr2l,f,c
 11687   0047DC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11688   0047DE  22DA               	addwfc	fsr2h,f,c
 11689   0047E0  CFDE F010          	movff	postinc2,??_setMotorPWM
 11690   0047E4  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11691   0047E8  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11692   0047EC  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11693   0047F0  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11694                           
 11695                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 11696   0047F4  EE20 F007          	lfsr	2,7
 11697   0047F8  500E               	movf	setMotorPWM@m^0,w,c
 11698   0047FA  26D9               	addwf	fsr2l,f,c
 11699   0047FC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11700   0047FE  22DA               	addwfc	fsr2h,f,c
 11701   004800  CFDE F010          	movff	postinc2,??_setMotorPWM
 11702   004804  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11703   004808  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11704   00480C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11705   004810  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11706                           
 11707                           ;dc_motor.c: 87:     } else {
 11708   004814  EF2C  F024         	goto	l445
 11709   004818                     l4047:
 11710                           
 11711                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 11712   004818  EE20 F005          	lfsr	2,5
 11713   00481C  500E               	movf	setMotorPWM@m^0,w,c
 11714   00481E  26D9               	addwf	fsr2l,f,c
 11715   004820  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11716   004822  22DA               	addwfc	fsr2h,f,c
 11717   004824  CFDE F010          	movff	postinc2,??_setMotorPWM
 11718   004828  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11719   00482C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11720   004830  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11721   004834  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11722                           
 11723                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 11724   004838  EE20 F007          	lfsr	2,7
 11725   00483C  500E               	movf	setMotorPWM@m^0,w,c
 11726   00483E  26D9               	addwf	fsr2l,f,c
 11727   004840  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11728   004842  22DA               	addwfc	fsr2h,f,c
 11729   004844  CFDE F010          	movff	postinc2,??_setMotorPWM
 11730   004848  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11731   00484C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11732   004850  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11733   004854  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11734   004858                     l445:
 11735   004858  0012               	return		;funcret
 11736   00485A                     __end_of_setMotorPWM:
 11737                           	callstack 0
 11738                           
 11739 ;; *************** function ___wmul *****************
 11740 ;; Defined at:
 11741 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  multiplier      2    0[COMRAM] unsigned int 
 11744 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11745 ;; Auto vars:     Size  Location     Type
 11746 ;;  product         2    4[COMRAM] unsigned int 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  2    0[COMRAM] unsigned int 
 11749 ;; Registers used:
 11750 ;;		wreg, status,2, status,0, prodl, prodh
 11751 ;; Tracked objects:
 11752 ;;		On entry : 0/0
 11753 ;;		On exit  : 0/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11759 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11760 ;;Total ram usage:        6 bytes
 11761 ;; Hardware stack levels used: 1
 11762 ;; Hardware stack levels required when called: 1
 11763 ;; This function calls:
 11764 ;;		Nothing
 11765 ;; This function is called by:
 11766 ;;		_setMotorPWM
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           	psect	text70
 11771   005FEC                     __ptext70:
 11772                           	callstack 0
 11773   005FEC                     ___wmul:
 11774                           	callstack 25
 11775   005FEC  5001               	movf	___wmul@multiplier^0,w,c
 11776   005FEE  0203               	mulwf	___wmul@multiplicand^0,c
 11777   005FF0  CFF3 F005          	movff	prodl,___wmul@product
 11778   005FF4  CFF4 F006          	movff	prodh,___wmul@product+1
 11779   005FF8  5001               	movf	___wmul@multiplier^0,w,c
 11780   005FFA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11781   005FFC  50F3               	movf	243,w,c
 11782   005FFE  2606               	addwf	(___wmul@product+1)^0,f,c
 11783   006000  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11784   006002  0203               	mulwf	___wmul@multiplicand^0,c
 11785   006004  50F3               	movf	243,w,c
 11786   006006  2606               	addwf	(___wmul@product+1)^0,f,c
 11787   006008  C005  F001         	movff	___wmul@product,?___wmul
 11788   00600C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11789   006010  0012               	return		;funcret
 11790   006012                     __end_of___wmul:
 11791                           	callstack 0
 11792                           
 11793 ;; *************** function ___lwdiv *****************
 11794 ;; Defined at:
 11795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11796 ;; Parameters:    Size  Location     Type
 11797 ;;  dividend        2    6[COMRAM] unsigned int 
 11798 ;;  divisor         2    8[COMRAM] unsigned int 
 11799 ;; Auto vars:     Size  Location     Type
 11800 ;;  quotient        2   10[COMRAM] unsigned int 
 11801 ;;  counter         1   12[COMRAM] unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  2    6[COMRAM] unsigned int 
 11804 ;; Registers used:
 11805 ;;		wreg, status,2, status,0
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11815 ;;Total ram usage:        7 bytes
 11816 ;; Hardware stack levels used: 1
 11817 ;; Hardware stack levels required when called: 1
 11818 ;; This function calls:
 11819 ;;		Nothing
 11820 ;; This function is called by:
 11821 ;;		_setMotorPWM
 11822 ;; This function uses a non-reentrant model
 11823 ;;
 11824                           
 11825                           	psect	text71
 11826   005448                     __ptext71:
 11827                           	callstack 0
 11828   005448                     ___lwdiv:
 11829                           	callstack 25
 11830   005448  0E00               	movlw	0
 11831   00544A  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11832   00544C  0E00               	movlw	0
 11833   00544E  6E0B               	movwf	___lwdiv@quotient^0,c
 11834   005450  5009               	movf	___lwdiv@divisor^0,w,c
 11835   005452  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11836   005454  B4D8               	btfsc	status,2,c
 11837   005456  EF2F  F02A         	goto	u3361
 11838   00545A  EF31  F02A         	goto	u3360
 11839   00545E                     u3361:
 11840   00545E  EF59  F02A         	goto	l1177
 11841   005462                     u3360:
 11842   005462  0E01               	movlw	1
 11843   005464  6E0D               	movwf	___lwdiv@counter^0,c
 11844   005466  EF39  F02A         	goto	l4011
 11845   00546A                     l4009:
 11846   00546A  90D8               	bcf	status,0,c
 11847   00546C  3609               	rlcf	___lwdiv@divisor^0,f,c
 11848   00546E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11849   005470  2A0D               	incf	___lwdiv@counter^0,f,c
 11850   005472                     l4011:
 11851   005472  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11852   005474  EF3E  F02A         	goto	u3371
 11853   005478  EF40  F02A         	goto	u3370
 11854   00547C                     u3371:
 11855   00547C  EF35  F02A         	goto	l4009
 11856   005480                     u3370:
 11857   005480                     l4013:
 11858   005480  90D8               	bcf	status,0,c
 11859   005482  360B               	rlcf	___lwdiv@quotient^0,f,c
 11860   005484  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11861   005486  5009               	movf	___lwdiv@divisor^0,w,c
 11862   005488  5C07               	subwf	___lwdiv@dividend^0,w,c
 11863   00548A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11864   00548C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11865   00548E  A0D8               	btfss	status,0,c
 11866   005490  EF4C  F02A         	goto	u3381
 11867   005494  EF4E  F02A         	goto	u3380
 11868   005498                     u3381:
 11869   005498  EF53  F02A         	goto	l4021
 11870   00549C                     u3380:
 11871   00549C  5009               	movf	___lwdiv@divisor^0,w,c
 11872   00549E  5E07               	subwf	___lwdiv@dividend^0,f,c
 11873   0054A0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11874   0054A2  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11875   0054A4  800B               	bsf	___lwdiv@quotient^0,0,c
 11876   0054A6                     l4021:
 11877   0054A6  90D8               	bcf	status,0,c
 11878   0054A8  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11879   0054AA  3209               	rrcf	___lwdiv@divisor^0,f,c
 11880   0054AC  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11881   0054AE  EF40  F02A         	goto	l4013
 11882   0054B2                     l1177:
 11883   0054B2  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11884   0054B6  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11885   0054BA  0012               	return		;funcret
 11886   0054BC                     __end_of___lwdiv:
 11887                           	callstack 0
 11888                           
 11889 ;; *************** function _Colour_decider *****************
 11890 ;; Defined at:
 11891 ;;		line 126 in file "color.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  vals            2   74[COMRAM] PTR struct RGB
 11894 ;;		 -> vals(8), 
 11895 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11896 ;;		 -> rel(12), 
 11897 ;; Auto vars:     Size  Location     Type
 11898 ;;  RGB_col        12    6[BANK0 ] float [3]
 11899 ;;  Hue             4   28[BANK0 ] float 
 11900 ;;  Cmin            4   22[BANK0 ] float 
 11901 ;;  Cmax            4   18[BANK0 ] float 
 11902 ;;  i               2   26[BANK0 ] int 
 11903 ;;  Cmax_i          2    4[BANK0 ] int 
 11904 ;; Return value:  Size  Location     Type
 11905 ;;                  2   74[COMRAM] int 
 11906 ;; Registers used:
 11907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11908 ;; Tracked objects:
 11909 ;;		On entry : 0/0
 11910 ;;		On exit  : 0/0
 11911 ;;		Unchanged: 0/0
 11912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11914 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11916 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11917 ;;Total ram usage:       38 bytes
 11918 ;; Hardware stack levels used: 1
 11919 ;; Hardware stack levels required when called: 3
 11920 ;; This function calls:
 11921 ;;		___fladd
 11922 ;;		___fldiv
 11923 ;;		___fleq
 11924 ;;		___flge
 11925 ;;		___flmul
 11926 ;;		___flsub
 11927 ;;		___xxtofl
 11928 ;; This function is called by:
 11929 ;;		_main
 11930 ;; This function uses a non-reentrant model
 11931 ;;
 11932                           
 11933                           	psect	text72
 11934   000E3E                     __ptext72:
 11935                           	callstack 0
 11936   000E3E                     _Colour_decider:
 11937                           	callstack 27
 11938   000E3E                     
 11939                           ;color.c: 127:     float Cmax = 0;
 11940   000E3E  0E00               	movlw	0
 11941   000E40  0100               	movlb	0	; () banked
 11942   000E42  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11943   000E44  0E00               	movlw	0
 11944   000E46  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 11945   000E48  0E00               	movlw	0
 11946   000E4A  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 11947   000E4C  0E00               	movlw	0
 11948   000E4E  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 11949                           
 11950                           ;color.c: 128:     float Cmin= 100000;
 11951   000E50  0E00               	movlw	0
 11952   000E52  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 11953   000E54  0E50               	movlw	80
 11954   000E56  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 11955   000E58  0EC3               	movlw	195
 11956   000E5A  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 11957   000E5C  0E47               	movlw	71
 11958   000E5E  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 11959                           
 11960                           ;color.c: 129:     int Cmax_i =4;
 11961   000E60  0E00               	movlw	0
 11962   000E62  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 11963   000E64  0E04               	movlw	4
 11964   000E66  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 11965   000E68                     
 11966                           ; BSR set to: 0
 11967                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 11968   000E68  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 11969   000E6C  0E0B               	movlw	11
 11970   000E6E                     u5121:
 11971   000E6E  6ADE               	clrf	postinc2,c
 11972   000E70  06E8               	decf	wreg,f,c
 11973   000E72  E2FD               	bc	u5121
 11974   000E74                     
 11975                           ; BSR set to: 0
 11976   000E74  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 11977   000E78  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 11978   000E7C  CFDE F001          	movff	postinc2,___xxtofl@val
 11979   000E80  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11980   000E84  0E00               	movlw	0
 11981   000E86  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 11982   000E88  0EFF               	movlw	-1
 11983   000E8A  6E03               	movwf	(___xxtofl@val+2)^0,c
 11984   000E8C  6E04               	movwf	(___xxtofl@val+3)^0,c
 11985   000E8E  0E01               	movlw	1
 11986   000E90  EC03  F021         	call	___xxtofl
 11987   000E94  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 11988   000E98  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 11989   000E9C  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 11990   000EA0  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 11991   000EA4  EE20 F002          	lfsr	2,2
 11992   000EA8  504B               	movf	Colour_decider@vals^0,w,c
 11993   000EAA  26D9               	addwf	fsr2l,f,c
 11994   000EAC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 11995   000EAE  22DA               	addwfc	fsr2h,f,c
 11996   000EB0  CFDE F001          	movff	postinc2,___xxtofl@val
 11997   000EB4  CFDD F002          	movff	postdec2,___xxtofl@val+1
 11998   000EB8  0E00               	movlw	0
 11999   000EBA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12000   000EBC  0EFF               	movlw	-1
 12001   000EBE  6E03               	movwf	(___xxtofl@val+2)^0,c
 12002   000EC0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12003   000EC2  0E01               	movlw	1
 12004   000EC4  EC03  F021         	call	___xxtofl
 12005   000EC8  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12006   000ECC  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12007   000ED0  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12008   000ED4  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12009   000ED8  EE20 F004          	lfsr	2,4
 12010   000EDC  504B               	movf	Colour_decider@vals^0,w,c
 12011   000EDE  26D9               	addwf	fsr2l,f,c
 12012   000EE0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12013   000EE2  22DA               	addwfc	fsr2h,f,c
 12014   000EE4  CFDE F001          	movff	postinc2,___xxtofl@val
 12015   000EE8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12016   000EEC  0E00               	movlw	0
 12017   000EEE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12018   000EF0  0EFF               	movlw	-1
 12019   000EF2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12020   000EF4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12021   000EF6  0E01               	movlw	1
 12022   000EF8  EC03  F021         	call	___xxtofl
 12023   000EFC  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12024   000F00  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12025   000F04  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12026   000F08  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12027   000F0C                     
 12028                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12029   000F0C  0E00               	movlw	0
 12030   000F0E  0100               	movlb	0	; () banked
 12031   000F10  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12032   000F12  0E00               	movlw	0
 12033   000F14  6F7A               	movwf	Colour_decider@i& (0+255),b
 12034   000F16                     l5279:
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12038   000F16  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12039   000F1A  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12040   000F1E  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12041   000F22  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12042   000F26  0E66               	movlw	low Colour_decider@RGB_col
 12043   000F28  6E4F               	movwf	??_Colour_decider^0,c
 12044   000F2A  0E00               	movlw	high Colour_decider@RGB_col
 12045   000F2C  6E50               	movwf	(??_Colour_decider+1)^0,c
 12046   000F2E  90D8               	bcf	status,0,c
 12047   000F30  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12048   000F32  6ED9               	movwf	fsr2l,c
 12049   000F34  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12050   000F36  6EDA               	movwf	fsr2h,c
 12051   000F38  90D8               	bcf	status,0,c
 12052   000F3A  36D9               	rlcf	fsr2l,f,c
 12053   000F3C  36DA               	rlcf	fsr2h,f,c
 12054   000F3E  504F               	movf	??_Colour_decider^0,w,c
 12055   000F40  26D9               	addwf	fsr2l,f,c
 12056   000F42  5050               	movf	(??_Colour_decider+1)^0,w,c
 12057   000F44  22DA               	addwfc	fsr2h,f,c
 12058   000F46  CFDE F02E          	movff	postinc2,___flge@ff2
 12059   000F4A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12060   000F4E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12061   000F52  CFDE F031          	movff	postinc2,___flge@ff2+3
 12062   000F56  EC62  F025         	call	___flge	;wreg free
 12063   000F5A  B0D8               	btfsc	status,0,c
 12064   000F5C  EFB2  F007         	goto	u5131
 12065   000F60  EFB4  F007         	goto	u5130
 12066   000F64                     u5131:
 12067   000F64  EFD1  F007         	goto	l5285
 12068   000F68                     u5130:
 12069   000F68                     
 12070                           ;color.c: 138:             Cmax=RGB_col[i];
 12071   000F68  0E66               	movlw	low Colour_decider@RGB_col
 12072   000F6A  6E4F               	movwf	??_Colour_decider^0,c
 12073   000F6C  0E00               	movlw	high Colour_decider@RGB_col
 12074   000F6E  6E50               	movwf	(??_Colour_decider+1)^0,c
 12075   000F70  90D8               	bcf	status,0,c
 12076   000F72  0100               	movlb	0	; () banked
 12077   000F74  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12078   000F76  6ED9               	movwf	fsr2l,c
 12079   000F78  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12080   000F7A  6EDA               	movwf	fsr2h,c
 12081   000F7C  90D8               	bcf	status,0,c
 12082   000F7E  36D9               	rlcf	fsr2l,f,c
 12083   000F80  36DA               	rlcf	fsr2h,f,c
 12084   000F82  504F               	movf	??_Colour_decider^0,w,c
 12085   000F84  26D9               	addwf	fsr2l,f,c
 12086   000F86  5050               	movf	(??_Colour_decider+1)^0,w,c
 12087   000F88  22DA               	addwfc	fsr2h,f,c
 12088   000F8A  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12089   000F8E  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12090   000F92  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12091   000F96  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12092   000F9A                     
 12093                           ; BSR set to: 0
 12094                           ;color.c: 139:             Cmax_i=i;
 12095   000F9A  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12096   000F9E  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12097   000FA2                     l5285:
 12098                           
 12099                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12100   000FA2  0E66               	movlw	low Colour_decider@RGB_col
 12101   000FA4  6E4F               	movwf	??_Colour_decider^0,c
 12102   000FA6  0E00               	movlw	high Colour_decider@RGB_col
 12103   000FA8  6E50               	movwf	(??_Colour_decider+1)^0,c
 12104   000FAA  90D8               	bcf	status,0,c
 12105   000FAC  0100               	movlb	0	; () banked
 12106   000FAE  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12107   000FB0  6ED9               	movwf	fsr2l,c
 12108   000FB2  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12109   000FB4  6EDA               	movwf	fsr2h,c
 12110   000FB6  90D8               	bcf	status,0,c
 12111   000FB8  36D9               	rlcf	fsr2l,f,c
 12112   000FBA  36DA               	rlcf	fsr2h,f,c
 12113   000FBC  504F               	movf	??_Colour_decider^0,w,c
 12114   000FBE  26D9               	addwf	fsr2l,f,c
 12115   000FC0  5050               	movf	(??_Colour_decider+1)^0,w,c
 12116   000FC2  22DA               	addwfc	fsr2h,f,c
 12117   000FC4  CFDE F02A          	movff	postinc2,___flge@ff1
 12118   000FC8  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12119   000FCC  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12120   000FD0  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12121   000FD4  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12122   000FD8  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12123   000FDC  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12124   000FE0  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12125   000FE4  EC62  F025         	call	___flge	;wreg free
 12126   000FE8  B0D8               	btfsc	status,0,c
 12127   000FEA  EFF9  F007         	goto	u5141
 12128   000FEE  EFFB  F007         	goto	u5140
 12129   000FF2                     u5141:
 12130   000FF2  EF14  F008         	goto	l5289
 12131   000FF6                     u5140:
 12132   000FF6  0E66               	movlw	low Colour_decider@RGB_col
 12133   000FF8  6E4F               	movwf	??_Colour_decider^0,c
 12134   000FFA  0E00               	movlw	high Colour_decider@RGB_col
 12135   000FFC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12136   000FFE  90D8               	bcf	status,0,c
 12137   001000  0100               	movlb	0	; () banked
 12138   001002  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12139   001004  6ED9               	movwf	fsr2l,c
 12140   001006  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12141   001008  6EDA               	movwf	fsr2h,c
 12142   00100A  90D8               	bcf	status,0,c
 12143   00100C  36D9               	rlcf	fsr2l,f,c
 12144   00100E  36DA               	rlcf	fsr2h,f,c
 12145   001010  504F               	movf	??_Colour_decider^0,w,c
 12146   001012  26D9               	addwf	fsr2l,f,c
 12147   001014  5050               	movf	(??_Colour_decider+1)^0,w,c
 12148   001016  22DA               	addwfc	fsr2h,f,c
 12149   001018  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12150   00101C  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12151   001020  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12152   001024  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12153   001028                     l5289:
 12154                           
 12155                           ;color.c: 142:     }
 12156   001028  0100               	movlb	0	; () banked
 12157   00102A  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12158   00102C  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12159   00102E                     
 12160                           ; BSR set to: 0
 12161   00102E  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12162   001030  EF23  F008         	goto	u5151
 12163   001034  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12164   001036  E109               	bnz	u5150
 12165   001038  0E03               	movlw	3
 12166   00103A  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12167   00103C  A0D8               	btfss	status,0,c
 12168   00103E  EF23  F008         	goto	u5151
 12169   001042  EF25  F008         	goto	u5150
 12170   001046                     u5151:
 12171   001046  EF8B  F007         	goto	l5279
 12172   00104A                     u5150:
 12173   00104A                     
 12174                           ; BSR set to: 0
 12175                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12176   00104A  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12177   00104E  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12178   001052  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12179   001056  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12180   00105A  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12181   00105E  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12182   001062  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12183   001066  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12184   00106A  EC69  F02E         	call	___flsub	;wreg free
 12185   00106E  C02A  F032         	movff	?___flsub,___fleq@ff1
 12186   001072  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12187   001076  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12188   00107A  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12189   00107E  0E00               	movlw	0
 12190   001080  6E36               	movwf	___fleq@ff2^0,c
 12191   001082  0E00               	movlw	0
 12192   001084  6E37               	movwf	(___fleq@ff2+1)^0,c
 12193   001086  0E00               	movlw	0
 12194   001088  6E38               	movwf	(___fleq@ff2+2)^0,c
 12195   00108A  0E00               	movlw	0
 12196   00108C  6E39               	movwf	(___fleq@ff2+3)^0,c
 12197   00108E  ECD3  F027         	call	___fleq	;wreg free
 12198   001092  A0D8               	btfss	status,0,c
 12199   001094  EF4E  F008         	goto	u5161
 12200   001098  EF50  F008         	goto	u5160
 12201   00109C                     u5161:
 12202   00109C  EF56  F008         	goto	l5299
 12203   0010A0                     u5160:
 12204   0010A0                     l5295:
 12205   0010A0  0E00               	movlw	0
 12206   0010A2  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12207   0010A4  0E00               	movlw	0
 12208   0010A6  6E4B               	movwf	?_Colour_decider^0,c
 12209   0010A8  EF4E  F00C         	goto	l76
 12210   0010AC                     l5299:
 12211                           
 12212                           ;color.c: 147:     if (Cmax_i==0){
 12213   0010AC  0100               	movlb	0	; () banked
 12214   0010AE  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12215   0010B0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12216   0010B2  A4D8               	btfss	status,2,c
 12217   0010B4  EF5E  F008         	goto	u5171
 12218   0010B8  EF60  F008         	goto	u5170
 12219   0010BC                     u5171:
 12220   0010BC  EFD4  F008         	goto	l5307
 12221   0010C0                     u5170:
 12222   0010C0                     
 12223                           ; BSR set to: 0
 12224                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12225   0010C0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12226   0010C4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12227   0010C8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12228   0010CC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12229   0010D0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12230   0010D4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12231   0010D8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12232   0010DC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12233   0010E0  EC69  F02E         	call	___flsub	;wreg free
 12234   0010E4  C02A  F036         	movff	?___flsub,___fldiv@a
 12235   0010E8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12236   0010EC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12237   0010F0  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12238   0010F4  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12239   0010F8  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12240   0010FC  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12241   001100  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12242   001104  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12243   001108  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12244   00110C  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12245   001110  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12246   001114  EC69  F02E         	call	___flsub	;wreg free
 12247   001118  C02A  F032         	movff	?___flsub,___fldiv@b
 12248   00111C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12249   001120  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12250   001124  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12251   001128  EC64  F018         	call	___fldiv	;wreg free
 12252   00112C  C032  F011         	movff	?___fldiv,___flmul@b
 12253   001130  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12254   001134  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12255   001138  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12256   00113C  0E00               	movlw	0
 12257   00113E  6E15               	movwf	___flmul@a^0,c
 12258   001140  0E00               	movlw	0
 12259   001142  6E16               	movwf	(___flmul@a+1)^0,c
 12260   001144  0E70               	movlw	112
 12261   001146  6E17               	movwf	(___flmul@a+2)^0,c
 12262   001148  0E42               	movlw	66
 12263   00114A  6E18               	movwf	(___flmul@a+3)^0,c
 12264   00114C  EC4F  F016         	call	___flmul	;wreg free
 12265   001150  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12266   001154  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12267   001158  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12268   00115C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12269   001160                     
 12270                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12271   001160  0100               	movlb	0	; () banked
 12272   001162  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12273   001164  EFB8  F008         	goto	u5180
 12274   001168  EFB6  F008         	goto	u5181
 12275   00116C                     u5181:
 12276   00116C  EFB3  F009         	goto	l5317
 12277   001170                     u5180:
 12278   001170                     
 12279                           ; BSR set to: 0
 12280   001170  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12281   001174  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12282   001178  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12283   00117C  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12284   001180  0E00               	movlw	0
 12285   001182  6E05               	movwf	___fladd@a^0,c
 12286   001184  0E00               	movlw	0
 12287   001186  6E06               	movwf	(___fladd@a+1)^0,c
 12288   001188  0EB4               	movlw	180
 12289   00118A  6E07               	movwf	(___fladd@a+2)^0,c
 12290   00118C  0E43               	movlw	67
 12291   00118E  6E08               	movwf	(___fladd@a+3)^0,c
 12292   001190  ECEF  F013         	call	___fladd	;wreg free
 12293   001194  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12294   001198  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12295   00119C  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12296   0011A0  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12297   0011A4  EFB3  F009         	goto	l5317
 12298   0011A8                     l5307:
 12299                           
 12300                           ; BSR set to: 0
 12301   0011A8  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12302   0011AA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12303   0011AC  A4D8               	btfss	status,2,c
 12304   0011AE  EFDB  F008         	goto	u5191
 12305   0011B2  EFDD  F008         	goto	u5190
 12306   0011B6                     u5191:
 12307   0011B6  EF49  F009         	goto	l5313
 12308   0011BA                     u5190:
 12309   0011BA                     
 12310                           ; BSR set to: 0
 12311                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12312   0011BA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12313   0011BE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12314   0011C2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12315   0011C6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12316   0011CA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12317   0011CE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12318   0011D2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12319   0011D6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12320   0011DA  EC69  F02E         	call	___flsub	;wreg free
 12321   0011DE  C02A  F036         	movff	?___flsub,___fldiv@a
 12322   0011E2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12323   0011E6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12324   0011EA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12325   0011EE  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12326   0011F2  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12327   0011F6  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12328   0011FA  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12329   0011FE  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12330   001202  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12331   001206  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12332   00120A  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12333   00120E  EC69  F02E         	call	___flsub	;wreg free
 12334   001212  C02A  F032         	movff	?___flsub,___fldiv@b
 12335   001216  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12336   00121A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12337   00121E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12338   001222  EC64  F018         	call	___fldiv	;wreg free
 12339   001226  C032  F060         	movff	?___fldiv,_Colour_decider$3237
 12340   00122A  C033  F061         	movff	?___fldiv+1,_Colour_decider$3237+1
 12341   00122E  C034  F062         	movff	?___fldiv+2,_Colour_decider$3237+2
 12342   001232  C035  F063         	movff	?___fldiv+3,_Colour_decider$3237+3
 12343   001236                     
 12344                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12345   001236  0E00               	movlw	0
 12346   001238  6E05               	movwf	___fladd@a^0,c
 12347   00123A  0E00               	movlw	0
 12348   00123C  6E06               	movwf	(___fladd@a+1)^0,c
 12349   00123E  0E00               	movlw	0
 12350   001240  6E07               	movwf	(___fladd@a+2)^0,c
 12351   001242  0E40               	movlw	64
 12352   001244  6E08               	movwf	(___fladd@a+3)^0,c
 12353   001246  C060  F001         	movff	_Colour_decider$3237,___fladd@b
 12354   00124A  C061  F002         	movff	_Colour_decider$3237+1,___fladd@b+1
 12355   00124E  C062  F003         	movff	_Colour_decider$3237+2,___fladd@b+2
 12356   001252  C063  F004         	movff	_Colour_decider$3237+3,___fladd@b+3
 12357   001256  ECEF  F013         	call	___fladd	;wreg free
 12358   00125A  C001  F011         	movff	?___fladd,___flmul@b
 12359   00125E  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12360   001262  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12361   001266  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12362   00126A  0E00               	movlw	0
 12363   00126C  6E15               	movwf	___flmul@a^0,c
 12364   00126E  0E00               	movlw	0
 12365   001270  6E16               	movwf	(___flmul@a+1)^0,c
 12366   001272  0E70               	movlw	112
 12367   001274  6E17               	movwf	(___flmul@a+2)^0,c
 12368   001276  0E42               	movlw	66
 12369   001278  6E18               	movwf	(___flmul@a+3)^0,c
 12370   00127A  EC4F  F016         	call	___flmul	;wreg free
 12371   00127E  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12372   001282  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12373   001286  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12374   00128A  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12375                           
 12376                           ;color.c: 156:     }
 12377   00128E  EFB3  F009         	goto	l5317
 12378   001292                     l5313:
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12382   001292  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12383   001296  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12384   00129A  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12385   00129E  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12386   0012A2  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12387   0012A6  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12388   0012AA  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12389   0012AE  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12390   0012B2  EC69  F02E         	call	___flsub	;wreg free
 12391   0012B6  C02A  F036         	movff	?___flsub,___fldiv@a
 12392   0012BA  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12393   0012BE  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12394   0012C2  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12395   0012C6  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12396   0012CA  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12397   0012CE  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12398   0012D2  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12399   0012D6  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12400   0012DA  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12401   0012DE  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12402   0012E2  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12403   0012E6  EC69  F02E         	call	___flsub	;wreg free
 12404   0012EA  C02A  F032         	movff	?___flsub,___fldiv@b
 12405   0012EE  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12406   0012F2  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12407   0012F6  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12408   0012FA  EC64  F018         	call	___fldiv	;wreg free
 12409   0012FE  C032  F060         	movff	?___fldiv,_Colour_decider$3237
 12410   001302  C033  F061         	movff	?___fldiv+1,_Colour_decider$3237+1
 12411   001306  C034  F062         	movff	?___fldiv+2,_Colour_decider$3237+2
 12412   00130A  C035  F063         	movff	?___fldiv+3,_Colour_decider$3237+3
 12413   00130E                     
 12414                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12415   00130E  0E00               	movlw	0
 12416   001310  6E05               	movwf	___fladd@a^0,c
 12417   001312  0E00               	movlw	0
 12418   001314  6E06               	movwf	(___fladd@a+1)^0,c
 12419   001316  0E80               	movlw	128
 12420   001318  6E07               	movwf	(___fladd@a+2)^0,c
 12421   00131A  0E40               	movlw	64
 12422   00131C  6E08               	movwf	(___fladd@a+3)^0,c
 12423   00131E  C060  F001         	movff	_Colour_decider$3237,___fladd@b
 12424   001322  C061  F002         	movff	_Colour_decider$3237+1,___fladd@b+1
 12425   001326  C062  F003         	movff	_Colour_decider$3237+2,___fladd@b+2
 12426   00132A  C063  F004         	movff	_Colour_decider$3237+3,___fladd@b+3
 12427   00132E  ECEF  F013         	call	___fladd	;wreg free
 12428   001332  C001  F011         	movff	?___fladd,___flmul@b
 12429   001336  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12430   00133A  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12431   00133E  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12432   001342  0E00               	movlw	0
 12433   001344  6E15               	movwf	___flmul@a^0,c
 12434   001346  0E00               	movlw	0
 12435   001348  6E16               	movwf	(___flmul@a+1)^0,c
 12436   00134A  0E70               	movlw	112
 12437   00134C  6E17               	movwf	(___flmul@a+2)^0,c
 12438   00134E  0E42               	movlw	66
 12439   001350  6E18               	movwf	(___flmul@a+3)^0,c
 12440   001352  EC4F  F016         	call	___flmul	;wreg free
 12441   001356  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12442   00135A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12443   00135E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12444   001362  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12445   001366                     l5317:
 12446                           
 12447                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12448   001366  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12449   00136A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12450   00136E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12451   001372  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12452   001376  0E00               	movlw	0
 12453   001378  6E2E               	movwf	___flge@ff2^0,c
 12454   00137A  0E00               	movlw	0
 12455   00137C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12456   00137E  0EA5               	movlw	165
 12457   001380  6E30               	movwf	(___flge@ff2+2)^0,c
 12458   001382  0E43               	movlw	67
 12459   001384  6E31               	movwf	(___flge@ff2+3)^0,c
 12460   001386  EC62  F025         	call	___flge	;wreg free
 12461   00138A  A0D8               	btfss	status,0,c
 12462   00138C  EFCA  F009         	goto	u5201
 12463   001390  EFCC  F009         	goto	u5200
 12464   001394                     u5201:
 12465   001394  EFEB  F009         	goto	l5327
 12466   001398                     u5200:
 12467   001398  0E00               	movlw	0
 12468   00139A  6E2A               	movwf	___flge@ff1^0,c
 12469   00139C  0E00               	movlw	0
 12470   00139E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12471   0013A0  0EB4               	movlw	180
 12472   0013A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 12473   0013A4  0E43               	movlw	67
 12474   0013A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 12475   0013A8  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12476   0013AC  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12477   0013B0  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12478   0013B4  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12479   0013B8  EC62  F025         	call	___flge	;wreg free
 12480   0013BC  A0D8               	btfss	status,0,c
 12481   0013BE  EFE3  F009         	goto	u5211
 12482   0013C2  EFE5  F009         	goto	u5210
 12483   0013C6                     u5211:
 12484   0013C6  EFEB  F009         	goto	l5327
 12485   0013CA                     u5210:
 12486   0013CA                     
 12487                           ;color.c: 164:         return 1;
 12488   0013CA  0E00               	movlw	0
 12489   0013CC  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12490   0013CE  0E01               	movlw	1
 12491   0013D0  6E4B               	movwf	?_Colour_decider^0,c
 12492   0013D2  EF4E  F00C         	goto	l76
 12493   0013D6                     l5327:
 12494   0013D6  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12495   0013DA  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12496   0013DE  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12497   0013E2  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12498   0013E6  0E00               	movlw	0
 12499   0013E8  6E2E               	movwf	___flge@ff2^0,c
 12500   0013EA  0E00               	movlw	0
 12501   0013EC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12502   0013EE  0EA0               	movlw	160
 12503   0013F0  6E30               	movwf	(___flge@ff2+2)^0,c
 12504   0013F2  0E40               	movlw	64
 12505   0013F4  6E31               	movwf	(___flge@ff2+3)^0,c
 12506   0013F6  EC62  F025         	call	___flge	;wreg free
 12507   0013FA  A0D8               	btfss	status,0,c
 12508   0013FC  EF02  F00A         	goto	u5221
 12509   001400  EF04  F00A         	goto	u5220
 12510   001404                     u5221:
 12511   001404  EF23  F00A         	goto	l5337
 12512   001408                     u5220:
 12513   001408  0E00               	movlw	0
 12514   00140A  6E2A               	movwf	___flge@ff1^0,c
 12515   00140C  0E00               	movlw	0
 12516   00140E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12517   001410  0E30               	movlw	48
 12518   001412  6E2C               	movwf	(___flge@ff1+2)^0,c
 12519   001414  0E41               	movlw	65
 12520   001416  6E2D               	movwf	(___flge@ff1+3)^0,c
 12521   001418  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12522   00141C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12523   001420  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12524   001424  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12525   001428  EC62  F025         	call	___flge	;wreg free
 12526   00142C  A0D8               	btfss	status,0,c
 12527   00142E  EF1B  F00A         	goto	u5231
 12528   001432  EF1D  F00A         	goto	u5230
 12529   001436                     u5231:
 12530   001436  EF23  F00A         	goto	l5337
 12531   00143A                     u5230:
 12532   00143A                     
 12533                           ;color.c: 168:         return 2;
 12534   00143A  0E00               	movlw	0
 12535   00143C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12536   00143E  0E02               	movlw	2
 12537   001440  6E4B               	movwf	?_Colour_decider^0,c
 12538   001442  EF4E  F00C         	goto	l76
 12539   001446                     l5337:
 12540   001446  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12541   00144A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12542   00144E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12543   001452  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12544   001456  0E00               	movlw	0
 12545   001458  6E2E               	movwf	___flge@ff2^0,c
 12546   00145A  0E00               	movlw	0
 12547   00145C  6E2F               	movwf	(___flge@ff2+1)^0,c
 12548   00145E  0E90               	movlw	144
 12549   001460  6E30               	movwf	(___flge@ff2+2)^0,c
 12550   001462  0E41               	movlw	65
 12551   001464  6E31               	movwf	(___flge@ff2+3)^0,c
 12552   001466  EC62  F025         	call	___flge	;wreg free
 12553   00146A  A0D8               	btfss	status,0,c
 12554   00146C  EF3A  F00A         	goto	u5241
 12555   001470  EF3C  F00A         	goto	u5240
 12556   001474                     u5241:
 12557   001474  EFF0  F00A         	goto	l5367
 12558   001478                     u5240:
 12559   001478  0E00               	movlw	0
 12560   00147A  6E2A               	movwf	___flge@ff1^0,c
 12561   00147C  0E00               	movlw	0
 12562   00147E  6E2B               	movwf	(___flge@ff1+1)^0,c
 12563   001480  0EC8               	movlw	200
 12564   001482  6E2C               	movwf	(___flge@ff1+2)^0,c
 12565   001484  0E41               	movlw	65
 12566   001486  6E2D               	movwf	(___flge@ff1+3)^0,c
 12567   001488  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12568   00148C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12569   001490  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12570   001494  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12571   001498  EC62  F025         	call	___flge	;wreg free
 12572   00149C  A0D8               	btfss	status,0,c
 12573   00149E  EF53  F00A         	goto	u5251
 12574   0014A2  EF55  F00A         	goto	u5250
 12575   0014A6                     u5251:
 12576   0014A6  EFF0  F00A         	goto	l5367
 12577   0014AA                     u5250:
 12578   0014AA                     
 12579                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12580   0014AA  0EB8               	movlw	184
 12581   0014AC  6E2A               	movwf	___flge@ff1^0,c
 12582   0014AE  0E1E               	movlw	30
 12583   0014B0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12584   0014B2  0E85               	movlw	133
 12585   0014B4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12586   0014B6  0E3E               	movlw	62
 12587   0014B8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12588   0014BA  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12589   0014BE  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12590   0014C2  CFDE F02E          	movff	postinc2,___flge@ff2
 12591   0014C6  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12592   0014CA  CFDE F030          	movff	postinc2,___flge@ff2+2
 12593   0014CE  CFDE F031          	movff	postinc2,___flge@ff2+3
 12594   0014D2  EC62  F025         	call	___flge	;wreg free
 12595   0014D6  A0D8               	btfss	status,0,c
 12596   0014D8  EF70  F00A         	goto	u5261
 12597   0014DC  EF72  F00A         	goto	u5260
 12598   0014E0                     u5261:
 12599   0014E0  EFA8  F00A         	goto	l5353
 12600   0014E4                     u5260:
 12601   0014E4  0ECD               	movlw	205
 12602   0014E6  6E2A               	movwf	___flge@ff1^0,c
 12603   0014E8  0ECC               	movlw	204
 12604   0014EA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12605   0014EC  0ECC               	movlw	204
 12606   0014EE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12607   0014F0  0E3D               	movlw	61
 12608   0014F2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12609   0014F4  EE20 F008          	lfsr	2,8
 12610   0014F8  504D               	movf	Colour_decider@rel^0,w,c
 12611   0014FA  26D9               	addwf	fsr2l,f,c
 12612   0014FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12613   0014FE  22DA               	addwfc	fsr2h,f,c
 12614   001500  CFDE F02E          	movff	postinc2,___flge@ff2
 12615   001504  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12616   001508  CFDE F030          	movff	postinc2,___flge@ff2+2
 12617   00150C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12618   001510  EC62  F025         	call	___flge	;wreg free
 12619   001514  B0D8               	btfsc	status,0,c
 12620   001516  EF8F  F00A         	goto	u5271
 12621   00151A  EF91  F00A         	goto	u5270
 12622   00151E                     u5271:
 12623   00151E  EFA8  F00A         	goto	l5353
 12624   001522                     u5270:
 12625   001522  EE20 F006          	lfsr	2,6
 12626   001526  504B               	movf	Colour_decider@vals^0,w,c
 12627   001528  26D9               	addwf	fsr2l,f,c
 12628   00152A  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12629   00152C  22DA               	addwfc	fsr2h,f,c
 12630   00152E  0E01               	movlw	1
 12631   001530  BEDB               	btfsc	plusw2,7,c
 12632   001532  EFA4  F00A         	goto	u5281
 12633   001536  0EE9               	movlw	233
 12634   001538  5CDE               	subwf	postinc2,w,c
 12635   00153A  0E03               	movlw	3
 12636   00153C  58DE               	subwfb	postinc2,w,c
 12637   00153E  A0D8               	btfss	status,0,c
 12638   001540  EFA4  F00A         	goto	u5281
 12639   001544  EFA6  F00A         	goto	u5280
 12640   001548                     u5281:
 12641   001548  EFA8  F00A         	goto	l5353
 12642   00154C                     u5280:
 12643   00154C  EF50  F008         	goto	l5295
 12644   001550                     l5353:
 12645   001550  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12646   001554  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12647   001558  CFDE F02A          	movff	postinc2,___flge@ff1
 12648   00155C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12649   001560  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12650   001564  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12651   001568  0EB8               	movlw	184
 12652   00156A  6E2E               	movwf	___flge@ff2^0,c
 12653   00156C  0E1E               	movlw	30
 12654   00156E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12655   001570  0E85               	movlw	133
 12656   001572  6E30               	movwf	(___flge@ff2+2)^0,c
 12657   001574  0E3E               	movlw	62
 12658   001576  6E31               	movwf	(___flge@ff2+3)^0,c
 12659   001578  EC62  F025         	call	___flge	;wreg free
 12660   00157C  A0D8               	btfss	status,0,c
 12661   00157E  EFC3  F00A         	goto	u5291
 12662   001582  EFC5  F00A         	goto	u5290
 12663   001586                     u5291:
 12664   001586  EFEA  F00A         	goto	l5363
 12665   00158A                     u5290:
 12666   00158A  EE20 F008          	lfsr	2,8
 12667   00158E  504D               	movf	Colour_decider@rel^0,w,c
 12668   001590  26D9               	addwf	fsr2l,f,c
 12669   001592  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12670   001594  22DA               	addwfc	fsr2h,f,c
 12671   001596  CFDE F02A          	movff	postinc2,___flge@ff1
 12672   00159A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12673   00159E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12674   0015A2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12675   0015A6  0ECD               	movlw	205
 12676   0015A8  6E2E               	movwf	___flge@ff2^0,c
 12677   0015AA  0ECC               	movlw	204
 12678   0015AC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12679   0015AE  0ECC               	movlw	204
 12680   0015B0  6E30               	movwf	(___flge@ff2+2)^0,c
 12681   0015B2  0E3D               	movlw	61
 12682   0015B4  6E31               	movwf	(___flge@ff2+3)^0,c
 12683   0015B6  EC62  F025         	call	___flge	;wreg free
 12684   0015BA  B0D8               	btfsc	status,0,c
 12685   0015BC  EFE2  F00A         	goto	u5301
 12686   0015C0  EFE4  F00A         	goto	u5300
 12687   0015C4                     u5301:
 12688   0015C4  EFEA  F00A         	goto	l5363
 12689   0015C8                     u5300:
 12690   0015C8                     
 12691                           ;color.c: 177:             return 3;
 12692   0015C8  0E00               	movlw	0
 12693   0015CA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12694   0015CC  0E03               	movlw	3
 12695   0015CE  6E4B               	movwf	?_Colour_decider^0,c
 12696   0015D0  EF4E  F00C         	goto	l76
 12697   0015D4                     l5363:
 12698                           
 12699                           ;color.c: 180:             return 10;
 12700   0015D4  0E00               	movlw	0
 12701   0015D6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12702   0015D8  0E0A               	movlw	10
 12703   0015DA  6E4B               	movwf	?_Colour_decider^0,c
 12704   0015DC  EF4E  F00C         	goto	l76
 12705   0015E0                     l5367:
 12706   0015E0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12707   0015E4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12708   0015E8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12709   0015EC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12710   0015F0  0E00               	movlw	0
 12711   0015F2  6E2E               	movwf	___flge@ff2^0,c
 12712   0015F4  0E00               	movlw	0
 12713   0015F6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12714   0015F8  0EAA               	movlw	170
 12715   0015FA  6E30               	movwf	(___flge@ff2+2)^0,c
 12716   0015FC  0E42               	movlw	66
 12717   0015FE  6E31               	movwf	(___flge@ff2+3)^0,c
 12718   001600  EC62  F025         	call	___flge	;wreg free
 12719   001604  A0D8               	btfss	status,0,c
 12720   001606  EF07  F00B         	goto	u5311
 12721   00160A  EF09  F00B         	goto	u5310
 12722   00160E                     u5311:
 12723   00160E  EF28  F00B         	goto	l5377
 12724   001612                     u5310:
 12725   001612  0E00               	movlw	0
 12726   001614  6E2A               	movwf	___flge@ff1^0,c
 12727   001616  0E00               	movlw	0
 12728   001618  6E2B               	movwf	(___flge@ff1+1)^0,c
 12729   00161A  0E20               	movlw	32
 12730   00161C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12731   00161E  0E43               	movlw	67
 12732   001620  6E2D               	movwf	(___flge@ff1+3)^0,c
 12733   001622  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12734   001626  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12735   00162A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12736   00162E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12737   001632  EC62  F025         	call	___flge	;wreg free
 12738   001636  A0D8               	btfss	status,0,c
 12739   001638  EF20  F00B         	goto	u5321
 12740   00163C  EF22  F00B         	goto	u5320
 12741   001640                     u5321:
 12742   001640  EF28  F00B         	goto	l5377
 12743   001644                     u5320:
 12744   001644                     
 12745                           ;color.c: 186:         return 4;
 12746   001644  0E00               	movlw	0
 12747   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12748   001648  0E04               	movlw	4
 12749   00164A  6E4B               	movwf	?_Colour_decider^0,c
 12750   00164C  EF4E  F00C         	goto	l76
 12751   001650                     l5377:
 12752   001650  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12753   001654  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12754   001658  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12755   00165C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12756   001660  0E00               	movlw	0
 12757   001662  6E2E               	movwf	___flge@ff2^0,c
 12758   001664  0E00               	movlw	0
 12759   001666  6E2F               	movwf	(___flge@ff2+1)^0,c
 12760   001668  0E70               	movlw	112
 12761   00166A  6E30               	movwf	(___flge@ff2+2)^0,c
 12762   00166C  0E42               	movlw	66
 12763   00166E  6E31               	movwf	(___flge@ff2+3)^0,c
 12764   001670  EC62  F025         	call	___flge	;wreg free
 12765   001674  A0D8               	btfss	status,0,c
 12766   001676  EF3F  F00B         	goto	u5331
 12767   00167A  EF41  F00B         	goto	u5330
 12768   00167E                     u5331:
 12769   00167E  EFE2  F00B         	goto	l5405
 12770   001682                     u5330:
 12771   001682  0E00               	movlw	0
 12772   001684  6E2A               	movwf	___flge@ff1^0,c
 12773   001686  0E00               	movlw	0
 12774   001688  6E2B               	movwf	(___flge@ff1+1)^0,c
 12775   00168A  0E9A               	movlw	154
 12776   00168C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12777   00168E  0E42               	movlw	66
 12778   001690  6E2D               	movwf	(___flge@ff1+3)^0,c
 12779   001692  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12780   001696  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12781   00169A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12782   00169E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12783   0016A2  EC62  F025         	call	___flge	;wreg free
 12784   0016A6  A0D8               	btfss	status,0,c
 12785   0016A8  EF58  F00B         	goto	u5341
 12786   0016AC  EF5A  F00B         	goto	u5340
 12787   0016B0                     u5341:
 12788   0016B0  EFE2  F00B         	goto	l5405
 12789   0016B4                     u5340:
 12790   0016B4                     
 12791                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 12792   0016B4  EE20 F008          	lfsr	2,8
 12793   0016B8  504D               	movf	Colour_decider@rel^0,w,c
 12794   0016BA  26D9               	addwf	fsr2l,f,c
 12795   0016BC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12796   0016BE  22DA               	addwfc	fsr2h,f,c
 12797   0016C0  CFDE F02A          	movff	postinc2,___flge@ff1
 12798   0016C4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12799   0016C8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12800   0016CC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12801   0016D0  0E8F               	movlw	143
 12802   0016D2  6E2E               	movwf	___flge@ff2^0,c
 12803   0016D4  0EC2               	movlw	194
 12804   0016D6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12805   0016D8  0EF5               	movlw	245
 12806   0016DA  6E30               	movwf	(___flge@ff2+2)^0,c
 12807   0016DC  0E3D               	movlw	61
 12808   0016DE  6E31               	movwf	(___flge@ff2+3)^0,c
 12809   0016E0  EC62  F025         	call	___flge	;wreg free
 12810   0016E4  A0D8               	btfss	status,0,c
 12811   0016E6  EF77  F00B         	goto	u5351
 12812   0016EA  EF79  F00B         	goto	u5350
 12813   0016EE                     u5351:
 12814   0016EE  EF9E  F00B         	goto	l5391
 12815   0016F2                     u5350:
 12816   0016F2  EE20 F004          	lfsr	2,4
 12817   0016F6  504D               	movf	Colour_decider@rel^0,w,c
 12818   0016F8  26D9               	addwf	fsr2l,f,c
 12819   0016FA  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12820   0016FC  22DA               	addwfc	fsr2h,f,c
 12821   0016FE  CFDE F02A          	movff	postinc2,___flge@ff1
 12822   001702  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12823   001706  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12824   00170A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12825   00170E  0E3D               	movlw	61
 12826   001710  6E2E               	movwf	___flge@ff2^0,c
 12827   001712  0E0A               	movlw	10
 12828   001714  6E2F               	movwf	(___flge@ff2+1)^0,c
 12829   001716  0E57               	movlw	87
 12830   001718  6E30               	movwf	(___flge@ff2+2)^0,c
 12831   00171A  0E3E               	movlw	62
 12832   00171C  6E31               	movwf	(___flge@ff2+3)^0,c
 12833   00171E  EC62  F025         	call	___flge	;wreg free
 12834   001722  B0D8               	btfsc	status,0,c
 12835   001724  EF96  F00B         	goto	u5361
 12836   001728  EF98  F00B         	goto	u5360
 12837   00172C                     u5361:
 12838   00172C  EF9E  F00B         	goto	l5391
 12839   001730                     u5360:
 12840   001730                     
 12841                           ;color.c: 192:             return 6;
 12842   001730  0E00               	movlw	0
 12843   001732  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12844   001734  0E06               	movlw	6
 12845   001736  6E4B               	movwf	?_Colour_decider^0,c
 12846   001738  EF4E  F00C         	goto	l76
 12847   00173C                     l5391:
 12848   00173C  EE20 F008          	lfsr	2,8
 12849   001740  504D               	movf	Colour_decider@rel^0,w,c
 12850   001742  26D9               	addwf	fsr2l,f,c
 12851   001744  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12852   001746  22DA               	addwfc	fsr2h,f,c
 12853   001748  CFDE F02A          	movff	postinc2,___flge@ff1
 12854   00174C  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12855   001750  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12856   001754  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12857   001758  0E8F               	movlw	143
 12858   00175A  6E2E               	movwf	___flge@ff2^0,c
 12859   00175C  0EC2               	movlw	194
 12860   00175E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12861   001760  0EF5               	movlw	245
 12862   001762  6E30               	movwf	(___flge@ff2+2)^0,c
 12863   001764  0E3D               	movlw	61
 12864   001766  6E31               	movwf	(___flge@ff2+3)^0,c
 12865   001768  EC62  F025         	call	___flge	;wreg free
 12866   00176C  B0D8               	btfsc	status,0,c
 12867   00176E  EFBB  F00B         	goto	u5371
 12868   001772  EFBD  F00B         	goto	u5370
 12869   001776                     u5371:
 12870   001776  EFEA  F00A         	goto	l5363
 12871   00177A                     u5370:
 12872   00177A  0E3D               	movlw	61
 12873   00177C  6E2A               	movwf	___flge@ff1^0,c
 12874   00177E  0E0A               	movlw	10
 12875   001780  6E2B               	movwf	(___flge@ff1+1)^0,c
 12876   001782  0E57               	movlw	87
 12877   001784  6E2C               	movwf	(___flge@ff1+2)^0,c
 12878   001786  0E3E               	movlw	62
 12879   001788  6E2D               	movwf	(___flge@ff1+3)^0,c
 12880   00178A  EE20 F004          	lfsr	2,4
 12881   00178E  504D               	movf	Colour_decider@rel^0,w,c
 12882   001790  26D9               	addwf	fsr2l,f,c
 12883   001792  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12884   001794  22DA               	addwfc	fsr2h,f,c
 12885   001796  CFDE F02E          	movff	postinc2,___flge@ff2
 12886   00179A  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12887   00179E  CFDE F030          	movff	postinc2,___flge@ff2+2
 12888   0017A2  CFDE F031          	movff	postinc2,___flge@ff2+3
 12889   0017A6  EC62  F025         	call	___flge	;wreg free
 12890   0017AA  B0D8               	btfsc	status,0,c
 12891   0017AC  EFDA  F00B         	goto	u5381
 12892   0017B0  EFDC  F00B         	goto	u5380
 12893   0017B4                     u5381:
 12894   0017B4  EFEA  F00A         	goto	l5363
 12895   0017B8                     u5380:
 12896   0017B8                     
 12897                           ;color.c: 195:             return 5;
 12898   0017B8  0E00               	movlw	0
 12899   0017BA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12900   0017BC  0E05               	movlw	5
 12901   0017BE  6E4B               	movwf	?_Colour_decider^0,c
 12902   0017C0  EF4E  F00C         	goto	l76
 12903   0017C4                     l5405:
 12904   0017C4  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12905   0017C8  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12906   0017CC  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12907   0017D0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12908   0017D4  0E00               	movlw	0
 12909   0017D6  6E2E               	movwf	___flge@ff2^0,c
 12910   0017D8  0E00               	movlw	0
 12911   0017DA  6E2F               	movwf	(___flge@ff2+1)^0,c
 12912   0017DC  0E40               	movlw	64
 12913   0017DE  6E30               	movwf	(___flge@ff2+2)^0,c
 12914   0017E0  0E41               	movlw	65
 12915   0017E2  6E31               	movwf	(___flge@ff2+3)^0,c
 12916   0017E4  EC62  F025         	call	___flge	;wreg free
 12917   0017E8  A0D8               	btfss	status,0,c
 12918   0017EA  EFF9  F00B         	goto	u5391
 12919   0017EE  EFFB  F00B         	goto	u5390
 12920   0017F2                     u5391:
 12921   0017F2  EF1A  F00C         	goto	l5415
 12922   0017F6                     u5390:
 12923   0017F6  0E00               	movlw	0
 12924   0017F8  6E2A               	movwf	___flge@ff1^0,c
 12925   0017FA  0E00               	movlw	0
 12926   0017FC  6E2B               	movwf	(___flge@ff1+1)^0,c
 12927   0017FE  0E88               	movlw	136
 12928   001800  6E2C               	movwf	(___flge@ff1+2)^0,c
 12929   001802  0E41               	movlw	65
 12930   001804  6E2D               	movwf	(___flge@ff1+3)^0,c
 12931   001806  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12932   00180A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12933   00180E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12934   001812  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12935   001816  EC62  F025         	call	___flge	;wreg free
 12936   00181A  A0D8               	btfss	status,0,c
 12937   00181C  EF12  F00C         	goto	u5401
 12938   001820  EF14  F00C         	goto	u5400
 12939   001824                     u5401:
 12940   001824  EF1A  F00C         	goto	l5415
 12941   001828                     u5400:
 12942   001828                     
 12943                           ;color.c: 204:             return 7;
 12944   001828  0E00               	movlw	0
 12945   00182A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12946   00182C  0E07               	movlw	7
 12947   00182E  6E4B               	movwf	?_Colour_decider^0,c
 12948   001830  EF4E  F00C         	goto	l76
 12949   001834                     l5415:
 12950   001834  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12951   001838  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12952   00183C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12953   001840  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12954   001844  0E00               	movlw	0
 12955   001846  6E2E               	movwf	___flge@ff2^0,c
 12956   001848  0E00               	movlw	0
 12957   00184A  6E2F               	movwf	(___flge@ff2+1)^0,c
 12958   00184C  0EB0               	movlw	176
 12959   00184E  6E30               	movwf	(___flge@ff2+2)^0,c
 12960   001850  0E41               	movlw	65
 12961   001852  6E31               	movwf	(___flge@ff2+3)^0,c
 12962   001854  EC62  F025         	call	___flge	;wreg free
 12963   001858  A0D8               	btfss	status,0,c
 12964   00185A  EF31  F00C         	goto	u5411
 12965   00185E  EF33  F00C         	goto	u5410
 12966   001862                     u5411:
 12967   001862  EFEA  F00A         	goto	l5363
 12968   001866                     u5410:
 12969   001866  0E00               	movlw	0
 12970   001868  6E2A               	movwf	___flge@ff1^0,c
 12971   00186A  0E00               	movlw	0
 12972   00186C  6E2B               	movwf	(___flge@ff1+1)^0,c
 12973   00186E  0EC0               	movlw	192
 12974   001870  6E2C               	movwf	(___flge@ff1+2)^0,c
 12975   001872  0E41               	movlw	65
 12976   001874  6E2D               	movwf	(___flge@ff1+3)^0,c
 12977   001876  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12978   00187A  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12979   00187E  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12980   001882  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12981   001886  EC62  F025         	call	___flge	;wreg free
 12982   00188A  A0D8               	btfss	status,0,c
 12983   00188C  EF4A  F00C         	goto	u5421
 12984   001890  EF4C  F00C         	goto	u5420
 12985   001894                     u5421:
 12986   001894  EFEA  F00A         	goto	l5363
 12987   001898                     u5420:
 12988   001898  EF50  F008         	goto	l5295
 12989   00189C                     l76:
 12990   00189C  0012               	return		;funcret
 12991   00189E                     __end_of_Colour_decider:
 12992                           	callstack 0
 12993                           
 12994 ;; *************** function ___xxtofl *****************
 12995 ;; Defined at:
 12996 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;  sign            1    wreg     unsigned char 
 12999 ;;  val             4    0[COMRAM] long 
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;  sign            1    8[COMRAM] unsigned char 
 13002 ;;  arg             4   10[COMRAM] unsigned long 
 13003 ;;  exp             1    9[COMRAM] unsigned char 
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  4    0[COMRAM] unsigned char 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13014 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13016 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13017 ;;Total ram usage:       14 bytes
 13018 ;; Hardware stack levels used: 1
 13019 ;; Hardware stack levels required when called: 1
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_colour_rel
 13024 ;;		_Colour_decider
 13025 ;;		_reverseOneBlock
 13026 ;;		_ForwardOneBlock
 13027 ;;		_Forwardhalfblock
 13028 ;;		_Backhalfblock
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           	psect	text73
 13033   004206                     __ptext73:
 13034                           	callstack 0
 13035   004206                     ___xxtofl:
 13036                           	callstack 28
 13037                           
 13038                           ;incstack = 0
 13039                           ;___xxtofl@sign stored from wreg
 13040   004206  6E09               	movwf	___xxtofl@sign^0,c
 13041   004208  5009               	movf	___xxtofl@sign^0,w,c
 13042   00420A  B4D8               	btfsc	status,2,c
 13043   00420C  EF0A  F021         	goto	u5011
 13044   004210  EF0C  F021         	goto	u5010
 13045   004214                     u5011:
 13046   004214  EF2E  F021         	goto	l1341
 13047   004218                     u5010:
 13048   004218  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13049   00421A  EF13  F021         	goto	u5020
 13050   00421E  EF11  F021         	goto	u5021
 13051   004222                     u5021:
 13052   004222  EF2E  F021         	goto	l1341
 13053   004226                     u5020:
 13054   004226  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13055   00422A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13056   00422E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13057   004232  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13058   004236  1E05               	comf	??___xxtofl^0,f,c
 13059   004238  1E06               	comf	(??___xxtofl+1)^0,f,c
 13060   00423A  1E07               	comf	(??___xxtofl+2)^0,f,c
 13061   00423C  1E08               	comf	(??___xxtofl+3)^0,f,c
 13062   00423E  2A05               	incf	??___xxtofl^0,f,c
 13063   004240  0E00               	movlw	0
 13064   004242  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13065   004244  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13066   004246  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13067   004248  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13068   00424C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13069   004250  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13070   004254  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13071   004258  EF36  F021         	goto	l5165
 13072   00425C                     l1341:
 13073   00425C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13074   004260  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13075   004264  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13076   004268  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13077   00426C                     l5165:
 13078   00426C  5001               	movf	___xxtofl@val^0,w,c
 13079   00426E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13080   004270  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13081   004272  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13082   004274  A4D8               	btfss	status,2,c
 13083   004276  EF3F  F021         	goto	u5031
 13084   00427A  EF41  F021         	goto	u5030
 13085   00427E                     u5031:
 13086   00427E  EF4B  F021         	goto	l5171
 13087   004282                     u5030:
 13088   004282  0E00               	movlw	0
 13089   004284  6E01               	movwf	?___xxtofl^0,c
 13090   004286  0E00               	movlw	0
 13091   004288  6E02               	movwf	(?___xxtofl+1)^0,c
 13092   00428A  0E00               	movlw	0
 13093   00428C  6E03               	movwf	(?___xxtofl+2)^0,c
 13094   00428E  0E00               	movlw	0
 13095   004290  6E04               	movwf	(?___xxtofl+3)^0,c
 13096   004292  EFDC  F021         	goto	l1344
 13097   004296                     l5171:
 13098   004296  0E96               	movlw	150
 13099   004298  6E0A               	movwf	___xxtofl@exp^0,c
 13100   00429A  EF55  F021         	goto	l5175
 13101   00429E                     l5173:
 13102   00429E  2A0A               	incf	___xxtofl@exp^0,f,c
 13103   0042A0  90D8               	bcf	status,0,c
 13104   0042A2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13105   0042A4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13106   0042A6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13107   0042A8  320B               	rrcf	___xxtofl@arg^0,f,c
 13108   0042AA                     l5175:
 13109   0042AA  0E00               	movlw	0
 13110   0042AC  140B               	andwf	___xxtofl@arg^0,w,c
 13111   0042AE  6E05               	movwf	??___xxtofl^0,c
 13112   0042B0  0E00               	movlw	0
 13113   0042B2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13114   0042B4  6E06               	movwf	(??___xxtofl+1)^0,c
 13115   0042B6  0E00               	movlw	0
 13116   0042B8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13117   0042BA  6E07               	movwf	(??___xxtofl+2)^0,c
 13118   0042BC  0EFE               	movlw	254
 13119   0042BE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13120   0042C0  6E08               	movwf	(??___xxtofl+3)^0,c
 13121   0042C2  5005               	movf	??___xxtofl^0,w,c
 13122   0042C4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13123   0042C6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13124   0042C8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13125   0042CA  A4D8               	btfss	status,2,c
 13126   0042CC  EF6A  F021         	goto	u5041
 13127   0042D0  EF6C  F021         	goto	u5040
 13128   0042D4                     u5041:
 13129   0042D4  EF4F  F021         	goto	l5173
 13130   0042D8                     u5040:
 13131   0042D8  EF7A  F021         	goto	l1348
 13132   0042DC                     l5177:
 13133   0042DC  2A0A               	incf	___xxtofl@exp^0,f,c
 13134   0042DE  0E01               	movlw	1
 13135   0042E0  260B               	addwf	___xxtofl@arg^0,f,c
 13136   0042E2  0E00               	movlw	0
 13137   0042E4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13138   0042E6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13139   0042E8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13140   0042EA  90D8               	bcf	status,0,c
 13141   0042EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13142   0042EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13143   0042F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13144   0042F2  320B               	rrcf	___xxtofl@arg^0,f,c
 13145   0042F4                     l1348:
 13146   0042F4  0E00               	movlw	0
 13147   0042F6  140B               	andwf	___xxtofl@arg^0,w,c
 13148   0042F8  6E05               	movwf	??___xxtofl^0,c
 13149   0042FA  0E00               	movlw	0
 13150   0042FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13151   0042FE  6E06               	movwf	(??___xxtofl+1)^0,c
 13152   004300  0E00               	movlw	0
 13153   004302  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13154   004304  6E07               	movwf	(??___xxtofl+2)^0,c
 13155   004306  0EFF               	movlw	255
 13156   004308  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13157   00430A  6E08               	movwf	(??___xxtofl+3)^0,c
 13158   00430C  5005               	movf	??___xxtofl^0,w,c
 13159   00430E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13160   004310  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13161   004312  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13162   004314  A4D8               	btfss	status,2,c
 13163   004316  EF8F  F021         	goto	u5051
 13164   00431A  EF91  F021         	goto	u5050
 13165   00431E                     u5051:
 13166   00431E  EF6E  F021         	goto	l5177
 13167   004322                     u5050:
 13168   004322  EF99  F021         	goto	l5185
 13169   004326                     l5183:
 13170   004326  060A               	decf	___xxtofl@exp^0,f,c
 13171   004328  90D8               	bcf	status,0,c
 13172   00432A  360B               	rlcf	___xxtofl@arg^0,f,c
 13173   00432C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13174   00432E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13175   004330  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13176   004332                     l5185:
 13177   004332  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13178   004334  EF9E  F021         	goto	u5061
 13179   004338  EFA0  F021         	goto	u5060
 13180   00433C                     u5061:
 13181   00433C  EFA8  F021         	goto	l1355
 13182   004340                     u5060:
 13183   004340  0E02               	movlw	2
 13184   004342  600A               	cpfslt	___xxtofl@exp^0,c
 13185   004344  EFA6  F021         	goto	u5071
 13186   004348  EFA8  F021         	goto	u5070
 13187   00434C                     u5071:
 13188   00434C  EF93  F021         	goto	l5183
 13189   004350                     u5070:
 13190   004350                     l1355:
 13191   004350  B00A               	btfsc	___xxtofl@exp^0,0,c
 13192   004352  EFAD  F021         	goto	u5081
 13193   004356  EFAF  F021         	goto	u5080
 13194   00435A                     u5081:
 13195   00435A  EFB0  F021         	goto	l5191
 13196   00435E                     u5080:
 13197   00435E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13198   004360                     l5191:
 13199   004360  90D8               	bcf	status,0,c
 13200   004362  320A               	rrcf	___xxtofl@exp^0,f,c
 13201   004364  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13202   004368  6A06               	clrf	(??___xxtofl+1)^0,c
 13203   00436A  6A07               	clrf	(??___xxtofl+2)^0,c
 13204   00436C  6A08               	clrf	(??___xxtofl+3)^0,c
 13205   00436E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13206   004372  6A07               	clrf	(??___xxtofl+2)^0,c
 13207   004374  6A06               	clrf	(??___xxtofl+1)^0,c
 13208   004376  6A05               	clrf	??___xxtofl^0,c
 13209   004378  5005               	movf	??___xxtofl^0,w,c
 13210   00437A  120B               	iorwf	___xxtofl@arg^0,f,c
 13211   00437C  5006               	movf	(??___xxtofl+1)^0,w,c
 13212   00437E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13213   004380  5007               	movf	(??___xxtofl+2)^0,w,c
 13214   004382  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13215   004384  5008               	movf	(??___xxtofl+3)^0,w,c
 13216   004386  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13217   004388  5009               	movf	___xxtofl@sign^0,w,c
 13218   00438A  B4D8               	btfsc	status,2,c
 13219   00438C  EFCA  F021         	goto	u5091
 13220   004390  EFCC  F021         	goto	u5090
 13221   004394                     u5091:
 13222   004394  EFD4  F021         	goto	l5201
 13223   004398                     u5090:
 13224   004398  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13225   00439A  EFD3  F021         	goto	u5100
 13226   00439E  EFD1  F021         	goto	u5101
 13227   0043A2                     u5101:
 13228   0043A2  EFD4  F021         	goto	l5201
 13229   0043A6                     u5100:
 13230   0043A6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13231   0043A8                     l5201:
 13232   0043A8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13233   0043AC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13234   0043B0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13235   0043B4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13236   0043B8                     l1344:
 13237   0043B8  0012               	return		;funcret
 13238   0043BA                     __end_of___xxtofl:
 13239                           	callstack 0
 13240                           
 13241 ;; *************** function ___flsub *****************
 13242 ;; Defined at:
 13243 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13244 ;; Parameters:    Size  Location     Type
 13245 ;;  b               4   41[COMRAM] unsigned char 
 13246 ;;  a               4   45[COMRAM] unsigned char 
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  4   41[COMRAM] unsigned char 
 13251 ;; Registers used:
 13252 ;;		wreg, status,2, status,0, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13258 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13261 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13262 ;;Total ram usage:        8 bytes
 13263 ;; Hardware stack levels used: 1
 13264 ;; Hardware stack levels required when called: 2
 13265 ;; This function calls:
 13266 ;;		___fladd
 13267 ;; This function is called by:
 13268 ;;		_Colour_decider
 13269 ;;		_efgtoa
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text74
 13274   005CD2                     __ptext74:
 13275                           	callstack 0
 13276   005CD2                     ___flsub:
 13277                           	callstack 24
 13278   005CD2  0E00               	movlw	0
 13279   005CD4  1A2E               	xorwf	___flsub@a^0,f,c
 13280   005CD6  0E00               	movlw	0
 13281   005CD8  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13282   005CDA  0E00               	movlw	0
 13283   005CDC  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13284   005CDE  0E80               	movlw	128
 13285   005CE0  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13286   005CE2  C02A  F001         	movff	___flsub@b,___fladd@b
 13287   005CE6  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13288   005CEA  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13289   005CEE  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13290   005CF2  C02E  F005         	movff	___flsub@a,___fladd@a
 13291   005CF6  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13292   005CFA  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13293   005CFE  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13294   005D02  ECEF  F013         	call	___fladd	;wreg free
 13295   005D06  C001  F02A         	movff	?___fladd,?___flsub
 13296   005D0A  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13297   005D0E  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13298   005D12  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13299   005D16  0012               	return		;funcret
 13300   005D18                     __end_of___flsub:
 13301                           	callstack 0
 13302                           
 13303 ;; *************** function ___fladd *****************
 13304 ;; Defined at:
 13305 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  b               4    0[COMRAM] unsigned char 
 13308 ;;  a               4    4[COMRAM] unsigned char 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  grs             1   15[COMRAM] unsigned char 
 13311 ;;  bexp            1   14[COMRAM] unsigned char 
 13312 ;;  aexp            1   13[COMRAM] unsigned char 
 13313 ;;  signs           1   12[COMRAM] unsigned char 
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  4    0[COMRAM] unsigned char 
 13316 ;; Registers used:
 13317 ;;		wreg, status,2, status,0
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13326 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13327 ;;Total ram usage:       16 bytes
 13328 ;; Hardware stack levels used: 1
 13329 ;; Hardware stack levels required when called: 1
 13330 ;; This function calls:
 13331 ;;		Nothing
 13332 ;; This function is called by:
 13333 ;;		_colour_rel
 13334 ;;		_Colour_decider
 13335 ;;		___flsub
 13336 ;;		_efgtoa
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text75
 13341   0027DE                     __ptext75:
 13342                           	callstack 0
 13343   0027DE                     ___fladd:
 13344                           	callstack 24
 13345   0027DE  5004               	movf	(___fladd@b+3)^0,w,c
 13346   0027E0  0B80               	andlw	128
 13347   0027E2  6E0D               	movwf	___fladd@signs^0,c
 13348   0027E4  5004               	movf	(___fladd@b+3)^0,w,c
 13349   0027E6  2404               	addwf	(___fladd@b+3)^0,w,c
 13350   0027E8  6E0F               	movwf	___fladd@bexp^0,c
 13351   0027EA  AE03               	btfss	(___fladd@b+2)^0,7,c
 13352   0027EC  EFFA  F013         	goto	u2971
 13353   0027F0  EFFC  F013         	goto	u2970
 13354   0027F4                     u2971:
 13355   0027F4  EFFD  F013         	goto	l3807
 13356   0027F8                     u2970:
 13357   0027F8  800F               	bsf	___fladd@bexp^0,0,c
 13358   0027FA                     l3807:
 13359   0027FA  500F               	movf	___fladd@bexp^0,w,c
 13360   0027FC  B4D8               	btfsc	status,2,c
 13361   0027FE  EF03  F014         	goto	u2981
 13362   002802  EF05  F014         	goto	u2980
 13363   002806                     u2981:
 13364   002806  EF1A  F014         	goto	l3817
 13365   00280A                     u2980:
 13366   00280A  280F               	incf	___fladd@bexp^0,w,c
 13367   00280C  A4D8               	btfss	status,2,c
 13368   00280E  EF0B  F014         	goto	u2991
 13369   002812  EF0D  F014         	goto	u2990
 13370   002816                     u2991:
 13371   002816  EF15  F014         	goto	l3813
 13372   00281A                     u2990:
 13373   00281A  0E00               	movlw	0
 13374   00281C  6E01               	movwf	___fladd@b^0,c
 13375   00281E  0E00               	movlw	0
 13376   002820  6E02               	movwf	(___fladd@b+1)^0,c
 13377   002822  0E00               	movlw	0
 13378   002824  6E03               	movwf	(___fladd@b+2)^0,c
 13379   002826  0E00               	movlw	0
 13380   002828  6E04               	movwf	(___fladd@b+3)^0,c
 13381   00282A                     l3813:
 13382   00282A  8E03               	bsf	(___fladd@b+2)^0,7,c
 13383   00282C  0E00               	movlw	0
 13384   00282E  6E04               	movwf	(___fladd@b+3)^0,c
 13385   002830  EF22  F014         	goto	l3819
 13386   002834                     l3817:
 13387   002834  0E00               	movlw	0
 13388   002836  6E01               	movwf	___fladd@b^0,c
 13389   002838  0E00               	movlw	0
 13390   00283A  6E02               	movwf	(___fladd@b+1)^0,c
 13391   00283C  0E00               	movlw	0
 13392   00283E  6E03               	movwf	(___fladd@b+2)^0,c
 13393   002840  0E00               	movlw	0
 13394   002842  6E04               	movwf	(___fladd@b+3)^0,c
 13395   002844                     l3819:
 13396   002844  5008               	movf	(___fladd@a+3)^0,w,c
 13397   002846  0B80               	andlw	128
 13398   002848  6E0E               	movwf	___fladd@aexp^0,c
 13399   00284A  500D               	movf	___fladd@signs^0,w,c
 13400   00284C  180E               	xorwf	___fladd@aexp^0,w,c
 13401   00284E  B4D8               	btfsc	status,2,c
 13402   002850  EF2C  F014         	goto	u3001
 13403   002854  EF2E  F014         	goto	u3000
 13404   002858                     u3001:
 13405   002858  EF2F  F014         	goto	l3825
 13406   00285C                     u3000:
 13407   00285C  8C0D               	bsf	___fladd@signs^0,6,c
 13408   00285E                     l3825:
 13409   00285E  5008               	movf	(___fladd@a+3)^0,w,c
 13410   002860  2408               	addwf	(___fladd@a+3)^0,w,c
 13411   002862  6E0E               	movwf	___fladd@aexp^0,c
 13412   002864  AE07               	btfss	(___fladd@a+2)^0,7,c
 13413   002866  EF37  F014         	goto	u3011
 13414   00286A  EF39  F014         	goto	u3010
 13415   00286E                     u3011:
 13416   00286E  EF3A  F014         	goto	l3831
 13417   002872                     u3010:
 13418   002872  800E               	bsf	___fladd@aexp^0,0,c
 13419   002874                     l3831:
 13420   002874  500E               	movf	___fladd@aexp^0,w,c
 13421   002876  B4D8               	btfsc	status,2,c
 13422   002878  EF40  F014         	goto	u3021
 13423   00287C  EF42  F014         	goto	u3020
 13424   002880                     u3021:
 13425   002880  EF57  F014         	goto	l3841
 13426   002884                     u3020:
 13427   002884  280E               	incf	___fladd@aexp^0,w,c
 13428   002886  A4D8               	btfss	status,2,c
 13429   002888  EF48  F014         	goto	u3031
 13430   00288C  EF4A  F014         	goto	u3030
 13431   002890                     u3031:
 13432   002890  EF52  F014         	goto	l3837
 13433   002894                     u3030:
 13434   002894  0E00               	movlw	0
 13435   002896  6E05               	movwf	___fladd@a^0,c
 13436   002898  0E00               	movlw	0
 13437   00289A  6E06               	movwf	(___fladd@a+1)^0,c
 13438   00289C  0E00               	movlw	0
 13439   00289E  6E07               	movwf	(___fladd@a+2)^0,c
 13440   0028A0  0E00               	movlw	0
 13441   0028A2  6E08               	movwf	(___fladd@a+3)^0,c
 13442   0028A4                     l3837:
 13443   0028A4  8E07               	bsf	(___fladd@a+2)^0,7,c
 13444   0028A6  0E00               	movlw	0
 13445   0028A8  6E08               	movwf	(___fladd@a+3)^0,c
 13446   0028AA  EF5F  F014         	goto	l3843
 13447   0028AE                     l3841:
 13448   0028AE  0E00               	movlw	0
 13449   0028B0  6E05               	movwf	___fladd@a^0,c
 13450   0028B2  0E00               	movlw	0
 13451   0028B4  6E06               	movwf	(___fladd@a+1)^0,c
 13452   0028B6  0E00               	movlw	0
 13453   0028B8  6E07               	movwf	(___fladd@a+2)^0,c
 13454   0028BA  0E00               	movlw	0
 13455   0028BC  6E08               	movwf	(___fladd@a+3)^0,c
 13456   0028BE                     l3843:
 13457   0028BE  500F               	movf	___fladd@bexp^0,w,c
 13458   0028C0  5C0E               	subwf	___fladd@aexp^0,w,c
 13459   0028C2  B0D8               	btfsc	status,0,c
 13460   0028C4  EF66  F014         	goto	u3041
 13461   0028C8  EF68  F014         	goto	u3040
 13462   0028CC                     u3041:
 13463   0028CC  EF8F  F014         	goto	l3879
 13464   0028D0                     u3040:
 13465   0028D0  AC0D               	btfss	___fladd@signs^0,6,c
 13466   0028D2  EF6D  F014         	goto	u3051
 13467   0028D6  EF6F  F014         	goto	u3050
 13468   0028DA                     u3051:
 13469   0028DA  EF71  F014         	goto	l3849
 13470   0028DE                     u3050:
 13471   0028DE  0E80               	movlw	128
 13472   0028E0  1A0D               	xorwf	___fladd@signs^0,f,c
 13473   0028E2                     l3849:
 13474   0028E2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13475   0028E6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13476   0028EA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13477   0028EE  C001  F010         	movff	___fladd@b,___fladd@grs
 13478   0028F2  C005  F001         	movff	___fladd@a,___fladd@b
 13479   0028F6  C010  F005         	movff	___fladd@grs,___fladd@a
 13480   0028FA  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13481   0028FE  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13482   002902  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13483   002906  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13484   00290A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13485   00290E  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13486   002912  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13487   002916  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13488   00291A  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13489   00291E                     l3879:
 13490   00291E  0E00               	movlw	0
 13491   002920  6E10               	movwf	___fladd@grs^0,c
 13492   002922  500F               	movf	___fladd@bexp^0,w,c
 13493   002924  C00E  F009         	movff	___fladd@aexp,??___fladd
 13494   002928  6A0A               	clrf	(??___fladd+1)^0,c
 13495   00292A  5E09               	subwf	??___fladd^0,f,c
 13496   00292C  0E00               	movlw	0
 13497   00292E  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13498   002930  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13499   002932  EFA4  F014         	goto	u3061
 13500   002936  500A               	movf	(??___fladd+1)^0,w,c
 13501   002938  E109               	bnz	u3060
 13502   00293A  0E1A               	movlw	26
 13503   00293C  5C09               	subwf	??___fladd^0,w,c
 13504   00293E  A0D8               	btfss	status,0,c
 13505   002940  EFA4  F014         	goto	u3061
 13506   002944  EFA6  F014         	goto	u3060
 13507   002948                     u3061:
 13508   002948  EFDD  F014         	goto	l1215
 13509   00294C                     u3060:
 13510   00294C  5001               	movf	___fladd@b^0,w,c
 13511   00294E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13512   002950  1003               	iorwf	(___fladd@b+2)^0,w,c
 13513   002952  1004               	iorwf	(___fladd@b+3)^0,w,c
 13514   002954  A4D8               	btfss	status,2,c
 13515   002956  EFAF  F014         	goto	u3071
 13516   00295A  EFB2  F014         	goto	u3070
 13517   00295E                     u3071:
 13518   00295E  0E01               	movlw	1
 13519   002960  EFB3  F014         	goto	u3080
 13520   002964                     u3070:
 13521   002964  0E00               	movlw	0
 13522   002966                     u3080:
 13523   002966  6E10               	movwf	___fladd@grs^0,c
 13524   002968  0E00               	movlw	0
 13525   00296A  6E01               	movwf	___fladd@b^0,c
 13526   00296C  0E00               	movlw	0
 13527   00296E  6E02               	movwf	(___fladd@b+1)^0,c
 13528   002970  0E00               	movlw	0
 13529   002972  6E03               	movwf	(___fladd@b+2)^0,c
 13530   002974  0E00               	movlw	0
 13531   002976  6E04               	movwf	(___fladd@b+3)^0,c
 13532   002978  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13533   00297C  EFE6  F014         	goto	l1214
 13534   002980                     l1216:
 13535   002980  A010               	btfss	___fladd@grs^0,0,c
 13536   002982  EFC5  F014         	goto	u3091
 13537   002986  EFC7  F014         	goto	u3090
 13538   00298A                     u3091:
 13539   00298A  EFCD  F014         	goto	l3891
 13540   00298E                     u3090:
 13541   00298E  90D8               	bcf	status,0,c
 13542   002990  3010               	rrcf	___fladd@grs^0,w,c
 13543   002992  0901               	iorlw	1
 13544   002994  6E10               	movwf	___fladd@grs^0,c
 13545   002996  EFCF  F014         	goto	l3893
 13546   00299A                     l3891:
 13547   00299A  90D8               	bcf	status,0,c
 13548   00299C  3210               	rrcf	___fladd@grs^0,f,c
 13549   00299E                     l3893:
 13550   00299E  A001               	btfss	___fladd@b^0,0,c
 13551   0029A0  EFD4  F014         	goto	u3101
 13552   0029A4  EFD6  F014         	goto	u3100
 13553   0029A8                     u3101:
 13554   0029A8  EFD7  F014         	goto	l3897
 13555   0029AC                     u3100:
 13556   0029AC  8E10               	bsf	___fladd@grs^0,7,c
 13557   0029AE                     l3897:
 13558   0029AE  3404               	rlcf	(___fladd@b+3)^0,w,c
 13559   0029B0  3204               	rrcf	(___fladd@b+3)^0,f,c
 13560   0029B2  3203               	rrcf	(___fladd@b+2)^0,f,c
 13561   0029B4  3202               	rrcf	(___fladd@b+1)^0,f,c
 13562   0029B6  3201               	rrcf	___fladd@b^0,f,c
 13563   0029B8  2A0F               	incf	___fladd@bexp^0,f,c
 13564   0029BA                     l1215:
 13565   0029BA  500E               	movf	___fladd@aexp^0,w,c
 13566   0029BC  5C0F               	subwf	___fladd@bexp^0,w,c
 13567   0029BE  A0D8               	btfss	status,0,c
 13568   0029C0  EFE4  F014         	goto	u3111
 13569   0029C4  EFE6  F014         	goto	u3110
 13570   0029C8                     u3111:
 13571   0029C8  EFC0  F014         	goto	l1216
 13572   0029CC                     u3110:
 13573   0029CC                     l1214:
 13574   0029CC  BC0D               	btfsc	___fladd@signs^0,6,c
 13575   0029CE  EFEB  F014         	goto	u3121
 13576   0029D2  EFED  F014         	goto	u3120
 13577   0029D6                     u3121:
 13578   0029D6  EF2D  F015         	goto	l3925
 13579   0029DA                     u3120:
 13580   0029DA  500F               	movf	___fladd@bexp^0,w,c
 13581   0029DC  A4D8               	btfss	status,2,c
 13582   0029DE  EFF3  F014         	goto	u3131
 13583   0029E2  EFF5  F014         	goto	u3130
 13584   0029E6                     u3131:
 13585   0029E6  EFFF  F014         	goto	l3907
 13586   0029EA                     u3130:
 13587   0029EA  0E00               	movlw	0
 13588   0029EC  6E01               	movwf	?___fladd^0,c
 13589   0029EE  0E00               	movlw	0
 13590   0029F0  6E02               	movwf	(?___fladd+1)^0,c
 13591   0029F2  0E00               	movlw	0
 13592   0029F4  6E03               	movwf	(?___fladd+2)^0,c
 13593   0029F6  0E00               	movlw	0
 13594   0029F8  6E04               	movwf	(?___fladd+3)^0,c
 13595   0029FA  EF4E  F016         	goto	l1223
 13596   0029FE                     l3907:
 13597   0029FE  5005               	movf	___fladd@a^0,w,c
 13598   002A00  2601               	addwf	___fladd@b^0,f,c
 13599   002A02  5006               	movf	(___fladd@a+1)^0,w,c
 13600   002A04  2202               	addwfc	(___fladd@b+1)^0,f,c
 13601   002A06  5007               	movf	(___fladd@a+2)^0,w,c
 13602   002A08  2203               	addwfc	(___fladd@b+2)^0,f,c
 13603   002A0A  5008               	movf	(___fladd@a+3)^0,w,c
 13604   002A0C  2204               	addwfc	(___fladd@b+3)^0,f,c
 13605   002A0E  A004               	btfss	(___fladd@b+3)^0,0,c
 13606   002A10  EF0C  F015         	goto	u3141
 13607   002A14  EF0E  F015         	goto	u3140
 13608   002A18                     u3141:
 13609   002A18  EFBA  F015         	goto	l3961
 13610   002A1C                     u3140:
 13611   002A1C  A010               	btfss	___fladd@grs^0,0,c
 13612   002A1E  EF13  F015         	goto	u3151
 13613   002A22  EF15  F015         	goto	u3150
 13614   002A26                     u3151:
 13615   002A26  EF1B  F015         	goto	l3915
 13616   002A2A                     u3150:
 13617   002A2A  90D8               	bcf	status,0,c
 13618   002A2C  3010               	rrcf	___fladd@grs^0,w,c
 13619   002A2E  0901               	iorlw	1
 13620   002A30  6E10               	movwf	___fladd@grs^0,c
 13621   002A32  EF1D  F015         	goto	l3917
 13622   002A36                     l3915:
 13623   002A36  90D8               	bcf	status,0,c
 13624   002A38  3210               	rrcf	___fladd@grs^0,f,c
 13625   002A3A                     l3917:
 13626   002A3A  A001               	btfss	___fladd@b^0,0,c
 13627   002A3C  EF22  F015         	goto	u3161
 13628   002A40  EF24  F015         	goto	u3160
 13629   002A44                     u3161:
 13630   002A44  EF25  F015         	goto	l3921
 13631   002A48                     u3160:
 13632   002A48  8E10               	bsf	___fladd@grs^0,7,c
 13633   002A4A                     l3921:
 13634   002A4A  3404               	rlcf	(___fladd@b+3)^0,w,c
 13635   002A4C  3204               	rrcf	(___fladd@b+3)^0,f,c
 13636   002A4E  3203               	rrcf	(___fladd@b+2)^0,f,c
 13637   002A50  3202               	rrcf	(___fladd@b+1)^0,f,c
 13638   002A52  3201               	rrcf	___fladd@b^0,f,c
 13639   002A54  2A0F               	incf	___fladd@bexp^0,f,c
 13640   002A56  EFBA  F015         	goto	l3961
 13641   002A5A                     l3925:
 13642   002A5A  5005               	movf	___fladd@a^0,w,c
 13643   002A5C  5C01               	subwf	___fladd@b^0,w,c
 13644   002A5E  5006               	movf	(___fladd@a+1)^0,w,c
 13645   002A60  5802               	subwfb	(___fladd@b+1)^0,w,c
 13646   002A62  5007               	movf	(___fladd@a+2)^0,w,c
 13647   002A64  5803               	subwfb	(___fladd@b+2)^0,w,c
 13648   002A66  5004               	movf	(___fladd@b+3)^0,w,c
 13649   002A68  0A80               	xorlw	128
 13650   002A6A  6E09               	movwf	??___fladd^0,c
 13651   002A6C  5008               	movf	(___fladd@a+3)^0,w,c
 13652   002A6E  0A80               	xorlw	128
 13653   002A70  5809               	subwfb	??___fladd^0,w,c
 13654   002A72  B0D8               	btfsc	status,0,c
 13655   002A74  EF3E  F015         	goto	u3171
 13656   002A78  EF40  F015         	goto	u3170
 13657   002A7C                     u3171:
 13658   002A7C  EF6B  F015         	goto	l3935
 13659   002A80                     u3170:
 13660   002A80  5001               	movf	___fladd@b^0,w,c
 13661   002A82  5C05               	subwf	___fladd@a^0,w,c
 13662   002A84  6E09               	movwf	??___fladd^0,c
 13663   002A86  5002               	movf	(___fladd@b+1)^0,w,c
 13664   002A88  5806               	subwfb	(___fladd@a+1)^0,w,c
 13665   002A8A  6E0A               	movwf	(??___fladd+1)^0,c
 13666   002A8C  5003               	movf	(___fladd@b+2)^0,w,c
 13667   002A8E  5807               	subwfb	(___fladd@a+2)^0,w,c
 13668   002A90  6E0B               	movwf	(??___fladd+2)^0,c
 13669   002A92  5004               	movf	(___fladd@b+3)^0,w,c
 13670   002A94  5808               	subwfb	(___fladd@a+3)^0,w,c
 13671   002A96  6E0C               	movwf	(??___fladd+3)^0,c
 13672   002A98  0EFF               	movlw	255
 13673   002A9A  2409               	addwf	??___fladd^0,w,c
 13674   002A9C  6E01               	movwf	___fladd@b^0,c
 13675   002A9E  0EFF               	movlw	255
 13676   002AA0  200A               	addwfc	(??___fladd+1)^0,w,c
 13677   002AA2  6E02               	movwf	(___fladd@b+1)^0,c
 13678   002AA4  0EFF               	movlw	255
 13679   002AA6  200B               	addwfc	(??___fladd+2)^0,w,c
 13680   002AA8  6E03               	movwf	(___fladd@b+2)^0,c
 13681   002AAA  0EFF               	movlw	255
 13682   002AAC  200C               	addwfc	(??___fladd+3)^0,w,c
 13683   002AAE  6E04               	movwf	(___fladd@b+3)^0,c
 13684   002AB0  0E80               	movlw	128
 13685   002AB2  1A0D               	xorwf	___fladd@signs^0,f,c
 13686   002AB4  6C10               	negf	___fladd@grs^0,c
 13687   002AB6  5010               	movf	___fladd@grs^0,w,c
 13688   002AB8  A4D8               	btfss	status,2,c
 13689   002ABA  EF61  F015         	goto	u3181
 13690   002ABE  EF63  F015         	goto	u3180
 13691   002AC2                     u3181:
 13692   002AC2  EF73  F015         	goto	l1231
 13693   002AC6                     u3180:
 13694   002AC6  0E01               	movlw	1
 13695   002AC8  2601               	addwf	___fladd@b^0,f,c
 13696   002ACA  0E00               	movlw	0
 13697   002ACC  2202               	addwfc	(___fladd@b+1)^0,f,c
 13698   002ACE  2203               	addwfc	(___fladd@b+2)^0,f,c
 13699   002AD0  2204               	addwfc	(___fladd@b+3)^0,f,c
 13700   002AD2  EF73  F015         	goto	l1231
 13701   002AD6                     l3935:
 13702   002AD6  5005               	movf	___fladd@a^0,w,c
 13703   002AD8  5E01               	subwf	___fladd@b^0,f,c
 13704   002ADA  5006               	movf	(___fladd@a+1)^0,w,c
 13705   002ADC  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13706   002ADE  5007               	movf	(___fladd@a+2)^0,w,c
 13707   002AE0  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13708   002AE2  5008               	movf	(___fladd@a+3)^0,w,c
 13709   002AE4  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13710   002AE6                     l1231:
 13711   002AE6  5001               	movf	___fladd@b^0,w,c
 13712   002AE8  1002               	iorwf	(___fladd@b+1)^0,w,c
 13713   002AEA  1003               	iorwf	(___fladd@b+2)^0,w,c
 13714   002AEC  1004               	iorwf	(___fladd@b+3)^0,w,c
 13715   002AEE  A4D8               	btfss	status,2,c
 13716   002AF0  EF7C  F015         	goto	u3191
 13717   002AF4  EF7E  F015         	goto	u3190
 13718   002AF8                     u3191:
 13719   002AF8  EFB3  F015         	goto	l3959
 13720   002AFC                     u3190:
 13721   002AFC  5010               	movf	___fladd@grs^0,w,c
 13722   002AFE  A4D8               	btfss	status,2,c
 13723   002B00  EF84  F015         	goto	u3201
 13724   002B04  EF86  F015         	goto	u3200
 13725   002B08                     u3201:
 13726   002B08  EFB3  F015         	goto	l3959
 13727   002B0C                     u3200:
 13728   002B0C  0E00               	movlw	0
 13729   002B0E  6E01               	movwf	?___fladd^0,c
 13730   002B10  0E00               	movlw	0
 13731   002B12  6E02               	movwf	(?___fladd+1)^0,c
 13732   002B14  0E00               	movlw	0
 13733   002B16  6E03               	movwf	(?___fladd+2)^0,c
 13734   002B18  0E00               	movlw	0
 13735   002B1A  6E04               	movwf	(?___fladd+3)^0,c
 13736   002B1C  EF4E  F016         	goto	l1223
 13737   002B20                     l3943:
 13738   002B20  90D8               	bcf	status,0,c
 13739   002B22  3601               	rlcf	___fladd@b^0,f,c
 13740   002B24  3602               	rlcf	(___fladd@b+1)^0,f,c
 13741   002B26  3603               	rlcf	(___fladd@b+2)^0,f,c
 13742   002B28  3604               	rlcf	(___fladd@b+3)^0,f,c
 13743   002B2A  AE10               	btfss	___fladd@grs^0,7,c
 13744   002B2C  EF9A  F015         	goto	u3211
 13745   002B30  EF9C  F015         	goto	u3210
 13746   002B34                     u3211:
 13747   002B34  EF9D  F015         	goto	l3949
 13748   002B38                     u3210:
 13749   002B38  8001               	bsf	___fladd@b^0,0,c
 13750   002B3A                     l3949:
 13751   002B3A  A010               	btfss	___fladd@grs^0,0,c
 13752   002B3C  EFA2  F015         	goto	u3221
 13753   002B40  EFA4  F015         	goto	u3220
 13754   002B44                     u3221:
 13755   002B44  EFA8  F015         	goto	l3953
 13756   002B48                     u3220:
 13757   002B48  80D8               	bsf	status,0,c
 13758   002B4A  3610               	rlcf	___fladd@grs^0,f,c
 13759   002B4C  EFAA  F015         	goto	l3955
 13760   002B50                     l3953:
 13761   002B50  90D8               	bcf	status,0,c
 13762   002B52  3610               	rlcf	___fladd@grs^0,f,c
 13763   002B54                     l3955:
 13764   002B54  500F               	movf	___fladd@bexp^0,w,c
 13765   002B56  B4D8               	btfsc	status,2,c
 13766   002B58  EFB0  F015         	goto	u3231
 13767   002B5C  EFB2  F015         	goto	u3230
 13768   002B60                     u3231:
 13769   002B60  EFB3  F015         	goto	l3959
 13770   002B64                     u3230:
 13771   002B64  060F               	decf	___fladd@bexp^0,f,c
 13772   002B66                     l3959:
 13773   002B66  AE03               	btfss	(___fladd@b+2)^0,7,c
 13774   002B68  EFB8  F015         	goto	u3241
 13775   002B6C  EFBA  F015         	goto	u3240
 13776   002B70                     u3241:
 13777   002B70  EF90  F015         	goto	l3943
 13778   002B74                     u3240:
 13779   002B74                     l3961:
 13780   002B74  0E00               	movlw	0
 13781   002B76  6E0E               	movwf	___fladd@aexp^0,c
 13782   002B78  AE10               	btfss	___fladd@grs^0,7,c
 13783   002B7A  EFC1  F015         	goto	u3251
 13784   002B7E  EFC3  F015         	goto	u3250
 13785   002B82                     u3251:
 13786   002B82  EFDB  F015         	goto	l1240
 13787   002B86                     u3250:
 13788   002B86  C010  F009         	movff	___fladd@grs,??___fladd
 13789   002B8A  0E7F               	movlw	127
 13790   002B8C  1609               	andwf	??___fladd^0,f,c
 13791   002B8E  B4D8               	btfsc	status,2,c
 13792   002B90  EFCC  F015         	goto	u3261
 13793   002B94  EFCE  F015         	goto	u3260
 13794   002B98                     u3261:
 13795   002B98  EFD2  F015         	goto	l1241
 13796   002B9C                     u3260:
 13797   002B9C                     l3967:
 13798   002B9C  0E01               	movlw	1
 13799   002B9E  6E0E               	movwf	___fladd@aexp^0,c
 13800   002BA0  EFDB  F015         	goto	l1240
 13801   002BA4                     l1241:
 13802   002BA4  A001               	btfss	___fladd@b^0,0,c
 13803   002BA6  EFD7  F015         	goto	u3271
 13804   002BAA  EFD9  F015         	goto	u3270
 13805   002BAE                     u3271:
 13806   002BAE  EFDB  F015         	goto	l1240
 13807   002BB2                     u3270:
 13808   002BB2  EFCE  F015         	goto	l3967
 13809   002BB6                     l1240:
 13810   002BB6  500E               	movf	___fladd@aexp^0,w,c
 13811   002BB8  B4D8               	btfsc	status,2,c
 13812   002BBA  EFE1  F015         	goto	u3281
 13813   002BBE  EFE3  F015         	goto	u3280
 13814   002BC2                     u3281:
 13815   002BC2  EF0E  F016         	goto	l3979
 13816   002BC6                     u3280:
 13817   002BC6  0E01               	movlw	1
 13818   002BC8  2601               	addwf	___fladd@b^0,f,c
 13819   002BCA  0E00               	movlw	0
 13820   002BCC  2202               	addwfc	(___fladd@b+1)^0,f,c
 13821   002BCE  2203               	addwfc	(___fladd@b+2)^0,f,c
 13822   002BD0  2204               	addwfc	(___fladd@b+3)^0,f,c
 13823   002BD2  A004               	btfss	(___fladd@b+3)^0,0,c
 13824   002BD4  EFEE  F015         	goto	u3291
 13825   002BD8  EFF0  F015         	goto	u3290
 13826   002BDC                     u3291:
 13827   002BDC  EF0E  F016         	goto	l3979
 13828   002BE0                     u3290:
 13829   002BE0  C001  F009         	movff	___fladd@b,??___fladd
 13830   002BE4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13831   002BE8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13832   002BEC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13833   002BF0  340C               	rlcf	(??___fladd+3)^0,w,c
 13834   002BF2  320C               	rrcf	(??___fladd+3)^0,f,c
 13835   002BF4  320B               	rrcf	(??___fladd+2)^0,f,c
 13836   002BF6  320A               	rrcf	(??___fladd+1)^0,f,c
 13837   002BF8  3209               	rrcf	??___fladd^0,f,c
 13838   002BFA  C009  F001         	movff	??___fladd,___fladd@b
 13839   002BFE  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13840   002C02  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13841   002C06  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13842   002C0A  280F               	incf	___fladd@bexp^0,w,c
 13843   002C0C  B4D8               	btfsc	status,2,c
 13844   002C0E  EF0B  F016         	goto	u3301
 13845   002C12  EF0D  F016         	goto	u3300
 13846   002C16                     u3301:
 13847   002C16  EF0E  F016         	goto	l3979
 13848   002C1A                     u3300:
 13849   002C1A  2A0F               	incf	___fladd@bexp^0,f,c
 13850   002C1C                     l3979:
 13851   002C1C  280F               	incf	___fladd@bexp^0,w,c
 13852   002C1E  B4D8               	btfsc	status,2,c
 13853   002C20  EF14  F016         	goto	u3311
 13854   002C24  EF16  F016         	goto	u3310
 13855   002C28                     u3311:
 13856   002C28  EF1E  F016         	goto	l3983
 13857   002C2C                     u3310:
 13858   002C2C  500F               	movf	___fladd@bexp^0,w,c
 13859   002C2E  A4D8               	btfss	status,2,c
 13860   002C30  EF1C  F016         	goto	u3321
 13861   002C34  EF1E  F016         	goto	u3320
 13862   002C38                     u3321:
 13863   002C38  EF30  F016         	goto	l3987
 13864   002C3C                     u3320:
 13865   002C3C                     l3983:
 13866   002C3C  0E00               	movlw	0
 13867   002C3E  6E01               	movwf	___fladd@b^0,c
 13868   002C40  0E00               	movlw	0
 13869   002C42  6E02               	movwf	(___fladd@b+1)^0,c
 13870   002C44  0E00               	movlw	0
 13871   002C46  6E03               	movwf	(___fladd@b+2)^0,c
 13872   002C48  0E00               	movlw	0
 13873   002C4A  6E04               	movwf	(___fladd@b+3)^0,c
 13874   002C4C  500F               	movf	___fladd@bexp^0,w,c
 13875   002C4E  A4D8               	btfss	status,2,c
 13876   002C50  EF2C  F016         	goto	u3331
 13877   002C54  EF2E  F016         	goto	u3330
 13878   002C58                     u3331:
 13879   002C58  EF30  F016         	goto	l3987
 13880   002C5C                     u3330:
 13881   002C5C  0E00               	movlw	0
 13882   002C5E  6E0D               	movwf	___fladd@signs^0,c
 13883   002C60                     l3987:
 13884   002C60  A00F               	btfss	___fladd@bexp^0,0,c
 13885   002C62  EF35  F016         	goto	u3341
 13886   002C66  EF37  F016         	goto	u3340
 13887   002C6A                     u3341:
 13888   002C6A  EF3A  F016         	goto	l3991
 13889   002C6E                     u3340:
 13890   002C6E  8E03               	bsf	(___fladd@b+2)^0,7,c
 13891   002C70  EF3B  F016         	goto	l3993
 13892   002C74                     l3991:
 13893   002C74  9E03               	bcf	(___fladd@b+2)^0,7,c
 13894   002C76                     l3993:
 13895   002C76  90D8               	bcf	status,0,c
 13896   002C78  300F               	rrcf	___fladd@bexp^0,w,c
 13897   002C7A  6E04               	movwf	(___fladd@b+3)^0,c
 13898   002C7C  AE0D               	btfss	___fladd@signs^0,7,c
 13899   002C7E  EF43  F016         	goto	u3351
 13900   002C82  EF45  F016         	goto	u3350
 13901   002C86                     u3351:
 13902   002C86  EF46  F016         	goto	l3999
 13903   002C8A                     u3350:
 13904   002C8A  8E04               	bsf	(___fladd@b+3)^0,7,c
 13905   002C8C                     l3999:
 13906   002C8C  C001  F001         	movff	___fladd@b,?___fladd
 13907   002C90  C002  F002         	movff	___fladd@b+1,?___fladd+1
 13908   002C94  C003  F003         	movff	___fladd@b+2,?___fladd+2
 13909   002C98  C004  F004         	movff	___fladd@b+3,?___fladd+3
 13910   002C9C                     l1223:
 13911   002C9C  0012               	return		;funcret
 13912   002C9E                     __end_of___fladd:
 13913                           	callstack 0
 13914                           
 13915 ;; *************** function ___flmul *****************
 13916 ;; Defined at:
 13917 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  b               4   16[COMRAM] unsigned char 
 13920 ;;  a               4   20[COMRAM] unsigned char 
 13921 ;; Auto vars:     Size  Location     Type
 13922 ;;  prod            4   35[COMRAM] struct .
 13923 ;;  grs             4   29[COMRAM] unsigned long 
 13924 ;;  temp            2   39[COMRAM] struct .
 13925 ;;  bexp            1   34[COMRAM] unsigned char 
 13926 ;;  aexp            1   33[COMRAM] unsigned char 
 13927 ;;  sign            1   28[COMRAM] unsigned char 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;                  4   16[COMRAM] unsigned char 
 13930 ;; Registers used:
 13931 ;;		wreg, status,2, status,0, prodl, prodh
 13932 ;; Tracked objects:
 13933 ;;		On entry : 0/0
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13937 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13938 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13940 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13941 ;;Total ram usage:       25 bytes
 13942 ;; Hardware stack levels used: 1
 13943 ;; Hardware stack levels required when called: 1
 13944 ;; This function calls:
 13945 ;;		Nothing
 13946 ;; This function is called by:
 13947 ;;		_Colour_decider
 13948 ;;		_reverseOneBlock
 13949 ;;		_ForwardOneBlock
 13950 ;;		_Forwardhalfblock
 13951 ;;		_efgtoa
 13952 ;;		_Backhalfblock
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           	psect	text76
 13957   002C9E                     __ptext76:
 13958                           	callstack 0
 13959   002C9E                     ___flmul:
 13960                           	callstack 25
 13961   002C9E  5014               	movf	(___flmul@b+3)^0,w,c
 13962   002CA0  0B80               	andlw	128
 13963   002CA2  6E1D               	movwf	___flmul@sign^0,c
 13964   002CA4  5014               	movf	(___flmul@b+3)^0,w,c
 13965   002CA6  2414               	addwf	(___flmul@b+3)^0,w,c
 13966   002CA8  6E23               	movwf	___flmul@bexp^0,c
 13967   002CAA  AE13               	btfss	(___flmul@b+2)^0,7,c
 13968   002CAC  EF5A  F016         	goto	u3781
 13969   002CB0  EF5C  F016         	goto	u3780
 13970   002CB4                     u3781:
 13971   002CB4  EF5D  F016         	goto	l4273
 13972   002CB8                     u3780:
 13973   002CB8  8023               	bsf	___flmul@bexp^0,0,c
 13974   002CBA                     l4273:
 13975   002CBA  5023               	movf	___flmul@bexp^0,w,c
 13976   002CBC  B4D8               	btfsc	status,2,c
 13977   002CBE  EF63  F016         	goto	u3791
 13978   002CC2  EF65  F016         	goto	u3790
 13979   002CC6                     u3791:
 13980   002CC6  EF78  F016         	goto	l4281
 13981   002CCA                     u3790:
 13982   002CCA  2823               	incf	___flmul@bexp^0,w,c
 13983   002CCC  A4D8               	btfss	status,2,c
 13984   002CCE  EF6B  F016         	goto	u3801
 13985   002CD2  EF6D  F016         	goto	u3800
 13986   002CD6                     u3801:
 13987   002CD6  EF75  F016         	goto	l4279
 13988   002CDA                     u3800:
 13989   002CDA  0E00               	movlw	0
 13990   002CDC  6E11               	movwf	___flmul@b^0,c
 13991   002CDE  0E00               	movlw	0
 13992   002CE0  6E12               	movwf	(___flmul@b+1)^0,c
 13993   002CE2  0E00               	movlw	0
 13994   002CE4  6E13               	movwf	(___flmul@b+2)^0,c
 13995   002CE6  0E00               	movlw	0
 13996   002CE8  6E14               	movwf	(___flmul@b+3)^0,c
 13997   002CEA                     l4279:
 13998   002CEA  8E13               	bsf	(___flmul@b+2)^0,7,c
 13999   002CEC  EF80  F016         	goto	l4283
 14000   002CF0                     l4281:
 14001   002CF0  0E00               	movlw	0
 14002   002CF2  6E11               	movwf	___flmul@b^0,c
 14003   002CF4  0E00               	movlw	0
 14004   002CF6  6E12               	movwf	(___flmul@b+1)^0,c
 14005   002CF8  0E00               	movlw	0
 14006   002CFA  6E13               	movwf	(___flmul@b+2)^0,c
 14007   002CFC  0E00               	movlw	0
 14008   002CFE  6E14               	movwf	(___flmul@b+3)^0,c
 14009   002D00                     l4283:
 14010   002D00  5018               	movf	(___flmul@a+3)^0,w,c
 14011   002D02  0B80               	andlw	128
 14012   002D04  1A1D               	xorwf	___flmul@sign^0,f,c
 14013   002D06  5018               	movf	(___flmul@a+3)^0,w,c
 14014   002D08  2418               	addwf	(___flmul@a+3)^0,w,c
 14015   002D0A  6E22               	movwf	___flmul@aexp^0,c
 14016   002D0C  AE17               	btfss	(___flmul@a+2)^0,7,c
 14017   002D0E  EF8B  F016         	goto	u3811
 14018   002D12  EF8D  F016         	goto	u3810
 14019   002D16                     u3811:
 14020   002D16  EF8E  F016         	goto	l4291
 14021   002D1A                     u3810:
 14022   002D1A  8022               	bsf	___flmul@aexp^0,0,c
 14023   002D1C                     l4291:
 14024   002D1C  5022               	movf	___flmul@aexp^0,w,c
 14025   002D1E  B4D8               	btfsc	status,2,c
 14026   002D20  EF94  F016         	goto	u3821
 14027   002D24  EF96  F016         	goto	u3820
 14028   002D28                     u3821:
 14029   002D28  EFA9  F016         	goto	l4299
 14030   002D2C                     u3820:
 14031   002D2C  2822               	incf	___flmul@aexp^0,w,c
 14032   002D2E  A4D8               	btfss	status,2,c
 14033   002D30  EF9C  F016         	goto	u3831
 14034   002D34  EF9E  F016         	goto	u3830
 14035   002D38                     u3831:
 14036   002D38  EFA6  F016         	goto	l4297
 14037   002D3C                     u3830:
 14038   002D3C  0E00               	movlw	0
 14039   002D3E  6E15               	movwf	___flmul@a^0,c
 14040   002D40  0E00               	movlw	0
 14041   002D42  6E16               	movwf	(___flmul@a+1)^0,c
 14042   002D44  0E00               	movlw	0
 14043   002D46  6E17               	movwf	(___flmul@a+2)^0,c
 14044   002D48  0E00               	movlw	0
 14045   002D4A  6E18               	movwf	(___flmul@a+3)^0,c
 14046   002D4C                     l4297:
 14047   002D4C  8E17               	bsf	(___flmul@a+2)^0,7,c
 14048   002D4E  EFB1  F016         	goto	l1300
 14049   002D52                     l4299:
 14050   002D52  0E00               	movlw	0
 14051   002D54  6E15               	movwf	___flmul@a^0,c
 14052   002D56  0E00               	movlw	0
 14053   002D58  6E16               	movwf	(___flmul@a+1)^0,c
 14054   002D5A  0E00               	movlw	0
 14055   002D5C  6E17               	movwf	(___flmul@a+2)^0,c
 14056   002D5E  0E00               	movlw	0
 14057   002D60  6E18               	movwf	(___flmul@a+3)^0,c
 14058   002D62                     l1300:
 14059   002D62  5022               	movf	___flmul@aexp^0,w,c
 14060   002D64  B4D8               	btfsc	status,2,c
 14061   002D66  EFB7  F016         	goto	u3841
 14062   002D6A  EFB9  F016         	goto	u3840
 14063   002D6E                     u3841:
 14064   002D6E  EFC1  F016         	goto	l4303
 14065   002D72                     u3840:
 14066   002D72  5023               	movf	___flmul@bexp^0,w,c
 14067   002D74  A4D8               	btfss	status,2,c
 14068   002D76  EFBF  F016         	goto	u3851
 14069   002D7A  EFC1  F016         	goto	u3850
 14070   002D7E                     u3851:
 14071   002D7E  EFCB  F016         	goto	l4307
 14072   002D82                     u3850:
 14073   002D82                     l4303:
 14074   002D82  0E00               	movlw	0
 14075   002D84  6E11               	movwf	?___flmul^0,c
 14076   002D86  0E00               	movlw	0
 14077   002D88  6E12               	movwf	(?___flmul+1)^0,c
 14078   002D8A  0E00               	movlw	0
 14079   002D8C  6E13               	movwf	(?___flmul+2)^0,c
 14080   002D8E  0E00               	movlw	0
 14081   002D90  6E14               	movwf	(?___flmul+3)^0,c
 14082   002D92  EF63  F018         	goto	l1304
 14083   002D96                     l4307:
 14084   002D96  5017               	movf	(___flmul@a+2)^0,w,c
 14085   002D98  0211               	mulwf	___flmul@b^0,c
 14086   002D9A  CFF3 F028          	movff	prodl,___flmul@temp
 14087   002D9E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14088   002DA2  5028               	movf	___flmul@temp^0,w,c
 14089   002DA4  6E1E               	movwf	___flmul@grs^0,c
 14090   002DA6  6A1F               	clrf	(___flmul@grs+1)^0,c
 14091   002DA8  6A20               	clrf	(___flmul@grs+2)^0,c
 14092   002DAA  6A21               	clrf	(___flmul@grs+3)^0,c
 14093   002DAC  5029               	movf	(___flmul@temp+1)^0,w,c
 14094   002DAE  6E24               	movwf	___flmul@prod^0,c
 14095   002DB0  6A25               	clrf	(___flmul@prod+1)^0,c
 14096   002DB2  6A26               	clrf	(___flmul@prod+2)^0,c
 14097   002DB4  6A27               	clrf	(___flmul@prod+3)^0,c
 14098   002DB6  5016               	movf	(___flmul@a+1)^0,w,c
 14099   002DB8  0212               	mulwf	(___flmul@b+1)^0,c
 14100   002DBA  CFF3 F028          	movff	prodl,___flmul@temp
 14101   002DBE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14102   002DC2  5028               	movf	___flmul@temp^0,w,c
 14103   002DC4  261E               	addwf	___flmul@grs^0,f,c
 14104   002DC6  0E00               	movlw	0
 14105   002DC8  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14106   002DCA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14107   002DCC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14108   002DCE  5029               	movf	(___flmul@temp+1)^0,w,c
 14109   002DD0  2624               	addwf	___flmul@prod^0,f,c
 14110   002DD2  0E00               	movlw	0
 14111   002DD4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14112   002DD6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14113   002DD8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14114   002DDA  5015               	movf	___flmul@a^0,w,c
 14115   002DDC  0213               	mulwf	(___flmul@b+2)^0,c
 14116   002DDE  CFF3 F028          	movff	prodl,___flmul@temp
 14117   002DE2  CFF4 F029          	movff	prodh,___flmul@temp+1
 14118   002DE6  5028               	movf	___flmul@temp^0,w,c
 14119   002DE8  261E               	addwf	___flmul@grs^0,f,c
 14120   002DEA  0E00               	movlw	0
 14121   002DEC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14122   002DEE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14123   002DF0  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14124   002DF2  5029               	movf	(___flmul@temp+1)^0,w,c
 14125   002DF4  2624               	addwf	___flmul@prod^0,f,c
 14126   002DF6  0E00               	movlw	0
 14127   002DF8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14128   002DFA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14129   002DFC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14130   002DFE  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14131   002E02  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14132   002E06  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14133   002E0A  6A1E               	clrf	___flmul@grs^0,c
 14134   002E0C  5015               	movf	___flmul@a^0,w,c
 14135   002E0E  0212               	mulwf	(___flmul@b+1)^0,c
 14136   002E10  CFF3 F028          	movff	prodl,___flmul@temp
 14137   002E14  CFF4 F029          	movff	prodh,___flmul@temp+1
 14138   002E18  5028               	movf	___flmul@temp^0,w,c
 14139   002E1A  261E               	addwf	___flmul@grs^0,f,c
 14140   002E1C  5029               	movf	(___flmul@temp+1)^0,w,c
 14141   002E1E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14142   002E20  0E00               	movlw	0
 14143   002E22  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14144   002E24  0E00               	movlw	0
 14145   002E26  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14146   002E28  5016               	movf	(___flmul@a+1)^0,w,c
 14147   002E2A  0211               	mulwf	___flmul@b^0,c
 14148   002E2C  CFF3 F028          	movff	prodl,___flmul@temp
 14149   002E30  CFF4 F029          	movff	prodh,___flmul@temp+1
 14150   002E34  5028               	movf	___flmul@temp^0,w,c
 14151   002E36  261E               	addwf	___flmul@grs^0,f,c
 14152   002E38  5029               	movf	(___flmul@temp+1)^0,w,c
 14153   002E3A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14154   002E3C  0E00               	movlw	0
 14155   002E3E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14156   002E40  0E00               	movlw	0
 14157   002E42  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14158   002E44  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14159   002E48  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14160   002E4C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14161   002E50  6A1E               	clrf	___flmul@grs^0,c
 14162   002E52  5015               	movf	___flmul@a^0,w,c
 14163   002E54  0211               	mulwf	___flmul@b^0,c
 14164   002E56  CFF3 F028          	movff	prodl,___flmul@temp
 14165   002E5A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14166   002E5E  5028               	movf	___flmul@temp^0,w,c
 14167   002E60  261E               	addwf	___flmul@grs^0,f,c
 14168   002E62  5029               	movf	(___flmul@temp+1)^0,w,c
 14169   002E64  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14170   002E66  0E00               	movlw	0
 14171   002E68  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14172   002E6A  0E00               	movlw	0
 14173   002E6C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14174   002E6E  5017               	movf	(___flmul@a+2)^0,w,c
 14175   002E70  0212               	mulwf	(___flmul@b+1)^0,c
 14176   002E72  CFF3 F028          	movff	prodl,___flmul@temp
 14177   002E76  CFF4 F029          	movff	prodh,___flmul@temp+1
 14178   002E7A  5028               	movf	___flmul@temp^0,w,c
 14179   002E7C  2624               	addwf	___flmul@prod^0,f,c
 14180   002E7E  5029               	movf	(___flmul@temp+1)^0,w,c
 14181   002E80  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14182   002E82  0E00               	movlw	0
 14183   002E84  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14184   002E86  0E00               	movlw	0
 14185   002E88  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14186   002E8A  5016               	movf	(___flmul@a+1)^0,w,c
 14187   002E8C  0213               	mulwf	(___flmul@b+2)^0,c
 14188   002E8E  CFF3 F028          	movff	prodl,___flmul@temp
 14189   002E92  CFF4 F029          	movff	prodh,___flmul@temp+1
 14190   002E96  5028               	movf	___flmul@temp^0,w,c
 14191   002E98  2624               	addwf	___flmul@prod^0,f,c
 14192   002E9A  5029               	movf	(___flmul@temp+1)^0,w,c
 14193   002E9C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14194   002E9E  0E00               	movlw	0
 14195   002EA0  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14196   002EA2  0E00               	movlw	0
 14197   002EA4  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14198   002EA6  5017               	movf	(___flmul@a+2)^0,w,c
 14199   002EA8  0213               	mulwf	(___flmul@b+2)^0,c
 14200   002EAA  CFF3 F028          	movff	prodl,___flmul@temp
 14201   002EAE  CFF4 F029          	movff	prodh,___flmul@temp+1
 14202   002EB2  5028               	movf	___flmul@temp^0,w,c
 14203   002EB4  6E19               	movwf	??___flmul^0,c
 14204   002EB6  5029               	movf	(___flmul@temp+1)^0,w,c
 14205   002EB8  6E1A               	movwf	(??___flmul+1)^0,c
 14206   002EBA  6A1B               	clrf	(??___flmul+2)^0,c
 14207   002EBC  6A1C               	clrf	(??___flmul+3)^0,c
 14208   002EBE  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14209   002EC2  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14210   002EC6  C019  F01A         	movff	??___flmul,??___flmul+1
 14211   002ECA  6A19               	clrf	??___flmul^0,c
 14212   002ECC  5019               	movf	??___flmul^0,w,c
 14213   002ECE  2624               	addwf	___flmul@prod^0,f,c
 14214   002ED0  501A               	movf	(??___flmul+1)^0,w,c
 14215   002ED2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14216   002ED4  501B               	movf	(??___flmul+2)^0,w,c
 14217   002ED6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14218   002ED8  501C               	movf	(??___flmul+3)^0,w,c
 14219   002EDA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14220   002EDC  C01E  F019         	movff	___flmul@grs,??___flmul
 14221   002EE0  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14222   002EE4  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14223   002EE8  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14224   002EEC  0E19               	movlw	25
 14225   002EEE  EF7E  F017         	goto	u3860
 14226   002EF2                     u3865:
 14227   002EF2  90D8               	bcf	status,0,c
 14228   002EF4  321C               	rrcf	(??___flmul+3)^0,f,c
 14229   002EF6  321B               	rrcf	(??___flmul+2)^0,f,c
 14230   002EF8  321A               	rrcf	(??___flmul+1)^0,f,c
 14231   002EFA  3219               	rrcf	??___flmul^0,f,c
 14232   002EFC                     u3860:
 14233   002EFC  2EE8               	decfsz	wreg,f,c
 14234   002EFE  EF79  F017         	goto	u3865
 14235   002F02  5019               	movf	??___flmul^0,w,c
 14236   002F04  2624               	addwf	___flmul@prod^0,f,c
 14237   002F06  501A               	movf	(??___flmul+1)^0,w,c
 14238   002F08  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14239   002F0A  501B               	movf	(??___flmul+2)^0,w,c
 14240   002F0C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14241   002F0E  501C               	movf	(??___flmul+3)^0,w,c
 14242   002F10  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14243   002F12  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14244   002F16  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14245   002F1A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14246   002F1E  6A1E               	clrf	___flmul@grs^0,c
 14247   002F20  5022               	movf	___flmul@aexp^0,w,c
 14248   002F22  C023  F019         	movff	___flmul@bexp,??___flmul
 14249   002F26  6A1A               	clrf	(??___flmul+1)^0,c
 14250   002F28  2619               	addwf	??___flmul^0,f,c
 14251   002F2A  0E00               	movlw	0
 14252   002F2C  221A               	addwfc	(??___flmul+1)^0,f,c
 14253   002F2E  0E82               	movlw	130
 14254   002F30  2419               	addwf	??___flmul^0,w,c
 14255   002F32  6E28               	movwf	___flmul@temp^0,c
 14256   002F34  0EFF               	movlw	255
 14257   002F36  201A               	addwfc	(??___flmul+1)^0,w,c
 14258   002F38  6E29               	movwf	(___flmul@temp+1)^0,c
 14259   002F3A  EFB4  F017         	goto	l4355
 14260   002F3E                     l4349:
 14261   002F3E  90D8               	bcf	status,0,c
 14262   002F40  3624               	rlcf	___flmul@prod^0,f,c
 14263   002F42  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14264   002F44  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14265   002F46  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14266   002F48  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14267   002F4A  EFA9  F017         	goto	u3871
 14268   002F4E  EFAB  F017         	goto	u3870
 14269   002F52                     u3871:
 14270   002F52  EFAC  F017         	goto	l1307
 14271   002F56                     u3870:
 14272   002F56  8024               	bsf	___flmul@prod^0,0,c
 14273   002F58                     l1307:
 14274   002F58  90D8               	bcf	status,0,c
 14275   002F5A  361E               	rlcf	___flmul@grs^0,f,c
 14276   002F5C  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14277   002F5E  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14278   002F60  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14279   002F62  0628               	decf	___flmul@temp^0,f,c
 14280   002F64  A0D8               	btfss	status,0,c
 14281   002F66  0629               	decf	(___flmul@temp+1)^0,f,c
 14282   002F68                     l4355:
 14283   002F68  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14284   002F6A  EFB9  F017         	goto	u3881
 14285   002F6E  EFBB  F017         	goto	u3880
 14286   002F72                     u3881:
 14287   002F72  EF9F  F017         	goto	l4349
 14288   002F76                     u3880:
 14289   002F76  0E00               	movlw	0
 14290   002F78  6E22               	movwf	___flmul@aexp^0,c
 14291   002F7A  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14292   002F7C  EFC2  F017         	goto	u3891
 14293   002F80  EFC4  F017         	goto	u3890
 14294   002F84                     u3891:
 14295   002F84  EFE8  F017         	goto	l1309
 14296   002F88                     u3890:
 14297   002F88  0EFF               	movlw	255
 14298   002F8A  141E               	andwf	___flmul@grs^0,w,c
 14299   002F8C  6E19               	movwf	??___flmul^0,c
 14300   002F8E  0EFF               	movlw	255
 14301   002F90  141F               	andwf	(___flmul@grs+1)^0,w,c
 14302   002F92  6E1A               	movwf	(??___flmul+1)^0,c
 14303   002F94  0EFF               	movlw	255
 14304   002F96  1420               	andwf	(___flmul@grs+2)^0,w,c
 14305   002F98  6E1B               	movwf	(??___flmul+2)^0,c
 14306   002F9A  0E7F               	movlw	127
 14307   002F9C  1421               	andwf	(___flmul@grs+3)^0,w,c
 14308   002F9E  6E1C               	movwf	(??___flmul+3)^0,c
 14309   002FA0  5019               	movf	??___flmul^0,w,c
 14310   002FA2  101A               	iorwf	(??___flmul+1)^0,w,c
 14311   002FA4  101B               	iorwf	(??___flmul+2)^0,w,c
 14312   002FA6  101C               	iorwf	(??___flmul+3)^0,w,c
 14313   002FA8  B4D8               	btfsc	status,2,c
 14314   002FAA  EFD9  F017         	goto	u3901
 14315   002FAE  EFDB  F017         	goto	u3900
 14316   002FB2                     u3901:
 14317   002FB2  EFDF  F017         	goto	l1310
 14318   002FB6                     u3900:
 14319   002FB6                     l4363:
 14320   002FB6  0E01               	movlw	1
 14321   002FB8  6E22               	movwf	___flmul@aexp^0,c
 14322   002FBA  EFE8  F017         	goto	l1309
 14323   002FBE                     l1310:
 14324   002FBE  A024               	btfss	___flmul@prod^0,0,c
 14325   002FC0  EFE4  F017         	goto	u3911
 14326   002FC4  EFE6  F017         	goto	u3910
 14327   002FC8                     u3911:
 14328   002FC8  EFE8  F017         	goto	l1309
 14329   002FCC                     u3910:
 14330   002FCC  EFDB  F017         	goto	l4363
 14331   002FD0                     l1309:
 14332   002FD0  5022               	movf	___flmul@aexp^0,w,c
 14333   002FD2  B4D8               	btfsc	status,2,c
 14334   002FD4  EFEE  F017         	goto	u3921
 14335   002FD8  EFF0  F017         	goto	u3920
 14336   002FDC                     u3921:
 14337   002FDC  EF14  F018         	goto	l4375
 14338   002FE0                     u3920:
 14339   002FE0  0E01               	movlw	1
 14340   002FE2  2624               	addwf	___flmul@prod^0,f,c
 14341   002FE4  0E00               	movlw	0
 14342   002FE6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14343   002FE8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14344   002FEA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14345   002FEC  A027               	btfss	(___flmul@prod+3)^0,0,c
 14346   002FEE  EFFB  F017         	goto	u3931
 14347   002FF2  EFFD  F017         	goto	u3930
 14348   002FF6                     u3931:
 14349   002FF6  EF14  F018         	goto	l4375
 14350   002FFA                     u3930:
 14351   002FFA  C024  F019         	movff	___flmul@prod,??___flmul
 14352   002FFE  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14353   003002  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14354   003006  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14355   00300A  341C               	rlcf	(??___flmul+3)^0,w,c
 14356   00300C  321C               	rrcf	(??___flmul+3)^0,f,c
 14357   00300E  321B               	rrcf	(??___flmul+2)^0,f,c
 14358   003010  321A               	rrcf	(??___flmul+1)^0,f,c
 14359   003012  3219               	rrcf	??___flmul^0,f,c
 14360   003014  C019  F024         	movff	??___flmul,___flmul@prod
 14361   003018  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14362   00301C  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14363   003020  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14364   003024  4A28               	infsnz	___flmul@temp^0,f,c
 14365   003026  2A29               	incf	(___flmul@temp+1)^0,f,c
 14366   003028                     l4375:
 14367   003028  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14368   00302A  EF1F  F018         	goto	u3941
 14369   00302E  5029               	movf	(___flmul@temp+1)^0,w,c
 14370   003030  E108               	bnz	u3940
 14371   003032  2828               	incf	___flmul@temp^0,w,c
 14372   003034  A0D8               	btfss	status,0,c
 14373   003036  EF1F  F018         	goto	u3941
 14374   00303A  EF21  F018         	goto	u3940
 14375   00303E                     u3941:
 14376   00303E  EF2B  F018         	goto	l4379
 14377   003042                     u3940:
 14378   003042  0E00               	movlw	0
 14379   003044  6E24               	movwf	___flmul@prod^0,c
 14380   003046  0E00               	movlw	0
 14381   003048  6E25               	movwf	(___flmul@prod+1)^0,c
 14382   00304A  0E80               	movlw	128
 14383   00304C  6E26               	movwf	(___flmul@prod+2)^0,c
 14384   00304E  0E7F               	movlw	127
 14385   003050  6E27               	movwf	(___flmul@prod+3)^0,c
 14386   003052  EF59  F018         	goto	l4391
 14387   003056                     l4379:
 14388   003056  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14389   003058  EF38  F018         	goto	u3950
 14390   00305C  5029               	movf	(___flmul@temp+1)^0,w,c
 14391   00305E  E106               	bnz	u3951
 14392   003060  0428               	decf	___flmul@temp^0,w,c
 14393   003062  B0D8               	btfsc	status,0,c
 14394   003064  EF36  F018         	goto	u3951
 14395   003068  EF38  F018         	goto	u3950
 14396   00306C                     u3951:
 14397   00306C  EF44  F018         	goto	l1317
 14398   003070                     u3950:
 14399   003070  0E00               	movlw	0
 14400   003072  6E24               	movwf	___flmul@prod^0,c
 14401   003074  0E00               	movlw	0
 14402   003076  6E25               	movwf	(___flmul@prod+1)^0,c
 14403   003078  0E00               	movlw	0
 14404   00307A  6E26               	movwf	(___flmul@prod+2)^0,c
 14405   00307C  0E00               	movlw	0
 14406   00307E  6E27               	movwf	(___flmul@prod+3)^0,c
 14407   003080  0E00               	movlw	0
 14408   003082  6E1D               	movwf	___flmul@sign^0,c
 14409   003084  EF59  F018         	goto	l4391
 14410   003088                     l1317:
 14411   003088  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14412   00308C  0EFF               	movlw	255
 14413   00308E  1624               	andwf	___flmul@prod^0,f,c
 14414   003090  0EFF               	movlw	255
 14415   003092  1625               	andwf	(___flmul@prod+1)^0,f,c
 14416   003094  0E7F               	movlw	127
 14417   003096  1626               	andwf	(___flmul@prod+2)^0,f,c
 14418   003098  0E00               	movlw	0
 14419   00309A  1627               	andwf	(___flmul@prod+3)^0,f,c
 14420   00309C  A023               	btfss	___flmul@bexp^0,0,c
 14421   00309E  EF53  F018         	goto	u3961
 14422   0030A2  EF55  F018         	goto	u3960
 14423   0030A6                     u3961:
 14424   0030A6  EF56  F018         	goto	l4389
 14425   0030AA                     u3960:
 14426   0030AA  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14427   0030AC                     l4389:
 14428   0030AC  90D8               	bcf	status,0,c
 14429   0030AE  3023               	rrcf	___flmul@bexp^0,w,c
 14430   0030B0  6E27               	movwf	(___flmul@prod+3)^0,c
 14431   0030B2                     l4391:
 14432   0030B2  501D               	movf	___flmul@sign^0,w,c
 14433   0030B4  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14434   0030B6  C024  F011         	movff	___flmul@prod,?___flmul
 14435   0030BA  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14436   0030BE  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14437   0030C2  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14438   0030C6                     l1304:
 14439   0030C6  0012               	return		;funcret
 14440   0030C8                     __end_of___flmul:
 14441                           	callstack 0
 14442                           
 14443 ;; *************** function ___flge *****************
 14444 ;; Defined at:
 14445 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14446 ;; Parameters:    Size  Location     Type
 14447 ;;  ff1             4   41[COMRAM] unsigned char 
 14448 ;;  ff2             4   45[COMRAM] unsigned char 
 14449 ;; Auto vars:     Size  Location     Type
 14450 ;;		None
 14451 ;; Return value:  Size  Location     Type
 14452 ;;		None               void
 14453 ;; Registers used:
 14454 ;;		wreg, status,2, status,0
 14455 ;; Tracked objects:
 14456 ;;		On entry : 0/0
 14457 ;;		On exit  : 0/0
 14458 ;;		Unchanged: 0/0
 14459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14463 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14464 ;;Total ram usage:       12 bytes
 14465 ;; Hardware stack levels used: 1
 14466 ;; Hardware stack levels required when called: 1
 14467 ;; This function calls:
 14468 ;;		Nothing
 14469 ;; This function is called by:
 14470 ;;		_Colour_decider
 14471 ;;		_efgtoa
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           	psect	text77
 14476   004AC4                     __ptext77:
 14477                           	callstack 0
 14478   004AC4                     ___flge:
 14479                           	callstack 25
 14480   004AC4  0E00               	movlw	0
 14481   004AC6  142A               	andwf	___flge@ff1^0,w,c
 14482   004AC8  6E32               	movwf	??___flge^0,c
 14483   004ACA  0E00               	movlw	0
 14484   004ACC  142B               	andwf	(___flge@ff1+1)^0,w,c
 14485   004ACE  6E33               	movwf	(??___flge+1)^0,c
 14486   004AD0  0E80               	movlw	128
 14487   004AD2  142C               	andwf	(___flge@ff1+2)^0,w,c
 14488   004AD4  6E34               	movwf	(??___flge+2)^0,c
 14489   004AD6  0E7F               	movlw	127
 14490   004AD8  142D               	andwf	(___flge@ff1+3)^0,w,c
 14491   004ADA  6E35               	movwf	(??___flge+3)^0,c
 14492   004ADC  5032               	movf	??___flge^0,w,c
 14493   004ADE  1033               	iorwf	(??___flge+1)^0,w,c
 14494   004AE0  1034               	iorwf	(??___flge+2)^0,w,c
 14495   004AE2  1035               	iorwf	(??___flge+3)^0,w,c
 14496   004AE4  A4D8               	btfss	status,2,c
 14497   004AE6  EF77  F025         	goto	u4001
 14498   004AEA  EF79  F025         	goto	u4000
 14499   004AEE                     u4001:
 14500   004AEE  EF81  F025         	goto	l4423
 14501   004AF2                     u4000:
 14502   004AF2  0E00               	movlw	0
 14503   004AF4  6E2A               	movwf	___flge@ff1^0,c
 14504   004AF6  0E00               	movlw	0
 14505   004AF8  6E2B               	movwf	(___flge@ff1+1)^0,c
 14506   004AFA  0E00               	movlw	0
 14507   004AFC  6E2C               	movwf	(___flge@ff1+2)^0,c
 14508   004AFE  0E00               	movlw	0
 14509   004B00  6E2D               	movwf	(___flge@ff1+3)^0,c
 14510   004B02                     l4423:
 14511   004B02  0E00               	movlw	0
 14512   004B04  142E               	andwf	___flge@ff2^0,w,c
 14513   004B06  6E32               	movwf	??___flge^0,c
 14514   004B08  0E00               	movlw	0
 14515   004B0A  142F               	andwf	(___flge@ff2+1)^0,w,c
 14516   004B0C  6E33               	movwf	(??___flge+1)^0,c
 14517   004B0E  0E80               	movlw	128
 14518   004B10  1430               	andwf	(___flge@ff2+2)^0,w,c
 14519   004B12  6E34               	movwf	(??___flge+2)^0,c
 14520   004B14  0E7F               	movlw	127
 14521   004B16  1431               	andwf	(___flge@ff2+3)^0,w,c
 14522   004B18  6E35               	movwf	(??___flge+3)^0,c
 14523   004B1A  5032               	movf	??___flge^0,w,c
 14524   004B1C  1033               	iorwf	(??___flge+1)^0,w,c
 14525   004B1E  1034               	iorwf	(??___flge+2)^0,w,c
 14526   004B20  1035               	iorwf	(??___flge+3)^0,w,c
 14527   004B22  A4D8               	btfss	status,2,c
 14528   004B24  EF96  F025         	goto	u4011
 14529   004B28  EF98  F025         	goto	u4010
 14530   004B2C                     u4011:
 14531   004B2C  EFA0  F025         	goto	l4427
 14532   004B30                     u4010:
 14533   004B30  0E00               	movlw	0
 14534   004B32  6E2E               	movwf	___flge@ff2^0,c
 14535   004B34  0E00               	movlw	0
 14536   004B36  6E2F               	movwf	(___flge@ff2+1)^0,c
 14537   004B38  0E00               	movlw	0
 14538   004B3A  6E30               	movwf	(___flge@ff2+2)^0,c
 14539   004B3C  0E00               	movlw	0
 14540   004B3E  6E31               	movwf	(___flge@ff2+3)^0,c
 14541   004B40                     l4427:
 14542   004B40  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14543   004B42  EFA5  F025         	goto	u4021
 14544   004B46  EFA7  F025         	goto	u4020
 14545   004B4A                     u4021:
 14546   004B4A  EFB0  F025         	goto	l4431
 14547   004B4E                     u4020:
 14548   004B4E  6C2A               	negf	___flge@ff1^0,c
 14549   004B50  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14550   004B52  B0D8               	btfsc	status,0,c
 14551   004B54  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14552   004B56  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14553   004B58  B0D8               	btfsc	status,0,c
 14554   004B5A  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14555   004B5C  0E80               	movlw	128
 14556   004B5E  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14557   004B60                     l4431:
 14558   004B60  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14559   004B62  EFB5  F025         	goto	u4031
 14560   004B66  EFB7  F025         	goto	u4030
 14561   004B6A                     u4031:
 14562   004B6A  EFC0  F025         	goto	l951
 14563   004B6E                     u4030:
 14564   004B6E  6C2E               	negf	___flge@ff2^0,c
 14565   004B70  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14566   004B72  B0D8               	btfsc	status,0,c
 14567   004B74  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14568   004B76  1E30               	comf	(___flge@ff2+2)^0,f,c
 14569   004B78  B0D8               	btfsc	status,0,c
 14570   004B7A  2A30               	incf	(___flge@ff2+2)^0,f,c
 14571   004B7C  0E80               	movlw	128
 14572   004B7E  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14573   004B80                     l951:
 14574   004B80  0E00               	movlw	0
 14575   004B82  1A2A               	xorwf	___flge@ff1^0,f,c
 14576   004B84  0E00               	movlw	0
 14577   004B86  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14578   004B88  0E00               	movlw	0
 14579   004B8A  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14580   004B8C  0E80               	movlw	128
 14581   004B8E  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14582   004B90  0E00               	movlw	0
 14583   004B92  1A2E               	xorwf	___flge@ff2^0,f,c
 14584   004B94  0E00               	movlw	0
 14585   004B96  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14586   004B98  0E00               	movlw	0
 14587   004B9A  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14588   004B9C  0E80               	movlw	128
 14589   004B9E  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14590   004BA0  502E               	movf	___flge@ff2^0,w,c
 14591   004BA2  5C2A               	subwf	___flge@ff1^0,w,c
 14592   004BA4  502F               	movf	(___flge@ff2+1)^0,w,c
 14593   004BA6  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14594   004BA8  5030               	movf	(___flge@ff2+2)^0,w,c
 14595   004BAA  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14596   004BAC  5031               	movf	(___flge@ff2+3)^0,w,c
 14597   004BAE  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14598   004BB0  B0D8               	btfsc	status,0,c
 14599   004BB2  EFDD  F025         	goto	u4041
 14600   004BB6  EFDF  F025         	goto	u4040
 14601   004BBA                     u4041:
 14602   004BBA  EFE2  F025         	goto	l4437
 14603   004BBE                     u4040:
 14604   004BBE  90D8               	bcf	status,0,c
 14605   004BC0  EFE3  F025         	goto	l956
 14606   004BC4                     l4437:
 14607   004BC4  80D8               	bsf	status,0,c
 14608   004BC6                     l956:
 14609   004BC6  0012               	return		;funcret
 14610   004BC8                     __end_of___flge:
 14611                           	callstack 0
 14612                           
 14613 ;; *************** function ___fleq *****************
 14614 ;; Defined at:
 14615 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  ff1             4   49[COMRAM] unsigned char 
 14618 ;;  ff2             4   53[COMRAM] unsigned char 
 14619 ;; Auto vars:     Size  Location     Type
 14620 ;;		None
 14621 ;; Return value:  Size  Location     Type
 14622 ;;		None               void
 14623 ;; Registers used:
 14624 ;;		wreg, status,2, status,0
 14625 ;; Tracked objects:
 14626 ;;		On entry : 0/0
 14627 ;;		On exit  : 0/0
 14628 ;;		Unchanged: 0/0
 14629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14630 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14633 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14634 ;;Total ram usage:       12 bytes
 14635 ;; Hardware stack levels used: 1
 14636 ;; Hardware stack levels required when called: 1
 14637 ;; This function calls:
 14638 ;;		Nothing
 14639 ;; This function is called by:
 14640 ;;		_Colour_decider
 14641 ;;		_efgtoa
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           	psect	text78
 14646   004FA6                     __ptext78:
 14647                           	callstack 0
 14648   004FA6                     ___fleq:
 14649                           	callstack 25
 14650   004FA6  0E00               	movlw	0
 14651   004FA8  1432               	andwf	___fleq@ff1^0,w,c
 14652   004FAA  6E3A               	movwf	??___fleq^0,c
 14653   004FAC  0E00               	movlw	0
 14654   004FAE  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14655   004FB0  6E3B               	movwf	(??___fleq+1)^0,c
 14656   004FB2  0E80               	movlw	128
 14657   004FB4  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14658   004FB6  6E3C               	movwf	(??___fleq+2)^0,c
 14659   004FB8  0E7F               	movlw	127
 14660   004FBA  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14661   004FBC  6E3D               	movwf	(??___fleq+3)^0,c
 14662   004FBE  503A               	movf	??___fleq^0,w,c
 14663   004FC0  103B               	iorwf	(??___fleq+1)^0,w,c
 14664   004FC2  103C               	iorwf	(??___fleq+2)^0,w,c
 14665   004FC4  103D               	iorwf	(??___fleq+3)^0,w,c
 14666   004FC6  A4D8               	btfss	status,2,c
 14667   004FC8  EFE8  F027         	goto	u3971
 14668   004FCC  EFEA  F027         	goto	u3970
 14669   004FD0                     u3971:
 14670   004FD0  EFF2  F027         	goto	l4407
 14671   004FD4                     u3970:
 14672   004FD4  0E00               	movlw	0
 14673   004FD6  6E32               	movwf	___fleq@ff1^0,c
 14674   004FD8  0E00               	movlw	0
 14675   004FDA  6E33               	movwf	(___fleq@ff1+1)^0,c
 14676   004FDC  0E00               	movlw	0
 14677   004FDE  6E34               	movwf	(___fleq@ff1+2)^0,c
 14678   004FE0  0E00               	movlw	0
 14679   004FE2  6E35               	movwf	(___fleq@ff1+3)^0,c
 14680   004FE4                     l4407:
 14681   004FE4  0E00               	movlw	0
 14682   004FE6  1436               	andwf	___fleq@ff2^0,w,c
 14683   004FE8  6E3A               	movwf	??___fleq^0,c
 14684   004FEA  0E00               	movlw	0
 14685   004FEC  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14686   004FEE  6E3B               	movwf	(??___fleq+1)^0,c
 14687   004FF0  0E80               	movlw	128
 14688   004FF2  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14689   004FF4  6E3C               	movwf	(??___fleq+2)^0,c
 14690   004FF6  0E7F               	movlw	127
 14691   004FF8  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14692   004FFA  6E3D               	movwf	(??___fleq+3)^0,c
 14693   004FFC  503A               	movf	??___fleq^0,w,c
 14694   004FFE  103B               	iorwf	(??___fleq+1)^0,w,c
 14695   005000  103C               	iorwf	(??___fleq+2)^0,w,c
 14696   005002  103D               	iorwf	(??___fleq+3)^0,w,c
 14697   005004  A4D8               	btfss	status,2,c
 14698   005006  EF07  F028         	goto	u3981
 14699   00500A  EF09  F028         	goto	u3980
 14700   00500E                     u3981:
 14701   00500E  EF11  F028         	goto	l4411
 14702   005012                     u3980:
 14703   005012  0E00               	movlw	0
 14704   005014  6E36               	movwf	___fleq@ff2^0,c
 14705   005016  0E00               	movlw	0
 14706   005018  6E37               	movwf	(___fleq@ff2+1)^0,c
 14707   00501A  0E00               	movlw	0
 14708   00501C  6E38               	movwf	(___fleq@ff2+2)^0,c
 14709   00501E  0E00               	movlw	0
 14710   005020  6E39               	movwf	(___fleq@ff2+3)^0,c
 14711   005022                     l4411:
 14712   005022  5036               	movf	___fleq@ff2^0,w,c
 14713   005024  1832               	xorwf	___fleq@ff1^0,w,c
 14714   005026  E10F               	bnz	u3990
 14715   005028  5037               	movf	(___fleq@ff2+1)^0,w,c
 14716   00502A  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14717   00502C  E10C               	bnz	u3990
 14718   00502E  5038               	movf	(___fleq@ff2+2)^0,w,c
 14719   005030  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14720   005032  E109               	bnz	u3990
 14721   005034  5039               	movf	(___fleq@ff2+3)^0,w,c
 14722   005036  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14723   005038  B4D8               	btfsc	status,2,c
 14724   00503A  EF21  F028         	goto	u3991
 14725   00503E  EF23  F028         	goto	u3990
 14726   005042                     u3991:
 14727   005042  EF26  F028         	goto	l4415
 14728   005046                     u3990:
 14729   005046  90D8               	bcf	status,0,c
 14730   005048  EF27  F028         	goto	l945
 14731   00504C                     l4415:
 14732   00504C  80D8               	bsf	status,0,c
 14733   00504E                     l945:
 14734   00504E  0012               	return		;funcret
 14735   005050                     __end_of___fleq:
 14736                           	callstack 0
 14737                           
 14738 ;; *************** function ___fldiv *****************
 14739 ;; Defined at:
 14740 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;  b               4   49[COMRAM] unsigned char 
 14743 ;;  a               4   53[COMRAM] unsigned char 
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;  grs             4   68[COMRAM] unsigned long 
 14746 ;;  rem             4   61[COMRAM] unsigned long 
 14747 ;;  new_exp         2   66[COMRAM] short 
 14748 ;;  aexp            1   73[COMRAM] unsigned char 
 14749 ;;  bexp            1   72[COMRAM] unsigned char 
 14750 ;;  sign            1   65[COMRAM] unsigned char 
 14751 ;; Return value:  Size  Location     Type
 14752 ;;                  4   49[COMRAM] unsigned char 
 14753 ;; Registers used:
 14754 ;;		wreg, status,2, status,0
 14755 ;; Tracked objects:
 14756 ;;		On entry : 0/0
 14757 ;;		On exit  : 0/0
 14758 ;;		Unchanged: 0/0
 14759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14760 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14763 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14764 ;;Total ram usage:       25 bytes
 14765 ;; Hardware stack levels used: 1
 14766 ;; Hardware stack levels required when called: 1
 14767 ;; This function calls:
 14768 ;;		Nothing
 14769 ;; This function is called by:
 14770 ;;		_colour_rel
 14771 ;;		_Colour_decider
 14772 ;;		_efgtoa
 14773 ;; This function uses a non-reentrant model
 14774 ;;
 14775                           
 14776                           	psect	text79
 14777   0030C8                     __ptext79:
 14778                           	callstack 0
 14779   0030C8                     ___fldiv:
 14780                           	callstack 25
 14781   0030C8  5035               	movf	(___fldiv@b+3)^0,w,c
 14782   0030CA  0B80               	andlw	128
 14783   0030CC  6E42               	movwf	___fldiv@sign^0,c
 14784   0030CE  5035               	movf	(___fldiv@b+3)^0,w,c
 14785   0030D0  2435               	addwf	(___fldiv@b+3)^0,w,c
 14786   0030D2  6E49               	movwf	___fldiv@bexp^0,c
 14787   0030D4  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14788   0030D6  EF6F  F018         	goto	u3551
 14789   0030DA  EF71  F018         	goto	u3550
 14790   0030DE                     u3551:
 14791   0030DE  EF72  F018         	goto	l4135
 14792   0030E2                     u3550:
 14793   0030E2  8049               	bsf	___fldiv@bexp^0,0,c
 14794   0030E4                     l4135:
 14795   0030E4  5049               	movf	___fldiv@bexp^0,w,c
 14796   0030E6  B4D8               	btfsc	status,2,c
 14797   0030E8  EF78  F018         	goto	u3561
 14798   0030EC  EF7A  F018         	goto	u3560
 14799   0030F0                     u3561:
 14800   0030F0  EF8F  F018         	goto	l4145
 14801   0030F4                     u3560:
 14802   0030F4  2849               	incf	___fldiv@bexp^0,w,c
 14803   0030F6  A4D8               	btfss	status,2,c
 14804   0030F8  EF80  F018         	goto	u3571
 14805   0030FC  EF82  F018         	goto	u3570
 14806   003100                     u3571:
 14807   003100  EF8A  F018         	goto	l4141
 14808   003104                     u3570:
 14809   003104  0E00               	movlw	0
 14810   003106  6E32               	movwf	___fldiv@b^0,c
 14811   003108  0E00               	movlw	0
 14812   00310A  6E33               	movwf	(___fldiv@b+1)^0,c
 14813   00310C  0E00               	movlw	0
 14814   00310E  6E34               	movwf	(___fldiv@b+2)^0,c
 14815   003110  0E00               	movlw	0
 14816   003112  6E35               	movwf	(___fldiv@b+3)^0,c
 14817   003114                     l4141:
 14818   003114  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14819   003116  0E00               	movlw	0
 14820   003118  6E35               	movwf	(___fldiv@b+3)^0,c
 14821   00311A  EF97  F018         	goto	l4147
 14822   00311E                     l4145:
 14823   00311E  0E00               	movlw	0
 14824   003120  6E32               	movwf	___fldiv@b^0,c
 14825   003122  0E00               	movlw	0
 14826   003124  6E33               	movwf	(___fldiv@b+1)^0,c
 14827   003126  0E00               	movlw	0
 14828   003128  6E34               	movwf	(___fldiv@b+2)^0,c
 14829   00312A  0E00               	movlw	0
 14830   00312C  6E35               	movwf	(___fldiv@b+3)^0,c
 14831   00312E                     l4147:
 14832   00312E  5039               	movf	(___fldiv@a+3)^0,w,c
 14833   003130  0B80               	andlw	128
 14834   003132  1A42               	xorwf	___fldiv@sign^0,f,c
 14835   003134  5039               	movf	(___fldiv@a+3)^0,w,c
 14836   003136  2439               	addwf	(___fldiv@a+3)^0,w,c
 14837   003138  6E4A               	movwf	___fldiv@aexp^0,c
 14838   00313A  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14839   00313C  EFA2  F018         	goto	u3581
 14840   003140  EFA4  F018         	goto	u3580
 14841   003144                     u3581:
 14842   003144  EFA5  F018         	goto	l4155
 14843   003148                     u3580:
 14844   003148  804A               	bsf	___fldiv@aexp^0,0,c
 14845   00314A                     l4155:
 14846   00314A  504A               	movf	___fldiv@aexp^0,w,c
 14847   00314C  B4D8               	btfsc	status,2,c
 14848   00314E  EFAB  F018         	goto	u3591
 14849   003152  EFAD  F018         	goto	u3590
 14850   003156                     u3591:
 14851   003156  EFC2  F018         	goto	l4165
 14852   00315A                     u3590:
 14853   00315A  284A               	incf	___fldiv@aexp^0,w,c
 14854   00315C  A4D8               	btfss	status,2,c
 14855   00315E  EFB3  F018         	goto	u3601
 14856   003162  EFB5  F018         	goto	u3600
 14857   003166                     u3601:
 14858   003166  EFBD  F018         	goto	l4161
 14859   00316A                     u3600:
 14860   00316A  0E00               	movlw	0
 14861   00316C  6E36               	movwf	___fldiv@a^0,c
 14862   00316E  0E00               	movlw	0
 14863   003170  6E37               	movwf	(___fldiv@a+1)^0,c
 14864   003172  0E00               	movlw	0
 14865   003174  6E38               	movwf	(___fldiv@a+2)^0,c
 14866   003176  0E00               	movlw	0
 14867   003178  6E39               	movwf	(___fldiv@a+3)^0,c
 14868   00317A                     l4161:
 14869   00317A  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14870   00317C  0E00               	movlw	0
 14871   00317E  6E39               	movwf	(___fldiv@a+3)^0,c
 14872   003180  EFCA  F018         	goto	l4167
 14873   003184                     l4165:
 14874   003184  0E00               	movlw	0
 14875   003186  6E36               	movwf	___fldiv@a^0,c
 14876   003188  0E00               	movlw	0
 14877   00318A  6E37               	movwf	(___fldiv@a+1)^0,c
 14878   00318C  0E00               	movlw	0
 14879   00318E  6E38               	movwf	(___fldiv@a+2)^0,c
 14880   003190  0E00               	movlw	0
 14881   003192  6E39               	movwf	(___fldiv@a+3)^0,c
 14882   003194                     l4167:
 14883   003194  5036               	movf	___fldiv@a^0,w,c
 14884   003196  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14885   003198  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14886   00319A  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14887   00319C  A4D8               	btfss	status,2,c
 14888   00319E  EFD3  F018         	goto	u3611
 14889   0031A2  EFD5  F018         	goto	u3610
 14890   0031A6                     u3611:
 14891   0031A6  EFED  F018         	goto	l4179
 14892   0031AA                     u3610:
 14893   0031AA  0E00               	movlw	0
 14894   0031AC  6E32               	movwf	___fldiv@b^0,c
 14895   0031AE  0E00               	movlw	0
 14896   0031B0  6E33               	movwf	(___fldiv@b+1)^0,c
 14897   0031B2  0E00               	movlw	0
 14898   0031B4  6E34               	movwf	(___fldiv@b+2)^0,c
 14899   0031B6  0E00               	movlw	0
 14900   0031B8  6E35               	movwf	(___fldiv@b+3)^0,c
 14901   0031BA  0E80               	movlw	128
 14902   0031BC  1234               	iorwf	(___fldiv@b+2)^0,f,c
 14903   0031BE  0E7F               	movlw	127
 14904   0031C0  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14905   0031C2                     l4173:
 14906   0031C2  5042               	movf	___fldiv@sign^0,w,c
 14907   0031C4  1235               	iorwf	(___fldiv@b+3)^0,f,c
 14908   0031C6  C032  F032         	movff	___fldiv@b,?___fldiv
 14909   0031CA  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 14910   0031CE  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 14911   0031D2  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 14912   0031D6  EF30  F01A         	goto	l1268
 14913   0031DA                     l4179:
 14914   0031DA  5049               	movf	___fldiv@bexp^0,w,c
 14915   0031DC  A4D8               	btfss	status,2,c
 14916   0031DE  EFF3  F018         	goto	u3621
 14917   0031E2  EFF5  F018         	goto	u3620
 14918   0031E6                     u3621:
 14919   0031E6  EFFF  F018         	goto	l4187
 14920   0031EA                     u3620:
 14921   0031EA  0E00               	movlw	0
 14922   0031EC  6E32               	movwf	?___fldiv^0,c
 14923   0031EE  0E00               	movlw	0
 14924   0031F0  6E33               	movwf	(?___fldiv+1)^0,c
 14925   0031F2  0E00               	movlw	0
 14926   0031F4  6E34               	movwf	(?___fldiv+2)^0,c
 14927   0031F6  0E00               	movlw	0
 14928   0031F8  6E35               	movwf	(?___fldiv+3)^0,c
 14929   0031FA  EF30  F01A         	goto	l1268
 14930   0031FE                     l4187:
 14931   0031FE  504A               	movf	___fldiv@aexp^0,w,c
 14932   003200  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 14933   003204  6A3B               	clrf	(??___fldiv+1)^0,c
 14934   003206  5E3A               	subwf	??___fldiv^0,f,c
 14935   003208  0E00               	movlw	0
 14936   00320A  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 14937   00320C  0E7F               	movlw	127
 14938   00320E  243A               	addwf	??___fldiv^0,w,c
 14939   003210  6E43               	movwf	___fldiv@new_exp^0,c
 14940   003212  0E00               	movlw	0
 14941   003214  203B               	addwfc	(??___fldiv+1)^0,w,c
 14942   003216  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14943   003218  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 14944   00321C  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 14945   003220  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 14946   003224  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 14947   003228  0E00               	movlw	0
 14948   00322A  6E32               	movwf	___fldiv@b^0,c
 14949   00322C  0E00               	movlw	0
 14950   00322E  6E33               	movwf	(___fldiv@b+1)^0,c
 14951   003230  0E00               	movlw	0
 14952   003232  6E34               	movwf	(___fldiv@b+2)^0,c
 14953   003234  0E00               	movlw	0
 14954   003236  6E35               	movwf	(___fldiv@b+3)^0,c
 14955   003238  0E00               	movlw	0
 14956   00323A  6E45               	movwf	___fldiv@grs^0,c
 14957   00323C  0E00               	movlw	0
 14958   00323E  6E46               	movwf	(___fldiv@grs+1)^0,c
 14959   003240  0E00               	movlw	0
 14960   003242  6E47               	movwf	(___fldiv@grs+2)^0,c
 14961   003244  0E00               	movlw	0
 14962   003246  6E48               	movwf	(___fldiv@grs+3)^0,c
 14963   003248  0E00               	movlw	0
 14964   00324A  6E4A               	movwf	___fldiv@aexp^0,c
 14965   00324C  EF60  F019         	goto	l1270
 14966   003250                     l4197:
 14967   003250  504A               	movf	___fldiv@aexp^0,w,c
 14968   003252  B4D8               	btfsc	status,2,c
 14969   003254  EF2E  F019         	goto	u3631
 14970   003258  EF30  F019         	goto	u3630
 14971   00325C                     u3631:
 14972   00325C  EF47  F019         	goto	l4205
 14973   003260                     u3630:
 14974   003260  90D8               	bcf	status,0,c
 14975   003262  363E               	rlcf	___fldiv@rem^0,f,c
 14976   003264  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 14977   003266  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 14978   003268  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 14979   00326A  90D8               	bcf	status,0,c
 14980   00326C  3632               	rlcf	___fldiv@b^0,f,c
 14981   00326E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 14982   003270  3634               	rlcf	(___fldiv@b+2)^0,f,c
 14983   003272  3635               	rlcf	(___fldiv@b+3)^0,f,c
 14984   003274  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 14985   003276  EF3F  F019         	goto	u3641
 14986   00327A  EF41  F019         	goto	u3640
 14987   00327E                     u3641:
 14988   00327E  EF42  F019         	goto	l1273
 14989   003282                     u3640:
 14990   003282  8032               	bsf	___fldiv@b^0,0,c
 14991   003284                     l1273:
 14992   003284  90D8               	bcf	status,0,c
 14993   003286  3645               	rlcf	___fldiv@grs^0,f,c
 14994   003288  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 14995   00328A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 14996   00328C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 14997   00328E                     l4205:
 14998   00328E  5036               	movf	___fldiv@a^0,w,c
 14999   003290  5C3E               	subwf	___fldiv@rem^0,w,c
 15000   003292  5037               	movf	(___fldiv@a+1)^0,w,c
 15001   003294  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15002   003296  5038               	movf	(___fldiv@a+2)^0,w,c
 15003   003298  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15004   00329A  5039               	movf	(___fldiv@a+3)^0,w,c
 15005   00329C  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15006   00329E  A0D8               	btfss	status,0,c
 15007   0032A0  EF54  F019         	goto	u3651
 15008   0032A4  EF56  F019         	goto	u3650
 15009   0032A8                     u3651:
 15010   0032A8  EF5F  F019         	goto	l4211
 15011   0032AC                     u3650:
 15012   0032AC  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15013   0032AE  5036               	movf	___fldiv@a^0,w,c
 15014   0032B0  5E3E               	subwf	___fldiv@rem^0,f,c
 15015   0032B2  5037               	movf	(___fldiv@a+1)^0,w,c
 15016   0032B4  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15017   0032B6  5038               	movf	(___fldiv@a+2)^0,w,c
 15018   0032B8  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15019   0032BA  5039               	movf	(___fldiv@a+3)^0,w,c
 15020   0032BC  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15021   0032BE                     l4211:
 15022   0032BE  2A4A               	incf	___fldiv@aexp^0,f,c
 15023   0032C0                     l1270:
 15024   0032C0  0E19               	movlw	25
 15025   0032C2  644A               	cpfsgt	___fldiv@aexp^0,c
 15026   0032C4  EF66  F019         	goto	u3661
 15027   0032C8  EF68  F019         	goto	u3660
 15028   0032CC                     u3661:
 15029   0032CC  EF28  F019         	goto	l4197
 15030   0032D0                     u3660:
 15031   0032D0  503E               	movf	___fldiv@rem^0,w,c
 15032   0032D2  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15033   0032D4  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15034   0032D6  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15035   0032D8  B4D8               	btfsc	status,2,c
 15036   0032DA  EF71  F019         	goto	u3671
 15037   0032DE  EF73  F019         	goto	u3670
 15038   0032E2                     u3671:
 15039   0032E2  EF8B  F019         	goto	l4223
 15040   0032E6                     u3670:
 15041   0032E6  8045               	bsf	___fldiv@grs^0,0,c
 15042   0032E8  EF8B  F019         	goto	l4223
 15043   0032EC                     l4217:
 15044   0032EC  90D8               	bcf	status,0,c
 15045   0032EE  3632               	rlcf	___fldiv@b^0,f,c
 15046   0032F0  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15047   0032F2  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15048   0032F4  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15049   0032F6  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15050   0032F8  EF80  F019         	goto	u3681
 15051   0032FC  EF82  F019         	goto	u3680
 15052   003300                     u3681:
 15053   003300  EF83  F019         	goto	l1279
 15054   003304                     u3680:
 15055   003304  8032               	bsf	___fldiv@b^0,0,c
 15056   003306                     l1279:
 15057   003306  90D8               	bcf	status,0,c
 15058   003308  3645               	rlcf	___fldiv@grs^0,f,c
 15059   00330A  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15060   00330C  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15061   00330E  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15062   003310  0643               	decf	___fldiv@new_exp^0,f,c
 15063   003312  A0D8               	btfss	status,0,c
 15064   003314  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15065   003316                     l4223:
 15066   003316  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15067   003318  EF90  F019         	goto	u3691
 15068   00331C  EF92  F019         	goto	u3690
 15069   003320                     u3691:
 15070   003320  EF76  F019         	goto	l4217
 15071   003324                     u3690:
 15072   003324  0E00               	movlw	0
 15073   003326  6E4A               	movwf	___fldiv@aexp^0,c
 15074   003328  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15075   00332A  EF99  F019         	goto	u3701
 15076   00332E  EF9B  F019         	goto	u3700
 15077   003332                     u3701:
 15078   003332  EFBF  F019         	goto	l1281
 15079   003336                     u3700:
 15080   003336  0EFF               	movlw	255
 15081   003338  1445               	andwf	___fldiv@grs^0,w,c
 15082   00333A  6E3A               	movwf	??___fldiv^0,c
 15083   00333C  0EFF               	movlw	255
 15084   00333E  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15085   003340  6E3B               	movwf	(??___fldiv+1)^0,c
 15086   003342  0EFF               	movlw	255
 15087   003344  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15088   003346  6E3C               	movwf	(??___fldiv+2)^0,c
 15089   003348  0E7F               	movlw	127
 15090   00334A  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15091   00334C  6E3D               	movwf	(??___fldiv+3)^0,c
 15092   00334E  503A               	movf	??___fldiv^0,w,c
 15093   003350  103B               	iorwf	(??___fldiv+1)^0,w,c
 15094   003352  103C               	iorwf	(??___fldiv+2)^0,w,c
 15095   003354  103D               	iorwf	(??___fldiv+3)^0,w,c
 15096   003356  B4D8               	btfsc	status,2,c
 15097   003358  EFB0  F019         	goto	u3711
 15098   00335C  EFB2  F019         	goto	u3710
 15099   003360                     u3711:
 15100   003360  EFB6  F019         	goto	l1282
 15101   003364                     u3710:
 15102   003364                     l4231:
 15103   003364  0E01               	movlw	1
 15104   003366  6E4A               	movwf	___fldiv@aexp^0,c
 15105   003368  EFBF  F019         	goto	l1281
 15106   00336C                     l1282:
 15107   00336C  A032               	btfss	___fldiv@b^0,0,c
 15108   00336E  EFBB  F019         	goto	u3721
 15109   003372  EFBD  F019         	goto	u3720
 15110   003376                     u3721:
 15111   003376  EFBF  F019         	goto	l1281
 15112   00337A                     u3720:
 15113   00337A  EFB2  F019         	goto	l4231
 15114   00337E                     l1281:
 15115   00337E  504A               	movf	___fldiv@aexp^0,w,c
 15116   003380  B4D8               	btfsc	status,2,c
 15117   003382  EFC5  F019         	goto	u3731
 15118   003386  EFC7  F019         	goto	u3730
 15119   00338A                     u3731:
 15120   00338A  EFEB  F019         	goto	l4243
 15121   00338E                     u3730:
 15122   00338E  0E01               	movlw	1
 15123   003390  2632               	addwf	___fldiv@b^0,f,c
 15124   003392  0E00               	movlw	0
 15125   003394  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15126   003396  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15127   003398  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15128   00339A  A035               	btfss	(___fldiv@b+3)^0,0,c
 15129   00339C  EFD2  F019         	goto	u3741
 15130   0033A0  EFD4  F019         	goto	u3740
 15131   0033A4                     u3741:
 15132   0033A4  EFEB  F019         	goto	l4243
 15133   0033A8                     u3740:
 15134   0033A8  C032  F03A         	movff	___fldiv@b,??___fldiv
 15135   0033AC  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15136   0033B0  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15137   0033B4  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15138   0033B8  343D               	rlcf	(??___fldiv+3)^0,w,c
 15139   0033BA  323D               	rrcf	(??___fldiv+3)^0,f,c
 15140   0033BC  323C               	rrcf	(??___fldiv+2)^0,f,c
 15141   0033BE  323B               	rrcf	(??___fldiv+1)^0,f,c
 15142   0033C0  323A               	rrcf	??___fldiv^0,f,c
 15143   0033C2  C03A  F032         	movff	??___fldiv,___fldiv@b
 15144   0033C6  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15145   0033CA  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15146   0033CE  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15147   0033D2  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15148   0033D4  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15149   0033D6                     l4243:
 15150   0033D6  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15151   0033D8  EFF6  F019         	goto	u3751
 15152   0033DC  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15153   0033DE  E108               	bnz	u3750
 15154   0033E0  2843               	incf	___fldiv@new_exp^0,w,c
 15155   0033E2  A0D8               	btfss	status,0,c
 15156   0033E4  EFF6  F019         	goto	u3751
 15157   0033E8  EFF8  F019         	goto	u3750
 15158   0033EC                     u3751:
 15159   0033EC  EF03  F01A         	goto	l4247
 15160   0033F0                     u3750:
 15161   0033F0  0E00               	movlw	0
 15162   0033F2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15163   0033F4  6843               	setf	___fldiv@new_exp^0,c
 15164   0033F6  0E00               	movlw	0
 15165   0033F8  6E32               	movwf	___fldiv@b^0,c
 15166   0033FA  0E00               	movlw	0
 15167   0033FC  6E33               	movwf	(___fldiv@b+1)^0,c
 15168   0033FE  0E00               	movlw	0
 15169   003400  6E34               	movwf	(___fldiv@b+2)^0,c
 15170   003402  0E00               	movlw	0
 15171   003404  6E35               	movwf	(___fldiv@b+3)^0,c
 15172   003406                     l4247:
 15173   003406  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15174   003408  EF10  F01A         	goto	u3760
 15175   00340C  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15176   00340E  E106               	bnz	u3761
 15177   003410  0443               	decf	___fldiv@new_exp^0,w,c
 15178   003412  B0D8               	btfsc	status,0,c
 15179   003414  EF0E  F01A         	goto	u3761
 15180   003418  EF10  F01A         	goto	u3760
 15181   00341C                     u3761:
 15182   00341C  EF1E  F01A         	goto	l4251
 15183   003420                     u3760:
 15184   003420  0E00               	movlw	0
 15185   003422  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15186   003424  0E00               	movlw	0
 15187   003426  6E43               	movwf	___fldiv@new_exp^0,c
 15188   003428  0E00               	movlw	0
 15189   00342A  6E32               	movwf	___fldiv@b^0,c
 15190   00342C  0E00               	movlw	0
 15191   00342E  6E33               	movwf	(___fldiv@b+1)^0,c
 15192   003430  0E00               	movlw	0
 15193   003432  6E34               	movwf	(___fldiv@b+2)^0,c
 15194   003434  0E00               	movlw	0
 15195   003436  6E35               	movwf	(___fldiv@b+3)^0,c
 15196   003438  0E00               	movlw	0
 15197   00343A  6E42               	movwf	___fldiv@sign^0,c
 15198   00343C                     l4251:
 15199   00343C  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15200   003440  A049               	btfss	___fldiv@bexp^0,0,c
 15201   003442  EF25  F01A         	goto	u3771
 15202   003446  EF27  F01A         	goto	u3770
 15203   00344A                     u3771:
 15204   00344A  EF2A  F01A         	goto	l4257
 15205   00344E                     u3770:
 15206   00344E  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15207   003450  EF2B  F01A         	goto	l4259
 15208   003454                     l4257:
 15209   003454  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15210   003456                     l4259:
 15211   003456  90D8               	bcf	status,0,c
 15212   003458  3049               	rrcf	___fldiv@bexp^0,w,c
 15213   00345A  6E35               	movwf	(___fldiv@b+3)^0,c
 15214   00345C  EFE1  F018         	goto	l4173
 15215   003460                     l1268:
 15216   003460  0012               	return		;funcret
 15217   003462                     __end_of___fldiv:
 15218                           	callstack 0
 15219                           
 15220 ;; *************** function _Buttons_init *****************
 15221 ;; Defined at:
 15222 ;;		line 43 in file "LED_buttons.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;		None
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;		None
 15227 ;; Return value:  Size  Location     Type
 15228 ;;                  1    wreg      void 
 15229 ;; Registers used:
 15230 ;;		None
 15231 ;; Tracked objects:
 15232 ;;		On entry : 0/0
 15233 ;;		On exit  : 0/0
 15234 ;;		Unchanged: 0/0
 15235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15240 ;;Total ram usage:        0 bytes
 15241 ;; Hardware stack levels used: 1
 15242 ;; Hardware stack levels required when called: 1
 15243 ;; This function calls:
 15244 ;;		Nothing
 15245 ;; This function is called by:
 15246 ;;		_main
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text80
 15251   0060A0                     __ptext80:
 15252                           	callstack 0
 15253   0060A0                     _Buttons_init:
 15254                           	callstack 29
 15255   0060A0                     
 15256                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15257   0060A0  8486               	bsf	134,2,c	;volatile
 15258                           
 15259                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15260   0060A2  010E               	movlb	14	; () banked
 15261   0060A4  95B4               	bcf	180,2,b	;volatile
 15262                           
 15263                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15264   0060A6  8686               	bsf	134,3,c	;volatile
 15265                           
 15266                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15267   0060A8  97B4               	bcf	180,3,b	;volatile
 15268   0060AA                     
 15269                           ; BSR set to: 14
 15270   0060AA  0012               	return		;funcret
 15271   0060AC                     __end_of_Buttons_init:
 15272                           	callstack 0
 15273                           
 15274 ;; *************** function _HighISR *****************
 15275 ;; Defined at:
 15276 ;;		line 23 in file "interrupts.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;		None
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;		None
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  1    wreg      void 
 15283 ;; Registers used:
 15284 ;;		wreg, status,2
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15294 ;;Total ram usage:        0 bytes
 15295 ;; Hardware stack levels used: 1
 15296 ;; This function calls:
 15297 ;;		Nothing
 15298 ;; This function is called by:
 15299 ;;		Interrupt level 2
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	intcode
 15304   000008                     __pintcode:
 15305                           	callstack 0
 15306   000008                     _HighISR:
 15307                           	callstack 22
 15308                           
 15309                           ; BSR set to: 14
 15310                           ;incstack = 0
 15311   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15312   00000A                     
 15313                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15314   00000A  010E               	movlb	14	; () banked
 15315   00000C  AB33               	btfss	51,5,b	;volatile
 15316   00000E  EF0B  F000         	goto	i2u561_41
 15317   000012  EF0D  F000         	goto	i2u561_40
 15318   000016                     i2u561_41:
 15319   000016  EF18  F000         	goto	i2l225
 15320   00001A                     i2u561_40:
 15321   00001A                     
 15322                           ; BSR set to: 14
 15323                           ;interrupts.c: 26:         TMR0H=0;
 15324   00001A  0E00               	movlw	0
 15325   00001C  6ED4               	movwf	212,c	;volatile
 15326                           
 15327                           ;interrupts.c: 27:         TMR0L=0;
 15328   00001E  0E00               	movlw	0
 15329   000020  6ED3               	movwf	211,c	;volatile
 15330                           
 15331                           ;interrupts.c: 28:         lost_flag=1;
 15332   000022  0E00               	movlw	0
 15333   000024  0101               	movlb	1	; () banked
 15334   000026  6F19               	movwf	(_lost_flag+1)& (0+255),b
 15335   000028  0E01               	movlw	1
 15336   00002A  6F18               	movwf	_lost_flag& (0+255),b
 15337   00002C                     
 15338                           ; BSR set to: 1
 15339                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15340   00002C  010E               	movlb	14	; () banked
 15341   00002E  9B33               	bcf	51,5,b	;volatile
 15342   000030                     i2l225:
 15343                           
 15344                           ; BSR set to: 14
 15345   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15346   000032  0011               	retfie		f
 15347   000034                     __end_of_HighISR:
 15348                           	callstack 0
 15349                           
 15350                           	psect	rparam
 15351   000000                     
 15352                           	psect	temp
 15353   00005F                     btemp:
 15354                           	callstack 0
 15355   00005F                     	ds	1
 15356   000000                     int$flags	set	btemp
 15357   000000                     wtemp8	set	btemp+1
 15358   000000                     ttemp5	set	btemp+1
 15359   000000                     ttemp6	set	btemp+4
 15360   000000                     ttemp7	set	btemp+8
 15361                           
 15362                           	psect	idloc
 15363                           
 15364                           ;Config register IDLOC0 @ 0x200000
 15365                           ;	unspecified, using default values
 15366   200000                     	org	2097152
 15367   200000  0FFF               	dw	4095
 15368                           
 15369                           ;Config register IDLOC1 @ 0x200002
 15370                           ;	unspecified, using default values
 15371   200002                     	org	2097154
 15372   200002  0FFF               	dw	4095
 15373                           
 15374                           ;Config register IDLOC2 @ 0x200004
 15375                           ;	unspecified, using default values
 15376   200004                     	org	2097156
 15377   200004  0FFF               	dw	4095
 15378                           
 15379                           ;Config register IDLOC3 @ 0x200006
 15380                           ;	unspecified, using default values
 15381   200006                     	org	2097158
 15382   200006  0FFF               	dw	4095
 15383                           
 15384                           ;Config register IDLOC4 @ 0x200008
 15385                           ;	unspecified, using default values
 15386   200008                     	org	2097160
 15387   200008  0FFF               	dw	4095
 15388                           
 15389                           ;Config register IDLOC5 @ 0x20000A
 15390                           ;	unspecified, using default values
 15391   20000A                     	org	2097162
 15392   20000A  0FFF               	dw	4095
 15393                           
 15394                           ;Config register IDLOC6 @ 0x20000C
 15395                           ;	unspecified, using default values
 15396   20000C                     	org	2097164
 15397   20000C  0FFF               	dw	4095
 15398                           
 15399                           ;Config register IDLOC7 @ 0x20000E
 15400                           ;	unspecified, using default values
 15401   20000E                     	org	2097166
 15402   20000E  0FFF               	dw	4095
 15403                           
 15404                           	psect	config
 15405                           
 15406                           ;Config register CONFIG1L @ 0x300000
 15407                           ;	External Oscillator mode Selection bits
 15408                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15409                           ;	Power-up default value for COSC bits
 15410                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15411   300000                     	org	3145728
 15412   300000  AA                 	db	170
 15413                           
 15414                           ;Config register CONFIG1H @ 0x300001
 15415                           ;	unspecified, using default values
 15416                           ;	Clock Out Enable bit
 15417                           ;	CLKOUTEN = 0x1, unprogrammed default
 15418                           ;	Clock Switch Enable bit
 15419                           ;	CSWEN = 0x1, unprogrammed default
 15420                           ;	Fail-Safe Clock Monitor Enable bit
 15421                           ;	FCMEN = 0x1, unprogrammed default
 15422   300001                     	org	3145729
 15423   300001  FF                 	db	255
 15424                           
 15425                           ;Config register CONFIG2L @ 0x300002
 15426                           ;	unspecified, using default values
 15427                           ;	Master Clear Enable bit
 15428                           ;	MCLRE = 0x1, unprogrammed default
 15429                           ;	Power-up Timer Enable bit
 15430                           ;	PWRTE = 0x1, unprogrammed default
 15431                           ;	Low-power BOR enable bit
 15432                           ;	LPBOREN = 0x1, unprogrammed default
 15433                           ;	Brown-out Reset Enable bits
 15434                           ;	BOREN = 0x3, unprogrammed default
 15435   300002                     	org	3145730
 15436   300002  FF                 	db	255
 15437                           
 15438                           ;Config register CONFIG2H @ 0x300003
 15439                           ;	unspecified, using default values
 15440                           ;	Brown Out Reset Voltage selection bits
 15441                           ;	BORV = 0x3, unprogrammed default
 15442                           ;	ZCD Disable bit
 15443                           ;	ZCD = 0x1, unprogrammed default
 15444                           ;	PPSLOCK bit One-Way Set Enable bit
 15445                           ;	PPS1WAY = 0x1, unprogrammed default
 15446                           ;	Stack Full/Underflow Reset Enable bit
 15447                           ;	STVREN = 0x1, unprogrammed default
 15448                           ;	Debugger Enable bit
 15449                           ;	DEBUG = 0x1, unprogrammed default
 15450                           ;	Extended Instruction Set Enable bit
 15451                           ;	XINST = 0x1, unprogrammed default
 15452   300003                     	org	3145731
 15453   300003  FF                 	db	255
 15454                           
 15455                           ;Config register CONFIG3L @ 0x300004
 15456                           ;	WDT Period Select bits
 15457                           ;	WDTCPS = 0x1F, unprogrammed default
 15458                           ;	WDT operating mode
 15459                           ;	WDTE = OFF, WDT Disabled
 15460   300004                     	org	3145732
 15461   300004  9F                 	db	159
 15462                           
 15463                           ;Config register CONFIG3H @ 0x300005
 15464                           ;	unspecified, using default values
 15465                           ;	WDT Window Select bits
 15466                           ;	WDTCWS = 0x7, unprogrammed default
 15467                           ;	WDT input clock selector
 15468                           ;	WDTCCS = 0x7, unprogrammed default
 15469   300005                     	org	3145733
 15470   300005  FF                 	db	255
 15471                           
 15472                           ;Config register CONFIG4L @ 0x300006
 15473                           ;	unspecified, using default values
 15474                           ;	Write Protection Block 0
 15475                           ;	WRT0 = 0x1, unprogrammed default
 15476                           ;	Write Protection Block 1
 15477                           ;	WRT1 = 0x1, unprogrammed default
 15478                           ;	Write Protection Block 2
 15479                           ;	WRT2 = 0x1, unprogrammed default
 15480                           ;	Write Protection Block 3
 15481                           ;	WRT3 = 0x1, unprogrammed default
 15482                           ;	Write Protection Block 3
 15483                           ;	WRT4 = 0x1, unprogrammed default
 15484                           ;	Write Protection Block 3
 15485                           ;	WRT5 = 0x1, unprogrammed default
 15486                           ;	Write Protection Block 3
 15487                           ;	WRT6 = 0x1, unprogrammed default
 15488                           ;	Write Protection Block 3
 15489                           ;	WRT7 = 0x1, unprogrammed default
 15490   300006                     	org	3145734
 15491   300006  FF                 	db	255
 15492                           
 15493                           ;Config register CONFIG4H @ 0x300007
 15494                           ;	unspecified, using default values
 15495                           ;	Configuration Register Write Protection bit
 15496                           ;	WRTC = 0x1, unprogrammed default
 15497                           ;	Boot Block Write Protection bit
 15498                           ;	WRTB = 0x1, unprogrammed default
 15499                           ;	Data EEPROM Write Protection bit
 15500                           ;	WRTD = 0x1, unprogrammed default
 15501                           ;	Scanner Enable bit
 15502                           ;	SCANE = 0x1, unprogrammed default
 15503                           ;	Low Voltage Programming Enable bit
 15504                           ;	LVP = 0x1, unprogrammed default
 15505   300007                     	org	3145735
 15506   300007  FF                 	db	255
 15507                           
 15508                           ;Config register CONFIG5L @ 0x300008
 15509                           ;	unspecified, using default values
 15510                           ;	UserNVM Program Memory Code Protection bit
 15511                           ;	CP = 0x1, unprogrammed default
 15512                           ;	DataNVM Memory Code Protection bit
 15513                           ;	CPD = 0x1, unprogrammed default
 15514   300008                     	org	3145736
 15515   300008  FF                 	db	255
 15516                           
 15517                           ;Config register CONFIG5H @ 0x300009
 15518                           ;	unspecified, using default values
 15519   300009                     	org	3145737
 15520   300009  FF                 	db	255
 15521                           
 15522                           ;Config register CONFIG6L @ 0x30000A
 15523                           ;	unspecified, using default values
 15524                           ;	Table Read Protection Block 0
 15525                           ;	EBTR0 = 0x1, unprogrammed default
 15526                           ;	Table Read Protection Block 1
 15527                           ;	EBTR1 = 0x1, unprogrammed default
 15528                           ;	Table Read Protection Block 2
 15529                           ;	EBTR2 = 0x1, unprogrammed default
 15530                           ;	Table Read Protection Block 3
 15531                           ;	EBTR3 = 0x1, unprogrammed default
 15532                           ;	Table Read Protection Block 4
 15533                           ;	EBTR4 = 0x1, unprogrammed default
 15534                           ;	Table Read Protection Block 5
 15535                           ;	EBTR5 = 0x1, unprogrammed default
 15536                           ;	Table Read Protection Block 6
 15537                           ;	EBTR6 = 0x1, unprogrammed default
 15538                           ;	Table Read Protection Block 7
 15539                           ;	EBTR7 = 0x1, unprogrammed default
 15540   30000A                     	org	3145738
 15541   30000A  FF                 	db	255
 15542                           
 15543                           ;Config register CONFIG6H @ 0x30000B
 15544                           ;	unspecified, using default values
 15545                           ;	Boot Block Table Read Protection bit
 15546                           ;	EBTRB = 0x1, unprogrammed default
 15547   30000B                     	org	3145739
 15548   30000B  FF                 	db	255
 15549                           tosu	equ	0xFFF
 15550                           tosh	equ	0xFFE
 15551                           tosl	equ	0xFFD
 15552                           stkptr	equ	0xFFC
 15553                           pclatu	equ	0xFFB
 15554                           pclath	equ	0xFFA
 15555                           pcl	equ	0xFF9
 15556                           tblptru	equ	0xFF8
 15557                           tblptrh	equ	0xFF7
 15558                           tblptrl	equ	0xFF6
 15559                           tablat	equ	0xFF5
 15560                           prodh	equ	0xFF4
 15561                           prodl	equ	0xFF3
 15562                           indf0	equ	0xFEF
 15563                           postinc0	equ	0xFEE
 15564                           postdec0	equ	0xFED
 15565                           preinc0	equ	0xFEC
 15566                           plusw0	equ	0xFEB
 15567                           fsr0h	equ	0xFEA
 15568                           fsr0l	equ	0xFE9
 15569                           wreg	equ	0xFE8
 15570                           indf1	equ	0xFE7
 15571                           postinc1	equ	0xFE6
 15572                           postdec1	equ	0xFE5
 15573                           preinc1	equ	0xFE4
 15574                           plusw1	equ	0xFE3
 15575                           fsr1h	equ	0xFE2
 15576                           fsr1l	equ	0xFE1
 15577                           bsr	equ	0xFE0
 15578                           indf2	equ	0xFDF
 15579                           postinc2	equ	0xFDE
 15580                           postdec2	equ	0xFDD
 15581                           preinc2	equ	0xFDC
 15582                           plusw2	equ	0xFDB
 15583                           fsr2h	equ	0xFDA
 15584                           fsr2l	equ	0xFD9
 15585                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        6
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     150
    BANK1           256    108     222
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2825$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2741$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2741$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  411479
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35627
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35272
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34919
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29073
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  159859
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25277
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4   16076
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25125
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9330
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23701
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4006
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _reverseDetect
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _stop
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DE       7       86.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      96       5       93.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 22:44:58 2023

               _color_read_Red 5AF8                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5AA8                   ___fldiv@sign 0042                _color_read_Blue 5B98  
                           l51 5AF6                             l60 5BE6                             l45 59B2  
                           l54 5B46                             l63 56B0                             l48 6030  
                           l57 5B96                             l66 378E                             l76 189C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 43BA  
             _color_read_Green 5B48                readColours@vals 000C              ??_Interrupts_init 0001  
                          l130 5F9C                            l204 5F72                            l133 5F9E  
                          l142 60B4                            l151 5DE0                            l136 5FC4  
                          l145 60BE                            l219 609E                            l139 60C8  
                          l500 5C82                            l148 6092                            l340 2356  
                          l503 5CD0                            l512 57BC                            l521 5E5E  
                          l506 570A                            l530 5A04                            l610 3D4C  
                          l186 606E                            l362 278E                            l451 53CC  
                          l515 5764                            l195 6072                            l524 5E9C  
                          l445 4858                            l509 5814                            l533 5A56  
                          l373 27DA                            l542 5524                            l622 3D74  
                          l438 534E                            l198 6086                            l527 55F0  
                          l536 590E                            l616 3D4C                            l800 46EC  
                          l552 43D8                            l545 4E44                            l562 4514  
                          l554 442E                            l475 52C6                            l491 5228  
                          l459 518A                            l467 50EC                            l539 5960  
                          l483 4FA4                            l563 454A                            l555 4488  
                          l548 4EFA                            l652 5EF6                            l564 4564  
                          l556 44F8                            l645 6050                            l813 49BC  
                          l557 44C0                            l494 5F28                            l655 5F0C  
                          l680 5FEA                            l497 5F42                            l649 5652  
                          l683 60AA                            l686 6010                            l951 4B80  
                          l960 5ED4                            l945 504E                            l956 4BC6  
                          l983 4AC2                            _abs 5DE2                            _pad 53CE  
                          _rel 014C                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         ?_abs 0013                           l1300 2D62                           l1310 2FBE  
                         l1214 29CC                           l1231 2AE6                           l1223 2C9C  
                         l1215 29BA                           l1304 30C6                           l1240 2BB6  
                         l1216 2980                           l1400 5446                           l1241 2BA4  
                         l1307 2F58                           l1500 586A                           l1317 3088  
                         l1309 2FD0                           l1341 425C                           l1405 3E02  
                         l1270 32C0                           l1510 4CC4                           l1430 2296  
                         l1407 3E0A                           l1256 5D16                           l1344 43B8  
                         l1184 54BA                           l1408 3E50                           l1281 337E  
                         l1273 3284                           l1177 54B2                           l1433 1C30  
                         l1282 336C                           l1355 4350                           l4011 5472  
                         l4003 5448                           l1515 5E18                           l1419 3FF2  
                         l1435 1A76                           l1268 3460                           l1348 42F4  
                         l1524 4204                           l1364 58BC                           l4021 54A6  
                         l4013 5480                           l4005 5450                           l4101 4890  
                         l1518 5E20                           l1279 3306                           l4023 54AC  
                         l4015 5486                           l4007 5462                           l4111 48F8  
                         l4103 489E                           l4031 5D7E                           l1527 4148  
                         l1535 557A                           l1463 2078                           l1544 5AA6  
                         l4201 3274                           l4017 549C                           l4009 546A  
                         l4041 4776                           l4033 46EE                           l4113 4906  
                         l4121 496C                           l4105 48BE                           l4025 5D5C  
                         l5001 37B8                           l1538 558A                           l4211 32BE  
                         l4203 3282                           l4131 30D4                           l4019 54A4  
                         l4043 47B8                           l4035 470A                           l4051 456A  
                         l4123 497C                           l4115 4934                           l4107 48DC  
                         l4027 5D68                           l5011 3808                           l5003 37C6  
                         l1556 4D8E                           l1564 5D9E                           l1396 53F0  
                         l4221 3304                           l4213 32D0                           l4205 328E  
                         l4141 3114                           l4133 30E2                           l4301 2D72  
                         l4045 47D4                           l4037 475E                           l5101 5AF8  
                         l4061 45CA                           l4053 4578                           l4125 499C  
                         l4117 4954                           l4109 48E4                           l4029 5D7A  
                         l1573 5D5A                           l5021 38BE                           l5013 3828  
                         l5005 37D4                           l1478 3A94                           l4231 3364  
                         l4215 32E6                           l4223 3316                           l4207 32AC  
                         l4151 313A                           l4143 3116                           l4135 30E4  
                         l4311 2DAC                           l4303 2D82                           l4047 4818  
                         l4039 4772                           l5103 5B3E                           l4071 4614  
                         l4063 45CE                           l4055 4598                           l4119 4966  
                         l1567 60D0                           l5023 38D4                           l5031 38EC  
                         l5015 387E                           l5007 37D8                           l4241 33D2  
                         l4225 3324                           l4217 32EC                           l4209 32AE  
                         l4161 317A                           l4153 3148                           l4137 30F4  
                         l4145 311E                           l4129 30C8                           l4321 2DFE  
                         l4313 2DC2                           l5201 43A8                           l5113 5B98  
                         l5121 6082                           l4081 4684                           l4073 4622  
                         l4065 45DA                           l4057 459C                           l4049 4566  
                         l5041 39AA                           l5025 38DC                           l5033 391E  
                         l5009 37E8                           l4251 343C                           l4235 338E  
                         l4243 33D6                           l4227 3328                           l4219 32F6  
                         l4171 31BA                           l4163 317C                           l4155 314A  
                         l4147 312E                           l4139 3104                           l4411 5022  
                         l4403 4FA6                           l4331 2E44                           l4323 2E0C  
                         l4315 2DCE                           l4307 2D96                           l5131 5910  
                         l5123 5E22                           l5115 5BDE                           l5107 5B48  
                         l4083 4696                           l4075 4634                           l4067 45F8  
                         l4059 45AA                           l5051 3A26                           l5043 39D4  
                         l5035 3942                           l5027 38E4                           l5019 38AE  
                         l5211 5860                           l4253 3440                           l4245 33F0  
                         l4237 339A                           l4229 3336                           l4181 31EA  
                         l4173 31C2                           l4157 315A                           l4165 3184  
                         l4149 3134                           l4413 5046                           l4405 4FD4  
                         l4421 4AF2                           l4341 2EB2                           l4333 2E5E  
                         l4325 2E18                           l4317 2DE6                           l4309 2DA2  
                         l5301 10C0                           l5221 5980                           l5125 58BE  
                         l5141 4F50                           l5133 4EFC                           l5109 5B8E  
                         l4077 4662                           l4069 4600                           l4085 469C  
                         l4093 485A                           l4501 5410                           l5045 39F4  
                         l5037 3976                           l5053 3A56                           l5205 5816  
                         l4255 344E                           l4247 3406                           l4239 33A8  
                         l4191 3228                           l4183 31EA                           l4175 31C6  
                         l4167 3194                           l4159 316A                           l4415 504C  
                         l4407 4FE4                           l4431 4B60                           l4423 4B02  
                         l4351 2F48                           l4343 2EDC                           l4335 2E6E  
                         l4327 2E28                           l4319 2DF2                           l4271 2CB8  
                         l5311 1236                           l5303 1160                           l5151 57D2  
                         l5231 59A2                           l5223 598A                           l5215 5962  
                         l5127 558C                           l5135 4F20                           l5143 4F68  
                         l5119 6072                           l4087 46AC                           l4079 4682  
                         l4095 485E                           l4503 5414                           l4511 4BC8  
                         l5207 5822                           l4257 3454                           l4249 3420  
                         l4193 3238                           l4169 31AA                           l4409 5012  
                         l4433 4B6E                           l4425 4B30                           l4361 2F88  
                         l4353 2F56                           l4345 2F12                           l4337 2E8A  
                         l4329 2E34                           l4281 2CF0                           l4273 2CBA  
                         l3801 27DE                           l5161 4218                           l5321 13CA  
                         l5313 1292                           l5305 1170                           l4601 5354  
                         l5153 57E8                           l5081 5F74                           l5241 59AC  
                         l5233 59A4                           l5225 5994                           l5217 5966  
                         l5129 5E60                           l5145 4F80                           l5137 4F38  
                         l4089 46CC                           l4097 486C                           l4505 5432  
                         l4441 5E9E                           l4513 4BE8                           l5057 3A68  
                         l5209 5840                           l4259 3456                           l4195 3248  
                         l4187 31FE                           l4179 31DA                           l4435 4BBE  
                         l4427 4B40                           l4419 4AC4                           l4371 2FFA  
                         l4363 2FB6                           l4355 2F68                           l4347 2F20  
                         l4339 2E96                           l4291 2D1C                           l4283 2D00  
                         l4275 2CCA                           l4267 2C9E                           l3811 281A  
                         l3803 27EA                           l5171 4296                           l5163 4226  
                         l5331 143A                           l5315 130E                           l5307 11A8  
                         l4611 53B4                           l4603 536C                           l5091 5F8A  
                         l5083 5F7E                           l5243 59AE                           l5235 59A6  
                         l5227 599E                           l5219 5970                           l5251 352E  
                         l5155 4D90                           l5147 4F98                           l5139 4F44  
                         l4099 488C                           l4507 5DE2                           l4443 5EB4  
                         l4451 49D4                           l4515 4C26                           l4523 4C66  
                         l4197 3250                           l4189 3218                           l4437 4BC4  
                         l4429 4B4E                           l4381 3070                           l4373 3024  
                         l4357 2F76                           l4349 2F3E                           l4293 2D2C  
                         l4285 2D06                           l4277 2CDA                           l4269 2CAA  
                         l3901 29DA                           l3821 284A                           l3813 282A  
                         l3805 27F8                           l5181 42EA                           l5173 429E  
                         l5165 426C                           l5405 17C4                           l5341 14AA  
                         l5309 11BA                           l5317 1366                           l4605 5378  
                         l5149 57BE                           l4621 5142                           l4613 50EE  
                         l5085 5F84                           l5093 6014                           l5245 59B0  
                         l5237 59A8                           l5229 59A0                           l5261 36F6  
                         l5253 3562                           l5157 4E46                           l4509 5DFC  
                         l4701 3F92                           l4445 5EC4                           l4461 4A24  
                         l4525 4C78                           l4517 4C4E                           l4541 3FF4  
                         l4533 5D18                           l5501 4448                           ?_pad 0011  
                         l4199 3260                           l4383 308C                           l4391 30B2  
                         l4367 2FE0                           l4375 3028                           l4359 2F7A  
                         l4295 2D3C                           l4287 2D0C                           l4279 2CEA  
                         l3911 2A1C                           l3903 29EA                           l3831 2874  
                         l3823 285C                           l3815 282C                           l3807 27FA  
                         l5191 4360                           l5183 4326                           l5175 42AA  
                         l5167 4282                           l5159 4208                           l5407 17F6  
                         l5415 1834                           l5343 14E4                           l5319 1398  
                         l5327 13D6                           l5271 0ED8                           l5263 0E3E  
                         l4607 5384                           l4615 5112                           l4623 515A  
                         l4631 508C                           l5087 5F86                           l5239 59AA  
                         l5255 35F6                           l5431 605C                           l5095 5AA8  
                         l5247 5654                           l4703 3FAC                           l4471 4A4E  
                         l4463 4A28                           l4455 49E8                           l4519 4C5A  
                         l4543 4014                           l4535 5D28                           l5511 4482  
                         l5503 4456                           l4393 30B6                           l4385 309C  
                         l4377 3042                           l4369 2FEC                           l4297 2D4C  
                         l4289 2D1A                           l3921 2A4A                           l3913 2A2A  
                         l3833 2884                           l3841 28AE                           l3825 285E  
                         l3809 280A                           l3817 2834                           l5193 4364  
                         l5185 4332                           l5177 42DC                           l5417 1866  
                         l5409 1828                           l5345 1522                           l5353 1550  
                         l5329 1408                           l5337 1446                           l5281 0F68  
                         l5273 0F0C                           l5265 0E68                           l4609 539C  
                         l4641 518C                           l4625 5172                           l4617 512A  
                         l4633 5098                           l5089 5F88                           l5257 362A  
                         l5249 3462                           l5601 3C74                           l5433 605E  
                         l5097 5AEE                           l5441 5F44                           l4705 3FBC  
                         l4481 4A76                           l4473 4A58                           l4465 4A36  
                         l4457 4A12                           l4449 49BE                           l4529 4CBC  
                         l4561 41BC                           l4553 40FC                           l4545 406A  
                         l4537 5526                           l4801 1C38                           l4721 18C6  
                         l4713 189E                           l5521 44CE                           l5513 4496  
                         l5505 4464                           l4387 30AA                           l4379 3056  
                         l4299 2D52                           l3931 2AB6                           l3923 2A54  
                         l3915 2A36                           l3907 29FE                           l3851 28E6  
                         l3843 28BE                           l3835 2894                           l3827 2864  
                         l3819 2844                           l5195 4388                           l5187 4340  
                         l5179 42DE                           l5371 1644                           l5355 158A  
                         l5363 15D4                           l5339 1478                           l5291 102E  
                         l5283 0F9A                           l5267 0E74                           l5451 5FC6  
                         l4643 51B0                           l4651 51F8                           l4619 5136  
                         l4635 50A4                           l4627 5050                           l5259 36C2  
                         l5611 3D60                           l5603 3CA0                           l5435 6068  
                         l5443 5F48                           l4707 3FC2                           l4483 4A82  
                         l4475 4A62                           l4459 4A14                           l4563 41E4  
                         l4555 4138                           l4547 407E                           l4539 5544  
                         l4571 5A6C                           l4811 1C68                           l4803 1C48  
                         l4731 191C                           l4723 18EA                           l4715 18A4  
                         l5531 4506                           l5523 44D8                           l5515 44A0  
                         l5507 4468                           l5453 60A0                           l4389 30AC  
                         l3933 2AC6                           l3917 2A3A                           l3909 2A0E  
                         l3925 2A5A                           l3861 28FA                           l3853 28EA  
                         l3845 28D0                           l3837 28A4                           l3829 2872  
                         l4397 5CD2                           l5197 4398                           l5189 435E  
                         l5381 16B4                           l5357 15C8                           l5293 104A  
                         l5285 0FA2                           l5269 0EA4                           l4653 5210  
                         l4645 51C8                           l5621 5510                           l4629 5074  
                         l4637 50BC                           l4581 5F9E                           l5541 55F2  
                         l5613 3D6A                           l5605 3CCA                           l5461 52DE  
                         l5437 606A                           l5429 6052                           l5445 5F56  
                         l3781 4CC6                           l4493 53CE                           l4709 3FD2  
                         l4661 3D76                           l4485 4A92                           l4565 41F4  
                         l4549 408C                           l4557 416C                           l4573 5A78  
                         l4901 2102                           l4813 1C7A                           l4821 1CBA  
                         l4805 1C54                           l4741 196C                           l4733 1928  
                         l4725 18F4                           l4717 18B4                           l5533 4516  
                         l5525 44DA                           l5517 44A2                           l5509 4480  
                         l5701 23E2                           l3951 2B48                           l3943 2B20  
                         l3927 2A80                           l3935 2AD6                           l3919 2A48  
                         l3871 290E                           l3863 28FE                           l3855 28EE  
                         l3847 28DE                           l3839 28A6                           l4399 5CE2  
                         l5199 43A6                           l5383 16F2                           l5391 173C  
                         l5367 15E0                           l5295 10A0                           l5287 0FF6  
                         l5279 0F16                           l4591 5272                           l5551 5720  
                         l4647 51D4                           l4655 5F0E                           l4639 50D4  
                         l4583 5FAE                           l5543 55F8                           l5607 3CF6  
                         l5471 5328                           l5463 52E0                           l5455 52C8  
                         l5439 606C                           l5447 5F5A                           l3791 4D48  
                         l3783 4CD8                           l4495 53DC                           l4671 3DF6  
                         l4663 3D96                           l4487 4AA2                           l4559 41A8  
                         l4575 5A7C                           l4903 2108                           l4911 21A0  
                         l4831 1DA2                           l4823 1CC2                           l4815 1C88  
                         l4807 1C5C                           l4751 19A0                           l4743 1970  
                         l4735 1930                           l4727 18FC                           l4719 18C2  
                         l5527 44F2                           l5519 44BA                           l5535 452E  
                         l5711 2438                           l5703 23E6                           l5631 229C  
                         l3953 2B50                           l3945 2B2A                           l3937 2AFC  
                         l3929 2AB4                           l3961 2B74                           l3881 2922  
                         l3873 2912                           l3865 2902                           l3857 28F2  
                         l3849 28E2                           l5393 177A                           l5385 1730  
                         l5369 1612                           l5377 1650                           l5289 1028  
                         l4593 527E                           l4585 522A                           l5553 5738  
                         l5449 6094                           l4649 51E0                           l4657 5F12  
                         l5617 54BC                           l5545 562A                           l5609 3D20  
                         l5481 5342                           l5473 532A                           l5465 52F6  
                         l5457 52DA                           l3785 4CEA                           l4497 53E8  
                         l4681 3E44                           l4673 3E12                           l4665 3DAA  
                         l4489 4AB2                           l4577 5A88                           l4569 5A58  
                         l4921 2222                           l4913 21BE                           l4905 2160  
                         l4841 1E60                           l4833 1DD6                           l4825 1CD2  
                         l4817 1CA0                           l4809 1C64                           l4761 19FC  
                         l4745 1976                           l4729 190C                           l4737 1934  
                         l5561 588E                           l5537 453C                           l5529 44F8  
                         l5801 26C6                           l5721 2492                           l5713 244C  
                         l5705 23FA                           l5641 22B0                           l5633 22A0  
                         l3971 2BC6                           l3963 2B78                           l3955 2B54  
                         l3947 2B38                           l3939 2B0C                           l3891 299A  
                         l3883 294C                           l3875 2916                           l3867 2906  
                         l3859 28F6                           l5395 17B8                           l5379 1682  
                         l5299 10AC                           l3795 5FEC                           l4587 524E  
                         l4595 5296                           l4659 5F22                           l5619 54F8  
                         l5491 604E                           l5547 5636                           l5571 3A96  
                         l5483 534C                           l5475 5334                           l5467 52FA  
                         l5459 52DC                           l3787 4CF4                           l4499 53FC  
                         l4691 3EEA                           l4683 3E4C                           l4675 3E22  
                         l4667 3DBA                           l4579 5A8C                           l4931 2276  
                         l4923 2230                           l4915 21DA                           l4907 2194  
                         l4851 1EFC                           l4843 1E76                           l4827 1CE6  
                         l4835 1DDC                           l4819 1CB2                           l4763 1A02  
                         l4747 197E                           l4739 195A                           l4755 19C0  
                         l5563 58AA                           l5555 586C                           l5539 454C  
                         l5803 26DA                           l5731 252E                           l5715 2468  
                         l5707 2412                           l5723 249A                           l5651 22CE  
                         l5643 22BC                           l5635 22A4                           l3981 2C2C  
                         l3973 2BD2                           l3965 2B86                           l3957 2B64  
                         l3949 2B3A                           l3893 299E                           l3885 2968  
                         l3877 291A                           l3869 290A                           l3797 6008  
                         l4597 52AE                           l4589 5266                           l5549 570C  
                         l5485 6032                           l4941 608E                           l5581 3AC6  
                         l5573 3AAA                           l5477 5336                           l5469 531E  
                         l3789 4D12                           l4693 3EF0                           l4685 3E58  
                         l4677 3E28                           l4669 3DDA                           l4925 2248  
                         l4917 21E2                           l4909 219C                           l4853 1F52  
                         l4861 1FA4                           l4845 1EA8                           l4837 1DFA  
                         l4829 1D4A                           l4781 1A8C                           l4765 1A0A  
                         l4757 19E6                           l4773 1A26                           l4749 1996  
                         l5557 587E                           l5493 43BA                           l5821 2758  
                         l5805 26EE                           l5813 270C                           l5733 2542  
                         l5741 2568                           l5725 24B8                           l5717 2482  
                         l5709 242C                           l5661 22EE                           l5653 22D6  
                         l5645 22C0                           l5637 22A8                           l5629 2298  
                         l3991 2C74                           l3983 2C3C                           l3975 2BE0  
                         l3967 2B9C                           l3959 2B66                           l3895 29AC  
                         l3887 2978                           l3879 291E                           l4599 5350  
                         l5487 603A                           l5567 59B4                           l4935 60C0  
                         l4943 60B6                           l5591 3B9E                           l5583 3AF4  
                         l5575 3AAC                           l5479 5340                           l4951 5DA2  
                         l4695 3EF6                           l4687 3E62                           l4679 3E38  
                         l4927 2258                           l4919 21F2                           l4871 1FD6  
                         l4863 1FB4                           l4855 1F58                           l4847 1EB8  
                         l4839 1E2E                           l4791 1B82                           l4783 1AC0  
                         l4775 1A40                           l4759 19F8                           l5559 5886  
                         l5495 43BC                           l5823 276C                           l5815 2720  
                         l5807 26F2                           l5743 257C                           l5735 2546  
                         l5727 250E                           l5719 248A                           l5831 2792  
                         l5671 230A                           l5663 22F2                           l5655 22DE  
                         l5647 22C6                           l5639 22AC                           l3993 2C76  
                         l3985 2C5C                           l3977 2C1A                           l3897 29AE  
                         l3889 298E                           l5569 5A06                           l5489 6044  
                         l4937 60C4                           l4945 60BA                           l5593 3BC8  
                         l5585 3B1C                           l5577 3AB4                           l4961 5DDE  
                         l4953 5DA6                           l4689 3E68                           l4697 3F5A  
                         l4929 226E                           l4881 20A8                           l4873 204E  
                         l4865 1FBC                           l4857 1F8C                           l4849 1EC8  
                         l4793 1BB6                           l4785 1AFE                           l5497 43DA  
                         l5833 27A4                           l5825 2770                           l5817 2724  
                         l5809 26F6                           l5761 25DE                           l5745 2590  
                         l5753 25AE                           l5737 254A                           l5729 251A  
                         l5681 233A                           l5673 2312                           l5665 22FA  
                         l5657 22E6                           l5649 22CA                           l3995 2C7C  
                         l3987 2C60                           l3979 2C1C                           l3899 29B8  
                         l4971 5C36                           l4939 608A                           l5595 3BF4  
                         l5587 3B48                           l4955 5DAE                           l4947 60AC  
                         l4699 3F74                           l4891 20CE                           l4883 20AC  
                         l4875 206E                           l4867 1FC2                           l4859 1FA0  
                         l4795 1BBE                           l4787 1B30                           l4779 1A86  
                         l5499 4430                           l5835 27A8                           l5819 2740  
                         l5827 2778                           l5771 2620                           l5755 25C2  
                         l5747 2594                           l5739 255C                           l5691 238C  
                         l5683 233C                           l5675 231A                           l5667 2302  
                         l5659 22EA                           l3997 2C8A                           l3989 2C6E  
                         l4981 5C98                           l4973 5C4A                           l4965 5ED6  
                         l5597 3C1E                           l5589 3B72                           l4957 5DB6  
                         l4949 60B0                           l4893 20D4                           l4885 20B2  
                         l4877 208A                           l4869 1FCA                           l4789 1B6E  
                         l5781 2662                           l5773 2624                           l5757 25D6  
                         l5765 25F4                           l5749 2598                           l5693 23A0  
                         l5685 2364                           l5677 231E                           l5669 230A  
                         l3999 2C8C                           l4991 56DE                           l4983 5CA4  
                         l4975 5C56                           l4967 5EE2                           l5599 3C4A  
                         l4959 5DDC                           l4887 20BA                           l4879 2098  
                         l4895 20DA                           l4799 1BFE                           l5791 2694  
                         l5783 2666                           l5767 2608                           l5759 25DA  
                         l5695 23AC                           l5839 27C6                           l5687 237E  
                         l5679 2326                           l4985 5CB8                           l4977 5C6A  
                         l4993 5766                           l4969 5EF2                           l4897 20EC  
                         l4889 20CA                           l5793 26A8                           l5785 266A  
                         l5769 261C                           l5777 263A                           l5697 23C0  
                         l5689 2384                           l4987 56B2                           l4979 5C84  
                         l4995 577A                           l4899 20FE                           l5795 26AC  
                         l5779 264E                           l5699 23DE                           l4989 56C6  
                         l4997 5790                           l5981 3900                           l5797 26B0  
                         l5789 2680                           l5983 39BE                           l4999 3790  
                         l5985 3A48                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E34                           STR_5 0E38  
                         u3000 285C                           u3001 2858                           u3010 2872  
                         u3011 286E                           u3100 29AC                           u3020 2884  
                         u3101 29A8                           u3021 2880                           u3110 29CC  
                         u3030 2894                           u3111 29C8                           u3031 2890  
                         u4000 4AF2                           u3200 2B0C                           u3120 29DA  
                         u3040 28D0                   _BAUD4CONbits 000EE9                           u4001 4AEE  
                         u3201 2B08                           u3121 29D6                           u3041 28CC  
                         u4010 4B30                           u3210 2B38                           u3130 29EA  
                         u3050 28DE                           u4011 4B2C                           u3211 2B34  
                         u3131 29E6                           u3051 28DA                           u4020 4B4E  
                         u3300 2C1A                           u3220 2B48                           u3140 2A1C  
                         u3060 294C                           u4100 4A72                           u4021 4B4A  
                         u3301 2C16                           u3221 2B44                           u3141 2A18  
                         u3061 2948                           u4101 4A6E                           u4030 4B6E  
                         u3310 2C2C                           u3230 2B64                           u3150 2A2A  
                         u3070 2964                           u4110 4A92                           u4031 4B6A  
                         u3311 2C28                           u3231 2B60                           u3151 2A26  
                         u3071 295E                           u4111 4A8E                           u4040 4BBE  
                         u3320 2C3C                           u3240 2B74                           u3160 2A48  
                         u3080 2966                           u3400 470A                           u5000 4F98  
                         u4120 4AA2                           u4041 4BBA                           u3321 2C38  
                         u3241 2B70                           u3161 2A44                           u3401 4706  
                         u5001 4F94                           u4121 4A9E                           u3330 2C5C  
                         u3250 2B86                           u3170 2A80                           u3090 298E  
                         u5010 4218                           u3410 47D4                           u4130 53DC  
                         u4050 5EB4                           u4210 4CB2                           _T2PR 000FBC  
                         u3331 2C58                           u3251 2B82                           u3171 2A7C  
                         u3091 298A                           u5011 4214                           u3411 47D0  
                         u4131 53D8                           u4051 5EB0                           u4211 4CAC  
                         u3340 2C6E                           u3260 2B9C                           u3180 2AC6  
                         u5100 43A6                           u5020 4226                           u3420 4578  
                         u3500 489E                           u4140 5432                           u4060 49D4  
                         u4220 4CB4                           u4300 411C                           u3341 2C6A  
                         u3261 2B98                           u3181 2AC2                           u5101 43A2  
                         u5021 4222                           u3421 4574                           u3501 489A  
                         u4141 542E                           u4061 49D0                           u4205 4C8A  
                         u3350 2C8A                           u3270 2BB2                           u3190 2AFC  
                         u5030 4282                           u3430 45AA                           u3510 48DC  
                         u4150 5DFC                           u4070 4A08                           u4310 4138  
                         u4230 5D5A                           u5110 5860                           u3351 2C86  
                         u3271 2BAE                           u3191 2AF8                           u5031 427E  
                         u3431 45A6                           u3511 48D8                           u4151 5DF8  
                         u4311 4134                           u4231 5D56                           u5111 585C  
                         u3600 316A                           u3280 2BC6                           u5040 42D8  
                         u5200 1398                           u3360 5462                           u4400 53B4  
                         u3520 4906                           u4080 4A36                           u4160 4C08  
                         u4320 418C                           u4240 5544                           u3601 3166  
                         u3281 2BC2                           u5041 42D4                           u5201 1394  
                         u5121 0E6E                           u3361 545E                           u4401 53B0  
                         u3441 45D4                           u3521 4902                           u4081 4A32  
                         u4305 4112                           u4241 5540                           u3610 31AA  
                         u3290 2BE0                           u5050 4322                           u5210 13CA  
                         u5130 0F68                           u3370 5480                           u4410 53CC  
                         u3450 45F8                           u3530 4934                           u4090 4A4A  
                         u4170 4C26                           u4330 41A8                           u4250 403C  
                         u3611 31A6                           u3291 2BDC                           u5051 431E  
                         u5211 13C6                           u5131 0F64                           u3371 547C  
                         u4411 53C8                           u3451 45F4                           u3531 4930  
                         u4091 4A46                           u4075 49FE                           u4171 4C22  
                         u4331 41A4                           u3700 3336                           u3620 31EA  
                         u5060 4340                           u5300 15C8                           u5220 1408  
                         u5140 0FF6                           u3380 549C                           u4420 5172  
                         u3460 4622                           u3540 497C                           u4500 3DA8  
                         u4180 4C4E                           u4340 41E4                           u4260 406A  
                         u3701 3332                           u3621 31E6                           u5061 433C  
                         u5301 15C4                           u5221 1404                           u5141 0FF2  
                         u3381 5498                           u4421 516E                           u3461 461E  
                         u3541 4978                           u4181 4C4A                           u4165 4BFE  
                         u4341 41E0                           u4325 4182                           u4261 4066  
                         u3710 3364                           u3630 3260                           u3550 30E2  
                         u5070 4350                           u5310 1612                           u5230 143A  
                         u5150 104A                           u4430 518A                           u3470 4662  
                         u3390 5D9E                           u4510 3DBA                           u4190 4C78  
                         u4270 408C                           u4350 5AA6                           u3711 3360  
                         u3631 325C                           u3551 30DE                           u5071 434C  
                         u5311 160E                           u5231 1436                           u5151 1046  
                         u4431 5186                           u6007 50AE                           u3471 465E  
                         u3391 5D9A                           u4511 3DB6                           u4191 4C74  
                         u4271 4088                           u4255 4032                           u4351 5AA2  
                         u3720 337A                           u3640 3282                           u3560 30F4  
                         u3800 2CDA                           u5080 435E                           u5400 1828  
                         u5320 1644                           u5240 1478                           u5160 10A0  
                         u4440 50D4                           u4360 5FAE                           u3480 46AC  
                         u4520 3DF6                           u4600 190C                           u3721 3376  
                         u3641 327E                           u3561 30F0                           u3801 2CD6  
                         u5081 435A                           u5401 1824                           u5321 1640  
                         u5241 1474                           u5161 109C                           u6017 5502  
                         u4441 50D0                           u4361 5FAA                           u3481 46A8  
                         u4521 3DF2                           u4601 1908                           u3730 338E  
                         u3650 32AC                           u3570 3104                           u3810 2D1A  
                         u5090 4398                           u5410 1866                           u5330 1682  
                         u5250 14AA                           u5170 10C0                           u4450 50EC  
                         u4370 5FC4                           u3490 486C                           u2930 4CD8  
                         u4530 3E22                           u4290 40F8                           u4610 191C  
                         u3731 338A                           u3651 32A8                           u3571 3100  
                         u3811 2D16                           u5091 4394                           u5411 1862  
                         u5331 167E                           u5251 14A6                           u5171 10BC  
                         u6107 572A                           u6027 5CC2                           u4451 50E8  
                         u4371 5FC0                           u3491 4868                           u2931 4CD4  
                         u4531 3E1E                           u4291 40F4                           u4611 1918  
                         u3740 33A8                           u3660 32D0                           u3580 3148  
                         u3900 2FB6                           u3820 2D2C                           u5420 1898  
                         u5340 16B4                           u5260 14E4                           u5180 1170  
                         u4380 52AE                           u4460 5210                           u2940 4CEA  
                         u4540 3E38                           u4700 1BFA                           u4620 195A  
                         u5500 453C                           u3741 33A4                           u3661 32CC  
                         u3581 3144                           u3901 2FB2                           u3821 2D28  
                         u5421 1894                           u5341 16B0                           u5261 14E0  
                         u5181 116C                           u4381 52AA                           u6117 5756  
                         u4461 520C                           u6037 514C                           u2941 4CE6  
                         u4541 3E34                           u4285 40A0                           u4701 1BF6  
                         u4621 1956                           u5501 4538                           u3750 33F0  
                         u3670 32E6                           u3590 315A                           u3910 2FCC  
                         u3830 2D3C                           u5350 16F2                           u5270 1522  
                         u5190 11BA                           u4390 52C6                           u4470 5228  
                         u5430 5F72                           u2950 4D12                           u4550 3F74  
                         u4286 40AA                           u4710 1C30                           u4630 196C  
                         u5510 454A                           u3751 33EC                           u3671 32E2  
                         u3591 3156                           u3911 2FC8                           u3831 2D38  
                         u5351 16EE                           u5271 151E                           u5191 11B6  
                         u4391 52C2                           u6127 538E                           u4471 5224  
                         u6047 5F18                           u5431 5F6E                           u2951 4D0E  
                         u4551 3F70                           u4287 40BA                           u4711 1C2C  
                         u4631 1968                           u5511 4546                           u3760 3420  
                         u3680 3304                           u3920 2FE0                           u3840 2D72  
                         u5360 1730                           u5280 154C                           u4480 5F42  
                         u5520 562A                           u5600 3D20                           u2960 4D48  
                         u4560 3F92                           u4800 1F52                           u4720 1C48  
                         u4640 19E6                           u5440 4456                           u3761 341C  
                         u3681 3300                           u3921 2FDC                           u3841 2D6E  
                         u5361 172C                           u5281 1548                           u6137 5288  
                         u6057 57DC                           u4481 5F3E                           u5521 5626  
                         u5601 3D1C                           u2961 4D44                           u4561 3F8E  
                         u4801 1F4E                           u4721 1C44                           u4641 19E2  
                         u5441 4452                           u3770 344E                           u3690 3324  
                         u3930 2FFA                           u3850 2D82                           u2970 27F8  
                         u5370 177A                           u5290 158A                           u5530 3AC2  
                         u4570 3FAC                           u4490 3DA6                           u4810 1FA0  
                         u4730 1C7A                           u4650 19F8                           u5450 4464  
                         u3771 344A                           u3691 3320                           u3931 2FF6  
                         u3851 2D7E                           u2971 27F4                           u5371 1776  
                         u5291 1586                           u6067 5806                           u5531 3ABE  
                         u4571 3FA8                           u4491 3DA0                           u4811 1F9C  
                         u4731 1C76                           u4651 19F4                           u5451 4460  
                         u3940 3042                           u3860 2EFC                           u3780 2CB8  
                         u2980 280A                           u5380 17B8                           u5540 3B1C  
                         u4580 3FBC                           u4900 2258                           u4820 204E  
                         u4740 1C88                           u4660 1A72                           u5460 4496  
                         u5700 264E                           u5620 2364                           u3941 303E  
                         u3781 2CB4                           u2981 2806                           u5381 17B4  
                         u6077 56D0                           u5541 3B18                           u4581 3FB8  
                         u4901 2254                           u4821 204A                           u4741 1C84  
                         u4661 1A6E                           u5461 4492                           u5701 264A  
                         u5621 2360                           u3950 3070                           u3870 2F56  
                         u3790 2CCA                           u2990 281A                           u5390 17F6  
                         u5550 3B72                           u4910 5DCA                           u4830 208A  
                         u4750 1CB2                           u4670 1AFE                           u4590 18C2  
                         u5470 44CE                           u5710 2694                           u5630 23DE  
                         u3951 306C                           u3871 2F52                           u3791 2CC6  
                         u2991 2816                           u5391 17F2                           u6087 56FC  
                         u5551 3B6E                           u4911 5DC2                           u4831 2086  
                         u4751 1CAE                           u4671 1AFA                           u4591 18BE  
                         u5471 44CA                           u5711 2690                           u5631 23DA  
                         u3960 30AA                           u3880 2F76                           u5560 3BC8  
                         u4840 2098                           u4760 1DFA                           u4680 1B30  
                         u5480 4506                           u5720 26DA                           u5640 2482  
                         u3961 30A6                           u3881 2F72                           u3865 2EF2  
                         u6097 51EA                           u5561 3BC4                           u4841 2094  
                         u4761 1DF6                           u4681 1B2C                           u5481 4502  
                         u5721 26D6                           u5641 247E                           u3970 4FD4  
                         u3890 2F88                           u4930 5F0C                           u5570 3C1E  
                         u4850 20EC                           u4770 1E60                           u4690 1B6E  
                         u5490 4514                           u5730 2720                           u5650 24B8  
                         u3971 4FD0                           u3891 2F84                           u4931 5F08  
                         u5571 3C1A                           u4851 20E8                           u4771 1E5C  
                         u4691 1B6A                           u5491 4510                           u5731 271C  
                         u5651 24B4                           u3980 5012                           u5580 3C74  
                         u4860 21BE                           u4780 1EA8                           u4940 37B8  
                         u5740 2740                           u5660 252E                           u3981 500E  
                         u5581 3C70                           u4861 21BA                           u4781 1EA4  
                         u4941 37B4                           u5741 273C                           u5661 252A  
                         u3990 5046                           u5590 3CCA                           u4870 21DA  
                         u4790 1EB8                           u4950 3808                           u5750 278A  
                         u5670 257C                           u3991 5042                           u5591 3CC6  
                         u4871 21D6                           u4791 1EB4                           u4951 3804  
                         u5751 2786                           u5671 2578                           u4928 5DCC  
                         u4880 2242                           u4960 3828                           u5760 27A4  
                         u5680 25C2                           u4881 223C                           u4961 3824  
                         u5761 27A0                           u5681 25BE                           u4890 2244  
                         u4970 393E                           u5770 27DA                           u5690 2608  
                         u4971 393A                           u5907 44AC                           u5771 27D6  
                         u5691 2604                           u4980 6082                           u4981 607E  
                         u5917 44E4                           u4990 4F80                           u4991 4F7C  
                         u5927 4520                           u5847 2348                           u5937 4556  
                         u5857 2370                           u5947 4F5A                           u5867 241E  
                         u5957 5EE8                           u5877 43C6                           u5967 5784  
                         u5887 443A                           u5977 57AE                           u5897 4472  
                         u5987 5976                           u5997 5C74                  _LightBlueMove 5910  
                         abs@a 0013                           _dbuf 02A0                           _labs 5526  
                         _main 2298                           _dtoa 3D76                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 5350                  ___fpclassifyf 4BC8  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5B48                __end_of_HighISR 0034  
       __end_of_color_read_lum 5AF8                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5E60                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5C36  
              _RunOneBlockTime 00F0               __end_of_LED_init 5FEC                  ___fltol@sign1 0009  
              __end_of___aodiv 46EE                          ?_labs 0001                __end_of___fladd 2C9E  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 49BE  
              __end_of___fldiv 3462                __end_of___flneg 5ED6                __end_of___flmul 30C8  
              __end_of___flsub 5D18                __end_of___fltol 4AC4                    colour_rel@B 0074  
                  colour_rel@G 0070                          ?_stop 0014                    colour_rel@L 0060  
                  colour_rel@R 006C                __end_of___lwdiv 54BC                          i2l225 0030  
                 vfpfcnvrt@fmt 0097                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 3D76        __end_of_sendCharSerial4 6088     __end_of_I2C_2_Master_Start 60CA  
   __end_of_I2C_2_Master_Write 6094                   YellowMove@mL 0020                          _flags 00EB  
                 YellowMove@mR 0022                          _fputc 4CC6                          _fputs 5D5C  
               delayed_ms@time 0001                          labs@a 0001                          pad@fp 0011  
                        _power 00F4                          _width 00E7                          _putch 60D0  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5                  ?_Buttons_init 0001  
                        plusw2 000FDB               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 58BE                 ?___fpclassifyf 0001  
      __end_of_color_read_Blue 5BE8          _I2C_2_Master_RepStart 60AC               __end_of_BlueMove 55F2  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 5BE8        __end_of_turnCalibration 4566  
              _reverseOneBlock 57BE                   __end_of_labs 558C                   __end_of_main 27DE  
                 __end_of_dtoa 3FF4                   __end_of_stop 53CE                _colour_rel$3235 0064  
              _colour_rel$3236 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 4E46               __end_of_PinkMove 5A58  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                 ??_Buttons_init 0001                         _RG6PPS 000E88  
                       i2l5623 000A                         i2l5625 001A                         i2l5627 002C  
                    ??_HighISR 0001       __end_of_color_click_init 59B4                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 58BE               __end_of___xxtofl 43BA  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4AC4  
                       ___fleq 4FA6                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 5FEC              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 189E                      ??___lwdiv 000B                         _floorf 3FF4  
                       _memcpy 5A58                         clear_0 5C0E                         clear_1 5C1A  
                       clear_2 5C26                         _motorL 0161                         _motorR 0158  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5D18                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 586C                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 518C  
                   ___flge@ff1 002A                     _YellowMove 59B4                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5C2C        __end_of_reverseOneBlock 5816                     ___flneg@f1 0001  
     __end_of_color_read_Green 5B98         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                    ?_LED_init 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 6094                 __pcstackCOMRAM 0001               ?_turnCalibration 0020  
                _fullSpeedBack 518C                   __pidataBANK0 60CA                  __end_of_fputc 4D90  
                __end_of_fputs 5DA0                  __end_of_putch 60D2              __end_of_GreenMove 5E9E  
          __end_of_Timer0_init 6052            __end_of_ReversePink 4EFC                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14359 00D3  
        __end_of_reverseDetect 570C                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 570C  
                   ??_LED_init 0001                     _getTMR0val 55F2              __end_of_RetryMove 5526  
                    ?_PinkMove 0020              _color_writetoaddr 6012                     _delayed_ms 5ED6  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001           __end_of_Buttons_init 60AC  
            __end_of_TurnDelay 5F44          __end_of_timed_forward 4FA6            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 3462  
      __end_of_Interrupts_init 60A0         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01D6                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 001A      __end_of_color_writetoaddr 6032                        _RedMove 5E22  
           _I2C_2_Master_Start 60C0                     ??_PinkMove 0024                     _initUSART4 6052  
           _I2C_2_Master_Write 6088                        __Hparam 0000                        _WayBack 011A  
                      __Lparam 0000              color_read_Red@tmp 000A                    _Timer0_init 6032  
                  RetryMove@mL 0020                    RetryMove@mR 0022        sendStringSerial4@string 0002  
            reverseOneBlock@mL 001A              reverseOneBlock@mR 001C                    _ReversePink 4E46  
                      ___aodiv 4566                        ___fladd 27DE                        ___aomod 485A  
                      ___fldiv 30C8                        ___flneg 5E9E                        ___flmul 2C9E  
                      ___flsub 5CD2                        ___fltol 49BE            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 5448            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 5BE8                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3A96                        __ptext0 2298                        __ptext1 43BA  
                      __ptext2 586C                        __ptext3 5816                        __ptext4 3790  
                      __ptext5 189E                        __ptext6 5D18                        __ptext7 5A58  
                      __ptext8 5526                        __ptext9 3FF4                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                 main@lost_count 01DA                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00EF  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 586C  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5C2C  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 0114                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3A96                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00F2                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 52C8  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 50EE                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01D8  
                 _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 5C84  
               __end_of___flge 4BC8                 __end_of___fleq 5050                 _fullSpeedAhead 522A  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 6012                 __end_of_efgtoa 2298                 __end_of_floorf 4206  
               __end_of_memcpy 5AA8                     floorf@F526 00DF       __end_of_Forwardhalfblock 5766  
                    _GreenMove 5E60                 __end_of_strcpy 5D5C            start_initialization 5BE8  
                  __end_of_abs 5E22                    __end_of_pad 5448                  _TxBufWriteCnt 00ED  
        __end_of_LightBlueMove 5962                   ??_OrangeMove 0024                   _Buttons_init 60A0  
        __end_of___fpclassifyf 4CC6            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 5350  
                  vfprintf@fmt 00AA         __end_of_fullSpeedAhead 52C8                       ??___flge 0032  
                     ??___fleq 003A                      _RetryMove 54BC                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00F0                _ForwardOneBlock 5766                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4D90                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 5910                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 5F0E                  __pcstackBANK0 0060                  __pcstackBANK1 0172  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020                    _efgtoa$2884 006F  
             ___lwdiv@dividend 0007                      _dtoa$2853 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 0020                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3237 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 5A06           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 56B2              _I2C_2_Master_Idle 5F9E  
            _I2C_2_Master_Init 5F74              _I2C_2_Master_Read 5DA0              _I2C_2_Master_Stop 60B6  
                   ?_TurnDelay 0001                   _RxBufReadCnt 00EE             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00B0               getTMR0val@moving 0005                 colour_rel@vals 004B  
            _sendStringSerial4 5F44            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                   ??_getTMR0val 0001  
                     _PIE0bits 000E29                       _LED_init 5FC6             ?_sendStringSerial4 0002  
      __end_of_ForwardOneBlock 57BE                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 0118                       _PIR0bits 000E33  
                     _PIR4bits 000E37                       i2u561_40 001A                       i2u561_41 0016  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E3E            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3790      __end_of_I2C_2_Master_Idle 5FC6      __end_of_I2C_2_Master_Init 5F9E  
    __end_of_I2C_2_Master_Read 5DE2              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 60C0  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 5654                   _TxBufReadCnt 00EC  
                     _BlueMove 558C                      _turnRight 5050             __end_of_delayed_ms 5F0E  
                   vfpfcnvrt@c 00A5              ??_turnCalibration 0024                      copy_data0 5BFC  
    __end_of_sendStringSerial4 5F74                   ??_colour_rel 004F                  _reverseDetect 56B2  
__end_of_I2C_2_Master_RepStart 60B6             color_read_Blue@tmp 000A            __end_of_setMotorPWM 485A  
                 ??_initUSART4 0001                       _PinkMove 5A06                       __Hrparam 0000  
       __end_of_Colour_decider 189E                      memcpy@tmp 000B                     vfprintf@ap 00AC  
                     __Lrparam 0000                     vfprintf@fp 00A8          __end_of_fullSpeedBack 522A  
                  ??_RetryMove 0024           TurnDelay@Turn45Delay 0001                    _readColours 5654  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 3790                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4                  _timed_forward 4EFC  
                   sprintf@fmt 00B2              ?_Forwardhalfblock 001A                       ___xxtofl 4206  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6                    ??_TurnDelay 0003  
                 _Time_forward 023C                ___lwdiv@divisor 0009             __end_of_initUSART4 6070  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 4BC8                       __ptext11 49BE                       __ptext20 4566  
                     __ptext12 5E9E                       __ptext21 5F44                       __ptext13 3D76  
                     __ptext30 6052                       __ptext22 6070                       __ptext14 53CE  
                     __ptext31 52C8                       __ptext23 5654                       __ptext15 5D5C  
                     __ptext40 5910                       __ptext32 3A96                       __ptext24 5AA8  
                     __ptext16 4CC6                       __ptext41 5E60                       __ptext33 4EFC  
                     __ptext25 5AF8                       __ptext17 60D0                       __ptext50 5F9E  
                     __ptext42 558C                       __ptext34 5ED6                       __ptext26 5B48  
                     __ptext18 5DE2                       __ptext51 5F74                       __ptext43 55F2  
                     __ptext35 4D90                       __ptext27 5B98                       __ptext19 485A  
                     __ptext60 5F0E                       __ptext52 59B4                       __ptext44 3462  
                     __ptext36 4E46                       __ptext28 60AC                       __ptext61 57BE  
                     __ptext53 5C36                       __ptext45 5962                       __ptext37 5766  
                     __ptext29 5DA0                       __ptext70 5FEC                       __ptext62 56B2  
                     __ptext54 5050                       __ptext46 6012                       __ptext38 5E22  
                     __ptext71 5448                       __ptext63 518C                       __ptext55 6032  
                     __ptext47 6088                       __ptext39 58BE                       __ptext80 60A0  
                     __ptext72 0E3E                       __ptext64 5FC6                       __ptext56 54BC  
                     __ptext48 60B6                       __ptext73 4206                       __ptext65 6094  
                     __ptext57 5A06                       __ptext49 60C0                       __ptext74 5CD2  
                     __ptext66 570C                       __ptext58 5C84                       __ptext75 27DE  
                     __ptext67 5350                       __ptext59 50EE                       __ptext76 2C9E  
                     __ptext68 522A                       __ptext77 4AC4                       __ptext69 46EE  
                     __ptext78 4FA6                       __ptext79 30C8                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002B                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 5816                       _run_flag 0116                  ??_turnRight45 001E  
                     _turnLeft 50EE               ___aomod@dividend 0001                 ?_timed_forward 0014  
                  delayed_ms@i 0004              ??_reverseOneBlock 001E                     _INTCONbits 000FF2  
              main@prev_colour 01DC                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 46EE                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                 getTMR0val@temp 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5962                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5C84  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5CD2                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 6070                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ___aomod@sign 0012  
