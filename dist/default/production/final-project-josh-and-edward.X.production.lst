

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 17:14:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   103                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   104                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   105                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   106                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   107   000000                     
   108                           ; Generated 06/04/2022 GMT
   109                           ; 
   110                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution. Publication is not required when
   124                           ;        this file is used in an embedded application.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC18F67K40 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142   000000                     
   143                           	psect	idataBANK0
   144   006162                     __pidataBANK0:
   145                           	callstack 0
   146                           
   147                           ;initializer for _RunOneBlockTime
   148   006162  041A               	dw	1050
   149                           
   150                           ;initializer for _Turn45Delay
   151   006164  003C               	dw	60
   152                           
   153                           ;initializer for _power
   154   006166  0032               	dw	50
   155                           
   156                           	psect	idataBANK1
   157   006168                     __pidataBANK1:
   158                           	callstack 0
   159                           
   160                           ;initializer for _run_flag
   161   006168  0001               	dw	1
   162                           
   163                           ;initializer for _move_count
   164   00616A  FFFF               	dw	65535
   165   000000                     _LATHbits	set	3968
   166   000000                     _TRISEbits	set	3973
   167   000000                     _TX4REG	set	3812
   168   000000                     _RC4STAbits	set	3815
   169   000000                     _SP4BRGH	set	3814
   170   000000                     _SSP2CON2bits	set	3802
   171   000000                     _RX4PPS	set	3605
   172   000000                     _SSP2CLKPPS	set	3612
   173   000000                     _SSP2DATPPS	set	3613
   174   000000                     _ANSELDbits	set	3751
   175   000000                     _SSP2ADD	set	3798
   176   000000                     _SSP2CON1bits	set	3801
   177   000000                     _LATAbits	set	3961
   178   000000                     _LATFbits	set	3966
   179   000000                     _LATGbits	set	3967
   180   000000                     _TRISAbits	set	3969
   181   000000                     _TRISGbits	set	3975
   182   000000                     _TRISHbits	set	3976
   183   000000                     _PORTFbits	set	3982
   184   000000                     _TMR0L	set	4051
   185   000000                     _TMR0H	set	4052
   186   000000                     _INTCONbits	set	4082
   187   000000                     _CCPR2H	set	4006
   188   000000                     _CCPR1H	set	4010
   189   000000                     _TRISCbits	set	3971
   190   000000                     _TRISDbits	set	3972
   191   000000                     _TRISFbits	set	3974
   192   000000                     _LATDbits	set	3964
   193   000000                     _RC4REG	set	3811
   194   000000                     _SP4BRGL	set	3813
   195   000000                     _TX4STAbits	set	3816
   196   000000                     _BAUD4CONbits	set	3817
   197   000000                     _SSP2CON2	set	3802
   198   000000                     _SSP2STAT	set	3800
   199   000000                     _ANSELFbits	set	3764
   200   000000                     _SSP2BUF	set	3797
   201   000000                     _PIE0bits	set	3625
   202   000000                     _PIR4bits	set	3639
   203   000000                     _RC0PPS	set	3682
   204   000000                     _RD5PPS	set	3695
   205   000000                     _RE2PPS	set	3700
   206   000000                     _RD6PPS	set	3696
   207   000000                     _RC7PPS	set	3689
   208   000000                     _CCPR4H	set	3873
   209   000000                     _CCPR3H	set	3877
   210   000000                     _PIR0bits	set	3635
   211   000000                     _T0CON1bits	set	4054
   212   000000                     _T0CON0bits	set	4053
   213   000000                     _CCP1CONbits	set	4011
   214   000000                     _CCPTMRS0bits	set	4013
   215   000000                     _T2PR	set	4028
   216   000000                     _T2CONbits	set	4029
   217   000000                     _CCP2CONbits	set	4007
   218   000000                     _CCP3CONbits	set	3878
   219   000000                     _CCP4CONbits	set	3874
   220   000000                     _RE4PPS	set	3702
   221   000000                     _RG6PPS	set	3720
   222   000000                     _T2CLKCONbits	set	4031
   223   000000                     _T2HLTbits	set	4030
   224                           
   225                           	psect	smallconst
   226   000E00                     __psmallconst:
   227                           	callstack 0
   228   000E00  00                 	db	0
   229   000E01                     STR_1:
   230                           
   231                           ; BSR set to: 14
   232   000E01  72                 	db	114	;'r'
   233   000E02  65                 	db	101	;'e'
   234   000E03  64                 	db	100	;'d'
   235   000E04  3D                 	db	61	;'='
   236   000E05  25                 	db	37
   237   000E06  66                 	db	102	;'f'
   238   000E07  20                 	db	32
   239   000E08  67                 	db	103	;'g'
   240   000E09  72                 	db	114	;'r'
   241   000E0A  65                 	db	101	;'e'
   242   000E0B  65                 	db	101	;'e'
   243   000E0C  6E                 	db	110	;'n'
   244   000E0D  3D                 	db	61	;'='
   245   000E0E  25                 	db	37
   246   000E0F  66                 	db	102	;'f'
   247   000E10  20                 	db	32
   248   000E11  62                 	db	98	;'b'
   249   000E12  6C                 	db	108	;'l'
   250   000E13  75                 	db	117	;'u'
   251   000E14  65                 	db	101	;'e'
   252   000E15  3D                 	db	61	;'='
   253   000E16  25                 	db	37
   254   000E17  66                 	db	102	;'f'
   255   000E18  20                 	db	32
   256   000E19  6C                 	db	108	;'l'
   257   000E1A  75                 	db	117	;'u'
   258   000E1B  6D                 	db	109	;'m'
   259   000E1C  3D                 	db	61	;'='
   260   000E1D  25                 	db	37
   261   000E1E  64                 	db	100	;'d'
   262   000E1F  20                 	db	32
   263   000E20  61                 	db	97	;'a'
   264   000E21  63                 	db	99	;'c'
   265   000E22  74                 	db	116	;'t'
   266   000E23  75                 	db	117	;'u'
   267   000E24  61                 	db	97	;'a'
   268   000E25  6C                 	db	108	;'l'
   269   000E26  5F                 	db	95	;'_'
   270   000E27  63                 	db	99	;'c'
   271   000E28  6F                 	db	111	;'o'
   272   000E29  6C                 	db	108	;'l'
   273   000E2A  6F                 	db	111	;'o'
   274   000E2B  75                 	db	117	;'u'
   275   000E2C  72                 	db	114	;'r'
   276   000E2D  3D                 	db	61	;'='
   277   000E2E  25                 	db	37
   278   000E2F  64                 	db	100	;'d'
   279   000E30  20                 	db	32
   280   000E31  0D                 	db	13
   281   000E32  0A                 	db	10
   282   000E33  00                 	db	0
   283   000E34                     STR_2:
   284                           
   285                           ; BSR set to: 14
   286   000E34  69                 	db	105	;'i'
   287   000E35  6E                 	db	110	;'n'
   288   000E36  66                 	db	102	;'f'
   289   000E37  00                 	db	0
   290   000E38                     STR_5:
   291                           
   292                           ; BSR set to: 14
   293   000E38  6E                 	db	110	;'n'
   294   000E39  61                 	db	97	;'a'
   295   000E3A  6E                 	db	110	;'n'
   296   000E3B  00                 	db	0
   297   000E3C  00                 	db	0	; dummy byte at the end
   298   000000                     
   299                           ; #config settings
   300                           
   301                           	psect	cinit
   302   0054F0                     __pcinit:
   303                           	callstack 0
   304   0054F0                     start_initialization:
   305                           	callstack 0
   306   0054F0                     __initialization:
   307                           	callstack 0
   308                           
   309                           ; Initialize objects allocated to BANK1 (4 bytes)
   310                           ; load TBLPTR registers with __pidataBANK1
   311   0054F0  0E68               	movlw	low __pidataBANK1
   312   0054F2  6EF6               	movwf	tblptrl,c
   313   0054F4  0E61               	movlw	high __pidataBANK1
   314   0054F6  6EF7               	movwf	tblptrh,c
   315   0054F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   316   0054FA  6EF8               	movwf	tblptru,c
   317   0054FC  EE01  F0D8         	lfsr	0,__pdataBANK1
   318   005500  EE10 F004          	lfsr	1,4
   319   005504                     copy_data0:
   320   005504  0009               	tblrd		*+
   321   005506  CFF5 FFEE          	movff	tablat,postinc0
   322   00550A  50E5               	movf	postdec1,w,c
   323   00550C  50E1               	movf	fsr1l,w,c
   324   00550E  E1FA               	bnz	copy_data0
   325                           
   326                           ; Initialize objects allocated to BANK0 (6 bytes)
   327                           ; load TBLPTR registers with __pidataBANK0
   328   005510  0E62               	movlw	low __pidataBANK0
   329   005512  6EF6               	movwf	tblptrl,c
   330   005514  0E61               	movlw	high __pidataBANK0
   331   005516  6EF7               	movwf	tblptrh,c
   332   005518  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   333   00551A  6EF8               	movwf	tblptru,c
   334   00551C  EE00  F0F2         	lfsr	0,__pdataBANK0
   335   005520  EE10 F006          	lfsr	1,6
   336   005524                     copy_data1:
   337   005524  0009               	tblrd		*+
   338   005526  CFF5 FFEE          	movff	tablat,postinc0
   339   00552A  50E5               	movf	postdec1,w,c
   340   00552C  50E1               	movf	fsr1l,w,c
   341   00552E  E1FA               	bnz	copy_data1
   342                           
   343                           ; Clear objects allocated to BANK2 (240 bytes)
   344   005530  EE02  F000         	lfsr	0,__pbssBANK2
   345   005534  0EF0               	movlw	240
   346   005536                     clear_0:
   347   005536  6AEE               	clrf	postinc0,c
   348   005538  06E8               	decf	wreg,f,c
   349   00553A  E1FD               	bnz	clear_0
   350                           
   351                           ; Clear objects allocated to BANK1 (114 bytes)
   352   00553C  EE01  F000         	lfsr	0,__pbssBANK1
   353   005540  0E72               	movlw	114
   354   005542                     clear_1:
   355   005542  6AEE               	clrf	postinc0,c
   356   005544  06E8               	decf	wreg,f,c
   357   005546  E1FD               	bnz	clear_1
   358                           
   359                           ; Clear objects allocated to BANK0 (31 bytes)
   360   005548  EE00  F0D3         	lfsr	0,__pbssBANK0
   361   00554C  0E1F               	movlw	31
   362   00554E                     clear_2:
   363   00554E  6AEE               	clrf	postinc0,c
   364   005550  06E8               	decf	wreg,f,c
   365   005552  E1FD               	bnz	clear_2
   366   005554                     end_of_initialization:
   367                           	callstack 0
   368   005554                     __end_of__initialization:
   369                           	callstack 0
   370   005554  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   371   005556  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   372   005558  0100               	movlb	0
   373   00555A  EF72  F01A         	goto	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376   0000D3                     __pbssBANK0:
   377                           	callstack 0
   378   0000D3                     	ds	12
   379   0000DF                     floorf@F526:
   380                           	callstack 0
   381   0000DF                     	ds	4
   382   0000E3                     ___fpclassifyf@F465:
   383                           	callstack 0
   384   0000E3                     	ds	4
   385   0000E7                     _width:
   386                           	callstack 0
   387   0000E7                     	ds	2
   388   0000E9                     _prec:
   389                           	callstack 0
   390   0000E9                     	ds	2
   391   0000EB                     _lost_count:
   392                           	callstack 0
   393   0000EB                     	ds	2
   394   0000ED                     _flags:
   395                           	callstack 0
   396   0000ED                     	ds	1
   397   0000EE                     _TxBufReadCnt:
   398                           	callstack 0
   399   0000EE                     	ds	1
   400   0000EF                     _TxBufWriteCnt:
   401                           	callstack 0
   402   0000EF                     	ds	1
   403   0000F0                     _RxBufReadCnt:
   404                           	callstack 0
   405   0000F0                     	ds	1
   406   0000F1                     _RxBufWriteCnt:
   407                           	callstack 0
   408   0000F1                     	ds	1
   409                           
   410                           	psect	dataBANK0
   411   0000F2                     __pdataBANK0:
   412                           	callstack 0
   413   0000F2                     _RunOneBlockTime:
   414                           	callstack 0
   415   0000F2                     	ds	2
   416   0000F4                     _Turn45Delay:
   417                           	callstack 0
   418   0000F4                     	ds	2
   419   0000F6                     _power:
   420                           	callstack 0
   421   0000F6                     	ds	2
   422                           
   423                           	psect	bssBANK1
   424   000100                     __pbssBANK1:
   425                           	callstack 0
   426   000100                     _EUSART4RXbuf:
   427                           	callstack 0
   428   000100                     	ds	20
   429   000114                     _lost_flag:
   430                           	callstack 0
   431   000114                     	ds	2
   432   000116                     _consecuitive:
   433                           	callstack 0
   434   000116                     	ds	2
   435   000118                     _prev_colour:
   436                           	callstack 0
   437   000118                     	ds	2
   438   00011A                     _WayBack:
   439                           	callstack 0
   440   00011A                     	ds	50
   441   00014C                     _rel:
   442                           	callstack 0
   443   00014C                     	ds	12
   444   000158                     _motorR:
   445                           	callstack 0
   446   000158                     	ds	9
   447   000161                     _motorL:
   448                           	callstack 0
   449   000161                     	ds	9
   450   00016A                     _vals:
   451                           	callstack 0
   452   00016A                     	ds	8
   453                           
   454                           	psect	dataBANK1
   455   0001D8                     __pdataBANK1:
   456                           	callstack 0
   457   0001D8                     _run_flag:
   458                           	callstack 0
   459   0001D8                     	ds	2
   460   0001DA                     _move_count:
   461                           	callstack 0
   462   0001DA                     	ds	2
   463                           
   464                           	psect	bssBANK2
   465   000200                     __pbssBANK2:
   466                           	callstack 0
   467   000200                     _EUSART4TXbuf:
   468                           	callstack 0
   469   000200                     	ds	60
   470   00023C                     _Time_forward:
   471                           	callstack 0
   472   00023C                     	ds	100
   473   0002A0                     _dbuf:
   474                           	callstack 0
   475   0002A0                     	ds	80
   476                           
   477                           	psect	cstackBANK1
   478   000172                     __pcstackBANK1:
   479                           	callstack 0
   480   000172                     main@buf:
   481                           	callstack 0
   482                           
   483                           ; 100 bytes @ 0x0
   484   000172                     	ds	100
   485   0001D6                     main@colour:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x64
   489   0001D6                     	ds	2
   490                           
   491                           	psect	cstackBANK0
   492   000060                     __pcstackBANK0:
   493                           	callstack 0
   494   000060                     efgtoa@fp:
   495                           	callstack 0
   496   000060                     colour_rel@L:
   497                           	callstack 0
   498   000060                     _Colour_decider$3266:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0x0
   502   000060                     	ds	2
   503   000062                     efgtoa@f:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x2
   507   000062                     	ds	2
   508   000064                     Colour_decider@Cmax_i:
   509                           	callstack 0
   510   000064                     _colour_rel$3264:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x4
   514   000064                     	ds	2
   515   000066                     efgtoa@c:
   516                           	callstack 0
   517   000066                     Colour_decider@RGB_col:
   518                           	callstack 0
   519                           
   520                           ; 12 bytes @ 0x6
   521   000066                     	ds	1
   522   000067                     ??_efgtoa:
   523                           
   524                           ; 1 bytes @ 0x7
   525   000067                     	ds	1
   526   000068                     _colour_rel$3265:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x8
   530   000068                     	ds	1
   531   000069                     efgtoa@ne:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x9
   535   000069                     	ds	2
   536   00006B                     efgtoa@p:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xB
   540   00006B                     	ds	1
   541   00006C                     colour_rel@R:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0xC
   545   00006C                     	ds	1
   546   00006D                     efgtoa@t:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xD
   550   00006D                     	ds	2
   551   00006F                     _efgtoa$2896:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xF
   555   00006F                     	ds	1
   556   000070                     colour_rel@G:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x10
   560   000070                     	ds	1
   561   000071                     efgtoa@pp:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x11
   565   000071                     	ds	1
   566   000072                     efgtoa@mode:
   567                           	callstack 0
   568   000072                     Colour_decider@Cmax:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x12
   572   000072                     	ds	1
   573   000073                     efgtoa@nmode:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x13
   577   000073                     	ds	1
   578   000074                     efgtoa@d:
   579                           	callstack 0
   580   000074                     colour_rel@B:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x14
   584   000074                     	ds	2
   585   000076                     efgtoa@m:
   586                           	callstack 0
   587   000076                     Colour_decider@Cmin:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x16
   591   000076                     	ds	2
   592   000078                     efgtoa@e:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x18
   596   000078                     	ds	2
   597   00007A                     Colour_decider@i:
   598                           	callstack 0
   599   00007A                     efgtoa@w:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x1A
   603   00007A                     	ds	2
   604   00007C                     Colour_decider@Hue:
   605                           	callstack 0
   606   00007C                     efgtoa@ou:
   607                           	callstack 0
   608                           
   609                           ; 4 bytes @ 0x1C
   610   00007C                     	ds	4
   611   000080                     efgtoa@i:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x20
   615   000080                     	ds	2
   616   000082                     efgtoa@h:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x22
   620   000082                     	ds	4
   621   000086                     efgtoa@l:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x26
   625   000086                     	ds	4
   626   00008A                     efgtoa@sign:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x2A
   630   00008A                     	ds	1
   631   00008B                     efgtoa@n:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2B
   635   00008B                     	ds	2
   636   00008D                     efgtoa@g:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x2D
   640   00008D                     	ds	4
   641   000091                     efgtoa@u:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x31
   645   000091                     	ds	4
   646   000095                     vfpfcnvrt@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x35
   650   000095                     	ds	2
   651   000097                     vfpfcnvrt@fmt:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x37
   655   000097                     	ds	2
   656   000099                     vfpfcnvrt@ap:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x39
   660   000099                     	ds	2
   661   00009B                     ??_vfpfcnvrt:
   662                           
   663                           ; 1 bytes @ 0x3B
   664   00009B                     	ds	2
   665   00009D                     vfpfcnvrt@convarg:
   666                           	callstack 0
   667                           
   668                           ; 8 bytes @ 0x3D
   669   00009D                     	ds	8
   670   0000A5                     vfpfcnvrt@c:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x45
   674   0000A5                     	ds	1
   675   0000A6                     vfpfcnvrt@cp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x46
   679   0000A6                     	ds	2
   680   0000A8                     ?_vfprintf:
   681                           	callstack 0
   682   0000A8                     vfprintf@fp:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x48
   686   0000A8                     	ds	2
   687   0000AA                     vfprintf@fmt:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x4A
   691   0000AA                     	ds	2
   692   0000AC                     vfprintf@ap:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4C
   696   0000AC                     	ds	2
   697   0000AE                     vfprintf@cfmt:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4E
   701   0000AE                     	ds	2
   702   0000B0                     ?_sprintf:
   703                           	callstack 0
   704   0000B0                     sprintf@s:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x50
   708   0000B0                     	ds	2
   709   0000B2                     sprintf@fmt:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x52
   713   0000B2                     	ds	18
   714   0000C4                     sprintf@ap:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x64
   718   0000C4                     	ds	2
   719   0000C6                     sprintf@f:
   720                           	callstack 0
   721                           
   722                           ; 11 bytes @ 0x66
   723   0000C6                     	ds	11
   724   0000D1                     ??_main:
   725                           
   726                           ; 1 bytes @ 0x71
   727   0000D1                     	ds	2
   728                           
   729                           	psect	cstackCOMRAM
   730   000001                     __pcstackCOMRAM:
   731                           	callstack 0
   732   000001                     ??_getTMR0val:
   733   000001                     ??_I2C_2_Master_Idle:
   734   000001                     ?___fpclassifyf:
   735                           	callstack 0
   736   000001                     ?___wmul:
   737                           	callstack 0
   738   000001                     ?___fladd:
   739                           	callstack 0
   740   000001                     ?_labs:
   741                           	callstack 0
   742   000001                     ?___flneg:
   743                           	callstack 0
   744   000001                     ?___fltol:
   745                           	callstack 0
   746   000001                     ?___xxtofl:
   747                           	callstack 0
   748   000001                     ?___aodiv:
   749                           	callstack 0
   750   000001                     ?___aomod:
   751                           	callstack 0
   752   000001                     sendCharSerial4@charToSend:
   753                           	callstack 0
   754   000001                     initDCmotorsPWM@PWMperiod:
   755                           	callstack 0
   756   000001                     TurnDelay@Turn45Delay:
   757                           	callstack 0
   758   000001                     delayed_ms@time:
   759                           	callstack 0
   760   000001                     ___wmul@multiplier:
   761                           	callstack 0
   762   000001                     memcpy@d1:
   763                           	callstack 0
   764   000001                     fputc@c:
   765                           	callstack 0
   766   000001                     strcpy@dest:
   767                           	callstack 0
   768   000001                     ___flneg@f1:
   769                           	callstack 0
   770   000001                     ___fltol@f1:
   771                           	callstack 0
   772   000001                     ___fladd@b:
   773                           	callstack 0
   774   000001                     ___xxtofl@val:
   775                           	callstack 0
   776   000001                     ___fpclassifyf@x:
   777                           	callstack 0
   778   000001                     labs@a:
   779                           	callstack 0
   780   000001                     ___aodiv@dividend:
   781                           	callstack 0
   782   000001                     ___aomod@dividend:
   783                           	callstack 0
   784                           
   785                           ; 8 bytes @ 0x0
   786   000001                     	ds	1
   787   000002                     ??_I2C_2_Master_Read:
   788   000002                     I2C_2_Master_Write@data_byte:
   789                           	callstack 0
   790   000002                     sendStringSerial4@string:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x1
   794   000002                     	ds	1
   795   000003                     ??_delayed_ms:
   796   000003                     ??_TurnDelay:
   797   000003                     color_writetoaddr@value:
   798                           	callstack 0
   799   000003                     I2C_2_Master_Read@ack:
   800                           	callstack 0
   801   000003                     getTMR0val@temp:
   802                           	callstack 0
   803   000003                     ___wmul@multiplicand:
   804                           	callstack 0
   805   000003                     memcpy@s1:
   806                           	callstack 0
   807   000003                     fputc@fp:
   808                           	callstack 0
   809   000003                     strcpy@src:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x2
   813   000003                     	ds	1
   814   000004                     color_writetoaddr@address:
   815                           	callstack 0
   816   000004                     I2C_2_Master_Read@tmp:
   817                           	callstack 0
   818   000004                     delayed_ms@i:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x3
   822   000004                     	ds	1
   823   000005                     ??_fputc:
   824   000005                     ??___fpclassifyf:
   825   000005                     ??_labs:
   826   000005                     ??_color_click_init:
   827   000005                     ??___fltol:
   828   000005                     ??___xxtofl:
   829   000005                     ?_color_read_lum:
   830                           	callstack 0
   831   000005                     ?_color_read_Red:
   832                           	callstack 0
   833   000005                     ?_color_read_Green:
   834                           	callstack 0
   835   000005                     ?_color_read_Blue:
   836                           	callstack 0
   837   000005                     getTMR0val@moving:
   838                           	callstack 0
   839   000005                     ___wmul@product:
   840                           	callstack 0
   841   000005                     memcpy@n:
   842                           	callstack 0
   843   000005                     strcpy@s:
   844                           	callstack 0
   845   000005                     ___fladd@a:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x4
   849   000005                     	ds	2
   850   000007                     ??_color_read_lum:
   851   000007                     ??_color_read_Red:
   852   000007                     ??_color_read_Green:
   853   000007                     ??_color_read_Blue:
   854   000007                     ?___lwdiv:
   855                           	callstack 0
   856   000007                     ___lwdiv@dividend:
   857                           	callstack 0
   858   000007                     memcpy@d:
   859                           	callstack 0
   860   000007                     strcpy@d:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x6
   864   000007                     	ds	2
   865   000009                     ??___fladd:
   866   000009                     ___fltol@sign1:
   867                           	callstack 0
   868   000009                     ___xxtofl@sign:
   869                           	callstack 0
   870   000009                     ___lwdiv@divisor:
   871                           	callstack 0
   872   000009                     ___fpclassifyf@e:
   873                           	callstack 0
   874   000009                     memcpy@s:
   875                           	callstack 0
   876   000009                     ___aodiv@divisor:
   877                           	callstack 0
   878   000009                     ___aomod@divisor:
   879                           	callstack 0
   880                           
   881                           ; 8 bytes @ 0x8
   882   000009                     	ds	1
   883   00000A                     ___fltol@exp1:
   884                           	callstack 0
   885   00000A                     ___xxtofl@exp:
   886                           	callstack 0
   887   00000A                     color_read_lum@tmp:
   888                           	callstack 0
   889   00000A                     color_read_Red@tmp:
   890                           	callstack 0
   891   00000A                     color_read_Green@tmp:
   892                           	callstack 0
   893   00000A                     color_read_Blue@tmp:
   894                           	callstack 0
   895   00000A                     fputs@s:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x9
   899   00000A                     	ds	1
   900   00000B                     memcpy@tmp:
   901                           	callstack 0
   902   00000B                     ___lwdiv@quotient:
   903                           	callstack 0
   904   00000B                     ___xxtofl@arg:
   905                           	callstack 0
   906   00000B                     ___fpclassifyf@u:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0xA
   910   00000B                     	ds	1
   911   00000C                     readColours@vals:
   912                           	callstack 0
   913   00000C                     fputs@fp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0xB
   917   00000C                     	ds	1
   918   00000D                     ___lwdiv@counter:
   919                           	callstack 0
   920   00000D                     ___fladd@signs:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0xC
   924   00000D                     	ds	1
   925   00000E                     ___fladd@aexp:
   926                           	callstack 0
   927   00000E                     fputs@c:
   928                           	callstack 0
   929   00000E                     setMotorPWM@m:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xD
   933   00000E                     	ds	1
   934   00000F                     ___fladd@bexp:
   935                           	callstack 0
   936   00000F                     fputs@i:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0xE
   940   00000F                     	ds	1
   941   000010                     ??_setMotorPWM:
   942   000010                     ___fladd@grs:
   943                           	callstack 0
   944                           
   945                           ; 1 bytes @ 0xF
   946   000010                     	ds	1
   947   000011                     ?___flmul:
   948                           	callstack 0
   949   000011                     ___aodiv@counter:
   950                           	callstack 0
   951   000011                     ___aomod@counter:
   952                           	callstack 0
   953   000011                     pad@fp:
   954                           	callstack 0
   955   000011                     ___flmul@b:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x10
   959   000011                     	ds	1
   960   000012                     setMotorPWM@posDuty:
   961                           	callstack 0
   962   000012                     ___aodiv@sign:
   963                           	callstack 0
   964   000012                     ___aomod@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x11
   968   000012                     	ds	1
   969   000013                     ?_abs:
   970                           	callstack 0
   971   000013                     setMotorPWM@negDuty:
   972                           	callstack 0
   973   000013                     pad@buf:
   974                           	callstack 0
   975   000013                     abs@a:
   976                           	callstack 0
   977   000013                     ___aodiv@quotient:
   978                           	callstack 0
   979                           
   980                           ; 8 bytes @ 0x12
   981   000013                     	ds	1
   982   000014                     stop@mL:
   983                           	callstack 0
   984   000014                     turnLeft@mL:
   985                           	callstack 0
   986   000014                     turnRight@mL:
   987                           	callstack 0
   988   000014                     fullSpeedAhead@mL:
   989                           	callstack 0
   990   000014                     timed_forward@mL:
   991                           	callstack 0
   992   000014                     fullSpeedBack@mL:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x13
   996   000014                     	ds	1
   997   000015                     ??_abs:
   998   000015                     pad@p:
   999                           	callstack 0
  1000   000015                     ___flmul@a:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x14
  1004   000015                     	ds	1
  1005   000016                     stop@mR:
  1006                           	callstack 0
  1007   000016                     turnLeft@mR:
  1008                           	callstack 0
  1009   000016                     turnRight@mR:
  1010                           	callstack 0
  1011   000016                     fullSpeedAhead@mR:
  1012                           	callstack 0
  1013   000016                     timed_forward@mR:
  1014                           	callstack 0
  1015   000016                     fullSpeedBack@mR:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x15
  1019   000016                     	ds	1
  1020   000017                     ??_pad:
  1021                           
  1022                           ; 1 bytes @ 0x16
  1023   000017                     	ds	1
  1024   000018                     ??_fullSpeedAhead:
  1025   000018                     ??_stop:
  1026   000018                     ??_turnLeft:
  1027   000018                     ??_turnRight:
  1028   000018                     ??_fullSpeedBack:
  1029   000018                     timed_forward@time:
  1030                           	callstack 0
  1031   000018                     pad@i:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x17
  1035   000018                     	ds	1
  1036   000019                     ??___flmul:
  1037                           
  1038                           ; 1 bytes @ 0x18
  1039   000019                     	ds	1
  1040   00001A                     ??_timed_forward:
  1041   00001A                     turnRight45@mL:
  1042                           	callstack 0
  1043   00001A                     turnLeft45@mL:
  1044                           	callstack 0
  1045   00001A                     reverseDetect@mL:
  1046                           	callstack 0
  1047   00001A                     homeReverse@mL:
  1048                           	callstack 0
  1049   00001A                     reverseOneBlock@mL:
  1050                           	callstack 0
  1051   00001A                     ForwardOneBlock@mL:
  1052                           	callstack 0
  1053   00001A                     Forwardhalfblock@mL:
  1054                           	callstack 0
  1055   00001A                     Backhalfblock@mL:
  1056                           	callstack 0
  1057   00001A                     pad@w:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x19
  1061   00001A                     	ds	2
  1062   00001C                     turnRight45@mR:
  1063                           	callstack 0
  1064   00001C                     turnLeft45@mR:
  1065                           	callstack 0
  1066   00001C                     reverseDetect@mR:
  1067                           	callstack 0
  1068   00001C                     homeReverse@mR:
  1069                           	callstack 0
  1070   00001C                     reverseOneBlock@mR:
  1071                           	callstack 0
  1072   00001C                     ForwardOneBlock@mR:
  1073                           	callstack 0
  1074   00001C                     Forwardhalfblock@mR:
  1075                           	callstack 0
  1076   00001C                     Backhalfblock@mR:
  1077                           	callstack 0
  1078   00001C                     dtoa@fp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x1B
  1082   00001C                     	ds	1
  1083   00001D                     ___flmul@sign:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x1C
  1087   00001D                     	ds	1
  1088   00001E                     ??_Forwardhalfblock:
  1089   00001E                     ??_turnRight45:
  1090   00001E                     ??_turnLeft45:
  1091   00001E                     ??_reverseDetect:
  1092   00001E                     ??_homeReverse:
  1093   00001E                     ??_reverseOneBlock:
  1094   00001E                     ??_ForwardOneBlock:
  1095   00001E                     ??_Backhalfblock:
  1096   00001E                     ___flmul@grs:
  1097                           	callstack 0
  1098   00001E                     dtoa@d:
  1099                           	callstack 0
  1100                           
  1101                           ; 8 bytes @ 0x1D
  1102   00001E                     	ds	2
  1103   000020                     RedMove@mL:
  1104                           	callstack 0
  1105   000020                     GreenMove@mL:
  1106                           	callstack 0
  1107   000020                     BlueMove@mL:
  1108                           	callstack 0
  1109   000020                     YellowMove@mL:
  1110                           	callstack 0
  1111   000020                     PinkMove@mL:
  1112                           	callstack 0
  1113   000020                     OrangeMove@mL:
  1114                           	callstack 0
  1115   000020                     LightBlueMove@mL:
  1116                           	callstack 0
  1117   000020                     RetryMove@mL:
  1118                           	callstack 0
  1119   000020                     ReverseYellow@mL:
  1120                           	callstack 0
  1121   000020                     ReversePink@mL:
  1122                           	callstack 0
  1123   000020                     turnCalibration@mL:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x1F
  1127   000020                     	ds	2
  1128   000022                     ___flmul@aexp:
  1129                           	callstack 0
  1130   000022                     RedMove@mR:
  1131                           	callstack 0
  1132   000022                     GreenMove@mR:
  1133                           	callstack 0
  1134   000022                     BlueMove@mR:
  1135                           	callstack 0
  1136   000022                     YellowMove@mR:
  1137                           	callstack 0
  1138   000022                     PinkMove@mR:
  1139                           	callstack 0
  1140   000022                     OrangeMove@mR:
  1141                           	callstack 0
  1142   000022                     LightBlueMove@mR:
  1143                           	callstack 0
  1144   000022                     RetryMove@mR:
  1145                           	callstack 0
  1146   000022                     ReverseYellow@mR:
  1147                           	callstack 0
  1148   000022                     ReversePink@mR:
  1149                           	callstack 0
  1150   000022                     turnCalibration@mR:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x21
  1154   000022                     	ds	1
  1155   000023                     ___flmul@bexp:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x22
  1159   000023                     	ds	1
  1160   000024                     ??_turnCalibration:
  1161   000024                     ??_RetryMove:
  1162   000024                     go_Home@WayBack:
  1163                           	callstack 0
  1164   000024                     ___flmul@prod:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x23
  1168   000024                     	ds	2
  1169   000026                     ??_dtoa:
  1170   000026                     go_Home@Time_forward:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x25
  1174   000026                     	ds	2
  1175   000028                     ??_go_Home:
  1176   000028                     ___flmul@temp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x27
  1180   000028                     	ds	2
  1181   00002A                     ?___flsub:
  1182                           	callstack 0
  1183   00002A                     ___flge@ff1:
  1184                           	callstack 0
  1185   00002A                     ___flsub@b:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x29
  1189   00002A                     	ds	1
  1190   00002B                     go_Home@i:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x2A
  1194   00002B                     	ds	2
  1195   00002D                     colour_move@recognized_colour:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2C
  1199   00002D                     	ds	1
  1200   00002E                     _dtoa$2865:
  1201                           	callstack 0
  1202   00002E                     ___flge@ff2:
  1203                           	callstack 0
  1204   00002E                     ___flsub@a:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x2D
  1208   00002E                     	ds	1
  1209   00002F                     
  1210                           ; 1 bytes @ 0x2E
  1211   00002F                     	ds	1
  1212   000030                     dtoa@p:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x2F
  1216   000030                     	ds	2
  1217   000032                     ??___flge:
  1218   000032                     ?___fldiv:
  1219                           	callstack 0
  1220   000032                     dtoa@w:
  1221                           	callstack 0
  1222   000032                     ___fleq@ff1:
  1223                           	callstack 0
  1224   000032                     ___fldiv@b:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x31
  1228   000032                     	ds	2
  1229   000034                     dtoa@n:
  1230                           	callstack 0
  1231                           
  1232                           ; 8 bytes @ 0x33
  1233   000034                     	ds	2
  1234   000036                     ___fleq@ff2:
  1235                           	callstack 0
  1236   000036                     ___fldiv@a:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x35
  1240   000036                     	ds	4
  1241   00003A                     ??___fldiv:
  1242   00003A                     ??___fleq:
  1243                           
  1244                           ; 1 bytes @ 0x39
  1245   00003A                     	ds	2
  1246   00003C                     dtoa@i:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x3B
  1250   00003C                     	ds	2
  1251   00003E                     dtoa@s:
  1252                           	callstack 0
  1253   00003E                     ___fldiv@rem:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x3D
  1257   00003E                     	ds	4
  1258   000042                     ___fldiv@sign:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x41
  1262   000042                     	ds	1
  1263   000043                     ___fldiv@new_exp:
  1264                           	callstack 0
  1265                           
  1266                           ; 2 bytes @ 0x42
  1267   000043                     	ds	2
  1268   000045                     ___fldiv@grs:
  1269                           	callstack 0
  1270                           
  1271                           ; 4 bytes @ 0x44
  1272   000045                     	ds	4
  1273   000049                     ___fldiv@bexp:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x48
  1277   000049                     	ds	1
  1278   00004A                     ___fldiv@aexp:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x49
  1282   00004A                     	ds	1
  1283   00004B                     ?_Colour_decider:
  1284                           	callstack 0
  1285   00004B                     ?_floorf:
  1286                           	callstack 0
  1287   00004B                     colour_rel@vals:
  1288                           	callstack 0
  1289   00004B                     Colour_decider@vals:
  1290                           	callstack 0
  1291   00004B                     floorf@x:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x4A
  1295   00004B                     	ds	2
  1296   00004D                     colour_rel@rel:
  1297                           	callstack 0
  1298   00004D                     Colour_decider@rel:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x4C
  1302   00004D                     	ds	2
  1303   00004F                     ??_floorf:
  1304   00004F                     ??_Colour_decider:
  1305                           
  1306                           ; 1 bytes @ 0x4E
  1307   00004F                     	ds	6
  1308   000055                     floorf@m:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x54
  1312   000055                     	ds	4
  1313   000059                     floorf@e:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0x58
  1317   000059                     	ds	2
  1318   00005B                     floorf@u:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x5A
  1322   00005B                     	ds	4
  1323   00005F                     
  1324                           ; 1 bytes @ 0x5E
  1325 ;;
  1326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1327 ;;
  1328 ;; *************** function _main *****************
  1329 ;; Defined at:
  1330 ;;		line 33 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  colour          2  100[BANK1 ] int 
  1335 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;Total ram usage:      104 bytes
  1350 ;; Hardware stack levels required when called: 9
  1351 ;; This function calls:
  1352 ;;		_Buttons_init
  1353 ;;		_Colour_decider
  1354 ;;		_Forwardhalfblock
  1355 ;;		_I2C_2_Master_Init
  1356 ;;		_Interrupts_init
  1357 ;;		_LED_init
  1358 ;;		_Timer0_init
  1359 ;;		_color_click_init
  1360 ;;		_colour_move
  1361 ;;		_colour_rel
  1362 ;;		_fullSpeedAhead
  1363 ;;		_getTMR0val
  1364 ;;		_go_Home
  1365 ;;		_initDCmotorsPWM
  1366 ;;		_initUSART4
  1367 ;;		_readColours
  1368 ;;		_sendStringSerial4
  1369 ;;		_sprintf
  1370 ;;		_stop
  1371 ;;		_turnCalibration
  1372 ;; This function is called by:
  1373 ;;		Startup code after reset
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text0
  1378   0034E4                     __ptext0:
  1379                           	callstack 0
  1380   0034E4                     _main:
  1381                           	callstack 22
  1382   0034E4                     
  1383                           ;main.c: 34:     initUSART4();
  1384   0034E4  EC75  F030         	call	_initUSART4	;wreg free
  1385   0034E8                     
  1386                           ;main.c: 35:     Interrupts_init();
  1387   0034E8  EC96  F030         	call	_Interrupts_init	;wreg free
  1388   0034EC                     
  1389                           ;main.c: 36:     color_click_init();
  1390   0034EC  EC4E  F02D         	call	_color_click_init	;wreg free
  1391   0034F0                     
  1392                           ;main.c: 37:     I2C_2_Master_Init();
  1393   0034F0  EC06  F030         	call	_I2C_2_Master_Init	;wreg free
  1394   0034F4                     
  1395                           ;main.c: 38:     LED_init();
  1396   0034F4  EC2F  F030         	call	_LED_init	;wreg free
  1397   0034F8                     
  1398                           ;main.c: 39:     Buttons_init();
  1399   0034F8  EC9C  F030         	call	_Buttons_init	;wreg free
  1400   0034FC                     
  1401                           ;main.c: 40:     initDCmotorsPWM(200);
  1402   0034FC  0E00               	movlw	0
  1403   0034FE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1404   003500  0EC8               	movlw	200
  1405   003502  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1406   003504  EC41  F029         	call	_initDCmotorsPWM	;wreg free
  1407   003508                     
  1408                           ;main.c: 41:     Timer0_init();
  1409   003508  EC65  F030         	call	_Timer0_init	;wreg free
  1410   00350C                     
  1411                           ;main.c: 43:     motorL.power=0;
  1412   00350C  0E00               	movlw	0
  1413   00350E  0101               	movlb	1	; () banked
  1414   003510  6F61               	movwf	_motorL& (0+255),b
  1415   003512                     
  1416                           ; BSR set to: 1
  1417                           ;main.c: 44:     motorL.direction=1;
  1418   003512  0E01               	movlw	1
  1419   003514  6F62               	movwf	(_motorL+1)& (0+255),b
  1420   003516                     
  1421                           ; BSR set to: 1
  1422                           ;main.c: 45:     motorL.brakemode=1;
  1423   003516  0E01               	movlw	1
  1424   003518  6F63               	movwf	(_motorL+2)& (0+255),b
  1425   00351A                     
  1426                           ; BSR set to: 1
  1427                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1428   00351A  0EAA               	movlw	170
  1429   00351C  6F66               	movwf	(_motorL+5)& (0+255),b
  1430   00351E  0E0F               	movlw	15
  1431   003520  6F67               	movwf	(_motorL+6)& (0+255),b
  1432   003522                     
  1433                           ; BSR set to: 1
  1434                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1435   003522  0EA6               	movlw	166
  1436   003524  6F68               	movwf	(_motorL+7)& (0+255),b
  1437   003526  0E0F               	movlw	15
  1438   003528  6F69               	movwf	(_motorL+8)& (0+255),b
  1439   00352A                     
  1440                           ; BSR set to: 1
  1441                           ;main.c: 48:     motorL.PWMperiod=200;
  1442   00352A  0E00               	movlw	0
  1443   00352C  6F65               	movwf	(_motorL+4)& (0+255),b
  1444   00352E  0EC8               	movlw	200
  1445   003530  6F64               	movwf	(_motorL+3)& (0+255),b
  1446   003532                     
  1447                           ; BSR set to: 1
  1448                           ;main.c: 49:     motorR.power=0;
  1449   003532  0E00               	movlw	0
  1450   003534  6F58               	movwf	_motorR& (0+255),b
  1451   003536                     
  1452                           ; BSR set to: 1
  1453                           ;main.c: 50:     motorR.direction=1;
  1454   003536  0E01               	movlw	1
  1455   003538  6F59               	movwf	(_motorR+1)& (0+255),b
  1456   00353A                     
  1457                           ; BSR set to: 1
  1458                           ;main.c: 51:     motorR.brakemode=1;
  1459   00353A  0E01               	movlw	1
  1460   00353C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1461   00353E                     
  1462                           ; BSR set to: 1
  1463                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1464   00353E  0E25               	movlw	37
  1465   003540  6F5D               	movwf	(_motorR+5)& (0+255),b
  1466   003542  0E0F               	movlw	15
  1467   003544  6F5E               	movwf	(_motorR+6)& (0+255),b
  1468   003546                     
  1469                           ; BSR set to: 1
  1470                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1471   003546  0E21               	movlw	33
  1472   003548  6F5F               	movwf	(_motorR+7)& (0+255),b
  1473   00354A  0E0F               	movlw	15
  1474   00354C  6F60               	movwf	(_motorR+8)& (0+255),b
  1475   00354E                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 54:     motorR.PWMperiod=200;
  1478   00354E  0E00               	movlw	0
  1479   003550  6F5C               	movwf	(_motorR+4)& (0+255),b
  1480   003552  0EC8               	movlw	200
  1481   003554  6F5B               	movwf	(_motorR+3)& (0+255),b
  1482   003556                     
  1483                           ; BSR set to: 1
  1484                           ;main.c: 56:     char buf[100];;main.c: 59:     turnCalibration(&motorL,&motorR);
  1485   003556  0E61               	movlw	low _motorL
  1486   003558  6E20               	movwf	turnCalibration@mL^0,c
  1487   00355A  0E01               	movlw	high _motorL
  1488   00355C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1489   00355E  0E58               	movlw	low _motorR
  1490   003560  6E22               	movwf	turnCalibration@mR^0,c
  1491   003562  0E01               	movlw	high _motorR
  1492   003564  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1493   003566  ECBA  F021         	call	_turnCalibration	;wreg free
  1494   00356A                     
  1495                           ;main.c: 61:     LATFbits.LATF0=0;
  1496   00356A  907E               	bcf	126,0,c	;volatile
  1497   00356C                     
  1498                           ;main.c: 62:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1499   00356C  0E52               	movlw	82
  1500   00356E  0100               	movlb	0	; () banked
  1501   003570  6FD2               	movwf	(??_main+1)& (0+255),b
  1502   003572  0E2B               	movlw	43
  1503   003574  6FD1               	movwf	??_main& (0+255),b
  1504   003576  0E00               	movlw	0
  1505   003578                     u5827:
  1506   003578  2EE8               	decfsz	wreg,f,c
  1507   00357A  D7FE               	bra	u5827
  1508   00357C  2FD1               	decfsz	??_main& (0+255),f,b
  1509   00357E  D7FC               	bra	u5827
  1510   003580  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1511   003582  D7FA               	bra	u5827
  1512   003584  F000               	nop	
  1513   003586                     l332:
  1514   003586  B48E               	btfsc	142,2,c	;volatile
  1515   003588  EFC8  F01A         	goto	u5691
  1516   00358C  EFCA  F01A         	goto	u5690
  1517   003590                     u5691:
  1518   003590  EFC3  F01A         	goto	l332
  1519   003594                     u5690:
  1520   003594                     
  1521                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1522   003594  0E52               	movlw	82
  1523   003596  0100               	movlb	0	; () banked
  1524   003598  6FD2               	movwf	(??_main+1)& (0+255),b
  1525   00359A  0E2B               	movlw	43
  1526   00359C  6FD1               	movwf	??_main& (0+255),b
  1527   00359E  0E00               	movlw	0
  1528   0035A0                     u5837:
  1529   0035A0  2EE8               	decfsz	wreg,f,c
  1530   0035A2  D7FE               	bra	u5837
  1531   0035A4  2FD1               	decfsz	??_main& (0+255),f,b
  1532   0035A6  D7FC               	bra	u5837
  1533   0035A8  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1534   0035AA  D7FA               	bra	u5837
  1535   0035AC  F000               	nop	
  1536   0035AE                     
  1537                           ;main.c: 68:     T0CON0bits.T0EN=1;
  1538   0035AE  8ED5               	bsf	213,7,c	;volatile
  1539                           
  1540                           ;main.c: 69:     while (run_flag)
  1541   0035B0  EFE0  F01B         	goto	l5897
  1542   0035B4                     l5841:
  1543                           
  1544                           ; BSR set to: 1
  1545                           ;main.c: 70:     {;main.c: 71:         consecuitive=0;
  1546   0035B4  0E00               	movlw	0
  1547   0035B6  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1548   0035B8  0E00               	movlw	0
  1549   0035BA  6F16               	movwf	_consecuitive& (0+255),b
  1550   0035BC                     
  1551                           ; BSR set to: 1
  1552                           ;main.c: 73:         fullSpeedAhead(&motorL,&motorR);
  1553   0035BC  0E61               	movlw	low _motorL
  1554   0035BE  6E14               	movwf	fullSpeedAhead@mL^0,c
  1555   0035C0  0E01               	movlw	high _motorL
  1556   0035C2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1557   0035C4  0E58               	movlw	low _motorR
  1558   0035C6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1559   0035C8  0E01               	movlw	high _motorR
  1560   0035CA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1561   0035CC  ECF2  F028         	call	_fullSpeedAhead	;wreg free
  1562   0035D0                     
  1563                           ;main.c: 75:         readColours(&vals);
  1564   0035D0  0E6A               	movlw	low _vals
  1565   0035D2  6E0C               	movwf	readColours@vals^0,c
  1566   0035D4  0E01               	movlw	high _vals
  1567   0035D6  6E0D               	movwf	(readColours@vals+1)^0,c
  1568   0035D8  EC48  F02B         	call	_readColours	;wreg free
  1569   0035DC                     
  1570                           ;main.c: 78:         colour_rel(&vals, &rel);
  1571   0035DC  0E6A               	movlw	low _vals
  1572   0035DE  6E4B               	movwf	colour_rel@vals^0,c
  1573   0035E0  0E01               	movlw	high _vals
  1574   0035E2  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1575   0035E4  0E4C               	movlw	low _rel
  1576   0035E6  6E4D               	movwf	colour_rel@rel^0,c
  1577   0035E8  0E01               	movlw	high _rel
  1578   0035EA  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1579   0035EC  EC58  F017         	call	_colour_rel	;wreg free
  1580   0035F0                     
  1581                           ;main.c: 81:         if (vals.L>=500){
  1582   0035F0  0101               	movlb	1	; () banked
  1583   0035F2  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1584   0035F4  EF05  F01B         	goto	u5701
  1585   0035F8  0EF4               	movlw	244
  1586   0035FA  5D70               	subwf	(_vals+6)& (0+255),w,b
  1587   0035FC  0E01               	movlw	1
  1588   0035FE  5971               	subwfb	(_vals+7)& (0+255),w,b
  1589   003600  A0D8               	btfss	status,0,c
  1590   003602  EF05  F01B         	goto	u5701
  1591   003606  EF07  F01B         	goto	u5700
  1592   00360A                     u5701:
  1593   00360A  EFC6  F01B         	goto	l5889
  1594   00360E                     u5700:
  1595   00360E                     
  1596                           ; BSR set to: 1
  1597                           ;main.c: 82:             move_count++;
  1598   00360E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1599   003610  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1600   003612                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 83:             if (move_count>98){
  1603   003612  51DB               	movf	(_move_count+1)& (0+255),w,b	;volatile
  1604   003614  E109               	bnz	u5710
  1605   003616  0E63               	movlw	99
  1606   003618  5DDA               	subwf	_move_count& (0+255),w,b	;volatile
  1607   00361A  A0D8               	btfss	status,0,c
  1608   00361C  EF12  F01B         	goto	u5711
  1609   003620  EF14  F01B         	goto	u5710
  1610   003624                     u5711:
  1611   003624  EF22  F01B         	goto	l5859
  1612   003628                     u5710:
  1613   003628                     
  1614                           ; BSR set to: 1
  1615                           ;main.c: 84:                 getTMR0val();
  1616   003628  EC17  F02B         	call	_getTMR0val	;wreg free
  1617   00362C                     l5857:
  1618                           
  1619                           ;main.c: 85:                 go_Home(WayBack, Time_forward);
  1620   00362C  0E1A               	movlw	low _WayBack
  1621   00362E  6E24               	movwf	go_Home@WayBack^0,c
  1622   003630  0E01               	movlw	high _WayBack
  1623   003632  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1624   003634  0E3C               	movlw	low _Time_forward
  1625   003636  6E26               	movwf	go_Home@Time_forward^0,c
  1626   003638  0E02               	movlw	high _Time_forward
  1627   00363A  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1628   00363C  ECEC  F01B         	call	_go_Home	;wreg free
  1629                           
  1630                           ;main.c: 86:             }
  1631   003640  EFE0  F01B         	goto	l5897
  1632   003644                     l5859:
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 88:                 getTMR0val();
  1636   003644  EC17  F02B         	call	_getTMR0val	;wreg free
  1637   003648                     
  1638                           ;main.c: 90:                 Forwardhalfblock(&motorL,&motorR);
  1639   003648  0E61               	movlw	low _motorL
  1640   00364A  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1641   00364C  0E01               	movlw	high _motorL
  1642   00364E  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1643   003650  0E58               	movlw	low _motorR
  1644   003652  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1645   003654  0E01               	movlw	high _motorR
  1646   003656  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1647   003658  ECD1  F02B         	call	_Forwardhalfblock	;wreg free
  1648   00365C                     
  1649                           ;main.c: 92:                 stop(&motorL, &motorR);
  1650   00365C  0E61               	movlw	low _motorL
  1651   00365E  6E14               	movwf	stop@mL^0,c
  1652   003660  0E01               	movlw	high _motorL
  1653   003662  6E15               	movwf	(stop@mL+1)^0,c
  1654   003664  0E58               	movlw	low _motorR
  1655   003666  6E16               	movwf	stop@mR^0,c
  1656   003668  0E01               	movlw	high _motorR
  1657   00366A  6E17               	movwf	(stop@mR+1)^0,c
  1658   00366C  EC85  F029         	call	_stop	;wreg free
  1659                           
  1660                           ;main.c: 94:                 while (consecuitive<20){
  1661   003670  EF7E  F01B         	goto	l5881
  1662   003674                     l5865:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;main.c: 95:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1666   003674  0E09               	movlw	9
  1667   003676  0100               	movlb	0	; () banked
  1668   003678  6FD2               	movwf	(??_main+1)& (0+255),b
  1669   00367A  0E1E               	movlw	30
  1670   00367C  6FD1               	movwf	??_main& (0+255),b
  1671   00367E  0EE4               	movlw	228
  1672   003680                     u5847:
  1673   003680  2EE8               	decfsz	wreg,f,c
  1674   003682  D7FE               	bra	u5847
  1675   003684  2FD1               	decfsz	??_main& (0+255),f,b
  1676   003686  D7FC               	bra	u5847
  1677   003688  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1678   00368A  D7FA               	bra	u5847
  1679   00368C  F000               	nop	
  1680   00368E                     
  1681                           ;main.c: 96:                     readColours(&vals);
  1682   00368E  0E6A               	movlw	low _vals
  1683   003690  6E0C               	movwf	readColours@vals^0,c
  1684   003692  0E01               	movlw	high _vals
  1685   003694  6E0D               	movwf	(readColours@vals+1)^0,c
  1686   003696  EC48  F02B         	call	_readColours	;wreg free
  1687   00369A                     
  1688                           ;main.c: 97:                     colour_rel(&vals, &rel);
  1689   00369A  0E6A               	movlw	low _vals
  1690   00369C  6E4B               	movwf	colour_rel@vals^0,c
  1691   00369E  0E01               	movlw	high _vals
  1692   0036A0  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1693   0036A2  0E4C               	movlw	low _rel
  1694   0036A4  6E4D               	movwf	colour_rel@rel^0,c
  1695   0036A6  0E01               	movlw	high _rel
  1696   0036A8  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1697   0036AA  EC58  F017         	call	_colour_rel	;wreg free
  1698   0036AE                     
  1699                           ;main.c: 98:                     int colour = Colour_decider(&vals, &rel);
  1700   0036AE  0E6A               	movlw	low _vals
  1701   0036B0  6E4B               	movwf	Colour_decider@vals^0,c
  1702   0036B2  0E01               	movlw	high _vals
  1703   0036B4  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1704   0036B6  0E4C               	movlw	low _rel
  1705   0036B8  6E4D               	movwf	Colour_decider@rel^0,c
  1706   0036BA  0E01               	movlw	high _rel
  1707   0036BC  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1708   0036BE  EC1C  F00C         	call	_Colour_decider	;wreg free
  1709   0036C2  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1710   0036C6  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1711   0036CA                     
  1712                           ;main.c: 99:                     if (colour==prev_colour){
  1713   0036CA  0101               	movlb	1	; () banked
  1714   0036CC  5118               	movf	_prev_colour& (0+255),w,b
  1715   0036CE  19D6               	xorwf	main@colour& (0+255),w,b
  1716   0036D0  E107               	bnz	u5721
  1717   0036D2  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1718   0036D4  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1719   0036D6  A4D8               	btfss	status,2,c
  1720   0036D8  EF70  F01B         	goto	u5721
  1721   0036DC  EF72  F01B         	goto	u5720
  1722   0036E0                     u5721:
  1723   0036E0  EF76  F01B         	goto	l5877
  1724   0036E4                     u5720:
  1725   0036E4                     
  1726                           ; BSR set to: 1
  1727                           ;main.c: 100:                         consecuitive++;
  1728   0036E4  4B16               	infsnz	_consecuitive& (0+255),f,b
  1729   0036E6  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1730                           
  1731                           ;main.c: 101:                     }
  1732   0036E8  EF7A  F01B         	goto	l5879
  1733   0036EC                     l5877:
  1734                           
  1735                           ; BSR set to: 1
  1736                           ;main.c: 103:                         consecuitive=0;
  1737   0036EC  0E00               	movlw	0
  1738   0036EE  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1739   0036F0  0E00               	movlw	0
  1740   0036F2  6F16               	movwf	_consecuitive& (0+255),b
  1741   0036F4                     l5879:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;main.c: 105:                     prev_colour=colour;
  1745   0036F4  C1D6  F118         	movff	main@colour,_prev_colour
  1746   0036F8  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1747   0036FC                     l5881:
  1748                           
  1749                           ;main.c: 94:                 while (consecuitive<20){
  1750   0036FC  0101               	movlb	1	; () banked
  1751   0036FE  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1752   003700  EF8B  F01B         	goto	u5731
  1753   003704  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1754   003706  E109               	bnz	u5730
  1755   003708  0E14               	movlw	20
  1756   00370A  5D16               	subwf	_consecuitive& (0+255),w,b
  1757   00370C  A0D8               	btfss	status,0,c
  1758   00370E  EF8B  F01B         	goto	u5731
  1759   003712  EF8D  F01B         	goto	u5730
  1760   003716                     u5731:
  1761   003716  EF3A  F01B         	goto	l5865
  1762   00371A                     u5730:
  1763   00371A                     
  1764                           ; BSR set to: 1
  1765                           ;main.c: 109:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=
      +                          %d \r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1766   00371A  0E72               	movlw	low main@buf
  1767   00371C  0100               	movlb	0	; () banked
  1768   00371E  6FB0               	movwf	sprintf@s& (0+255),b
  1769   003720  0E01               	movlw	high main@buf
  1770   003722  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1771   003724  0E01               	movlw	low STR_1
  1772   003726  6FB2               	movwf	sprintf@fmt& (0+255),b
  1773   003728  0E0E               	movlw	high STR_1
  1774   00372A  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1775   00372C  C14C  F0B4         	movff	_rel,?_sprintf+4
  1776   003730  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1777   003734  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1778   003738  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1779   00373C  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1780   003740  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1781   003744  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1782   003748  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1783   00374C  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1784   003750  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1785   003754  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1786   003758  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1787   00375C  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1788   003760  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1789   003764  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1790   003768  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1791   00376C  EC81  F02C         	call	_sprintf	;wreg free
  1792   003770                     
  1793                           ;main.c: 110:                 sendStringSerial4(buf);
  1794   003770  0E72               	movlw	low main@buf
  1795   003772  6E02               	movwf	sendStringSerial4@string^0,c
  1796   003774  0E01               	movlw	high main@buf
  1797   003776  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1798   003778  ECEE  F02F         	call	_sendStringSerial4	;wreg free
  1799   00377C                     
  1800                           ;main.c: 112:                 colour_move (prev_colour);
  1801   00377C  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1802   003780  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1803   003784  EC9B  F01E         	call	_colour_move	;wreg free
  1804   003788  EFE0  F01B         	goto	l5897
  1805   00378C                     l5889:
  1806                           
  1807                           ; BSR set to: 1
  1808   00378C  5114               	movf	_lost_flag& (0+255),w,b
  1809   00378E  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1810   003790  B4D8               	btfsc	status,2,c
  1811   003792  EFCD  F01B         	goto	u5741
  1812   003796  EFCF  F01B         	goto	u5740
  1813   00379A                     u5741:
  1814   00379A  EFE0  F01B         	goto	l5897
  1815   00379E                     u5740:
  1816   00379E                     
  1817                           ; BSR set to: 1
  1818                           ;main.c: 115:             move_count++;
  1819   00379E  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1820   0037A0  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1821   0037A2                     
  1822                           ; BSR set to: 1
  1823                           ;main.c: 116:             Time_forward[move_count]=65535;
  1824   0037A2  90D8               	bcf	status,0,c
  1825   0037A4  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1826   0037A6  6ED9               	movwf	fsr2l,c
  1827   0037A8  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1828   0037AA  6EDA               	movwf	fsr2h,c
  1829   0037AC  0E3C               	movlw	low _Time_forward
  1830   0037AE  26D9               	addwf	fsr2l,f,c
  1831   0037B0  0E02               	movlw	high _Time_forward
  1832   0037B2  22DA               	addwfc	fsr2h,f,c
  1833   0037B4  0EFF               	movlw	255
  1834   0037B6  6EDE               	movwf	postinc2,c
  1835   0037B8  0EFF               	movlw	255
  1836   0037BA  6EDD               	movwf	postdec2,c
  1837   0037BC  EF16  F01B         	goto	l5857
  1838   0037C0                     l5897:
  1839                           
  1840                           ;main.c: 69:     while (run_flag)
  1841   0037C0  0101               	movlb	1	; () banked
  1842   0037C2  51D8               	movf	_run_flag& (0+255),w,b
  1843   0037C4  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1844   0037C6  A4D8               	btfss	status,2,c
  1845   0037C8  EFE8  F01B         	goto	u5751
  1846   0037CC  EFEA  F01B         	goto	u5750
  1847   0037D0                     u5751:
  1848   0037D0  EFDA  F01A         	goto	l5841
  1849   0037D4                     u5750:
  1850   0037D4                     
  1851                           ; BSR set to: 1
  1852   0037D4  EF1A  F000         	goto	start
  1853   0037D8                     __end_of_main:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _turnCalibration *****************
  1857 ;; Defined at:
  1858 ;;		line 365 in file "dc_motor.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1861 ;;		 -> motorL(9), 
  1862 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1863 ;;		 -> motorR(9), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;Total ram usage:        6 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 5
  1882 ;; This function calls:
  1883 ;;		_turnLeft45
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text1
  1890   004374                     __ptext1:
  1891                           	callstack 0
  1892   004374                     _turnCalibration:
  1893                           	callstack 25
  1894   004374                     
  1895                           ;dc_motor.c: 366:     LATFbits.LATF0=1;
  1896   004374  807E               	bsf	126,0,c	;volatile
  1897   004376                     
  1898                           ;dc_motor.c: 367:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1899   004376  0E52               	movlw	82
  1900   004378  6E25               	movwf	(??_turnCalibration+1)^0,c
  1901   00437A  0E2B               	movlw	43
  1902   00437C  6E24               	movwf	??_turnCalibration^0,c
  1903   00437E  0E00               	movlw	0
  1904   004380                     u5857:
  1905   004380  2EE8               	decfsz	wreg,f,c
  1906   004382  D7FE               	bra	u5857
  1907   004384  2E24               	decfsz	??_turnCalibration^0,f,c
  1908   004386  D7FC               	bra	u5857
  1909   004388  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1910   00438A  D7FA               	bra	u5857
  1911   00438C  D000               	nop2	
  1912                           
  1913                           ;dc_motor.c: 369:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1914   00438E  EF74  F022         	goto	l5651
  1915   004392                     l534:
  1916                           
  1917                           ;dc_motor.c: 370:         LATDbits.LATD3=1;
  1918   004392  867C               	bsf	124,3,c	;volatile
  1919   004394                     
  1920                           ;dc_motor.c: 372:         turnLeft45(&motorL, &motorR);
  1921   004394  0E61               	movlw	low _motorL
  1922   004396  6E1A               	movwf	turnLeft45@mL^0,c
  1923   004398  0E01               	movlw	high _motorL
  1924   00439A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1925   00439C  0E58               	movlw	low _motorR
  1926   00439E  6E1C               	movwf	turnLeft45@mR^0,c
  1927   0043A0  0E01               	movlw	high _motorR
  1928   0043A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1929   0043A4  EC8E  F02E         	call	_turnLeft45	;wreg free
  1930                           
  1931                           ;dc_motor.c: 373:         turnLeft45(&motorL, &motorR);
  1932   0043A8  0E61               	movlw	low _motorL
  1933   0043AA  6E1A               	movwf	turnLeft45@mL^0,c
  1934   0043AC  0E01               	movlw	high _motorL
  1935   0043AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1936   0043B0  0E58               	movlw	low _motorR
  1937   0043B2  6E1C               	movwf	turnLeft45@mR^0,c
  1938   0043B4  0E01               	movlw	high _motorR
  1939   0043B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1940   0043B8  EC8E  F02E         	call	_turnLeft45	;wreg free
  1941                           
  1942                           ;dc_motor.c: 374:         turnLeft45(&motorL, &motorR);
  1943   0043BC  0E61               	movlw	low _motorL
  1944   0043BE  6E1A               	movwf	turnLeft45@mL^0,c
  1945   0043C0  0E01               	movlw	high _motorL
  1946   0043C2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1947   0043C4  0E58               	movlw	low _motorR
  1948   0043C6  6E1C               	movwf	turnLeft45@mR^0,c
  1949   0043C8  0E01               	movlw	high _motorR
  1950   0043CA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1951   0043CC  EC8E  F02E         	call	_turnLeft45	;wreg free
  1952                           
  1953                           ;dc_motor.c: 375:         turnLeft45(&motorL, &motorR);
  1954   0043D0  0E61               	movlw	low _motorL
  1955   0043D2  6E1A               	movwf	turnLeft45@mL^0,c
  1956   0043D4  0E01               	movlw	high _motorL
  1957   0043D6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1958   0043D8  0E58               	movlw	low _motorR
  1959   0043DA  6E1C               	movwf	turnLeft45@mR^0,c
  1960   0043DC  0E01               	movlw	high _motorR
  1961   0043DE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1962   0043E0  EC8E  F02E         	call	_turnLeft45	;wreg free
  1963                           
  1964                           ;dc_motor.c: 377:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1965   0043E4  EF59  F022         	goto	l5645
  1966   0043E8                     l536:
  1967                           
  1968                           ;dc_motor.c: 380:               LATDbits.LATD4=1;
  1969   0043E8  887C               	bsf	124,4,c	;volatile
  1970   0043EA                     
  1971                           ;dc_motor.c: 381:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1972   0043EA  0EA3               	movlw	163
  1973   0043EC  6E25               	movwf	(??_turnCalibration+1)^0,c
  1974   0043EE  0E57               	movlw	87
  1975   0043F0  6E24               	movwf	??_turnCalibration^0,c
  1976   0043F2  0E02               	movlw	2
  1977   0043F4                     u5867:
  1978   0043F4  2EE8               	decfsz	wreg,f,c
  1979   0043F6  D7FE               	bra	u5867
  1980   0043F8  2E24               	decfsz	??_turnCalibration^0,f,c
  1981   0043FA  D7FC               	bra	u5867
  1982   0043FC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1983   0043FE  D7FA               	bra	u5867
  1984   004400  D000               	nop2	
  1985   004402                     
  1986                           ;dc_motor.c: 382:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1987   004402  B68E               	btfsc	142,3,c	;volatile
  1988   004404  EF06  F022         	goto	u5491
  1989   004408  EF08  F022         	goto	u5490
  1990   00440C                     u5491:
  1991   00440C  EF21  F022         	goto	l537
  1992   004410                     u5490:
  1993   004410  B48E               	btfsc	142,2,c	;volatile
  1994   004412  EF0D  F022         	goto	u5501
  1995   004416  EF0F  F022         	goto	u5500
  1996   00441A                     u5501:
  1997   00441A  EF21  F022         	goto	l537
  1998   00441E                     u5500:
  1999   00441E                     
  2000                           ;dc_motor.c: 383:                 LATHbits.LATH3=1;
  2001   00441E  8680               	bsf	128,3,c	;volatile
  2002                           
  2003                           ;dc_motor.c: 384:                 LATDbits.LATD7=1;
  2004   004420  8E7C               	bsf	124,7,c	;volatile
  2005   004422                     
  2006                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2007   004422  0E52               	movlw	82
  2008   004424  6E25               	movwf	(??_turnCalibration+1)^0,c
  2009   004426  0E2B               	movlw	43
  2010   004428  6E24               	movwf	??_turnCalibration^0,c
  2011   00442A  0E00               	movlw	0
  2012   00442C                     u5877:
  2013   00442C  2EE8               	decfsz	wreg,f,c
  2014   00442E  D7FE               	bra	u5877
  2015   004430  2E24               	decfsz	??_turnCalibration^0,f,c
  2016   004432  D7FC               	bra	u5877
  2017   004434  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2018   004436  D7FA               	bra	u5877
  2019   004438  D000               	nop2	
  2020   00443A                     
  2021                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2022   00443A  9680               	bcf	128,3,c	;volatile
  2023   00443C                     
  2024                           ;dc_motor.c: 387:                 LATDbits.LATD7=0;
  2025   00443C  9E7C               	bcf	124,7,c	;volatile
  2026                           
  2027                           ;dc_motor.c: 388:             }
  2028   00443E  EF59  F022         	goto	l5645
  2029   004442                     l537:
  2030   004442  B68E               	btfsc	142,3,c	;volatile
  2031   004444  EF26  F022         	goto	u5511
  2032   004448  EF28  F022         	goto	u5510
  2033   00444C                     u5511:
  2034   00444C  EF3D  F022         	goto	l539
  2035   004450                     u5510:
  2036   004450                     
  2037                           ;dc_motor.c: 391:                 Turn45Delay+=10;
  2038   004450  0E0A               	movlw	10
  2039   004452  0100               	movlb	0	; () banked
  2040   004454  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2041   004456  0E00               	movlw	0
  2042   004458  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2043   00445A                     
  2044                           ; BSR set to: 0
  2045                           ;dc_motor.c: 392:                 LATHbits.LATH3=1;
  2046   00445A  8680               	bsf	128,3,c	;volatile
  2047   00445C                     
  2048                           ; BSR set to: 0
  2049                           ;dc_motor.c: 393:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2050   00445C  0E52               	movlw	82
  2051   00445E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2052   004460  0E2B               	movlw	43
  2053   004462  6E24               	movwf	??_turnCalibration^0,c
  2054   004464  0E00               	movlw	0
  2055   004466                     u5887:
  2056   004466  2EE8               	decfsz	wreg,f,c
  2057   004468  D7FE               	bra	u5887
  2058   00446A  2E24               	decfsz	??_turnCalibration^0,f,c
  2059   00446C  D7FC               	bra	u5887
  2060   00446E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2061   004470  D7FA               	bra	u5887
  2062   004472  D000               	nop2	
  2063   004474                     
  2064                           ;dc_motor.c: 394:                 LATHbits.LATH3=0;
  2065   004474  9680               	bcf	128,3,c	;volatile
  2066                           
  2067                           ;dc_motor.c: 395:             }
  2068   004476  EF59  F022         	goto	l5645
  2069   00447A                     l539:
  2070   00447A  B48E               	btfsc	142,2,c	;volatile
  2071   00447C  EF42  F022         	goto	u5521
  2072   004480  EF44  F022         	goto	u5520
  2073   004484                     u5521:
  2074   004484  EF59  F022         	goto	l538
  2075   004488                     u5520:
  2076   004488                     
  2077                           ;dc_motor.c: 398:                 Turn45Delay-=10;
  2078   004488  0100               	movlb	0	; () banked
  2079   00448A  0EF6               	movlw	246
  2080   00448C  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2081   00448E  0EFF               	movlw	255
  2082   004490  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2083   004492                     
  2084                           ; BSR set to: 0
  2085                           ;dc_motor.c: 399:                 LATDbits.LATD7=1;
  2086   004492  8E7C               	bsf	124,7,c	;volatile
  2087   004494                     
  2088                           ; BSR set to: 0
  2089                           ;dc_motor.c: 400:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2090   004494  0E52               	movlw	82
  2091   004496  6E25               	movwf	(??_turnCalibration+1)^0,c
  2092   004498  0E2B               	movlw	43
  2093   00449A  6E24               	movwf	??_turnCalibration^0,c
  2094   00449C  0E00               	movlw	0
  2095   00449E                     u5897:
  2096   00449E  2EE8               	decfsz	wreg,f,c
  2097   0044A0  D7FE               	bra	u5897
  2098   0044A2  2E24               	decfsz	??_turnCalibration^0,f,c
  2099   0044A4  D7FC               	bra	u5897
  2100   0044A6  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2101   0044A8  D7FA               	bra	u5897
  2102   0044AA  D000               	nop2	
  2103   0044AC                     
  2104                           ;dc_motor.c: 401:                 LATDbits.LATD7=0;
  2105   0044AC  9E7C               	bcf	124,7,c	;volatile
  2106   0044AE  EF59  F022         	goto	l5645
  2107   0044B2                     l538:
  2108   0044B2                     l5645:
  2109                           
  2110                           ;dc_motor.c: 377:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2111   0044B2  A48E               	btfss	142,2,c	;volatile
  2112   0044B4  EF5E  F022         	goto	u5531
  2113   0044B8  EF60  F022         	goto	u5530
  2114   0044BC                     u5531:
  2115   0044BC  EF67  F022         	goto	l544
  2116   0044C0                     u5530:
  2117   0044C0  B68E               	btfsc	142,3,c	;volatile
  2118   0044C2  EF65  F022         	goto	u5541
  2119   0044C6  EF67  F022         	goto	u5540
  2120   0044CA                     u5541:
  2121   0044CA  EFF4  F021         	goto	l536
  2122   0044CE                     u5540:
  2123   0044CE                     l544:
  2124                           
  2125                           ;dc_motor.c: 404:         LATDbits.LATD4=0;
  2126   0044CE  987C               	bcf	124,4,c	;volatile
  2127   0044D0                     
  2128                           ;dc_motor.c: 405:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2129   0044D0  0EA3               	movlw	163
  2130   0044D2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2131   0044D4  0E57               	movlw	87
  2132   0044D6  6E24               	movwf	??_turnCalibration^0,c
  2133   0044D8  0E02               	movlw	2
  2134   0044DA                     u5907:
  2135   0044DA  2EE8               	decfsz	wreg,f,c
  2136   0044DC  D7FE               	bra	u5907
  2137   0044DE  2E24               	decfsz	??_turnCalibration^0,f,c
  2138   0044E0  D7FC               	bra	u5907
  2139   0044E2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2140   0044E4  D7FA               	bra	u5907
  2141   0044E6  D000               	nop2	
  2142   0044E8                     l5651:
  2143                           
  2144                           ;dc_motor.c: 369:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2145   0044E8  B48E               	btfsc	142,2,c	;volatile
  2146   0044EA  EF79  F022         	goto	u5551
  2147   0044EE  EF7B  F022         	goto	u5550
  2148   0044F2                     u5551:
  2149   0044F2  EFC9  F021         	goto	l534
  2150   0044F6                     u5550:
  2151   0044F6  B68E               	btfsc	142,3,c	;volatile
  2152   0044F8  EF80  F022         	goto	u5561
  2153   0044FC  EF82  F022         	goto	u5560
  2154   004500                     u5561:
  2155   004500  EFC9  F021         	goto	l534
  2156   004504                     u5560:
  2157   004504                     
  2158                           ;dc_motor.c: 407:     LATDbits.LATD3=0;
  2159   004504  967C               	bcf	124,3,c	;volatile
  2160   004506                     
  2161                           ;dc_motor.c: 408:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2162   004506  0EA3               	movlw	163
  2163   004508  6E25               	movwf	(??_turnCalibration+1)^0,c
  2164   00450A  0E57               	movlw	87
  2165   00450C  6E24               	movwf	??_turnCalibration^0,c
  2166   00450E  0E02               	movlw	2
  2167   004510                     u5917:
  2168   004510  2EE8               	decfsz	wreg,f,c
  2169   004512  D7FE               	bra	u5917
  2170   004514  2E24               	decfsz	??_turnCalibration^0,f,c
  2171   004516  D7FC               	bra	u5917
  2172   004518  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2173   00451A  D7FA               	bra	u5917
  2174   00451C  D000               	nop2	
  2175   00451E  0012               	return		;funcret
  2176   004520                     __end_of_turnCalibration:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _sprintf *****************
  2180 ;; Defined at:
  2181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2184 ;;		 -> main@buf(100), 
  2185 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2186 ;;		 -> STR_1(51), 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2189 ;;  ap              2  100[BANK0 ] PTR void [1]
  2190 ;;		 -> ?_sprintf(2), 
  2191 ;;  ret             2    0        int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   80[BANK0 ] int 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2201 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;Total ram usage:       33 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 8
  2208 ;; This function calls:
  2209 ;;		_vfprintf
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text2
  2216   005902                     __ptext2:
  2217                           	callstack 0
  2218   005902                     _sprintf:
  2219                           	callstack 22
  2220   005902  0EB4               	movlw	low (?_sprintf+4)
  2221   005904  0100               	movlb	0	; () banked
  2222   005906  6FC4               	movwf	sprintf@ap& (0+255),b
  2223   005908  0E00               	movlw	high (?_sprintf+4)
  2224   00590A  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2225   00590C  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2226   005910  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2227   005914                     
  2228                           ; BSR set to: 0
  2229   005914  0E00               	movlw	0
  2230   005916  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2231   005918  0E00               	movlw	0
  2232   00591A  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2233   00591C                     
  2234                           ; BSR set to: 0
  2235   00591C  0E00               	movlw	0
  2236   00591E  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2237   005920  0E00               	movlw	0
  2238   005922  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2239   005924                     
  2240                           ; BSR set to: 0
  2241   005924  0EC6               	movlw	low sprintf@f
  2242   005926  6FA8               	movwf	vfprintf@fp& (0+255),b
  2243   005928  0E00               	movlw	high sprintf@f
  2244   00592A  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2245   00592C  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2246   005930  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2247   005934  0EC4               	movlw	low sprintf@ap
  2248   005936  6FAC               	movwf	vfprintf@ap& (0+255),b
  2249   005938  0E00               	movlw	high sprintf@ap
  2250   00593A  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2251   00593C  EC56  F02C         	call	_vfprintf	;wreg free
  2252   005940  0100               	movlb	0	; () banked
  2253   005942  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2254   005944  25B0               	addwf	sprintf@s& (0+255),w,b
  2255   005946  6ED9               	movwf	fsr2l,c
  2256   005948  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2257   00594A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2258   00594C  6EDA               	movwf	fsr2h,c
  2259   00594E  0E00               	movlw	0
  2260   005950  6EDF               	movwf	indf2,c
  2261   005952                     
  2262                           ; BSR set to: 0
  2263   005952  0012               	return		;funcret
  2264   005954                     __end_of_sprintf:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _vfprintf *****************
  2268 ;; Defined at:
  2269 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2272 ;;		 -> sprintf@f(11), 
  2273 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2274 ;;		 -> STR_1(51), 
  2275 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2276 ;;		 -> sprintf@ap(2), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2279 ;;		 -> STR_1(51), 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   72[BANK0 ] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:        8 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 7
  2296 ;; This function calls:
  2297 ;;		_vfpfcnvrt
  2298 ;; This function is called by:
  2299 ;;		_sprintf
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text3
  2304   0058AC                     __ptext3:
  2305                           	callstack 0
  2306   0058AC                     _vfprintf:
  2307                           	callstack 22
  2308   0058AC                     
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2310   0058AC  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2311   0058B0  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2314   0058B4  EF6B  F02C         	goto	l5335
  2315   0058B8                     l5333:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2318   0058B8  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2319   0058BC  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2320   0058C0  0EAE               	movlw	low vfprintf@cfmt
  2321   0058C2  0100               	movlb	0	; () banked
  2322   0058C4  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2323   0058C6  0E00               	movlw	high vfprintf@cfmt
  2324   0058C8  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2325   0058CA  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2326   0058CE  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2327   0058D2  ECEF  F018         	call	_vfpfcnvrt	;wreg free
  2328   0058D6                     l5335:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2331   0058D6  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2332   0058DA  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2333   0058DE                     	if	0	;tblptru may be non-zero
  2334   0058DE                     	endif
  2335   0058DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2336   0058DE  0E00               	movlw	low (__mediumconst shr (0+16))
  2337   0058E0  6EF8               	movwf	tblptru,c
  2338   0058E2                     	endif
  2339   0058E2  0008               	tblrd		*
  2340   0058E4  50F5               	movf	tablat,w,c
  2341   0058E6  0900               	iorlw	0
  2342   0058E8  A4D8               	btfss	status,2,c
  2343   0058EA  EF79  F02C         	goto	u5181
  2344   0058EE  EF7B  F02C         	goto	u5180
  2345   0058F2                     u5181:
  2346   0058F2  EF5C  F02C         	goto	l5333
  2347   0058F6                     u5180:
  2348   0058F6                     
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2350   0058F6  0E00               	movlw	0
  2351   0058F8  0100               	movlb	0	; () banked
  2352   0058FA  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2353   0058FC  0E00               	movlw	0
  2354   0058FE  6FA8               	movwf	?_vfprintf& (0+255),b
  2355   005900                     
  2356                           ; BSR set to: 0
  2357   005900  0012               	return		;funcret
  2358   005902                     __end_of_vfprintf:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _vfpfcnvrt *****************
  2362 ;; Defined at:
  2363 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2366 ;;		 -> sprintf@f(11), 
  2367 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2368 ;;		 -> vfprintf@cfmt(2), 
  2369 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2370 ;;		 -> sprintf@ap(2), 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  convarg         8   61[BANK0 ] struct .
  2373 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2374 ;;		 -> STR_1(51), 
  2375 ;;  i               2    0        int 
  2376 ;;  done            2    0        int 
  2377 ;;  c               1   69[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      void 
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2387 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2388 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;Total ram usage:       19 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; Hardware stack levels required when called: 6
  2394 ;; This function calls:
  2395 ;;		_dtoa
  2396 ;;		_efgtoa
  2397 ;;		_fputc
  2398 ;; This function is called by:
  2399 ;;		_vfprintf
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text4
  2404   0031DE                     __ptext4:
  2405                           	callstack 0
  2406   0031DE                     _vfpfcnvrt:
  2407                           	callstack 22
  2408   0031DE                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2410   0031DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2411   0031E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2412   0031E6  CFDE FFF6          	movff	postinc2,tblptrl
  2413   0031EA  CFDD FFF7          	movff	postdec2,tblptrh
  2414   0031EE                     	if	0	;tblptru may be non-zero
  2415   0031EE                     	endif
  2416   0031EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2417   0031EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2418   0031F0  6EF8               	movwf	tblptru,c
  2419   0031F2                     	endif
  2420   0031F2  0008               	tblrd		*
  2421   0031F4  50F5               	movf	tablat,w,c
  2422   0031F6  0A25               	xorlw	37
  2423   0031F8  A4D8               	btfss	status,2,c
  2424   0031FA  EF01  F019         	goto	u4951
  2425   0031FE  EF03  F019         	goto	u4950
  2426   003202                     u4951:
  2427   003202  EF5B  F01A         	goto	l5163
  2428   003206                     u4950:
  2429   003206                     
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2431   003206  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2432   00320A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2433   00320E  2ADE               	incf	postinc2,f,c
  2434   003210  0E00               	movlw	0
  2435   003212  22DD               	addwfc	postdec2,f,c
  2436   003214                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2438   003214  0E00               	movlw	0
  2439   003216  0100               	movlb	0	; () banked
  2440   003218  6FE8               	movwf	(_width+1)& (0+255),b
  2441   00321A  0E00               	movlw	0
  2442   00321C  6FE7               	movwf	_width& (0+255),b
  2443   00321E  C0E7  F0ED         	movff	_width,_flags
  2444   003222                     
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2447   003222  69E9               	setf	_prec& (0+255),b
  2448   003224  69EA               	setf	(_prec+1)& (0+255),b
  2449   003226                     
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2452   003226  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453   00322A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454   00322E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2455   003232  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2456   003236                     
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2459   003236  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2460   00323A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2461   00323E                     	if	0	;tblptru may be non-zero
  2462   00323E                     	endif
  2463   00323E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2464   00323E  0E00               	movlw	low (__mediumconst shr (0+16))
  2465   003240  6EF8               	movwf	tblptru,c
  2466   003242                     	endif
  2467   003242  0008               	tblrd		*
  2468   003244  50F5               	movf	tablat,w,c
  2469   003246  0A64               	xorlw	100
  2470   003248  B4D8               	btfsc	status,2,c
  2471   00324A  EF29  F019         	goto	u4961
  2472   00324E  EF2B  F019         	goto	u4960
  2473   003252                     u4961:
  2474   003252  EF3B  F019         	goto	l5119
  2475   003256                     u4960:
  2476   003256                     
  2477                           ; BSR set to: 0
  2478   003256  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2479   00325A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2480   00325E                     	if	0	;tblptru may be non-zero
  2481   00325E                     	endif
  2482   00325E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2483   00325E  0E00               	movlw	low (__mediumconst shr (0+16))
  2484   003260  6EF8               	movwf	tblptru,c
  2485   003262                     	endif
  2486   003262  0008               	tblrd		*
  2487   003264  50F5               	movf	tablat,w,c
  2488   003266  0A69               	xorlw	105
  2489   003268  A4D8               	btfss	status,2,c
  2490   00326A  EF39  F019         	goto	u4971
  2491   00326E  EF3B  F019         	goto	u4970
  2492   003272                     u4971:
  2493   003272  EF7E  F019         	goto	l5125
  2494   003276                     u4970:
  2495   003276                     l5119:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2499   003276  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2500   00327A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2501   00327E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2502   003282  0E02               	movlw	2
  2503   003284  26DE               	addwf	postinc2,f,c
  2504   003286  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2505   00328A  0E00               	movlw	0
  2506   00328C  22DD               	addwfc	postdec2,f,c
  2507   00328E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2508   003292  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2509   003296  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2510   00329A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2511   00329E  0E00               	movlw	0
  2512   0032A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2513   0032A2  0EFF               	movlw	-1
  2514   0032A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2515   0032A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2516   0032A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2517   0032AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2518   0032AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2519   0032AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2522   0032B0  0E01               	movlw	1
  2523   0032B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2524   0032B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2525   0032B6  0E00               	movlw	0
  2526   0032B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2527   0032BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2528   0032BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2529   0032C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2530   0032C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2531   0032C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2532   0032CC                     
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2535   0032CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2536   0032D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2537   0032D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2538   0032D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2539   0032DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2540   0032E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2541   0032E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2542   0032E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2543   0032EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2544   0032F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2545   0032F4  EC5C  F01D         	call	_dtoa	;wreg free
  2546   0032F8  EF71  F01A         	goto	l1542
  2547   0032FC                     l5125:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2551   0032FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2552   003300  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2553   003304  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2554   003308  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2555   00330C                     
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2558   00330C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2559   003310  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2560   003314                     	if	0	;tblptru may be non-zero
  2561   003314                     	endif
  2562   003314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2563   003314  0E00               	movlw	low (__mediumconst shr (0+16))
  2564   003316  6EF8               	movwf	tblptru,c
  2565   003318                     	endif
  2566   003318  0008               	tblrd		*
  2567   00331A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2570   00331E  EF9D  F019         	goto	l5137
  2571   003322                     l5129:
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2575   003322  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2576   003324  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2579   003326  EFB6  F019         	goto	l5139
  2580   00332A                     l5131:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2584   00332A  0E6C               	movlw	108
  2585   00332C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2588   00332E  EFB6  F019         	goto	l5139
  2589   003332                     l5133:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2593   003332  0E00               	movlw	0
  2594   003334  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2597   003336  EFB6  F019         	goto	l5139
  2598   00333A                     l5137:
  2599                           
  2600                           ; BSR set to: 0
  2601   00333A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2602   00333C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2603   00333E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2604                           
  2605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 1, Range of values is 0 to 0
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte            4     3 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612   003340  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2613   003342  0A00               	xorlw	0	; case 0
  2614   003344  B4D8               	btfsc	status,2,c
  2615   003346  EFA7  F019         	goto	l6033
  2616   00334A  EF99  F019         	goto	l5133
  2617   00334E                     l6033:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ; Switch size 1, requested type "simple"
  2621                           ; Number of cases is 3, Range of values is 76 to 108
  2622                           ; switch strategies available:
  2623                           ; Name         Instructions Cycles
  2624                           ; simple_byte           10     6 (average)
  2625                           ;	Chosen strategy is simple_byte
  2626   00334E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2627   003350  0A4C               	xorlw	76	; case 76
  2628   003352  B4D8               	btfsc	status,2,c
  2629   003354  EF91  F019         	goto	l5129
  2630   003358  0A2A               	xorlw	42	; case 102
  2631   00335A  B4D8               	btfsc	status,2,c
  2632   00335C  EF95  F019         	goto	l5131
  2633   003360  0A0A               	xorlw	10	; case 108
  2634   003362  B4D8               	btfsc	status,2,c
  2635   003364  EF91  F019         	goto	l5129
  2636   003368  EF99  F019         	goto	l5133
  2637   00336C                     l5139:
  2638                           
  2639                           ; BSR set to: 0
  2640   00336C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2641   003370  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2642   003374                     	if	0	;tblptru may be non-zero
  2643   003374                     	endif
  2644   003374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2645   003374  0E00               	movlw	low (__mediumconst shr (0+16))
  2646   003376  6EF8               	movwf	tblptru,c
  2647   003378                     	endif
  2648   003378  0008               	tblrd		*
  2649   00337A  50F5               	movf	tablat,w,c
  2650   00337C  0A66               	xorlw	102
  2651   00337E  A4D8               	btfss	status,2,c
  2652   003380  EFC4  F019         	goto	u4981
  2653   003384  EFC6  F019         	goto	u4980
  2654   003388                     u4981:
  2655   003388  EF52  F01A         	goto	l5159
  2656   00338C                     u4980:
  2657   00338C  EFFC  F019         	goto	l5147
  2658   003390                     l5141:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2662   003390  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2663   003394  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2664   003398  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2665   00339C  0E04               	movlw	4
  2666   00339E  26DE               	addwf	postinc2,f,c
  2667   0033A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2668   0033A4  0E00               	movlw	0
  2669   0033A6  22DD               	addwfc	postdec2,f,c
  2670   0033A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2671   0033AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2672   0033B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2673   0033B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2674   0033B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2675   0033BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2678   0033C0  EF11  F01A         	goto	l5149
  2679   0033C4                     l5143:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2683   0033C4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2684   0033C8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2685   0033CC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2686   0033D0  0E04               	movlw	4
  2687   0033D2  26DE               	addwf	postinc2,f,c
  2688   0033D4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2689   0033D8  0E00               	movlw	0
  2690   0033DA  22DD               	addwfc	postdec2,f,c
  2691   0033DC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2692   0033E0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2693   0033E4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2694   0033E8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2695   0033EC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2696   0033F0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2699   0033F4  EF11  F01A         	goto	l5149
  2700   0033F8                     l5147:
  2701                           
  2702                           ; BSR set to: 0
  2703   0033F8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2704   0033FA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2705   0033FC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2706                           
  2707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2708                           ; Switch size 1, requested type "simple"
  2709                           ; Number of cases is 1, Range of values is 0 to 0
  2710                           ; switch strategies available:
  2711                           ; Name         Instructions Cycles
  2712                           ; simple_byte            4     3 (average)
  2713                           ;	Chosen strategy is simple_byte
  2714   0033FE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2715   003400  0A00               	xorlw	0	; case 0
  2716   003402  B4D8               	btfsc	status,2,c
  2717   003404  EF06  F01A         	goto	l6035
  2718   003408  EF11  F01A         	goto	l5149
  2719   00340C                     l6035:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ; Switch size 1, requested type "simple"
  2723                           ; Number of cases is 2, Range of values is 76 to 108
  2724                           ; switch strategies available:
  2725                           ; Name         Instructions Cycles
  2726                           ; simple_byte            7     4 (average)
  2727                           ;	Chosen strategy is simple_byte
  2728   00340C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2729   00340E  0A4C               	xorlw	76	; case 76
  2730   003410  B4D8               	btfsc	status,2,c
  2731   003412  EFE2  F019         	goto	l5143
  2732   003416  0A20               	xorlw	32	; case 108
  2733   003418  B4D8               	btfsc	status,2,c
  2734   00341A  EFC8  F019         	goto	l5141
  2735   00341E  EF11  F01A         	goto	l5149
  2736   003422                     l5149:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2740   003422  0E01               	movlw	1
  2741   003424  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2742   003426  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2743   003428  0E00               	movlw	0
  2744   00342A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2745   00342C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2746   00342E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747   003432  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748   003436  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2749   00343A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2752   00343E  EF3A  F01A         	goto	l5157
  2753   003442                     l5151:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2757   003442  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2758   003446  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2759   00344A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2760   00344E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2761   003452  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2762   003456  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2763   00345A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2764   00345E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2765   003462                     	if	0	;tblptru may be non-zero
  2766   003462                     	endif
  2767   003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2768   003462  0E00               	movlw	low (__mediumconst shr (0+16))
  2769   003464  6EF8               	movwf	tblptru,c
  2770   003466                     	endif
  2771   003466  0008               	tblrd		*
  2772   003468  CFF5 F066          	movff	tablat,efgtoa@c
  2773   00346C  EC1F  F007         	call	_efgtoa	;wreg free
  2774   003470  EF71  F01A         	goto	l1542
  2775   003474                     l5157:
  2776                           
  2777                           ; BSR set to: 0
  2778   003474  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2779   003478  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2780   00347C                     	if	0	;tblptru may be non-zero
  2781   00347C                     	endif
  2782   00347C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2783   00347C  0E00               	movlw	low (__mediumconst shr (0+16))
  2784   00347E  6EF8               	movwf	tblptru,c
  2785   003480                     	endif
  2786   003480  0008               	tblrd		*
  2787   003482  50F5               	movf	tablat,w,c
  2788   003484  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2789   003486  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2790                           
  2791                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2792                           ; Switch size 1, requested type "simple"
  2793                           ; Number of cases is 1, Range of values is 0 to 0
  2794                           ; switch strategies available:
  2795                           ; Name         Instructions Cycles
  2796                           ; simple_byte            4     3 (average)
  2797                           ;	Chosen strategy is simple_byte
  2798   003488  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2799   00348A  0A00               	xorlw	0	; case 0
  2800   00348C  B4D8               	btfsc	status,2,c
  2801   00348E  EF4B  F01A         	goto	l6037
  2802   003492  EF52  F01A         	goto	l5159
  2803   003496                     l6037:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ; Switch size 1, requested type "simple"
  2807                           ; Number of cases is 1, Range of values is 102 to 102
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            4     3 (average)
  2811                           ;	Chosen strategy is simple_byte
  2812   003496  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2813   003498  0A66               	xorlw	102	; case 102
  2814   00349A  B4D8               	btfsc	status,2,c
  2815   00349C  EF21  F01A         	goto	l5151
  2816   0034A0  EF52  F01A         	goto	l5159
  2817   0034A4                     l5159:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2820   0034A4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2821   0034A8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2822   0034AC  2ADE               	incf	postinc2,f,c
  2823   0034AE  0E00               	movlw	0
  2824   0034B0  22DD               	addwfc	postdec2,f,c
  2825   0034B2  EF71  F01A         	goto	l1542
  2826   0034B6                     l5163:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2829   0034B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2830   0034BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2831   0034BE  CFDE FFF6          	movff	postinc2,tblptrl
  2832   0034C2  CFDD FFF7          	movff	postdec2,tblptrh
  2833   0034C6                     	if	0	;tblptru may be non-zero
  2834   0034C6                     	endif
  2835   0034C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2836   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2837   0034C8  6EF8               	movwf	tblptru,c
  2838   0034CA                     	endif
  2839   0034CA  0008               	tblrd		*
  2840   0034CC  50F5               	movf	tablat,w,c
  2841   0034CE  6E01               	movwf	fputc@c^0,c
  2842   0034D0  6A02               	clrf	(fputc@c+1)^0,c
  2843   0034D2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2844   0034D6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2845   0034DA  EC40  F026         	call	_fputc	;wreg free
  2846   0034DE  EF52  F01A         	goto	l5159
  2847   0034E2                     l1542:
  2848   0034E2  0012               	return		;funcret
  2849   0034E4                     __end_of_vfpfcnvrt:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _efgtoa *****************
  2853 ;; Defined at:
  2854 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2857 ;;		 -> sprintf@f(11), 
  2858 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2859 ;;  c               1    6[BANK0 ] unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  u               4   49[BANK0 ] struct flui
  2862 ;;  g               4   45[BANK0 ] struct flui
  2863 ;;  l               4   38[BANK0 ] struct flui
  2864 ;;  h               4   34[BANK0 ] struct flui
  2865 ;;  ou              4   28[BANK0 ] struct flui
  2866 ;;  n               2   43[BANK0 ] int 
  2867 ;;  i               2   32[BANK0 ] int 
  2868 ;;  w               2   26[BANK0 ] int 
  2869 ;;  e               2   24[BANK0 ] int 
  2870 ;;  m               2   22[BANK0 ] int 
  2871 ;;  d               2   20[BANK0 ] int 
  2872 ;;  t               2   13[BANK0 ] int 
  2873 ;;  p               2   11[BANK0 ] int 
  2874 ;;  ne              2    9[BANK0 ] int 
  2875 ;;  sign            1   42[BANK0 ] unsigned char 
  2876 ;;  nmode           1   19[BANK0 ] unsigned char 
  2877 ;;  mode            1   18[BANK0 ] unsigned char 
  2878 ;;  pp              1   17[BANK0 ] unsigned char 
  2879 ;;  esign           1    0        unsigned char 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2889 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;Total ram usage:       53 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 5
  2896 ;; This function calls:
  2897 ;;		___fladd
  2898 ;;		___fldiv
  2899 ;;		___fleq
  2900 ;;		___flge
  2901 ;;		___flmul
  2902 ;;		___flneg
  2903 ;;		___flsub
  2904 ;;		___fltol
  2905 ;;		___fpclassifyf
  2906 ;;		_floorf
  2907 ;;		_labs
  2908 ;;		_memcpy
  2909 ;;		_pad
  2910 ;;		_strcpy
  2911 ;; This function is called by:
  2912 ;;		_vfpfcnvrt
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text5
  2917   000E3E                     __ptext5:
  2918                           	callstack 0
  2919   000E3E                     _efgtoa:
  2920                           	callstack 22
  2921   000E3E                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2923   000E3E  0E00               	movlw	0
  2924   000E40  0100               	movlb	0	; () banked
  2925   000E42  6F8A               	movwf	efgtoa@sign& (0+255),b
  2926   000E44                     
  2927                           ; BSR set to: 0
  2928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2929   000E44  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2930   000E48  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2931   000E4C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2932   000E50  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2933   000E54                     
  2934                           ; BSR set to: 0
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2936   000E54  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2937   000E56  EF31  F007         	goto	u4590
  2938   000E5A  EF2F  F007         	goto	u4591
  2939   000E5E                     u4591:
  2940   000E5E  EF45  F007         	goto	l4821
  2941   000E62                     u4590:
  2942   000E62                     
  2943                           ; BSR set to: 0
  2944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2945   000E62  0E01               	movlw	1
  2946   000E64  6F8A               	movwf	efgtoa@sign& (0+255),b
  2947   000E66                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2950   000E66  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2951   000E6A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2952   000E6E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2953   000E72  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2954   000E76  EC9B  F02F         	call	___flneg	;wreg free
  2955   000E7A  C001  F08D         	movff	?___flneg,efgtoa@g
  2956   000E7E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2957   000E82  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2958   000E86  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2959   000E8A                     l4821:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2962   000E8A  0E00               	movlw	0
  2963   000E8C  0100               	movlb	0	; () banked
  2964   000E8E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2965   000E90  0E00               	movlw	0
  2966   000E92  6F8B               	movwf	efgtoa@n& (0+255),b
  2967   000E94                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2970   000E94  C0E7  F07A         	movff	_width,efgtoa@w
  2971   000E98  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2972   000E9C                     
  2973                           ; BSR set to: 0
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2975   000E9C  518A               	movf	efgtoa@sign& (0+255),w,b
  2976   000E9E  B4D8               	btfsc	status,2,c
  2977   000EA0  EF54  F007         	goto	u4601
  2978   000EA4  EF56  F007         	goto	u4600
  2979   000EA8                     u4601:
  2980   000EA8  EF6A  F007         	goto	l4835
  2981   000EAC                     u4600:
  2982   000EAC                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2985   000EAC  518A               	movf	efgtoa@sign& (0+255),w,b
  2986   000EAE  A4D8               	btfss	status,2,c
  2987   000EB0  EF5C  F007         	goto	u4611
  2988   000EB4  EF5E  F007         	goto	u4610
  2989   000EB8                     u4611:
  2990   000EB8  EF64  F007         	goto	l4831
  2991   000EBC                     u4610:
  2992   000EBC                     
  2993                           ; BSR set to: 0
  2994   000EBC  0E00               	movlw	0
  2995   000EBE  6F70               	movwf	(_efgtoa$2896+1)& (0+255),b
  2996   000EC0  0E2B               	movlw	43
  2997   000EC2  6F6F               	movwf	_efgtoa$2896& (0+255),b
  2998   000EC4  EF68  F007         	goto	l4833
  2999   000EC8                     l4831:
  3000                           
  3001                           ; BSR set to: 0
  3002   000EC8  0E00               	movlw	0
  3003   000ECA  6F70               	movwf	(_efgtoa$2896+1)& (0+255),b
  3004   000ECC  0E2D               	movlw	45
  3005   000ECE  6F6F               	movwf	_efgtoa$2896& (0+255),b
  3006   000ED0                     l4833:
  3007                           
  3008                           ; BSR set to: 0
  3009   000ED0  C06F  F08A         	movff	_efgtoa$2896,efgtoa@sign
  3010   000ED4                     l4835:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3014   000ED4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3015   000ED8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3016   000EDC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3017   000EE0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3018   000EE4  ECC1  F025         	call	___fpclassifyf	;wreg free
  3019   000EE8  0401               	decf	?___fpclassifyf^0,w,c
  3020   000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3021   000EEC  A4D8               	btfss	status,2,c
  3022   000EEE  EF7B  F007         	goto	u4621
  3023   000EF2  EF7D  F007         	goto	u4620
  3024   000EF6                     u4621:
  3025   000EF6  EFB0  F007         	goto	l4853
  3026   000EFA                     u4620:
  3027   000EFA                     
  3028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3029   000EFA  0100               	movlb	0	; () banked
  3030   000EFC  518A               	movf	efgtoa@sign& (0+255),w,b
  3031   000EFE  B4D8               	btfsc	status,2,c
  3032   000F00  EF84  F007         	goto	u4631
  3033   000F04  EF86  F007         	goto	u4630
  3034   000F08                     u4631:
  3035   000F08  EF8F  F007         	goto	l4845
  3036   000F0C                     u4630:
  3037   000F0C                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3040   000F0C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3041   000F10                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3044   000F10  077A               	decf	efgtoa@w& (0+255),f,b
  3045   000F12  A0D8               	btfss	status,0,c
  3046   000F14  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3047   000F16                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3050   000F16  0E00               	movlw	0
  3051   000F18  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3052   000F1A  0E01               	movlw	1
  3053   000F1C  6F8B               	movwf	efgtoa@n& (0+255),b
  3054   000F1E                     l4845:
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3058   000F1E  0EA0               	movlw	low _dbuf
  3059   000F20  258B               	addwf	efgtoa@n& (0+255),w,b
  3060   000F22  6E01               	movwf	strcpy@dest^0,c
  3061   000F24  0E02               	movlw	high _dbuf
  3062   000F26  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3063   000F28  6E02               	movwf	(strcpy@dest+1)^0,c
  3064   000F2A  0E34               	movlw	low STR_2
  3065   000F2C  6E03               	movwf	strcpy@src^0,c
  3066   000F2E  0E0E               	movlw	high STR_2
  3067   000F30  6E04               	movwf	(strcpy@src+1)^0,c
  3068   000F32  ECD8  F02E         	call	_strcpy	;wreg free
  3069   000F36                     l4847:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3072   000F36  0100               	movlb	0	; () banked
  3073   000F38  0EFD               	movlw	253
  3074   000F3A  277A               	addwf	efgtoa@w& (0+255),f,b
  3075   000F3C  0EFF               	movlw	255
  3076   000F3E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3077   000F40                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3080   000F40  C060  F011         	movff	efgtoa@fp,pad@fp
  3081   000F44  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3082   000F48  0EA0               	movlw	low _dbuf
  3083   000F4A  6E13               	movwf	pad@buf^0,c
  3084   000F4C  0E02               	movlw	high _dbuf
  3085   000F4E  6E14               	movwf	(pad@buf+1)^0,c
  3086   000F50  C07A  F015         	movff	efgtoa@w,pad@p
  3087   000F54  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3088   000F58  ECC4  F029         	call	_pad	;wreg free
  3089   000F5C  EF1B  F00C         	goto	l1494
  3090   000F60                     l4853:
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3093   000F60  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3094   000F64  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3095   000F68  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3096   000F6C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3097   000F70  ECC1  F025         	call	___fpclassifyf	;wreg free
  3098   000F74  5001               	movf	?___fpclassifyf^0,w,c
  3099   000F76  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3100   000F78  A4D8               	btfss	status,2,c
  3101   000F7A  EFC1  F007         	goto	u4641
  3102   000F7E  EFC3  F007         	goto	u4640
  3103   000F82                     u4641:
  3104   000F82  EFE3  F007         	goto	l4871
  3105   000F86                     u4640:
  3106   000F86                     
  3107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3108   000F86  0100               	movlb	0	; () banked
  3109   000F88  518A               	movf	efgtoa@sign& (0+255),w,b
  3110   000F8A  B4D8               	btfsc	status,2,c
  3111   000F8C  EFCA  F007         	goto	u4651
  3112   000F90  EFCC  F007         	goto	u4650
  3113   000F94                     u4651:
  3114   000F94  EFD5  F007         	goto	l4863
  3115   000F98                     u4650:
  3116   000F98                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3119   000F98  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3120   000F9C                     
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3123   000F9C  077A               	decf	efgtoa@w& (0+255),f,b
  3124   000F9E  A0D8               	btfss	status,0,c
  3125   000FA0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3126   000FA2                     
  3127                           ; BSR set to: 0
  3128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3129   000FA2  0E00               	movlw	0
  3130   000FA4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3131   000FA6  0E01               	movlw	1
  3132   000FA8  6F8B               	movwf	efgtoa@n& (0+255),b
  3133   000FAA                     l4863:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3137   000FAA  0EA0               	movlw	low _dbuf
  3138   000FAC  258B               	addwf	efgtoa@n& (0+255),w,b
  3139   000FAE  6E01               	movwf	strcpy@dest^0,c
  3140   000FB0  0E02               	movlw	high _dbuf
  3141   000FB2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3142   000FB4  6E02               	movwf	(strcpy@dest+1)^0,c
  3143   000FB6  0E38               	movlw	low STR_5
  3144   000FB8  6E03               	movwf	strcpy@src^0,c
  3145   000FBA  0E0E               	movlw	high STR_5
  3146   000FBC  6E04               	movwf	(strcpy@src+1)^0,c
  3147   000FBE  ECD8  F02E         	call	_strcpy	;wreg free
  3148   000FC2  EF9B  F007         	goto	l4847
  3149   000FC6                     l4871:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3152   000FC6  0E00               	movlw	0
  3153   000FC8  0100               	movlb	0	; () banked
  3154   000FCA  6F91               	movwf	efgtoa@u& (0+255),b
  3155   000FCC  0E00               	movlw	0
  3156   000FCE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3157   000FD0  0E80               	movlw	128
  3158   000FD2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3159   000FD4  0E3F               	movlw	63
  3160   000FD6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3163   000FD8  0E00               	movlw	0
  3164   000FDA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3165   000FDC  0E00               	movlw	0
  3166   000FDE  6F78               	movwf	efgtoa@e& (0+255),b
  3167   000FE0                     
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3170   000FE0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3171   000FE4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3172   000FE8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3173   000FEC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3174   000FF0  0E00               	movlw	0
  3175   000FF2  6E36               	movwf	___fleq@ff2^0,c
  3176   000FF4  0E00               	movlw	0
  3177   000FF6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3178   000FF8  0E00               	movlw	0
  3179   000FFA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3180   000FFC  0E00               	movlw	0
  3181   000FFE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3182   001000  ECB0  F027         	call	___fleq	;wreg free
  3183   001004  B0D8               	btfsc	status,0,c
  3184   001006  EF07  F008         	goto	u4661
  3185   00100A  EF09  F008         	goto	u4660
  3186   00100E                     u4661:
  3187   00100E  EFE8  F008         	goto	l1497
  3188   001012                     u4660:
  3189   001012  EF16  F008         	goto	l4879
  3190   001016                     l1499:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3193   001016  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3194   00101A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3195   00101E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3196   001022  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3197   001026                     
  3198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3199   001026  0100               	movlb	0	; () banked
  3200   001028  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3201   00102A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3202   00102C                     l4879:
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3205   00102C  C091  F011         	movff	efgtoa@u,___flmul@b
  3206   001030  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3207   001034  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3208   001038  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3209   00103C  0E00               	movlw	0
  3210   00103E  6E15               	movwf	___flmul@a^0,c
  3211   001040  0E00               	movlw	0
  3212   001042  6E16               	movwf	(___flmul@a+1)^0,c
  3213   001044  0E20               	movlw	32
  3214   001046  6E17               	movwf	(___flmul@a+2)^0,c
  3215   001048  0E41               	movlw	65
  3216   00104A  6E18               	movwf	(___flmul@a+3)^0,c
  3217   00104C  EC76  F013         	call	___flmul	;wreg free
  3218   001050  C011  F07C         	movff	?___flmul,efgtoa@ou
  3219   001054  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3220   001058  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3221   00105C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3222   001060  0100               	movlb	0	; () banked
  3223   001062  517C               	movf	efgtoa@ou& (0+255),w,b
  3224   001064  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3225   001066  6E01               	movwf	labs@a^0,c
  3226   001068  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3227   00106A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3228   00106C  6E02               	movwf	(labs@a+1)^0,c
  3229   00106E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3230   001070  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3231   001072  6E03               	movwf	(labs@a+2)^0,c
  3232   001074  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3233   001076  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3234   001078  6E04               	movwf	(labs@a+3)^0,c
  3235   00107A  ECE4  F02A         	call	_labs	;wreg free
  3236   00107E  BE04               	btfsc	(?_labs+3)^0,7,c
  3237   001080  EF4D  F008         	goto	u4671
  3238   001084  5004               	movf	(?_labs+3)^0,w,c
  3239   001086  1003               	iorwf	(?_labs+2)^0,w,c
  3240   001088  1002               	iorwf	(?_labs+1)^0,w,c
  3241   00108A  E109               	bnz	u4670
  3242   00108C  0E02               	movlw	2
  3243   00108E  5C01               	subwf	?_labs^0,w,c
  3244   001090  A0D8               	btfss	status,0,c
  3245   001092  EF4D  F008         	goto	u4671
  3246   001096  EF4F  F008         	goto	u4670
  3247   00109A                     u4671:
  3248   00109A  EF0B  F008         	goto	l1499
  3249   00109E                     u4670:
  3250   00109E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3251   0010A2  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3252   0010A6  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3253   0010AA  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3254   0010AE  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3255   0010B2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3256   0010B6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3257   0010BA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3258   0010BE  EC3F  F025         	call	___flge	;wreg free
  3259   0010C2  A0D8               	btfss	status,0,c
  3260   0010C4  EF66  F008         	goto	u4681
  3261   0010C8  EF68  F008         	goto	u4680
  3262   0010CC                     u4681:
  3263   0010CC  EF0B  F008         	goto	l1499
  3264   0010D0                     u4680:
  3265   0010D0                     
  3266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3267   0010D0  0100               	movlb	0	; () banked
  3268   0010D2  5191               	movf	efgtoa@u& (0+255),w,b
  3269   0010D4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3270   0010D6  6E01               	movwf	labs@a^0,c
  3271   0010D8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3272   0010DA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3273   0010DC  6E02               	movwf	(labs@a+1)^0,c
  3274   0010DE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3275   0010E0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3276   0010E2  6E03               	movwf	(labs@a+2)^0,c
  3277   0010E4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3278   0010E6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3279   0010E8  6E04               	movwf	(labs@a+3)^0,c
  3280   0010EA  ECE4  F02A         	call	_labs	;wreg free
  3281   0010EE  BE04               	btfsc	(?_labs+3)^0,7,c
  3282   0010F0  EF87  F008         	goto	u4690
  3283   0010F4  5004               	movf	(?_labs+3)^0,w,c
  3284   0010F6  1003               	iorwf	(?_labs+2)^0,w,c
  3285   0010F8  1002               	iorwf	(?_labs+1)^0,w,c
  3286   0010FA  E107               	bnz	u4691
  3287   0010FC  0E02               	movlw	2
  3288   0010FE  5C01               	subwf	?_labs^0,w,c
  3289   001100  B0D8               	btfsc	status,0,c
  3290   001102  EF85  F008         	goto	u4691
  3291   001106  EF87  F008         	goto	u4690
  3292   00110A                     u4691:
  3293   00110A  EFCF  F008         	goto	l4897
  3294   00110E                     u4690:
  3295   00110E                     l4887:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3298   00110E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3299   001112  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3300   001116  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3301   00111A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3304   00111E  EFE8  F008         	goto	l1497
  3305   001122                     l4889:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3308   001122  C091  F032         	movff	efgtoa@u,___fldiv@b
  3309   001126  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3310   00112A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3311   00112E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3312   001132  0E00               	movlw	0
  3313   001134  6E36               	movwf	___fldiv@a^0,c
  3314   001136  0E00               	movlw	0
  3315   001138  6E37               	movwf	(___fldiv@a+1)^0,c
  3316   00113A  0E20               	movlw	32
  3317   00113C  6E38               	movwf	(___fldiv@a+2)^0,c
  3318   00113E  0E41               	movlw	65
  3319   001140  6E39               	movwf	(___fldiv@a+3)^0,c
  3320   001142  EC8B  F015         	call	___fldiv	;wreg free
  3321   001146  C032  F091         	movff	?___fldiv,efgtoa@u
  3322   00114A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3323   00114E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3324   001152  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3325   001156                     
  3326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3327   001156  0100               	movlb	0	; () banked
  3328   001158  0778               	decf	efgtoa@e& (0+255),f,b
  3329   00115A  A0D8               	btfss	status,0,c
  3330   00115C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3331   00115E                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3334   00115E  5191               	movf	efgtoa@u& (0+255),w,b
  3335   001160  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3336   001162  6E01               	movwf	labs@a^0,c
  3337   001164  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3338   001166  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3339   001168  6E02               	movwf	(labs@a+1)^0,c
  3340   00116A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3341   00116C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3342   00116E  6E03               	movwf	(labs@a+2)^0,c
  3343   001170  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3344   001172  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3345   001174  6E04               	movwf	(labs@a+3)^0,c
  3346   001176  ECE4  F02A         	call	_labs	;wreg free
  3347   00117A  BE04               	btfsc	(?_labs+3)^0,7,c
  3348   00117C  EFCD  F008         	goto	u4700
  3349   001180  5004               	movf	(?_labs+3)^0,w,c
  3350   001182  1003               	iorwf	(?_labs+2)^0,w,c
  3351   001184  1002               	iorwf	(?_labs+1)^0,w,c
  3352   001186  E107               	bnz	u4701
  3353   001188  0E02               	movlw	2
  3354   00118A  5C01               	subwf	?_labs^0,w,c
  3355   00118C  B0D8               	btfsc	status,0,c
  3356   00118E  EFCB  F008         	goto	u4701
  3357   001192  EFCD  F008         	goto	u4700
  3358   001196                     u4701:
  3359   001196  EFCF  F008         	goto	l4897
  3360   00119A                     u4700:
  3361   00119A  EF87  F008         	goto	l4887
  3362   00119E                     l4897:
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3365   00119E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3366   0011A2  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3367   0011A6  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3368   0011AA  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3369   0011AE  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3370   0011B2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3371   0011B6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3372   0011BA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3373   0011BE  EC3F  F025         	call	___flge	;wreg free
  3374   0011C2  A0D8               	btfss	status,0,c
  3375   0011C4  EFE6  F008         	goto	u4711
  3376   0011C8  EFE8  F008         	goto	u4710
  3377   0011CC                     u4711:
  3378   0011CC  EF91  F008         	goto	l4889
  3379   0011D0                     u4710:
  3380   0011D0                     l1497:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3383   0011D0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3386   0011D4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3387   0011D8                     
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3389   0011D8  0100               	movlb	0	; () banked
  3390   0011DA  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3391   0011DC  EFF2  F008         	goto	u4721
  3392   0011E0  EFF4  F008         	goto	u4720
  3393   0011E4                     u4721:
  3394   0011E4  EFFA  F008         	goto	l4903
  3395   0011E8                     u4720:
  3396   0011E8                     
  3397                           ; BSR set to: 0
  3398   0011E8  C0E9  F06B         	movff	_prec,efgtoa@p
  3399   0011EC  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3400   0011F0  EFFE  F008         	goto	l4905
  3401   0011F4                     l4903:
  3402                           
  3403                           ; BSR set to: 0
  3404   0011F4  0E00               	movlw	0
  3405   0011F6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3406   0011F8  0E06               	movlw	6
  3407   0011FA  6F6B               	movwf	efgtoa@p& (0+255),b
  3408   0011FC                     l4905:
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3412   0011FC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3413   001200  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3414   001204                     
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3417   001204  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3418   001206  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3419   001208                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3422   001208  0E66               	movlw	102
  3423   00120A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3424   00120C  A4D8               	btfss	status,2,c
  3425   00120E  EF0B  F009         	goto	u4731
  3426   001212  EF0D  F009         	goto	u4730
  3427   001216                     u4731:
  3428   001216  EF2D  F009         	goto	l4919
  3429   00121A                     u4730:
  3430   00121A                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3433   00121A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3434   00121C  EF14  F009         	goto	u4740
  3435   001220  EF12  F009         	goto	u4741
  3436   001224                     u4741:
  3437   001224  EF20  F009         	goto	l4915
  3438   001228                     u4740:
  3439   001228                     
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3442   001228  0E00               	movlw	0
  3443   00122A  6F91               	movwf	efgtoa@u& (0+255),b
  3444   00122C  0E00               	movlw	0
  3445   00122E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3446   001230  0E80               	movlw	128
  3447   001232  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3448   001234  0E3F               	movlw	63
  3449   001236  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3452   001238  0E00               	movlw	0
  3453   00123A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3454   00123C  0E00               	movlw	0
  3455   00123E  6F78               	movwf	efgtoa@e& (0+255),b
  3456   001240                     l4915:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3460   001240  0E67               	movlw	103
  3461   001242  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3462   001244  B4D8               	btfsc	status,2,c
  3463   001246  EF27  F009         	goto	u4751
  3464   00124A  EF29  F009         	goto	u4750
  3465   00124E                     u4751:
  3466   00124E  EF2D  F009         	goto	l4919
  3467   001252                     u4750:
  3468   001252                     
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3471   001252  5178               	movf	efgtoa@e& (0+255),w,b
  3472   001254  2776               	addwf	efgtoa@m& (0+255),f,b
  3473   001256  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3474   001258  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3475   00125A                     l4919:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3479   00125A  0E00               	movlw	0
  3480   00125C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3481   00125E  0E00               	movlw	0
  3482   001260  6F80               	movwf	efgtoa@i& (0+255),b
  3483   001262                     
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3486   001262  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3487   001266  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3488   00126A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3489   00126E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3490   001272                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3493   001272  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3494   001276  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3495   00127A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3496   00127E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3499   001282  EFBE  F009         	goto	l4933
  3500   001286                     l4925:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3504   001286  C082  F032         	movff	efgtoa@h,___fldiv@b
  3505   00128A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3506   00128E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3507   001292  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3508   001296  C091  F036         	movff	efgtoa@u,___fldiv@a
  3509   00129A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3510   00129E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3511   0012A2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3512   0012A6  EC8B  F015         	call	___fldiv	;wreg free
  3513   0012AA  C032  F04B         	movff	?___fldiv,floorf@x
  3514   0012AE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3515   0012B2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3516   0012B6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3517   0012BA  ECD7  F01F         	call	_floorf	;wreg free
  3518   0012BE  C04B  F086         	movff	?_floorf,efgtoa@l
  3519   0012C2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3520   0012C6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3521   0012CA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3524   0012CE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3525   0012D2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3526   0012D6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3527   0012DA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3528   0012DE  ECBC  F024         	call	___fltol	;wreg free
  3529   0012E2  C001  F074         	movff	?___fltol,efgtoa@d
  3530   0012E6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3531   0012EA                     
  3532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3533   0012EA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3534   0012EE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3535   0012F2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3536   0012F6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3537   0012FA  C086  F015         	movff	efgtoa@l,___flmul@a
  3538   0012FE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3539   001302  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3540   001306  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3541   00130A  C091  F011         	movff	efgtoa@u,___flmul@b
  3542   00130E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3543   001312  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3544   001316  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3545   00131A  EC76  F013         	call	___flmul	;wreg free
  3546   00131E  C011  F02E         	movff	?___flmul,___flsub@a
  3547   001322  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3548   001326  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3549   00132A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3550   00132E  ECB5  F02E         	call	___flsub	;wreg free
  3551   001332  C02A  F082         	movff	?___flsub,efgtoa@h
  3552   001336  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3553   00133A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3554   00133E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3555   001342                     
  3556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3557   001342  C091  F032         	movff	efgtoa@u,___fldiv@b
  3558   001346  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3559   00134A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3560   00134E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3561   001352  0E00               	movlw	0
  3562   001354  6E36               	movwf	___fldiv@a^0,c
  3563   001356  0E00               	movlw	0
  3564   001358  6E37               	movwf	(___fldiv@a+1)^0,c
  3565   00135A  0E20               	movlw	32
  3566   00135C  6E38               	movwf	(___fldiv@a+2)^0,c
  3567   00135E  0E41               	movlw	65
  3568   001360  6E39               	movwf	(___fldiv@a+3)^0,c
  3569   001362  EC8B  F015         	call	___fldiv	;wreg free
  3570   001366  C032  F091         	movff	?___fldiv,efgtoa@u
  3571   00136A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3572   00136E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3573   001372  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3574   001376                     
  3575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3576   001376  0100               	movlb	0	; () banked
  3577   001378  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3578   00137A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3579   00137C                     l4933:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3583   00137C  5176               	movf	efgtoa@m& (0+255),w,b
  3584   00137E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3585   001380  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3586   001382  0A80               	xorlw	128
  3587   001384  6F67               	movwf	??_efgtoa& (0+255),b
  3588   001386  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3589   001388  0A80               	xorlw	128
  3590   00138A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3591   00138C  A0D8               	btfss	status,0,c
  3592   00138E  EFCB  F009         	goto	u4761
  3593   001392  EFCD  F009         	goto	u4760
  3594   001396                     u4761:
  3595   001396  EF43  F009         	goto	l4925
  3596   00139A                     u4760:
  3597   00139A                     
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3600   00139A  C091  F011         	movff	efgtoa@u,___flmul@b
  3601   00139E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3602   0013A2  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3603   0013A6  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3604   0013AA  0E00               	movlw	0
  3605   0013AC  6E15               	movwf	___flmul@a^0,c
  3606   0013AE  0E00               	movlw	0
  3607   0013B0  6E16               	movwf	(___flmul@a+1)^0,c
  3608   0013B2  0EA0               	movlw	160
  3609   0013B4  6E17               	movwf	(___flmul@a+2)^0,c
  3610   0013B6  0E40               	movlw	64
  3611   0013B8  6E18               	movwf	(___flmul@a+3)^0,c
  3612   0013BA  EC76  F013         	call	___flmul	;wreg free
  3613   0013BE  C011  F086         	movff	?___flmul,efgtoa@l
  3614   0013C2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3615   0013C6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3616   0013CA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3617   0013CE                     
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3619   0013CE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3620   0013D2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3621   0013D6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3622   0013DA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3623   0013DE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3624   0013E2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3625   0013E6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3626   0013EA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3627   0013EE  EC3F  F025         	call	___flge	;wreg free
  3628   0013F2  B0D8               	btfsc	status,0,c
  3629   0013F4  EFFE  F009         	goto	u4771
  3630   0013F8  EF00  F00A         	goto	u4770
  3631   0013FC                     u4771:
  3632   0013FC  EF0B  F00A         	goto	l4941
  3633   001400                     u4770:
  3634   001400                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3636   001400  0E00               	movlw	0
  3637   001402  0100               	movlb	0	; () banked
  3638   001404  6F86               	movwf	efgtoa@l& (0+255),b
  3639   001406  0E00               	movlw	0
  3640   001408  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3641   00140A  0E00               	movlw	0
  3642   00140C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3643   00140E  0E00               	movlw	0
  3644   001410  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3647   001412  EF34  F00A         	goto	l4947
  3648   001416                     l4941:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3651   001416  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3652   00141A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3653   00141E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3654   001422  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3655   001426  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3656   00142A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3657   00142E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3658   001432  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3659   001436  ECB0  F027         	call	___fleq	;wreg free
  3660   00143A  A0D8               	btfss	status,0,c
  3661   00143C  EF22  F00A         	goto	u4781
  3662   001440  EF24  F00A         	goto	u4780
  3663   001444                     u4781:
  3664   001444  EF34  F00A         	goto	l4947
  3665   001448                     u4780:
  3666   001448  0100               	movlb	0	; () banked
  3667   00144A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3668   00144C  EF2A  F00A         	goto	u4791
  3669   001450  EF2C  F00A         	goto	u4790
  3670   001454                     u4791:
  3671   001454  EF34  F00A         	goto	l4947
  3672   001458                     u4790:
  3673   001458                     
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3676   001458  0E00               	movlw	0
  3677   00145A  6F86               	movwf	efgtoa@l& (0+255),b
  3678   00145C  0E00               	movlw	0
  3679   00145E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3680   001460  0E00               	movlw	0
  3681   001462  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3682   001464  0E00               	movlw	0
  3683   001466  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3684   001468                     l4947:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3687   001468  C08D  F001         	movff	efgtoa@g,___fladd@b
  3688   00146C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3689   001470  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3690   001474  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3691   001478  C086  F005         	movff	efgtoa@l,___fladd@a
  3692   00147C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3693   001480  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3694   001484  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3695   001488  EC16  F011         	call	___fladd	;wreg free
  3696   00148C  C001  F082         	movff	?___fladd,efgtoa@h
  3697   001490  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3698   001494  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3699   001498  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3700   00149C                     
  3701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3702   00149C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3703   0014A0  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3704   0014A4  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3705   0014A8  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3706   0014AC  0E00               	movlw	0
  3707   0014AE  6E15               	movwf	___flmul@a^0,c
  3708   0014B0  0E00               	movlw	0
  3709   0014B2  6E16               	movwf	(___flmul@a+1)^0,c
  3710   0014B4  0E20               	movlw	32
  3711   0014B6  6E17               	movwf	(___flmul@a+2)^0,c
  3712   0014B8  0E41               	movlw	65
  3713   0014BA  6E18               	movwf	(___flmul@a+3)^0,c
  3714   0014BC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3715   0014C0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3716   0014C4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3717   0014C8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3718   0014CC  EC76  F013         	call	___flmul	;wreg free
  3719   0014D0  C011  F02E         	movff	?___flmul,___flge@ff2
  3720   0014D4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3721   0014D8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3722   0014DC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3723   0014E0  EC3F  F025         	call	___flge	;wreg free
  3724   0014E4  A0D8               	btfss	status,0,c
  3725   0014E6  EF77  F00A         	goto	u4801
  3726   0014EA  EF79  F00A         	goto	u4800
  3727   0014EE                     u4801:
  3728   0014EE  EFA2  F00A         	goto	l4959
  3729   0014F2                     u4800:
  3730   0014F2                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3732   0014F2  0100               	movlb	0	; () banked
  3733   0014F4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3734   0014F6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3735   0014F8                     
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3738   0014F8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3739   0014FC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3740   001500  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3741   001504  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3742   001508  0E00               	movlw	0
  3743   00150A  6E15               	movwf	___flmul@a^0,c
  3744   00150C  0E00               	movlw	0
  3745   00150E  6E16               	movwf	(___flmul@a+1)^0,c
  3746   001510  0E20               	movlw	32
  3747   001512  6E17               	movwf	(___flmul@a+2)^0,c
  3748   001514  0E41               	movlw	65
  3749   001516  6E18               	movwf	(___flmul@a+3)^0,c
  3750   001518  EC76  F013         	call	___flmul	;wreg free
  3751   00151C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3752   001520  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3753   001524  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3754   001528  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3755   00152C                     
  3756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3757   00152C  0E66               	movlw	102
  3758   00152E  0100               	movlb	0	; () banked
  3759   001530  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3760   001532  A4D8               	btfss	status,2,c
  3761   001534  EF9E  F00A         	goto	u4811
  3762   001538  EFA0  F00A         	goto	u4810
  3763   00153C                     u4811:
  3764   00153C  EFA2  F00A         	goto	l4959
  3765   001540                     u4810:
  3766   001540                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3769   001540  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3770   001542  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3771   001544                     l4959:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3774   001544  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3775   001548  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3776   00154C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3777   001550  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3778   001554                     
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3780   001554  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3781   001558  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3782   00155C                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3784   00155C  0E00               	movlw	0
  3785   00155E  0100               	movlb	0	; () banked
  3786   001560  6F71               	movwf	efgtoa@pp& (0+255),b
  3787   001562                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3790   001562  0E00               	movlw	0
  3791   001564  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3792   001566  0E00               	movlw	0
  3793   001568  6F6D               	movwf	efgtoa@t& (0+255),b
  3794   00156A                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3797   00156A  0E00               	movlw	0
  3798   00156C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3799   00156E  0E00               	movlw	0
  3800   001570  6F80               	movwf	efgtoa@i& (0+255),b
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3803   001572  EFA0  F00B         	goto	l5009
  3804   001576                     l4969:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3808   001576  C082  F032         	movff	efgtoa@h,___fldiv@b
  3809   00157A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3810   00157E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3811   001582  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3812   001586  C091  F036         	movff	efgtoa@u,___fldiv@a
  3813   00158A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3814   00158E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3815   001592  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3816   001596  EC8B  F015         	call	___fldiv	;wreg free
  3817   00159A  C032  F04B         	movff	?___fldiv,floorf@x
  3818   00159E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3819   0015A2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3820   0015A6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3821   0015AA  ECD7  F01F         	call	_floorf	;wreg free
  3822   0015AE  C04B  F086         	movff	?_floorf,efgtoa@l
  3823   0015B2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3824   0015B6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3825   0015BA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3828   0015BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3829   0015C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3830   0015C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3831   0015CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3832   0015CE  ECBC  F024         	call	___fltol	;wreg free
  3833   0015D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3834   0015D4  EFF7  F00A         	goto	u4820
  3835   0015D8  5002               	movf	(?___fltol+1)^0,w,c
  3836   0015DA  E107               	bnz	u4821
  3837   0015DC  0E0A               	movlw	10
  3838   0015DE  5C01               	subwf	?___fltol^0,w,c
  3839   0015E0  B0D8               	btfsc	status,0,c
  3840   0015E2  EFF5  F00A         	goto	u4821
  3841   0015E6  EFF7  F00A         	goto	u4820
  3842   0015EA                     u4821:
  3843   0015EA  EF07  F00B         	goto	l4973
  3844   0015EE                     u4820:
  3845   0015EE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3846   0015F2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3847   0015F6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3848   0015FA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3849   0015FE  ECBC  F024         	call	___fltol	;wreg free
  3850   001602  C001  F074         	movff	?___fltol,efgtoa@d
  3851   001606  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3852   00160A  EF0C  F00B         	goto	l1527
  3853   00160E                     l4973:
  3854   00160E  0E00               	movlw	0
  3855   001610  0100               	movlb	0	; () banked
  3856   001612  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3857   001614  0E09               	movlw	9
  3858   001616  6F74               	movwf	efgtoa@d& (0+255),b
  3859   001618                     l1527:
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3862   001618  0100               	movlb	0	; () banked
  3863   00161A  5171               	movf	efgtoa@pp& (0+255),w,b
  3864   00161C  A4D8               	btfss	status,2,c
  3865   00161E  EF13  F00B         	goto	u4831
  3866   001622  EF15  F00B         	goto	u4830
  3867   001626                     u4831:
  3868   001626  EF3D  F00B         	goto	l4993
  3869   00162A                     u4830:
  3870   00162A                     
  3871                           ; BSR set to: 0
  3872   00162A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3873   00162C  EF1C  F00B         	goto	u4840
  3874   001630  EF1A  F00B         	goto	u4841
  3875   001634                     u4841:
  3876   001634  EF3D  F00B         	goto	l4993
  3877   001638                     u4840:
  3878   001638                     
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3881   001638  0EA0               	movlw	low _dbuf
  3882   00163A  258B               	addwf	efgtoa@n& (0+255),w,b
  3883   00163C  6ED9               	movwf	fsr2l,c
  3884   00163E  0E02               	movlw	high _dbuf
  3885   001640  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3886   001642  6EDA               	movwf	fsr2h,c
  3887   001644  0E2E               	movlw	46
  3888   001646  6EDF               	movwf	indf2,c
  3889   001648                     
  3890                           ; BSR set to: 0
  3891   001648  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3892   00164A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3893   00164C                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3896   00164C  077A               	decf	efgtoa@w& (0+255),f,b
  3897   00164E  A0D8               	btfss	status,0,c
  3898   001650  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3899   001652                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3902   001652  0E01               	movlw	1
  3903   001654  6F71               	movwf	efgtoa@pp& (0+255),b
  3904   001656  EF3D  F00B         	goto	l4993
  3905   00165A                     l4985:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3909   00165A  0EA0               	movlw	low _dbuf
  3910   00165C  258B               	addwf	efgtoa@n& (0+255),w,b
  3911   00165E  6ED9               	movwf	fsr2l,c
  3912   001660  0E02               	movlw	high _dbuf
  3913   001662  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3914   001664  6EDA               	movwf	fsr2h,c
  3915   001666  0E30               	movlw	48
  3916   001668  6EDF               	movwf	indf2,c
  3917   00166A                     
  3918                           ; BSR set to: 0
  3919   00166A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3920   00166C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3921   00166E                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3924   00166E  077A               	decf	efgtoa@w& (0+255),f,b
  3925   001670  A0D8               	btfss	status,0,c
  3926   001672  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3927   001674                     
  3928                           ; BSR set to: 0
  3929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3930   001674  076D               	decf	efgtoa@t& (0+255),f,b
  3931   001676  A0D8               	btfss	status,0,c
  3932   001678  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3933   00167A                     l4993:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3937   00167A  516D               	movf	efgtoa@t& (0+255),w,b
  3938   00167C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3939   00167E  A4D8               	btfss	status,2,c
  3940   001680  EF44  F00B         	goto	u4851
  3941   001684  EF46  F00B         	goto	u4850
  3942   001688                     u4851:
  3943   001688  EF2D  F00B         	goto	l4985
  3944   00168C                     u4850:
  3945   00168C                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3948   00168C  0EA0               	movlw	low _dbuf
  3949   00168E  258B               	addwf	efgtoa@n& (0+255),w,b
  3950   001690  6ED9               	movwf	fsr2l,c
  3951   001692  0E02               	movlw	high _dbuf
  3952   001694  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3953   001696  6EDA               	movwf	fsr2h,c
  3954   001698  5174               	movf	efgtoa@d& (0+255),w,b
  3955   00169A  0F30               	addlw	48
  3956   00169C  6EDF               	movwf	indf2,c
  3957   00169E                     
  3958                           ; BSR set to: 0
  3959   00169E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3960   0016A0  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3961   0016A2                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3964   0016A2  077A               	decf	efgtoa@w& (0+255),f,b
  3965   0016A4  A0D8               	btfss	status,0,c
  3966   0016A6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3967   0016A8                     
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3970   0016A8  C082  F02A         	movff	efgtoa@h,___flsub@b
  3971   0016AC  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3972   0016B0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3973   0016B4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3974   0016B8  C086  F015         	movff	efgtoa@l,___flmul@a
  3975   0016BC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3976   0016C0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3977   0016C4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3978   0016C8  C091  F011         	movff	efgtoa@u,___flmul@b
  3979   0016CC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3980   0016D0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3981   0016D4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3982   0016D8  EC76  F013         	call	___flmul	;wreg free
  3983   0016DC  C011  F02E         	movff	?___flmul,___flsub@a
  3984   0016E0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3985   0016E4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3986   0016E8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3987   0016EC  ECB5  F02E         	call	___flsub	;wreg free
  3988   0016F0  C02A  F082         	movff	?___flsub,efgtoa@h
  3989   0016F4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3990   0016F8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3991   0016FC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3992   001700                     
  3993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3994   001700  C091  F032         	movff	efgtoa@u,___fldiv@b
  3995   001704  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3996   001708  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3997   00170C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3998   001710  0E00               	movlw	0
  3999   001712  6E36               	movwf	___fldiv@a^0,c
  4000   001714  0E00               	movlw	0
  4001   001716  6E37               	movwf	(___fldiv@a+1)^0,c
  4002   001718  0E20               	movlw	32
  4003   00171A  6E38               	movwf	(___fldiv@a+2)^0,c
  4004   00171C  0E41               	movlw	65
  4005   00171E  6E39               	movwf	(___fldiv@a+3)^0,c
  4006   001720  EC8B  F015         	call	___fldiv	;wreg free
  4007   001724  C032  F091         	movff	?___fldiv,efgtoa@u
  4008   001728  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4009   00172C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4010   001730  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4011   001734                     
  4012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4013   001734  0100               	movlb	0	; () banked
  4014   001736  0769               	decf	efgtoa@ne& (0+255),f,b
  4015   001738  A0D8               	btfss	status,0,c
  4016   00173A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4017   00173C                     
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4020   00173C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4021   00173E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4022   001740                     l5009:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4026   001740  5176               	movf	efgtoa@m& (0+255),w,b
  4027   001742  5D80               	subwf	efgtoa@i& (0+255),w,b
  4028   001744  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4029   001746  0A80               	xorlw	128
  4030   001748  6F67               	movwf	??_efgtoa& (0+255),b
  4031   00174A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4032   00174C  0A80               	xorlw	128
  4033   00174E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4034   001750  B0D8               	btfsc	status,0,c
  4035   001752  EFAD  F00B         	goto	u4861
  4036   001756  EFAF  F00B         	goto	u4860
  4037   00175A                     u4861:
  4038   00175A  EFBD  F00B         	goto	l5013
  4039   00175E                     u4860:
  4040   00175E                     
  4041                           ; BSR set to: 0
  4042   00175E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4043   001760  EFBB  F00B         	goto	u4871
  4044   001764  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4045   001766  E109               	bnz	u4870
  4046   001768  0E4B               	movlw	75
  4047   00176A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4048   00176C  A0D8               	btfss	status,0,c
  4049   00176E  EFBB  F00B         	goto	u4871
  4050   001772  EFBD  F00B         	goto	u4870
  4051   001776                     u4871:
  4052   001776  EFBB  F00A         	goto	l4969
  4053   00177A                     u4870:
  4054   00177A                     l5013:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4058   00177A  0E00               	movlw	0
  4059   00177C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4060   00177E  0E4F               	movlw	79
  4061   001780  6F80               	movwf	efgtoa@i& (0+255),b
  4062   001782                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4065   001782  0EA0               	movlw	low _dbuf
  4066   001784  2580               	addwf	efgtoa@i& (0+255),w,b
  4067   001786  6ED9               	movwf	fsr2l,c
  4068   001788  0E02               	movlw	high _dbuf
  4069   00178A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4070   00178C  6EDA               	movwf	fsr2h,c
  4071   00178E  0E00               	movlw	0
  4072   001790  6EDF               	movwf	indf2,c
  4073   001792                     
  4074                           ; BSR set to: 0
  4075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4076   001792  0EA0               	movlw	low _dbuf
  4077   001794  6F67               	movwf	??_efgtoa& (0+255),b
  4078   001796  0E02               	movlw	high _dbuf
  4079   001798  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4080   00179A  518B               	movf	efgtoa@n& (0+255),w,b
  4081   00179C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4082   00179E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4083   0017A0  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4084   0017A2  5180               	movf	efgtoa@i& (0+255),w,b
  4085   0017A4  2567               	addwf	??_efgtoa& (0+255),w,b
  4086   0017A6  6E01               	movwf	memcpy@d1^0,c
  4087   0017A8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4088   0017AA  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4089   0017AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4090   0017AE  0EA0               	movlw	low _dbuf
  4091   0017B0  6E03               	movwf	memcpy@s1^0,c
  4092   0017B2  0E02               	movlw	high _dbuf
  4093   0017B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4094   0017B6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4095   0017BA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4096   0017BE  EC77  F02D         	call	_memcpy	;wreg free
  4097   0017C2                     
  4098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4099   0017C2  0100               	movlb	0	; () banked
  4100   0017C4  518B               	movf	efgtoa@n& (0+255),w,b
  4101   0017C6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4102   0017C8  6F8B               	movwf	efgtoa@n& (0+255),b
  4103   0017CA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4104   0017CC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4105   0017CE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4106   0017D0                     
  4107                           ; BSR set to: 0
  4108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4109   0017D0  518A               	movf	efgtoa@sign& (0+255),w,b
  4110   0017D2  A4D8               	btfss	status,2,c
  4111   0017D4  EFEE  F00B         	goto	u4881
  4112   0017D8  EFF1  F00B         	goto	u4880
  4113   0017DC                     u4881:
  4114   0017DC  0E01               	movlw	1
  4115   0017DE  EFF2  F00B         	goto	u4890
  4116   0017E2                     u4880:
  4117   0017E2  0E00               	movlw	0
  4118   0017E4                     u4890:
  4119   0017E4  6F80               	movwf	efgtoa@i& (0+255),b
  4120   0017E6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4121   0017E8                     
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4124   0017E8  518A               	movf	efgtoa@sign& (0+255),w,b
  4125   0017EA  B4D8               	btfsc	status,2,c
  4126   0017EC  EFFA  F00B         	goto	u4901
  4127   0017F0  EFFC  F00B         	goto	u4900
  4128   0017F4                     u4901:
  4129   0017F4  EF07  F00C         	goto	l5027
  4130   0017F8                     u4900:
  4131   0017F8                     
  4132                           ; BSR set to: 0
  4133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4134   0017F8  078B               	decf	efgtoa@n& (0+255),f,b
  4135   0017FA  A0D8               	btfss	status,0,c
  4136   0017FC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4137   0017FE  0EA0               	movlw	low _dbuf
  4138   001800  258B               	addwf	efgtoa@n& (0+255),w,b
  4139   001802  6ED9               	movwf	fsr2l,c
  4140   001804  0E02               	movlw	high _dbuf
  4141   001806  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4142   001808  6EDA               	movwf	fsr2h,c
  4143   00180A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4144   00180E                     l5027:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4148   00180E  5180               	movf	efgtoa@i& (0+255),w,b
  4149   001810  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4150   001812  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4151   001814  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4152   001816                     
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4155   001816  C060  F011         	movff	efgtoa@fp,pad@fp
  4156   00181A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4157   00181E  0EA0               	movlw	low _dbuf
  4158   001820  258B               	addwf	efgtoa@n& (0+255),w,b
  4159   001822  6E13               	movwf	pad@buf^0,c
  4160   001824  0E02               	movlw	high _dbuf
  4161   001826  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4162   001828  6E14               	movwf	(pad@buf+1)^0,c
  4163   00182A  C07A  F015         	movff	efgtoa@w,pad@p
  4164   00182E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4165   001832  ECC4  F029         	call	_pad	;wreg free
  4166   001836                     l1494:
  4167   001836  0012               	return		;funcret
  4168   001838                     __end_of_efgtoa:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _strcpy *****************
  4172 ;; Defined at:
  4173 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4176 ;;		 -> dbuf(80), 
  4177 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4178 ;;		 -> STR_5(4), STR_2(4), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  d               2    6[COMRAM] PTR unsigned char 
  4181 ;;		 -> dbuf(80), 
  4182 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4183 ;;		 -> STR_5(4), STR_2(4), 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2    0[COMRAM] PTR unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;Total ram usage:        8 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; Hardware stack levels required when called: 1
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_efgtoa
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text6
  4208   005DB0                     __ptext6:
  4209                           	callstack 0
  4210   005DB0                     _strcpy:
  4211                           	callstack 25
  4212   005DB0  C003  F005         	movff	strcpy@src,strcpy@s
  4213   005DB4  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4214   005DB8  C001  F007         	movff	strcpy@dest,strcpy@d
  4215   005DBC  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4216   005DC0                     l4669:
  4217   005DC0  C005  FFF6         	movff	strcpy@s,tblptrl
  4218   005DC4  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4219   005DC8  4A05               	infsnz	strcpy@s^0,f,c
  4220   005DCA  2A06               	incf	(strcpy@s+1)^0,f,c
  4221   005DCC                     	if	0	;tblptru may be non-zero
  4222   005DCC                     	endif
  4223   005DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4224   005DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  4225   005DCE  6EF8               	movwf	tblptru,c
  4226   005DD0                     	endif
  4227   005DD0  C007  FFD9         	movff	strcpy@d,fsr2l
  4228   005DD4  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4229   005DD8  4A07               	infsnz	strcpy@d^0,f,c
  4230   005DDA  2A08               	incf	(strcpy@d+1)^0,f,c
  4231   005DDC  0008               	tblrd		*
  4232   005DDE  CFF5 FFDF          	movff	tablat,indf2
  4233   005DE2  50DF               	movf	indf2,w,c
  4234   005DE4  A4D8               	btfss	status,2,c
  4235   005DE6  EFF7  F02E         	goto	u4331
  4236   005DEA  EFF9  F02E         	goto	u4330
  4237   005DEE                     u4331:
  4238   005DEE  EFE0  F02E         	goto	l4669
  4239   005DF2                     u4330:
  4240   005DF2  0012               	return		;funcret
  4241   005DF4                     __end_of_strcpy:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _memcpy *****************
  4245 ;; Defined at:
  4246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  d1              2    0[COMRAM] PTR void 
  4249 ;;		 -> dbuf(80), 
  4250 ;;  s1              2    2[COMRAM] PTR const void 
  4251 ;;		 -> dbuf(80), 
  4252 ;;  n               2    4[COMRAM] unsigned int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4255 ;;		 -> dbuf(80), 
  4256 ;;  d               2    6[COMRAM] PTR unsigned char 
  4257 ;;		 -> dbuf(80), 
  4258 ;;  tmp             1   10[COMRAM] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  2    0[COMRAM] PTR void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4268 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;Total ram usage:       11 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_efgtoa
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text7
  4283   005AEE                     __ptext7:
  4284                           	callstack 0
  4285   005AEE                     _memcpy:
  4286                           	callstack 25
  4287   005AEE  C003  F009         	movff	memcpy@s1,memcpy@s
  4288   005AF2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4289   005AF6  C001  F007         	movff	memcpy@d1,memcpy@d
  4290   005AFA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4291   005AFE  EF91  F02D         	goto	l4713
  4292   005B02                     l4705:
  4293   005B02  C009  FFD9         	movff	memcpy@s,fsr2l
  4294   005B06  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4295   005B0A  50DF               	movf	indf2,w,c
  4296   005B0C  6E0B               	movwf	memcpy@tmp^0,c
  4297   005B0E  4A09               	infsnz	memcpy@s^0,f,c
  4298   005B10  2A0A               	incf	(memcpy@s+1)^0,f,c
  4299   005B12  C007  FFD9         	movff	memcpy@d,fsr2l
  4300   005B16  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4301   005B1A  C00B  FFDF         	movff	memcpy@tmp,indf2
  4302   005B1E  4A07               	infsnz	memcpy@d^0,f,c
  4303   005B20  2A08               	incf	(memcpy@d+1)^0,f,c
  4304   005B22                     l4713:
  4305   005B22  0605               	decf	memcpy@n^0,f,c
  4306   005B24  A0D8               	btfss	status,0,c
  4307   005B26  0606               	decf	(memcpy@n+1)^0,f,c
  4308   005B28  2805               	incf	memcpy@n^0,w,c
  4309   005B2A  E106               	bnz	u4451
  4310   005B2C  2806               	incf	(memcpy@n+1)^0,w,c
  4311   005B2E  A4D8               	btfss	status,2,c
  4312   005B30  EF9C  F02D         	goto	u4451
  4313   005B34  EF9E  F02D         	goto	u4450
  4314   005B38                     u4451:
  4315   005B38  EF81  F02D         	goto	l4705
  4316   005B3C                     u4450:
  4317   005B3C  0012               	return		;funcret
  4318   005B3E                     __end_of_memcpy:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _labs *****************
  4322 ;; Defined at:
  4323 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  a               4    0[COMRAM] long 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  4    0[COMRAM] long 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;Total ram usage:        8 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_efgtoa
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text8
  4352   0055C8                     __ptext8:
  4353                           	callstack 0
  4354   0055C8                     _labs:
  4355                           	callstack 25
  4356   0055C8  BE04               	btfsc	(labs@a+3)^0,7,c
  4357   0055CA  EFF3  F02A         	goto	u4340
  4358   0055CE  5004               	movf	(labs@a+3)^0,w,c
  4359   0055D0  1003               	iorwf	(labs@a+2)^0,w,c
  4360   0055D2  1002               	iorwf	(labs@a+1)^0,w,c
  4361   0055D4  E106               	bnz	u4341
  4362   0055D6  0401               	decf	labs@a^0,w,c
  4363   0055D8  B0D8               	btfsc	status,0,c
  4364   0055DA  EFF1  F02A         	goto	u4341
  4365   0055DE  EFF3  F02A         	goto	u4340
  4366   0055E2                     u4341:
  4367   0055E2  EF0E  F02B         	goto	l1599
  4368   0055E6                     u4340:
  4369   0055E6  C001  F005         	movff	labs@a,??_labs
  4370   0055EA  C002  F006         	movff	labs@a+1,??_labs+1
  4371   0055EE  C003  F007         	movff	labs@a+2,??_labs+2
  4372   0055F2  C004  F008         	movff	labs@a+3,??_labs+3
  4373   0055F6  1E05               	comf	??_labs^0,f,c
  4374   0055F8  1E06               	comf	(??_labs+1)^0,f,c
  4375   0055FA  1E07               	comf	(??_labs+2)^0,f,c
  4376   0055FC  1E08               	comf	(??_labs+3)^0,f,c
  4377   0055FE  2A05               	incf	??_labs^0,f,c
  4378   005600  0E00               	movlw	0
  4379   005602  2206               	addwfc	(??_labs+1)^0,f,c
  4380   005604  2207               	addwfc	(??_labs+2)^0,f,c
  4381   005606  2208               	addwfc	(??_labs+3)^0,f,c
  4382   005608  C005  F001         	movff	??_labs,?_labs
  4383   00560C  C006  F002         	movff	??_labs+1,?_labs+1
  4384   005610  C007  F003         	movff	??_labs+2,?_labs+2
  4385   005614  C008  F004         	movff	??_labs+3,?_labs+3
  4386   005618  EF16  F02B         	goto	l1602
  4387   00561C                     l1599:
  4388   00561C  C001  F001         	movff	labs@a,?_labs
  4389   005620  C002  F002         	movff	labs@a+1,?_labs+1
  4390   005624  C003  F003         	movff	labs@a+2,?_labs+2
  4391   005628  C004  F004         	movff	labs@a+3,?_labs+3
  4392   00562C                     l1602:
  4393   00562C  0012               	return		;funcret
  4394   00562E                     __end_of_labs:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function _floorf *****************
  4398 ;; Defined at:
  4399 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  x               4   74[COMRAM] float 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  u               4   90[COMRAM] struct .
  4404 ;;  m               4   84[COMRAM] unsigned long 
  4405 ;;  e               2   88[COMRAM] int 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  4   74[COMRAM] float 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;Total ram usage:       20 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_efgtoa
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text9
  4430   003FAE                     __ptext9:
  4431                           	callstack 0
  4432   003FAE                     _floorf:
  4433                           	callstack 25
  4434   003FAE  C0DF  F05B         	movff	floorf@F526,floorf@u
  4435   003FB2  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4436   003FB6  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4437   003FBA  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4438   003FBE  C04B  F05B         	movff	floorf@x,floorf@u
  4439   003FC2  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4440   003FC6  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4441   003FCA  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4442   003FCE  0E81               	movlw	129
  4443   003FD0  6E4F               	movwf	??_floorf^0,c
  4444   003FD2  0EFF               	movlw	255
  4445   003FD4  6E50               	movwf	(??_floorf+1)^0,c
  4446   003FD6  C05B  F051         	movff	floorf@u,??_floorf+2
  4447   003FDA  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4448   003FDE  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4449   003FE2  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4450   003FE6  0E18               	movlw	24
  4451   003FE8  EFFB  F01F         	goto	u4350
  4452   003FEC                     u4355:
  4453   003FEC  90D8               	bcf	status,0,c
  4454   003FEE  3254               	rrcf	(??_floorf+5)^0,f,c
  4455   003FF0  3253               	rrcf	(??_floorf+4)^0,f,c
  4456   003FF2  3252               	rrcf	(??_floorf+3)^0,f,c
  4457   003FF4  3251               	rrcf	(??_floorf+2)^0,f,c
  4458   003FF6                     u4350:
  4459   003FF6  2EE8               	decfsz	wreg,f,c
  4460   003FF8  EFF6  F01F         	goto	u4355
  4461   003FFC  5051               	movf	(??_floorf+2)^0,w,c
  4462   003FFE  244F               	addwf	??_floorf^0,w,c
  4463   004000  6E59               	movwf	floorf@e^0,c
  4464   004002  0E00               	movlw	0
  4465   004004  2050               	addwfc	(??_floorf+1)^0,w,c
  4466   004006  6E5A               	movwf	(floorf@e+1)^0,c
  4467   004008  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4468   00400A  EF10  F020         	goto	u4361
  4469   00400E  505A               	movf	(floorf@e+1)^0,w,c
  4470   004010  E109               	bnz	u4360
  4471   004012  0E17               	movlw	23
  4472   004014  5C59               	subwf	floorf@e^0,w,c
  4473   004016  A0D8               	btfss	status,0,c
  4474   004018  EF10  F020         	goto	u4361
  4475   00401C  EF12  F020         	goto	u4360
  4476   004020                     u4361:
  4477   004020  EF1C  F020         	goto	l4681
  4478   004024                     u4360:
  4479   004024                     l4679:
  4480   004024  C04B  F04B         	movff	floorf@x,?_floorf
  4481   004028  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4482   00402C  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4483   004030  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4484   004034  EFDF  F020         	goto	l1588
  4485   004038                     l4681:
  4486   004038  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4487   00403A  EF21  F020         	goto	u4371
  4488   00403E  EF23  F020         	goto	u4370
  4489   004042                     u4371:
  4490   004042  EF93  F020         	goto	l4691
  4491   004046                     u4370:
  4492   004046  C059  F04F         	movff	floorf@e,??_floorf
  4493   00404A  0EFF               	movlw	255
  4494   00404C  6E50               	movwf	(??_floorf+1)^0,c
  4495   00404E  0EFF               	movlw	255
  4496   004050  6E51               	movwf	(??_floorf+2)^0,c
  4497   004052  0E7F               	movlw	127
  4498   004054  6E52               	movwf	(??_floorf+3)^0,c
  4499   004056  0E00               	movlw	0
  4500   004058  6E53               	movwf	(??_floorf+4)^0,c
  4501   00405A                     u4385:
  4502   00405A  664F               	tstfsz	??_floorf^0,c
  4503   00405C  EF32  F020         	goto	u4386
  4504   004060  EF3A  F020         	goto	u4387
  4505   004064                     u4386:
  4506   004064  3453               	rlcf	(??_floorf+4)^0,w,c
  4507   004066  3253               	rrcf	(??_floorf+4)^0,f,c
  4508   004068  3252               	rrcf	(??_floorf+3)^0,f,c
  4509   00406A  3251               	rrcf	(??_floorf+2)^0,f,c
  4510   00406C  3250               	rrcf	(??_floorf+1)^0,f,c
  4511   00406E  2E4F               	decfsz	??_floorf^0,f,c
  4512   004070  EF2D  F020         	goto	u4385
  4513   004074                     u4387:
  4514   004074  C050  F055         	movff	??_floorf+1,floorf@m
  4515   004078  C051  F056         	movff	??_floorf+2,floorf@m+1
  4516   00407C  C052  F057         	movff	??_floorf+3,floorf@m+2
  4517   004080  C053  F058         	movff	??_floorf+4,floorf@m+3
  4518   004084  5055               	movf	floorf@m^0,w,c
  4519   004086  145B               	andwf	floorf@u^0,w,c
  4520   004088  6E4F               	movwf	??_floorf^0,c
  4521   00408A  5056               	movf	(floorf@m+1)^0,w,c
  4522   00408C  145C               	andwf	(floorf@u+1)^0,w,c
  4523   00408E  6E50               	movwf	(??_floorf+1)^0,c
  4524   004090  5057               	movf	(floorf@m+2)^0,w,c
  4525   004092  145D               	andwf	(floorf@u+2)^0,w,c
  4526   004094  6E51               	movwf	(??_floorf+2)^0,c
  4527   004096  5058               	movf	(floorf@m+3)^0,w,c
  4528   004098  145E               	andwf	(floorf@u+3)^0,w,c
  4529   00409A  6E52               	movwf	(??_floorf+3)^0,c
  4530   00409C  504F               	movf	??_floorf^0,w,c
  4531   00409E  1050               	iorwf	(??_floorf+1)^0,w,c
  4532   0040A0  1051               	iorwf	(??_floorf+2)^0,w,c
  4533   0040A2  1052               	iorwf	(??_floorf+3)^0,w,c
  4534   0040A4  A4D8               	btfss	status,2,c
  4535   0040A6  EF57  F020         	goto	u4391
  4536   0040AA  EF59  F020         	goto	u4390
  4537   0040AE                     u4391:
  4538   0040AE  EF5B  F020         	goto	l4687
  4539   0040B2                     u4390:
  4540   0040B2  EF12  F020         	goto	l4679
  4541   0040B6                     l4687:
  4542   0040B6  C05B  F04F         	movff	floorf@u,??_floorf
  4543   0040BA  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4544   0040BE  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4545   0040C2  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4546   0040C6  0E20               	movlw	32
  4547   0040C8  EF6B  F020         	goto	u4400
  4548   0040CC                     u4405:
  4549   0040CC  90D8               	bcf	status,0,c
  4550   0040CE  3252               	rrcf	(??_floorf+3)^0,f,c
  4551   0040D0  3251               	rrcf	(??_floorf+2)^0,f,c
  4552   0040D2  3250               	rrcf	(??_floorf+1)^0,f,c
  4553   0040D4  324F               	rrcf	??_floorf^0,f,c
  4554   0040D6                     u4400:
  4555   0040D6  2EE8               	decfsz	wreg,f,c
  4556   0040D8  EF66  F020         	goto	u4405
  4557   0040DC  504F               	movf	??_floorf^0,w,c
  4558   0040DE  1050               	iorwf	(??_floorf+1)^0,w,c
  4559   0040E0  1051               	iorwf	(??_floorf+2)^0,w,c
  4560   0040E2  1052               	iorwf	(??_floorf+3)^0,w,c
  4561   0040E4  B4D8               	btfsc	status,2,c
  4562   0040E6  EF77  F020         	goto	u4411
  4563   0040EA  EF79  F020         	goto	u4410
  4564   0040EE                     u4411:
  4565   0040EE  EF81  F020         	goto	l1591
  4566   0040F2                     u4410:
  4567   0040F2  5055               	movf	floorf@m^0,w,c
  4568   0040F4  265B               	addwf	floorf@u^0,f,c
  4569   0040F6  5056               	movf	(floorf@m+1)^0,w,c
  4570   0040F8  225C               	addwfc	(floorf@u+1)^0,f,c
  4571   0040FA  5057               	movf	(floorf@m+2)^0,w,c
  4572   0040FC  225D               	addwfc	(floorf@u+2)^0,f,c
  4573   0040FE  5058               	movf	(floorf@m+3)^0,w,c
  4574   004100  225E               	addwfc	(floorf@u+3)^0,f,c
  4575   004102                     l1591:
  4576   004102  1C55               	comf	floorf@m^0,w,c
  4577   004104  6E4F               	movwf	??_floorf^0,c
  4578   004106  1C56               	comf	(floorf@m+1)^0,w,c
  4579   004108  6E50               	movwf	(??_floorf+1)^0,c
  4580   00410A  1C57               	comf	(floorf@m+2)^0,w,c
  4581   00410C  6E51               	movwf	(??_floorf+2)^0,c
  4582   00410E  1C58               	comf	(floorf@m+3)^0,w,c
  4583   004110  6E52               	movwf	(??_floorf+3)^0,c
  4584   004112  504F               	movf	??_floorf^0,w,c
  4585   004114  165B               	andwf	floorf@u^0,f,c
  4586   004116  5050               	movf	(??_floorf+1)^0,w,c
  4587   004118  165C               	andwf	(floorf@u+1)^0,f,c
  4588   00411A  5051               	movf	(??_floorf+2)^0,w,c
  4589   00411C  165D               	andwf	(floorf@u+2)^0,f,c
  4590   00411E  5052               	movf	(??_floorf+3)^0,w,c
  4591   004120  165E               	andwf	(floorf@u+3)^0,f,c
  4592   004122  EFD7  F020         	goto	l4699
  4593   004126                     l4691:
  4594   004126  C05B  F04F         	movff	floorf@u,??_floorf
  4595   00412A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4596   00412E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4597   004132  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4598   004136  0E20               	movlw	32
  4599   004138  EFA3  F020         	goto	u4420
  4600   00413C                     u4425:
  4601   00413C  90D8               	bcf	status,0,c
  4602   00413E  3252               	rrcf	(??_floorf+3)^0,f,c
  4603   004140  3251               	rrcf	(??_floorf+2)^0,f,c
  4604   004142  3250               	rrcf	(??_floorf+1)^0,f,c
  4605   004144  324F               	rrcf	??_floorf^0,f,c
  4606   004146                     u4420:
  4607   004146  2EE8               	decfsz	wreg,f,c
  4608   004148  EF9E  F020         	goto	u4425
  4609   00414C  504F               	movf	??_floorf^0,w,c
  4610   00414E  1050               	iorwf	(??_floorf+1)^0,w,c
  4611   004150  1051               	iorwf	(??_floorf+2)^0,w,c
  4612   004152  1052               	iorwf	(??_floorf+3)^0,w,c
  4613   004154  A4D8               	btfss	status,2,c
  4614   004156  EFAF  F020         	goto	u4431
  4615   00415A  EFB1  F020         	goto	u4430
  4616   00415E                     u4431:
  4617   00415E  EFBB  F020         	goto	l4695
  4618   004162                     u4430:
  4619   004162  0E00               	movlw	0
  4620   004164  6E5B               	movwf	floorf@u^0,c
  4621   004166  0E00               	movlw	0
  4622   004168  6E5C               	movwf	(floorf@u+1)^0,c
  4623   00416A  0E00               	movlw	0
  4624   00416C  6E5D               	movwf	(floorf@u+2)^0,c
  4625   00416E  0E00               	movlw	0
  4626   004170  6E5E               	movwf	(floorf@u+3)^0,c
  4627   004172  EFD7  F020         	goto	l4699
  4628   004176                     l4695:
  4629   004176  90D8               	bcf	status,0,c
  4630   004178  345B               	rlcf	floorf@u^0,w,c
  4631   00417A  6E4F               	movwf	??_floorf^0,c
  4632   00417C  345C               	rlcf	(floorf@u+1)^0,w,c
  4633   00417E  6E50               	movwf	(??_floorf+1)^0,c
  4634   004180  345D               	rlcf	(floorf@u+2)^0,w,c
  4635   004182  6E51               	movwf	(??_floorf+2)^0,c
  4636   004184  345E               	rlcf	(floorf@u+3)^0,w,c
  4637   004186  6E52               	movwf	(??_floorf+3)^0,c
  4638   004188  504F               	movf	??_floorf^0,w,c
  4639   00418A  1050               	iorwf	(??_floorf+1)^0,w,c
  4640   00418C  1051               	iorwf	(??_floorf+2)^0,w,c
  4641   00418E  1052               	iorwf	(??_floorf+3)^0,w,c
  4642   004190  B4D8               	btfsc	status,2,c
  4643   004192  EFCD  F020         	goto	u4441
  4644   004196  EFCF  F020         	goto	u4440
  4645   00419A                     u4441:
  4646   00419A  EFD7  F020         	goto	l4699
  4647   00419E                     u4440:
  4648   00419E  0E00               	movlw	0
  4649   0041A0  6E5B               	movwf	floorf@u^0,c
  4650   0041A2  0E00               	movlw	0
  4651   0041A4  6E5C               	movwf	(floorf@u+1)^0,c
  4652   0041A6  0E80               	movlw	128
  4653   0041A8  6E5D               	movwf	(floorf@u+2)^0,c
  4654   0041AA  0EBF               	movlw	191
  4655   0041AC  6E5E               	movwf	(floorf@u+3)^0,c
  4656   0041AE                     l4699:
  4657   0041AE  C05B  F04B         	movff	floorf@u,?_floorf
  4658   0041B2  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4659   0041B6  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4660   0041BA  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4661   0041BE                     l1588:
  4662   0041BE  0012               	return		;funcret
  4663   0041C0                     __end_of_floorf:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function ___fpclassifyf *****************
  4667 ;; Defined at:
  4668 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  x               4    0[COMRAM] float 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  u               4   10[COMRAM] struct .
  4673 ;;  e               2    8[COMRAM] int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2    0[COMRAM] int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:       14 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_efgtoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text10
  4698   004B82                     __ptext10:
  4699                           	callstack 0
  4700   004B82                     ___fpclassifyf:
  4701                           	callstack 25
  4702   004B82  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4703   004B86  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4704   004B8A  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4705   004B8E  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4706   004B92  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4707   004B96  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4708   004B9A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4709   004B9E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4710   004BA2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4711   004BA6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4712   004BAA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4713   004BAE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4714   004BB2  0E18               	movlw	24
  4715   004BB4  EFE1  F025         	goto	u4260
  4716   004BB8                     u4265:
  4717   004BB8  90D8               	bcf	status,0,c
  4718   004BBA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4719   004BBC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4720   004BBE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4721   004BC0  3205               	rrcf	??___fpclassifyf^0,f,c
  4722   004BC2                     u4260:
  4723   004BC2  2EE8               	decfsz	wreg,f,c
  4724   004BC4  EFDC  F025         	goto	u4265
  4725   004BC8  5005               	movf	??___fpclassifyf^0,w,c
  4726   004BCA  6E09               	movwf	___fpclassifyf@e^0,c
  4727   004BCC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4728   004BCE  5009               	movf	___fpclassifyf@e^0,w,c
  4729   004BD0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4730   004BD2  A4D8               	btfss	status,2,c
  4731   004BD4  EFEE  F025         	goto	u4271
  4732   004BD8  EFF0  F025         	goto	u4270
  4733   004BDC                     u4271:
  4734   004BDC  EF10  F026         	goto	l4657
  4735   004BE0                     u4270:
  4736   004BE0  90D8               	bcf	status,0,c
  4737   004BE2  340B               	rlcf	___fpclassifyf@u^0,w,c
  4738   004BE4  6E05               	movwf	??___fpclassifyf^0,c
  4739   004BE6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4740   004BE8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4741   004BEA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4742   004BEC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4743   004BEE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4744   004BF0  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4745   004BF2  5005               	movf	??___fpclassifyf^0,w,c
  4746   004BF4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4747   004BF6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4748   004BF8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4749   004BFA  A4D8               	btfss	status,2,c
  4750   004BFC  EF02  F026         	goto	u4281
  4751   004C00  EF04  F026         	goto	u4280
  4752   004C04                     u4281:
  4753   004C04  EF0A  F026         	goto	l4653
  4754   004C08                     u4280:
  4755   004C08  0E00               	movlw	0
  4756   004C0A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4757   004C0C  0E02               	movlw	2
  4758   004C0E  6E01               	movwf	?___fpclassifyf^0,c
  4759   004C10  EF3F  F026         	goto	l1574
  4760   004C14                     l4653:
  4761   004C14  0E00               	movlw	0
  4762   004C16  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4763   004C18  0E03               	movlw	3
  4764   004C1A  6E01               	movwf	?___fpclassifyf^0,c
  4765   004C1C  EF3F  F026         	goto	l1574
  4766   004C20                     l4657:
  4767   004C20  2809               	incf	___fpclassifyf@e^0,w,c
  4768   004C22  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4769   004C24  A4D8               	btfss	status,2,c
  4770   004C26  EF17  F026         	goto	u4291
  4771   004C2A  EF19  F026         	goto	u4290
  4772   004C2E                     u4291:
  4773   004C2E  EF3B  F026         	goto	l4663
  4774   004C32                     u4290:
  4775   004C32  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4776   004C36  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4777   004C3A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4778   004C3E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4779   004C42  0E09               	movlw	9
  4780   004C44                     u4305:
  4781   004C44  90D8               	bcf	status,0,c
  4782   004C46  3605               	rlcf	??___fpclassifyf^0,f,c
  4783   004C48  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4784   004C4A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4785   004C4C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4786   004C4E  2EE8               	decfsz	wreg,f,c
  4787   004C50  EF22  F026         	goto	u4305
  4788   004C54  5005               	movf	??___fpclassifyf^0,w,c
  4789   004C56  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4790   004C58  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4791   004C5A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4792   004C5C  B4D8               	btfsc	status,2,c
  4793   004C5E  EF33  F026         	goto	u4311
  4794   004C62  EF36  F026         	goto	u4310
  4795   004C66                     u4311:
  4796   004C66  0E01               	movlw	1
  4797   004C68  EF37  F026         	goto	u4320
  4798   004C6C                     u4310:
  4799   004C6C  0E00               	movlw	0
  4800   004C6E                     u4320:
  4801   004C6E  6E01               	movwf	?___fpclassifyf^0,c
  4802   004C70  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4803   004C72  EF3F  F026         	goto	l1574
  4804   004C76                     l4663:
  4805   004C76  0E00               	movlw	0
  4806   004C78  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4807   004C7A  0E04               	movlw	4
  4808   004C7C  6E01               	movwf	?___fpclassifyf^0,c
  4809   004C7E                     l1574:
  4810   004C7E  0012               	return		;funcret
  4811   004C80                     __end_of___fpclassifyf:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function ___fltol *****************
  4815 ;; Defined at:
  4816 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  f1              4    0[COMRAM] int 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  exp1            1    9[COMRAM] unsigned char 
  4821 ;;  sign1           1    8[COMRAM] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  4    0[COMRAM] long 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;Total ram usage:       10 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_reverseOneBlock
  4842 ;;		_ForwardOneBlock
  4843 ;;		_Forwardhalfblock
  4844 ;;		_Backhalfblock
  4845 ;;		_efgtoa
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text11
  4850   004978                     __ptext11:
  4851                           	callstack 0
  4852   004978                     ___fltol:
  4853                           	callstack 25
  4854   004978  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4855   00497A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4856   00497C  6E0A               	movwf	___fltol@exp1^0,c
  4857   00497E  500A               	movf	___fltol@exp1^0,w,c
  4858   004980  A4D8               	btfss	status,2,c
  4859   004982  EFC5  F024         	goto	u4161
  4860   004986  EFC7  F024         	goto	u4160
  4861   00498A                     u4161:
  4862   00498A  EFD1  F024         	goto	l4589
  4863   00498E                     u4160:
  4864   00498E                     l4585:
  4865   00498E  0E00               	movlw	0
  4866   004990  6E01               	movwf	?___fltol^0,c
  4867   004992  0E00               	movlw	0
  4868   004994  6E02               	movwf	(?___fltol+1)^0,c
  4869   004996  0E00               	movlw	0
  4870   004998  6E03               	movwf	(?___fltol+2)^0,c
  4871   00499A  0E00               	movlw	0
  4872   00499C  6E04               	movwf	(?___fltol+3)^0,c
  4873   00499E  EF3E  F025         	goto	l1047
  4874   0049A2                     l4589:
  4875   0049A2  C001  F005         	movff	___fltol@f1,??___fltol
  4876   0049A6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4877   0049AA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4878   0049AE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4879   0049B2  0E20               	movlw	32
  4880   0049B4  EFE1  F024         	goto	u4170
  4881   0049B8                     u4175:
  4882   0049B8  90D8               	bcf	status,0,c
  4883   0049BA  3208               	rrcf	(??___fltol+3)^0,f,c
  4884   0049BC  3207               	rrcf	(??___fltol+2)^0,f,c
  4885   0049BE  3206               	rrcf	(??___fltol+1)^0,f,c
  4886   0049C0  3205               	rrcf	??___fltol^0,f,c
  4887   0049C2                     u4170:
  4888   0049C2  2EE8               	decfsz	wreg,f,c
  4889   0049C4  EFDC  F024         	goto	u4175
  4890   0049C8  5005               	movf	??___fltol^0,w,c
  4891   0049CA  6E09               	movwf	___fltol@sign1^0,c
  4892   0049CC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4893   0049CE  0EFF               	movlw	255
  4894   0049D0  1601               	andwf	___fltol@f1^0,f,c
  4895   0049D2  0EFF               	movlw	255
  4896   0049D4  1602               	andwf	(___fltol@f1+1)^0,f,c
  4897   0049D6  0EFF               	movlw	255
  4898   0049D8  1603               	andwf	(___fltol@f1+2)^0,f,c
  4899   0049DA  0E00               	movlw	0
  4900   0049DC  1604               	andwf	(___fltol@f1+3)^0,f,c
  4901   0049DE  0E96               	movlw	150
  4902   0049E0  5E0A               	subwf	___fltol@exp1^0,f,c
  4903   0049E2  BE0A               	btfsc	___fltol@exp1^0,7,c
  4904   0049E4  EFF8  F024         	goto	u4180
  4905   0049E8  EFF6  F024         	goto	u4181
  4906   0049EC                     u4181:
  4907   0049EC  EF0E  F025         	goto	l4609
  4908   0049F0                     u4180:
  4909   0049F0  500A               	movf	___fltol@exp1^0,w,c
  4910   0049F2  0A80               	xorlw	128
  4911   0049F4  0F97               	addlw	151
  4912   0049F6  B0D8               	btfsc	status,0,c
  4913   0049F8  EF00  F025         	goto	u4191
  4914   0049FC  EF02  F025         	goto	u4190
  4915   004A00                     u4191:
  4916   004A00  EF04  F025         	goto	l4605
  4917   004A04                     u4190:
  4918   004A04  EFC7  F024         	goto	l4585
  4919   004A08                     l4605:
  4920   004A08  90D8               	bcf	status,0,c
  4921   004A0A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4922   004A0C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4923   004A0E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4924   004A10  3201               	rrcf	___fltol@f1^0,f,c
  4925   004A12  3E0A               	incfsz	___fltol@exp1^0,f,c
  4926   004A14  EF04  F025         	goto	l4605
  4927   004A18  EF26  F025         	goto	l4619
  4928   004A1C                     l4609:
  4929   004A1C  0E1F               	movlw	31
  4930   004A1E  640A               	cpfsgt	___fltol@exp1^0,c
  4931   004A20  EF14  F025         	goto	u4201
  4932   004A24  EF16  F025         	goto	u4200
  4933   004A28                     u4201:
  4934   004A28  EF1E  F025         	goto	l4617
  4935   004A2C                     u4200:
  4936   004A2C  EFC7  F024         	goto	l4585
  4937   004A30                     l4615:
  4938   004A30  90D8               	bcf	status,0,c
  4939   004A32  3601               	rlcf	___fltol@f1^0,f,c
  4940   004A34  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4941   004A36  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4942   004A38  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4943   004A3A  060A               	decf	___fltol@exp1^0,f,c
  4944   004A3C                     l4617:
  4945   004A3C  500A               	movf	___fltol@exp1^0,w,c
  4946   004A3E  A4D8               	btfss	status,2,c
  4947   004A40  EF24  F025         	goto	u4211
  4948   004A44  EF26  F025         	goto	u4210
  4949   004A48                     u4211:
  4950   004A48  EF18  F025         	goto	l4615
  4951   004A4C                     u4210:
  4952   004A4C                     l4619:
  4953   004A4C  5009               	movf	___fltol@sign1^0,w,c
  4954   004A4E  B4D8               	btfsc	status,2,c
  4955   004A50  EF2C  F025         	goto	u4221
  4956   004A54  EF2E  F025         	goto	u4220
  4957   004A58                     u4221:
  4958   004A58  EF36  F025         	goto	l4623
  4959   004A5C                     u4220:
  4960   004A5C  1E04               	comf	(___fltol@f1+3)^0,f,c
  4961   004A5E  1E03               	comf	(___fltol@f1+2)^0,f,c
  4962   004A60  1E02               	comf	(___fltol@f1+1)^0,f,c
  4963   004A62  6C01               	negf	___fltol@f1^0,c
  4964   004A64  0E00               	movlw	0
  4965   004A66  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4966   004A68  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4967   004A6A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4968   004A6C                     l4623:
  4969   004A6C  C001  F001         	movff	___fltol@f1,?___fltol
  4970   004A70  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4971   004A74  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4972   004A78  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4973   004A7C                     l1047:
  4974   004A7C  0012               	return		;funcret
  4975   004A7E                     __end_of___fltol:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function ___flneg *****************
  4979 ;; Defined at:
  4980 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  f1              4    0[COMRAM] long 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4    0[COMRAM] long 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:        4 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_efgtoa
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text12
  5009   005F36                     __ptext12:
  5010                           	callstack 0
  5011   005F36                     ___flneg:
  5012                           	callstack 25
  5013   005F36  5001               	movf	___flneg@f1^0,w,c
  5014   005F38  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5015   005F3A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5016   005F3C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5017   005F3E  B4D8               	btfsc	status,2,c
  5018   005F40  EFA4  F02F         	goto	u4151
  5019   005F44  EFA6  F02F         	goto	u4150
  5020   005F48                     u4151:
  5021   005F48  EFAE  F02F         	goto	l4579
  5022   005F4C                     u4150:
  5023   005F4C  0E00               	movlw	0
  5024   005F4E  1A01               	xorwf	___flneg@f1^0,f,c
  5025   005F50  0E00               	movlw	0
  5026   005F52  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5027   005F54  0E00               	movlw	0
  5028   005F56  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5029   005F58  0E80               	movlw	128
  5030   005F5A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5031   005F5C                     l4579:
  5032   005F5C  C001  F001         	movff	___flneg@f1,?___flneg
  5033   005F60  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5034   005F64  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5035   005F68  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5036   005F6C  0012               	return		;funcret
  5037   005F6E                     __end_of___flneg:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _dtoa *****************
  5041 ;; Defined at:
  5042 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5045 ;;		 -> sprintf@f(11), 
  5046 ;;  d               8   29[COMRAM] long long 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  n               8   51[COMRAM] long long 
  5049 ;;  i               2   59[COMRAM] int 
  5050 ;;  w               2   49[COMRAM] int 
  5051 ;;  p               2   47[COMRAM] int 
  5052 ;;  s               1   61[COMRAM] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  1    wreg      void 
  5055 ;; Registers used:
  5056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5062 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;Total ram usage:       35 bytes
  5067 ;; Hardware stack levels used: 1
  5068 ;; Hardware stack levels required when called: 5
  5069 ;; This function calls:
  5070 ;;		___aodiv
  5071 ;;		___aomod
  5072 ;;		_abs
  5073 ;;		_pad
  5074 ;; This function is called by:
  5075 ;;		_vfpfcnvrt
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text13
  5080   003AB8                     __ptext13:
  5081                           	callstack 0
  5082   003AB8                     _dtoa:
  5083                           	callstack 22
  5084   003AB8                     
  5085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5086   003AB8  C01E  F034         	movff	dtoa@d,dtoa@n
  5087   003ABC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5088   003AC0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5089   003AC4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5090   003AC8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5091   003ACC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5092   003AD0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5093   003AD4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5094   003AD8                     
  5095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5096   003AD8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5097   003ADA  EF71  F01D         	goto	u4491
  5098   003ADE  EF74  F01D         	goto	u4490
  5099   003AE2                     u4491:
  5100   003AE2  0E01               	movlw	1
  5101   003AE4  EF75  F01D         	goto	u4500
  5102   003AE8                     u4490:
  5103   003AE8  0E00               	movlw	0
  5104   003AEA                     u4500:
  5105   003AEA  6E3E               	movwf	dtoa@s^0,c
  5106   003AEC                     
  5107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5108   003AEC  503E               	movf	dtoa@s^0,w,c
  5109   003AEE  B4D8               	btfsc	status,2,c
  5110   003AF0  EF7C  F01D         	goto	u4511
  5111   003AF4  EF7E  F01D         	goto	u4510
  5112   003AF8                     u4511:
  5113   003AF8  EF8E  F01D         	goto	l4767
  5114   003AFC                     u4510:
  5115   003AFC                     
  5116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5117   003AFC  1E3B               	comf	(dtoa@n+7)^0,f,c
  5118   003AFE  1E3A               	comf	(dtoa@n+6)^0,f,c
  5119   003B00  1E39               	comf	(dtoa@n+5)^0,f,c
  5120   003B02  1E38               	comf	(dtoa@n+4)^0,f,c
  5121   003B04  1E37               	comf	(dtoa@n+3)^0,f,c
  5122   003B06  1E36               	comf	(dtoa@n+2)^0,f,c
  5123   003B08  1E35               	comf	(dtoa@n+1)^0,f,c
  5124   003B0A  6C34               	negf	dtoa@n^0,c
  5125   003B0C  0E00               	movlw	0
  5126   003B0E  2235               	addwfc	(dtoa@n+1)^0,f,c
  5127   003B10  2236               	addwfc	(dtoa@n+2)^0,f,c
  5128   003B12  2237               	addwfc	(dtoa@n+3)^0,f,c
  5129   003B14  2238               	addwfc	(dtoa@n+4)^0,f,c
  5130   003B16  2239               	addwfc	(dtoa@n+5)^0,f,c
  5131   003B18  223A               	addwfc	(dtoa@n+6)^0,f,c
  5132   003B1A  223B               	addwfc	(dtoa@n+7)^0,f,c
  5133   003B1C                     l4767:
  5134                           
  5135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5136   003B1C  0100               	movlb	0	; () banked
  5137   003B1E  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5138   003B20  EF9C  F01D         	goto	u4520
  5139   003B24  51EA               	movf	(_prec+1)& (0+255),w,b
  5140   003B26  E106               	bnz	u4521
  5141   003B28  05E9               	decf	_prec& (0+255),w,b
  5142   003B2A  B0D8               	btfsc	status,0,c
  5143   003B2C  EF9A  F01D         	goto	u4521
  5144   003B30  EF9C  F01D         	goto	u4520
  5145   003B34                     u4521:
  5146   003B34  EFA2  F01D         	goto	l1469
  5147   003B38                     u4520:
  5148   003B38                     
  5149                           ; BSR set to: 0
  5150   003B38  0E00               	movlw	0
  5151   003B3A  6E31               	movwf	(dtoa@p+1)^0,c
  5152   003B3C  0E01               	movlw	1
  5153   003B3E  6E30               	movwf	dtoa@p^0,c
  5154   003B40  EFA6  F01D         	goto	l1471
  5155   003B44                     l1469:
  5156                           
  5157                           ; BSR set to: 0
  5158   003B44  C0E9  F030         	movff	_prec,dtoa@p
  5159   003B48  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5160   003B4C                     l1471:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5164   003B4C  C0E7  F032         	movff	_width,dtoa@w
  5165   003B50  C0E8  F033         	movff	_width+1,dtoa@w+1
  5166   003B54                     
  5167                           ; BSR set to: 0
  5168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5169   003B54  503E               	movf	dtoa@s^0,w,c
  5170   003B56  B4D8               	btfsc	status,2,c
  5171   003B58  EFB0  F01D         	goto	u4531
  5172   003B5C  EFB2  F01D         	goto	u4530
  5173   003B60                     u4531:
  5174   003B60  EFC9  F01D         	goto	l1472
  5175   003B64                     u4530:
  5176   003B64                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5179   003B64  0632               	decf	dtoa@w^0,f,c
  5180   003B66  A0D8               	btfss	status,0,c
  5181   003B68  0633               	decf	(dtoa@w+1)^0,f,c
  5182   003B6A                     
  5183                           ; BSR set to: 0
  5184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5185   003B6A  503E               	movf	dtoa@s^0,w,c
  5186   003B6C  A4D8               	btfss	status,2,c
  5187   003B6E  EFBB  F01D         	goto	u4541
  5188   003B72  EFBD  F01D         	goto	u4540
  5189   003B76                     u4541:
  5190   003B76  EFC3  F01D         	goto	l4779
  5191   003B7A                     u4540:
  5192   003B7A                     
  5193                           ; BSR set to: 0
  5194   003B7A  0E00               	movlw	0
  5195   003B7C  6E2F               	movwf	(_dtoa$2865+1)^0,c
  5196   003B7E  0E2B               	movlw	43
  5197   003B80  6E2E               	movwf	_dtoa$2865^0,c
  5198   003B82  EFC7  F01D         	goto	l4781
  5199   003B86                     l4779:
  5200                           
  5201                           ; BSR set to: 0
  5202   003B86  0E00               	movlw	0
  5203   003B88  6E2F               	movwf	(_dtoa$2865+1)^0,c
  5204   003B8A  0E2D               	movlw	45
  5205   003B8C  6E2E               	movwf	_dtoa$2865^0,c
  5206   003B8E                     l4781:
  5207                           
  5208                           ; BSR set to: 0
  5209   003B8E  C02E  F03E         	movff	_dtoa$2865,dtoa@s
  5210   003B92                     l1472:
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5214   003B92  0E00               	movlw	0
  5215   003B94  6E3D               	movwf	(dtoa@i+1)^0,c
  5216   003B96  0E4F               	movlw	79
  5217   003B98  6E3C               	movwf	dtoa@i^0,c
  5218   003B9A                     
  5219                           ; BSR set to: 0
  5220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5221   003B9A  0E00               	movlw	0
  5222   003B9C  0102               	movlb	2	; () banked
  5223   003B9E  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5226   003BA0  EF4E  F01E         	goto	l4795
  5227   003BA4                     l4785:
  5228                           
  5229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5230   003BA4  063C               	decf	dtoa@i^0,f,c
  5231   003BA6  A0D8               	btfss	status,0,c
  5232   003BA8  063D               	decf	(dtoa@i+1)^0,f,c
  5233   003BAA                     
  5234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5235   003BAA  0EA0               	movlw	low _dbuf
  5236   003BAC  243C               	addwf	dtoa@i^0,w,c
  5237   003BAE  6ED9               	movwf	fsr2l,c
  5238   003BB0  0E02               	movlw	high _dbuf
  5239   003BB2  203D               	addwfc	(dtoa@i+1)^0,w,c
  5240   003BB4  6EDA               	movwf	fsr2h,c
  5241   003BB6  C034  F001         	movff	dtoa@n,___aomod@dividend
  5242   003BBA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5243   003BBE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5244   003BC2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5245   003BC6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5246   003BCA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5247   003BCE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5248   003BD2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5249   003BD6  0E0A               	movlw	10
  5250   003BD8  6E09               	movwf	___aomod@divisor^0,c
  5251   003BDA  0E00               	movlw	0
  5252   003BDC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5253   003BDE  0E00               	movlw	0
  5254   003BE0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5255   003BE2  0E00               	movlw	0
  5256   003BE4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5257   003BE6  0E00               	movlw	0
  5258   003BE8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5259   003BEA  0E00               	movlw	0
  5260   003BEC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5261   003BEE  0E00               	movlw	0
  5262   003BF0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5263   003BF2  0E00               	movlw	0
  5264   003BF4  6E10               	movwf	(___aomod@divisor+7)^0,c
  5265   003BF6  EC0A  F024         	call	___aomod	;wreg free
  5266   003BFA  C001  F026         	movff	?___aomod,??_dtoa
  5267   003BFE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5268   003C02  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5269   003C06  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5270   003C0A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5271   003C0E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5272   003C12  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5273   003C16  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5274   003C1A  C026  F013         	movff	??_dtoa,abs@a
  5275   003C1E  C027  F014         	movff	??_dtoa+1,abs@a+1
  5276   003C22  EC3D  F02F         	call	_abs	;wreg free
  5277   003C26  5013               	movf	?_abs^0,w,c
  5278   003C28  0F30               	addlw	48
  5279   003C2A  6EDF               	movwf	indf2,c
  5280   003C2C                     
  5281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5282   003C2C  0630               	decf	dtoa@p^0,f,c
  5283   003C2E  A0D8               	btfss	status,0,c
  5284   003C30  0631               	decf	(dtoa@p+1)^0,f,c
  5285   003C32                     
  5286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5287   003C32  0632               	decf	dtoa@w^0,f,c
  5288   003C34  A0D8               	btfss	status,0,c
  5289   003C36  0633               	decf	(dtoa@w+1)^0,f,c
  5290   003C38                     
  5291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5292   003C38  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5293   003C3C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5294   003C40  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5295   003C44  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5296   003C48  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5297   003C4C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5298   003C50  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5299   003C54  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5300   003C58  0E0A               	movlw	10
  5301   003C5A  6E09               	movwf	___aodiv@divisor^0,c
  5302   003C5C  0E00               	movlw	0
  5303   003C5E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5304   003C60  0E00               	movlw	0
  5305   003C62  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5306   003C64  0E00               	movlw	0
  5307   003C66  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5308   003C68  0E00               	movlw	0
  5309   003C6A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5310   003C6C  0E00               	movlw	0
  5311   003C6E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5312   003C70  0E00               	movlw	0
  5313   003C72  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5314   003C74  0E00               	movlw	0
  5315   003C76  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5316   003C78  EC90  F022         	call	___aodiv	;wreg free
  5317   003C7C  C001  F034         	movff	?___aodiv,dtoa@n
  5318   003C80  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5319   003C84  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5320   003C88  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5321   003C8C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5322   003C90  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5323   003C94  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5324   003C98  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5325   003C9C                     l4795:
  5326                           
  5327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5328   003C9C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5329   003C9E  EF59  F01E         	goto	u4551
  5330   003CA2  503D               	movf	(dtoa@i+1)^0,w,c
  5331   003CA4  E108               	bnz	u4550
  5332   003CA6  043C               	decf	dtoa@i^0,w,c
  5333   003CA8  A0D8               	btfss	status,0,c
  5334   003CAA  EF59  F01E         	goto	u4551
  5335   003CAE  EF5B  F01E         	goto	u4550
  5336   003CB2                     u4551:
  5337   003CB2  EF77  F01E         	goto	l4801
  5338   003CB6                     u4550:
  5339   003CB6  5034               	movf	dtoa@n^0,w,c
  5340   003CB8  1035               	iorwf	(dtoa@n+1)^0,w,c
  5341   003CBA  1036               	iorwf	(dtoa@n+2)^0,w,c
  5342   003CBC  1037               	iorwf	(dtoa@n+3)^0,w,c
  5343   003CBE  1038               	iorwf	(dtoa@n+4)^0,w,c
  5344   003CC0  1039               	iorwf	(dtoa@n+5)^0,w,c
  5345   003CC2  103A               	iorwf	(dtoa@n+6)^0,w,c
  5346   003CC4  103B               	iorwf	(dtoa@n+7)^0,w,c
  5347   003CC6  A4D8               	btfss	status,2,c
  5348   003CC8  EF68  F01E         	goto	u4561
  5349   003CCC  EF6A  F01E         	goto	u4560
  5350   003CD0                     u4561:
  5351   003CD0  EFD2  F01D         	goto	l4785
  5352   003CD4                     u4560:
  5353   003CD4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5354   003CD6  EF77  F01E         	goto	u4570
  5355   003CDA  5031               	movf	(dtoa@p+1)^0,w,c
  5356   003CDC  E106               	bnz	u4571
  5357   003CDE  0430               	decf	dtoa@p^0,w,c
  5358   003CE0  B0D8               	btfsc	status,0,c
  5359   003CE2  EF75  F01E         	goto	u4571
  5360   003CE6  EF77  F01E         	goto	u4570
  5361   003CEA                     u4571:
  5362   003CEA  EFD2  F01D         	goto	l4785
  5363   003CEE                     u4570:
  5364   003CEE                     l4801:
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5367   003CEE  503E               	movf	dtoa@s^0,w,c
  5368   003CF0  B4D8               	btfsc	status,2,c
  5369   003CF2  EF7D  F01E         	goto	u4581
  5370   003CF6  EF7F  F01E         	goto	u4580
  5371   003CFA                     u4581:
  5372   003CFA  EF8A  F01E         	goto	l4807
  5373   003CFE                     u4580:
  5374   003CFE                     
  5375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5376   003CFE  063C               	decf	dtoa@i^0,f,c
  5377   003D00  A0D8               	btfss	status,0,c
  5378   003D02  063D               	decf	(dtoa@i+1)^0,f,c
  5379   003D04                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5381   003D04  0EA0               	movlw	low _dbuf
  5382   003D06  243C               	addwf	dtoa@i^0,w,c
  5383   003D08  6ED9               	movwf	fsr2l,c
  5384   003D0A  0E02               	movlw	high _dbuf
  5385   003D0C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5386   003D0E  6EDA               	movwf	fsr2h,c
  5387   003D10  C03E  FFDF         	movff	dtoa@s,indf2
  5388   003D14                     l4807:
  5389                           
  5390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5391   003D14  C01C  F011         	movff	dtoa@fp,pad@fp
  5392   003D18  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5393   003D1C  0EA0               	movlw	low _dbuf
  5394   003D1E  243C               	addwf	dtoa@i^0,w,c
  5395   003D20  6E13               	movwf	pad@buf^0,c
  5396   003D22  0E02               	movlw	high _dbuf
  5397   003D24  203D               	addwfc	(dtoa@i+1)^0,w,c
  5398   003D26  6E14               	movwf	(pad@buf+1)^0,c
  5399   003D28  C032  F015         	movff	dtoa@w,pad@p
  5400   003D2C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5401   003D30  ECC4  F029         	call	_pad	;wreg free
  5402   003D34  0012               	return		;funcret
  5403   003D36                     __end_of_dtoa:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _pad *****************
  5407 ;; Defined at:
  5408 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5411 ;;		 -> sprintf@f(11), 
  5412 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5413 ;;		 -> dbuf(80), 
  5414 ;;  p               2   20[COMRAM] int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  w               2   25[COMRAM] int 
  5417 ;;  i               2   23[COMRAM] int 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;Total ram usage:       11 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 4
  5434 ;; This function calls:
  5435 ;;		_fputc
  5436 ;;		_fputs
  5437 ;; This function is called by:
  5438 ;;		_dtoa
  5439 ;;		_efgtoa
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text14
  5444   005388                     __ptext14:
  5445                           	callstack 0
  5446   005388                     _pad:
  5447                           	callstack 22
  5448   005388                     
  5449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5450   005388  BE16               	btfsc	(pad@p+1)^0,7,c
  5451   00538A  EFC9  F029         	goto	u4231
  5452   00538E  EFCB  F029         	goto	u4230
  5453   005392                     u4231:
  5454   005392  EFD1  F029         	goto	l4631
  5455   005396                     u4230:
  5456   005396  C015  F01A         	movff	pad@p,pad@w
  5457   00539A  C016  F01B         	movff	pad@p+1,pad@w+1
  5458   00539E  EFD5  F029         	goto	l1460
  5459   0053A2                     l4631:
  5460   0053A2  0E00               	movlw	0
  5461   0053A4  6E1B               	movwf	(pad@w+1)^0,c
  5462   0053A6  0E00               	movlw	0
  5463   0053A8  6E1A               	movwf	pad@w^0,c
  5464   0053AA                     l1460:
  5465                           
  5466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5467   0053AA  0E00               	movlw	0
  5468   0053AC  6E19               	movwf	(pad@i+1)^0,c
  5469   0053AE  0E00               	movlw	0
  5470   0053B0  6E18               	movwf	pad@i^0,c
  5471                           
  5472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5473   0053B2  EFE7  F029         	goto	l4637
  5474   0053B6                     l4633:
  5475                           
  5476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5477   0053B6  0E00               	movlw	0
  5478   0053B8  6E02               	movwf	(fputc@c+1)^0,c
  5479   0053BA  0E20               	movlw	32
  5480   0053BC  6E01               	movwf	fputc@c^0,c
  5481   0053BE  C011  F003         	movff	pad@fp,fputc@fp
  5482   0053C2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5483   0053C6  EC40  F026         	call	_fputc	;wreg free
  5484   0053CA                     
  5485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5486   0053CA  4A18               	infsnz	pad@i^0,f,c
  5487   0053CC  2A19               	incf	(pad@i+1)^0,f,c
  5488   0053CE                     l4637:
  5489                           
  5490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5491   0053CE  501A               	movf	pad@w^0,w,c
  5492   0053D0  5C18               	subwf	pad@i^0,w,c
  5493   0053D2  5019               	movf	(pad@i+1)^0,w,c
  5494   0053D4  0A80               	xorlw	128
  5495   0053D6  6E17               	movwf	??_pad^0,c
  5496   0053D8  501B               	movf	(pad@w+1)^0,w,c
  5497   0053DA  0A80               	xorlw	128
  5498   0053DC  5817               	subwfb	??_pad^0,w,c
  5499   0053DE  A0D8               	btfss	status,0,c
  5500   0053E0  EFF4  F029         	goto	u4241
  5501   0053E4  EFF6  F029         	goto	u4240
  5502   0053E8                     u4241:
  5503   0053E8  EFDB  F029         	goto	l4633
  5504   0053EC                     u4240:
  5505   0053EC                     
  5506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5507   0053EC  C013  F00A         	movff	pad@buf,fputs@s
  5508   0053F0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5509   0053F4  C011  F00C         	movff	pad@fp,fputs@fp
  5510   0053F8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5511   0053FC  ECFA  F02E         	call	_fputs	;wreg free
  5512   005400  0012               	return		;funcret
  5513   005402                     __end_of_pad:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function _fputs *****************
  5517 ;; Defined at:
  5518 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5521 ;;		 -> dbuf(80), 
  5522 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5523 ;;		 -> sprintf@f(11), 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  i               2   14[COMRAM] int 
  5526 ;;  c               1   13[COMRAM] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2    9[COMRAM] int 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;Total ram usage:        7 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 3
  5543 ;; This function calls:
  5544 ;;		_fputc
  5545 ;; This function is called by:
  5546 ;;		_pad
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text15
  5551   005DF4                     __ptext15:
  5552                           	callstack 0
  5553   005DF4                     _fputs:
  5554                           	callstack 22
  5555   005DF4  0E00               	movlw	0
  5556   005DF6  6E10               	movwf	(fputs@i+1)^0,c
  5557   005DF8  0E00               	movlw	0
  5558   005DFA  6E0F               	movwf	fputs@i^0,c
  5559   005DFC  EF0B  F02F         	goto	l4105
  5560   005E00                     l4101:
  5561   005E00  C00E  F001         	movff	fputs@c,fputc@c
  5562   005E04  6A02               	clrf	(fputc@c+1)^0,c
  5563   005E06  C00C  F003         	movff	fputs@fp,fputc@fp
  5564   005E0A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5565   005E0E  EC40  F026         	call	_fputc	;wreg free
  5566   005E12  4A0F               	infsnz	fputs@i^0,f,c
  5567   005E14  2A10               	incf	(fputs@i+1)^0,f,c
  5568   005E16                     l4105:
  5569   005E16  500F               	movf	fputs@i^0,w,c
  5570   005E18  240A               	addwf	fputs@s^0,w,c
  5571   005E1A  6ED9               	movwf	fsr2l,c
  5572   005E1C  5010               	movf	(fputs@i+1)^0,w,c
  5573   005E1E  200B               	addwfc	(fputs@s+1)^0,w,c
  5574   005E20  6EDA               	movwf	fsr2h,c
  5575   005E22  50DF               	movf	indf2,w,c
  5576   005E24  6E0E               	movwf	fputs@c^0,c
  5577   005E26  500E               	movf	fputs@c^0,w,c
  5578   005E28  A4D8               	btfss	status,2,c
  5579   005E2A  EF19  F02F         	goto	u3401
  5580   005E2E  EF1B  F02F         	goto	u3400
  5581   005E32                     u3401:
  5582   005E32  EF00  F02F         	goto	l4101
  5583   005E36                     u3400:
  5584   005E36  0012               	return		;funcret
  5585   005E38                     __end_of_fputs:
  5586                           	callstack 0
  5587                           
  5588 ;; *************** function _fputc *****************
  5589 ;; Defined at:
  5590 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  c               2    0[COMRAM] int 
  5593 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5594 ;;		 -> sprintf@f(11), 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;		None
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  2    0[COMRAM] int 
  5599 ;; Registers used:
  5600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;Total ram usage:        9 bytes
  5611 ;; Hardware stack levels used: 1
  5612 ;; Hardware stack levels required when called: 2
  5613 ;; This function calls:
  5614 ;;		_putch
  5615 ;; This function is called by:
  5616 ;;		_pad
  5617 ;;		_vfpfcnvrt
  5618 ;;		_fputs
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text16
  5623   004C80                     __ptext16:
  5624                           	callstack 0
  5625   004C80                     _fputc:
  5626                           	callstack 25
  5627   004C80  5003               	movf	fputc@fp^0,w,c
  5628   004C82  1004               	iorwf	(fputc@fp+1)^0,w,c
  5629   004C84  B4D8               	btfsc	status,2,c
  5630   004C86  EF47  F026         	goto	u2951
  5631   004C8A  EF49  F026         	goto	u2950
  5632   004C8E                     u2951:
  5633   004C8E  EF52  F026         	goto	l3871
  5634   004C92                     u2950:
  5635   004C92  5003               	movf	fputc@fp^0,w,c
  5636   004C94  1004               	iorwf	(fputc@fp+1)^0,w,c
  5637   004C96  A4D8               	btfss	status,2,c
  5638   004C98  EF50  F026         	goto	u2961
  5639   004C9C  EF52  F026         	goto	u2960
  5640   004CA0                     u2961:
  5641   004CA0  EF57  F026         	goto	l3873
  5642   004CA4                     u2960:
  5643   004CA4                     l3871:
  5644   004CA4  5001               	movf	fputc@c^0,w,c
  5645   004CA6  ECB6  F030         	call	_putch
  5646   004CAA  EFA4  F026         	goto	l1620
  5647   004CAE                     l3873:
  5648   004CAE  EE20 F009          	lfsr	2,9
  5649   004CB2  5003               	movf	fputc@fp^0,w,c
  5650   004CB4  26D9               	addwf	fsr2l,f,c
  5651   004CB6  5004               	movf	(fputc@fp+1)^0,w,c
  5652   004CB8  22DA               	addwfc	fsr2h,f,c
  5653   004CBA  50DE               	movf	postinc2,w,c
  5654   004CBC  10DE               	iorwf	postinc2,w,c
  5655   004CBE  B4D8               	btfsc	status,2,c
  5656   004CC0  EF64  F026         	goto	u2971
  5657   004CC4  EF66  F026         	goto	u2970
  5658   004CC8                     u2971:
  5659   004CC8  EF81  F026         	goto	l3877
  5660   004CCC                     u2970:
  5661   004CCC  EE20 F009          	lfsr	2,9
  5662   004CD0  5003               	movf	fputc@fp^0,w,c
  5663   004CD2  26D9               	addwf	fsr2l,f,c
  5664   004CD4  5004               	movf	(fputc@fp+1)^0,w,c
  5665   004CD6  22DA               	addwfc	fsr2h,f,c
  5666   004CD8  EE10 F003          	lfsr	1,3
  5667   004CDC  5003               	movf	fputc@fp^0,w,c
  5668   004CDE  26E1               	addwf	fsr1l,f,c
  5669   004CE0  5004               	movf	(fputc@fp+1)^0,w,c
  5670   004CE2  22E2               	addwfc	fsr1h,f,c
  5671   004CE4  50DE               	movf	postinc2,w,c
  5672   004CE6  5CE6               	subwf	postinc1,w,c
  5673   004CE8  50E6               	movf	postinc1,w,c
  5674   004CEA  0A80               	xorlw	128
  5675   004CEC  6E09               	movwf	(??_fputc+4)^0,c
  5676   004CEE  50DE               	movf	postinc2,w,c
  5677   004CF0  0A80               	xorlw	128
  5678   004CF2  5809               	subwfb	(??_fputc+4)^0,w,c
  5679   004CF4  B0D8               	btfsc	status,0,c
  5680   004CF6  EF7F  F026         	goto	u2981
  5681   004CFA  EF81  F026         	goto	u2980
  5682   004CFE                     u2981:
  5683   004CFE  EFA4  F026         	goto	l1620
  5684   004D02                     u2980:
  5685   004D02                     l3877:
  5686   004D02  EE20 F003          	lfsr	2,3
  5687   004D06  5003               	movf	fputc@fp^0,w,c
  5688   004D08  26D9               	addwf	fsr2l,f,c
  5689   004D0A  5004               	movf	(fputc@fp+1)^0,w,c
  5690   004D0C  22DA               	addwfc	fsr2h,f,c
  5691   004D0E  CFDE F005          	movff	postinc2,??_fputc
  5692   004D12  CFDD F006          	movff	postdec2,??_fputc+1
  5693   004D16  C003  FFD9         	movff	fputc@fp,fsr2l
  5694   004D1A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5695   004D1E  CFDE F007          	movff	postinc2,??_fputc+2
  5696   004D22  CFDD F008          	movff	postdec2,??_fputc+3
  5697   004D26  5005               	movf	??_fputc^0,w,c
  5698   004D28  2407               	addwf	(??_fputc+2)^0,w,c
  5699   004D2A  6ED9               	movwf	fsr2l,c
  5700   004D2C  5006               	movf	(??_fputc+1)^0,w,c
  5701   004D2E  2008               	addwfc	(??_fputc+3)^0,w,c
  5702   004D30  6EDA               	movwf	fsr2h,c
  5703   004D32  C001  FFDF         	movff	fputc@c,indf2
  5704   004D36  EE20 F003          	lfsr	2,3
  5705   004D3A  5003               	movf	fputc@fp^0,w,c
  5706   004D3C  26D9               	addwf	fsr2l,f,c
  5707   004D3E  5004               	movf	(fputc@fp+1)^0,w,c
  5708   004D40  22DA               	addwfc	fsr2h,f,c
  5709   004D42  2ADE               	incf	postinc2,f,c
  5710   004D44  0E00               	movlw	0
  5711   004D46  22DD               	addwfc	postdec2,f,c
  5712   004D48                     l1620:
  5713   004D48  0012               	return		;funcret
  5714   004D4A                     __end_of_fputc:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _putch *****************
  5718 ;; Defined at:
  5719 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  c               1    wreg     unsigned char 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  c               1    0[COMRAM] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_fputc
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text17
  5748   00616C                     __ptext17:
  5749                           	callstack 0
  5750   00616C                     _putch:
  5751                           	callstack 25
  5752   00616C  0012               	return		;funcret
  5753   00616E                     __end_of_putch:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _abs *****************
  5757 ;; Defined at:
  5758 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  a               2   18[COMRAM] int 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  2   18[COMRAM] int 
  5765 ;; Registers used:
  5766 ;;		wreg, status,2, status,0
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;Total ram usage:        4 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 1
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_dtoa
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text18
  5787   005E7A                     __ptext18:
  5788                           	callstack 0
  5789   005E7A                     _abs:
  5790                           	callstack 25
  5791   005E7A  BE14               	btfsc	(abs@a+1)^0,7,c
  5792   005E7C  EF4A  F02F         	goto	u4250
  5793   005E80  5014               	movf	(abs@a+1)^0,w,c
  5794   005E82  E106               	bnz	u4251
  5795   005E84  0413               	decf	abs@a^0,w,c
  5796   005E86  B0D8               	btfsc	status,0,c
  5797   005E88  EF48  F02F         	goto	u4251
  5798   005E8C  EF4A  F02F         	goto	u4250
  5799   005E90                     u4251:
  5800   005E90  EF58  F02F         	goto	l1579
  5801   005E94                     u4250:
  5802   005E94  C013  F015         	movff	abs@a,??_abs
  5803   005E98  C014  F016         	movff	abs@a+1,??_abs+1
  5804   005E9C  1E15               	comf	??_abs^0,f,c
  5805   005E9E  1E16               	comf	(??_abs+1)^0,f,c
  5806   005EA0  4A15               	infsnz	??_abs^0,f,c
  5807   005EA2  2A16               	incf	(??_abs+1)^0,f,c
  5808   005EA4  C015  F013         	movff	??_abs,?_abs
  5809   005EA8  C016  F014         	movff	??_abs+1,?_abs+1
  5810   005EAC  EF5C  F02F         	goto	l1582
  5811   005EB0                     l1579:
  5812   005EB0  C013  F013         	movff	abs@a,?_abs
  5813   005EB4  C014  F014         	movff	abs@a+1,?_abs+1
  5814   005EB8                     l1582:
  5815   005EB8  0012               	return		;funcret
  5816   005EBA                     __end_of_abs:
  5817                           	callstack 0
  5818                           
  5819 ;; *************** function ___aomod *****************
  5820 ;; Defined at:
  5821 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  dividend        8    0[COMRAM] long long 
  5824 ;;  divisor         8    8[COMRAM] long long 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  sign            1   17[COMRAM] unsigned char 
  5827 ;;  counter         1   16[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  8    0[COMRAM] long long 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5837 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;Total ram usage:       18 bytes
  5842 ;; Hardware stack levels used: 1
  5843 ;; Hardware stack levels required when called: 1
  5844 ;; This function calls:
  5845 ;;		Nothing
  5846 ;; This function is called by:
  5847 ;;		_dtoa
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text19
  5852   004814                     __ptext19:
  5853                           	callstack 0
  5854   004814                     ___aomod:
  5855                           	callstack 25
  5856   004814  0E00               	movlw	0
  5857   004816  6E12               	movwf	___aomod@sign^0,c
  5858   004818  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5859   00481A  EF13  F024         	goto	u3590
  5860   00481E  EF11  F024         	goto	u3591
  5861   004822                     u3591:
  5862   004822  EF25  F024         	goto	l4235
  5863   004826                     u3590:
  5864   004826  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5865   004828  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5866   00482A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5867   00482C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5868   00482E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5869   004830  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5870   004832  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5871   004834  6C01               	negf	___aomod@dividend^0,c
  5872   004836  0E00               	movlw	0
  5873   004838  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5874   00483A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5875   00483C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5876   00483E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5877   004840  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5878   004842  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5879   004844  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5880   004846  0E01               	movlw	1
  5881   004848  6E12               	movwf	___aomod@sign^0,c
  5882   00484A                     l4235:
  5883   00484A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5884   00484C  EF2C  F024         	goto	u3600
  5885   004850  EF2A  F024         	goto	u3601
  5886   004854                     u3601:
  5887   004854  EF3C  F024         	goto	l4239
  5888   004858                     u3600:
  5889   004858  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5890   00485A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5891   00485C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5892   00485E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5893   004860  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5894   004862  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5895   004864  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5896   004866  6C09               	negf	___aomod@divisor^0,c
  5897   004868  0E00               	movlw	0
  5898   00486A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5899   00486C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5900   00486E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5901   004870  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5902   004872  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5903   004874  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5904   004876  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5905   004878                     l4239:
  5906   004878  5009               	movf	___aomod@divisor^0,w,c
  5907   00487A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5908   00487C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5909   00487E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5910   004880  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5911   004882  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5912   004884  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5913   004886  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5914   004888  B4D8               	btfsc	status,2,c
  5915   00488A  EF49  F024         	goto	u3611
  5916   00488E  EF4B  F024         	goto	u3610
  5917   004892                     u3611:
  5918   004892  EF93  F024         	goto	l4255
  5919   004896                     u3610:
  5920   004896  0E01               	movlw	1
  5921   004898  6E11               	movwf	___aomod@counter^0,c
  5922   00489A  EF59  F024         	goto	l4245
  5923   00489E                     l4243:
  5924   00489E  90D8               	bcf	status,0,c
  5925   0048A0  3609               	rlcf	___aomod@divisor^0,f,c
  5926   0048A2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5927   0048A4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5928   0048A6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5929   0048A8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5930   0048AA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5931   0048AC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5932   0048AE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5933   0048B0  2A11               	incf	___aomod@counter^0,f,c
  5934   0048B2                     l4245:
  5935   0048B2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5936   0048B4  EF5E  F024         	goto	u3621
  5937   0048B8  EF60  F024         	goto	u3620
  5938   0048BC                     u3621:
  5939   0048BC  EF4F  F024         	goto	l4243
  5940   0048C0                     u3620:
  5941   0048C0                     l4247:
  5942   0048C0  5009               	movf	___aomod@divisor^0,w,c
  5943   0048C2  5C01               	subwf	___aomod@dividend^0,w,c
  5944   0048C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  5945   0048C6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5946   0048C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  5947   0048CA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5948   0048CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  5949   0048CE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5950   0048D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  5951   0048D2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5952   0048D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  5953   0048D6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5954   0048D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  5955   0048DA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5956   0048DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  5957   0048DE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5958   0048E0  A0D8               	btfss	status,0,c
  5959   0048E2  EF75  F024         	goto	u3631
  5960   0048E6  EF77  F024         	goto	u3630
  5961   0048EA                     u3631:
  5962   0048EA  EF87  F024         	goto	l4251
  5963   0048EE                     u3630:
  5964   0048EE  5009               	movf	___aomod@divisor^0,w,c
  5965   0048F0  5E01               	subwf	___aomod@dividend^0,f,c
  5966   0048F2  500A               	movf	(___aomod@divisor+1)^0,w,c
  5967   0048F4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5968   0048F6  500B               	movf	(___aomod@divisor+2)^0,w,c
  5969   0048F8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5970   0048FA  500C               	movf	(___aomod@divisor+3)^0,w,c
  5971   0048FC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5972   0048FE  500D               	movf	(___aomod@divisor+4)^0,w,c
  5973   004900  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5974   004902  500E               	movf	(___aomod@divisor+5)^0,w,c
  5975   004904  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5976   004906  500F               	movf	(___aomod@divisor+6)^0,w,c
  5977   004908  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5978   00490A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5979   00490C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5980   00490E                     l4251:
  5981   00490E  90D8               	bcf	status,0,c
  5982   004910  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5983   004912  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5984   004914  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5985   004916  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5986   004918  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5987   00491A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5988   00491C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5989   00491E  3209               	rrcf	___aomod@divisor^0,f,c
  5990   004920  2E11               	decfsz	___aomod@counter^0,f,c
  5991   004922  EF60  F024         	goto	l4247
  5992   004926                     l4255:
  5993   004926  5012               	movf	___aomod@sign^0,w,c
  5994   004928  B4D8               	btfsc	status,2,c
  5995   00492A  EF99  F024         	goto	u3641
  5996   00492E  EF9B  F024         	goto	u3640
  5997   004932                     u3641:
  5998   004932  EFAB  F024         	goto	l4259
  5999   004936                     u3640:
  6000   004936  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6001   004938  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6002   00493A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6003   00493C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6004   00493E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6005   004940  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6006   004942  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6007   004944  6C01               	negf	___aomod@dividend^0,c
  6008   004946  0E00               	movlw	0
  6009   004948  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6010   00494A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6011   00494C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6012   00494E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6013   004950  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6014   004952  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6015   004954  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6016   004956                     l4259:
  6017   004956  C001  F001         	movff	___aomod@dividend,?___aomod
  6018   00495A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6019   00495E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6020   004962  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6021   004966  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6022   00496A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6023   00496E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6024   004972  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6025   004976  0012               	return		;funcret
  6026   004978                     __end_of___aomod:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function ___aodiv *****************
  6030 ;; Defined at:
  6031 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  dividend        8    0[COMRAM] long long 
  6034 ;;  divisor         8    8[COMRAM] long long 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  quotient        8   18[COMRAM] long long 
  6037 ;;  sign            1   17[COMRAM] unsigned char 
  6038 ;;  counter         1   16[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  8    0[COMRAM] long long 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6048 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;Total ram usage:       26 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 1
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_dtoa
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text20
  6063   004520                     __ptext20:
  6064                           	callstack 0
  6065   004520                     ___aodiv:
  6066                           	callstack 25
  6067   004520  0E00               	movlw	0
  6068   004522  6E12               	movwf	___aodiv@sign^0,c
  6069   004524  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6070   004526  EF99  F022         	goto	u3520
  6071   00452A  EF97  F022         	goto	u3521
  6072   00452E                     u3521:
  6073   00452E  EFAB  F022         	goto	l4191
  6074   004532                     u3520:
  6075   004532  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6076   004534  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6077   004536  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6078   004538  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6079   00453A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6080   00453C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6081   00453E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6082   004540  6C09               	negf	___aodiv@divisor^0,c
  6083   004542  0E00               	movlw	0
  6084   004544  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6085   004546  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6086   004548  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6087   00454A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6088   00454C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6089   00454E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6090   004550  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6091   004552  0E01               	movlw	1
  6092   004554  6E12               	movwf	___aodiv@sign^0,c
  6093   004556                     l4191:
  6094   004556  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6095   004558  EFB2  F022         	goto	u3530
  6096   00455C  EFB0  F022         	goto	u3531
  6097   004560                     u3531:
  6098   004560  EFC4  F022         	goto	l4197
  6099   004564                     u3530:
  6100   004564  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6101   004566  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6102   004568  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6103   00456A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6104   00456C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6105   00456E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6106   004570  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6107   004572  6C01               	negf	___aodiv@dividend^0,c
  6108   004574  0E00               	movlw	0
  6109   004576  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6110   004578  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6111   00457A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6112   00457C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6113   00457E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6114   004580  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6115   004582  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6116   004584  0E01               	movlw	1
  6117   004586  1A12               	xorwf	___aodiv@sign^0,f,c
  6118   004588                     l4197:
  6119   004588  EE20  F013         	lfsr	2,___aodiv@quotient
  6120   00458C  0E07               	movlw	7
  6121   00458E                     u3541:
  6122   00458E  6ADE               	clrf	postinc2,c
  6123   004590  06E8               	decf	wreg,f,c
  6124   004592  E2FD               	bc	u3541
  6125   004594  5009               	movf	___aodiv@divisor^0,w,c
  6126   004596  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6127   004598  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6128   00459A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6129   00459C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6130   00459E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6131   0045A0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6132   0045A2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6133   0045A4  B4D8               	btfsc	status,2,c
  6134   0045A6  EFD7  F022         	goto	u3551
  6135   0045AA  EFD9  F022         	goto	u3550
  6136   0045AE                     u3551:
  6137   0045AE  EF2B  F023         	goto	l4219
  6138   0045B2                     u3550:
  6139   0045B2  0E01               	movlw	1
  6140   0045B4  6E11               	movwf	___aodiv@counter^0,c
  6141   0045B6  EFE7  F022         	goto	l4205
  6142   0045BA                     l4203:
  6143   0045BA  90D8               	bcf	status,0,c
  6144   0045BC  3609               	rlcf	___aodiv@divisor^0,f,c
  6145   0045BE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6146   0045C0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6147   0045C2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6148   0045C4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6149   0045C6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6150   0045C8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6151   0045CA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6152   0045CC  2A11               	incf	___aodiv@counter^0,f,c
  6153   0045CE                     l4205:
  6154   0045CE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6155   0045D0  EFEC  F022         	goto	u3561
  6156   0045D4  EFEE  F022         	goto	u3560
  6157   0045D8                     u3561:
  6158   0045D8  EFDD  F022         	goto	l4203
  6159   0045DC                     u3560:
  6160   0045DC                     l4207:
  6161   0045DC  90D8               	bcf	status,0,c
  6162   0045DE  3613               	rlcf	___aodiv@quotient^0,f,c
  6163   0045E0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6164   0045E2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6165   0045E4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6166   0045E6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6167   0045E8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6168   0045EA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6169   0045EC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6170   0045EE  5009               	movf	___aodiv@divisor^0,w,c
  6171   0045F0  5C01               	subwf	___aodiv@dividend^0,w,c
  6172   0045F2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6173   0045F4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6174   0045F6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6175   0045F8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6176   0045FA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6177   0045FC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6178   0045FE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6179   004600  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6180   004602  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6181   004604  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6182   004606  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6183   004608  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6184   00460A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6185   00460C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6186   00460E  A0D8               	btfss	status,0,c
  6187   004610  EF0C  F023         	goto	u3571
  6188   004614  EF0E  F023         	goto	u3570
  6189   004618                     u3571:
  6190   004618  EF1F  F023         	goto	l4215
  6191   00461C                     u3570:
  6192   00461C  5009               	movf	___aodiv@divisor^0,w,c
  6193   00461E  5E01               	subwf	___aodiv@dividend^0,f,c
  6194   004620  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6195   004622  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6196   004624  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6197   004626  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6198   004628  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6199   00462A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6200   00462C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6201   00462E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6202   004630  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6203   004632  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6204   004634  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6205   004636  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6206   004638  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6207   00463A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6208   00463C  8013               	bsf	___aodiv@quotient^0,0,c
  6209   00463E                     l4215:
  6210   00463E  90D8               	bcf	status,0,c
  6211   004640  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6212   004642  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6213   004644  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6214   004646  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6215   004648  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6216   00464A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6217   00464C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6218   00464E  3209               	rrcf	___aodiv@divisor^0,f,c
  6219   004650  2E11               	decfsz	___aodiv@counter^0,f,c
  6220   004652  EFEE  F022         	goto	l4207
  6221   004656                     l4219:
  6222   004656  5012               	movf	___aodiv@sign^0,w,c
  6223   004658  B4D8               	btfsc	status,2,c
  6224   00465A  EF31  F023         	goto	u3581
  6225   00465E  EF33  F023         	goto	u3580
  6226   004662                     u3581:
  6227   004662  EF43  F023         	goto	l4223
  6228   004666                     u3580:
  6229   004666  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6230   004668  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6231   00466A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6232   00466C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6233   00466E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6234   004670  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6235   004672  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6236   004674  6C13               	negf	___aodiv@quotient^0,c
  6237   004676  0E00               	movlw	0
  6238   004678  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6239   00467A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6240   00467C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6241   00467E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6242   004680  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6243   004682  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6244   004684  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6245   004686                     l4223:
  6246   004686  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6247   00468A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6248   00468E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6249   004692  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6250   004696  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6251   00469A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6252   00469E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6253   0046A2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6254   0046A6  0012               	return		;funcret
  6255   0046A8                     __end_of___aodiv:
  6256                           	callstack 0
  6257                           
  6258 ;; *************** function _sendStringSerial4 *****************
  6259 ;; Defined at:
  6260 ;;		line 33 in file "serial.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  string          2    1[COMRAM] PTR unsigned char 
  6263 ;;		 -> main@buf(100), 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;		None
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;Total ram usage:        2 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 2
  6282 ;; This function calls:
  6283 ;;		_sendCharSerial4
  6284 ;; This function is called by:
  6285 ;;		_main
  6286 ;; This function uses a non-reentrant model
  6287 ;;
  6288                           
  6289                           	psect	text21
  6290   005FDC                     __ptext21:
  6291                           	callstack 0
  6292   005FDC                     _sendStringSerial4:
  6293                           	callstack 28
  6294   005FDC                     
  6295                           ;serial.c: 34:     while (*string!=0){
  6296   005FDC  EFF9  F02F         	goto	l5563
  6297   005FE0                     l5559:
  6298                           
  6299                           ;serial.c: 35:         sendCharSerial4(*string++);
  6300   005FE0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6301   005FE4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6302   005FE8  50DF               	movf	indf2,w,c
  6303   005FEA  EC84  F030         	call	_sendCharSerial4
  6304   005FEE  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6305   005FF0  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6306   005FF2                     l5563:
  6307                           
  6308                           ;serial.c: 34:     while (*string!=0){
  6309   005FF2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6310   005FF6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6311   005FFA  50DF               	movf	indf2,w,c
  6312   005FFC  A4D8               	btfss	status,2,c
  6313   005FFE  EF03  F030         	goto	u5481
  6314   006002  EF05  F030         	goto	u5480
  6315   006006                     u5481:
  6316   006006  EFF0  F02F         	goto	l5559
  6317   00600A                     u5480:
  6318   00600A  0012               	return		;funcret
  6319   00600C                     __end_of_sendStringSerial4:
  6320                           	callstack 0
  6321                           
  6322 ;; *************** function _sendCharSerial4 *****************
  6323 ;; Defined at:
  6324 ;;		line 26 in file "serial.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  charToSend      1    wreg     unsigned char 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  charToSend      1    0[COMRAM] unsigned char 
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  1    wreg      void 
  6331 ;; Registers used:
  6332 ;;		wreg
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;Total ram usage:        1 bytes
  6343 ;; Hardware stack levels used: 1
  6344 ;; Hardware stack levels required when called: 1
  6345 ;; This function calls:
  6346 ;;		Nothing
  6347 ;; This function is called by:
  6348 ;;		_sendStringSerial4
  6349 ;; This function uses a non-reentrant model
  6350 ;;
  6351                           
  6352                           	psect	text22
  6353   006108                     __ptext22:
  6354                           	callstack 0
  6355   006108                     _sendCharSerial4:
  6356                           	callstack 28
  6357                           
  6358                           ;incstack = 0
  6359                           ;sendCharSerial4@charToSend stored from wreg
  6360   006108  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6361   00610A                     l197:
  6362   00610A  010E               	movlb	14	; () banked
  6363   00610C  A537               	btfss	55,2,b	;volatile
  6364   00610E  EF8B  F030         	goto	u4991
  6365   006112  EF8D  F030         	goto	u4990
  6366   006116                     u4991:
  6367   006116  EF85  F030         	goto	l197
  6368   00611A                     u4990:
  6369   00611A                     
  6370                           ; BSR set to: 14
  6371                           ;serial.c: 28:     TX4REG = charToSend;
  6372   00611A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6373   00611E                     
  6374                           ; BSR set to: 14
  6375   00611E  0012               	return		;funcret
  6376   006120                     __end_of_sendCharSerial4:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _readColours *****************
  6380 ;; Defined at:
  6381 ;;		line 106 in file "color.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  vals            2   11[COMRAM] PTR struct RGB
  6384 ;;		 -> vals(8), 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;Total ram usage:        2 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 4
  6403 ;; This function calls:
  6404 ;;		_color_read_Blue
  6405 ;;		_color_read_Green
  6406 ;;		_color_read_Red
  6407 ;;		_color_read_lum
  6408 ;; This function is called by:
  6409 ;;		_main
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text23
  6414   005690                     __ptext23:
  6415                           	callstack 0
  6416   005690                     _readColours:
  6417                           	callstack 26
  6418   005690                     
  6419                           ;color.c: 108:     vals ->R = color_read_Red();
  6420   005690  ECC7  F02D         	call	_color_read_Red	;wreg free
  6421   005694  C00C  FFD9         	movff	readColours@vals,fsr2l
  6422   005698  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6423   00569C  C005  FFDE         	movff	?_color_read_Red,postinc2
  6424   0056A0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6425                           
  6426                           ;color.c: 109:     vals ->B = color_read_Blue();
  6427   0056A4  EC17  F02E         	call	_color_read_Blue	;wreg free
  6428   0056A8  EE20 F004          	lfsr	2,4
  6429   0056AC  500C               	movf	readColours@vals^0,w,c
  6430   0056AE  26D9               	addwf	fsr2l,f,c
  6431   0056B0  500D               	movf	(readColours@vals+1)^0,w,c
  6432   0056B2  22DA               	addwfc	fsr2h,f,c
  6433   0056B4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6434   0056B8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6435                           
  6436                           ;color.c: 110:     vals ->G = color_read_Green();
  6437   0056BC  ECEF  F02D         	call	_color_read_Green	;wreg free
  6438   0056C0  EE20 F002          	lfsr	2,2
  6439   0056C4  500C               	movf	readColours@vals^0,w,c
  6440   0056C6  26D9               	addwf	fsr2l,f,c
  6441   0056C8  500D               	movf	(readColours@vals+1)^0,w,c
  6442   0056CA  22DA               	addwfc	fsr2h,f,c
  6443   0056CC  C005  FFDE         	movff	?_color_read_Green,postinc2
  6444   0056D0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6445                           
  6446                           ;color.c: 111:     vals ->L = color_read_lum();
  6447   0056D4  EC9F  F02D         	call	_color_read_lum	;wreg free
  6448   0056D8  EE20 F006          	lfsr	2,6
  6449   0056DC  500C               	movf	readColours@vals^0,w,c
  6450   0056DE  26D9               	addwf	fsr2l,f,c
  6451   0056E0  500D               	movf	(readColours@vals+1)^0,w,c
  6452   0056E2  22DA               	addwfc	fsr2h,f,c
  6453   0056E4  C005  FFDE         	movff	?_color_read_lum,postinc2
  6454   0056E8  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6455   0056EC  0012               	return		;funcret
  6456   0056EE                     __end_of_readColours:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _color_read_lum *****************
  6460 ;; Defined at:
  6461 ;;		line 50 in file "color.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  tmp             2    9[COMRAM] unsigned int 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  2    4[COMRAM] unsigned int 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;Total ram usage:        7 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 3
  6482 ;; This function calls:
  6483 ;;		_I2C_2_Master_Read
  6484 ;;		_I2C_2_Master_RepStart
  6485 ;;		_I2C_2_Master_Start
  6486 ;;		_I2C_2_Master_Stop
  6487 ;;		_I2C_2_Master_Write
  6488 ;; This function is called by:
  6489 ;;		_readColours
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text24
  6494   005B3E                     __ptext24:
  6495                           	callstack 0
  6496   005B3E                     _color_read_lum:
  6497                           	callstack 26
  6498   005B3E                     
  6499                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6500   005B3E  ECAC  F030         	call	_I2C_2_Master_Start	;wreg free
  6501                           
  6502                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6503   005B42  0E52               	movlw	82
  6504   005B44  EC90  F030         	call	_I2C_2_Master_Write
  6505                           
  6506                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6507   005B48  0EB4               	movlw	180
  6508   005B4A  EC90  F030         	call	_I2C_2_Master_Write
  6509                           
  6510                           ;color.c: 56:  I2C_2_Master_RepStart();
  6511   005B4E  ECA2  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6512                           
  6513                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6514   005B52  0E53               	movlw	83
  6515   005B54  EC90  F030         	call	_I2C_2_Master_Write
  6516                           
  6517                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6518   005B58  0E01               	movlw	1
  6519   005B5A  EC1C  F02F         	call	_I2C_2_Master_Read
  6520   005B5E  6E07               	movwf	??_color_read_lum^0,c
  6521   005B60  5007               	movf	??_color_read_lum^0,w,c
  6522   005B62  6E0A               	movwf	color_read_lum@tmp^0,c
  6523   005B64  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6524                           
  6525                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6526   005B66  0E00               	movlw	0
  6527   005B68  EC1C  F02F         	call	_I2C_2_Master_Read
  6528   005B6C  6E07               	movwf	??_color_read_lum^0,c
  6529   005B6E  5007               	movf	??_color_read_lum^0,w,c
  6530   005B70  6E09               	movwf	(??_color_read_lum+2)^0,c
  6531   005B72  6A08               	clrf	(??_color_read_lum+1)^0,c
  6532   005B74  500A               	movf	color_read_lum@tmp^0,w,c
  6533   005B76  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6534   005B78  6E0A               	movwf	color_read_lum@tmp^0,c
  6535   005B7A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6536   005B7C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6537   005B7E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6538                           
  6539                           ;color.c: 60:  I2C_2_Master_Stop();
  6540   005B80  ECA7  F030         	call	_I2C_2_Master_Stop	;wreg free
  6541   005B84                     
  6542                           ;color.c: 61:  return tmp;
  6543   005B84  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6544   005B88  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6545   005B8C  0012               	return		;funcret
  6546   005B8E                     __end_of_color_read_lum:
  6547                           	callstack 0
  6548                           
  6549 ;; *************** function _color_read_Red *****************
  6550 ;; Defined at:
  6551 ;;		line 64 in file "color.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;		None
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  tmp             2    9[COMRAM] unsigned int 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2    4[COMRAM] unsigned int 
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;Total ram usage:        7 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 3
  6572 ;; This function calls:
  6573 ;;		_I2C_2_Master_Read
  6574 ;;		_I2C_2_Master_RepStart
  6575 ;;		_I2C_2_Master_Start
  6576 ;;		_I2C_2_Master_Stop
  6577 ;;		_I2C_2_Master_Write
  6578 ;; This function is called by:
  6579 ;;		_readColours
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text25
  6584   005B8E                     __ptext25:
  6585                           	callstack 0
  6586   005B8E                     _color_read_Red:
  6587                           	callstack 26
  6588   005B8E                     
  6589                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6590   005B8E  ECAC  F030         	call	_I2C_2_Master_Start	;wreg free
  6591                           
  6592                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6593   005B92  0E52               	movlw	82
  6594   005B94  EC90  F030         	call	_I2C_2_Master_Write
  6595                           
  6596                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6597   005B98  0EB6               	movlw	182
  6598   005B9A  EC90  F030         	call	_I2C_2_Master_Write
  6599                           
  6600                           ;color.c: 70:  I2C_2_Master_RepStart();
  6601   005B9E  ECA2  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6602                           
  6603                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6604   005BA2  0E53               	movlw	83
  6605   005BA4  EC90  F030         	call	_I2C_2_Master_Write
  6606                           
  6607                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6608   005BA8  0E01               	movlw	1
  6609   005BAA  EC1C  F02F         	call	_I2C_2_Master_Read
  6610   005BAE  6E07               	movwf	??_color_read_Red^0,c
  6611   005BB0  5007               	movf	??_color_read_Red^0,w,c
  6612   005BB2  6E0A               	movwf	color_read_Red@tmp^0,c
  6613   005BB4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6614                           
  6615                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6616   005BB6  0E00               	movlw	0
  6617   005BB8  EC1C  F02F         	call	_I2C_2_Master_Read
  6618   005BBC  6E07               	movwf	??_color_read_Red^0,c
  6619   005BBE  5007               	movf	??_color_read_Red^0,w,c
  6620   005BC0  6E09               	movwf	(??_color_read_Red+2)^0,c
  6621   005BC2  6A08               	clrf	(??_color_read_Red+1)^0,c
  6622   005BC4  500A               	movf	color_read_Red@tmp^0,w,c
  6623   005BC6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6624   005BC8  6E0A               	movwf	color_read_Red@tmp^0,c
  6625   005BCA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6626   005BCC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6627   005BCE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6628                           
  6629                           ;color.c: 74:  I2C_2_Master_Stop();
  6630   005BD0  ECA7  F030         	call	_I2C_2_Master_Stop	;wreg free
  6631   005BD4                     
  6632                           ;color.c: 75:  return tmp;
  6633   005BD4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6634   005BD8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6635   005BDC  0012               	return		;funcret
  6636   005BDE                     __end_of_color_read_Red:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function _color_read_Green *****************
  6640 ;; Defined at:
  6641 ;;		line 77 in file "color.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  tmp             2    9[COMRAM] unsigned int 
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  2    4[COMRAM] unsigned int 
  6648 ;; Registers used:
  6649 ;;		wreg, status,2, status,0, cstack
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6658 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;Total ram usage:        7 bytes
  6660 ;; Hardware stack levels used: 1
  6661 ;; Hardware stack levels required when called: 3
  6662 ;; This function calls:
  6663 ;;		_I2C_2_Master_Read
  6664 ;;		_I2C_2_Master_RepStart
  6665 ;;		_I2C_2_Master_Start
  6666 ;;		_I2C_2_Master_Stop
  6667 ;;		_I2C_2_Master_Write
  6668 ;; This function is called by:
  6669 ;;		_readColours
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text26
  6674   005BDE                     __ptext26:
  6675                           	callstack 0
  6676   005BDE                     _color_read_Green:
  6677                           	callstack 26
  6678   005BDE                     
  6679                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  6680   005BDE  ECAC  F030         	call	_I2C_2_Master_Start	;wreg free
  6681                           
  6682                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  6683   005BE2  0E52               	movlw	82
  6684   005BE4  EC90  F030         	call	_I2C_2_Master_Write
  6685                           
  6686                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  6687   005BE8  0EB8               	movlw	184
  6688   005BEA  EC90  F030         	call	_I2C_2_Master_Write
  6689                           
  6690                           ;color.c: 83:  I2C_2_Master_RepStart();
  6691   005BEE  ECA2  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6692                           
  6693                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6694   005BF2  0E53               	movlw	83
  6695   005BF4  EC90  F030         	call	_I2C_2_Master_Write
  6696                           
  6697                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6698   005BF8  0E01               	movlw	1
  6699   005BFA  EC1C  F02F         	call	_I2C_2_Master_Read
  6700   005BFE  6E07               	movwf	??_color_read_Green^0,c
  6701   005C00  5007               	movf	??_color_read_Green^0,w,c
  6702   005C02  6E0A               	movwf	color_read_Green@tmp^0,c
  6703   005C04  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6704                           
  6705                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6706   005C06  0E00               	movlw	0
  6707   005C08  EC1C  F02F         	call	_I2C_2_Master_Read
  6708   005C0C  6E07               	movwf	??_color_read_Green^0,c
  6709   005C0E  5007               	movf	??_color_read_Green^0,w,c
  6710   005C10  6E09               	movwf	(??_color_read_Green+2)^0,c
  6711   005C12  6A08               	clrf	(??_color_read_Green+1)^0,c
  6712   005C14  500A               	movf	color_read_Green@tmp^0,w,c
  6713   005C16  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6714   005C18  6E0A               	movwf	color_read_Green@tmp^0,c
  6715   005C1A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6716   005C1C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6717   005C1E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6718                           
  6719                           ;color.c: 87:  I2C_2_Master_Stop();
  6720   005C20  ECA7  F030         	call	_I2C_2_Master_Stop	;wreg free
  6721   005C24                     
  6722                           ;color.c: 88:  return tmp;
  6723   005C24  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6724   005C28  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6725   005C2C  0012               	return		;funcret
  6726   005C2E                     __end_of_color_read_Green:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _color_read_Blue *****************
  6730 ;; Defined at:
  6731 ;;		line 91 in file "color.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  tmp             2    9[COMRAM] unsigned int 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    4[COMRAM] unsigned int 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0, cstack
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;Total ram usage:        7 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; Hardware stack levels required when called: 3
  6752 ;; This function calls:
  6753 ;;		_I2C_2_Master_Read
  6754 ;;		_I2C_2_Master_RepStart
  6755 ;;		_I2C_2_Master_Start
  6756 ;;		_I2C_2_Master_Stop
  6757 ;;		_I2C_2_Master_Write
  6758 ;; This function is called by:
  6759 ;;		_readColours
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text27
  6764   005C2E                     __ptext27:
  6765                           	callstack 0
  6766   005C2E                     _color_read_Blue:
  6767                           	callstack 26
  6768   005C2E                     
  6769                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6770   005C2E  ECAC  F030         	call	_I2C_2_Master_Start	;wreg free
  6771                           
  6772                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6773   005C32  0E52               	movlw	82
  6774   005C34  EC90  F030         	call	_I2C_2_Master_Write
  6775                           
  6776                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6777   005C38  0EBA               	movlw	186
  6778   005C3A  EC90  F030         	call	_I2C_2_Master_Write
  6779                           
  6780                           ;color.c: 97:  I2C_2_Master_RepStart();
  6781   005C3E  ECA2  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6782                           
  6783                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6784   005C42  0E53               	movlw	83
  6785   005C44  EC90  F030         	call	_I2C_2_Master_Write
  6786                           
  6787                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6788   005C48  0E01               	movlw	1
  6789   005C4A  EC1C  F02F         	call	_I2C_2_Master_Read
  6790   005C4E  6E07               	movwf	??_color_read_Blue^0,c
  6791   005C50  5007               	movf	??_color_read_Blue^0,w,c
  6792   005C52  6E0A               	movwf	color_read_Blue@tmp^0,c
  6793   005C54  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6794                           
  6795                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6796   005C56  0E00               	movlw	0
  6797   005C58  EC1C  F02F         	call	_I2C_2_Master_Read
  6798   005C5C  6E07               	movwf	??_color_read_Blue^0,c
  6799   005C5E  5007               	movf	??_color_read_Blue^0,w,c
  6800   005C60  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6801   005C62  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6802   005C64  500A               	movf	color_read_Blue@tmp^0,w,c
  6803   005C66  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6804   005C68  6E0A               	movwf	color_read_Blue@tmp^0,c
  6805   005C6A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6806   005C6C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6807   005C6E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6808                           
  6809                           ;color.c: 101:  I2C_2_Master_Stop();
  6810   005C70  ECA7  F030         	call	_I2C_2_Master_Stop	;wreg free
  6811   005C74                     
  6812                           ;color.c: 102:  return tmp;
  6813   005C74  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6814   005C78  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6815   005C7C  0012               	return		;funcret
  6816   005C7E                     __end_of_color_read_Blue:
  6817                           	callstack 0
  6818                           
  6819 ;; *************** function _I2C_2_Master_RepStart *****************
  6820 ;; Defined at:
  6821 ;;		line 33 in file "i2c.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 2
  6842 ;; This function calls:
  6843 ;;		_I2C_2_Master_Idle
  6844 ;; This function is called by:
  6845 ;;		_color_read_lum
  6846 ;;		_color_read_Red
  6847 ;;		_color_read_Green
  6848 ;;		_color_read_Blue
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text28
  6853   006144                     __ptext28:
  6854                           	callstack 0
  6855   006144                     _I2C_2_Master_RepStart:
  6856                           	callstack 26
  6857   006144                     
  6858                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6859   006144  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
  6860   006148                     
  6861                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6862   006148  010E               	movlb	14	; () banked
  6863   00614A  83DA               	bsf	218,1,b	;volatile
  6864   00614C                     
  6865                           ; BSR set to: 14
  6866   00614C  0012               	return		;funcret
  6867   00614E                     __end_of_I2C_2_Master_RepStart:
  6868                           	callstack 0
  6869                           
  6870 ;; *************** function _I2C_2_Master_Read *****************
  6871 ;; Defined at:
  6872 ;;		line 51 in file "i2c.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  ack             1    wreg     unsigned char 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  ack             1    2[COMRAM] unsigned char 
  6877 ;;  tmp             1    3[COMRAM] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      unsigned char 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;Total ram usage:        3 bytes
  6892 ;; Hardware stack levels used: 1
  6893 ;; Hardware stack levels required when called: 2
  6894 ;; This function calls:
  6895 ;;		_I2C_2_Master_Idle
  6896 ;; This function is called by:
  6897 ;;		_color_read_lum
  6898 ;;		_color_read_Red
  6899 ;;		_color_read_Green
  6900 ;;		_color_read_Blue
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text29
  6905   005E38                     __ptext29:
  6906                           	callstack 0
  6907   005E38                     _I2C_2_Master_Read:
  6908                           	callstack 26
  6909                           
  6910                           ; BSR set to: 14
  6911                           ;incstack = 0
  6912                           ;I2C_2_Master_Read@ack stored from wreg
  6913   005E38  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6914   005E3A                     
  6915                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6916   005E3A  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
  6917   005E3E                     
  6918                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6919   005E3E  010E               	movlb	14	; () banked
  6920   005E40  87DA               	bsf	218,3,b	;volatile
  6921                           
  6922                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6923   005E42  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
  6924   005E46                     
  6925                           ;i2c.c: 57:   tmp = SSP2BUF;
  6926   005E46  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6927                           
  6928                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6929   005E4A  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
  6930   005E4E                     
  6931                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6932   005E4E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6933   005E50  B4D8               	btfsc	status,2,c
  6934   005E52  EF2D  F02F         	goto	u4911
  6935   005E56  EF31  F02F         	goto	u4910
  6936   005E5A                     u4911:
  6937   005E5A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6938   005E5C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6939   005E5E  EF32  F02F         	goto	u4928
  6940   005E62                     u4910:
  6941   005E62  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6942   005E64                     u4928:
  6943   005E64  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6944   005E66  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6945   005E68  010E               	movlb	14	; () banked
  6946   005E6A  51DA               	movf	218,w,b	;volatile
  6947   005E6C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6948   005E6E  0BDF               	andlw	-33
  6949   005E70  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6950   005E72  6FDA               	movwf	218,b	;volatile
  6951   005E74                     
  6952                           ; BSR set to: 14
  6953                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6954   005E74  89DA               	bsf	218,4,b	;volatile
  6955   005E76                     
  6956                           ; BSR set to: 14
  6957                           ;i2c.c: 61:   return tmp;
  6958   005E76  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6959   005E78                     
  6960                           ; BSR set to: 14
  6961   005E78  0012               	return		;funcret
  6962   005E7A                     __end_of_I2C_2_Master_Read:
  6963                           	callstack 0
  6964                           
  6965 ;; *************** function _initUSART4 *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "serial.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;Total ram usage:        0 bytes
  6986 ;; Hardware stack levels used: 1
  6987 ;; Hardware stack levels required when called: 1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_main
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text30
  6996   0060EA                     __ptext30:
  6997                           	callstack 0
  6998   0060EA                     _initUSART4:
  6999                           	callstack 29
  7000   0060EA                     
  7001                           ;serial.c: 5:     RC0PPS = 0x12;
  7002   0060EA  0E12               	movlw	18
  7003   0060EC  010E               	movlb	14	; () banked
  7004   0060EE  6F62               	movwf	98,b	;volatile
  7005                           
  7006                           ;serial.c: 6:     RX4PPS = 0x11;
  7007   0060F0  0E11               	movlw	17
  7008   0060F2  6F15               	movwf	21,b	;volatile
  7009   0060F4                     
  7010                           ; BSR set to: 14
  7011                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7012   0060F4  97E9               	bcf	233,3,b	;volatile
  7013   0060F6                     
  7014                           ; BSR set to: 14
  7015                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7016   0060F6  95E8               	bcf	232,2,b	;volatile
  7017                           
  7018                           ;serial.c: 9:     SP4BRGL = 51;
  7019   0060F8  0E33               	movlw	51
  7020   0060FA  6FE5               	movwf	229,b	;volatile
  7021                           
  7022                           ;serial.c: 10:     SP4BRGH = 0;
  7023   0060FC  0E00               	movlw	0
  7024   0060FE  6FE6               	movwf	230,b	;volatile
  7025   006100                     
  7026                           ; BSR set to: 14
  7027                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7028   006100  89E7               	bsf	231,4,b	;volatile
  7029   006102                     
  7030                           ; BSR set to: 14
  7031                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7032   006102  8BE8               	bsf	232,5,b	;volatile
  7033   006104                     
  7034                           ; BSR set to: 14
  7035                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7036   006104  8FE7               	bsf	231,7,b	;volatile
  7037   006106                     
  7038                           ; BSR set to: 14
  7039   006106  0012               	return		;funcret
  7040   006108                     __end_of_initUSART4:
  7041                           	callstack 0
  7042                           
  7043 ;; *************** function _initDCmotorsPWM *****************
  7044 ;; Defined at:
  7045 ;;		line 7 in file "dc_motor.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;Total ram usage:        2 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_main
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text31
  7074   005282                     __ptext31:
  7075                           	callstack 0
  7076   005282                     _initDCmotorsPWM:
  7077                           	callstack 29
  7078   005282                     
  7079                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7080   005282  0E05               	movlw	5
  7081   005284  010E               	movlb	14	; () banked
  7082   005286  6F74               	movwf	116,b	;volatile
  7083                           
  7084                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7085   005288  0E06               	movlw	6
  7086   00528A  6F76               	movwf	118,b	;volatile
  7087                           
  7088                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7089   00528C  0E07               	movlw	7
  7090   00528E  6F69               	movwf	105,b	;volatile
  7091                           
  7092                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7093   005290  0E08               	movlw	8
  7094   005292  6F88               	movwf	136,b	;volatile
  7095   005294                     
  7096                           ; BSR set to: 14
  7097                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7098   005294  9485               	bcf	133,2,c	;volatile
  7099   005296                     
  7100                           ; BSR set to: 14
  7101                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7102   005296  9885               	bcf	133,4,c	;volatile
  7103   005298                     
  7104                           ; BSR set to: 14
  7105                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7106   005298  9E83               	bcf	131,7,c	;volatile
  7107   00529A                     
  7108                           ; BSR set to: 14
  7109                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7110   00529A  9C87               	bcf	135,6,c	;volatile
  7111                           
  7112                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7113   00529C  50BD               	movf	189,w,c	;volatile
  7114   00529E  0B8F               	andlw	-113
  7115   0052A0  0930               	iorlw	48
  7116   0052A2  6EBD               	movwf	189,c	;volatile
  7117                           
  7118                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7119   0052A4  0EE0               	movlw	-32
  7120   0052A6  16BE               	andwf	190,f,c	;volatile
  7121                           
  7122                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7123   0052A8  50BF               	movf	191,w,c	;volatile
  7124   0052AA  0BF0               	andlw	-16
  7125   0052AC  0901               	iorlw	1
  7126   0052AE  6EBF               	movwf	191,c	;volatile
  7127   0052B0                     
  7128                           ; BSR set to: 14
  7129                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7130   0052B0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7131   0052B4                     
  7132                           ; BSR set to: 14
  7133                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7134   0052B4  8EBD               	bsf	189,7,c	;volatile
  7135                           
  7136                           ;dc_motor.c: 35:     CCPR1H=0;
  7137   0052B6  0E00               	movlw	0
  7138   0052B8  6EAA               	movwf	170,c	;volatile
  7139                           
  7140                           ;dc_motor.c: 36:     CCPR2H=0;
  7141   0052BA  0E00               	movlw	0
  7142   0052BC  6EA6               	movwf	166,c	;volatile
  7143                           
  7144                           ;dc_motor.c: 37:     CCPR3H=0;
  7145   0052BE  0E00               	movlw	0
  7146   0052C0  010F               	movlb	15	; () banked
  7147   0052C2  6F25               	movwf	37,b	;volatile
  7148                           
  7149                           ;dc_motor.c: 38:     CCPR4H=0;
  7150   0052C4  0E00               	movlw	0
  7151   0052C6  6F21               	movwf	33,b	;volatile
  7152                           
  7153                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7154   0052C8  0EFC               	movlw	-4
  7155   0052CA  16AD               	andwf	173,f,c	;volatile
  7156                           
  7157                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7158   0052CC  0EF3               	movlw	-13
  7159   0052CE  16AD               	andwf	173,f,c	;volatile
  7160                           
  7161                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7162   0052D0  0ECF               	movlw	-49
  7163   0052D2  16AD               	andwf	173,f,c	;volatile
  7164                           
  7165                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7166   0052D4  0E3F               	movlw	-193
  7167   0052D6  16AD               	andwf	173,f,c	;volatile
  7168   0052D8                     
  7169                           ; BSR set to: 15
  7170                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7171   0052D8  88AB               	bsf	171,4,c	;volatile
  7172                           
  7173                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7174   0052DA  50AB               	movf	171,w,c	;volatile
  7175   0052DC  0BF0               	andlw	-16
  7176   0052DE  090C               	iorlw	12
  7177   0052E0  6EAB               	movwf	171,c	;volatile
  7178   0052E2                     
  7179                           ; BSR set to: 15
  7180                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7181   0052E2  8EAB               	bsf	171,7,c	;volatile
  7182   0052E4                     
  7183                           ; BSR set to: 15
  7184                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7185   0052E4  88A7               	bsf	167,4,c	;volatile
  7186                           
  7187                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7188   0052E6  50A7               	movf	167,w,c	;volatile
  7189   0052E8  0BF0               	andlw	-16
  7190   0052EA  090C               	iorlw	12
  7191   0052EC  6EA7               	movwf	167,c	;volatile
  7192   0052EE                     
  7193                           ; BSR set to: 15
  7194                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7195   0052EE  8EA7               	bsf	167,7,c	;volatile
  7196   0052F0                     
  7197                           ; BSR set to: 15
  7198                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7199   0052F0  8926               	bsf	38,4,b	;volatile
  7200                           
  7201                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7202   0052F2  5126               	movf	38,w,b	;volatile
  7203   0052F4  0BF0               	andlw	-16
  7204   0052F6  090C               	iorlw	12
  7205   0052F8  6F26               	movwf	38,b	;volatile
  7206   0052FA                     
  7207                           ; BSR set to: 15
  7208                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7209   0052FA  8F26               	bsf	38,7,b	;volatile
  7210   0052FC                     
  7211                           ; BSR set to: 15
  7212                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7213   0052FC  8922               	bsf	34,4,b	;volatile
  7214                           
  7215                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7216   0052FE  5122               	movf	34,w,b	;volatile
  7217   005300  0BF0               	andlw	-16
  7218   005302  090C               	iorlw	12
  7219   005304  6F22               	movwf	34,b	;volatile
  7220   005306                     
  7221                           ; BSR set to: 15
  7222                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7223   005306  8F22               	bsf	34,7,b	;volatile
  7224   005308                     
  7225                           ; BSR set to: 15
  7226   005308  0012               	return		;funcret
  7227   00530A                     __end_of_initDCmotorsPWM:
  7228                           	callstack 0
  7229                           
  7230 ;; *************** function _getTMR0val *****************
  7231 ;; Defined at:
  7232 ;;		line 28 in file "timers.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  moving          2    4[COMRAM] int 
  7237 ;;  temp            2    2[COMRAM] unsigned int 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;Total ram usage:        6 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 1
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_main
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text32
  7262   00562E                     __ptext32:
  7263                           	callstack 0
  7264   00562E                     _getTMR0val:
  7265                           	callstack 29
  7266   00562E                     
  7267                           ;timers.c: 30:     unsigned int temp= TMR0L;
  7268   00562E  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7269   005632  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7270   005634                     
  7271                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  7272   005634  5003               	movf	getTMR0val@temp^0,w,c
  7273   005636  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7274   00563A  6A02               	clrf	(??_getTMR0val+1)^0,c
  7275   00563C  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7276   005640  6A01               	clrf	??_getTMR0val^0,c
  7277   005642  1001               	iorwf	??_getTMR0val^0,w,c
  7278   005644  6E05               	movwf	getTMR0val@moving^0,c
  7279   005646  5002               	movf	(??_getTMR0val+1)^0,w,c
  7280   005648  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7281                           
  7282                           ;timers.c: 33:     if (moving>900){
  7283   00564A  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7284   00564C  EF31  F02B         	goto	u5571
  7285   005650  0E85               	movlw	133
  7286   005652  5C05               	subwf	getTMR0val@moving^0,w,c
  7287   005654  0E03               	movlw	3
  7288   005656  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7289   005658  A0D8               	btfss	status,0,c
  7290   00565A  EF31  F02B         	goto	u5571
  7291   00565E  EF33  F02B         	goto	u5570
  7292   005662                     u5571:
  7293   005662  EF39  F02B         	goto	l5663
  7294   005666                     u5570:
  7295   005666                     
  7296                           ;timers.c: 34:         moving=moving-900;
  7297   005666  0E7C               	movlw	124
  7298   005668  2405               	addwf	getTMR0val@moving^0,w,c
  7299   00566A  6E05               	movwf	getTMR0val@moving^0,c
  7300   00566C  0EFC               	movlw	252
  7301   00566E  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7302   005670  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7303   005672                     l5663:
  7304                           
  7305                           ;timers.c: 37:     Time_forward[move_count]=moving;
  7306   005672  90D8               	bcf	status,0,c
  7307   005674  0101               	movlb	1	; () banked
  7308   005676  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7309   005678  6ED9               	movwf	fsr2l,c
  7310   00567A  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7311   00567C  6EDA               	movwf	fsr2h,c
  7312   00567E  0E3C               	movlw	low _Time_forward
  7313   005680  26D9               	addwf	fsr2l,f,c
  7314   005682  0E02               	movlw	high _Time_forward
  7315   005684  22DA               	addwfc	fsr2h,f,c
  7316   005686  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7317   00568A  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7318   00568E                     
  7319                           ; BSR set to: 1
  7320   00568E  0012               	return		;funcret
  7321   005690                     __end_of_getTMR0val:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function _colour_rel *****************
  7325 ;; Defined at:
  7326 ;;		line 115 in file "color.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  vals            2   74[COMRAM] PTR struct RGB
  7329 ;;		 -> vals(8), 
  7330 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7331 ;;		 -> rel(12), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  B               4   20[BANK0 ] float 
  7334 ;;  G               4   16[BANK0 ] float 
  7335 ;;  R               4   12[BANK0 ] float 
  7336 ;;  L               4    0[BANK0 ] float 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;Total ram usage:       28 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 2
  7353 ;; This function calls:
  7354 ;;		___fladd
  7355 ;;		___fldiv
  7356 ;;		___xxtofl
  7357 ;; This function is called by:
  7358 ;;		_main
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text33
  7363   002EB0                     __ptext33:
  7364                           	callstack 0
  7365   002EB0                     _colour_rel:
  7366                           	callstack 28
  7367   002EB0                     
  7368                           ;color.c: 116:     float R = vals->R;
  7369   002EB0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7370   002EB4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7371   002EB8  CFDE F001          	movff	postinc2,___xxtofl@val
  7372   002EBC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7373   002EC0  0E00               	movlw	0
  7374   002EC2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7375   002EC4  0EFF               	movlw	-1
  7376   002EC6  6E03               	movwf	(___xxtofl@val+2)^0,c
  7377   002EC8  6E04               	movwf	(___xxtofl@val+3)^0,c
  7378   002ECA  0E01               	movlw	1
  7379   002ECC  ECE0  F020         	call	___xxtofl
  7380   002ED0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7381   002ED4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7382   002ED8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7383   002EDC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7384                           
  7385                           ;color.c: 117:     float G = vals->G;
  7386   002EE0  EE20 F002          	lfsr	2,2
  7387   002EE4  504B               	movf	colour_rel@vals^0,w,c
  7388   002EE6  26D9               	addwf	fsr2l,f,c
  7389   002EE8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7390   002EEA  22DA               	addwfc	fsr2h,f,c
  7391   002EEC  CFDE F001          	movff	postinc2,___xxtofl@val
  7392   002EF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7393   002EF4  0E00               	movlw	0
  7394   002EF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7395   002EF8  0EFF               	movlw	-1
  7396   002EFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7397   002EFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7398   002EFE  0E01               	movlw	1
  7399   002F00  ECE0  F020         	call	___xxtofl
  7400   002F04  C001  F070         	movff	?___xxtofl,colour_rel@G
  7401   002F08  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7402   002F0C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7403   002F10  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7404                           
  7405                           ;color.c: 118:     float B = vals->B;
  7406   002F14  EE20 F004          	lfsr	2,4
  7407   002F18  504B               	movf	colour_rel@vals^0,w,c
  7408   002F1A  26D9               	addwf	fsr2l,f,c
  7409   002F1C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7410   002F1E  22DA               	addwfc	fsr2h,f,c
  7411   002F20  CFDE F001          	movff	postinc2,___xxtofl@val
  7412   002F24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7413   002F28  0E00               	movlw	0
  7414   002F2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7415   002F2C  0EFF               	movlw	-1
  7416   002F2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7417   002F30  6E04               	movwf	(___xxtofl@val+3)^0,c
  7418   002F32  0E01               	movlw	1
  7419   002F34  ECE0  F020         	call	___xxtofl
  7420   002F38  C001  F074         	movff	?___xxtofl,colour_rel@B
  7421   002F3C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7422   002F40  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7423   002F44  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7424                           
  7425                           ;color.c: 119:     float L = vals->L;
  7426   002F48  EE20 F006          	lfsr	2,6
  7427   002F4C  504B               	movf	colour_rel@vals^0,w,c
  7428   002F4E  26D9               	addwf	fsr2l,f,c
  7429   002F50  504C               	movf	(colour_rel@vals+1)^0,w,c
  7430   002F52  22DA               	addwfc	fsr2h,f,c
  7431   002F54  CFDE F001          	movff	postinc2,___xxtofl@val
  7432   002F58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7433   002F5C  0E00               	movlw	0
  7434   002F5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7435   002F60  0EFF               	movlw	-1
  7436   002F62  6E03               	movwf	(___xxtofl@val+2)^0,c
  7437   002F64  6E04               	movwf	(___xxtofl@val+3)^0,c
  7438   002F66  0E01               	movlw	1
  7439   002F68  ECE0  F020         	call	___xxtofl
  7440   002F6C  C001  F060         	movff	?___xxtofl,colour_rel@L
  7441   002F70  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7442   002F74  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7443   002F78  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7444   002F7C                     
  7445                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7446   002F7C  C070  F005         	movff	colour_rel@G,___fladd@a
  7447   002F80  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7448   002F84  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7449   002F88  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7450   002F8C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7451   002F90  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7452   002F94  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7453   002F98  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7454   002F9C  EC16  F011         	call	___fladd	;wreg free
  7455   002FA0  C001  F064         	movff	?___fladd,_colour_rel$3264
  7456   002FA4  C002  F065         	movff	?___fladd+1,_colour_rel$3264+1
  7457   002FA8  C003  F066         	movff	?___fladd+2,_colour_rel$3264+2
  7458   002FAC  C004  F067         	movff	?___fladd+3,_colour_rel$3264+3
  7459   002FB0                     
  7460                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7461   002FB0  C074  F005         	movff	colour_rel@B,___fladd@a
  7462   002FB4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7463   002FB8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7464   002FBC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7465   002FC0  C064  F001         	movff	_colour_rel$3264,___fladd@b
  7466   002FC4  C065  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7467   002FC8  C066  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7468   002FCC  C067  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7469   002FD0  EC16  F011         	call	___fladd	;wreg free
  7470   002FD4  C001  F068         	movff	?___fladd,_colour_rel$3265
  7471   002FD8  C002  F069         	movff	?___fladd+1,_colour_rel$3265+1
  7472   002FDC  C003  F06A         	movff	?___fladd+2,_colour_rel$3265+2
  7473   002FE0  C004  F06B         	movff	?___fladd+3,_colour_rel$3265+3
  7474                           
  7475                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7476   002FE4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7477   002FE8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7478   002FEC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7479   002FF0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7480   002FF4  C060  F005         	movff	colour_rel@L,___fladd@a
  7481   002FF8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7482   002FFC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7483   003000  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7484   003004  C068  F001         	movff	_colour_rel$3265,___fladd@b
  7485   003008  C069  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7486   00300C  C06A  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7487   003010  C06B  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7488   003014  EC16  F011         	call	___fladd	;wreg free
  7489   003018  C001  F036         	movff	?___fladd,___fldiv@a
  7490   00301C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7491   003020  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7492   003024  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7493   003028  EC8B  F015         	call	___fldiv	;wreg free
  7494   00302C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7495   003030  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7496   003034  C032  FFDE         	movff	?___fldiv,postinc2
  7497   003038  C033  FFDE         	movff	?___fldiv+1,postinc2
  7498   00303C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7499   003040  C035  FFDE         	movff	?___fldiv+3,postinc2
  7500   003044                     
  7501                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7502   003044  C070  F005         	movff	colour_rel@G,___fladd@a
  7503   003048  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7504   00304C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7505   003050  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7506   003054  C06C  F001         	movff	colour_rel@R,___fladd@b
  7507   003058  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7508   00305C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7509   003060  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7510   003064  EC16  F011         	call	___fladd	;wreg free
  7511   003068  C001  F064         	movff	?___fladd,_colour_rel$3264
  7512   00306C  C002  F065         	movff	?___fladd+1,_colour_rel$3264+1
  7513   003070  C003  F066         	movff	?___fladd+2,_colour_rel$3264+2
  7514   003074  C004  F067         	movff	?___fladd+3,_colour_rel$3264+3
  7515   003078                     
  7516                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7517   003078  C074  F005         	movff	colour_rel@B,___fladd@a
  7518   00307C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7519   003080  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7520   003084  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7521   003088  C064  F001         	movff	_colour_rel$3264,___fladd@b
  7522   00308C  C065  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7523   003090  C066  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7524   003094  C067  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7525   003098  EC16  F011         	call	___fladd	;wreg free
  7526   00309C  C001  F068         	movff	?___fladd,_colour_rel$3265
  7527   0030A0  C002  F069         	movff	?___fladd+1,_colour_rel$3265+1
  7528   0030A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3265+2
  7529   0030A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3265+3
  7530                           
  7531                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7532   0030AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  7533   0030B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7534   0030B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7535   0030B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7536   0030BC  C060  F005         	movff	colour_rel@L,___fladd@a
  7537   0030C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7538   0030C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7539   0030C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7540   0030CC  C068  F001         	movff	_colour_rel$3265,___fladd@b
  7541   0030D0  C069  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7542   0030D4  C06A  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7543   0030D8  C06B  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7544   0030DC  EC16  F011         	call	___fladd	;wreg free
  7545   0030E0  C001  F036         	movff	?___fladd,___fldiv@a
  7546   0030E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7547   0030E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7548   0030EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7549   0030F0  EC8B  F015         	call	___fldiv	;wreg free
  7550   0030F4  EE20 F008          	lfsr	2,8
  7551   0030F8  504D               	movf	colour_rel@rel^0,w,c
  7552   0030FA  26D9               	addwf	fsr2l,f,c
  7553   0030FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  7554   0030FE  22DA               	addwfc	fsr2h,f,c
  7555   003100  C032  FFDE         	movff	?___fldiv,postinc2
  7556   003104  C033  FFDE         	movff	?___fldiv+1,postinc2
  7557   003108  C034  FFDE         	movff	?___fldiv+2,postinc2
  7558   00310C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7559   003110                     
  7560                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7561   003110  C070  F005         	movff	colour_rel@G,___fladd@a
  7562   003114  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7563   003118  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7564   00311C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7565   003120  C06C  F001         	movff	colour_rel@R,___fladd@b
  7566   003124  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7567   003128  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7568   00312C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7569   003130  EC16  F011         	call	___fladd	;wreg free
  7570   003134  C001  F064         	movff	?___fladd,_colour_rel$3264
  7571   003138  C002  F065         	movff	?___fladd+1,_colour_rel$3264+1
  7572   00313C  C003  F066         	movff	?___fladd+2,_colour_rel$3264+2
  7573   003140  C004  F067         	movff	?___fladd+3,_colour_rel$3264+3
  7574   003144                     
  7575                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7576   003144  C074  F005         	movff	colour_rel@B,___fladd@a
  7577   003148  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7578   00314C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7579   003150  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7580   003154  C064  F001         	movff	_colour_rel$3264,___fladd@b
  7581   003158  C065  F002         	movff	_colour_rel$3264+1,___fladd@b+1
  7582   00315C  C066  F003         	movff	_colour_rel$3264+2,___fladd@b+2
  7583   003160  C067  F004         	movff	_colour_rel$3264+3,___fladd@b+3
  7584   003164  EC16  F011         	call	___fladd	;wreg free
  7585   003168  C001  F068         	movff	?___fladd,_colour_rel$3265
  7586   00316C  C002  F069         	movff	?___fladd+1,_colour_rel$3265+1
  7587   003170  C003  F06A         	movff	?___fladd+2,_colour_rel$3265+2
  7588   003174  C004  F06B         	movff	?___fladd+3,_colour_rel$3265+3
  7589                           
  7590                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7591   003178  C070  F032         	movff	colour_rel@G,___fldiv@b
  7592   00317C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7593   003180  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7594   003184  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7595   003188  C060  F005         	movff	colour_rel@L,___fladd@a
  7596   00318C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7597   003190  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7598   003194  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7599   003198  C068  F001         	movff	_colour_rel$3265,___fladd@b
  7600   00319C  C069  F002         	movff	_colour_rel$3265+1,___fladd@b+1
  7601   0031A0  C06A  F003         	movff	_colour_rel$3265+2,___fladd@b+2
  7602   0031A4  C06B  F004         	movff	_colour_rel$3265+3,___fladd@b+3
  7603   0031A8  EC16  F011         	call	___fladd	;wreg free
  7604   0031AC  C001  F036         	movff	?___fladd,___fldiv@a
  7605   0031B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7606   0031B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7607   0031B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7608   0031BC  EC8B  F015         	call	___fldiv	;wreg free
  7609   0031C0  EE20 F004          	lfsr	2,4
  7610   0031C4  504D               	movf	colour_rel@rel^0,w,c
  7611   0031C6  26D9               	addwf	fsr2l,f,c
  7612   0031C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7613   0031CA  22DA               	addwfc	fsr2h,f,c
  7614   0031CC  C032  FFDE         	movff	?___fldiv,postinc2
  7615   0031D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7616   0031D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7617   0031D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7618   0031DC  0012               	return		;funcret
  7619   0031DE                     __end_of_colour_rel:
  7620                           	callstack 0
  7621                           
  7622 ;; *************** function _colour_move *****************
  7623 ;; Defined at:
  7624 ;;		line 8 in file "colour_move.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  recognized_c    2   44[COMRAM] int 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;Total ram usage:        2 bytes
  7643 ;; Hardware stack levels used: 1
  7644 ;; Hardware stack levels required when called: 7
  7645 ;; This function calls:
  7646 ;;		_BlueMove
  7647 ;;		_GreenMove
  7648 ;;		_LightBlueMove
  7649 ;;		_OrangeMove
  7650 ;;		_PinkMove
  7651 ;;		_RedMove
  7652 ;;		_RetryMove
  7653 ;;		_YellowMove
  7654 ;;		_go_Home
  7655 ;; This function is called by:
  7656 ;;		_main
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text34
  7661   003D36                     __ptext34:
  7662                           	callstack 0
  7663   003D36                     _colour_move:
  7664                           	callstack 23
  7665   003D36                     
  7666                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7667   003D36  042D               	decf	colour_move@recognized_colour^0,w,c
  7668   003D38  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7669   003D3A  A4D8               	btfss	status,2,c
  7670   003D3C  EFA2  F01E         	goto	u5581
  7671   003D40  EFA4  F01E         	goto	u5580
  7672   003D44                     u5581:
  7673   003D44  EFC2  F01E         	goto	l5695
  7674   003D48                     u5580:
  7675   003D48                     
  7676                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7677   003D48  0E61               	movlw	low _motorL
  7678   003D4A  6E20               	movwf	RedMove@mL^0,c
  7679   003D4C  0E01               	movlw	high _motorL
  7680   003D4E  6E21               	movwf	(RedMove@mL+1)^0,c
  7681   003D50  0E58               	movlw	low _motorR
  7682   003D52  6E22               	movwf	RedMove@mR^0,c
  7683   003D54  0E01               	movlw	high _motorR
  7684   003D56  6E23               	movwf	(RedMove@mR+1)^0,c
  7685   003D58  EC5D  F02F         	call	_RedMove	;wreg free
  7686   003D5C                     
  7687                           ;colour_move.c: 14:         TMR0H=0;
  7688   003D5C  0E00               	movlw	0
  7689   003D5E  6ED4               	movwf	212,c	;volatile
  7690   003D60                     
  7691                           ;colour_move.c: 15:         TMR0L=0;
  7692   003D60  0E00               	movlw	0
  7693   003D62  6ED3               	movwf	211,c	;volatile
  7694   003D64                     
  7695                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7696   003D64  0E1A               	movlw	low _WayBack
  7697   003D66  0101               	movlb	1	; () banked
  7698   003D68  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7699   003D6A  6ED9               	movwf	fsr2l,c
  7700   003D6C  0E01               	movlw	high _WayBack
  7701   003D6E  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7702   003D70  6EDA               	movwf	fsr2h,c
  7703   003D72  0E01               	movlw	1
  7704   003D74  6EDF               	movwf	indf2,c
  7705   003D76                     l5693:
  7706                           
  7707                           ; BSR set to: 1
  7708                           ;colour_move.c: 17:         lost_count=0;
  7709   003D76  0E00               	movlw	0
  7710   003D78  0100               	movlb	0	; () banked
  7711   003D7A  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7712   003D7C  0E00               	movlw	0
  7713   003D7E  6FEB               	movwf	_lost_count& (0+255),b
  7714                           
  7715                           ;colour_move.c: 18:     }
  7716   003D80  EFD6  F01F         	goto	l747
  7717   003D84                     l5695:
  7718   003D84  0E02               	movlw	2
  7719   003D86  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7720   003D88  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7721   003D8A  A4D8               	btfss	status,2,c
  7722   003D8C  EFCA  F01E         	goto	u5591
  7723   003D90  EFCC  F01E         	goto	u5590
  7724   003D94                     u5591:
  7725   003D94  EFE5  F01E         	goto	l5707
  7726   003D98                     u5590:
  7727   003D98                     
  7728                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7729   003D98  0E61               	movlw	low _motorL
  7730   003D9A  6E20               	movwf	OrangeMove@mL^0,c
  7731   003D9C  0E01               	movlw	high _motorL
  7732   003D9E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7733   003DA0  0E58               	movlw	low _motorR
  7734   003DA2  6E22               	movwf	OrangeMove@mR^0,c
  7735   003DA4  0E01               	movlw	high _motorR
  7736   003DA6  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7737   003DA8  ECAA  F02C         	call	_OrangeMove	;wreg free
  7738   003DAC                     
  7739                           ;colour_move.c: 21:         TMR0H=0;
  7740   003DAC  0E00               	movlw	0
  7741   003DAE  6ED4               	movwf	212,c	;volatile
  7742   003DB0                     
  7743                           ;colour_move.c: 22:         TMR0L=0;
  7744   003DB0  0E00               	movlw	0
  7745   003DB2  6ED3               	movwf	211,c	;volatile
  7746   003DB4                     
  7747                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7748   003DB4  0E1A               	movlw	low _WayBack
  7749   003DB6  0101               	movlb	1	; () banked
  7750   003DB8  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7751   003DBA  6ED9               	movwf	fsr2l,c
  7752   003DBC  0E01               	movlw	high _WayBack
  7753   003DBE  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7754   003DC0  6EDA               	movwf	fsr2h,c
  7755   003DC2  0E02               	movlw	2
  7756   003DC4  6EDF               	movwf	indf2,c
  7757   003DC6  EFBB  F01E         	goto	l5693
  7758   003DCA                     l5707:
  7759   003DCA  0E03               	movlw	3
  7760   003DCC  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7761   003DCE  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7762   003DD0  A4D8               	btfss	status,2,c
  7763   003DD2  EFED  F01E         	goto	u5601
  7764   003DD6  EFEF  F01E         	goto	u5600
  7765   003DDA                     u5601:
  7766   003DDA  EF08  F01F         	goto	l5719
  7767   003DDE                     u5600:
  7768   003DDE                     
  7769                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7770   003DDE  0E61               	movlw	low _motorL
  7771   003DE0  6E20               	movwf	YellowMove@mL^0,c
  7772   003DE2  0E01               	movlw	high _motorL
  7773   003DE4  6E21               	movwf	(YellowMove@mL+1)^0,c
  7774   003DE6  0E58               	movlw	low _motorR
  7775   003DE8  6E22               	movwf	YellowMove@mR^0,c
  7776   003DEA  0E01               	movlw	high _motorR
  7777   003DEC  6E23               	movwf	(YellowMove@mR+1)^0,c
  7778   003DEE  ECFC  F02C         	call	_YellowMove	;wreg free
  7779   003DF2                     
  7780                           ;colour_move.c: 28:         TMR0H=0;
  7781   003DF2  0E00               	movlw	0
  7782   003DF4  6ED4               	movwf	212,c	;volatile
  7783   003DF6                     
  7784                           ;colour_move.c: 29:         TMR0L=0;
  7785   003DF6  0E00               	movlw	0
  7786   003DF8  6ED3               	movwf	211,c	;volatile
  7787   003DFA                     
  7788                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7789   003DFA  0E1A               	movlw	low _WayBack
  7790   003DFC  0101               	movlb	1	; () banked
  7791   003DFE  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7792   003E00  6ED9               	movwf	fsr2l,c
  7793   003E02  0E01               	movlw	high _WayBack
  7794   003E04  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7795   003E06  6EDA               	movwf	fsr2h,c
  7796   003E08  0E03               	movlw	3
  7797   003E0A  6EDF               	movwf	indf2,c
  7798   003E0C  EFBB  F01E         	goto	l5693
  7799   003E10                     l5719:
  7800   003E10  0E04               	movlw	4
  7801   003E12  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7802   003E14  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7803   003E16  A4D8               	btfss	status,2,c
  7804   003E18  EF10  F01F         	goto	u5611
  7805   003E1C  EF12  F01F         	goto	u5610
  7806   003E20                     u5611:
  7807   003E20  EF2B  F01F         	goto	l5731
  7808   003E24                     u5610:
  7809   003E24                     
  7810                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7811   003E24  0E61               	movlw	low _motorL
  7812   003E26  6E20               	movwf	BlueMove@mL^0,c
  7813   003E28  0E01               	movlw	high _motorL
  7814   003E2A  6E21               	movwf	(BlueMove@mL+1)^0,c
  7815   003E2C  0E58               	movlw	low _motorR
  7816   003E2E  6E22               	movwf	BlueMove@mR^0,c
  7817   003E30  0E01               	movlw	high _motorR
  7818   003E32  6E23               	movwf	(BlueMove@mR+1)^0,c
  7819   003E34  EC01  F02A         	call	_BlueMove	;wreg free
  7820   003E38                     
  7821                           ;colour_move.c: 35:         TMR0H=0;
  7822   003E38  0E00               	movlw	0
  7823   003E3A  6ED4               	movwf	212,c	;volatile
  7824   003E3C                     
  7825                           ;colour_move.c: 36:         TMR0L=0;
  7826   003E3C  0E00               	movlw	0
  7827   003E3E  6ED3               	movwf	211,c	;volatile
  7828   003E40                     
  7829                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7830   003E40  0E1A               	movlw	low _WayBack
  7831   003E42  0101               	movlb	1	; () banked
  7832   003E44  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7833   003E46  6ED9               	movwf	fsr2l,c
  7834   003E48  0E01               	movlw	high _WayBack
  7835   003E4A  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7836   003E4C  6EDA               	movwf	fsr2h,c
  7837   003E4E  0E04               	movlw	4
  7838   003E50  6EDF               	movwf	indf2,c
  7839   003E52  EFBB  F01E         	goto	l5693
  7840   003E56                     l5731:
  7841   003E56  0E05               	movlw	5
  7842   003E58  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7843   003E5A  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7844   003E5C  A4D8               	btfss	status,2,c
  7845   003E5E  EF33  F01F         	goto	u5621
  7846   003E62  EF35  F01F         	goto	u5620
  7847   003E66                     u5621:
  7848   003E66  EF4E  F01F         	goto	l5743
  7849   003E6A                     u5620:
  7850   003E6A                     
  7851                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7852   003E6A  0E61               	movlw	low _motorL
  7853   003E6C  6E20               	movwf	GreenMove@mL^0,c
  7854   003E6E  0E01               	movlw	high _motorL
  7855   003E70  6E21               	movwf	(GreenMove@mL+1)^0,c
  7856   003E72  0E58               	movlw	low _motorR
  7857   003E74  6E22               	movwf	GreenMove@mR^0,c
  7858   003E76  0E01               	movlw	high _motorR
  7859   003E78  6E23               	movwf	(GreenMove@mR+1)^0,c
  7860   003E7A  EC7C  F02F         	call	_GreenMove	;wreg free
  7861   003E7E                     
  7862                           ;colour_move.c: 42:         TMR0H=0;
  7863   003E7E  0E00               	movlw	0
  7864   003E80  6ED4               	movwf	212,c	;volatile
  7865   003E82                     
  7866                           ;colour_move.c: 43:         TMR0L=0;
  7867   003E82  0E00               	movlw	0
  7868   003E84  6ED3               	movwf	211,c	;volatile
  7869   003E86                     
  7870                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7871   003E86  0E1A               	movlw	low _WayBack
  7872   003E88  0101               	movlb	1	; () banked
  7873   003E8A  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7874   003E8C  6ED9               	movwf	fsr2l,c
  7875   003E8E  0E01               	movlw	high _WayBack
  7876   003E90  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7877   003E92  6EDA               	movwf	fsr2h,c
  7878   003E94  0E05               	movlw	5
  7879   003E96  6EDF               	movwf	indf2,c
  7880   003E98  EFBB  F01E         	goto	l5693
  7881   003E9C                     l5743:
  7882   003E9C  0E06               	movlw	6
  7883   003E9E  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7884   003EA0  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7885   003EA2  A4D8               	btfss	status,2,c
  7886   003EA4  EF56  F01F         	goto	u5631
  7887   003EA8  EF58  F01F         	goto	u5630
  7888   003EAC                     u5631:
  7889   003EAC  EF71  F01F         	goto	l5755
  7890   003EB0                     u5630:
  7891   003EB0                     
  7892                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7893   003EB0  0E61               	movlw	low _motorL
  7894   003EB2  6E20               	movwf	LightBlueMove@mL^0,c
  7895   003EB4  0E01               	movlw	high _motorL
  7896   003EB6  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7897   003EB8  0E58               	movlw	low _motorR
  7898   003EBA  6E22               	movwf	LightBlueMove@mR^0,c
  7899   003EBC  0E01               	movlw	high _motorR
  7900   003EBE  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7901   003EC0  ECD3  F02C         	call	_LightBlueMove	;wreg free
  7902   003EC4                     
  7903                           ;colour_move.c: 49:         TMR0H=0;
  7904   003EC4  0E00               	movlw	0
  7905   003EC6  6ED4               	movwf	212,c	;volatile
  7906   003EC8                     
  7907                           ;colour_move.c: 50:         TMR0L=0;
  7908   003EC8  0E00               	movlw	0
  7909   003ECA  6ED3               	movwf	211,c	;volatile
  7910   003ECC                     
  7911                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7912   003ECC  0E1A               	movlw	low _WayBack
  7913   003ECE  0101               	movlb	1	; () banked
  7914   003ED0  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7915   003ED2  6ED9               	movwf	fsr2l,c
  7916   003ED4  0E01               	movlw	high _WayBack
  7917   003ED6  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7918   003ED8  6EDA               	movwf	fsr2h,c
  7919   003EDA  0E06               	movlw	6
  7920   003EDC  6EDF               	movwf	indf2,c
  7921   003EDE  EFBB  F01E         	goto	l5693
  7922   003EE2                     l5755:
  7923   003EE2  0E07               	movlw	7
  7924   003EE4  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7925   003EE6  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7926   003EE8  A4D8               	btfss	status,2,c
  7927   003EEA  EF79  F01F         	goto	u5641
  7928   003EEE  EF7B  F01F         	goto	u5640
  7929   003EF2                     u5641:
  7930   003EF2  EF94  F01F         	goto	l5767
  7931   003EF6                     u5640:
  7932   003EF6                     
  7933                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7934   003EF6  0E61               	movlw	low _motorL
  7935   003EF8  6E20               	movwf	PinkMove@mL^0,c
  7936   003EFA  0E01               	movlw	high _motorL
  7937   003EFC  6E21               	movwf	(PinkMove@mL+1)^0,c
  7938   003EFE  0E58               	movlw	low _motorR
  7939   003F00  6E22               	movwf	PinkMove@mR^0,c
  7940   003F02  0E01               	movlw	high _motorR
  7941   003F04  6E23               	movwf	(PinkMove@mR+1)^0,c
  7942   003F06  EC25  F02D         	call	_PinkMove	;wreg free
  7943   003F0A                     
  7944                           ;colour_move.c: 56:         TMR0H=0;
  7945   003F0A  0E00               	movlw	0
  7946   003F0C  6ED4               	movwf	212,c	;volatile
  7947   003F0E                     
  7948                           ;colour_move.c: 57:         TMR0L=0;
  7949   003F0E  0E00               	movlw	0
  7950   003F10  6ED3               	movwf	211,c	;volatile
  7951   003F12                     
  7952                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7953   003F12  0E1A               	movlw	low _WayBack
  7954   003F14  0101               	movlb	1	; () banked
  7955   003F16  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7956   003F18  6ED9               	movwf	fsr2l,c
  7957   003F1A  0E01               	movlw	high _WayBack
  7958   003F1C  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7959   003F1E  6EDA               	movwf	fsr2h,c
  7960   003F20  0E07               	movlw	7
  7961   003F22  6EDF               	movwf	indf2,c
  7962   003F24  EFBB  F01E         	goto	l5693
  7963   003F28                     l5767:
  7964   003F28  0E0A               	movlw	10
  7965   003F2A  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7966   003F2C  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7967   003F2E  A4D8               	btfss	status,2,c
  7968   003F30  EF9C  F01F         	goto	u5651
  7969   003F34  EF9E  F01F         	goto	u5650
  7970   003F38                     u5651:
  7971   003F38  EFCB  F01F         	goto	l5781
  7972   003F3C                     u5650:
  7973   003F3C                     
  7974                           ;colour_move.c: 62:         lost_count++;
  7975   003F3C  0100               	movlb	0	; () banked
  7976   003F3E  4BEB               	infsnz	_lost_count& (0+255),f,b
  7977   003F40  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7978   003F42                     
  7979                           ; BSR set to: 0
  7980                           ;colour_move.c: 63:         if (lost_count>=3){
  7981   003F42  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7982   003F44  EFAD  F01F         	goto	u5661
  7983   003F48  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7984   003F4A  E109               	bnz	u5660
  7985   003F4C  0E03               	movlw	3
  7986   003F4E  5DEB               	subwf	_lost_count& (0+255),w,b
  7987   003F50  A0D8               	btfss	status,0,c
  7988   003F52  EFAD  F01F         	goto	u5661
  7989   003F56  EFAF  F01F         	goto	u5660
  7990   003F5A                     u5661:
  7991   003F5A  EFBB  F01F         	goto	l5775
  7992   003F5E                     u5660:
  7993   003F5E                     l5773:
  7994                           
  7995                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  7996   003F5E  0E1A               	movlw	low _WayBack
  7997   003F60  6E24               	movwf	go_Home@WayBack^0,c
  7998   003F62  0E01               	movlw	high _WayBack
  7999   003F64  6E25               	movwf	(go_Home@WayBack+1)^0,c
  8000   003F66  0E3C               	movlw	low _Time_forward
  8001   003F68  6E26               	movwf	go_Home@Time_forward^0,c
  8002   003F6A  0E02               	movlw	high _Time_forward
  8003   003F6C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  8004   003F6E  ECEC  F01B         	call	_go_Home	;wreg free
  8005                           
  8006                           ;colour_move.c: 65:         }
  8007   003F72  EFD6  F01F         	goto	l747
  8008   003F76                     l5775:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  8012   003F76  0E61               	movlw	low _motorL
  8013   003F78  6E20               	movwf	RetryMove@mL^0,c
  8014   003F7A  0E01               	movlw	high _motorL
  8015   003F7C  6E21               	movwf	(RetryMove@mL+1)^0,c
  8016   003F7E  0E58               	movlw	low _motorR
  8017   003F80  6E22               	movwf	RetryMove@mR^0,c
  8018   003F82  0E01               	movlw	high _motorR
  8019   003F84  6E23               	movwf	(RetryMove@mR+1)^0,c
  8020   003F86  ECAF  F02A         	call	_RetryMove	;wreg free
  8021   003F8A                     
  8022                           ;colour_move.c: 68:             TMR0H=0;
  8023   003F8A  0E00               	movlw	0
  8024   003F8C  6ED4               	movwf	212,c	;volatile
  8025   003F8E                     
  8026                           ;colour_move.c: 69:             TMR0L=0;
  8027   003F8E  0E00               	movlw	0
  8028   003F90  6ED3               	movwf	211,c	;volatile
  8029   003F92  EFD6  F01F         	goto	l747
  8030   003F96                     l5781:
  8031   003F96  502D               	movf	colour_move@recognized_colour^0,w,c
  8032   003F98  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8033   003F9A  A4D8               	btfss	status,2,c
  8034   003F9C  EFD2  F01F         	goto	u5671
  8035   003FA0  EFD4  F01F         	goto	u5670
  8036   003FA4                     u5671:
  8037   003FA4  EFD6  F01F         	goto	l739
  8038   003FA8                     u5670:
  8039   003FA8  EFAF  F01F         	goto	l5773
  8040   003FAC                     l739:
  8041   003FAC                     l747:
  8042   003FAC  0012               	return		;funcret
  8043   003FAE                     __end_of_colour_move:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _go_Home *****************
  8047 ;; Defined at:
  8048 ;;		line 4 in file "Memory.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8051 ;;		 -> WayBack(50), 
  8052 ;;  Time_forward    2   37[COMRAM] PTR int 
  8053 ;;		 -> Time_forward(100), 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;  i               2   42[COMRAM] int 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8067 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;Total ram usage:        9 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 6
  8072 ;; This function calls:
  8073 ;;		_BlueMove
  8074 ;;		_GreenMove
  8075 ;;		_LightBlueMove
  8076 ;;		_OrangeMove
  8077 ;;		_RedMove
  8078 ;;		_ReversePink
  8079 ;;		_ReverseYellow
  8080 ;;		_homeReverse
  8081 ;;		_stop
  8082 ;;		_timed_forward
  8083 ;; This function is called by:
  8084 ;;		_main
  8085 ;;		_colour_move
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text35
  8090   0037D8                     __ptext35:
  8091                           	callstack 0
  8092   0037D8                     _go_Home:
  8093                           	callstack 24
  8094   0037D8                     
  8095                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8096   0037D8  0E61               	movlw	low _motorL
  8097   0037DA  6E20               	movwf	BlueMove@mL^0,c
  8098   0037DC  0E01               	movlw	high _motorL
  8099   0037DE  6E21               	movwf	(BlueMove@mL+1)^0,c
  8100   0037E0  0E58               	movlw	low _motorR
  8101   0037E2  6E22               	movwf	BlueMove@mR^0,c
  8102   0037E4  0E01               	movlw	high _motorR
  8103   0037E6  6E23               	movwf	(BlueMove@mR+1)^0,c
  8104   0037E8  EC01  F02A         	call	_BlueMove	;wreg free
  8105   0037EC                     
  8106                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8107   0037EC  9ED5               	bcf	213,7,c	;volatile
  8108   0037EE                     
  8109                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8110   0037EE  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8111   0037F2  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8112   0037F6                     l5235:
  8113   0037F6  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8114   0037F8  EF02  F01C         	goto	u5000
  8115   0037FC  EF00  F01C         	goto	u5001
  8116   003800                     u5001:
  8117   003800  EF04  F01C         	goto	l5239
  8118   003804                     u5000:
  8119   003804  EF5B  F01D         	goto	l606
  8120   003808                     l5239:
  8121                           
  8122                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8123   003808  0E61               	movlw	low _motorL
  8124   00380A  6E14               	movwf	timed_forward@mL^0,c
  8125   00380C  0E01               	movlw	high _motorL
  8126   00380E  6E15               	movwf	(timed_forward@mL+1)^0,c
  8127   003810  0E58               	movlw	low _motorR
  8128   003812  6E16               	movwf	timed_forward@mR^0,c
  8129   003814  0E01               	movlw	high _motorR
  8130   003816  6E17               	movwf	(timed_forward@mR+1)^0,c
  8131   003818  90D8               	bcf	status,0,c
  8132   00381A  342B               	rlcf	go_Home@i^0,w,c
  8133   00381C  6ED9               	movwf	fsr2l,c
  8134   00381E  342C               	rlcf	(go_Home@i+1)^0,w,c
  8135   003820  6EDA               	movwf	fsr2h,c
  8136   003822  5026               	movf	go_Home@Time_forward^0,w,c
  8137   003824  26D9               	addwf	fsr2l,f,c
  8138   003826  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8139   003828  22DA               	addwfc	fsr2h,f,c
  8140   00382A  CFDE F018          	movff	postinc2,timed_forward@time
  8141   00382E  CFDD F019          	movff	postdec2,timed_forward@time+1
  8142   003832  EC5B  F027         	call	_timed_forward	;wreg free
  8143   003836                     
  8144                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8145   003836  502B               	movf	go_Home@i^0,w,c
  8146   003838  2424               	addwf	go_Home@WayBack^0,w,c
  8147   00383A  6E28               	movwf	??_go_Home^0,c
  8148   00383C  502C               	movf	(go_Home@i+1)^0,w,c
  8149   00383E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8150   003840  6E29               	movwf	(??_go_Home+1)^0,c
  8151   003842  0EFF               	movlw	255
  8152   003844  2428               	addwf	??_go_Home^0,w,c
  8153   003846  6ED9               	movwf	fsr2l,c
  8154   003848  0EFF               	movlw	255
  8155   00384A  2029               	addwfc	(??_go_Home+1)^0,w,c
  8156   00384C  6EDA               	movwf	fsr2h,c
  8157   00384E  04DE               	decf	postinc2,w,c
  8158   003850  A4D8               	btfss	status,2,c
  8159   003852  EF2D  F01C         	goto	u5011
  8160   003856  EF2F  F01C         	goto	u5010
  8161   00385A                     u5011:
  8162   00385A  EF45  F01C         	goto	l5245
  8163   00385E                     u5010:
  8164   00385E                     
  8165                           ;Memory.c: 12:             homeReverse(&motorL, &motorR);
  8166   00385E  0E61               	movlw	low _motorL
  8167   003860  6E1A               	movwf	homeReverse@mL^0,c
  8168   003862  0E01               	movlw	high _motorL
  8169   003864  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8170   003866  0E58               	movlw	low _motorR
  8171   003868  6E1C               	movwf	homeReverse@mR^0,c
  8172   00386A  0E01               	movlw	high _motorR
  8173   00386C  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8174   00386E  EC3F  F02E         	call	_homeReverse	;wreg free
  8175                           
  8176                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8177   003872  0E61               	movlw	low _motorL
  8178   003874  6E20               	movwf	GreenMove@mL^0,c
  8179   003876  0E01               	movlw	high _motorL
  8180   003878  6E21               	movwf	(GreenMove@mL+1)^0,c
  8181   00387A  0E58               	movlw	low _motorR
  8182   00387C  6E22               	movwf	GreenMove@mR^0,c
  8183   00387E  0E01               	movlw	high _motorR
  8184   003880  6E23               	movwf	(GreenMove@mR+1)^0,c
  8185   003882  EC7C  F02F         	call	_GreenMove	;wreg free
  8186                           
  8187                           ;Memory.c: 14:         }
  8188   003886  EF47  F01D         	goto	l594
  8189   00388A                     l5245:
  8190   00388A  502B               	movf	go_Home@i^0,w,c
  8191   00388C  2424               	addwf	go_Home@WayBack^0,w,c
  8192   00388E  6E28               	movwf	??_go_Home^0,c
  8193   003890  502C               	movf	(go_Home@i+1)^0,w,c
  8194   003892  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8195   003894  6E29               	movwf	(??_go_Home+1)^0,c
  8196   003896  0EFF               	movlw	255
  8197   003898  2428               	addwf	??_go_Home^0,w,c
  8198   00389A  6ED9               	movwf	fsr2l,c
  8199   00389C  0EFF               	movlw	255
  8200   00389E  2029               	addwfc	(??_go_Home+1)^0,w,c
  8201   0038A0  6EDA               	movwf	fsr2h,c
  8202   0038A2  0E02               	movlw	2
  8203   0038A4  18DE               	xorwf	postinc2,w,c
  8204   0038A6  A4D8               	btfss	status,2,c
  8205   0038A8  EF58  F01C         	goto	u5021
  8206   0038AC  EF5A  F01C         	goto	u5020
  8207   0038B0                     u5021:
  8208   0038B0  EF70  F01C         	goto	l5249
  8209   0038B4                     u5020:
  8210   0038B4                     
  8211                           ;Memory.c: 16:             homeReverse(&motorL, &motorR);
  8212   0038B4  0E61               	movlw	low _motorL
  8213   0038B6  6E1A               	movwf	homeReverse@mL^0,c
  8214   0038B8  0E01               	movlw	high _motorL
  8215   0038BA  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8216   0038BC  0E58               	movlw	low _motorR
  8217   0038BE  6E1C               	movwf	homeReverse@mR^0,c
  8218   0038C0  0E01               	movlw	high _motorR
  8219   0038C2  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8220   0038C4  EC3F  F02E         	call	_homeReverse	;wreg free
  8221                           
  8222                           ;Memory.c: 17:             LightBlueMove(&motorL, &motorR);
  8223   0038C8  0E61               	movlw	low _motorL
  8224   0038CA  6E20               	movwf	LightBlueMove@mL^0,c
  8225   0038CC  0E01               	movlw	high _motorL
  8226   0038CE  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  8227   0038D0  0E58               	movlw	low _motorR
  8228   0038D2  6E22               	movwf	LightBlueMove@mR^0,c
  8229   0038D4  0E01               	movlw	high _motorR
  8230   0038D6  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  8231   0038D8  ECD3  F02C         	call	_LightBlueMove	;wreg free
  8232                           
  8233                           ;Memory.c: 18:         }
  8234   0038DC  EF47  F01D         	goto	l594
  8235   0038E0                     l5249:
  8236   0038E0  502B               	movf	go_Home@i^0,w,c
  8237   0038E2  2424               	addwf	go_Home@WayBack^0,w,c
  8238   0038E4  6E28               	movwf	??_go_Home^0,c
  8239   0038E6  502C               	movf	(go_Home@i+1)^0,w,c
  8240   0038E8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8241   0038EA  6E29               	movwf	(??_go_Home+1)^0,c
  8242   0038EC  0EFF               	movlw	255
  8243   0038EE  2428               	addwf	??_go_Home^0,w,c
  8244   0038F0  6ED9               	movwf	fsr2l,c
  8245   0038F2  0EFF               	movlw	255
  8246   0038F4  2029               	addwfc	(??_go_Home+1)^0,w,c
  8247   0038F6  6EDA               	movwf	fsr2h,c
  8248   0038F8  0E03               	movlw	3
  8249   0038FA  18DE               	xorwf	postinc2,w,c
  8250   0038FC  A4D8               	btfss	status,2,c
  8251   0038FE  EF83  F01C         	goto	u5031
  8252   003902  EF85  F01C         	goto	u5030
  8253   003906                     u5031:
  8254   003906  EF9B  F01C         	goto	l5253
  8255   00390A                     u5030:
  8256   00390A                     
  8257                           ;Memory.c: 20:             homeReverse(&motorL, &motorR);
  8258   00390A  0E61               	movlw	low _motorL
  8259   00390C  6E1A               	movwf	homeReverse@mL^0,c
  8260   00390E  0E01               	movlw	high _motorL
  8261   003910  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8262   003912  0E58               	movlw	low _motorR
  8263   003914  6E1C               	movwf	homeReverse@mR^0,c
  8264   003916  0E01               	movlw	high _motorR
  8265   003918  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8266   00391A  EC3F  F02E         	call	_homeReverse	;wreg free
  8267                           
  8268                           ;Memory.c: 21:             ReverseYellow(&motorL, &motorR);
  8269   00391E  0E61               	movlw	low _motorL
  8270   003920  6E20               	movwf	ReverseYellow@mL^0,c
  8271   003922  0E01               	movlw	high _motorL
  8272   003924  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8273   003926  0E58               	movlw	low _motorR
  8274   003928  6E22               	movwf	ReverseYellow@mR^0,c
  8275   00392A  0E01               	movlw	high _motorR
  8276   00392C  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8277   00392E  ECA5  F026         	call	_ReverseYellow	;wreg free
  8278                           
  8279                           ;Memory.c: 22:         }
  8280   003932  EF47  F01D         	goto	l594
  8281   003936                     l5253:
  8282   003936  502B               	movf	go_Home@i^0,w,c
  8283   003938  2424               	addwf	go_Home@WayBack^0,w,c
  8284   00393A  6E28               	movwf	??_go_Home^0,c
  8285   00393C  502C               	movf	(go_Home@i+1)^0,w,c
  8286   00393E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8287   003940  6E29               	movwf	(??_go_Home+1)^0,c
  8288   003942  0EFF               	movlw	255
  8289   003944  2428               	addwf	??_go_Home^0,w,c
  8290   003946  6ED9               	movwf	fsr2l,c
  8291   003948  0EFF               	movlw	255
  8292   00394A  2029               	addwfc	(??_go_Home+1)^0,w,c
  8293   00394C  6EDA               	movwf	fsr2h,c
  8294   00394E  0E04               	movlw	4
  8295   003950  18DE               	xorwf	postinc2,w,c
  8296   003952  A4D8               	btfss	status,2,c
  8297   003954  EFAE  F01C         	goto	u5041
  8298   003958  EFB0  F01C         	goto	u5040
  8299   00395C                     u5041:
  8300   00395C  EFC6  F01C         	goto	l5257
  8301   003960                     u5040:
  8302   003960                     
  8303                           ;Memory.c: 24:             homeReverse(&motorL, &motorR);
  8304   003960  0E61               	movlw	low _motorL
  8305   003962  6E1A               	movwf	homeReverse@mL^0,c
  8306   003964  0E01               	movlw	high _motorL
  8307   003966  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8308   003968  0E58               	movlw	low _motorR
  8309   00396A  6E1C               	movwf	homeReverse@mR^0,c
  8310   00396C  0E01               	movlw	high _motorR
  8311   00396E  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8312   003970  EC3F  F02E         	call	_homeReverse	;wreg free
  8313                           
  8314                           ;Memory.c: 25:             BlueMove(&motorL, &motorR);
  8315   003974  0E61               	movlw	low _motorL
  8316   003976  6E20               	movwf	BlueMove@mL^0,c
  8317   003978  0E01               	movlw	high _motorL
  8318   00397A  6E21               	movwf	(BlueMove@mL+1)^0,c
  8319   00397C  0E58               	movlw	low _motorR
  8320   00397E  6E22               	movwf	BlueMove@mR^0,c
  8321   003980  0E01               	movlw	high _motorR
  8322   003982  6E23               	movwf	(BlueMove@mR+1)^0,c
  8323   003984  EC01  F02A         	call	_BlueMove	;wreg free
  8324                           
  8325                           ;Memory.c: 26:         }
  8326   003988  EF47  F01D         	goto	l594
  8327   00398C                     l5257:
  8328   00398C  502B               	movf	go_Home@i^0,w,c
  8329   00398E  2424               	addwf	go_Home@WayBack^0,w,c
  8330   003990  6E28               	movwf	??_go_Home^0,c
  8331   003992  502C               	movf	(go_Home@i+1)^0,w,c
  8332   003994  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8333   003996  6E29               	movwf	(??_go_Home+1)^0,c
  8334   003998  0EFF               	movlw	255
  8335   00399A  2428               	addwf	??_go_Home^0,w,c
  8336   00399C  6ED9               	movwf	fsr2l,c
  8337   00399E  0EFF               	movlw	255
  8338   0039A0  2029               	addwfc	(??_go_Home+1)^0,w,c
  8339   0039A2  6EDA               	movwf	fsr2h,c
  8340   0039A4  0E05               	movlw	5
  8341   0039A6  18DE               	xorwf	postinc2,w,c
  8342   0039A8  A4D8               	btfss	status,2,c
  8343   0039AA  EFD9  F01C         	goto	u5051
  8344   0039AE  EFDB  F01C         	goto	u5050
  8345   0039B2                     u5051:
  8346   0039B2  EFF1  F01C         	goto	l5261
  8347   0039B6                     u5050:
  8348   0039B6                     
  8349                           ;Memory.c: 28:             homeReverse(&motorL, &motorR);
  8350   0039B6  0E61               	movlw	low _motorL
  8351   0039B8  6E1A               	movwf	homeReverse@mL^0,c
  8352   0039BA  0E01               	movlw	high _motorL
  8353   0039BC  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8354   0039BE  0E58               	movlw	low _motorR
  8355   0039C0  6E1C               	movwf	homeReverse@mR^0,c
  8356   0039C2  0E01               	movlw	high _motorR
  8357   0039C4  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8358   0039C6  EC3F  F02E         	call	_homeReverse	;wreg free
  8359                           
  8360                           ;Memory.c: 29:             RedMove(&motorL, &motorR);
  8361   0039CA  0E61               	movlw	low _motorL
  8362   0039CC  6E20               	movwf	RedMove@mL^0,c
  8363   0039CE  0E01               	movlw	high _motorL
  8364   0039D0  6E21               	movwf	(RedMove@mL+1)^0,c
  8365   0039D2  0E58               	movlw	low _motorR
  8366   0039D4  6E22               	movwf	RedMove@mR^0,c
  8367   0039D6  0E01               	movlw	high _motorR
  8368   0039D8  6E23               	movwf	(RedMove@mR+1)^0,c
  8369   0039DA  EC5D  F02F         	call	_RedMove	;wreg free
  8370                           
  8371                           ;Memory.c: 30:         }
  8372   0039DE  EF47  F01D         	goto	l594
  8373   0039E2                     l5261:
  8374   0039E2  502B               	movf	go_Home@i^0,w,c
  8375   0039E4  2424               	addwf	go_Home@WayBack^0,w,c
  8376   0039E6  6E28               	movwf	??_go_Home^0,c
  8377   0039E8  502C               	movf	(go_Home@i+1)^0,w,c
  8378   0039EA  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8379   0039EC  6E29               	movwf	(??_go_Home+1)^0,c
  8380   0039EE  0EFF               	movlw	255
  8381   0039F0  2428               	addwf	??_go_Home^0,w,c
  8382   0039F2  6ED9               	movwf	fsr2l,c
  8383   0039F4  0EFF               	movlw	255
  8384   0039F6  2029               	addwfc	(??_go_Home+1)^0,w,c
  8385   0039F8  6EDA               	movwf	fsr2h,c
  8386   0039FA  0E06               	movlw	6
  8387   0039FC  18DE               	xorwf	postinc2,w,c
  8388   0039FE  A4D8               	btfss	status,2,c
  8389   003A00  EF04  F01D         	goto	u5061
  8390   003A04  EF06  F01D         	goto	u5060
  8391   003A08                     u5061:
  8392   003A08  EF1C  F01D         	goto	l5265
  8393   003A0C                     u5060:
  8394   003A0C                     
  8395                           ;Memory.c: 32:             homeReverse(&motorL, &motorR);
  8396   003A0C  0E61               	movlw	low _motorL
  8397   003A0E  6E1A               	movwf	homeReverse@mL^0,c
  8398   003A10  0E01               	movlw	high _motorL
  8399   003A12  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8400   003A14  0E58               	movlw	low _motorR
  8401   003A16  6E1C               	movwf	homeReverse@mR^0,c
  8402   003A18  0E01               	movlw	high _motorR
  8403   003A1A  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8404   003A1C  EC3F  F02E         	call	_homeReverse	;wreg free
  8405                           
  8406                           ;Memory.c: 33:             OrangeMove(&motorL, &motorR);
  8407   003A20  0E61               	movlw	low _motorL
  8408   003A22  6E20               	movwf	OrangeMove@mL^0,c
  8409   003A24  0E01               	movlw	high _motorL
  8410   003A26  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8411   003A28  0E58               	movlw	low _motorR
  8412   003A2A  6E22               	movwf	OrangeMove@mR^0,c
  8413   003A2C  0E01               	movlw	high _motorR
  8414   003A2E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8415   003A30  ECAA  F02C         	call	_OrangeMove	;wreg free
  8416                           
  8417                           ;Memory.c: 34:         }
  8418   003A34  EF47  F01D         	goto	l594
  8419   003A38                     l5265:
  8420   003A38  502B               	movf	go_Home@i^0,w,c
  8421   003A3A  2424               	addwf	go_Home@WayBack^0,w,c
  8422   003A3C  6E28               	movwf	??_go_Home^0,c
  8423   003A3E  502C               	movf	(go_Home@i+1)^0,w,c
  8424   003A40  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8425   003A42  6E29               	movwf	(??_go_Home+1)^0,c
  8426   003A44  0EFF               	movlw	255
  8427   003A46  2428               	addwf	??_go_Home^0,w,c
  8428   003A48  6ED9               	movwf	fsr2l,c
  8429   003A4A  0EFF               	movlw	255
  8430   003A4C  2029               	addwfc	(??_go_Home+1)^0,w,c
  8431   003A4E  6EDA               	movwf	fsr2h,c
  8432   003A50  0E07               	movlw	7
  8433   003A52  18DE               	xorwf	postinc2,w,c
  8434   003A54  A4D8               	btfss	status,2,c
  8435   003A56  EF2F  F01D         	goto	u5071
  8436   003A5A  EF31  F01D         	goto	u5070
  8437   003A5E                     u5071:
  8438   003A5E  EF47  F01D         	goto	l600
  8439   003A62                     u5070:
  8440   003A62                     
  8441                           ;Memory.c: 36:             homeReverse(&motorL, &motorR);
  8442   003A62  0E61               	movlw	low _motorL
  8443   003A64  6E1A               	movwf	homeReverse@mL^0,c
  8444   003A66  0E01               	movlw	high _motorL
  8445   003A68  6E1B               	movwf	(homeReverse@mL+1)^0,c
  8446   003A6A  0E58               	movlw	low _motorR
  8447   003A6C  6E1C               	movwf	homeReverse@mR^0,c
  8448   003A6E  0E01               	movlw	high _motorR
  8449   003A70  6E1D               	movwf	(homeReverse@mR+1)^0,c
  8450   003A72  EC3F  F02E         	call	_homeReverse	;wreg free
  8451                           
  8452                           ;Memory.c: 37:             ReversePink(&motorL, &motorR);
  8453   003A76  0E61               	movlw	low _motorL
  8454   003A78  6E20               	movwf	ReversePink@mL^0,c
  8455   003A7A  0E01               	movlw	high _motorL
  8456   003A7C  6E21               	movwf	(ReversePink@mL+1)^0,c
  8457   003A7E  0E58               	movlw	low _motorR
  8458   003A80  6E22               	movwf	ReversePink@mR^0,c
  8459   003A82  0E01               	movlw	high _motorR
  8460   003A84  6E23               	movwf	(ReversePink@mR+1)^0,c
  8461   003A86  EC00  F027         	call	_ReversePink	;wreg free
  8462   003A8A  EF47  F01D         	goto	l594
  8463   003A8E                     l600:
  8464   003A8E                     l594:
  8465                           
  8466                           ;Memory.c: 39:         stop(&motorL, &motorR);
  8467   003A8E  0E61               	movlw	low _motorL
  8468   003A90  6E14               	movwf	stop@mL^0,c
  8469   003A92  0E01               	movlw	high _motorL
  8470   003A94  6E15               	movwf	(stop@mL+1)^0,c
  8471   003A96  0E58               	movlw	low _motorR
  8472   003A98  6E16               	movwf	stop@mR^0,c
  8473   003A9A  0E01               	movlw	high _motorR
  8474   003A9C  6E17               	movwf	(stop@mR+1)^0,c
  8475   003A9E  EC85  F029         	call	_stop	;wreg free
  8476   003AA2                     
  8477                           ;Memory.c: 40:         run_flag=0;
  8478   003AA2  0E00               	movlw	0
  8479   003AA4  0101               	movlb	1	; () banked
  8480   003AA6  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8481   003AA8  0E00               	movlw	0
  8482   003AAA  6FD8               	movwf	_run_flag& (0+255),b
  8483   003AAC                     
  8484                           ; BSR set to: 1
  8485                           ;Memory.c: 43:   }
  8486   003AAC  062B               	decf	go_Home@i^0,f,c
  8487   003AAE  A0D8               	btfss	status,0,c
  8488   003AB0  062C               	decf	(go_Home@i+1)^0,f,c
  8489   003AB2  EFFB  F01B         	goto	l5235
  8490   003AB6                     l606:
  8491   003AB6  0012               	return		;funcret
  8492   003AB8                     __end_of_go_Home:
  8493                           	callstack 0
  8494                           
  8495 ;; *************** function _timed_forward *****************
  8496 ;; Defined at:
  8497 ;;		line 166 in file "dc_motor.c"
  8498 ;; Parameters:    Size  Location     Type
  8499 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8500 ;;		 -> motorL(9), 
  8501 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8502 ;;		 -> motorR(9), 
  8503 ;;  time            2   23[COMRAM] int 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8515 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8518 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;Total ram usage:        8 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 3
  8522 ;; This function calls:
  8523 ;;		_delayed_ms
  8524 ;;		_setMotorPWM
  8525 ;; This function is called by:
  8526 ;;		_go_Home
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text36
  8531   004EB6                     __ptext36:
  8532                           	callstack 0
  8533   004EB6                     _timed_forward:
  8534                           	callstack 26
  8535   004EB6                     
  8536                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8537   004EB6  EE20 F001          	lfsr	2,1
  8538   004EBA  5014               	movf	timed_forward@mL^0,w,c
  8539   004EBC  26D9               	addwf	fsr2l,f,c
  8540   004EBE  5015               	movf	(timed_forward@mL+1)^0,w,c
  8541   004EC0  22DA               	addwfc	fsr2h,f,c
  8542   004EC2  0E01               	movlw	1
  8543   004EC4  6EDF               	movwf	indf2,c
  8544                           
  8545                           ;dc_motor.c: 170:     mR->direction =1;
  8546   004EC6  EE20 F001          	lfsr	2,1
  8547   004ECA  5016               	movf	timed_forward@mR^0,w,c
  8548   004ECC  26D9               	addwf	fsr2l,f,c
  8549   004ECE  5017               	movf	(timed_forward@mR+1)^0,w,c
  8550   004ED0  22DA               	addwfc	fsr2h,f,c
  8551   004ED2  0E01               	movlw	1
  8552   004ED4  6EDF               	movwf	indf2,c
  8553                           
  8554                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8555   004ED6  EF91  F027         	goto	l5073
  8556   004EDA                     l5065:
  8557                           
  8558                           ;dc_motor.c: 173:         mL->power+=10;
  8559   004EDA  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8560   004EDE  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8561   004EE2  0E0A               	movlw	10
  8562   004EE4  26DF               	addwf	indf2,f,c
  8563                           
  8564                           ;dc_motor.c: 174:         mR->power+=10;
  8565   004EE6  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8566   004EEA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8567   004EEE  0E0A               	movlw	10
  8568   004EF0  26DF               	addwf	indf2,f,c
  8569   004EF2                     
  8570                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8571   004EF2  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8572   004EF6  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8573   004EFA  EC54  F023         	call	_setMotorPWM	;wreg free
  8574   004EFE                     
  8575                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8576   004EFE  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8577   004F02  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8578   004F06  EC54  F023         	call	_setMotorPWM	;wreg free
  8579   004F0A                     
  8580                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8581   004F0A  0E02               	movlw	2
  8582   004F0C  6E1B               	movwf	(??_timed_forward+1)^0,c
  8583   004F0E  0EA0               	movlw	160
  8584   004F10  6E1A               	movwf	??_timed_forward^0,c
  8585   004F12  0E92               	movlw	146
  8586   004F14                     u5927:
  8587   004F14  2EE8               	decfsz	wreg,f,c
  8588   004F16  D7FE               	bra	u5927
  8589   004F18  2E1A               	decfsz	??_timed_forward^0,f,c
  8590   004F1A  D7FC               	bra	u5927
  8591   004F1C  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8592   004F1E  D7FA               	bra	u5927
  8593   004F20  D000               	nop2	
  8594   004F22                     l5073:
  8595   004F22  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8596   004F26  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8597   004F2A  0E32               	movlw	50
  8598   004F2C  60DF               	cpfslt	indf2,c
  8599   004F2E  EF9B  F027         	goto	u4931
  8600   004F32  EF9D  F027         	goto	u4930
  8601   004F36                     u4931:
  8602   004F36  EFA9  F027         	goto	l5077
  8603   004F3A                     u4930:
  8604   004F3A  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8605   004F3E  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8606   004F42  0E31               	movlw	49
  8607   004F44  64DF               	cpfsgt	indf2,c
  8608   004F46  EFA7  F027         	goto	u4941
  8609   004F4A  EFA9  F027         	goto	u4940
  8610   004F4E                     u4941:
  8611   004F4E  EF6D  F027         	goto	l5065
  8612   004F52                     u4940:
  8613   004F52                     l5077:
  8614                           
  8615                           ;dc_motor.c: 182:     delayed_ms(time);
  8616   004F52  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8617   004F56  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8618   004F5A  ECB7  F02F         	call	_delayed_ms	;wreg free
  8619   004F5E  0012               	return		;funcret
  8620   004F60                     __end_of_timed_forward:
  8621                           	callstack 0
  8622                           
  8623 ;; *************** function _delayed_ms *****************
  8624 ;; Defined at:
  8625 ;;		line 43 in file "timers.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  time            2    0[COMRAM] int 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  i               2    3[COMRAM] unsigned int 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      void 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8642 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8643 ;;Total ram usage:        5 bytes
  8644 ;; Hardware stack levels used: 1
  8645 ;; Hardware stack levels required when called: 1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_timed_forward
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text37
  8654   005F6E                     __ptext37:
  8655                           	callstack 0
  8656   005F6E                     _delayed_ms:
  8657                           	callstack 27
  8658   005F6E                     
  8659                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8660   005F6E  0E00               	movlw	0
  8661   005F70  6E05               	movwf	(delayed_ms@i+1)^0,c
  8662   005F72  0E00               	movlw	0
  8663   005F74  6E04               	movwf	delayed_ms@i^0,c
  8664   005F76  EFC7  F02F         	goto	l636
  8665   005F7A                     l4721:
  8666                           
  8667                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8668   005F7A  0E0B               	movlw	11
  8669   005F7C  6E03               	movwf	??_delayed_ms^0,c
  8670   005F7E  0E62               	movlw	98
  8671   005F80                     u5937:
  8672   005F80  2EE8               	decfsz	wreg,f,c
  8673   005F82  D7FE               	bra	u5937
  8674   005F84  2E03               	decfsz	??_delayed_ms^0,f,c
  8675   005F86  D7FC               	bra	u5937
  8676   005F88  D000               	nop2	
  8677   005F8A                     
  8678                           ;timers.c: 46:     }
  8679   005F8A  4A04               	infsnz	delayed_ms@i^0,f,c
  8680   005F8C  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8681   005F8E                     l636:
  8682   005F8E  5001               	movf	delayed_ms@time^0,w,c
  8683   005F90  5C04               	subwf	delayed_ms@i^0,w,c
  8684   005F92  5002               	movf	(delayed_ms@time+1)^0,w,c
  8685   005F94  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8686   005F96  A0D8               	btfss	status,0,c
  8687   005F98  EFD0  F02F         	goto	u4481
  8688   005F9C  EFD2  F02F         	goto	u4480
  8689   005FA0                     u4481:
  8690   005FA0  EFBD  F02F         	goto	l4721
  8691   005FA4                     u4480:
  8692   005FA4  0012               	return		;funcret
  8693   005FA6                     __end_of_delayed_ms:
  8694                           	callstack 0
  8695                           
  8696 ;; *************** function _homeReverse *****************
  8697 ;; Defined at:
  8698 ;;		line 232 in file "dc_motor.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8701 ;;		 -> motorL(9), 
  8702 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8703 ;;		 -> motorR(9), 
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;Total ram usage:        6 bytes
  8720 ;; Hardware stack levels used: 1
  8721 ;; Hardware stack levels required when called: 4
  8722 ;; This function calls:
  8723 ;;		_fullSpeedBack
  8724 ;;		_stop
  8725 ;; This function is called by:
  8726 ;;		_go_Home
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           	psect	text38
  8731   005C7E                     __ptext38:
  8732                           	callstack 0
  8733   005C7E                     _homeReverse:
  8734                           	callstack 25
  8735   005C7E                     
  8736                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
  8737   005C7E  C01A  F014         	movff	homeReverse@mL,fullSpeedBack@mL
  8738   005C82  C01B  F015         	movff	homeReverse@mL+1,fullSpeedBack@mL+1
  8739   005C86  C01C  F016         	movff	homeReverse@mR,fullSpeedBack@mR
  8740   005C8A  C01D  F017         	movff	homeReverse@mR+1,fullSpeedBack@mR+1
  8741   005C8E  ECA3  F028         	call	_fullSpeedBack	;wreg free
  8742   005C92                     
  8743                           ;dc_motor.c: 234:     _delay((unsigned long)((10)*(64000000/4000.0)));
  8744   005C92  0ED0               	movlw	208
  8745   005C94  6E1E               	movwf	??_homeReverse^0,c
  8746   005C96  0ECA               	movlw	202
  8747   005C98                     u5947:
  8748   005C98  2EE8               	decfsz	wreg,f,c
  8749   005C9A  D7FE               	bra	u5947
  8750   005C9C  2E1E               	decfsz	??_homeReverse^0,f,c
  8751   005C9E  D7FC               	bra	u5947
  8752   005CA0                     
  8753                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
  8754   005CA0  0E61               	movlw	low _motorL
  8755   005CA2  6E14               	movwf	stop@mL^0,c
  8756   005CA4  0E01               	movlw	high _motorL
  8757   005CA6  6E15               	movwf	(stop@mL+1)^0,c
  8758   005CA8  0E58               	movlw	low _motorR
  8759   005CAA  6E16               	movwf	stop@mR^0,c
  8760   005CAC  0E01               	movlw	high _motorR
  8761   005CAE  6E17               	movwf	(stop@mR+1)^0,c
  8762   005CB0  EC85  F029         	call	_stop	;wreg free
  8763                           
  8764                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8765   005CB4  0E05               	movlw	5
  8766   005CB6  6E1F               	movwf	(??_homeReverse+1)^0,c
  8767   005CB8  0E0F               	movlw	15
  8768   005CBA  6E1E               	movwf	??_homeReverse^0,c
  8769   005CBC  0EF1               	movlw	241
  8770   005CBE                     u5957:
  8771   005CBE  2EE8               	decfsz	wreg,f,c
  8772   005CC0  D7FE               	bra	u5957
  8773   005CC2  2E1E               	decfsz	??_homeReverse^0,f,c
  8774   005CC4  D7FC               	bra	u5957
  8775   005CC6  2E1F               	decfsz	(??_homeReverse+1)^0,f,c
  8776   005CC8  D7FA               	bra	u5957
  8777   005CCA  F000               	nop	
  8778   005CCC  0012               	return		;funcret
  8779   005CCE                     __end_of_homeReverse:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function _ReverseYellow *****************
  8783 ;; Defined at:
  8784 ;;		line 342 in file "dc_motor.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8787 ;;		 -> motorL(9), 
  8788 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8789 ;;		 -> motorR(9), 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;Total ram usage:        4 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 5
  8808 ;; This function calls:
  8809 ;;		_ForwardOneBlock
  8810 ;;		_reverseDetect
  8811 ;;		_turnRight45
  8812 ;; This function is called by:
  8813 ;;		_go_Home
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text39
  8818   004D4A                     __ptext39:
  8819                           	callstack 0
  8820   004D4A                     _ReverseYellow:
  8821                           	callstack 24
  8822   004D4A                     
  8823                           ;dc_motor.c: 343:     reverseDetect(&motorL, &motorR);
  8824   004D4A  0E61               	movlw	low _motorL
  8825   004D4C  6E1A               	movwf	reverseDetect@mL^0,c
  8826   004D4E  0E01               	movlw	high _motorL
  8827   004D50  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8828   004D52  0E58               	movlw	low _motorR
  8829   004D54  6E1C               	movwf	reverseDetect@mR^0,c
  8830   004D56  0E01               	movlw	high _motorR
  8831   004D58  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8832   004D5A  ECA4  F02B         	call	_reverseDetect	;wreg free
  8833                           
  8834                           ;dc_motor.c: 344:     turnRight45(&motorL, &motorR);
  8835   004D5E  0E61               	movlw	low _motorL
  8836   004D60  6E1A               	movwf	turnRight45@mL^0,c
  8837   004D62  0E01               	movlw	high _motorL
  8838   004D64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8839   004D66  0E58               	movlw	low _motorR
  8840   004D68  6E1C               	movwf	turnRight45@mR^0,c
  8841   004D6A  0E01               	movlw	high _motorR
  8842   004D6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8843   004D6E  EC67  F02E         	call	_turnRight45	;wreg free
  8844                           
  8845                           ;dc_motor.c: 345:     turnRight45(&motorL, &motorR);
  8846   004D72  0E61               	movlw	low _motorL
  8847   004D74  6E1A               	movwf	turnRight45@mL^0,c
  8848   004D76  0E01               	movlw	high _motorL
  8849   004D78  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8850   004D7A  0E58               	movlw	low _motorR
  8851   004D7C  6E1C               	movwf	turnRight45@mR^0,c
  8852   004D7E  0E01               	movlw	high _motorR
  8853   004D80  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8854   004D82  EC67  F02E         	call	_turnRight45	;wreg free
  8855                           
  8856                           ;dc_motor.c: 346:     ForwardOneBlock(&motorL, &motorR);
  8857   004D86  0E61               	movlw	low _motorL
  8858   004D88  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8859   004D8A  0E01               	movlw	high _motorL
  8860   004D8C  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8861   004D8E  0E58               	movlw	low _motorR
  8862   004D90  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8863   004D92  0E01               	movlw	high _motorR
  8864   004D94  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8865   004D96  ECFE  F02B         	call	_ForwardOneBlock	;wreg free
  8866                           
  8867                           ;dc_motor.c: 347:     reverseDetect(&motorL, &motorR);
  8868   004D9A  0E61               	movlw	low _motorL
  8869   004D9C  6E1A               	movwf	reverseDetect@mL^0,c
  8870   004D9E  0E01               	movlw	high _motorL
  8871   004DA0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8872   004DA2  0E58               	movlw	low _motorR
  8873   004DA4  6E1C               	movwf	reverseDetect@mR^0,c
  8874   004DA6  0E01               	movlw	high _motorR
  8875   004DA8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8876   004DAA  ECA4  F02B         	call	_reverseDetect	;wreg free
  8877                           
  8878                           ;dc_motor.c: 348:     turnRight45(&motorL, &motorR);
  8879   004DAE  0E61               	movlw	low _motorL
  8880   004DB0  6E1A               	movwf	turnRight45@mL^0,c
  8881   004DB2  0E01               	movlw	high _motorL
  8882   004DB4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8883   004DB6  0E58               	movlw	low _motorR
  8884   004DB8  6E1C               	movwf	turnRight45@mR^0,c
  8885   004DBA  0E01               	movlw	high _motorR
  8886   004DBC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8887   004DBE  EC67  F02E         	call	_turnRight45	;wreg free
  8888                           
  8889                           ;dc_motor.c: 349:     turnRight45(&motorL, &motorR);
  8890   004DC2  0E61               	movlw	low _motorL
  8891   004DC4  6E1A               	movwf	turnRight45@mL^0,c
  8892   004DC6  0E01               	movlw	high _motorL
  8893   004DC8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8894   004DCA  0E58               	movlw	low _motorR
  8895   004DCC  6E1C               	movwf	turnRight45@mR^0,c
  8896   004DCE  0E01               	movlw	high _motorR
  8897   004DD0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8898   004DD2  EC67  F02E         	call	_turnRight45	;wreg free
  8899                           
  8900                           ;dc_motor.c: 350:     turnRight45(&motorL, &motorR);
  8901   004DD6  0E61               	movlw	low _motorL
  8902   004DD8  6E1A               	movwf	turnRight45@mL^0,c
  8903   004DDA  0E01               	movlw	high _motorL
  8904   004DDC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8905   004DDE  0E58               	movlw	low _motorR
  8906   004DE0  6E1C               	movwf	turnRight45@mR^0,c
  8907   004DE2  0E01               	movlw	high _motorR
  8908   004DE4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8909   004DE6  EC67  F02E         	call	_turnRight45	;wreg free
  8910                           
  8911                           ;dc_motor.c: 351:     turnRight45(&motorL, &motorR);
  8912   004DEA  0E61               	movlw	low _motorL
  8913   004DEC  6E1A               	movwf	turnRight45@mL^0,c
  8914   004DEE  0E01               	movlw	high _motorL
  8915   004DF0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8916   004DF2  0E58               	movlw	low _motorR
  8917   004DF4  6E1C               	movwf	turnRight45@mR^0,c
  8918   004DF6  0E01               	movlw	high _motorR
  8919   004DF8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8920   004DFA  EC67  F02E         	call	_turnRight45	;wreg free
  8921   004DFE  0012               	return		;funcret
  8922   004E00                     __end_of_ReverseYellow:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _ReversePink *****************
  8926 ;; Defined at:
  8927 ;;		line 353 in file "dc_motor.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8930 ;;		 -> motorL(9), 
  8931 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8932 ;;		 -> motorR(9), 
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;Total ram usage:        4 bytes
  8949 ;; Hardware stack levels used: 1
  8950 ;; Hardware stack levels required when called: 5
  8951 ;; This function calls:
  8952 ;;		_ForwardOneBlock
  8953 ;;		_reverseDetect
  8954 ;;		_turnLeft45
  8955 ;; This function is called by:
  8956 ;;		_go_Home
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text40
  8961   004E00                     __ptext40:
  8962                           	callstack 0
  8963   004E00                     _ReversePink:
  8964                           	callstack 24
  8965   004E00                     
  8966                           ;dc_motor.c: 354:     reverseDetect(&motorL, &motorR);
  8967   004E00  0E61               	movlw	low _motorL
  8968   004E02  6E1A               	movwf	reverseDetect@mL^0,c
  8969   004E04  0E01               	movlw	high _motorL
  8970   004E06  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8971   004E08  0E58               	movlw	low _motorR
  8972   004E0A  6E1C               	movwf	reverseDetect@mR^0,c
  8973   004E0C  0E01               	movlw	high _motorR
  8974   004E0E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8975   004E10  ECA4  F02B         	call	_reverseDetect	;wreg free
  8976                           
  8977                           ;dc_motor.c: 355:     turnLeft45(&motorL, &motorR);
  8978   004E14  0E61               	movlw	low _motorL
  8979   004E16  6E1A               	movwf	turnLeft45@mL^0,c
  8980   004E18  0E01               	movlw	high _motorL
  8981   004E1A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8982   004E1C  0E58               	movlw	low _motorR
  8983   004E1E  6E1C               	movwf	turnLeft45@mR^0,c
  8984   004E20  0E01               	movlw	high _motorR
  8985   004E22  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8986   004E24  EC8E  F02E         	call	_turnLeft45	;wreg free
  8987                           
  8988                           ;dc_motor.c: 356:     turnLeft45(&motorL, &motorR);
  8989   004E28  0E61               	movlw	low _motorL
  8990   004E2A  6E1A               	movwf	turnLeft45@mL^0,c
  8991   004E2C  0E01               	movlw	high _motorL
  8992   004E2E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8993   004E30  0E58               	movlw	low _motorR
  8994   004E32  6E1C               	movwf	turnLeft45@mR^0,c
  8995   004E34  0E01               	movlw	high _motorR
  8996   004E36  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8997   004E38  EC8E  F02E         	call	_turnLeft45	;wreg free
  8998                           
  8999                           ;dc_motor.c: 357:     ForwardOneBlock(&motorL, &motorR);
  9000   004E3C  0E61               	movlw	low _motorL
  9001   004E3E  6E1A               	movwf	ForwardOneBlock@mL^0,c
  9002   004E40  0E01               	movlw	high _motorL
  9003   004E42  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  9004   004E44  0E58               	movlw	low _motorR
  9005   004E46  6E1C               	movwf	ForwardOneBlock@mR^0,c
  9006   004E48  0E01               	movlw	high _motorR
  9007   004E4A  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  9008   004E4C  ECFE  F02B         	call	_ForwardOneBlock	;wreg free
  9009                           
  9010                           ;dc_motor.c: 358:     reverseDetect(&motorL, &motorR);
  9011   004E50  0E61               	movlw	low _motorL
  9012   004E52  6E1A               	movwf	reverseDetect@mL^0,c
  9013   004E54  0E01               	movlw	high _motorL
  9014   004E56  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9015   004E58  0E58               	movlw	low _motorR
  9016   004E5A  6E1C               	movwf	reverseDetect@mR^0,c
  9017   004E5C  0E01               	movlw	high _motorR
  9018   004E5E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9019   004E60  ECA4  F02B         	call	_reverseDetect	;wreg free
  9020                           
  9021                           ;dc_motor.c: 359:     turnLeft45(&motorL, &motorR);
  9022   004E64  0E61               	movlw	low _motorL
  9023   004E66  6E1A               	movwf	turnLeft45@mL^0,c
  9024   004E68  0E01               	movlw	high _motorL
  9025   004E6A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9026   004E6C  0E58               	movlw	low _motorR
  9027   004E6E  6E1C               	movwf	turnLeft45@mR^0,c
  9028   004E70  0E01               	movlw	high _motorR
  9029   004E72  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9030   004E74  EC8E  F02E         	call	_turnLeft45	;wreg free
  9031                           
  9032                           ;dc_motor.c: 360:     turnLeft45(&motorL, &motorR);
  9033   004E78  0E61               	movlw	low _motorL
  9034   004E7A  6E1A               	movwf	turnLeft45@mL^0,c
  9035   004E7C  0E01               	movlw	high _motorL
  9036   004E7E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9037   004E80  0E58               	movlw	low _motorR
  9038   004E82  6E1C               	movwf	turnLeft45@mR^0,c
  9039   004E84  0E01               	movlw	high _motorR
  9040   004E86  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9041   004E88  EC8E  F02E         	call	_turnLeft45	;wreg free
  9042                           
  9043                           ;dc_motor.c: 361:     turnLeft45(&motorL, &motorR);
  9044   004E8C  0E61               	movlw	low _motorL
  9045   004E8E  6E1A               	movwf	turnLeft45@mL^0,c
  9046   004E90  0E01               	movlw	high _motorL
  9047   004E92  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9048   004E94  0E58               	movlw	low _motorR
  9049   004E96  6E1C               	movwf	turnLeft45@mR^0,c
  9050   004E98  0E01               	movlw	high _motorR
  9051   004E9A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9052   004E9C  EC8E  F02E         	call	_turnLeft45	;wreg free
  9053                           
  9054                           ;dc_motor.c: 362:     turnLeft45(&motorL, &motorR);
  9055   004EA0  0E61               	movlw	low _motorL
  9056   004EA2  6E1A               	movwf	turnLeft45@mL^0,c
  9057   004EA4  0E01               	movlw	high _motorL
  9058   004EA6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9059   004EA8  0E58               	movlw	low _motorR
  9060   004EAA  6E1C               	movwf	turnLeft45@mR^0,c
  9061   004EAC  0E01               	movlw	high _motorR
  9062   004EAE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9063   004EB0  EC8E  F02E         	call	_turnLeft45	;wreg free
  9064   004EB4  0012               	return		;funcret
  9065   004EB6                     __end_of_ReversePink:
  9066                           	callstack 0
  9067                           
  9068 ;; *************** function _ForwardOneBlock *****************
  9069 ;; Defined at:
  9070 ;;		line 245 in file "dc_motor.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9073 ;;		 -> motorL(9), 
  9074 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9075 ;;		 -> motorR(9), 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;		None
  9078 ;; Return value:  Size  Location     Type
  9079 ;;                  1    wreg      void 
  9080 ;; Registers used:
  9081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9082 ;; Tracked objects:
  9083 ;;		On entry : 0/0
  9084 ;;		On exit  : 0/0
  9085 ;;		Unchanged: 0/0
  9086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9091 ;;Total ram usage:        6 bytes
  9092 ;; Hardware stack levels used: 1
  9093 ;; Hardware stack levels required when called: 4
  9094 ;; This function calls:
  9095 ;;		_fullSpeedAhead
  9096 ;;		_stop
  9097 ;; This function is called by:
  9098 ;;		_ReverseYellow
  9099 ;;		_ReversePink
  9100 ;; This function uses a non-reentrant model
  9101 ;;
  9102                           
  9103                           	psect	text41
  9104   0057FC                     __ptext41:
  9105                           	callstack 0
  9106   0057FC                     _ForwardOneBlock:
  9107                           	callstack 24
  9108   0057FC                     
  9109                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
  9110   0057FC  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  9111   005800  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  9112   005804  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  9113   005808  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  9114   00580C  ECF2  F028         	call	_fullSpeedAhead	;wreg free
  9115   005810                     
  9116                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9117   005810  0E56               	movlw	86
  9118   005812  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9119   005814  0E3A               	movlw	58
  9120   005816  6E1E               	movwf	??_ForwardOneBlock^0,c
  9121   005818  0EF4               	movlw	244
  9122   00581A                     u5967:
  9123   00581A  2EE8               	decfsz	wreg,f,c
  9124   00581C  D7FE               	bra	u5967
  9125   00581E  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9126   005820  D7FC               	bra	u5967
  9127   005822  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9128   005824  D7FA               	bra	u5967
  9129   005826                     
  9130                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
  9131   005826  0E61               	movlw	low _motorL
  9132   005828  6E14               	movwf	stop@mL^0,c
  9133   00582A  0E01               	movlw	high _motorL
  9134   00582C  6E15               	movwf	(stop@mL+1)^0,c
  9135   00582E  0E58               	movlw	low _motorR
  9136   005830  6E16               	movwf	stop@mR^0,c
  9137   005832  0E01               	movlw	high _motorR
  9138   005834  6E17               	movwf	(stop@mR+1)^0,c
  9139   005836  EC85  F029         	call	_stop	;wreg free
  9140                           
  9141                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9142   00583A  0E05               	movlw	5
  9143   00583C  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9144   00583E  0E0F               	movlw	15
  9145   005840  6E1E               	movwf	??_ForwardOneBlock^0,c
  9146   005842  0EF1               	movlw	241
  9147   005844                     u5977:
  9148   005844  2EE8               	decfsz	wreg,f,c
  9149   005846  D7FE               	bra	u5977
  9150   005848  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9151   00584A  D7FC               	bra	u5977
  9152   00584C  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9153   00584E  D7FA               	bra	u5977
  9154   005850  F000               	nop	
  9155   005852  0012               	return		;funcret
  9156   005854                     __end_of_ForwardOneBlock:
  9157                           	callstack 0
  9158                           
  9159 ;; *************** function _RedMove *****************
  9160 ;; Defined at:
  9161 ;;		line 269 in file "dc_motor.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9164 ;;		 -> motorL(9), 
  9165 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9166 ;;		 -> motorR(9), 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9182 ;;Total ram usage:        4 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 5
  9185 ;; This function calls:
  9186 ;;		_reverseDetect
  9187 ;;		_turnRight45
  9188 ;; This function is called by:
  9189 ;;		_go_Home
  9190 ;;		_colour_move
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           	psect	text42
  9195   005EBA                     __ptext42:
  9196                           	callstack 0
  9197   005EBA                     _RedMove:
  9198                           	callstack 24
  9199   005EBA                     
  9200                           ;dc_motor.c: 270:     reverseDetect(&motorL, &motorR);
  9201   005EBA  0E61               	movlw	low _motorL
  9202   005EBC  6E1A               	movwf	reverseDetect@mL^0,c
  9203   005EBE  0E01               	movlw	high _motorL
  9204   005EC0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9205   005EC2  0E58               	movlw	low _motorR
  9206   005EC4  6E1C               	movwf	reverseDetect@mR^0,c
  9207   005EC6  0E01               	movlw	high _motorR
  9208   005EC8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9209   005ECA  ECA4  F02B         	call	_reverseDetect	;wreg free
  9210                           
  9211                           ;dc_motor.c: 272:     turnRight45(&motorL, &motorR);
  9212   005ECE  0E61               	movlw	low _motorL
  9213   005ED0  6E1A               	movwf	turnRight45@mL^0,c
  9214   005ED2  0E01               	movlw	high _motorL
  9215   005ED4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9216   005ED6  0E58               	movlw	low _motorR
  9217   005ED8  6E1C               	movwf	turnRight45@mR^0,c
  9218   005EDA  0E01               	movlw	high _motorR
  9219   005EDC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9220   005EDE  EC67  F02E         	call	_turnRight45	;wreg free
  9221                           
  9222                           ;dc_motor.c: 273:     turnRight45(&motorL, &motorR);
  9223   005EE2  0E61               	movlw	low _motorL
  9224   005EE4  6E1A               	movwf	turnRight45@mL^0,c
  9225   005EE6  0E01               	movlw	high _motorL
  9226   005EE8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9227   005EEA  0E58               	movlw	low _motorR
  9228   005EEC  6E1C               	movwf	turnRight45@mR^0,c
  9229   005EEE  0E01               	movlw	high _motorR
  9230   005EF0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9231   005EF2  EC67  F02E         	call	_turnRight45	;wreg free
  9232   005EF6  0012               	return		;funcret
  9233   005EF8                     __end_of_RedMove:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _OrangeMove *****************
  9237 ;; Defined at:
  9238 ;;		line 317 in file "dc_motor.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9241 ;;		 -> motorL(9), 
  9242 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9243 ;;		 -> motorR(9), 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;Total ram usage:        4 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 5
  9262 ;; This function calls:
  9263 ;;		_reverseDetect
  9264 ;;		_turnRight45
  9265 ;; This function is called by:
  9266 ;;		_go_Home
  9267 ;;		_colour_move
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text43
  9272   005954                     __ptext43:
  9273                           	callstack 0
  9274   005954                     _OrangeMove:
  9275                           	callstack 24
  9276   005954                     
  9277                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9278   005954  0E61               	movlw	low _motorL
  9279   005956  6E1A               	movwf	reverseDetect@mL^0,c
  9280   005958  0E01               	movlw	high _motorL
  9281   00595A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9282   00595C  0E58               	movlw	low _motorR
  9283   00595E  6E1C               	movwf	reverseDetect@mR^0,c
  9284   005960  0E01               	movlw	high _motorR
  9285   005962  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9286   005964  ECA4  F02B         	call	_reverseDetect	;wreg free
  9287                           
  9288                           ;dc_motor.c: 320:     turnRight45(&motorL, &motorR);
  9289   005968  0E61               	movlw	low _motorL
  9290   00596A  6E1A               	movwf	turnRight45@mL^0,c
  9291   00596C  0E01               	movlw	high _motorL
  9292   00596E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9293   005970  0E58               	movlw	low _motorR
  9294   005972  6E1C               	movwf	turnRight45@mR^0,c
  9295   005974  0E01               	movlw	high _motorR
  9296   005976  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9297   005978  EC67  F02E         	call	_turnRight45	;wreg free
  9298                           
  9299                           ;dc_motor.c: 321:     turnRight45(&motorL, &motorR);
  9300   00597C  0E61               	movlw	low _motorL
  9301   00597E  6E1A               	movwf	turnRight45@mL^0,c
  9302   005980  0E01               	movlw	high _motorL
  9303   005982  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9304   005984  0E58               	movlw	low _motorR
  9305   005986  6E1C               	movwf	turnRight45@mR^0,c
  9306   005988  0E01               	movlw	high _motorR
  9307   00598A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9308   00598C  EC67  F02E         	call	_turnRight45	;wreg free
  9309                           
  9310                           ;dc_motor.c: 322:     turnRight45(&motorL, &motorR);
  9311   005990  0E61               	movlw	low _motorL
  9312   005992  6E1A               	movwf	turnRight45@mL^0,c
  9313   005994  0E01               	movlw	high _motorL
  9314   005996  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9315   005998  0E58               	movlw	low _motorR
  9316   00599A  6E1C               	movwf	turnRight45@mR^0,c
  9317   00599C  0E01               	movlw	high _motorR
  9318   00599E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9319   0059A0  EC67  F02E         	call	_turnRight45	;wreg free
  9320   0059A4  0012               	return		;funcret
  9321   0059A6                     __end_of_OrangeMove:
  9322                           	callstack 0
  9323                           
  9324 ;; *************** function _LightBlueMove *****************
  9325 ;; Defined at:
  9326 ;;		line 326 in file "dc_motor.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9329 ;;		 -> motorL(9), 
  9330 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9331 ;;		 -> motorR(9), 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      void 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9347 ;;Total ram usage:        4 bytes
  9348 ;; Hardware stack levels used: 1
  9349 ;; Hardware stack levels required when called: 5
  9350 ;; This function calls:
  9351 ;;		_reverseDetect
  9352 ;;		_turnLeft45
  9353 ;; This function is called by:
  9354 ;;		_go_Home
  9355 ;;		_colour_move
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text44
  9360   0059A6                     __ptext44:
  9361                           	callstack 0
  9362   0059A6                     _LightBlueMove:
  9363                           	callstack 24
  9364   0059A6                     
  9365                           ;dc_motor.c: 327:     reverseDetect(&motorL, &motorR);
  9366   0059A6  0E61               	movlw	low _motorL
  9367   0059A8  6E1A               	movwf	reverseDetect@mL^0,c
  9368   0059AA  0E01               	movlw	high _motorL
  9369   0059AC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9370   0059AE  0E58               	movlw	low _motorR
  9371   0059B0  6E1C               	movwf	reverseDetect@mR^0,c
  9372   0059B2  0E01               	movlw	high _motorR
  9373   0059B4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9374   0059B6  ECA4  F02B         	call	_reverseDetect	;wreg free
  9375                           
  9376                           ;dc_motor.c: 329:     turnLeft45(&motorL, &motorR);
  9377   0059BA  0E61               	movlw	low _motorL
  9378   0059BC  6E1A               	movwf	turnLeft45@mL^0,c
  9379   0059BE  0E01               	movlw	high _motorL
  9380   0059C0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9381   0059C2  0E58               	movlw	low _motorR
  9382   0059C4  6E1C               	movwf	turnLeft45@mR^0,c
  9383   0059C6  0E01               	movlw	high _motorR
  9384   0059C8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9385   0059CA  EC8E  F02E         	call	_turnLeft45	;wreg free
  9386                           
  9387                           ;dc_motor.c: 330:     turnLeft45(&motorL, &motorR);
  9388   0059CE  0E61               	movlw	low _motorL
  9389   0059D0  6E1A               	movwf	turnLeft45@mL^0,c
  9390   0059D2  0E01               	movlw	high _motorL
  9391   0059D4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9392   0059D6  0E58               	movlw	low _motorR
  9393   0059D8  6E1C               	movwf	turnLeft45@mR^0,c
  9394   0059DA  0E01               	movlw	high _motorR
  9395   0059DC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9396   0059DE  EC8E  F02E         	call	_turnLeft45	;wreg free
  9397                           
  9398                           ;dc_motor.c: 331:     turnLeft45(&motorL, &motorR);
  9399   0059E2  0E61               	movlw	low _motorL
  9400   0059E4  6E1A               	movwf	turnLeft45@mL^0,c
  9401   0059E6  0E01               	movlw	high _motorL
  9402   0059E8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9403   0059EA  0E58               	movlw	low _motorR
  9404   0059EC  6E1C               	movwf	turnLeft45@mR^0,c
  9405   0059EE  0E01               	movlw	high _motorR
  9406   0059F0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9407   0059F2  EC8E  F02E         	call	_turnLeft45	;wreg free
  9408   0059F6  0012               	return		;funcret
  9409   0059F8                     __end_of_LightBlueMove:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _GreenMove *****************
  9413 ;; Defined at:
  9414 ;;		line 277 in file "dc_motor.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9417 ;;		 -> motorL(9), 
  9418 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9419 ;;		 -> motorR(9), 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      void 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9435 ;;Total ram usage:        4 bytes
  9436 ;; Hardware stack levels used: 1
  9437 ;; Hardware stack levels required when called: 5
  9438 ;; This function calls:
  9439 ;;		_reverseDetect
  9440 ;;		_turnLeft45
  9441 ;; This function is called by:
  9442 ;;		_go_Home
  9443 ;;		_colour_move
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text45
  9448   005EF8                     __ptext45:
  9449                           	callstack 0
  9450   005EF8                     _GreenMove:
  9451                           	callstack 24
  9452   005EF8                     
  9453                           ;dc_motor.c: 278:     reverseDetect(&motorL, &motorR);
  9454   005EF8  0E61               	movlw	low _motorL
  9455   005EFA  6E1A               	movwf	reverseDetect@mL^0,c
  9456   005EFC  0E01               	movlw	high _motorL
  9457   005EFE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9458   005F00  0E58               	movlw	low _motorR
  9459   005F02  6E1C               	movwf	reverseDetect@mR^0,c
  9460   005F04  0E01               	movlw	high _motorR
  9461   005F06  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9462   005F08  ECA4  F02B         	call	_reverseDetect	;wreg free
  9463                           
  9464                           ;dc_motor.c: 280:     turnLeft45(&motorL, &motorR);
  9465   005F0C  0E61               	movlw	low _motorL
  9466   005F0E  6E1A               	movwf	turnLeft45@mL^0,c
  9467   005F10  0E01               	movlw	high _motorL
  9468   005F12  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9469   005F14  0E58               	movlw	low _motorR
  9470   005F16  6E1C               	movwf	turnLeft45@mR^0,c
  9471   005F18  0E01               	movlw	high _motorR
  9472   005F1A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9473   005F1C  EC8E  F02E         	call	_turnLeft45	;wreg free
  9474                           
  9475                           ;dc_motor.c: 281:     turnLeft45(&motorL, &motorR);
  9476   005F20  0E61               	movlw	low _motorL
  9477   005F22  6E1A               	movwf	turnLeft45@mL^0,c
  9478   005F24  0E01               	movlw	high _motorL
  9479   005F26  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9480   005F28  0E58               	movlw	low _motorR
  9481   005F2A  6E1C               	movwf	turnLeft45@mR^0,c
  9482   005F2C  0E01               	movlw	high _motorR
  9483   005F2E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9484   005F30  EC8E  F02E         	call	_turnLeft45	;wreg free
  9485   005F34  0012               	return		;funcret
  9486   005F36                     __end_of_GreenMove:
  9487                           	callstack 0
  9488                           
  9489 ;; *************** function _BlueMove *****************
  9490 ;; Defined at:
  9491 ;;		line 285 in file "dc_motor.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9494 ;;		 -> motorL(9), 
  9495 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9496 ;;		 -> motorR(9), 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;		None
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;Total ram usage:        4 bytes
  9513 ;; Hardware stack levels used: 1
  9514 ;; Hardware stack levels required when called: 5
  9515 ;; This function calls:
  9516 ;;		_Backhalfblock
  9517 ;;		_reverseDetect
  9518 ;;		_turnRight45
  9519 ;; This function is called by:
  9520 ;;		_go_Home
  9521 ;;		_colour_move
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text46
  9526   005402                     __ptext46:
  9527                           	callstack 0
  9528   005402                     _BlueMove:
  9529                           	callstack 24
  9530   005402                     
  9531                           ;dc_motor.c: 286:     reverseDetect(&motorL, &motorR);
  9532   005402  0E61               	movlw	low _motorL
  9533   005404  6E1A               	movwf	reverseDetect@mL^0,c
  9534   005406  0E01               	movlw	high _motorL
  9535   005408  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9536   00540A  0E58               	movlw	low _motorR
  9537   00540C  6E1C               	movwf	reverseDetect@mR^0,c
  9538   00540E  0E01               	movlw	high _motorR
  9539   005410  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9540   005412  ECA4  F02B         	call	_reverseDetect	;wreg free
  9541                           
  9542                           ;dc_motor.c: 288:     turnRight45(&motorL, &motorR);
  9543   005416  0E61               	movlw	low _motorL
  9544   005418  6E1A               	movwf	turnRight45@mL^0,c
  9545   00541A  0E01               	movlw	high _motorL
  9546   00541C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9547   00541E  0E58               	movlw	low _motorR
  9548   005420  6E1C               	movwf	turnRight45@mR^0,c
  9549   005422  0E01               	movlw	high _motorR
  9550   005424  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9551   005426  EC67  F02E         	call	_turnRight45	;wreg free
  9552                           
  9553                           ;dc_motor.c: 289:     turnRight45(&motorL, &motorR);
  9554   00542A  0E61               	movlw	low _motorL
  9555   00542C  6E1A               	movwf	turnRight45@mL^0,c
  9556   00542E  0E01               	movlw	high _motorL
  9557   005430  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9558   005432  0E58               	movlw	low _motorR
  9559   005434  6E1C               	movwf	turnRight45@mR^0,c
  9560   005436  0E01               	movlw	high _motorR
  9561   005438  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9562   00543A  EC67  F02E         	call	_turnRight45	;wreg free
  9563                           
  9564                           ;dc_motor.c: 290:     turnRight45(&motorL, &motorR);
  9565   00543E  0E61               	movlw	low _motorL
  9566   005440  6E1A               	movwf	turnRight45@mL^0,c
  9567   005442  0E01               	movlw	high _motorL
  9568   005444  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9569   005446  0E58               	movlw	low _motorR
  9570   005448  6E1C               	movwf	turnRight45@mR^0,c
  9571   00544A  0E01               	movlw	high _motorR
  9572   00544C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9573   00544E  EC67  F02E         	call	_turnRight45	;wreg free
  9574                           
  9575                           ;dc_motor.c: 291:     turnRight45(&motorL, &motorR);
  9576   005452  0E61               	movlw	low _motorL
  9577   005454  6E1A               	movwf	turnRight45@mL^0,c
  9578   005456  0E01               	movlw	high _motorL
  9579   005458  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9580   00545A  0E58               	movlw	low _motorR
  9581   00545C  6E1C               	movwf	turnRight45@mR^0,c
  9582   00545E  0E01               	movlw	high _motorR
  9583   005460  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9584   005462  EC67  F02E         	call	_turnRight45	;wreg free
  9585                           
  9586                           ;dc_motor.c: 293:     Backhalfblock(&motorL, &motorR);
  9587   005466  0E61               	movlw	low _motorL
  9588   005468  6E1A               	movwf	Backhalfblock@mL^0,c
  9589   00546A  0E01               	movlw	high _motorL
  9590   00546C  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9591   00546E  0E58               	movlw	low _motorR
  9592   005470  6E1C               	movwf	Backhalfblock@mR^0,c
  9593   005472  0E01               	movlw	high _motorR
  9594   005474  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9595   005476  EC77  F02B         	call	_Backhalfblock	;wreg free
  9596   00547A  0012               	return		;funcret
  9597   00547C                     __end_of_BlueMove:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _Backhalfblock *****************
  9601 ;; Defined at:
  9602 ;;		line 258 in file "dc_motor.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9605 ;;		 -> motorL(9), 
  9606 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9607 ;;		 -> motorR(9), 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;		None
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;Total ram usage:        6 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 4
  9626 ;; This function calls:
  9627 ;;		_fullSpeedBack
  9628 ;;		_stop
  9629 ;; This function is called by:
  9630 ;;		_BlueMove
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text47
  9635   0056EE                     __ptext47:
  9636                           	callstack 0
  9637   0056EE                     _Backhalfblock:
  9638                           	callstack 24
  9639   0056EE                     
  9640                           ;dc_motor.c: 259:     fullSpeedBack(mL,mR);
  9641   0056EE  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  9642   0056F2  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  9643   0056F6  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  9644   0056FA  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  9645   0056FE  ECA3  F028         	call	_fullSpeedBack	;wreg free
  9646   005702                     
  9647                           ;dc_motor.c: 260:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  9648   005702  0E2B               	movlw	43
  9649   005704  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9650   005706  0E9D               	movlw	157
  9651   005708  6E1E               	movwf	??_Backhalfblock^0,c
  9652   00570A  0EF9               	movlw	249
  9653   00570C                     u5987:
  9654   00570C  2EE8               	decfsz	wreg,f,c
  9655   00570E  D7FE               	bra	u5987
  9656   005710  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9657   005712  D7FC               	bra	u5987
  9658   005714  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9659   005716  D7FA               	bra	u5987
  9660   005718  F000               	nop	
  9661   00571A                     
  9662                           ;dc_motor.c: 261:     stop(&motorL, &motorR);
  9663   00571A  0E61               	movlw	low _motorL
  9664   00571C  6E14               	movwf	stop@mL^0,c
  9665   00571E  0E01               	movlw	high _motorL
  9666   005720  6E15               	movwf	(stop@mL+1)^0,c
  9667   005722  0E58               	movlw	low _motorR
  9668   005724  6E16               	movwf	stop@mR^0,c
  9669   005726  0E01               	movlw	high _motorR
  9670   005728  6E17               	movwf	(stop@mR+1)^0,c
  9671   00572A  EC85  F029         	call	_stop	;wreg free
  9672                           
  9673                           ;dc_motor.c: 262:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9674   00572E  0E05               	movlw	5
  9675   005730  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9676   005732  0E0F               	movlw	15
  9677   005734  6E1E               	movwf	??_Backhalfblock^0,c
  9678   005736  0EF1               	movlw	241
  9679   005738                     u5997:
  9680   005738  2EE8               	decfsz	wreg,f,c
  9681   00573A  D7FE               	bra	u5997
  9682   00573C  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9683   00573E  D7FC               	bra	u5997
  9684   005740  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9685   005742  D7FA               	bra	u5997
  9686   005744  F000               	nop	
  9687   005746  0012               	return		;funcret
  9688   005748                     __end_of_Backhalfblock:
  9689                           	callstack 0
  9690                           
  9691 ;; *************** function _YellowMove *****************
  9692 ;; Defined at:
  9693 ;;		line 297 in file "dc_motor.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9696 ;;		 -> motorL(9), 
  9697 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9698 ;;		 -> motorR(9), 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;Total ram usage:        4 bytes
  9715 ;; Hardware stack levels used: 1
  9716 ;; Hardware stack levels required when called: 5
  9717 ;; This function calls:
  9718 ;;		_reverseDetect
  9719 ;;		_reverseOneBlock
  9720 ;;		_turnRight45
  9721 ;; This function is called by:
  9722 ;;		_colour_move
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text48
  9727   0059F8                     __ptext48:
  9728                           	callstack 0
  9729   0059F8                     _YellowMove:
  9730                           	callstack 24
  9731   0059F8                     
  9732                           ;dc_motor.c: 298:     reverseDetect(&motorL, &motorR);
  9733   0059F8  0E61               	movlw	low _motorL
  9734   0059FA  6E1A               	movwf	reverseDetect@mL^0,c
  9735   0059FC  0E01               	movlw	high _motorL
  9736   0059FE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9737   005A00  0E58               	movlw	low _motorR
  9738   005A02  6E1C               	movwf	reverseDetect@mR^0,c
  9739   005A04  0E01               	movlw	high _motorR
  9740   005A06  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9741   005A08  ECA4  F02B         	call	_reverseDetect	;wreg free
  9742                           
  9743                           ;dc_motor.c: 300:     reverseOneBlock(&motorL, &motorR);
  9744   005A0C  0E61               	movlw	low _motorL
  9745   005A0E  6E1A               	movwf	reverseOneBlock@mL^0,c
  9746   005A10  0E01               	movlw	high _motorL
  9747   005A12  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9748   005A14  0E58               	movlw	low _motorR
  9749   005A16  6E1C               	movwf	reverseOneBlock@mR^0,c
  9750   005A18  0E01               	movlw	high _motorR
  9751   005A1A  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9752   005A1C  EC2A  F02C         	call	_reverseOneBlock	;wreg free
  9753                           
  9754                           ;dc_motor.c: 302:     turnRight45(&motorL, &motorR);
  9755   005A20  0E61               	movlw	low _motorL
  9756   005A22  6E1A               	movwf	turnRight45@mL^0,c
  9757   005A24  0E01               	movlw	high _motorL
  9758   005A26  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9759   005A28  0E58               	movlw	low _motorR
  9760   005A2A  6E1C               	movwf	turnRight45@mR^0,c
  9761   005A2C  0E01               	movlw	high _motorR
  9762   005A2E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9763   005A30  EC67  F02E         	call	_turnRight45	;wreg free
  9764                           
  9765                           ;dc_motor.c: 303:     turnRight45(&motorL, &motorR);
  9766   005A34  0E61               	movlw	low _motorL
  9767   005A36  6E1A               	movwf	turnRight45@mL^0,c
  9768   005A38  0E01               	movlw	high _motorL
  9769   005A3A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9770   005A3C  0E58               	movlw	low _motorR
  9771   005A3E  6E1C               	movwf	turnRight45@mR^0,c
  9772   005A40  0E01               	movlw	high _motorR
  9773   005A42  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9774   005A44  EC67  F02E         	call	_turnRight45	;wreg free
  9775   005A48  0012               	return		;funcret
  9776   005A4A                     __end_of_YellowMove:
  9777                           	callstack 0
  9778                           
  9779 ;; *************** function _turnRight45 *****************
  9780 ;; Defined at:
  9781 ;;		line 212 in file "dc_motor.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9784 ;;		 -> motorL(9), 
  9785 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9786 ;;		 -> motorR(9), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;		None
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      void 
  9791 ;; Registers used:
  9792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9802 ;;Total ram usage:        6 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; Hardware stack levels required when called: 4
  9805 ;; This function calls:
  9806 ;;		_TurnDelay
  9807 ;;		_stop
  9808 ;;		_turnRight
  9809 ;; This function is called by:
  9810 ;;		_RedMove
  9811 ;;		_BlueMove
  9812 ;;		_YellowMove
  9813 ;;		_OrangeMove
  9814 ;;		_ReverseYellow
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text49
  9819   005CCE                     __ptext49:
  9820                           	callstack 0
  9821   005CCE                     _turnRight45:
  9822                           	callstack 24
  9823   005CCE                     
  9824                           ;dc_motor.c: 213:     turnRight(mL,mR);
  9825   005CCE  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  9826   005CD2  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9827   005CD6  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  9828   005CDA  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9829   005CDE  EC05  F028         	call	_turnRight	;wreg free
  9830   005CE2                     
  9831                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
  9832   005CE2  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  9833   005CE6  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  9834   005CEA  ECD3  F02F         	call	_TurnDelay	;wreg free
  9835   005CEE                     
  9836                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
  9837   005CEE  0E61               	movlw	low _motorL
  9838   005CF0  6E14               	movwf	stop@mL^0,c
  9839   005CF2  0E01               	movlw	high _motorL
  9840   005CF4  6E15               	movwf	(stop@mL+1)^0,c
  9841   005CF6  0E58               	movlw	low _motorR
  9842   005CF8  6E16               	movwf	stop@mR^0,c
  9843   005CFA  0E01               	movlw	high _motorR
  9844   005CFC  6E17               	movwf	(stop@mR+1)^0,c
  9845   005CFE  EC85  F029         	call	_stop	;wreg free
  9846   005D02                     
  9847                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9848   005D02  0E05               	movlw	5
  9849   005D04  6E1F               	movwf	(??_turnRight45+1)^0,c
  9850   005D06  0E0F               	movlw	15
  9851   005D08  6E1E               	movwf	??_turnRight45^0,c
  9852   005D0A  0EF1               	movlw	241
  9853   005D0C                     u6007:
  9854   005D0C  2EE8               	decfsz	wreg,f,c
  9855   005D0E  D7FE               	bra	u6007
  9856   005D10  2E1E               	decfsz	??_turnRight45^0,f,c
  9857   005D12  D7FC               	bra	u6007
  9858   005D14  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  9859   005D16  D7FA               	bra	u6007
  9860   005D18  F000               	nop	
  9861   005D1A  0012               	return		;funcret
  9862   005D1C                     __end_of_turnRight45:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _turnRight *****************
  9866 ;; Defined at:
  9867 ;;		line 130 in file "dc_motor.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9870 ;;		 -> motorL(9), 
  9871 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9872 ;;		 -> motorR(9), 
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;		None
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;Total ram usage:        6 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 3
  9891 ;; This function calls:
  9892 ;;		_setMotorPWM
  9893 ;; This function is called by:
  9894 ;;		_turnRight45
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text50
  9899   00500A                     __ptext50:
  9900                           	callstack 0
  9901   00500A                     _turnRight:
  9902                           	callstack 24
  9903   00500A                     
  9904                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
  9905   00500A  EE20 F001          	lfsr	2,1
  9906   00500E  5014               	movf	turnRight@mL^0,w,c
  9907   005010  26D9               	addwf	fsr2l,f,c
  9908   005012  5015               	movf	(turnRight@mL+1)^0,w,c
  9909   005014  22DA               	addwfc	fsr2h,f,c
  9910   005016  0E01               	movlw	1
  9911   005018  6EDF               	movwf	indf2,c
  9912                           
  9913                           ;dc_motor.c: 133:     mR->direction =0;
  9914   00501A  EE20 F001          	lfsr	2,1
  9915   00501E  5016               	movf	turnRight@mR^0,w,c
  9916   005020  26D9               	addwf	fsr2l,f,c
  9917   005022  5017               	movf	(turnRight@mR+1)^0,w,c
  9918   005024  22DA               	addwfc	fsr2h,f,c
  9919   005026  0E00               	movlw	0
  9920   005028  6EDF               	movwf	indf2,c
  9921                           
  9922                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
  9923   00502A  EF3B  F028         	goto	l4159
  9924   00502E                     l4151:
  9925                           
  9926                           ;dc_motor.c: 137:         mL->power+=10;
  9927   00502E  C014  FFD9         	movff	turnRight@mL,fsr2l
  9928   005032  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9929   005036  0E0A               	movlw	10
  9930   005038  26DF               	addwf	indf2,f,c
  9931                           
  9932                           ;dc_motor.c: 138:         mR->power+=10;
  9933   00503A  C016  FFD9         	movff	turnRight@mR,fsr2l
  9934   00503E  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9935   005042  0E0A               	movlw	10
  9936   005044  26DF               	addwf	indf2,f,c
  9937   005046                     
  9938                           ;dc_motor.c: 140:         setMotorPWM(mL);
  9939   005046  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9940   00504A  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9941   00504E  EC54  F023         	call	_setMotorPWM	;wreg free
  9942   005052                     
  9943                           ;dc_motor.c: 141:         setMotorPWM(mR);
  9944   005052  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9945   005056  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9946   00505A  EC54  F023         	call	_setMotorPWM	;wreg free
  9947   00505E                     
  9948                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
  9949   00505E  0E02               	movlw	2
  9950   005060  6E19               	movwf	(??_turnRight+1)^0,c
  9951   005062  0EA0               	movlw	160
  9952   005064  6E18               	movwf	??_turnRight^0,c
  9953   005066  0E92               	movlw	146
  9954   005068                     u6017:
  9955   005068  2EE8               	decfsz	wreg,f,c
  9956   00506A  D7FE               	bra	u6017
  9957   00506C  2E18               	decfsz	??_turnRight^0,f,c
  9958   00506E  D7FC               	bra	u6017
  9959   005070  2E19               	decfsz	(??_turnRight+1)^0,f,c
  9960   005072  D7FA               	bra	u6017
  9961   005074  D000               	nop2	
  9962   005076                     l4159:
  9963   005076  C014  FFD9         	movff	turnRight@mL,fsr2l
  9964   00507A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9965   00507E  0E32               	movlw	50
  9966   005080  60DF               	cpfslt	indf2,c
  9967   005082  EF45  F028         	goto	u3471
  9968   005086  EF47  F028         	goto	u3470
  9969   00508A                     u3471:
  9970   00508A  EF53  F028         	goto	l446
  9971   00508E                     u3470:
  9972   00508E  C016  FFD9         	movff	turnRight@mR,fsr2l
  9973   005092  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9974   005096  0E31               	movlw	49
  9975   005098  64DF               	cpfsgt	indf2,c
  9976   00509A  EF51  F028         	goto	u3481
  9977   00509E  EF53  F028         	goto	u3480
  9978   0050A2                     u3481:
  9979   0050A2  EF17  F028         	goto	l4151
  9980   0050A6                     u3480:
  9981   0050A6                     l446:
  9982   0050A6  0012               	return		;funcret
  9983   0050A8                     __end_of_turnRight:
  9984                           	callstack 0
  9985                           
  9986 ;; *************** function _RetryMove *****************
  9987 ;; Defined at:
  9988 ;;		line 334 in file "dc_motor.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9991 ;;		 -> motorL(9), 
  9992 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9993 ;;		 -> motorR(9), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10009 ;;Total ram usage:        6 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 5
 10012 ;; This function calls:
 10013 ;;		_fullSpeedAhead
 10014 ;;		_reverseDetect
 10015 ;;		_stop
 10016 ;; This function is called by:
 10017 ;;		_colour_move
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text51
 10022   00555E                     __ptext51:
 10023                           	callstack 0
 10024   00555E                     _RetryMove:
 10025                           	callstack 24
 10026   00555E                     
 10027                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
 10028   00555E  0E61               	movlw	low _motorL
 10029   005560  6E1A               	movwf	reverseDetect@mL^0,c
 10030   005562  0E01               	movlw	high _motorL
 10031   005564  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10032   005566  0E58               	movlw	low _motorR
 10033   005568  6E1C               	movwf	reverseDetect@mR^0,c
 10034   00556A  0E01               	movlw	high _motorR
 10035   00556C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10036   00556E  ECA4  F02B         	call	_reverseDetect	;wreg free
 10037                           
 10038                           ;dc_motor.c: 336:     stop(&motorL, &motorR);
 10039   005572  0E61               	movlw	low _motorL
 10040   005574  6E14               	movwf	stop@mL^0,c
 10041   005576  0E01               	movlw	high _motorL
 10042   005578  6E15               	movwf	(stop@mL+1)^0,c
 10043   00557A  0E58               	movlw	low _motorR
 10044   00557C  6E16               	movwf	stop@mR^0,c
 10045   00557E  0E01               	movlw	high _motorR
 10046   005580  6E17               	movwf	(stop@mR+1)^0,c
 10047   005582  EC85  F029         	call	_stop	;wreg free
 10048                           
 10049                           ;dc_motor.c: 337:     fullSpeedAhead(mL,mR);
 10050   005586  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10051   00558A  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10052   00558E  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10053   005592  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10054   005596  ECF2  F028         	call	_fullSpeedAhead	;wreg free
 10055   00559A                     
 10056                           ;dc_motor.c: 338:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10057   00559A  0E29               	movlw	41
 10058   00559C  6E25               	movwf	(??_RetryMove+1)^0,c
 10059   00559E  0E96               	movlw	150
 10060   0055A0  6E24               	movwf	??_RetryMove^0,c
 10061   0055A2  0E7F               	movlw	127
 10062   0055A4                     u6027:
 10063   0055A4  2EE8               	decfsz	wreg,f,c
 10064   0055A6  D7FE               	bra	u6027
 10065   0055A8  2E24               	decfsz	??_RetryMove^0,f,c
 10066   0055AA  D7FC               	bra	u6027
 10067   0055AC  2E25               	decfsz	(??_RetryMove+1)^0,f,c
 10068   0055AE  D7FA               	bra	u6027
 10069   0055B0  F000               	nop	
 10070   0055B2                     
 10071                           ;dc_motor.c: 339:     stop(&motorL, &motorR);
 10072   0055B2  0E61               	movlw	low _motorL
 10073   0055B4  6E14               	movwf	stop@mL^0,c
 10074   0055B6  0E01               	movlw	high _motorL
 10075   0055B8  6E15               	movwf	(stop@mL+1)^0,c
 10076   0055BA  0E58               	movlw	low _motorR
 10077   0055BC  6E16               	movwf	stop@mR^0,c
 10078   0055BE  0E01               	movlw	high _motorR
 10079   0055C0  6E17               	movwf	(stop@mR+1)^0,c
 10080   0055C2  EC85  F029         	call	_stop	;wreg free
 10081   0055C6  0012               	return		;funcret
 10082   0055C8                     __end_of_RetryMove:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function _PinkMove *****************
 10086 ;; Defined at:
 10087 ;;		line 307 in file "dc_motor.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10090 ;;		 -> motorL(9), 
 10091 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10092 ;;		 -> motorR(9), 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;Total ram usage:        4 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 5
 10111 ;; This function calls:
 10112 ;;		_reverseDetect
 10113 ;;		_reverseOneBlock
 10114 ;;		_turnLeft45
 10115 ;; This function is called by:
 10116 ;;		_colour_move
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text52
 10121   005A4A                     __ptext52:
 10122                           	callstack 0
 10123   005A4A                     _PinkMove:
 10124                           	callstack 24
 10125   005A4A                     
 10126                           ;dc_motor.c: 308:     reverseDetect(&motorL, &motorR);
 10127   005A4A  0E61               	movlw	low _motorL
 10128   005A4C  6E1A               	movwf	reverseDetect@mL^0,c
 10129   005A4E  0E01               	movlw	high _motorL
 10130   005A50  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10131   005A52  0E58               	movlw	low _motorR
 10132   005A54  6E1C               	movwf	reverseDetect@mR^0,c
 10133   005A56  0E01               	movlw	high _motorR
 10134   005A58  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10135   005A5A  ECA4  F02B         	call	_reverseDetect	;wreg free
 10136                           
 10137                           ;dc_motor.c: 310:     reverseOneBlock(&motorL, &motorR);
 10138   005A5E  0E61               	movlw	low _motorL
 10139   005A60  6E1A               	movwf	reverseOneBlock@mL^0,c
 10140   005A62  0E01               	movlw	high _motorL
 10141   005A64  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10142   005A66  0E58               	movlw	low _motorR
 10143   005A68  6E1C               	movwf	reverseOneBlock@mR^0,c
 10144   005A6A  0E01               	movlw	high _motorR
 10145   005A6C  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10146   005A6E  EC2A  F02C         	call	_reverseOneBlock	;wreg free
 10147                           
 10148                           ;dc_motor.c: 312:     turnLeft45(&motorL, &motorR);
 10149   005A72  0E61               	movlw	low _motorL
 10150   005A74  6E1A               	movwf	turnLeft45@mL^0,c
 10151   005A76  0E01               	movlw	high _motorL
 10152   005A78  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10153   005A7A  0E58               	movlw	low _motorR
 10154   005A7C  6E1C               	movwf	turnLeft45@mR^0,c
 10155   005A7E  0E01               	movlw	high _motorR
 10156   005A80  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10157   005A82  EC8E  F02E         	call	_turnLeft45	;wreg free
 10158                           
 10159                           ;dc_motor.c: 313:     turnLeft45(&motorL, &motorR);
 10160   005A86  0E61               	movlw	low _motorL
 10161   005A88  6E1A               	movwf	turnLeft45@mL^0,c
 10162   005A8A  0E01               	movlw	high _motorL
 10163   005A8C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10164   005A8E  0E58               	movlw	low _motorR
 10165   005A90  6E1C               	movwf	turnLeft45@mR^0,c
 10166   005A92  0E01               	movlw	high _motorR
 10167   005A94  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10168   005A96  EC8E  F02E         	call	_turnLeft45	;wreg free
 10169   005A9A  0012               	return		;funcret
 10170   005A9C                     __end_of_PinkMove:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function _turnLeft45 *****************
 10174 ;; Defined at:
 10175 ;;		line 219 in file "dc_motor.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10178 ;;		 -> motorL(9), 
 10179 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10180 ;;		 -> motorR(9), 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;Total ram usage:        6 bytes
 10197 ;; Hardware stack levels used: 1
 10198 ;; Hardware stack levels required when called: 4
 10199 ;; This function calls:
 10200 ;;		_TurnDelay
 10201 ;;		_stop
 10202 ;;		_turnLeft
 10203 ;; This function is called by:
 10204 ;;		_GreenMove
 10205 ;;		_PinkMove
 10206 ;;		_LightBlueMove
 10207 ;;		_ReversePink
 10208 ;;		_turnCalibration
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text53
 10213   005D1C                     __ptext53:
 10214                           	callstack 0
 10215   005D1C                     _turnLeft45:
 10216                           	callstack 25
 10217   005D1C                     
 10218                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10219   005D1C  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10220   005D20  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10221   005D24  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10222   005D28  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10223   005D2C  EC54  F028         	call	_turnLeft	;wreg free
 10224   005D30                     
 10225                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10226   005D30  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10227   005D34  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10228   005D38  ECD3  F02F         	call	_TurnDelay	;wreg free
 10229   005D3C                     
 10230                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10231   005D3C  0E61               	movlw	low _motorL
 10232   005D3E  6E14               	movwf	stop@mL^0,c
 10233   005D40  0E01               	movlw	high _motorL
 10234   005D42  6E15               	movwf	(stop@mL+1)^0,c
 10235   005D44  0E58               	movlw	low _motorR
 10236   005D46  6E16               	movwf	stop@mR^0,c
 10237   005D48  0E01               	movlw	high _motorR
 10238   005D4A  6E17               	movwf	(stop@mR+1)^0,c
 10239   005D4C  EC85  F029         	call	_stop	;wreg free
 10240   005D50                     
 10241                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10242   005D50  0E05               	movlw	5
 10243   005D52  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10244   005D54  0E0F               	movlw	15
 10245   005D56  6E1E               	movwf	??_turnLeft45^0,c
 10246   005D58  0EF1               	movlw	241
 10247   005D5A                     u6037:
 10248   005D5A  2EE8               	decfsz	wreg,f,c
 10249   005D5C  D7FE               	bra	u6037
 10250   005D5E  2E1E               	decfsz	??_turnLeft45^0,f,c
 10251   005D60  D7FC               	bra	u6037
 10252   005D62  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10253   005D64  D7FA               	bra	u6037
 10254   005D66  F000               	nop	
 10255   005D68  0012               	return		;funcret
 10256   005D6A                     __end_of_turnLeft45:
 10257                           	callstack 0
 10258                           
 10259 ;; *************** function _turnLeft *****************
 10260 ;; Defined at:
 10261 ;;		line 112 in file "dc_motor.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10264 ;;		 -> motorL(9), 
 10265 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10266 ;;		 -> motorR(9), 
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;		None
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10282 ;;Total ram usage:        6 bytes
 10283 ;; Hardware stack levels used: 1
 10284 ;; Hardware stack levels required when called: 3
 10285 ;; This function calls:
 10286 ;;		_setMotorPWM
 10287 ;; This function is called by:
 10288 ;;		_turnLeft45
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text54
 10293   0050A8                     __ptext54:
 10294                           	callstack 0
 10295   0050A8                     _turnLeft:
 10296                           	callstack 25
 10297   0050A8                     
 10298                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10299   0050A8  EE20 F001          	lfsr	2,1
 10300   0050AC  5014               	movf	turnLeft@mL^0,w,c
 10301   0050AE  26D9               	addwf	fsr2l,f,c
 10302   0050B0  5015               	movf	(turnLeft@mL+1)^0,w,c
 10303   0050B2  22DA               	addwfc	fsr2h,f,c
 10304   0050B4  0E00               	movlw	0
 10305   0050B6  6EDF               	movwf	indf2,c
 10306                           
 10307                           ;dc_motor.c: 115:     mR->direction =1;
 10308   0050B8  EE20 F001          	lfsr	2,1
 10309   0050BC  5016               	movf	turnLeft@mR^0,w,c
 10310   0050BE  26D9               	addwf	fsr2l,f,c
 10311   0050C0  5017               	movf	(turnLeft@mR+1)^0,w,c
 10312   0050C2  22DA               	addwfc	fsr2h,f,c
 10313   0050C4  0E01               	movlw	1
 10314   0050C6  6EDF               	movwf	indf2,c
 10315                           
 10316                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10317   0050C8  EF8A  F028         	goto	l4145
 10318   0050CC                     l4137:
 10319                           
 10320                           ;dc_motor.c: 119:         mL->power+=10;
 10321   0050CC  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10322   0050D0  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10323   0050D4  0E0A               	movlw	10
 10324   0050D6  26DF               	addwf	indf2,f,c
 10325                           
 10326                           ;dc_motor.c: 120:         mR->power+=10;
 10327   0050D8  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10328   0050DC  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10329   0050E0  0E0A               	movlw	10
 10330   0050E2  26DF               	addwf	indf2,f,c
 10331   0050E4                     
 10332                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10333   0050E4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10334   0050E8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10335   0050EC  EC54  F023         	call	_setMotorPWM	;wreg free
 10336   0050F0                     
 10337                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10338   0050F0  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10339   0050F4  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10340   0050F8  EC54  F023         	call	_setMotorPWM	;wreg free
 10341   0050FC                     
 10342                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10343   0050FC  0E02               	movlw	2
 10344   0050FE  6E19               	movwf	(??_turnLeft+1)^0,c
 10345   005100  0EA0               	movlw	160
 10346   005102  6E18               	movwf	??_turnLeft^0,c
 10347   005104  0E92               	movlw	146
 10348   005106                     u6047:
 10349   005106  2EE8               	decfsz	wreg,f,c
 10350   005108  D7FE               	bra	u6047
 10351   00510A  2E18               	decfsz	??_turnLeft^0,f,c
 10352   00510C  D7FC               	bra	u6047
 10353   00510E  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10354   005110  D7FA               	bra	u6047
 10355   005112  D000               	nop2	
 10356   005114                     l4145:
 10357   005114  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10358   005118  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10359   00511C  0E32               	movlw	50
 10360   00511E  60DF               	cpfslt	indf2,c
 10361   005120  EF94  F028         	goto	u3451
 10362   005124  EF96  F028         	goto	u3450
 10363   005128                     u3451:
 10364   005128  EFA2  F028         	goto	l438
 10365   00512C                     u3450:
 10366   00512C  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10367   005130  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10368   005134  0E31               	movlw	49
 10369   005136  64DF               	cpfsgt	indf2,c
 10370   005138  EFA0  F028         	goto	u3461
 10371   00513C  EFA2  F028         	goto	u3460
 10372   005140                     u3461:
 10373   005140  EF66  F028         	goto	l4137
 10374   005144                     u3460:
 10375   005144                     l438:
 10376   005144  0012               	return		;funcret
 10377   005146                     __end_of_turnLeft:
 10378                           	callstack 0
 10379                           
 10380 ;; *************** function _TurnDelay *****************
 10381 ;; Defined at:
 10382 ;;		line 205 in file "dc_motor.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  Turn45Delay     2    0[COMRAM] int 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;		None
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      void 
 10389 ;; Registers used:
 10390 ;;		wreg, status,2, status,0
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;Total ram usage:        3 bytes
 10401 ;; Hardware stack levels used: 1
 10402 ;; Hardware stack levels required when called: 1
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_turnRight45
 10407 ;;		_turnLeft45
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text55
 10412   005FA6                     __ptext55:
 10413                           	callstack 0
 10414   005FA6                     _TurnDelay:
 10415                           	callstack 27
 10416   005FA6                     
 10417                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10418   005FA6  EFE0  F02F         	goto	l473
 10419   005FAA                     l4179:
 10420                           
 10421                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10422   005FAA  0E15               	movlw	21
 10423   005FAC  6E03               	movwf	??_TurnDelay^0,c
 10424   005FAE  0EC6               	movlw	198
 10425   005FB0                     u6057:
 10426   005FB0  2EE8               	decfsz	wreg,f,c
 10427   005FB2  D7FE               	bra	u6057
 10428   005FB4  2E03               	decfsz	??_TurnDelay^0,f,c
 10429   005FB6  D7FC               	bra	u6057
 10430   005FB8  D000               	nop2	
 10431   005FBA                     
 10432                           ;dc_motor.c: 208:         Turn45Delay--;
 10433   005FBA  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10434   005FBC  A0D8               	btfss	status,0,c
 10435   005FBE  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10436   005FC0                     l473:
 10437                           
 10438                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10439   005FC0  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10440   005FC2  EFED  F02F         	goto	u3510
 10441   005FC6  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10442   005FC8  E106               	bnz	u3511
 10443   005FCA  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10444   005FCC  B0D8               	btfsc	status,0,c
 10445   005FCE  EFEB  F02F         	goto	u3511
 10446   005FD2  EFED  F02F         	goto	u3510
 10447   005FD6                     u3511:
 10448   005FD6  EFD5  F02F         	goto	l4179
 10449   005FDA                     u3510:
 10450   005FDA  0012               	return		;funcret
 10451   005FDC                     __end_of_TurnDelay:
 10452                           	callstack 0
 10453                           
 10454 ;; *************** function _reverseOneBlock *****************
 10455 ;; Defined at:
 10456 ;;		line 239 in file "dc_motor.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10459 ;;		 -> motorL(9), 
 10460 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10461 ;;		 -> motorR(9), 
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;		None
 10464 ;; Return value:  Size  Location     Type
 10465 ;;                  1    wreg      void 
 10466 ;; Registers used:
 10467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;Total ram usage:        6 bytes
 10478 ;; Hardware stack levels used: 1
 10479 ;; Hardware stack levels required when called: 4
 10480 ;; This function calls:
 10481 ;;		_fullSpeedBack
 10482 ;;		_stop
 10483 ;; This function is called by:
 10484 ;;		_YellowMove
 10485 ;;		_PinkMove
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text56
 10490   005854                     __ptext56:
 10491                           	callstack 0
 10492   005854                     _reverseOneBlock:
 10493                           	callstack 24
 10494   005854                     
 10495                           ;dc_motor.c: 240:     fullSpeedBack(mL,mR);
 10496   005854  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10497   005858  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10498   00585C  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10499   005860  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10500   005864  ECA3  F028         	call	_fullSpeedBack	;wreg free
 10501   005868                     
 10502                           ;dc_motor.c: 241:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10503   005868  0E56               	movlw	86
 10504   00586A  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10505   00586C  0E3A               	movlw	58
 10506   00586E  6E1E               	movwf	??_reverseOneBlock^0,c
 10507   005870  0EF4               	movlw	244
 10508   005872                     u6067:
 10509   005872  2EE8               	decfsz	wreg,f,c
 10510   005874  D7FE               	bra	u6067
 10511   005876  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10512   005878  D7FC               	bra	u6067
 10513   00587A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10514   00587C  D7FA               	bra	u6067
 10515   00587E                     
 10516                           ;dc_motor.c: 242:     stop(&motorL, &motorR);
 10517   00587E  0E61               	movlw	low _motorL
 10518   005880  6E14               	movwf	stop@mL^0,c
 10519   005882  0E01               	movlw	high _motorL
 10520   005884  6E15               	movwf	(stop@mL+1)^0,c
 10521   005886  0E58               	movlw	low _motorR
 10522   005888  6E16               	movwf	stop@mR^0,c
 10523   00588A  0E01               	movlw	high _motorR
 10524   00588C  6E17               	movwf	(stop@mR+1)^0,c
 10525   00588E  EC85  F029         	call	_stop	;wreg free
 10526                           
 10527                           ;dc_motor.c: 243:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10528   005892  0E05               	movlw	5
 10529   005894  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10530   005896  0E0F               	movlw	15
 10531   005898  6E1E               	movwf	??_reverseOneBlock^0,c
 10532   00589A  0EF1               	movlw	241
 10533   00589C                     u6077:
 10534   00589C  2EE8               	decfsz	wreg,f,c
 10535   00589E  D7FE               	bra	u6077
 10536   0058A0  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10537   0058A2  D7FC               	bra	u6077
 10538   0058A4  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10539   0058A6  D7FA               	bra	u6077
 10540   0058A8  F000               	nop	
 10541   0058AA  0012               	return		;funcret
 10542   0058AC                     __end_of_reverseOneBlock:
 10543                           	callstack 0
 10544                           
 10545 ;; *************** function _reverseDetect *****************
 10546 ;; Defined at:
 10547 ;;		line 226 in file "dc_motor.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10550 ;;		 -> motorL(9), 
 10551 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10552 ;;		 -> motorR(9), 
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;		None
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 0/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10568 ;;Total ram usage:        6 bytes
 10569 ;; Hardware stack levels used: 1
 10570 ;; Hardware stack levels required when called: 4
 10571 ;; This function calls:
 10572 ;;		_fullSpeedBack
 10573 ;;		_stop
 10574 ;; This function is called by:
 10575 ;;		_RedMove
 10576 ;;		_GreenMove
 10577 ;;		_BlueMove
 10578 ;;		_YellowMove
 10579 ;;		_PinkMove
 10580 ;;		_OrangeMove
 10581 ;;		_LightBlueMove
 10582 ;;		_RetryMove
 10583 ;;		_ReverseYellow
 10584 ;;		_ReversePink
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           	psect	text57
 10589   005748                     __ptext57:
 10590                           	callstack 0
 10591   005748                     _reverseDetect:
 10592                           	callstack 24
 10593   005748                     
 10594                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10595   005748  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10596   00574C  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10597   005750  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10598   005754  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10599   005758  ECA3  F028         	call	_fullSpeedBack	;wreg free
 10600   00575C                     
 10601                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10602   00575C  0E11               	movlw	17
 10603   00575E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10604   005760  0E3C               	movlw	60
 10605   005762  6E1E               	movwf	??_reverseDetect^0,c
 10606   005764  0ECB               	movlw	203
 10607   005766                     u6087:
 10608   005766  2EE8               	decfsz	wreg,f,c
 10609   005768  D7FE               	bra	u6087
 10610   00576A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10611   00576C  D7FC               	bra	u6087
 10612   00576E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10613   005770  D7FA               	bra	u6087
 10614   005772  F000               	nop	
 10615   005774                     
 10616                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10617   005774  0E61               	movlw	low _motorL
 10618   005776  6E14               	movwf	stop@mL^0,c
 10619   005778  0E01               	movlw	high _motorL
 10620   00577A  6E15               	movwf	(stop@mL+1)^0,c
 10621   00577C  0E58               	movlw	low _motorR
 10622   00577E  6E16               	movwf	stop@mR^0,c
 10623   005780  0E01               	movlw	high _motorR
 10624   005782  6E17               	movwf	(stop@mR+1)^0,c
 10625   005784  EC85  F029         	call	_stop	;wreg free
 10626                           
 10627                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10628   005788  0E05               	movlw	5
 10629   00578A  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10630   00578C  0E0F               	movlw	15
 10631   00578E  6E1E               	movwf	??_reverseDetect^0,c
 10632   005790  0EF1               	movlw	241
 10633   005792                     u6097:
 10634   005792  2EE8               	decfsz	wreg,f,c
 10635   005794  D7FE               	bra	u6097
 10636   005796  2E1E               	decfsz	??_reverseDetect^0,f,c
 10637   005798  D7FC               	bra	u6097
 10638   00579A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10639   00579C  D7FA               	bra	u6097
 10640   00579E  F000               	nop	
 10641   0057A0  0012               	return		;funcret
 10642   0057A2                     __end_of_reverseDetect:
 10643                           	callstack 0
 10644                           
 10645 ;; *************** function _fullSpeedBack *****************
 10646 ;; Defined at:
 10647 ;;		line 186 in file "dc_motor.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10650 ;;		 -> motorL(9), 
 10651 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10652 ;;		 -> motorR(9), 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;Total ram usage:        6 bytes
 10669 ;; Hardware stack levels used: 1
 10670 ;; Hardware stack levels required when called: 3
 10671 ;; This function calls:
 10672 ;;		_setMotorPWM
 10673 ;; This function is called by:
 10674 ;;		_reverseDetect
 10675 ;;		_homeReverse
 10676 ;;		_reverseOneBlock
 10677 ;;		_Backhalfblock
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           	psect	text58
 10682   005146                     __ptext58:
 10683                           	callstack 0
 10684   005146                     _fullSpeedBack:
 10685                           	callstack 25
 10686   005146                     
 10687                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10688   005146  EE20 F001          	lfsr	2,1
 10689   00514A  5014               	movf	fullSpeedBack@mL^0,w,c
 10690   00514C  26D9               	addwf	fsr2l,f,c
 10691   00514E  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10692   005150  22DA               	addwfc	fsr2h,f,c
 10693   005152  0E00               	movlw	0
 10694   005154  6EDF               	movwf	indf2,c
 10695                           
 10696                           ;dc_motor.c: 190:     mR->direction =0;
 10697   005156  EE20 F001          	lfsr	2,1
 10698   00515A  5016               	movf	fullSpeedBack@mR^0,w,c
 10699   00515C  26D9               	addwf	fsr2l,f,c
 10700   00515E  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10701   005160  22DA               	addwfc	fsr2h,f,c
 10702   005162  0E00               	movlw	0
 10703   005164  6EDF               	movwf	indf2,c
 10704                           
 10705                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10706   005166  EFD9  F028         	goto	l4173
 10707   00516A                     l4165:
 10708                           
 10709                           ;dc_motor.c: 193:         mL->power+=10;
 10710   00516A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10711   00516E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10712   005172  0E0A               	movlw	10
 10713   005174  26DF               	addwf	indf2,f,c
 10714                           
 10715                           ;dc_motor.c: 194:         mR->power+=10;
 10716   005176  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10717   00517A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10718   00517E  0E0A               	movlw	10
 10719   005180  26DF               	addwf	indf2,f,c
 10720   005182                     
 10721                           ;dc_motor.c: 196:         setMotorPWM(mL);
 10722   005182  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10723   005186  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10724   00518A  EC54  F023         	call	_setMotorPWM	;wreg free
 10725   00518E                     
 10726                           ;dc_motor.c: 197:         setMotorPWM(mR);
 10727   00518E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10728   005192  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10729   005196  EC54  F023         	call	_setMotorPWM	;wreg free
 10730   00519A                     
 10731                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10732   00519A  0E02               	movlw	2
 10733   00519C  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10734   00519E  0EA0               	movlw	160
 10735   0051A0  6E18               	movwf	??_fullSpeedBack^0,c
 10736   0051A2  0E92               	movlw	146
 10737   0051A4                     u6107:
 10738   0051A4  2EE8               	decfsz	wreg,f,c
 10739   0051A6  D7FE               	bra	u6107
 10740   0051A8  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10741   0051AA  D7FC               	bra	u6107
 10742   0051AC  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10743   0051AE  D7FA               	bra	u6107
 10744   0051B0  D000               	nop2	
 10745   0051B2                     l4173:
 10746   0051B2  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10747   0051B6  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10748   0051BA  0E32               	movlw	50
 10749   0051BC  60DF               	cpfslt	indf2,c
 10750   0051BE  EFE3  F028         	goto	u3491
 10751   0051C2  EFE5  F028         	goto	u3490
 10752   0051C6                     u3491:
 10753   0051C6  EFF1  F028         	goto	l470
 10754   0051CA                     u3490:
 10755   0051CA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10756   0051CE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10757   0051D2  0E31               	movlw	49
 10758   0051D4  64DF               	cpfsgt	indf2,c
 10759   0051D6  EFEF  F028         	goto	u3501
 10760   0051DA  EFF1  F028         	goto	u3500
 10761   0051DE                     u3501:
 10762   0051DE  EFB5  F028         	goto	l4165
 10763   0051E2                     u3500:
 10764   0051E2                     l470:
 10765   0051E2  0012               	return		;funcret
 10766   0051E4                     __end_of_fullSpeedBack:
 10767                           	callstack 0
 10768                           
 10769 ;; *************** function _color_click_init *****************
 10770 ;; Defined at:
 10771 ;;		line 8 in file "color.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;		None
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2, status,0, cstack
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;Total ram usage:        1 bytes
 10790 ;; Hardware stack levels used: 1
 10791 ;; Hardware stack levels required when called: 4
 10792 ;; This function calls:
 10793 ;;		_I2C_2_Master_Init
 10794 ;;		_color_writetoaddr
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text59
 10801   005A9C                     __ptext59:
 10802                           	callstack 0
 10803   005A9C                     _color_click_init:
 10804                           	callstack 26
 10805   005A9C                     
 10806                           ;color.c: 11:     I2C_2_Master_Init();
 10807   005A9C  EC06  F030         	call	_I2C_2_Master_Init	;wreg free
 10808   005AA0                     
 10809                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 10810   005AA0  0E01               	movlw	1
 10811   005AA2  6E03               	movwf	color_writetoaddr@value^0,c
 10812   005AA4  0E00               	movlw	0
 10813   005AA6  EC55  F030         	call	_color_writetoaddr
 10814   005AAA                     
 10815                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10816   005AAA  0E3F               	movlw	63
 10817   005AAC  6E05               	movwf	??_color_click_init^0,c
 10818   005AAE  0E55               	movlw	85
 10819   005AB0                     u6117:
 10820   005AB0  2EE8               	decfsz	wreg,f,c
 10821   005AB2  D7FE               	bra	u6117
 10822   005AB4  2E05               	decfsz	??_color_click_init^0,f,c
 10823   005AB6  D7FC               	bra	u6117
 10824   005AB8  F000               	nop	
 10825   005ABA                     
 10826                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 10827   005ABA  0E03               	movlw	3
 10828   005ABC  6E03               	movwf	color_writetoaddr@value^0,c
 10829   005ABE  0E00               	movlw	0
 10830   005AC0  EC55  F030         	call	_color_writetoaddr
 10831   005AC4                     
 10832                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 10833   005AC4  0ED5               	movlw	213
 10834   005AC6  6E03               	movwf	color_writetoaddr@value^0,c
 10835   005AC8  0E01               	movlw	1
 10836   005ACA  EC55  F030         	call	_color_writetoaddr
 10837   005ACE                     
 10838                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 10839   005ACE  0E00               	movlw	0
 10840   005AD0  6E03               	movwf	color_writetoaddr@value^0,c
 10841   005AD2  0E0F               	movlw	15
 10842   005AD4  EC55  F030         	call	_color_writetoaddr
 10843   005AD8                     
 10844                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 10845   005AD8  9287               	bcf	135,1,c	;volatile
 10846   005ADA                     
 10847                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 10848   005ADA  9881               	bcf	129,4,c	;volatile
 10849   005ADC                     
 10850                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 10851   005ADC  9E86               	bcf	134,7,c	;volatile
 10852   005ADE                     
 10853                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 10854   005ADE  9684               	bcf	132,3,c	;volatile
 10855   005AE0                     
 10856                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 10857   005AE0  9884               	bcf	132,4,c	;volatile
 10858   005AE2                     
 10859                           ;color.c: 29:     LATGbits.LATG1=0;
 10860   005AE2  927F               	bcf	127,1,c	;volatile
 10861   005AE4                     
 10862                           ;color.c: 30:     LATFbits.LATF7=0;
 10863   005AE4  9E7E               	bcf	126,7,c	;volatile
 10864   005AE6                     
 10865                           ;color.c: 31:     LATAbits.LATA4=0;
 10866   005AE6  9879               	bcf	121,4,c	;volatile
 10867   005AE8                     
 10868                           ;color.c: 33:     LATDbits.LATD3=0;
 10869   005AE8  967C               	bcf	124,3,c	;volatile
 10870   005AEA                     
 10871                           ;color.c: 34:     LATDbits.LATD4=0;
 10872   005AEA  987C               	bcf	124,4,c	;volatile
 10873   005AEC  0012               	return		;funcret
 10874   005AEE                     __end_of_color_click_init:
 10875                           	callstack 0
 10876                           
 10877 ;; *************** function _color_writetoaddr *****************
 10878 ;; Defined at:
 10879 ;;		line 42 in file "color.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  address         1    wreg     unsigned char 
 10882 ;;  value           1    2[COMRAM] unsigned char 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  address         1    3[COMRAM] unsigned char 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  1    wreg      void 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, cstack
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10894 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;Total ram usage:        2 bytes
 10899 ;; Hardware stack levels used: 1
 10900 ;; Hardware stack levels required when called: 3
 10901 ;; This function calls:
 10902 ;;		_I2C_2_Master_Start
 10903 ;;		_I2C_2_Master_Stop
 10904 ;;		_I2C_2_Master_Write
 10905 ;; This function is called by:
 10906 ;;		_color_click_init
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           
 10910                           	psect	text60
 10911   0060AA                     __ptext60:
 10912                           	callstack 0
 10913   0060AA                     _color_writetoaddr:
 10914                           	callstack 26
 10915                           
 10916                           ;incstack = 0
 10917                           ;color_writetoaddr@address stored from wreg
 10918   0060AA  6E04               	movwf	color_writetoaddr@address^0,c
 10919   0060AC                     
 10920                           ;color.c: 43:     I2C_2_Master_Start();
 10921   0060AC  ECAC  F030         	call	_I2C_2_Master_Start	;wreg free
 10922                           
 10923                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 10924   0060B0  0E52               	movlw	82
 10925   0060B2  EC90  F030         	call	_I2C_2_Master_Write
 10926                           
 10927                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 10928   0060B6  5004               	movf	color_writetoaddr@address^0,w,c
 10929   0060B8  0980               	iorlw	128
 10930   0060BA  EC90  F030         	call	_I2C_2_Master_Write
 10931                           
 10932                           ;color.c: 46:     I2C_2_Master_Write(value);
 10933   0060BE  5003               	movf	color_writetoaddr@value^0,w,c
 10934   0060C0  EC90  F030         	call	_I2C_2_Master_Write
 10935                           
 10936                           ;color.c: 47:     I2C_2_Master_Stop();
 10937   0060C4  ECA7  F030         	call	_I2C_2_Master_Stop	;wreg free
 10938   0060C8  0012               	return		;funcret
 10939   0060CA                     __end_of_color_writetoaddr:
 10940                           	callstack 0
 10941                           
 10942 ;; *************** function _I2C_2_Master_Write *****************
 10943 ;; Defined at:
 10944 ;;		line 45 in file "i2c.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  data_byte       1    wreg     unsigned char 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  data_byte       1    1[COMRAM] unsigned char 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  1    wreg      void 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0, cstack
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10962 ;;Total ram usage:        1 bytes
 10963 ;; Hardware stack levels used: 1
 10964 ;; Hardware stack levels required when called: 2
 10965 ;; This function calls:
 10966 ;;		_I2C_2_Master_Idle
 10967 ;; This function is called by:
 10968 ;;		_color_writetoaddr
 10969 ;;		_color_read_lum
 10970 ;;		_color_read_Red
 10971 ;;		_color_read_Green
 10972 ;;		_color_read_Blue
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           	psect	text61
 10977   006120                     __ptext61:
 10978                           	callstack 0
 10979   006120                     _I2C_2_Master_Write:
 10980                           	callstack 26
 10981                           
 10982                           ;incstack = 0
 10983                           ;I2C_2_Master_Write@data_byte stored from wreg
 10984   006120  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10985   006122                     
 10986                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10987   006122  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
 10988   006126                     
 10989                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10990   006126  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10991   00612A  0012               	return		;funcret
 10992   00612C                     __end_of_I2C_2_Master_Write:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _I2C_2_Master_Stop *****************
 10996 ;; Defined at:
 10997 ;;		line 39 in file "i2c.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0, cstack
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; Hardware stack levels required when called: 2
 11018 ;; This function calls:
 11019 ;;		_I2C_2_Master_Idle
 11020 ;; This function is called by:
 11021 ;;		_color_writetoaddr
 11022 ;;		_color_read_lum
 11023 ;;		_color_read_Red
 11024 ;;		_color_read_Green
 11025 ;;		_color_read_Blue
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text62
 11030   00614E                     __ptext62:
 11031                           	callstack 0
 11032   00614E                     _I2C_2_Master_Stop:
 11033                           	callstack 26
 11034   00614E                     
 11035                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11036   00614E  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
 11037   006152                     
 11038                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11039   006152  010E               	movlb	14	; () banked
 11040   006154  85DA               	bsf	218,2,b	;volatile
 11041   006156                     
 11042                           ; BSR set to: 14
 11043   006156  0012               	return		;funcret
 11044   006158                     __end_of_I2C_2_Master_Stop:
 11045                           	callstack 0
 11046                           
 11047 ;; *************** function _I2C_2_Master_Start *****************
 11048 ;; Defined at:
 11049 ;;		line 27 in file "i2c.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used: 1
 11069 ;; Hardware stack levels required when called: 2
 11070 ;; This function calls:
 11071 ;;		_I2C_2_Master_Idle
 11072 ;; This function is called by:
 11073 ;;		_color_writetoaddr
 11074 ;;		_color_read_lum
 11075 ;;		_color_read_Red
 11076 ;;		_color_read_Green
 11077 ;;		_color_read_Blue
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text63
 11082   006158                     __ptext63:
 11083                           	callstack 0
 11084   006158                     _I2C_2_Master_Start:
 11085                           	callstack 26
 11086   006158                     
 11087                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11088   006158  EC1B  F030         	call	_I2C_2_Master_Idle	;wreg free
 11089   00615C                     
 11090                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11091   00615C  010E               	movlb	14	; () banked
 11092   00615E  81DA               	bsf	218,0,b	;volatile
 11093   006160                     
 11094                           ; BSR set to: 14
 11095   006160  0012               	return		;funcret
 11096   006162                     __end_of_I2C_2_Master_Start:
 11097                           	callstack 0
 11098                           
 11099 ;; *************** function _I2C_2_Master_Idle *****************
 11100 ;; Defined at:
 11101 ;;		line 22 in file "i2c.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;		None
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;		None
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  1    wreg      void 
 11108 ;; Registers used:
 11109 ;;		wreg, status,2, status,0
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;Total ram usage:        1 bytes
 11120 ;; Hardware stack levels used: 1
 11121 ;; Hardware stack levels required when called: 1
 11122 ;; This function calls:
 11123 ;;		Nothing
 11124 ;; This function is called by:
 11125 ;;		_I2C_2_Master_Start
 11126 ;;		_I2C_2_Master_RepStart
 11127 ;;		_I2C_2_Master_Stop
 11128 ;;		_I2C_2_Master_Write
 11129 ;;		_I2C_2_Master_Read
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text64
 11134   006036                     __ptext64:
 11135                           	callstack 0
 11136   006036                     _I2C_2_Master_Idle:
 11137                           	callstack 26
 11138   006036                     l135:
 11139   006036  010E               	movlb	14	; () banked
 11140   006038  B5D8               	btfsc	216,2,b	;volatile
 11141   00603A  EF21  F030         	goto	u4461
 11142   00603E  EF23  F030         	goto	u4460
 11143   006042                     u4461:
 11144   006042  EF1B  F030         	goto	l135
 11145   006046                     u4460:
 11146   006046                     
 11147                           ; BSR set to: 14
 11148   006046  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11149   00604A  0E1F               	movlw	31
 11150   00604C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11151   00604E  A4D8               	btfss	status,2,c
 11152   006050  EF2C  F030         	goto	u4471
 11153   006054  EF2E  F030         	goto	u4470
 11154   006058                     u4471:
 11155   006058  EF1B  F030         	goto	l135
 11156   00605C                     u4470:
 11157   00605C                     
 11158                           ; BSR set to: 14
 11159   00605C  0012               	return		;funcret
 11160   00605E                     __end_of_I2C_2_Master_Idle:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function _I2C_2_Master_Init *****************
 11164 ;; Defined at:
 11165 ;;		line 4 in file "i2c.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;		None
 11168 ;; Auto vars:     Size  Location     Type
 11169 ;;		None
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, status,2
 11174 ;; Tracked objects:
 11175 ;;		On entry : 0/0
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11183 ;;Total ram usage:        0 bytes
 11184 ;; Hardware stack levels used: 1
 11185 ;; Hardware stack levels required when called: 1
 11186 ;; This function calls:
 11187 ;;		Nothing
 11188 ;; This function is called by:
 11189 ;;		_color_click_init
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text65
 11195   00600C                     __ptext65:
 11196                           	callstack 0
 11197   00600C                     _I2C_2_Master_Init:
 11198                           	callstack 28
 11199   00600C                     
 11200                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11201   00600C  010E               	movlb	14	; () banked
 11202   00600E  51D9               	movf	217,w,b	;volatile
 11203   006010  0BF0               	andlw	-16
 11204   006012  0908               	iorlw	8
 11205   006014  6FD9               	movwf	217,b	;volatile
 11206   006016                     
 11207                           ; BSR set to: 14
 11208                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11209   006016  8BD9               	bsf	217,5,b	;volatile
 11210                           
 11211                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11212   006018  0E9F               	movlw	159
 11213   00601A  6FD6               	movwf	214,b	;volatile
 11214   00601C                     
 11215                           ; BSR set to: 14
 11216                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11217   00601C  8A84               	bsf	132,5,c	;volatile
 11218   00601E                     
 11219                           ; BSR set to: 14
 11220                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11221   00601E  8C84               	bsf	132,6,c	;volatile
 11222   006020                     
 11223                           ; BSR set to: 14
 11224                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11225   006020  9BA7               	bcf	167,5,b	;volatile
 11226   006022                     
 11227                           ; BSR set to: 14
 11228                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11229   006022  9DA7               	bcf	167,6,b	;volatile
 11230                           
 11231                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11232   006024  0E1D               	movlw	29
 11233   006026  6F1D               	movwf	29,b	;volatile
 11234                           
 11235                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11236   006028  0E1E               	movlw	30
 11237   00602A  6F1C               	movwf	28,b	;volatile
 11238                           
 11239                           ;i2c.c: 18:   RD5PPS=0x1C;
 11240   00602C  0E1C               	movlw	28
 11241   00602E  6F6F               	movwf	111,b	;volatile
 11242                           
 11243                           ;i2c.c: 19:   RD6PPS=0x1B;
 11244   006030  0E1B               	movlw	27
 11245   006032  6F70               	movwf	112,b	;volatile
 11246   006034                     
 11247                           ; BSR set to: 14
 11248   006034  0012               	return		;funcret
 11249   006036                     __end_of_I2C_2_Master_Init:
 11250                           	callstack 0
 11251                           
 11252 ;; *************** function _Timer0_init *****************
 11253 ;; Defined at:
 11254 ;;		line 8 in file "timers.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;		None
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;Total ram usage:        0 bytes
 11273 ;; Hardware stack levels used: 1
 11274 ;; Hardware stack levels required when called: 1
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_main
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text66
 11283   0060CA                     __ptext66:
 11284                           	callstack 0
 11285   0060CA                     _Timer0_init:
 11286                           	callstack 29
 11287   0060CA                     
 11288                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11289   0060CA  50D6               	movf	214,w,c	;volatile
 11290   0060CC  0B1F               	andlw	-225
 11291   0060CE  0940               	iorlw	64
 11292   0060D0  6ED6               	movwf	214,c	;volatile
 11293   0060D2                     
 11294                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11295   0060D2  88D6               	bsf	214,4,c	;volatile
 11296                           
 11297                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11298   0060D4  50D6               	movf	214,w,c	;volatile
 11299   0060D6  0BF0               	andlw	-16
 11300   0060D8  090D               	iorlw	13
 11301   0060DA  6ED6               	movwf	214,c	;volatile
 11302   0060DC                     
 11303                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11304   0060DC  88D5               	bsf	213,4,c	;volatile
 11305                           
 11306                           ;timers.c: 16:     TMR0H=0;
 11307   0060DE  0E00               	movlw	0
 11308   0060E0  6ED4               	movwf	212,c	;volatile
 11309                           
 11310                           ;timers.c: 17:     TMR0L=0;
 11311   0060E2  0E00               	movlw	0
 11312   0060E4  6ED3               	movwf	211,c	;volatile
 11313   0060E6                     
 11314                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11315   0060E6  9ED5               	bcf	213,7,c	;volatile
 11316   0060E8  0012               	return		;funcret
 11317   0060EA                     __end_of_Timer0_init:
 11318                           	callstack 0
 11319                           
 11320 ;; *************** function _LED_init *****************
 11321 ;; Defined at:
 11322 ;;		line 6 in file "LED_buttons.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;		None
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		None
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;Total ram usage:        0 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 1
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_main
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text67
 11351   00605E                     __ptext67:
 11352                           	callstack 0
 11353   00605E                     _LED_init:
 11354                           	callstack 29
 11355   00605E                     
 11356                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11357   00605E  9287               	bcf	135,1,c	;volatile
 11358                           
 11359                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11360   006060  9881               	bcf	129,4,c	;volatile
 11361                           
 11362                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11363   006062  9E86               	bcf	134,7,c	;volatile
 11364                           
 11365                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11366   006064  827F               	bsf	127,1,c	;volatile
 11367                           
 11368                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11369   006066  8879               	bsf	121,4,c	;volatile
 11370                           
 11371                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11372   006068  8E7E               	bsf	126,7,c	;volatile
 11373                           
 11374                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11375   00606A  9E7C               	bcf	124,7,c	;volatile
 11376                           
 11377                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11378   00606C  9E84               	bcf	132,7,c	;volatile
 11379                           
 11380                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11381   00606E  9680               	bcf	128,3,c	;volatile
 11382                           
 11383                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11384   006070  9688               	bcf	136,3,c	;volatile
 11385                           
 11386                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11387   006072  9080               	bcf	128,0,c	;volatile
 11388                           
 11389                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11390   006074  9088               	bcf	136,0,c	;volatile
 11391                           
 11392                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11393   006076  907E               	bcf	126,0,c	;volatile
 11394                           
 11395                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11396   006078  9086               	bcf	134,0,c	;volatile
 11397                           
 11398                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11399   00607A  987C               	bcf	124,4,c	;volatile
 11400                           
 11401                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11402   00607C  9884               	bcf	132,4,c	;volatile
 11403                           
 11404                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11405   00607E  967C               	bcf	124,3,c	;volatile
 11406                           
 11407                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11408   006080  9684               	bcf	132,3,c	;volatile
 11409   006082  0012               	return		;funcret
 11410   006084                     __end_of_LED_init:
 11411                           	callstack 0
 11412                           
 11413 ;; *************** function _Interrupts_init *****************
 11414 ;; Defined at:
 11415 ;;		line 9 in file "interrupts.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;		None
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;		None
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		None
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11433 ;;Total ram usage:        0 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 1
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_main
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text68
 11444   00612C                     __ptext68:
 11445                           	callstack 0
 11446   00612C                     _Interrupts_init:
 11447                           	callstack 29
 11448   00612C                     
 11449                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11450   00612C  9AF2               	bcf	242,5,c	;volatile
 11451                           
 11452                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11453   00612E  9CF2               	bcf	242,6,c	;volatile
 11454                           
 11455                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11456   006130  8EF2               	bsf	242,7,c	;volatile
 11457                           
 11458                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11459   006132  010E               	movlb	14	; () banked
 11460   006134  8B29               	bsf	41,5,b	;volatile
 11461   006136                     
 11462                           ; BSR set to: 14
 11463   006136  0012               	return		;funcret
 11464   006138                     __end_of_Interrupts_init:
 11465                           	callstack 0
 11466                           
 11467 ;; *************** function _Forwardhalfblock *****************
 11468 ;; Defined at:
 11469 ;;		line 252 in file "dc_motor.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11472 ;;		 -> motorL(9), 
 11473 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11474 ;;		 -> motorR(9), 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;Total ram usage:        6 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; Hardware stack levels required when called: 4
 11493 ;; This function calls:
 11494 ;;		_fullSpeedAhead
 11495 ;;		_stop
 11496 ;; This function is called by:
 11497 ;;		_main
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text69
 11502   0057A2                     __ptext69:
 11503                           	callstack 0
 11504   0057A2                     _Forwardhalfblock:
 11505                           	callstack 26
 11506   0057A2                     
 11507                           ;dc_motor.c: 253:     fullSpeedAhead(mL,mR);
 11508   0057A2  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11509   0057A6  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11510   0057AA  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11511   0057AE  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11512   0057B2  ECF2  F028         	call	_fullSpeedAhead	;wreg free
 11513   0057B6                     
 11514                           ;dc_motor.c: 254:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11515   0057B6  0E2B               	movlw	43
 11516   0057B8  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11517   0057BA  0E9D               	movlw	157
 11518   0057BC  6E1E               	movwf	??_Forwardhalfblock^0,c
 11519   0057BE  0EF9               	movlw	249
 11520   0057C0                     u6127:
 11521   0057C0  2EE8               	decfsz	wreg,f,c
 11522   0057C2  D7FE               	bra	u6127
 11523   0057C4  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11524   0057C6  D7FC               	bra	u6127
 11525   0057C8  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11526   0057CA  D7FA               	bra	u6127
 11527   0057CC  F000               	nop	
 11528   0057CE                     
 11529                           ;dc_motor.c: 255:     stop(&motorL, &motorR);
 11530   0057CE  0E61               	movlw	low _motorL
 11531   0057D0  6E14               	movwf	stop@mL^0,c
 11532   0057D2  0E01               	movlw	high _motorL
 11533   0057D4  6E15               	movwf	(stop@mL+1)^0,c
 11534   0057D6  0E58               	movlw	low _motorR
 11535   0057D8  6E16               	movwf	stop@mR^0,c
 11536   0057DA  0E01               	movlw	high _motorR
 11537   0057DC  6E17               	movwf	(stop@mR+1)^0,c
 11538   0057DE  EC85  F029         	call	_stop	;wreg free
 11539                           
 11540                           ;dc_motor.c: 256:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11541   0057E2  0E05               	movlw	5
 11542   0057E4  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11543   0057E6  0E0F               	movlw	15
 11544   0057E8  6E1E               	movwf	??_Forwardhalfblock^0,c
 11545   0057EA  0EF1               	movlw	241
 11546   0057EC                     u6137:
 11547   0057EC  2EE8               	decfsz	wreg,f,c
 11548   0057EE  D7FE               	bra	u6137
 11549   0057F0  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11550   0057F2  D7FC               	bra	u6137
 11551   0057F4  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11552   0057F6  D7FA               	bra	u6137
 11553   0057F8  F000               	nop	
 11554   0057FA  0012               	return		;funcret
 11555   0057FC                     __end_of_Forwardhalfblock:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function _stop *****************
 11559 ;; Defined at:
 11560 ;;		line 94 in file "dc_motor.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11563 ;;		 -> motorL(9), 
 11564 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11565 ;;		 -> motorR(9), 
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;                  1    wreg      void 
 11570 ;; Registers used:
 11571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;Total ram usage:        6 bytes
 11582 ;; Hardware stack levels used: 1
 11583 ;; Hardware stack levels required when called: 3
 11584 ;; This function calls:
 11585 ;;		_setMotorPWM
 11586 ;; This function is called by:
 11587 ;;		_main
 11588 ;;		_turnRight45
 11589 ;;		_turnLeft45
 11590 ;;		_reverseDetect
 11591 ;;		_homeReverse
 11592 ;;		_reverseOneBlock
 11593 ;;		_ForwardOneBlock
 11594 ;;		_Forwardhalfblock
 11595 ;;		_Backhalfblock
 11596 ;;		_RetryMove
 11597 ;;		_go_Home
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text70
 11602   00530A                     __ptext70:
 11603                           	callstack 0
 11604   00530A                     _stop:
 11605                           	callstack 25
 11606   00530A                     
 11607                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11608   00530A  EFAB  F029         	goto	l4131
 11609   00530E                     l4123:
 11610                           
 11611                           ;dc_motor.c: 98:         mL->power-=10;
 11612   00530E  C014  FFD9         	movff	stop@mL,fsr2l
 11613   005312  C015  FFDA         	movff	stop@mL+1,fsr2h
 11614   005316  0E0A               	movlw	10
 11615   005318  5EDF               	subwf	indf2,f,c
 11616                           
 11617                           ;dc_motor.c: 99:         mR->power-=10;
 11618   00531A  C016  FFD9         	movff	stop@mR,fsr2l
 11619   00531E  C017  FFDA         	movff	stop@mR+1,fsr2h
 11620   005322  0E0A               	movlw	10
 11621   005324  5EDF               	subwf	indf2,f,c
 11622   005326                     
 11623                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11624   005326  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11625   00532A  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11626   00532E  EC54  F023         	call	_setMotorPWM	;wreg free
 11627   005332                     
 11628                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11629   005332  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11630   005336  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11631   00533A  EC54  F023         	call	_setMotorPWM	;wreg free
 11632   00533E                     
 11633                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11634   00533E  0E02               	movlw	2
 11635   005340  6E19               	movwf	(??_stop+1)^0,c
 11636   005342  0EA0               	movlw	160
 11637   005344  6E18               	movwf	??_stop^0,c
 11638   005346  0E92               	movlw	146
 11639   005348                     u6147:
 11640   005348  2EE8               	decfsz	wreg,f,c
 11641   00534A  D7FE               	bra	u6147
 11642   00534C  2E18               	decfsz	??_stop^0,f,c
 11643   00534E  D7FC               	bra	u6147
 11644   005350  2E19               	decfsz	(??_stop+1)^0,f,c
 11645   005352  D7FA               	bra	u6147
 11646   005354  D000               	nop2	
 11647   005356                     l4131:
 11648                           
 11649                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11650   005356  C014  FFD9         	movff	stop@mL,fsr2l
 11651   00535A  C015  FFDA         	movff	stop@mL+1,fsr2h
 11652   00535E  50DF               	movf	indf2,w,c
 11653   005360  A4D8               	btfss	status,2,c
 11654   005362  EFB5  F029         	goto	u3431
 11655   005366  EFB7  F029         	goto	u3430
 11656   00536A                     u3431:
 11657   00536A  EF87  F029         	goto	l4123
 11658   00536E                     u3430:
 11659   00536E  C016  FFD9         	movff	stop@mR,fsr2l
 11660   005372  C017  FFDA         	movff	stop@mR+1,fsr2h
 11661   005376  50DF               	movf	indf2,w,c
 11662   005378  A4D8               	btfss	status,2,c
 11663   00537A  EFC1  F029         	goto	u3441
 11664   00537E  EFC3  F029         	goto	u3440
 11665   005382                     u3441:
 11666   005382  EF87  F029         	goto	l4123
 11667   005386                     u3440:
 11668   005386  0012               	return		;funcret
 11669   005388                     __end_of_stop:
 11670                           	callstack 0
 11671                           
 11672 ;; *************** function _fullSpeedAhead *****************
 11673 ;; Defined at:
 11674 ;;		line 148 in file "dc_motor.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11677 ;;		 -> motorL(9), 
 11678 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11679 ;;		 -> motorR(9), 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;Total ram usage:        6 bytes
 11696 ;; Hardware stack levels used: 1
 11697 ;; Hardware stack levels required when called: 3
 11698 ;; This function calls:
 11699 ;;		_setMotorPWM
 11700 ;; This function is called by:
 11701 ;;		_main
 11702 ;;		_ForwardOneBlock
 11703 ;;		_Forwardhalfblock
 11704 ;;		_RetryMove
 11705 ;; This function uses a non-reentrant model
 11706 ;;
 11707                           
 11708                           	psect	text71
 11709   0051E4                     __ptext71:
 11710                           	callstack 0
 11711   0051E4                     _fullSpeedAhead:
 11712                           	callstack 24
 11713   0051E4                     
 11714                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11715   0051E4  EE20 F001          	lfsr	2,1
 11716   0051E8  5014               	movf	fullSpeedAhead@mL^0,w,c
 11717   0051EA  26D9               	addwf	fsr2l,f,c
 11718   0051EC  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11719   0051EE  22DA               	addwfc	fsr2h,f,c
 11720   0051F0  0E01               	movlw	1
 11721   0051F2  6EDF               	movwf	indf2,c
 11722                           
 11723                           ;dc_motor.c: 152:     mR->direction =1;
 11724   0051F4  EE20 F001          	lfsr	2,1
 11725   0051F8  5016               	movf	fullSpeedAhead@mR^0,w,c
 11726   0051FA  26D9               	addwf	fsr2l,f,c
 11727   0051FC  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11728   0051FE  22DA               	addwfc	fsr2h,f,c
 11729   005200  0E01               	movlw	1
 11730   005202  6EDF               	movwf	indf2,c
 11731                           
 11732                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11733   005204  EF28  F029         	goto	l4117
 11734   005208                     l4109:
 11735                           
 11736                           ;dc_motor.c: 155:         mL->power+=10;
 11737   005208  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11738   00520C  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11739   005210  0E0A               	movlw	10
 11740   005212  26DF               	addwf	indf2,f,c
 11741                           
 11742                           ;dc_motor.c: 156:         mR->power+=10;
 11743   005214  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11744   005218  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11745   00521C  0E0A               	movlw	10
 11746   00521E  26DF               	addwf	indf2,f,c
 11747   005220                     
 11748                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11749   005220  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11750   005224  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11751   005228  EC54  F023         	call	_setMotorPWM	;wreg free
 11752   00522C                     
 11753                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11754   00522C  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11755   005230  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11756   005234  EC54  F023         	call	_setMotorPWM	;wreg free
 11757   005238                     
 11758                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11759   005238  0E02               	movlw	2
 11760   00523A  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11761   00523C  0EA0               	movlw	160
 11762   00523E  6E18               	movwf	??_fullSpeedAhead^0,c
 11763   005240  0E92               	movlw	146
 11764   005242                     u6157:
 11765   005242  2EE8               	decfsz	wreg,f,c
 11766   005244  D7FE               	bra	u6157
 11767   005246  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11768   005248  D7FC               	bra	u6157
 11769   00524A  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11770   00524C  D7FA               	bra	u6157
 11771   00524E  D000               	nop2	
 11772   005250                     l4117:
 11773   005250  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11774   005254  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11775   005258  0E32               	movlw	50
 11776   00525A  60DF               	cpfslt	indf2,c
 11777   00525C  EF32  F029         	goto	u3411
 11778   005260  EF34  F029         	goto	u3410
 11779   005264                     u3411:
 11780   005264  EF40  F029         	goto	l454
 11781   005268                     u3410:
 11782   005268  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11783   00526C  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11784   005270  0E31               	movlw	49
 11785   005272  64DF               	cpfsgt	indf2,c
 11786   005274  EF3E  F029         	goto	u3421
 11787   005278  EF40  F029         	goto	u3420
 11788   00527C                     u3421:
 11789   00527C  EF04  F029         	goto	l4109
 11790   005280                     u3420:
 11791   005280                     l454:
 11792   005280  0012               	return		;funcret
 11793   005282                     __end_of_fullSpeedAhead:
 11794                           	callstack 0
 11795                           
 11796 ;; *************** function _setMotorPWM *****************
 11797 ;; Defined at:
 11798 ;;		line 69 in file "dc_motor.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11801 ;;		 -> motorR(9), motorL(9), 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  negDuty         1   18[COMRAM] unsigned char 
 11804 ;;  posDuty         1   17[COMRAM] unsigned char 
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  1    wreg      void 
 11807 ;; Registers used:
 11808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11809 ;; Tracked objects:
 11810 ;;		On entry : 0/0
 11811 ;;		On exit  : 0/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11818 ;;Total ram usage:        6 bytes
 11819 ;; Hardware stack levels used: 1
 11820 ;; Hardware stack levels required when called: 2
 11821 ;; This function calls:
 11822 ;;		___lwdiv
 11823 ;;		___wmul
 11824 ;; This function is called by:
 11825 ;;		_stop
 11826 ;;		_turnLeft
 11827 ;;		_turnRight
 11828 ;;		_fullSpeedAhead
 11829 ;;		_timed_forward
 11830 ;;		_fullSpeedBack
 11831 ;; This function uses a non-reentrant model
 11832 ;;
 11833                           
 11834                           	psect	text72
 11835   0046A8                     __ptext72:
 11836                           	callstack 0
 11837   0046A8                     _setMotorPWM:
 11838                           	callstack 25
 11839   0046A8                     
 11840                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 11841   0046A8  EE20 F002          	lfsr	2,2
 11842   0046AC  500E               	movf	setMotorPWM@m^0,w,c
 11843   0046AE  26D9               	addwf	fsr2l,f,c
 11844   0046B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11845   0046B2  22DA               	addwfc	fsr2h,f,c
 11846   0046B4  50DF               	movf	indf2,w,c
 11847   0046B6  B4D8               	btfsc	status,2,c
 11848   0046B8  EF60  F023         	goto	u2991
 11849   0046BC  EF62  F023         	goto	u2990
 11850   0046C0                     u2991:
 11851   0046C0  EF96  F023         	goto	l3887
 11852   0046C4                     u2990:
 11853   0046C4                     
 11854                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11855   0046C4  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11856   0046C8  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11857   0046CC  50DF               	movf	indf2,w,c
 11858   0046CE  6E10               	movwf	??_setMotorPWM^0,c
 11859   0046D0  5010               	movf	??_setMotorPWM^0,w,c
 11860   0046D2  6E01               	movwf	___wmul@multiplier^0,c
 11861   0046D4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11862   0046D6  EE20 F003          	lfsr	2,3
 11863   0046DA  500E               	movf	setMotorPWM@m^0,w,c
 11864   0046DC  26D9               	addwf	fsr2l,f,c
 11865   0046DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11866   0046E0  22DA               	addwfc	fsr2h,f,c
 11867   0046E2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11868   0046E6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11869   0046EA  EC42  F030         	call	___wmul	;wreg free
 11870   0046EE  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11871   0046F2  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11872   0046F6  0E00               	movlw	0
 11873   0046F8  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11874   0046FA  0E64               	movlw	100
 11875   0046FC  6E09               	movwf	___lwdiv@divisor^0,c
 11876   0046FE  EC3E  F02A         	call	___lwdiv	;wreg free
 11877   004702  EE20 F003          	lfsr	2,3
 11878   004706  500E               	movf	setMotorPWM@m^0,w,c
 11879   004708  26D9               	addwf	fsr2l,f,c
 11880   00470A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11881   00470C  22DA               	addwfc	fsr2h,f,c
 11882   00470E  50DF               	movf	indf2,w,c
 11883   004710  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11884   004712  5007               	movf	?___lwdiv^0,w,c
 11885   004714  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11886   004716  6E12               	movwf	setMotorPWM@posDuty^0,c
 11887   004718                     
 11888                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 11889   004718  EE20 F003          	lfsr	2,3
 11890   00471C  500E               	movf	setMotorPWM@m^0,w,c
 11891   00471E  26D9               	addwf	fsr2l,f,c
 11892   004720  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11893   004722  22DA               	addwfc	fsr2h,f,c
 11894   004724  50DF               	movf	indf2,w,c
 11895   004726  6E13               	movwf	setMotorPWM@negDuty^0,c
 11896                           
 11897                           ;dc_motor.c: 76:     }
 11898   004728  EFB9  F023         	goto	l3891
 11899   00472C                     l3887:
 11900                           
 11901                           ;dc_motor.c: 78:         posDuty=0;
 11902   00472C  0E00               	movlw	0
 11903   00472E  6E12               	movwf	setMotorPWM@posDuty^0,c
 11904   004730                     
 11905                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11906   004730  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11907   004734  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11908   004738  50DF               	movf	indf2,w,c
 11909   00473A  6E10               	movwf	??_setMotorPWM^0,c
 11910   00473C  5010               	movf	??_setMotorPWM^0,w,c
 11911   00473E  6E01               	movwf	___wmul@multiplier^0,c
 11912   004740  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11913   004742  EE20 F003          	lfsr	2,3
 11914   004746  500E               	movf	setMotorPWM@m^0,w,c
 11915   004748  26D9               	addwf	fsr2l,f,c
 11916   00474A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11917   00474C  22DA               	addwfc	fsr2h,f,c
 11918   00474E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11919   004752  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11920   004756  EC42  F030         	call	___wmul	;wreg free
 11921   00475A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11922   00475E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11923   004762  0E00               	movlw	0
 11924   004764  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11925   004766  0E64               	movlw	100
 11926   004768  6E09               	movwf	___lwdiv@divisor^0,c
 11927   00476A  EC3E  F02A         	call	___lwdiv	;wreg free
 11928   00476E  5007               	movf	?___lwdiv^0,w,c
 11929   004770  6E13               	movwf	setMotorPWM@negDuty^0,c
 11930   004772                     l3891:
 11931                           
 11932                           ;dc_motor.c: 82:     if (m->direction) {
 11933   004772  EE20 F001          	lfsr	2,1
 11934   004776  500E               	movf	setMotorPWM@m^0,w,c
 11935   004778  26D9               	addwf	fsr2l,f,c
 11936   00477A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11937   00477C  22DA               	addwfc	fsr2h,f,c
 11938   00477E  50DF               	movf	indf2,w,c
 11939   004780  B4D8               	btfsc	status,2,c
 11940   004782  EFC5  F023         	goto	u3001
 11941   004786  EFC7  F023         	goto	u3000
 11942   00478A                     u3001:
 11943   00478A  EFE9  F023         	goto	l3895
 11944   00478E                     u3000:
 11945   00478E                     
 11946                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 11947   00478E  EE20 F005          	lfsr	2,5
 11948   004792  500E               	movf	setMotorPWM@m^0,w,c
 11949   004794  26D9               	addwf	fsr2l,f,c
 11950   004796  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11951   004798  22DA               	addwfc	fsr2h,f,c
 11952   00479A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11953   00479E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11954   0047A2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11955   0047A6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11956   0047AA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11957                           
 11958                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 11959   0047AE  EE20 F007          	lfsr	2,7
 11960   0047B2  500E               	movf	setMotorPWM@m^0,w,c
 11961   0047B4  26D9               	addwf	fsr2l,f,c
 11962   0047B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11963   0047B8  22DA               	addwfc	fsr2h,f,c
 11964   0047BA  CFDE F010          	movff	postinc2,??_setMotorPWM
 11965   0047BE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11966   0047C2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11967   0047C6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11968   0047CA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11969                           
 11970                           ;dc_motor.c: 87:     } else {
 11971   0047CE  EF09  F024         	goto	l424
 11972   0047D2                     l3895:
 11973                           
 11974                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 11975   0047D2  EE20 F005          	lfsr	2,5
 11976   0047D6  500E               	movf	setMotorPWM@m^0,w,c
 11977   0047D8  26D9               	addwf	fsr2l,f,c
 11978   0047DA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11979   0047DC  22DA               	addwfc	fsr2h,f,c
 11980   0047DE  CFDE F010          	movff	postinc2,??_setMotorPWM
 11981   0047E2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11982   0047E6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11983   0047EA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11984   0047EE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11985                           
 11986                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 11987   0047F2  EE20 F007          	lfsr	2,7
 11988   0047F6  500E               	movf	setMotorPWM@m^0,w,c
 11989   0047F8  26D9               	addwf	fsr2l,f,c
 11990   0047FA  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11991   0047FC  22DA               	addwfc	fsr2h,f,c
 11992   0047FE  CFDE F010          	movff	postinc2,??_setMotorPWM
 11993   004802  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11994   004806  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11995   00480A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11996   00480E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11997   004812                     l424:
 11998   004812  0012               	return		;funcret
 11999   004814                     __end_of_setMotorPWM:
 12000                           	callstack 0
 12001                           
 12002 ;; *************** function ___wmul *****************
 12003 ;; Defined at:
 12004 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  multiplier      2    0[COMRAM] unsigned int 
 12007 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;  product         2    4[COMRAM] unsigned int 
 12010 ;; Return value:  Size  Location     Type
 12011 ;;                  2    0[COMRAM] unsigned int 
 12012 ;; Registers used:
 12013 ;;		wreg, status,2, status,0, prodl, prodh
 12014 ;; Tracked objects:
 12015 ;;		On entry : 0/0
 12016 ;;		On exit  : 0/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;Total ram usage:        6 bytes
 12024 ;; Hardware stack levels used: 1
 12025 ;; Hardware stack levels required when called: 1
 12026 ;; This function calls:
 12027 ;;		Nothing
 12028 ;; This function is called by:
 12029 ;;		_setMotorPWM
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text73
 12034   006084                     __ptext73:
 12035                           	callstack 0
 12036   006084                     ___wmul:
 12037                           	callstack 25
 12038   006084  5001               	movf	___wmul@multiplier^0,w,c
 12039   006086  0203               	mulwf	___wmul@multiplicand^0,c
 12040   006088  CFF3 F005          	movff	prodl,___wmul@product
 12041   00608C  CFF4 F006          	movff	prodh,___wmul@product+1
 12042   006090  5001               	movf	___wmul@multiplier^0,w,c
 12043   006092  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12044   006094  50F3               	movf	243,w,c
 12045   006096  2606               	addwf	(___wmul@product+1)^0,f,c
 12046   006098  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12047   00609A  0203               	mulwf	___wmul@multiplicand^0,c
 12048   00609C  50F3               	movf	243,w,c
 12049   00609E  2606               	addwf	(___wmul@product+1)^0,f,c
 12050   0060A0  C005  F001         	movff	___wmul@product,?___wmul
 12051   0060A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12052   0060A8  0012               	return		;funcret
 12053   0060AA                     __end_of___wmul:
 12054                           	callstack 0
 12055                           
 12056 ;; *************** function ___lwdiv *****************
 12057 ;; Defined at:
 12058 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12059 ;; Parameters:    Size  Location     Type
 12060 ;;  dividend        2    6[COMRAM] unsigned int 
 12061 ;;  divisor         2    8[COMRAM] unsigned int 
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;  quotient        2   10[COMRAM] unsigned int 
 12064 ;;  counter         1   12[COMRAM] unsigned char 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  2    6[COMRAM] unsigned int 
 12067 ;; Registers used:
 12068 ;;		wreg, status,2, status,0
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12075 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;Total ram usage:        7 bytes
 12079 ;; Hardware stack levels used: 1
 12080 ;; Hardware stack levels required when called: 1
 12081 ;; This function calls:
 12082 ;;		Nothing
 12083 ;; This function is called by:
 12084 ;;		_setMotorPWM
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text74
 12089   00547C                     __ptext74:
 12090                           	callstack 0
 12091   00547C                     ___lwdiv:
 12092                           	callstack 25
 12093   00547C  0E00               	movlw	0
 12094   00547E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12095   005480  0E00               	movlw	0
 12096   005482  6E0B               	movwf	___lwdiv@quotient^0,c
 12097   005484  5009               	movf	___lwdiv@divisor^0,w,c
 12098   005486  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12099   005488  B4D8               	btfsc	status,2,c
 12100   00548A  EF49  F02A         	goto	u2921
 12101   00548E  EF4B  F02A         	goto	u2920
 12102   005492                     u2921:
 12103   005492  EF73  F02A         	goto	l1241
 12104   005496                     u2920:
 12105   005496  0E01               	movlw	1
 12106   005498  6E0D               	movwf	___lwdiv@counter^0,c
 12107   00549A  EF53  F02A         	goto	l3853
 12108   00549E                     l3851:
 12109   00549E  90D8               	bcf	status,0,c
 12110   0054A0  3609               	rlcf	___lwdiv@divisor^0,f,c
 12111   0054A2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12112   0054A4  2A0D               	incf	___lwdiv@counter^0,f,c
 12113   0054A6                     l3853:
 12114   0054A6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 12115   0054A8  EF58  F02A         	goto	u2931
 12116   0054AC  EF5A  F02A         	goto	u2930
 12117   0054B0                     u2931:
 12118   0054B0  EF4F  F02A         	goto	l3851
 12119   0054B4                     u2930:
 12120   0054B4                     l3855:
 12121   0054B4  90D8               	bcf	status,0,c
 12122   0054B6  360B               	rlcf	___lwdiv@quotient^0,f,c
 12123   0054B8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12124   0054BA  5009               	movf	___lwdiv@divisor^0,w,c
 12125   0054BC  5C07               	subwf	___lwdiv@dividend^0,w,c
 12126   0054BE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12127   0054C0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12128   0054C2  A0D8               	btfss	status,0,c
 12129   0054C4  EF66  F02A         	goto	u2941
 12130   0054C8  EF68  F02A         	goto	u2940
 12131   0054CC                     u2941:
 12132   0054CC  EF6D  F02A         	goto	l3863
 12133   0054D0                     u2940:
 12134   0054D0  5009               	movf	___lwdiv@divisor^0,w,c
 12135   0054D2  5E07               	subwf	___lwdiv@dividend^0,f,c
 12136   0054D4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12137   0054D6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12138   0054D8  800B               	bsf	___lwdiv@quotient^0,0,c
 12139   0054DA                     l3863:
 12140   0054DA  90D8               	bcf	status,0,c
 12141   0054DC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12142   0054DE  3209               	rrcf	___lwdiv@divisor^0,f,c
 12143   0054E0  2E0D               	decfsz	___lwdiv@counter^0,f,c
 12144   0054E2  EF5A  F02A         	goto	l3855
 12145   0054E6                     l1241:
 12146   0054E6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 12147   0054EA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12148   0054EE  0012               	return		;funcret
 12149   0054F0                     __end_of___lwdiv:
 12150                           	callstack 0
 12151                           
 12152 ;; *************** function _Colour_decider *****************
 12153 ;; Defined at:
 12154 ;;		line 126 in file "color.c"
 12155 ;; Parameters:    Size  Location     Type
 12156 ;;  vals            2   74[COMRAM] PTR struct RGB
 12157 ;;		 -> vals(8), 
 12158 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 12159 ;;		 -> rel(12), 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  RGB_col        12    6[BANK0 ] float [3]
 12162 ;;  Hue             4   28[BANK0 ] float 
 12163 ;;  Cmin            4   22[BANK0 ] float 
 12164 ;;  Cmax            4   18[BANK0 ] float 
 12165 ;;  i               2   26[BANK0 ] int 
 12166 ;;  Cmax_i          2    4[BANK0 ] int 
 12167 ;; Return value:  Size  Location     Type
 12168 ;;                  2   74[COMRAM] int 
 12169 ;; Registers used:
 12170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12171 ;; Tracked objects:
 12172 ;;		On entry : 0/0
 12173 ;;		On exit  : 0/0
 12174 ;;		Unchanged: 0/0
 12175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12177 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12179 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;Total ram usage:       38 bytes
 12181 ;; Hardware stack levels used: 1
 12182 ;; Hardware stack levels required when called: 3
 12183 ;; This function calls:
 12184 ;;		___fladd
 12185 ;;		___fldiv
 12186 ;;		___fleq
 12187 ;;		___flge
 12188 ;;		___flmul
 12189 ;;		___flsub
 12190 ;;		___xxtofl
 12191 ;; This function is called by:
 12192 ;;		_main
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           	psect	text75
 12197   001838                     __ptext75:
 12198                           	callstack 0
 12199   001838                     _Colour_decider:
 12200                           	callstack 27
 12201   001838                     
 12202                           ;color.c: 127:     float Cmax = 0;
 12203   001838  0E00               	movlw	0
 12204   00183A  0100               	movlb	0	; () banked
 12205   00183C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12206   00183E  0E00               	movlw	0
 12207   001840  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12208   001842  0E00               	movlw	0
 12209   001844  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12210   001846  0E00               	movlw	0
 12211   001848  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12212                           
 12213                           ;color.c: 128:     float Cmin= 100000;
 12214   00184A  0E00               	movlw	0
 12215   00184C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12216   00184E  0E50               	movlw	80
 12217   001850  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12218   001852  0EC3               	movlw	195
 12219   001854  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12220   001856  0E47               	movlw	71
 12221   001858  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12222                           
 12223                           ;color.c: 129:     int Cmax_i =4;
 12224   00185A  0E00               	movlw	0
 12225   00185C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12226   00185E  0E04               	movlw	4
 12227   001860  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12228   001862                     
 12229                           ; BSR set to: 0
 12230                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12231   001862  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12232   001866  0E0B               	movlw	11
 12233   001868                     u5191:
 12234   001868  6ADE               	clrf	postinc2,c
 12235   00186A  06E8               	decf	wreg,f,c
 12236   00186C  E2FD               	bc	u5191
 12237   00186E                     
 12238                           ; BSR set to: 0
 12239   00186E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12240   001872  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12241   001876  CFDE F001          	movff	postinc2,___xxtofl@val
 12242   00187A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12243   00187E  0E00               	movlw	0
 12244   001880  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12245   001882  0EFF               	movlw	-1
 12246   001884  6E03               	movwf	(___xxtofl@val+2)^0,c
 12247   001886  6E04               	movwf	(___xxtofl@val+3)^0,c
 12248   001888  0E01               	movlw	1
 12249   00188A  ECE0  F020         	call	___xxtofl
 12250   00188E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12251   001892  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12252   001896  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12253   00189A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12254   00189E  EE20 F002          	lfsr	2,2
 12255   0018A2  504B               	movf	Colour_decider@vals^0,w,c
 12256   0018A4  26D9               	addwf	fsr2l,f,c
 12257   0018A6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12258   0018A8  22DA               	addwfc	fsr2h,f,c
 12259   0018AA  CFDE F001          	movff	postinc2,___xxtofl@val
 12260   0018AE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12261   0018B2  0E00               	movlw	0
 12262   0018B4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12263   0018B6  0EFF               	movlw	-1
 12264   0018B8  6E03               	movwf	(___xxtofl@val+2)^0,c
 12265   0018BA  6E04               	movwf	(___xxtofl@val+3)^0,c
 12266   0018BC  0E01               	movlw	1
 12267   0018BE  ECE0  F020         	call	___xxtofl
 12268   0018C2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12269   0018C6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12270   0018CA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12271   0018CE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12272   0018D2  EE20 F004          	lfsr	2,4
 12273   0018D6  504B               	movf	Colour_decider@vals^0,w,c
 12274   0018D8  26D9               	addwf	fsr2l,f,c
 12275   0018DA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12276   0018DC  22DA               	addwfc	fsr2h,f,c
 12277   0018DE  CFDE F001          	movff	postinc2,___xxtofl@val
 12278   0018E2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12279   0018E6  0E00               	movlw	0
 12280   0018E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12281   0018EA  0EFF               	movlw	-1
 12282   0018EC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12283   0018EE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12284   0018F0  0E01               	movlw	1
 12285   0018F2  ECE0  F020         	call	___xxtofl
 12286   0018F6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12287   0018FA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12288   0018FE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12289   001902  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12290   001906                     
 12291                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12292   001906  0E00               	movlw	0
 12293   001908  0100               	movlb	0	; () banked
 12294   00190A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12295   00190C  0E00               	movlw	0
 12296   00190E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12297   001910                     l5405:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12301   001910  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12302   001914  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12303   001918  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12304   00191C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12305   001920  0E66               	movlw	low Colour_decider@RGB_col
 12306   001922  6E4F               	movwf	??_Colour_decider^0,c
 12307   001924  0E00               	movlw	high Colour_decider@RGB_col
 12308   001926  6E50               	movwf	(??_Colour_decider+1)^0,c
 12309   001928  90D8               	bcf	status,0,c
 12310   00192A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12311   00192C  6ED9               	movwf	fsr2l,c
 12312   00192E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12313   001930  6EDA               	movwf	fsr2h,c
 12314   001932  90D8               	bcf	status,0,c
 12315   001934  36D9               	rlcf	fsr2l,f,c
 12316   001936  36DA               	rlcf	fsr2h,f,c
 12317   001938  504F               	movf	??_Colour_decider^0,w,c
 12318   00193A  26D9               	addwf	fsr2l,f,c
 12319   00193C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12320   00193E  22DA               	addwfc	fsr2h,f,c
 12321   001940  CFDE F02E          	movff	postinc2,___flge@ff2
 12322   001944  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12323   001948  CFDE F030          	movff	postinc2,___flge@ff2+2
 12324   00194C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12325   001950  EC3F  F025         	call	___flge	;wreg free
 12326   001954  B0D8               	btfsc	status,0,c
 12327   001956  EFAF  F00C         	goto	u5201
 12328   00195A  EFB1  F00C         	goto	u5200
 12329   00195E                     u5201:
 12330   00195E  EFCE  F00C         	goto	l5411
 12331   001962                     u5200:
 12332   001962                     
 12333                           ;color.c: 138:             Cmax=RGB_col[i];
 12334   001962  0E66               	movlw	low Colour_decider@RGB_col
 12335   001964  6E4F               	movwf	??_Colour_decider^0,c
 12336   001966  0E00               	movlw	high Colour_decider@RGB_col
 12337   001968  6E50               	movwf	(??_Colour_decider+1)^0,c
 12338   00196A  90D8               	bcf	status,0,c
 12339   00196C  0100               	movlb	0	; () banked
 12340   00196E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12341   001970  6ED9               	movwf	fsr2l,c
 12342   001972  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12343   001974  6EDA               	movwf	fsr2h,c
 12344   001976  90D8               	bcf	status,0,c
 12345   001978  36D9               	rlcf	fsr2l,f,c
 12346   00197A  36DA               	rlcf	fsr2h,f,c
 12347   00197C  504F               	movf	??_Colour_decider^0,w,c
 12348   00197E  26D9               	addwf	fsr2l,f,c
 12349   001980  5050               	movf	(??_Colour_decider+1)^0,w,c
 12350   001982  22DA               	addwfc	fsr2h,f,c
 12351   001984  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12352   001988  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12353   00198C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12354   001990  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12355   001994                     
 12356                           ; BSR set to: 0
 12357                           ;color.c: 139:             Cmax_i=i;
 12358   001994  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12359   001998  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12360   00199C                     l5411:
 12361                           
 12362                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12363   00199C  0E66               	movlw	low Colour_decider@RGB_col
 12364   00199E  6E4F               	movwf	??_Colour_decider^0,c
 12365   0019A0  0E00               	movlw	high Colour_decider@RGB_col
 12366   0019A2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12367   0019A4  90D8               	bcf	status,0,c
 12368   0019A6  0100               	movlb	0	; () banked
 12369   0019A8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12370   0019AA  6ED9               	movwf	fsr2l,c
 12371   0019AC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12372   0019AE  6EDA               	movwf	fsr2h,c
 12373   0019B0  90D8               	bcf	status,0,c
 12374   0019B2  36D9               	rlcf	fsr2l,f,c
 12375   0019B4  36DA               	rlcf	fsr2h,f,c
 12376   0019B6  504F               	movf	??_Colour_decider^0,w,c
 12377   0019B8  26D9               	addwf	fsr2l,f,c
 12378   0019BA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12379   0019BC  22DA               	addwfc	fsr2h,f,c
 12380   0019BE  CFDE F02A          	movff	postinc2,___flge@ff1
 12381   0019C2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12382   0019C6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12383   0019CA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12384   0019CE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12385   0019D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12386   0019D6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12387   0019DA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12388   0019DE  EC3F  F025         	call	___flge	;wreg free
 12389   0019E2  B0D8               	btfsc	status,0,c
 12390   0019E4  EFF6  F00C         	goto	u5211
 12391   0019E8  EFF8  F00C         	goto	u5210
 12392   0019EC                     u5211:
 12393   0019EC  EF11  F00D         	goto	l5415
 12394   0019F0                     u5210:
 12395   0019F0  0E66               	movlw	low Colour_decider@RGB_col
 12396   0019F2  6E4F               	movwf	??_Colour_decider^0,c
 12397   0019F4  0E00               	movlw	high Colour_decider@RGB_col
 12398   0019F6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12399   0019F8  90D8               	bcf	status,0,c
 12400   0019FA  0100               	movlb	0	; () banked
 12401   0019FC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12402   0019FE  6ED9               	movwf	fsr2l,c
 12403   001A00  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12404   001A02  6EDA               	movwf	fsr2h,c
 12405   001A04  90D8               	bcf	status,0,c
 12406   001A06  36D9               	rlcf	fsr2l,f,c
 12407   001A08  36DA               	rlcf	fsr2h,f,c
 12408   001A0A  504F               	movf	??_Colour_decider^0,w,c
 12409   001A0C  26D9               	addwf	fsr2l,f,c
 12410   001A0E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12411   001A10  22DA               	addwfc	fsr2h,f,c
 12412   001A12  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12413   001A16  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12414   001A1A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12415   001A1E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12416   001A22                     l5415:
 12417                           
 12418                           ;color.c: 142:     }
 12419   001A22  0100               	movlb	0	; () banked
 12420   001A24  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12421   001A26  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12422   001A28                     
 12423                           ; BSR set to: 0
 12424   001A28  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12425   001A2A  EF20  F00D         	goto	u5221
 12426   001A2E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12427   001A30  E109               	bnz	u5220
 12428   001A32  0E03               	movlw	3
 12429   001A34  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12430   001A36  A0D8               	btfss	status,0,c
 12431   001A38  EF20  F00D         	goto	u5221
 12432   001A3C  EF22  F00D         	goto	u5220
 12433   001A40                     u5221:
 12434   001A40  EF88  F00C         	goto	l5405
 12435   001A44                     u5220:
 12436   001A44                     
 12437                           ; BSR set to: 0
 12438                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12439   001A44  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12440   001A48  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12441   001A4C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12442   001A50  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12443   001A54  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12444   001A58  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12445   001A5C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12446   001A60  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12447   001A64  ECB5  F02E         	call	___flsub	;wreg free
 12448   001A68  C02A  F032         	movff	?___flsub,___fleq@ff1
 12449   001A6C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12450   001A70  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12451   001A74  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12452   001A78  0E00               	movlw	0
 12453   001A7A  6E36               	movwf	___fleq@ff2^0,c
 12454   001A7C  0E00               	movlw	0
 12455   001A7E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12456   001A80  0E00               	movlw	0
 12457   001A82  6E38               	movwf	(___fleq@ff2+2)^0,c
 12458   001A84  0E00               	movlw	0
 12459   001A86  6E39               	movwf	(___fleq@ff2+3)^0,c
 12460   001A88  ECB0  F027         	call	___fleq	;wreg free
 12461   001A8C  A0D8               	btfss	status,0,c
 12462   001A8E  EF4B  F00D         	goto	u5231
 12463   001A92  EF4D  F00D         	goto	u5230
 12464   001A96                     u5231:
 12465   001A96  EF53  F00D         	goto	l5425
 12466   001A9A                     u5230:
 12467   001A9A                     l5421:
 12468   001A9A  0E00               	movlw	0
 12469   001A9C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12470   001A9E  0E00               	movlw	0
 12471   001AA0  6E4B               	movwf	?_Colour_decider^0,c
 12472   001AA2  EF15  F011         	goto	l80
 12473   001AA6                     l5425:
 12474                           
 12475                           ;color.c: 147:     if (Cmax_i==0){
 12476   001AA6  0100               	movlb	0	; () banked
 12477   001AA8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12478   001AAA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12479   001AAC  A4D8               	btfss	status,2,c
 12480   001AAE  EF5B  F00D         	goto	u5241
 12481   001AB2  EF5D  F00D         	goto	u5240
 12482   001AB6                     u5241:
 12483   001AB6  EFD1  F00D         	goto	l5433
 12484   001ABA                     u5240:
 12485   001ABA                     
 12486                           ; BSR set to: 0
 12487                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12488   001ABA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12489   001ABE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12490   001AC2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12491   001AC6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12492   001ACA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12493   001ACE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12494   001AD2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12495   001AD6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12496   001ADA  ECB5  F02E         	call	___flsub	;wreg free
 12497   001ADE  C02A  F036         	movff	?___flsub,___fldiv@a
 12498   001AE2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12499   001AE6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12500   001AEA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12501   001AEE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12502   001AF2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12503   001AF6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12504   001AFA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12505   001AFE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12506   001B02  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12507   001B06  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12508   001B0A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12509   001B0E  ECB5  F02E         	call	___flsub	;wreg free
 12510   001B12  C02A  F032         	movff	?___flsub,___fldiv@b
 12511   001B16  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12512   001B1A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12513   001B1E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12514   001B22  EC8B  F015         	call	___fldiv	;wreg free
 12515   001B26  C032  F011         	movff	?___fldiv,___flmul@b
 12516   001B2A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12517   001B2E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12518   001B32  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12519   001B36  0E00               	movlw	0
 12520   001B38  6E15               	movwf	___flmul@a^0,c
 12521   001B3A  0E00               	movlw	0
 12522   001B3C  6E16               	movwf	(___flmul@a+1)^0,c
 12523   001B3E  0E70               	movlw	112
 12524   001B40  6E17               	movwf	(___flmul@a+2)^0,c
 12525   001B42  0E42               	movlw	66
 12526   001B44  6E18               	movwf	(___flmul@a+3)^0,c
 12527   001B46  EC76  F013         	call	___flmul	;wreg free
 12528   001B4A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12529   001B4E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12530   001B52  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12531   001B56  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12532   001B5A                     
 12533                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12534   001B5A  0100               	movlb	0	; () banked
 12535   001B5C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12536   001B5E  EFB5  F00D         	goto	u5250
 12537   001B62  EFB3  F00D         	goto	u5251
 12538   001B66                     u5251:
 12539   001B66  EFB0  F00E         	goto	l5443
 12540   001B6A                     u5250:
 12541   001B6A                     
 12542                           ; BSR set to: 0
 12543   001B6A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12544   001B6E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12545   001B72  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12546   001B76  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12547   001B7A  0E00               	movlw	0
 12548   001B7C  6E05               	movwf	___fladd@a^0,c
 12549   001B7E  0E00               	movlw	0
 12550   001B80  6E06               	movwf	(___fladd@a+1)^0,c
 12551   001B82  0EB4               	movlw	180
 12552   001B84  6E07               	movwf	(___fladd@a+2)^0,c
 12553   001B86  0E43               	movlw	67
 12554   001B88  6E08               	movwf	(___fladd@a+3)^0,c
 12555   001B8A  EC16  F011         	call	___fladd	;wreg free
 12556   001B8E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12557   001B92  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12558   001B96  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12559   001B9A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12560   001B9E  EFB0  F00E         	goto	l5443
 12561   001BA2                     l5433:
 12562                           
 12563                           ; BSR set to: 0
 12564   001BA2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12565   001BA4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12566   001BA6  A4D8               	btfss	status,2,c
 12567   001BA8  EFD8  F00D         	goto	u5261
 12568   001BAC  EFDA  F00D         	goto	u5260
 12569   001BB0                     u5261:
 12570   001BB0  EF46  F00E         	goto	l5439
 12571   001BB4                     u5260:
 12572   001BB4                     
 12573                           ; BSR set to: 0
 12574                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12575   001BB4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12576   001BB8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12577   001BBC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12578   001BC0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12579   001BC4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12580   001BC8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12581   001BCC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12582   001BD0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12583   001BD4  ECB5  F02E         	call	___flsub	;wreg free
 12584   001BD8  C02A  F036         	movff	?___flsub,___fldiv@a
 12585   001BDC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12586   001BE0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12587   001BE4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12588   001BE8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12589   001BEC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12590   001BF0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12591   001BF4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12592   001BF8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12593   001BFC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12594   001C00  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12595   001C04  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12596   001C08  ECB5  F02E         	call	___flsub	;wreg free
 12597   001C0C  C02A  F032         	movff	?___flsub,___fldiv@b
 12598   001C10  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12599   001C14  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12600   001C18  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12601   001C1C  EC8B  F015         	call	___fldiv	;wreg free
 12602   001C20  C032  F060         	movff	?___fldiv,_Colour_decider$3266
 12603   001C24  C033  F061         	movff	?___fldiv+1,_Colour_decider$3266+1
 12604   001C28  C034  F062         	movff	?___fldiv+2,_Colour_decider$3266+2
 12605   001C2C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3266+3
 12606   001C30                     
 12607                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12608   001C30  0E00               	movlw	0
 12609   001C32  6E05               	movwf	___fladd@a^0,c
 12610   001C34  0E00               	movlw	0
 12611   001C36  6E06               	movwf	(___fladd@a+1)^0,c
 12612   001C38  0E00               	movlw	0
 12613   001C3A  6E07               	movwf	(___fladd@a+2)^0,c
 12614   001C3C  0E40               	movlw	64
 12615   001C3E  6E08               	movwf	(___fladd@a+3)^0,c
 12616   001C40  C060  F001         	movff	_Colour_decider$3266,___fladd@b
 12617   001C44  C061  F002         	movff	_Colour_decider$3266+1,___fladd@b+1
 12618   001C48  C062  F003         	movff	_Colour_decider$3266+2,___fladd@b+2
 12619   001C4C  C063  F004         	movff	_Colour_decider$3266+3,___fladd@b+3
 12620   001C50  EC16  F011         	call	___fladd	;wreg free
 12621   001C54  C001  F011         	movff	?___fladd,___flmul@b
 12622   001C58  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12623   001C5C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12624   001C60  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12625   001C64  0E00               	movlw	0
 12626   001C66  6E15               	movwf	___flmul@a^0,c
 12627   001C68  0E00               	movlw	0
 12628   001C6A  6E16               	movwf	(___flmul@a+1)^0,c
 12629   001C6C  0E70               	movlw	112
 12630   001C6E  6E17               	movwf	(___flmul@a+2)^0,c
 12631   001C70  0E42               	movlw	66
 12632   001C72  6E18               	movwf	(___flmul@a+3)^0,c
 12633   001C74  EC76  F013         	call	___flmul	;wreg free
 12634   001C78  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12635   001C7C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12636   001C80  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12637   001C84  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12638                           
 12639                           ;color.c: 156:     }
 12640   001C88  EFB0  F00E         	goto	l5443
 12641   001C8C                     l5439:
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12645   001C8C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12646   001C90  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12647   001C94  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12648   001C98  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12649   001C9C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12650   001CA0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12651   001CA4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12652   001CA8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12653   001CAC  ECB5  F02E         	call	___flsub	;wreg free
 12654   001CB0  C02A  F036         	movff	?___flsub,___fldiv@a
 12655   001CB4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12656   001CB8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12657   001CBC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12658   001CC0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12659   001CC4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12660   001CC8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12661   001CCC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12662   001CD0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12663   001CD4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12664   001CD8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12665   001CDC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12666   001CE0  ECB5  F02E         	call	___flsub	;wreg free
 12667   001CE4  C02A  F032         	movff	?___flsub,___fldiv@b
 12668   001CE8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12669   001CEC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12670   001CF0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12671   001CF4  EC8B  F015         	call	___fldiv	;wreg free
 12672   001CF8  C032  F060         	movff	?___fldiv,_Colour_decider$3266
 12673   001CFC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3266+1
 12674   001D00  C034  F062         	movff	?___fldiv+2,_Colour_decider$3266+2
 12675   001D04  C035  F063         	movff	?___fldiv+3,_Colour_decider$3266+3
 12676   001D08                     
 12677                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12678   001D08  0E00               	movlw	0
 12679   001D0A  6E05               	movwf	___fladd@a^0,c
 12680   001D0C  0E00               	movlw	0
 12681   001D0E  6E06               	movwf	(___fladd@a+1)^0,c
 12682   001D10  0E80               	movlw	128
 12683   001D12  6E07               	movwf	(___fladd@a+2)^0,c
 12684   001D14  0E40               	movlw	64
 12685   001D16  6E08               	movwf	(___fladd@a+3)^0,c
 12686   001D18  C060  F001         	movff	_Colour_decider$3266,___fladd@b
 12687   001D1C  C061  F002         	movff	_Colour_decider$3266+1,___fladd@b+1
 12688   001D20  C062  F003         	movff	_Colour_decider$3266+2,___fladd@b+2
 12689   001D24  C063  F004         	movff	_Colour_decider$3266+3,___fladd@b+3
 12690   001D28  EC16  F011         	call	___fladd	;wreg free
 12691   001D2C  C001  F011         	movff	?___fladd,___flmul@b
 12692   001D30  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12693   001D34  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12694   001D38  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12695   001D3C  0E00               	movlw	0
 12696   001D3E  6E15               	movwf	___flmul@a^0,c
 12697   001D40  0E00               	movlw	0
 12698   001D42  6E16               	movwf	(___flmul@a+1)^0,c
 12699   001D44  0E70               	movlw	112
 12700   001D46  6E17               	movwf	(___flmul@a+2)^0,c
 12701   001D48  0E42               	movlw	66
 12702   001D4A  6E18               	movwf	(___flmul@a+3)^0,c
 12703   001D4C  EC76  F013         	call	___flmul	;wreg free
 12704   001D50  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12705   001D54  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12706   001D58  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12707   001D5C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12708   001D60                     l5443:
 12709                           
 12710                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12711   001D60  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12712   001D64  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12713   001D68  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12714   001D6C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12715   001D70  0E00               	movlw	0
 12716   001D72  6E2E               	movwf	___flge@ff2^0,c
 12717   001D74  0E00               	movlw	0
 12718   001D76  6E2F               	movwf	(___flge@ff2+1)^0,c
 12719   001D78  0EA5               	movlw	165
 12720   001D7A  6E30               	movwf	(___flge@ff2+2)^0,c
 12721   001D7C  0E43               	movlw	67
 12722   001D7E  6E31               	movwf	(___flge@ff2+3)^0,c
 12723   001D80  EC3F  F025         	call	___flge	;wreg free
 12724   001D84  A0D8               	btfss	status,0,c
 12725   001D86  EFC7  F00E         	goto	u5271
 12726   001D8A  EFC9  F00E         	goto	u5270
 12727   001D8E                     u5271:
 12728   001D8E  EFE8  F00E         	goto	l5453
 12729   001D92                     u5270:
 12730   001D92  0E00               	movlw	0
 12731   001D94  6E2A               	movwf	___flge@ff1^0,c
 12732   001D96  0E00               	movlw	0
 12733   001D98  6E2B               	movwf	(___flge@ff1+1)^0,c
 12734   001D9A  0EB4               	movlw	180
 12735   001D9C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12736   001D9E  0E43               	movlw	67
 12737   001DA0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12738   001DA2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12739   001DA6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12740   001DAA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12741   001DAE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12742   001DB2  EC3F  F025         	call	___flge	;wreg free
 12743   001DB6  A0D8               	btfss	status,0,c
 12744   001DB8  EFE0  F00E         	goto	u5281
 12745   001DBC  EFE2  F00E         	goto	u5280
 12746   001DC0                     u5281:
 12747   001DC0  EFE8  F00E         	goto	l5453
 12748   001DC4                     u5280:
 12749   001DC4                     
 12750                           ;color.c: 164:         return 1;
 12751   001DC4  0E00               	movlw	0
 12752   001DC6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12753   001DC8  0E01               	movlw	1
 12754   001DCA  6E4B               	movwf	?_Colour_decider^0,c
 12755   001DCC  EF15  F011         	goto	l80
 12756   001DD0                     l5453:
 12757   001DD0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12758   001DD4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12759   001DD8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12760   001DDC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12761   001DE0  0E00               	movlw	0
 12762   001DE2  6E2E               	movwf	___flge@ff2^0,c
 12763   001DE4  0E00               	movlw	0
 12764   001DE6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12765   001DE8  0EA0               	movlw	160
 12766   001DEA  6E30               	movwf	(___flge@ff2+2)^0,c
 12767   001DEC  0E40               	movlw	64
 12768   001DEE  6E31               	movwf	(___flge@ff2+3)^0,c
 12769   001DF0  EC3F  F025         	call	___flge	;wreg free
 12770   001DF4  A0D8               	btfss	status,0,c
 12771   001DF6  EFFF  F00E         	goto	u5291
 12772   001DFA  EF01  F00F         	goto	u5290
 12773   001DFE                     u5291:
 12774   001DFE  EF20  F00F         	goto	l5463
 12775   001E02                     u5290:
 12776   001E02  0E00               	movlw	0
 12777   001E04  6E2A               	movwf	___flge@ff1^0,c
 12778   001E06  0E00               	movlw	0
 12779   001E08  6E2B               	movwf	(___flge@ff1+1)^0,c
 12780   001E0A  0E30               	movlw	48
 12781   001E0C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12782   001E0E  0E41               	movlw	65
 12783   001E10  6E2D               	movwf	(___flge@ff1+3)^0,c
 12784   001E12  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12785   001E16  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12786   001E1A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12787   001E1E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12788   001E22  EC3F  F025         	call	___flge	;wreg free
 12789   001E26  A0D8               	btfss	status,0,c
 12790   001E28  EF18  F00F         	goto	u5301
 12791   001E2C  EF1A  F00F         	goto	u5300
 12792   001E30                     u5301:
 12793   001E30  EF20  F00F         	goto	l5463
 12794   001E34                     u5300:
 12795   001E34                     
 12796                           ;color.c: 168:         return 2;
 12797   001E34  0E00               	movlw	0
 12798   001E36  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12799   001E38  0E02               	movlw	2
 12800   001E3A  6E4B               	movwf	?_Colour_decider^0,c
 12801   001E3C  EF15  F011         	goto	l80
 12802   001E40                     l5463:
 12803   001E40  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12804   001E44  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12805   001E48  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12806   001E4C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12807   001E50  0E00               	movlw	0
 12808   001E52  6E2E               	movwf	___flge@ff2^0,c
 12809   001E54  0E00               	movlw	0
 12810   001E56  6E2F               	movwf	(___flge@ff2+1)^0,c
 12811   001E58  0E90               	movlw	144
 12812   001E5A  6E30               	movwf	(___flge@ff2+2)^0,c
 12813   001E5C  0E41               	movlw	65
 12814   001E5E  6E31               	movwf	(___flge@ff2+3)^0,c
 12815   001E60  EC3F  F025         	call	___flge	;wreg free
 12816   001E64  A0D8               	btfss	status,0,c
 12817   001E66  EF37  F00F         	goto	u5311
 12818   001E6A  EF39  F00F         	goto	u5310
 12819   001E6E                     u5311:
 12820   001E6E  EFED  F00F         	goto	l5493
 12821   001E72                     u5310:
 12822   001E72  0E00               	movlw	0
 12823   001E74  6E2A               	movwf	___flge@ff1^0,c
 12824   001E76  0E00               	movlw	0
 12825   001E78  6E2B               	movwf	(___flge@ff1+1)^0,c
 12826   001E7A  0EC8               	movlw	200
 12827   001E7C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12828   001E7E  0E41               	movlw	65
 12829   001E80  6E2D               	movwf	(___flge@ff1+3)^0,c
 12830   001E82  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12831   001E86  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12832   001E8A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12833   001E8E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12834   001E92  EC3F  F025         	call	___flge	;wreg free
 12835   001E96  A0D8               	btfss	status,0,c
 12836   001E98  EF50  F00F         	goto	u5321
 12837   001E9C  EF52  F00F         	goto	u5320
 12838   001EA0                     u5321:
 12839   001EA0  EFED  F00F         	goto	l5493
 12840   001EA4                     u5320:
 12841   001EA4                     
 12842                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 12843   001EA4  0EB8               	movlw	184
 12844   001EA6  6E2A               	movwf	___flge@ff1^0,c
 12845   001EA8  0E1E               	movlw	30
 12846   001EAA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12847   001EAC  0E85               	movlw	133
 12848   001EAE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12849   001EB0  0E3E               	movlw	62
 12850   001EB2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12851   001EB4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12852   001EB8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12853   001EBC  CFDE F02E          	movff	postinc2,___flge@ff2
 12854   001EC0  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12855   001EC4  CFDE F030          	movff	postinc2,___flge@ff2+2
 12856   001EC8  CFDE F031          	movff	postinc2,___flge@ff2+3
 12857   001ECC  EC3F  F025         	call	___flge	;wreg free
 12858   001ED0  A0D8               	btfss	status,0,c
 12859   001ED2  EF6D  F00F         	goto	u5331
 12860   001ED6  EF6F  F00F         	goto	u5330
 12861   001EDA                     u5331:
 12862   001EDA  EFA5  F00F         	goto	l5479
 12863   001EDE                     u5330:
 12864   001EDE  0ECD               	movlw	205
 12865   001EE0  6E2A               	movwf	___flge@ff1^0,c
 12866   001EE2  0ECC               	movlw	204
 12867   001EE4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12868   001EE6  0ECC               	movlw	204
 12869   001EE8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12870   001EEA  0E3D               	movlw	61
 12871   001EEC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12872   001EEE  EE20 F008          	lfsr	2,8
 12873   001EF2  504D               	movf	Colour_decider@rel^0,w,c
 12874   001EF4  26D9               	addwf	fsr2l,f,c
 12875   001EF6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12876   001EF8  22DA               	addwfc	fsr2h,f,c
 12877   001EFA  CFDE F02E          	movff	postinc2,___flge@ff2
 12878   001EFE  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12879   001F02  CFDE F030          	movff	postinc2,___flge@ff2+2
 12880   001F06  CFDE F031          	movff	postinc2,___flge@ff2+3
 12881   001F0A  EC3F  F025         	call	___flge	;wreg free
 12882   001F0E  B0D8               	btfsc	status,0,c
 12883   001F10  EF8C  F00F         	goto	u5341
 12884   001F14  EF8E  F00F         	goto	u5340
 12885   001F18                     u5341:
 12886   001F18  EFA5  F00F         	goto	l5479
 12887   001F1C                     u5340:
 12888   001F1C  EE20 F006          	lfsr	2,6
 12889   001F20  504B               	movf	Colour_decider@vals^0,w,c
 12890   001F22  26D9               	addwf	fsr2l,f,c
 12891   001F24  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12892   001F26  22DA               	addwfc	fsr2h,f,c
 12893   001F28  0E01               	movlw	1
 12894   001F2A  BEDB               	btfsc	plusw2,7,c
 12895   001F2C  EFA1  F00F         	goto	u5351
 12896   001F30  0EE9               	movlw	233
 12897   001F32  5CDE               	subwf	postinc2,w,c
 12898   001F34  0E03               	movlw	3
 12899   001F36  58DE               	subwfb	postinc2,w,c
 12900   001F38  A0D8               	btfss	status,0,c
 12901   001F3A  EFA1  F00F         	goto	u5351
 12902   001F3E  EFA3  F00F         	goto	u5350
 12903   001F42                     u5351:
 12904   001F42  EFA5  F00F         	goto	l5479
 12905   001F46                     u5350:
 12906   001F46  EF4D  F00D         	goto	l5421
 12907   001F4A                     l5479:
 12908   001F4A  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12909   001F4E  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12910   001F52  CFDE F02A          	movff	postinc2,___flge@ff1
 12911   001F56  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12912   001F5A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12913   001F5E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12914   001F62  0EB8               	movlw	184
 12915   001F64  6E2E               	movwf	___flge@ff2^0,c
 12916   001F66  0E1E               	movlw	30
 12917   001F68  6E2F               	movwf	(___flge@ff2+1)^0,c
 12918   001F6A  0E85               	movlw	133
 12919   001F6C  6E30               	movwf	(___flge@ff2+2)^0,c
 12920   001F6E  0E3E               	movlw	62
 12921   001F70  6E31               	movwf	(___flge@ff2+3)^0,c
 12922   001F72  EC3F  F025         	call	___flge	;wreg free
 12923   001F76  A0D8               	btfss	status,0,c
 12924   001F78  EFC0  F00F         	goto	u5361
 12925   001F7C  EFC2  F00F         	goto	u5360
 12926   001F80                     u5361:
 12927   001F80  EFE7  F00F         	goto	l5489
 12928   001F84                     u5360:
 12929   001F84  EE20 F008          	lfsr	2,8
 12930   001F88  504D               	movf	Colour_decider@rel^0,w,c
 12931   001F8A  26D9               	addwf	fsr2l,f,c
 12932   001F8C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12933   001F8E  22DA               	addwfc	fsr2h,f,c
 12934   001F90  CFDE F02A          	movff	postinc2,___flge@ff1
 12935   001F94  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12936   001F98  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12937   001F9C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12938   001FA0  0ECD               	movlw	205
 12939   001FA2  6E2E               	movwf	___flge@ff2^0,c
 12940   001FA4  0ECC               	movlw	204
 12941   001FA6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12942   001FA8  0ECC               	movlw	204
 12943   001FAA  6E30               	movwf	(___flge@ff2+2)^0,c
 12944   001FAC  0E3D               	movlw	61
 12945   001FAE  6E31               	movwf	(___flge@ff2+3)^0,c
 12946   001FB0  EC3F  F025         	call	___flge	;wreg free
 12947   001FB4  B0D8               	btfsc	status,0,c
 12948   001FB6  EFDF  F00F         	goto	u5371
 12949   001FBA  EFE1  F00F         	goto	u5370
 12950   001FBE                     u5371:
 12951   001FBE  EFE7  F00F         	goto	l5489
 12952   001FC2                     u5370:
 12953   001FC2                     
 12954                           ;color.c: 177:             return 3;
 12955   001FC2  0E00               	movlw	0
 12956   001FC4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12957   001FC6  0E03               	movlw	3
 12958   001FC8  6E4B               	movwf	?_Colour_decider^0,c
 12959   001FCA  EF15  F011         	goto	l80
 12960   001FCE                     l5489:
 12961                           
 12962                           ;color.c: 180:             return 10;
 12963   001FCE  0E00               	movlw	0
 12964   001FD0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12965   001FD2  0E0A               	movlw	10
 12966   001FD4  6E4B               	movwf	?_Colour_decider^0,c
 12967   001FD6  EF15  F011         	goto	l80
 12968   001FDA                     l5493:
 12969   001FDA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12970   001FDE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12971   001FE2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12972   001FE6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12973   001FEA  0E00               	movlw	0
 12974   001FEC  6E2E               	movwf	___flge@ff2^0,c
 12975   001FEE  0E00               	movlw	0
 12976   001FF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 12977   001FF2  0EAA               	movlw	170
 12978   001FF4  6E30               	movwf	(___flge@ff2+2)^0,c
 12979   001FF6  0E42               	movlw	66
 12980   001FF8  6E31               	movwf	(___flge@ff2+3)^0,c
 12981   001FFA  EC3F  F025         	call	___flge	;wreg free
 12982   001FFE  A0D8               	btfss	status,0,c
 12983   002000  EF04  F010         	goto	u5381
 12984   002004  EF06  F010         	goto	u5380
 12985   002008                     u5381:
 12986   002008  EF25  F010         	goto	l5503
 12987   00200C                     u5380:
 12988   00200C  0E00               	movlw	0
 12989   00200E  6E2A               	movwf	___flge@ff1^0,c
 12990   002010  0E00               	movlw	0
 12991   002012  6E2B               	movwf	(___flge@ff1+1)^0,c
 12992   002014  0E20               	movlw	32
 12993   002016  6E2C               	movwf	(___flge@ff1+2)^0,c
 12994   002018  0E43               	movlw	67
 12995   00201A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12996   00201C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12997   002020  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12998   002024  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12999   002028  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13000   00202C  EC3F  F025         	call	___flge	;wreg free
 13001   002030  A0D8               	btfss	status,0,c
 13002   002032  EF1D  F010         	goto	u5391
 13003   002036  EF1F  F010         	goto	u5390
 13004   00203A                     u5391:
 13005   00203A  EF25  F010         	goto	l5503
 13006   00203E                     u5390:
 13007   00203E                     
 13008                           ;color.c: 186:         return 4;
 13009   00203E  0E00               	movlw	0
 13010   002040  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13011   002042  0E04               	movlw	4
 13012   002044  6E4B               	movwf	?_Colour_decider^0,c
 13013   002046  EF15  F011         	goto	l80
 13014   00204A                     l5503:
 13015   00204A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13016   00204E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13017   002052  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13018   002056  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13019   00205A  0E00               	movlw	0
 13020   00205C  6E2E               	movwf	___flge@ff2^0,c
 13021   00205E  0E00               	movlw	0
 13022   002060  6E2F               	movwf	(___flge@ff2+1)^0,c
 13023   002062  0E70               	movlw	112
 13024   002064  6E30               	movwf	(___flge@ff2+2)^0,c
 13025   002066  0E42               	movlw	66
 13026   002068  6E31               	movwf	(___flge@ff2+3)^0,c
 13027   00206A  EC3F  F025         	call	___flge	;wreg free
 13028   00206E  A0D8               	btfss	status,0,c
 13029   002070  EF3C  F010         	goto	u5401
 13030   002074  EF3E  F010         	goto	u5400
 13031   002078                     u5401:
 13032   002078  EFDF  F010         	goto	l5531
 13033   00207C                     u5400:
 13034   00207C  0E00               	movlw	0
 13035   00207E  6E2A               	movwf	___flge@ff1^0,c
 13036   002080  0E00               	movlw	0
 13037   002082  6E2B               	movwf	(___flge@ff1+1)^0,c
 13038   002084  0E9A               	movlw	154
 13039   002086  6E2C               	movwf	(___flge@ff1+2)^0,c
 13040   002088  0E42               	movlw	66
 13041   00208A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13042   00208C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13043   002090  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13044   002094  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13045   002098  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13046   00209C  EC3F  F025         	call	___flge	;wreg free
 13047   0020A0  A0D8               	btfss	status,0,c
 13048   0020A2  EF55  F010         	goto	u5411
 13049   0020A6  EF57  F010         	goto	u5410
 13050   0020AA                     u5411:
 13051   0020AA  EFDF  F010         	goto	l5531
 13052   0020AE                     u5410:
 13053   0020AE                     
 13054                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 13055   0020AE  EE20 F008          	lfsr	2,8
 13056   0020B2  504D               	movf	Colour_decider@rel^0,w,c
 13057   0020B4  26D9               	addwf	fsr2l,f,c
 13058   0020B6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13059   0020B8  22DA               	addwfc	fsr2h,f,c
 13060   0020BA  CFDE F02A          	movff	postinc2,___flge@ff1
 13061   0020BE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13062   0020C2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13063   0020C6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13064   0020CA  0E8F               	movlw	143
 13065   0020CC  6E2E               	movwf	___flge@ff2^0,c
 13066   0020CE  0EC2               	movlw	194
 13067   0020D0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13068   0020D2  0EF5               	movlw	245
 13069   0020D4  6E30               	movwf	(___flge@ff2+2)^0,c
 13070   0020D6  0E3D               	movlw	61
 13071   0020D8  6E31               	movwf	(___flge@ff2+3)^0,c
 13072   0020DA  EC3F  F025         	call	___flge	;wreg free
 13073   0020DE  A0D8               	btfss	status,0,c
 13074   0020E0  EF74  F010         	goto	u5421
 13075   0020E4  EF76  F010         	goto	u5420
 13076   0020E8                     u5421:
 13077   0020E8  EF9B  F010         	goto	l5517
 13078   0020EC                     u5420:
 13079   0020EC  EE20 F004          	lfsr	2,4
 13080   0020F0  504D               	movf	Colour_decider@rel^0,w,c
 13081   0020F2  26D9               	addwf	fsr2l,f,c
 13082   0020F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13083   0020F6  22DA               	addwfc	fsr2h,f,c
 13084   0020F8  CFDE F02A          	movff	postinc2,___flge@ff1
 13085   0020FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13086   002100  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13087   002104  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13088   002108  0E3D               	movlw	61
 13089   00210A  6E2E               	movwf	___flge@ff2^0,c
 13090   00210C  0E0A               	movlw	10
 13091   00210E  6E2F               	movwf	(___flge@ff2+1)^0,c
 13092   002110  0E57               	movlw	87
 13093   002112  6E30               	movwf	(___flge@ff2+2)^0,c
 13094   002114  0E3E               	movlw	62
 13095   002116  6E31               	movwf	(___flge@ff2+3)^0,c
 13096   002118  EC3F  F025         	call	___flge	;wreg free
 13097   00211C  B0D8               	btfsc	status,0,c
 13098   00211E  EF93  F010         	goto	u5431
 13099   002122  EF95  F010         	goto	u5430
 13100   002126                     u5431:
 13101   002126  EF9B  F010         	goto	l5517
 13102   00212A                     u5430:
 13103   00212A                     
 13104                           ;color.c: 192:             return 6;
 13105   00212A  0E00               	movlw	0
 13106   00212C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13107   00212E  0E06               	movlw	6
 13108   002130  6E4B               	movwf	?_Colour_decider^0,c
 13109   002132  EF15  F011         	goto	l80
 13110   002136                     l5517:
 13111   002136  EE20 F008          	lfsr	2,8
 13112   00213A  504D               	movf	Colour_decider@rel^0,w,c
 13113   00213C  26D9               	addwf	fsr2l,f,c
 13114   00213E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13115   002140  22DA               	addwfc	fsr2h,f,c
 13116   002142  CFDE F02A          	movff	postinc2,___flge@ff1
 13117   002146  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13118   00214A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13119   00214E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13120   002152  0E8F               	movlw	143
 13121   002154  6E2E               	movwf	___flge@ff2^0,c
 13122   002156  0EC2               	movlw	194
 13123   002158  6E2F               	movwf	(___flge@ff2+1)^0,c
 13124   00215A  0EF5               	movlw	245
 13125   00215C  6E30               	movwf	(___flge@ff2+2)^0,c
 13126   00215E  0E3D               	movlw	61
 13127   002160  6E31               	movwf	(___flge@ff2+3)^0,c
 13128   002162  EC3F  F025         	call	___flge	;wreg free
 13129   002166  B0D8               	btfsc	status,0,c
 13130   002168  EFB8  F010         	goto	u5441
 13131   00216C  EFBA  F010         	goto	u5440
 13132   002170                     u5441:
 13133   002170  EFE7  F00F         	goto	l5489
 13134   002174                     u5440:
 13135   002174  0E3D               	movlw	61
 13136   002176  6E2A               	movwf	___flge@ff1^0,c
 13137   002178  0E0A               	movlw	10
 13138   00217A  6E2B               	movwf	(___flge@ff1+1)^0,c
 13139   00217C  0E57               	movlw	87
 13140   00217E  6E2C               	movwf	(___flge@ff1+2)^0,c
 13141   002180  0E3E               	movlw	62
 13142   002182  6E2D               	movwf	(___flge@ff1+3)^0,c
 13143   002184  EE20 F004          	lfsr	2,4
 13144   002188  504D               	movf	Colour_decider@rel^0,w,c
 13145   00218A  26D9               	addwf	fsr2l,f,c
 13146   00218C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13147   00218E  22DA               	addwfc	fsr2h,f,c
 13148   002190  CFDE F02E          	movff	postinc2,___flge@ff2
 13149   002194  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13150   002198  CFDE F030          	movff	postinc2,___flge@ff2+2
 13151   00219C  CFDE F031          	movff	postinc2,___flge@ff2+3
 13152   0021A0  EC3F  F025         	call	___flge	;wreg free
 13153   0021A4  B0D8               	btfsc	status,0,c
 13154   0021A6  EFD7  F010         	goto	u5451
 13155   0021AA  EFD9  F010         	goto	u5450
 13156   0021AE                     u5451:
 13157   0021AE  EFE7  F00F         	goto	l5489
 13158   0021B2                     u5450:
 13159   0021B2                     
 13160                           ;color.c: 195:             return 5;
 13161   0021B2  0E00               	movlw	0
 13162   0021B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13163   0021B6  0E05               	movlw	5
 13164   0021B8  6E4B               	movwf	?_Colour_decider^0,c
 13165   0021BA  EF15  F011         	goto	l80
 13166   0021BE                     l5531:
 13167   0021BE  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13168   0021C2  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13169   0021C6  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13170   0021CA  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13171   0021CE  0E00               	movlw	0
 13172   0021D0  6E2E               	movwf	___flge@ff2^0,c
 13173   0021D2  0E00               	movlw	0
 13174   0021D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13175   0021D6  0E40               	movlw	64
 13176   0021D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13177   0021DA  0E41               	movlw	65
 13178   0021DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13179   0021DE  EC3F  F025         	call	___flge	;wreg free
 13180   0021E2  A0D8               	btfss	status,0,c
 13181   0021E4  EFF6  F010         	goto	u5461
 13182   0021E8  EFF8  F010         	goto	u5460
 13183   0021EC                     u5461:
 13184   0021EC  EFE7  F00F         	goto	l5489
 13185   0021F0                     u5460:
 13186   0021F0  0E00               	movlw	0
 13187   0021F2  6E2A               	movwf	___flge@ff1^0,c
 13188   0021F4  0E00               	movlw	0
 13189   0021F6  6E2B               	movwf	(___flge@ff1+1)^0,c
 13190   0021F8  0E88               	movlw	136
 13191   0021FA  6E2C               	movwf	(___flge@ff1+2)^0,c
 13192   0021FC  0E41               	movlw	65
 13193   0021FE  6E2D               	movwf	(___flge@ff1+3)^0,c
 13194   002200  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13195   002204  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13196   002208  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13197   00220C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13198   002210  EC3F  F025         	call	___flge	;wreg free
 13199   002214  A0D8               	btfss	status,0,c
 13200   002216  EF0F  F011         	goto	u5471
 13201   00221A  EF11  F011         	goto	u5470
 13202   00221E                     u5471:
 13203   00221E  EFE7  F00F         	goto	l5489
 13204   002222                     u5470:
 13205   002222                     
 13206                           ;color.c: 204:             return 7;
 13207   002222  0E00               	movlw	0
 13208   002224  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13209   002226  0E07               	movlw	7
 13210   002228  6E4B               	movwf	?_Colour_decider^0,c
 13211   00222A                     l80:
 13212   00222A  0012               	return		;funcret
 13213   00222C                     __end_of_Colour_decider:
 13214                           	callstack 0
 13215                           
 13216 ;; *************** function ___xxtofl *****************
 13217 ;; Defined at:
 13218 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  sign            1    wreg     unsigned char 
 13221 ;;  val             4    0[COMRAM] long 
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;  sign            1    8[COMRAM] unsigned char 
 13224 ;;  arg             4   10[COMRAM] unsigned long 
 13225 ;;  exp             1    9[COMRAM] unsigned char 
 13226 ;; Return value:  Size  Location     Type
 13227 ;;                  4    0[COMRAM] unsigned char 
 13228 ;; Registers used:
 13229 ;;		wreg, status,2, status,0
 13230 ;; Tracked objects:
 13231 ;;		On entry : 0/0
 13232 ;;		On exit  : 0/0
 13233 ;;		Unchanged: 0/0
 13234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13236 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13238 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13239 ;;Total ram usage:       14 bytes
 13240 ;; Hardware stack levels used: 1
 13241 ;; Hardware stack levels required when called: 1
 13242 ;; This function calls:
 13243 ;;		Nothing
 13244 ;; This function is called by:
 13245 ;;		_colour_rel
 13246 ;;		_Colour_decider
 13247 ;;		_reverseOneBlock
 13248 ;;		_ForwardOneBlock
 13249 ;;		_Forwardhalfblock
 13250 ;;		_Backhalfblock
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           	psect	text76
 13255   0041C0                     __ptext76:
 13256                           	callstack 0
 13257   0041C0                     ___xxtofl:
 13258                           	callstack 28
 13259                           
 13260                           ;incstack = 0
 13261                           ;___xxtofl@sign stored from wreg
 13262   0041C0  6E09               	movwf	___xxtofl@sign^0,c
 13263   0041C2  5009               	movf	___xxtofl@sign^0,w,c
 13264   0041C4  B4D8               	btfsc	status,2,c
 13265   0041C6  EFE7  F020         	goto	u5081
 13266   0041CA  EFE9  F020         	goto	u5080
 13267   0041CE                     u5081:
 13268   0041CE  EF0B  F021         	goto	l1405
 13269   0041D2                     u5080:
 13270   0041D2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13271   0041D4  EFF0  F020         	goto	u5090
 13272   0041D8  EFEE  F020         	goto	u5091
 13273   0041DC                     u5091:
 13274   0041DC  EF0B  F021         	goto	l1405
 13275   0041E0                     u5090:
 13276   0041E0  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13277   0041E4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13278   0041E8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13279   0041EC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13280   0041F0  1E05               	comf	??___xxtofl^0,f,c
 13281   0041F2  1E06               	comf	(??___xxtofl+1)^0,f,c
 13282   0041F4  1E07               	comf	(??___xxtofl+2)^0,f,c
 13283   0041F6  1E08               	comf	(??___xxtofl+3)^0,f,c
 13284   0041F8  2A05               	incf	??___xxtofl^0,f,c
 13285   0041FA  0E00               	movlw	0
 13286   0041FC  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13287   0041FE  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13288   004200  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13289   004202  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13290   004206  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13291   00420A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13292   00420E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13293   004212  EF13  F021         	goto	l5291
 13294   004216                     l1405:
 13295   004216  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13296   00421A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13297   00421E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13298   004222  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13299   004226                     l5291:
 13300   004226  5001               	movf	___xxtofl@val^0,w,c
 13301   004228  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13302   00422A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13303   00422C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13304   00422E  A4D8               	btfss	status,2,c
 13305   004230  EF1C  F021         	goto	u5101
 13306   004234  EF1E  F021         	goto	u5100
 13307   004238                     u5101:
 13308   004238  EF28  F021         	goto	l5297
 13309   00423C                     u5100:
 13310   00423C  0E00               	movlw	0
 13311   00423E  6E01               	movwf	?___xxtofl^0,c
 13312   004240  0E00               	movlw	0
 13313   004242  6E02               	movwf	(?___xxtofl+1)^0,c
 13314   004244  0E00               	movlw	0
 13315   004246  6E03               	movwf	(?___xxtofl+2)^0,c
 13316   004248  0E00               	movlw	0
 13317   00424A  6E04               	movwf	(?___xxtofl+3)^0,c
 13318   00424C  EFB9  F021         	goto	l1408
 13319   004250                     l5297:
 13320   004250  0E96               	movlw	150
 13321   004252  6E0A               	movwf	___xxtofl@exp^0,c
 13322   004254  EF32  F021         	goto	l5301
 13323   004258                     l5299:
 13324   004258  2A0A               	incf	___xxtofl@exp^0,f,c
 13325   00425A  90D8               	bcf	status,0,c
 13326   00425C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13327   00425E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13328   004260  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13329   004262  320B               	rrcf	___xxtofl@arg^0,f,c
 13330   004264                     l5301:
 13331   004264  0E00               	movlw	0
 13332   004266  140B               	andwf	___xxtofl@arg^0,w,c
 13333   004268  6E05               	movwf	??___xxtofl^0,c
 13334   00426A  0E00               	movlw	0
 13335   00426C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13336   00426E  6E06               	movwf	(??___xxtofl+1)^0,c
 13337   004270  0E00               	movlw	0
 13338   004272  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13339   004274  6E07               	movwf	(??___xxtofl+2)^0,c
 13340   004276  0EFE               	movlw	254
 13341   004278  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13342   00427A  6E08               	movwf	(??___xxtofl+3)^0,c
 13343   00427C  5005               	movf	??___xxtofl^0,w,c
 13344   00427E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13345   004280  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13346   004282  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13347   004284  A4D8               	btfss	status,2,c
 13348   004286  EF47  F021         	goto	u5111
 13349   00428A  EF49  F021         	goto	u5110
 13350   00428E                     u5111:
 13351   00428E  EF2C  F021         	goto	l5299
 13352   004292                     u5110:
 13353   004292  EF57  F021         	goto	l1412
 13354   004296                     l5303:
 13355   004296  2A0A               	incf	___xxtofl@exp^0,f,c
 13356   004298  0E01               	movlw	1
 13357   00429A  260B               	addwf	___xxtofl@arg^0,f,c
 13358   00429C  0E00               	movlw	0
 13359   00429E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13360   0042A0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13361   0042A2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13362   0042A4  90D8               	bcf	status,0,c
 13363   0042A6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13364   0042A8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13365   0042AA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13366   0042AC  320B               	rrcf	___xxtofl@arg^0,f,c
 13367   0042AE                     l1412:
 13368   0042AE  0E00               	movlw	0
 13369   0042B0  140B               	andwf	___xxtofl@arg^0,w,c
 13370   0042B2  6E05               	movwf	??___xxtofl^0,c
 13371   0042B4  0E00               	movlw	0
 13372   0042B6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13373   0042B8  6E06               	movwf	(??___xxtofl+1)^0,c
 13374   0042BA  0E00               	movlw	0
 13375   0042BC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13376   0042BE  6E07               	movwf	(??___xxtofl+2)^0,c
 13377   0042C0  0EFF               	movlw	255
 13378   0042C2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13379   0042C4  6E08               	movwf	(??___xxtofl+3)^0,c
 13380   0042C6  5005               	movf	??___xxtofl^0,w,c
 13381   0042C8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13382   0042CA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13383   0042CC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13384   0042CE  A4D8               	btfss	status,2,c
 13385   0042D0  EF6C  F021         	goto	u5121
 13386   0042D4  EF6E  F021         	goto	u5120
 13387   0042D8                     u5121:
 13388   0042D8  EF4B  F021         	goto	l5303
 13389   0042DC                     u5120:
 13390   0042DC  EF76  F021         	goto	l5311
 13391   0042E0                     l5309:
 13392   0042E0  060A               	decf	___xxtofl@exp^0,f,c
 13393   0042E2  90D8               	bcf	status,0,c
 13394   0042E4  360B               	rlcf	___xxtofl@arg^0,f,c
 13395   0042E6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13396   0042E8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13397   0042EA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13398   0042EC                     l5311:
 13399   0042EC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13400   0042EE  EF7B  F021         	goto	u5131
 13401   0042F2  EF7D  F021         	goto	u5130
 13402   0042F6                     u5131:
 13403   0042F6  EF85  F021         	goto	l1419
 13404   0042FA                     u5130:
 13405   0042FA  0E02               	movlw	2
 13406   0042FC  600A               	cpfslt	___xxtofl@exp^0,c
 13407   0042FE  EF83  F021         	goto	u5141
 13408   004302  EF85  F021         	goto	u5140
 13409   004306                     u5141:
 13410   004306  EF70  F021         	goto	l5309
 13411   00430A                     u5140:
 13412   00430A                     l1419:
 13413   00430A  B00A               	btfsc	___xxtofl@exp^0,0,c
 13414   00430C  EF8A  F021         	goto	u5151
 13415   004310  EF8C  F021         	goto	u5150
 13416   004314                     u5151:
 13417   004314  EF8D  F021         	goto	l5317
 13418   004318                     u5150:
 13419   004318  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13420   00431A                     l5317:
 13421   00431A  90D8               	bcf	status,0,c
 13422   00431C  320A               	rrcf	___xxtofl@exp^0,f,c
 13423   00431E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13424   004322  6A06               	clrf	(??___xxtofl+1)^0,c
 13425   004324  6A07               	clrf	(??___xxtofl+2)^0,c
 13426   004326  6A08               	clrf	(??___xxtofl+3)^0,c
 13427   004328  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13428   00432C  6A07               	clrf	(??___xxtofl+2)^0,c
 13429   00432E  6A06               	clrf	(??___xxtofl+1)^0,c
 13430   004330  6A05               	clrf	??___xxtofl^0,c
 13431   004332  5005               	movf	??___xxtofl^0,w,c
 13432   004334  120B               	iorwf	___xxtofl@arg^0,f,c
 13433   004336  5006               	movf	(??___xxtofl+1)^0,w,c
 13434   004338  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13435   00433A  5007               	movf	(??___xxtofl+2)^0,w,c
 13436   00433C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13437   00433E  5008               	movf	(??___xxtofl+3)^0,w,c
 13438   004340  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13439   004342  5009               	movf	___xxtofl@sign^0,w,c
 13440   004344  B4D8               	btfsc	status,2,c
 13441   004346  EFA7  F021         	goto	u5161
 13442   00434A  EFA9  F021         	goto	u5160
 13443   00434E                     u5161:
 13444   00434E  EFB1  F021         	goto	l5327
 13445   004352                     u5160:
 13446   004352  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13447   004354  EFB0  F021         	goto	u5170
 13448   004358  EFAE  F021         	goto	u5171
 13449   00435C                     u5171:
 13450   00435C  EFB1  F021         	goto	l5327
 13451   004360                     u5170:
 13452   004360  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13453   004362                     l5327:
 13454   004362  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13455   004366  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13456   00436A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13457   00436E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13458   004372                     l1408:
 13459   004372  0012               	return		;funcret
 13460   004374                     __end_of___xxtofl:
 13461                           	callstack 0
 13462                           
 13463 ;; *************** function ___flsub *****************
 13464 ;; Defined at:
 13465 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13466 ;; Parameters:    Size  Location     Type
 13467 ;;  b               4   41[COMRAM] unsigned char 
 13468 ;;  a               4   45[COMRAM] unsigned char 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  4   41[COMRAM] unsigned char 
 13473 ;; Registers used:
 13474 ;;		wreg, status,2, status,0, cstack
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13480 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13484 ;;Total ram usage:        8 bytes
 13485 ;; Hardware stack levels used: 1
 13486 ;; Hardware stack levels required when called: 2
 13487 ;; This function calls:
 13488 ;;		___fladd
 13489 ;; This function is called by:
 13490 ;;		_Colour_decider
 13491 ;;		_efgtoa
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text77
 13496   005D6A                     __ptext77:
 13497                           	callstack 0
 13498   005D6A                     ___flsub:
 13499                           	callstack 24
 13500   005D6A  0E00               	movlw	0
 13501   005D6C  1A2E               	xorwf	___flsub@a^0,f,c
 13502   005D6E  0E00               	movlw	0
 13503   005D70  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13504   005D72  0E00               	movlw	0
 13505   005D74  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13506   005D76  0E80               	movlw	128
 13507   005D78  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13508   005D7A  C02A  F001         	movff	___flsub@b,___fladd@b
 13509   005D7E  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13510   005D82  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13511   005D86  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13512   005D8A  C02E  F005         	movff	___flsub@a,___fladd@a
 13513   005D8E  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13514   005D92  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13515   005D96  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13516   005D9A  EC16  F011         	call	___fladd	;wreg free
 13517   005D9E  C001  F02A         	movff	?___fladd,?___flsub
 13518   005DA2  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13519   005DA6  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13520   005DAA  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13521   005DAE  0012               	return		;funcret
 13522   005DB0                     __end_of___flsub:
 13523                           	callstack 0
 13524                           
 13525 ;; *************** function ___fladd *****************
 13526 ;; Defined at:
 13527 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;  b               4    0[COMRAM] unsigned char 
 13530 ;;  a               4    4[COMRAM] unsigned char 
 13531 ;; Auto vars:     Size  Location     Type
 13532 ;;  grs             1   15[COMRAM] unsigned char 
 13533 ;;  bexp            1   14[COMRAM] unsigned char 
 13534 ;;  aexp            1   13[COMRAM] unsigned char 
 13535 ;;  signs           1   12[COMRAM] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  4    0[COMRAM] unsigned char 
 13538 ;; Registers used:
 13539 ;;		wreg, status,2, status,0
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13545 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13547 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13549 ;;Total ram usage:       16 bytes
 13550 ;; Hardware stack levels used: 1
 13551 ;; Hardware stack levels required when called: 1
 13552 ;; This function calls:
 13553 ;;		Nothing
 13554 ;; This function is called by:
 13555 ;;		_colour_rel
 13556 ;;		_Colour_decider
 13557 ;;		___flsub
 13558 ;;		_efgtoa
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text78
 13563   00222C                     __ptext78:
 13564                           	callstack 0
 13565   00222C                     ___fladd:
 13566                           	callstack 24
 13567   00222C  5004               	movf	(___fladd@b+3)^0,w,c
 13568   00222E  0B80               	andlw	128
 13569   002230  6E0D               	movwf	___fladd@signs^0,c
 13570   002232  5004               	movf	(___fladd@b+3)^0,w,c
 13571   002234  2404               	addwf	(___fladd@b+3)^0,w,c
 13572   002236  6E0F               	movwf	___fladd@bexp^0,c
 13573   002238  AE03               	btfss	(___fladd@b+2)^0,7,c
 13574   00223A  EF21  F011         	goto	u3011
 13575   00223E  EF23  F011         	goto	u3010
 13576   002242                     u3011:
 13577   002242  EF24  F011         	goto	l3903
 13578   002246                     u3010:
 13579   002246  800F               	bsf	___fladd@bexp^0,0,c
 13580   002248                     l3903:
 13581   002248  500F               	movf	___fladd@bexp^0,w,c
 13582   00224A  B4D8               	btfsc	status,2,c
 13583   00224C  EF2A  F011         	goto	u3021
 13584   002250  EF2C  F011         	goto	u3020
 13585   002254                     u3021:
 13586   002254  EF41  F011         	goto	l3913
 13587   002258                     u3020:
 13588   002258  280F               	incf	___fladd@bexp^0,w,c
 13589   00225A  A4D8               	btfss	status,2,c
 13590   00225C  EF32  F011         	goto	u3031
 13591   002260  EF34  F011         	goto	u3030
 13592   002264                     u3031:
 13593   002264  EF3C  F011         	goto	l3909
 13594   002268                     u3030:
 13595   002268  0E00               	movlw	0
 13596   00226A  6E01               	movwf	___fladd@b^0,c
 13597   00226C  0E00               	movlw	0
 13598   00226E  6E02               	movwf	(___fladd@b+1)^0,c
 13599   002270  0E00               	movlw	0
 13600   002272  6E03               	movwf	(___fladd@b+2)^0,c
 13601   002274  0E00               	movlw	0
 13602   002276  6E04               	movwf	(___fladd@b+3)^0,c
 13603   002278                     l3909:
 13604   002278  8E03               	bsf	(___fladd@b+2)^0,7,c
 13605   00227A  0E00               	movlw	0
 13606   00227C  6E04               	movwf	(___fladd@b+3)^0,c
 13607   00227E  EF49  F011         	goto	l3915
 13608   002282                     l3913:
 13609   002282  0E00               	movlw	0
 13610   002284  6E01               	movwf	___fladd@b^0,c
 13611   002286  0E00               	movlw	0
 13612   002288  6E02               	movwf	(___fladd@b+1)^0,c
 13613   00228A  0E00               	movlw	0
 13614   00228C  6E03               	movwf	(___fladd@b+2)^0,c
 13615   00228E  0E00               	movlw	0
 13616   002290  6E04               	movwf	(___fladd@b+3)^0,c
 13617   002292                     l3915:
 13618   002292  5008               	movf	(___fladd@a+3)^0,w,c
 13619   002294  0B80               	andlw	128
 13620   002296  6E0E               	movwf	___fladd@aexp^0,c
 13621   002298  500D               	movf	___fladd@signs^0,w,c
 13622   00229A  180E               	xorwf	___fladd@aexp^0,w,c
 13623   00229C  B4D8               	btfsc	status,2,c
 13624   00229E  EF53  F011         	goto	u3041
 13625   0022A2  EF55  F011         	goto	u3040
 13626   0022A6                     u3041:
 13627   0022A6  EF56  F011         	goto	l3921
 13628   0022AA                     u3040:
 13629   0022AA  8C0D               	bsf	___fladd@signs^0,6,c
 13630   0022AC                     l3921:
 13631   0022AC  5008               	movf	(___fladd@a+3)^0,w,c
 13632   0022AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13633   0022B0  6E0E               	movwf	___fladd@aexp^0,c
 13634   0022B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13635   0022B4  EF5E  F011         	goto	u3051
 13636   0022B8  EF60  F011         	goto	u3050
 13637   0022BC                     u3051:
 13638   0022BC  EF61  F011         	goto	l3927
 13639   0022C0                     u3050:
 13640   0022C0  800E               	bsf	___fladd@aexp^0,0,c
 13641   0022C2                     l3927:
 13642   0022C2  500E               	movf	___fladd@aexp^0,w,c
 13643   0022C4  B4D8               	btfsc	status,2,c
 13644   0022C6  EF67  F011         	goto	u3061
 13645   0022CA  EF69  F011         	goto	u3060
 13646   0022CE                     u3061:
 13647   0022CE  EF7E  F011         	goto	l3937
 13648   0022D2                     u3060:
 13649   0022D2  280E               	incf	___fladd@aexp^0,w,c
 13650   0022D4  A4D8               	btfss	status,2,c
 13651   0022D6  EF6F  F011         	goto	u3071
 13652   0022DA  EF71  F011         	goto	u3070
 13653   0022DE                     u3071:
 13654   0022DE  EF79  F011         	goto	l3933
 13655   0022E2                     u3070:
 13656   0022E2  0E00               	movlw	0
 13657   0022E4  6E05               	movwf	___fladd@a^0,c
 13658   0022E6  0E00               	movlw	0
 13659   0022E8  6E06               	movwf	(___fladd@a+1)^0,c
 13660   0022EA  0E00               	movlw	0
 13661   0022EC  6E07               	movwf	(___fladd@a+2)^0,c
 13662   0022EE  0E00               	movlw	0
 13663   0022F0  6E08               	movwf	(___fladd@a+3)^0,c
 13664   0022F2                     l3933:
 13665   0022F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13666   0022F4  0E00               	movlw	0
 13667   0022F6  6E08               	movwf	(___fladd@a+3)^0,c
 13668   0022F8  EF86  F011         	goto	l3939
 13669   0022FC                     l3937:
 13670   0022FC  0E00               	movlw	0
 13671   0022FE  6E05               	movwf	___fladd@a^0,c
 13672   002300  0E00               	movlw	0
 13673   002302  6E06               	movwf	(___fladd@a+1)^0,c
 13674   002304  0E00               	movlw	0
 13675   002306  6E07               	movwf	(___fladd@a+2)^0,c
 13676   002308  0E00               	movlw	0
 13677   00230A  6E08               	movwf	(___fladd@a+3)^0,c
 13678   00230C                     l3939:
 13679   00230C  500F               	movf	___fladd@bexp^0,w,c
 13680   00230E  5C0E               	subwf	___fladd@aexp^0,w,c
 13681   002310  B0D8               	btfsc	status,0,c
 13682   002312  EF8D  F011         	goto	u3081
 13683   002316  EF8F  F011         	goto	u3080
 13684   00231A                     u3081:
 13685   00231A  EFB6  F011         	goto	l3975
 13686   00231E                     u3080:
 13687   00231E  AC0D               	btfss	___fladd@signs^0,6,c
 13688   002320  EF94  F011         	goto	u3091
 13689   002324  EF96  F011         	goto	u3090
 13690   002328                     u3091:
 13691   002328  EF98  F011         	goto	l3945
 13692   00232C                     u3090:
 13693   00232C  0E80               	movlw	128
 13694   00232E  1A0D               	xorwf	___fladd@signs^0,f,c
 13695   002330                     l3945:
 13696   002330  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13697   002334  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13698   002338  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13699   00233C  C001  F010         	movff	___fladd@b,___fladd@grs
 13700   002340  C005  F001         	movff	___fladd@a,___fladd@b
 13701   002344  C010  F005         	movff	___fladd@grs,___fladd@a
 13702   002348  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13703   00234C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13704   002350  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13705   002354  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13706   002358  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13707   00235C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13708   002360  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13709   002364  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13710   002368  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13711   00236C                     l3975:
 13712   00236C  0E00               	movlw	0
 13713   00236E  6E10               	movwf	___fladd@grs^0,c
 13714   002370  500F               	movf	___fladd@bexp^0,w,c
 13715   002372  C00E  F009         	movff	___fladd@aexp,??___fladd
 13716   002376  6A0A               	clrf	(??___fladd+1)^0,c
 13717   002378  5E09               	subwf	??___fladd^0,f,c
 13718   00237A  0E00               	movlw	0
 13719   00237C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13720   00237E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13721   002380  EFCB  F011         	goto	u3101
 13722   002384  500A               	movf	(??___fladd+1)^0,w,c
 13723   002386  E109               	bnz	u3100
 13724   002388  0E1A               	movlw	26
 13725   00238A  5C09               	subwf	??___fladd^0,w,c
 13726   00238C  A0D8               	btfss	status,0,c
 13727   00238E  EFCB  F011         	goto	u3101
 13728   002392  EFCD  F011         	goto	u3100
 13729   002396                     u3101:
 13730   002396  EF04  F012         	goto	l1279
 13731   00239A                     u3100:
 13732   00239A  5001               	movf	___fladd@b^0,w,c
 13733   00239C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13734   00239E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13735   0023A0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13736   0023A2  A4D8               	btfss	status,2,c
 13737   0023A4  EFD6  F011         	goto	u3111
 13738   0023A8  EFD9  F011         	goto	u3110
 13739   0023AC                     u3111:
 13740   0023AC  0E01               	movlw	1
 13741   0023AE  EFDA  F011         	goto	u3120
 13742   0023B2                     u3110:
 13743   0023B2  0E00               	movlw	0
 13744   0023B4                     u3120:
 13745   0023B4  6E10               	movwf	___fladd@grs^0,c
 13746   0023B6  0E00               	movlw	0
 13747   0023B8  6E01               	movwf	___fladd@b^0,c
 13748   0023BA  0E00               	movlw	0
 13749   0023BC  6E02               	movwf	(___fladd@b+1)^0,c
 13750   0023BE  0E00               	movlw	0
 13751   0023C0  6E03               	movwf	(___fladd@b+2)^0,c
 13752   0023C2  0E00               	movlw	0
 13753   0023C4  6E04               	movwf	(___fladd@b+3)^0,c
 13754   0023C6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13755   0023CA  EF0D  F012         	goto	l1278
 13756   0023CE                     l1280:
 13757   0023CE  A010               	btfss	___fladd@grs^0,0,c
 13758   0023D0  EFEC  F011         	goto	u3131
 13759   0023D4  EFEE  F011         	goto	u3130
 13760   0023D8                     u3131:
 13761   0023D8  EFF4  F011         	goto	l3987
 13762   0023DC                     u3130:
 13763   0023DC  90D8               	bcf	status,0,c
 13764   0023DE  3010               	rrcf	___fladd@grs^0,w,c
 13765   0023E0  0901               	iorlw	1
 13766   0023E2  6E10               	movwf	___fladd@grs^0,c
 13767   0023E4  EFF6  F011         	goto	l3989
 13768   0023E8                     l3987:
 13769   0023E8  90D8               	bcf	status,0,c
 13770   0023EA  3210               	rrcf	___fladd@grs^0,f,c
 13771   0023EC                     l3989:
 13772   0023EC  A001               	btfss	___fladd@b^0,0,c
 13773   0023EE  EFFB  F011         	goto	u3141
 13774   0023F2  EFFD  F011         	goto	u3140
 13775   0023F6                     u3141:
 13776   0023F6  EFFE  F011         	goto	l3993
 13777   0023FA                     u3140:
 13778   0023FA  8E10               	bsf	___fladd@grs^0,7,c
 13779   0023FC                     l3993:
 13780   0023FC  3404               	rlcf	(___fladd@b+3)^0,w,c
 13781   0023FE  3204               	rrcf	(___fladd@b+3)^0,f,c
 13782   002400  3203               	rrcf	(___fladd@b+2)^0,f,c
 13783   002402  3202               	rrcf	(___fladd@b+1)^0,f,c
 13784   002404  3201               	rrcf	___fladd@b^0,f,c
 13785   002406  2A0F               	incf	___fladd@bexp^0,f,c
 13786   002408                     l1279:
 13787   002408  500E               	movf	___fladd@aexp^0,w,c
 13788   00240A  5C0F               	subwf	___fladd@bexp^0,w,c
 13789   00240C  A0D8               	btfss	status,0,c
 13790   00240E  EF0B  F012         	goto	u3151
 13791   002412  EF0D  F012         	goto	u3150
 13792   002416                     u3151:
 13793   002416  EFE7  F011         	goto	l1280
 13794   00241A                     u3150:
 13795   00241A                     l1278:
 13796   00241A  BC0D               	btfsc	___fladd@signs^0,6,c
 13797   00241C  EF12  F012         	goto	u3161
 13798   002420  EF14  F012         	goto	u3160
 13799   002424                     u3161:
 13800   002424  EF54  F012         	goto	l4021
 13801   002428                     u3160:
 13802   002428  500F               	movf	___fladd@bexp^0,w,c
 13803   00242A  A4D8               	btfss	status,2,c
 13804   00242C  EF1A  F012         	goto	u3171
 13805   002430  EF1C  F012         	goto	u3170
 13806   002434                     u3171:
 13807   002434  EF26  F012         	goto	l4003
 13808   002438                     u3170:
 13809   002438  0E00               	movlw	0
 13810   00243A  6E01               	movwf	?___fladd^0,c
 13811   00243C  0E00               	movlw	0
 13812   00243E  6E02               	movwf	(?___fladd+1)^0,c
 13813   002440  0E00               	movlw	0
 13814   002442  6E03               	movwf	(?___fladd+2)^0,c
 13815   002444  0E00               	movlw	0
 13816   002446  6E04               	movwf	(?___fladd+3)^0,c
 13817   002448  EF75  F013         	goto	l1287
 13818   00244C                     l4003:
 13819   00244C  5005               	movf	___fladd@a^0,w,c
 13820   00244E  2601               	addwf	___fladd@b^0,f,c
 13821   002450  5006               	movf	(___fladd@a+1)^0,w,c
 13822   002452  2202               	addwfc	(___fladd@b+1)^0,f,c
 13823   002454  5007               	movf	(___fladd@a+2)^0,w,c
 13824   002456  2203               	addwfc	(___fladd@b+2)^0,f,c
 13825   002458  5008               	movf	(___fladd@a+3)^0,w,c
 13826   00245A  2204               	addwfc	(___fladd@b+3)^0,f,c
 13827   00245C  A004               	btfss	(___fladd@b+3)^0,0,c
 13828   00245E  EF33  F012         	goto	u3181
 13829   002462  EF35  F012         	goto	u3180
 13830   002466                     u3181:
 13831   002466  EFE1  F012         	goto	l4057
 13832   00246A                     u3180:
 13833   00246A  A010               	btfss	___fladd@grs^0,0,c
 13834   00246C  EF3A  F012         	goto	u3191
 13835   002470  EF3C  F012         	goto	u3190
 13836   002474                     u3191:
 13837   002474  EF42  F012         	goto	l4011
 13838   002478                     u3190:
 13839   002478  90D8               	bcf	status,0,c
 13840   00247A  3010               	rrcf	___fladd@grs^0,w,c
 13841   00247C  0901               	iorlw	1
 13842   00247E  6E10               	movwf	___fladd@grs^0,c
 13843   002480  EF44  F012         	goto	l4013
 13844   002484                     l4011:
 13845   002484  90D8               	bcf	status,0,c
 13846   002486  3210               	rrcf	___fladd@grs^0,f,c
 13847   002488                     l4013:
 13848   002488  A001               	btfss	___fladd@b^0,0,c
 13849   00248A  EF49  F012         	goto	u3201
 13850   00248E  EF4B  F012         	goto	u3200
 13851   002492                     u3201:
 13852   002492  EF4C  F012         	goto	l4017
 13853   002496                     u3200:
 13854   002496  8E10               	bsf	___fladd@grs^0,7,c
 13855   002498                     l4017:
 13856   002498  3404               	rlcf	(___fladd@b+3)^0,w,c
 13857   00249A  3204               	rrcf	(___fladd@b+3)^0,f,c
 13858   00249C  3203               	rrcf	(___fladd@b+2)^0,f,c
 13859   00249E  3202               	rrcf	(___fladd@b+1)^0,f,c
 13860   0024A0  3201               	rrcf	___fladd@b^0,f,c
 13861   0024A2  2A0F               	incf	___fladd@bexp^0,f,c
 13862   0024A4  EFE1  F012         	goto	l4057
 13863   0024A8                     l4021:
 13864   0024A8  5005               	movf	___fladd@a^0,w,c
 13865   0024AA  5C01               	subwf	___fladd@b^0,w,c
 13866   0024AC  5006               	movf	(___fladd@a+1)^0,w,c
 13867   0024AE  5802               	subwfb	(___fladd@b+1)^0,w,c
 13868   0024B0  5007               	movf	(___fladd@a+2)^0,w,c
 13869   0024B2  5803               	subwfb	(___fladd@b+2)^0,w,c
 13870   0024B4  5004               	movf	(___fladd@b+3)^0,w,c
 13871   0024B6  0A80               	xorlw	128
 13872   0024B8  6E09               	movwf	??___fladd^0,c
 13873   0024BA  5008               	movf	(___fladd@a+3)^0,w,c
 13874   0024BC  0A80               	xorlw	128
 13875   0024BE  5809               	subwfb	??___fladd^0,w,c
 13876   0024C0  B0D8               	btfsc	status,0,c
 13877   0024C2  EF65  F012         	goto	u3211
 13878   0024C6  EF67  F012         	goto	u3210
 13879   0024CA                     u3211:
 13880   0024CA  EF92  F012         	goto	l4031
 13881   0024CE                     u3210:
 13882   0024CE  5001               	movf	___fladd@b^0,w,c
 13883   0024D0  5C05               	subwf	___fladd@a^0,w,c
 13884   0024D2  6E09               	movwf	??___fladd^0,c
 13885   0024D4  5002               	movf	(___fladd@b+1)^0,w,c
 13886   0024D6  5806               	subwfb	(___fladd@a+1)^0,w,c
 13887   0024D8  6E0A               	movwf	(??___fladd+1)^0,c
 13888   0024DA  5003               	movf	(___fladd@b+2)^0,w,c
 13889   0024DC  5807               	subwfb	(___fladd@a+2)^0,w,c
 13890   0024DE  6E0B               	movwf	(??___fladd+2)^0,c
 13891   0024E0  5004               	movf	(___fladd@b+3)^0,w,c
 13892   0024E2  5808               	subwfb	(___fladd@a+3)^0,w,c
 13893   0024E4  6E0C               	movwf	(??___fladd+3)^0,c
 13894   0024E6  0EFF               	movlw	255
 13895   0024E8  2409               	addwf	??___fladd^0,w,c
 13896   0024EA  6E01               	movwf	___fladd@b^0,c
 13897   0024EC  0EFF               	movlw	255
 13898   0024EE  200A               	addwfc	(??___fladd+1)^0,w,c
 13899   0024F0  6E02               	movwf	(___fladd@b+1)^0,c
 13900   0024F2  0EFF               	movlw	255
 13901   0024F4  200B               	addwfc	(??___fladd+2)^0,w,c
 13902   0024F6  6E03               	movwf	(___fladd@b+2)^0,c
 13903   0024F8  0EFF               	movlw	255
 13904   0024FA  200C               	addwfc	(??___fladd+3)^0,w,c
 13905   0024FC  6E04               	movwf	(___fladd@b+3)^0,c
 13906   0024FE  0E80               	movlw	128
 13907   002500  1A0D               	xorwf	___fladd@signs^0,f,c
 13908   002502  6C10               	negf	___fladd@grs^0,c
 13909   002504  5010               	movf	___fladd@grs^0,w,c
 13910   002506  A4D8               	btfss	status,2,c
 13911   002508  EF88  F012         	goto	u3221
 13912   00250C  EF8A  F012         	goto	u3220
 13913   002510                     u3221:
 13914   002510  EF9A  F012         	goto	l1295
 13915   002514                     u3220:
 13916   002514  0E01               	movlw	1
 13917   002516  2601               	addwf	___fladd@b^0,f,c
 13918   002518  0E00               	movlw	0
 13919   00251A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13920   00251C  2203               	addwfc	(___fladd@b+2)^0,f,c
 13921   00251E  2204               	addwfc	(___fladd@b+3)^0,f,c
 13922   002520  EF9A  F012         	goto	l1295
 13923   002524                     l4031:
 13924   002524  5005               	movf	___fladd@a^0,w,c
 13925   002526  5E01               	subwf	___fladd@b^0,f,c
 13926   002528  5006               	movf	(___fladd@a+1)^0,w,c
 13927   00252A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13928   00252C  5007               	movf	(___fladd@a+2)^0,w,c
 13929   00252E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13930   002530  5008               	movf	(___fladd@a+3)^0,w,c
 13931   002532  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13932   002534                     l1295:
 13933   002534  5001               	movf	___fladd@b^0,w,c
 13934   002536  1002               	iorwf	(___fladd@b+1)^0,w,c
 13935   002538  1003               	iorwf	(___fladd@b+2)^0,w,c
 13936   00253A  1004               	iorwf	(___fladd@b+3)^0,w,c
 13937   00253C  A4D8               	btfss	status,2,c
 13938   00253E  EFA3  F012         	goto	u3231
 13939   002542  EFA5  F012         	goto	u3230
 13940   002546                     u3231:
 13941   002546  EFDA  F012         	goto	l4055
 13942   00254A                     u3230:
 13943   00254A  5010               	movf	___fladd@grs^0,w,c
 13944   00254C  A4D8               	btfss	status,2,c
 13945   00254E  EFAB  F012         	goto	u3241
 13946   002552  EFAD  F012         	goto	u3240
 13947   002556                     u3241:
 13948   002556  EFDA  F012         	goto	l4055
 13949   00255A                     u3240:
 13950   00255A  0E00               	movlw	0
 13951   00255C  6E01               	movwf	?___fladd^0,c
 13952   00255E  0E00               	movlw	0
 13953   002560  6E02               	movwf	(?___fladd+1)^0,c
 13954   002562  0E00               	movlw	0
 13955   002564  6E03               	movwf	(?___fladd+2)^0,c
 13956   002566  0E00               	movlw	0
 13957   002568  6E04               	movwf	(?___fladd+3)^0,c
 13958   00256A  EF75  F013         	goto	l1287
 13959   00256E                     l4039:
 13960   00256E  90D8               	bcf	status,0,c
 13961   002570  3601               	rlcf	___fladd@b^0,f,c
 13962   002572  3602               	rlcf	(___fladd@b+1)^0,f,c
 13963   002574  3603               	rlcf	(___fladd@b+2)^0,f,c
 13964   002576  3604               	rlcf	(___fladd@b+3)^0,f,c
 13965   002578  AE10               	btfss	___fladd@grs^0,7,c
 13966   00257A  EFC1  F012         	goto	u3251
 13967   00257E  EFC3  F012         	goto	u3250
 13968   002582                     u3251:
 13969   002582  EFC4  F012         	goto	l4045
 13970   002586                     u3250:
 13971   002586  8001               	bsf	___fladd@b^0,0,c
 13972   002588                     l4045:
 13973   002588  A010               	btfss	___fladd@grs^0,0,c
 13974   00258A  EFC9  F012         	goto	u3261
 13975   00258E  EFCB  F012         	goto	u3260
 13976   002592                     u3261:
 13977   002592  EFCF  F012         	goto	l4049
 13978   002596                     u3260:
 13979   002596  80D8               	bsf	status,0,c
 13980   002598  3610               	rlcf	___fladd@grs^0,f,c
 13981   00259A  EFD1  F012         	goto	l4051
 13982   00259E                     l4049:
 13983   00259E  90D8               	bcf	status,0,c
 13984   0025A0  3610               	rlcf	___fladd@grs^0,f,c
 13985   0025A2                     l4051:
 13986   0025A2  500F               	movf	___fladd@bexp^0,w,c
 13987   0025A4  B4D8               	btfsc	status,2,c
 13988   0025A6  EFD7  F012         	goto	u3271
 13989   0025AA  EFD9  F012         	goto	u3270
 13990   0025AE                     u3271:
 13991   0025AE  EFDA  F012         	goto	l4055
 13992   0025B2                     u3270:
 13993   0025B2  060F               	decf	___fladd@bexp^0,f,c
 13994   0025B4                     l4055:
 13995   0025B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 13996   0025B6  EFDF  F012         	goto	u3281
 13997   0025BA  EFE1  F012         	goto	u3280
 13998   0025BE                     u3281:
 13999   0025BE  EFB7  F012         	goto	l4039
 14000   0025C2                     u3280:
 14001   0025C2                     l4057:
 14002   0025C2  0E00               	movlw	0
 14003   0025C4  6E0E               	movwf	___fladd@aexp^0,c
 14004   0025C6  AE10               	btfss	___fladd@grs^0,7,c
 14005   0025C8  EFE8  F012         	goto	u3291
 14006   0025CC  EFEA  F012         	goto	u3290
 14007   0025D0                     u3291:
 14008   0025D0  EF02  F013         	goto	l1304
 14009   0025D4                     u3290:
 14010   0025D4  C010  F009         	movff	___fladd@grs,??___fladd
 14011   0025D8  0E7F               	movlw	127
 14012   0025DA  1609               	andwf	??___fladd^0,f,c
 14013   0025DC  B4D8               	btfsc	status,2,c
 14014   0025DE  EFF3  F012         	goto	u3301
 14015   0025E2  EFF5  F012         	goto	u3300
 14016   0025E6                     u3301:
 14017   0025E6  EFF9  F012         	goto	l1305
 14018   0025EA                     u3300:
 14019   0025EA                     l4063:
 14020   0025EA  0E01               	movlw	1
 14021   0025EC  6E0E               	movwf	___fladd@aexp^0,c
 14022   0025EE  EF02  F013         	goto	l1304
 14023   0025F2                     l1305:
 14024   0025F2  A001               	btfss	___fladd@b^0,0,c
 14025   0025F4  EFFE  F012         	goto	u3311
 14026   0025F8  EF00  F013         	goto	u3310
 14027   0025FC                     u3311:
 14028   0025FC  EF02  F013         	goto	l1304
 14029   002600                     u3310:
 14030   002600  EFF5  F012         	goto	l4063
 14031   002604                     l1304:
 14032   002604  500E               	movf	___fladd@aexp^0,w,c
 14033   002606  B4D8               	btfsc	status,2,c
 14034   002608  EF08  F013         	goto	u3321
 14035   00260C  EF0A  F013         	goto	u3320
 14036   002610                     u3321:
 14037   002610  EF35  F013         	goto	l4075
 14038   002614                     u3320:
 14039   002614  0E01               	movlw	1
 14040   002616  2601               	addwf	___fladd@b^0,f,c
 14041   002618  0E00               	movlw	0
 14042   00261A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14043   00261C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14044   00261E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14045   002620  A004               	btfss	(___fladd@b+3)^0,0,c
 14046   002622  EF15  F013         	goto	u3331
 14047   002626  EF17  F013         	goto	u3330
 14048   00262A                     u3331:
 14049   00262A  EF35  F013         	goto	l4075
 14050   00262E                     u3330:
 14051   00262E  C001  F009         	movff	___fladd@b,??___fladd
 14052   002632  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 14053   002636  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 14054   00263A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 14055   00263E  340C               	rlcf	(??___fladd+3)^0,w,c
 14056   002640  320C               	rrcf	(??___fladd+3)^0,f,c
 14057   002642  320B               	rrcf	(??___fladd+2)^0,f,c
 14058   002644  320A               	rrcf	(??___fladd+1)^0,f,c
 14059   002646  3209               	rrcf	??___fladd^0,f,c
 14060   002648  C009  F001         	movff	??___fladd,___fladd@b
 14061   00264C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 14062   002650  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 14063   002654  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 14064   002658  280F               	incf	___fladd@bexp^0,w,c
 14065   00265A  B4D8               	btfsc	status,2,c
 14066   00265C  EF32  F013         	goto	u3341
 14067   002660  EF34  F013         	goto	u3340
 14068   002664                     u3341:
 14069   002664  EF35  F013         	goto	l4075
 14070   002668                     u3340:
 14071   002668  2A0F               	incf	___fladd@bexp^0,f,c
 14072   00266A                     l4075:
 14073   00266A  280F               	incf	___fladd@bexp^0,w,c
 14074   00266C  B4D8               	btfsc	status,2,c
 14075   00266E  EF3B  F013         	goto	u3351
 14076   002672  EF3D  F013         	goto	u3350
 14077   002676                     u3351:
 14078   002676  EF45  F013         	goto	l4079
 14079   00267A                     u3350:
 14080   00267A  500F               	movf	___fladd@bexp^0,w,c
 14081   00267C  A4D8               	btfss	status,2,c
 14082   00267E  EF43  F013         	goto	u3361
 14083   002682  EF45  F013         	goto	u3360
 14084   002686                     u3361:
 14085   002686  EF57  F013         	goto	l4083
 14086   00268A                     u3360:
 14087   00268A                     l4079:
 14088   00268A  0E00               	movlw	0
 14089   00268C  6E01               	movwf	___fladd@b^0,c
 14090   00268E  0E00               	movlw	0
 14091   002690  6E02               	movwf	(___fladd@b+1)^0,c
 14092   002692  0E00               	movlw	0
 14093   002694  6E03               	movwf	(___fladd@b+2)^0,c
 14094   002696  0E00               	movlw	0
 14095   002698  6E04               	movwf	(___fladd@b+3)^0,c
 14096   00269A  500F               	movf	___fladd@bexp^0,w,c
 14097   00269C  A4D8               	btfss	status,2,c
 14098   00269E  EF53  F013         	goto	u3371
 14099   0026A2  EF55  F013         	goto	u3370
 14100   0026A6                     u3371:
 14101   0026A6  EF57  F013         	goto	l4083
 14102   0026AA                     u3370:
 14103   0026AA  0E00               	movlw	0
 14104   0026AC  6E0D               	movwf	___fladd@signs^0,c
 14105   0026AE                     l4083:
 14106   0026AE  A00F               	btfss	___fladd@bexp^0,0,c
 14107   0026B0  EF5C  F013         	goto	u3381
 14108   0026B4  EF5E  F013         	goto	u3380
 14109   0026B8                     u3381:
 14110   0026B8  EF61  F013         	goto	l4087
 14111   0026BC                     u3380:
 14112   0026BC  8E03               	bsf	(___fladd@b+2)^0,7,c
 14113   0026BE  EF62  F013         	goto	l4089
 14114   0026C2                     l4087:
 14115   0026C2  9E03               	bcf	(___fladd@b+2)^0,7,c
 14116   0026C4                     l4089:
 14117   0026C4  90D8               	bcf	status,0,c
 14118   0026C6  300F               	rrcf	___fladd@bexp^0,w,c
 14119   0026C8  6E04               	movwf	(___fladd@b+3)^0,c
 14120   0026CA  AE0D               	btfss	___fladd@signs^0,7,c
 14121   0026CC  EF6A  F013         	goto	u3391
 14122   0026D0  EF6C  F013         	goto	u3390
 14123   0026D4                     u3391:
 14124   0026D4  EF6D  F013         	goto	l4095
 14125   0026D8                     u3390:
 14126   0026D8  8E04               	bsf	(___fladd@b+3)^0,7,c
 14127   0026DA                     l4095:
 14128   0026DA  C001  F001         	movff	___fladd@b,?___fladd
 14129   0026DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14130   0026E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14131   0026E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14132   0026EA                     l1287:
 14133   0026EA  0012               	return		;funcret
 14134   0026EC                     __end_of___fladd:
 14135                           	callstack 0
 14136                           
 14137 ;; *************** function ___flmul *****************
 14138 ;; Defined at:
 14139 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14140 ;; Parameters:    Size  Location     Type
 14141 ;;  b               4   16[COMRAM] unsigned char 
 14142 ;;  a               4   20[COMRAM] unsigned char 
 14143 ;; Auto vars:     Size  Location     Type
 14144 ;;  prod            4   35[COMRAM] struct .
 14145 ;;  grs             4   29[COMRAM] unsigned long 
 14146 ;;  temp            2   39[COMRAM] struct .
 14147 ;;  bexp            1   34[COMRAM] unsigned char 
 14148 ;;  aexp            1   33[COMRAM] unsigned char 
 14149 ;;  sign            1   28[COMRAM] unsigned char 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  4   16[COMRAM] unsigned char 
 14152 ;; Registers used:
 14153 ;;		wreg, status,2, status,0, prodl, prodh
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14159 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14160 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14162 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14163 ;;Total ram usage:       25 bytes
 14164 ;; Hardware stack levels used: 1
 14165 ;; Hardware stack levels required when called: 1
 14166 ;; This function calls:
 14167 ;;		Nothing
 14168 ;; This function is called by:
 14169 ;;		_Colour_decider
 14170 ;;		_reverseOneBlock
 14171 ;;		_ForwardOneBlock
 14172 ;;		_Forwardhalfblock
 14173 ;;		_Backhalfblock
 14174 ;;		_efgtoa
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text79
 14179   0026EC                     __ptext79:
 14180                           	callstack 0
 14181   0026EC                     ___flmul:
 14182                           	callstack 25
 14183   0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 14184   0026EE  0B80               	andlw	128
 14185   0026F0  6E1D               	movwf	___flmul@sign^0,c
 14186   0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 14187   0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 14188   0026F6  6E23               	movwf	___flmul@bexp^0,c
 14189   0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14190   0026FA  EF81  F013         	goto	u3881
 14191   0026FE  EF83  F013         	goto	u3880
 14192   002702                     u3881:
 14193   002702  EF84  F013         	goto	l4407
 14194   002706                     u3880:
 14195   002706  8023               	bsf	___flmul@bexp^0,0,c
 14196   002708                     l4407:
 14197   002708  5023               	movf	___flmul@bexp^0,w,c
 14198   00270A  B4D8               	btfsc	status,2,c
 14199   00270C  EF8A  F013         	goto	u3891
 14200   002710  EF8C  F013         	goto	u3890
 14201   002714                     u3891:
 14202   002714  EF9F  F013         	goto	l4415
 14203   002718                     u3890:
 14204   002718  2823               	incf	___flmul@bexp^0,w,c
 14205   00271A  A4D8               	btfss	status,2,c
 14206   00271C  EF92  F013         	goto	u3901
 14207   002720  EF94  F013         	goto	u3900
 14208   002724                     u3901:
 14209   002724  EF9C  F013         	goto	l4413
 14210   002728                     u3900:
 14211   002728  0E00               	movlw	0
 14212   00272A  6E11               	movwf	___flmul@b^0,c
 14213   00272C  0E00               	movlw	0
 14214   00272E  6E12               	movwf	(___flmul@b+1)^0,c
 14215   002730  0E00               	movlw	0
 14216   002732  6E13               	movwf	(___flmul@b+2)^0,c
 14217   002734  0E00               	movlw	0
 14218   002736  6E14               	movwf	(___flmul@b+3)^0,c
 14219   002738                     l4413:
 14220   002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 14221   00273A  EFA7  F013         	goto	l4417
 14222   00273E                     l4415:
 14223   00273E  0E00               	movlw	0
 14224   002740  6E11               	movwf	___flmul@b^0,c
 14225   002742  0E00               	movlw	0
 14226   002744  6E12               	movwf	(___flmul@b+1)^0,c
 14227   002746  0E00               	movlw	0
 14228   002748  6E13               	movwf	(___flmul@b+2)^0,c
 14229   00274A  0E00               	movlw	0
 14230   00274C  6E14               	movwf	(___flmul@b+3)^0,c
 14231   00274E                     l4417:
 14232   00274E  5018               	movf	(___flmul@a+3)^0,w,c
 14233   002750  0B80               	andlw	128
 14234   002752  1A1D               	xorwf	___flmul@sign^0,f,c
 14235   002754  5018               	movf	(___flmul@a+3)^0,w,c
 14236   002756  2418               	addwf	(___flmul@a+3)^0,w,c
 14237   002758  6E22               	movwf	___flmul@aexp^0,c
 14238   00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14239   00275C  EFB2  F013         	goto	u3911
 14240   002760  EFB4  F013         	goto	u3910
 14241   002764                     u3911:
 14242   002764  EFB5  F013         	goto	l4425
 14243   002768                     u3910:
 14244   002768  8022               	bsf	___flmul@aexp^0,0,c
 14245   00276A                     l4425:
 14246   00276A  5022               	movf	___flmul@aexp^0,w,c
 14247   00276C  B4D8               	btfsc	status,2,c
 14248   00276E  EFBB  F013         	goto	u3921
 14249   002772  EFBD  F013         	goto	u3920
 14250   002776                     u3921:
 14251   002776  EFD0  F013         	goto	l4433
 14252   00277A                     u3920:
 14253   00277A  2822               	incf	___flmul@aexp^0,w,c
 14254   00277C  A4D8               	btfss	status,2,c
 14255   00277E  EFC3  F013         	goto	u3931
 14256   002782  EFC5  F013         	goto	u3930
 14257   002786                     u3931:
 14258   002786  EFCD  F013         	goto	l4431
 14259   00278A                     u3930:
 14260   00278A  0E00               	movlw	0
 14261   00278C  6E15               	movwf	___flmul@a^0,c
 14262   00278E  0E00               	movlw	0
 14263   002790  6E16               	movwf	(___flmul@a+1)^0,c
 14264   002792  0E00               	movlw	0
 14265   002794  6E17               	movwf	(___flmul@a+2)^0,c
 14266   002796  0E00               	movlw	0
 14267   002798  6E18               	movwf	(___flmul@a+3)^0,c
 14268   00279A                     l4431:
 14269   00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14270   00279C  EFD8  F013         	goto	l1364
 14271   0027A0                     l4433:
 14272   0027A0  0E00               	movlw	0
 14273   0027A2  6E15               	movwf	___flmul@a^0,c
 14274   0027A4  0E00               	movlw	0
 14275   0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 14276   0027A8  0E00               	movlw	0
 14277   0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 14278   0027AC  0E00               	movlw	0
 14279   0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 14280   0027B0                     l1364:
 14281   0027B0  5022               	movf	___flmul@aexp^0,w,c
 14282   0027B2  B4D8               	btfsc	status,2,c
 14283   0027B4  EFDE  F013         	goto	u3941
 14284   0027B8  EFE0  F013         	goto	u3940
 14285   0027BC                     u3941:
 14286   0027BC  EFE8  F013         	goto	l4437
 14287   0027C0                     u3940:
 14288   0027C0  5023               	movf	___flmul@bexp^0,w,c
 14289   0027C2  A4D8               	btfss	status,2,c
 14290   0027C4  EFE6  F013         	goto	u3951
 14291   0027C8  EFE8  F013         	goto	u3950
 14292   0027CC                     u3951:
 14293   0027CC  EFF2  F013         	goto	l4441
 14294   0027D0                     u3950:
 14295   0027D0                     l4437:
 14296   0027D0  0E00               	movlw	0
 14297   0027D2  6E11               	movwf	?___flmul^0,c
 14298   0027D4  0E00               	movlw	0
 14299   0027D6  6E12               	movwf	(?___flmul+1)^0,c
 14300   0027D8  0E00               	movlw	0
 14301   0027DA  6E13               	movwf	(?___flmul+2)^0,c
 14302   0027DC  0E00               	movlw	0
 14303   0027DE  6E14               	movwf	(?___flmul+3)^0,c
 14304   0027E0  EF8A  F015         	goto	l1368
 14305   0027E4                     l4441:
 14306   0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 14307   0027E6  0211               	mulwf	___flmul@b^0,c
 14308   0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 14309   0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14310   0027F0  5028               	movf	___flmul@temp^0,w,c
 14311   0027F2  6E1E               	movwf	___flmul@grs^0,c
 14312   0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14313   0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 14314   0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 14315   0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 14316   0027FC  6E24               	movwf	___flmul@prod^0,c
 14317   0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 14318   002800  6A26               	clrf	(___flmul@prod+2)^0,c
 14319   002802  6A27               	clrf	(___flmul@prod+3)^0,c
 14320   002804  5016               	movf	(___flmul@a+1)^0,w,c
 14321   002806  0212               	mulwf	(___flmul@b+1)^0,c
 14322   002808  CFF3 F028          	movff	prodl,___flmul@temp
 14323   00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14324   002810  5028               	movf	___flmul@temp^0,w,c
 14325   002812  261E               	addwf	___flmul@grs^0,f,c
 14326   002814  0E00               	movlw	0
 14327   002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14328   002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14329   00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14330   00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 14331   00281E  2624               	addwf	___flmul@prod^0,f,c
 14332   002820  0E00               	movlw	0
 14333   002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14334   002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14335   002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14336   002828  5015               	movf	___flmul@a^0,w,c
 14337   00282A  0213               	mulwf	(___flmul@b+2)^0,c
 14338   00282C  CFF3 F028          	movff	prodl,___flmul@temp
 14339   002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 14340   002834  5028               	movf	___flmul@temp^0,w,c
 14341   002836  261E               	addwf	___flmul@grs^0,f,c
 14342   002838  0E00               	movlw	0
 14343   00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14344   00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14345   00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14346   002840  5029               	movf	(___flmul@temp+1)^0,w,c
 14347   002842  2624               	addwf	___flmul@prod^0,f,c
 14348   002844  0E00               	movlw	0
 14349   002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14350   002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14351   00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14352   00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14353   002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14354   002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14355   002858  6A1E               	clrf	___flmul@grs^0,c
 14356   00285A  5015               	movf	___flmul@a^0,w,c
 14357   00285C  0212               	mulwf	(___flmul@b+1)^0,c
 14358   00285E  CFF3 F028          	movff	prodl,___flmul@temp
 14359   002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 14360   002866  5028               	movf	___flmul@temp^0,w,c
 14361   002868  261E               	addwf	___flmul@grs^0,f,c
 14362   00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 14363   00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14364   00286E  0E00               	movlw	0
 14365   002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14366   002872  0E00               	movlw	0
 14367   002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14368   002876  5016               	movf	(___flmul@a+1)^0,w,c
 14369   002878  0211               	mulwf	___flmul@b^0,c
 14370   00287A  CFF3 F028          	movff	prodl,___flmul@temp
 14371   00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14372   002882  5028               	movf	___flmul@temp^0,w,c
 14373   002884  261E               	addwf	___flmul@grs^0,f,c
 14374   002886  5029               	movf	(___flmul@temp+1)^0,w,c
 14375   002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14376   00288A  0E00               	movlw	0
 14377   00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14378   00288E  0E00               	movlw	0
 14379   002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14380   002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14381   002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14382   00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14383   00289E  6A1E               	clrf	___flmul@grs^0,c
 14384   0028A0  5015               	movf	___flmul@a^0,w,c
 14385   0028A2  0211               	mulwf	___flmul@b^0,c
 14386   0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 14387   0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14388   0028AC  5028               	movf	___flmul@temp^0,w,c
 14389   0028AE  261E               	addwf	___flmul@grs^0,f,c
 14390   0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 14391   0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14392   0028B4  0E00               	movlw	0
 14393   0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14394   0028B8  0E00               	movlw	0
 14395   0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14396   0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 14397   0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 14398   0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 14399   0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14400   0028C8  5028               	movf	___flmul@temp^0,w,c
 14401   0028CA  2624               	addwf	___flmul@prod^0,f,c
 14402   0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 14403   0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14404   0028D0  0E00               	movlw	0
 14405   0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14406   0028D4  0E00               	movlw	0
 14407   0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14408   0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 14409   0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 14410   0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 14411   0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14412   0028E4  5028               	movf	___flmul@temp^0,w,c
 14413   0028E6  2624               	addwf	___flmul@prod^0,f,c
 14414   0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 14415   0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14416   0028EC  0E00               	movlw	0
 14417   0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14418   0028F0  0E00               	movlw	0
 14419   0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14420   0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 14421   0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 14422   0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 14423   0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14424   002900  5028               	movf	___flmul@temp^0,w,c
 14425   002902  6E19               	movwf	??___flmul^0,c
 14426   002904  5029               	movf	(___flmul@temp+1)^0,w,c
 14427   002906  6E1A               	movwf	(??___flmul+1)^0,c
 14428   002908  6A1B               	clrf	(??___flmul+2)^0,c
 14429   00290A  6A1C               	clrf	(??___flmul+3)^0,c
 14430   00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14431   002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14432   002914  C019  F01A         	movff	??___flmul,??___flmul+1
 14433   002918  6A19               	clrf	??___flmul^0,c
 14434   00291A  5019               	movf	??___flmul^0,w,c
 14435   00291C  2624               	addwf	___flmul@prod^0,f,c
 14436   00291E  501A               	movf	(??___flmul+1)^0,w,c
 14437   002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14438   002922  501B               	movf	(??___flmul+2)^0,w,c
 14439   002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14440   002926  501C               	movf	(??___flmul+3)^0,w,c
 14441   002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14442   00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 14443   00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14444   002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14445   002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14446   00293A  0E19               	movlw	25
 14447   00293C  EFA5  F014         	goto	u3960
 14448   002940                     u3965:
 14449   002940  90D8               	bcf	status,0,c
 14450   002942  321C               	rrcf	(??___flmul+3)^0,f,c
 14451   002944  321B               	rrcf	(??___flmul+2)^0,f,c
 14452   002946  321A               	rrcf	(??___flmul+1)^0,f,c
 14453   002948  3219               	rrcf	??___flmul^0,f,c
 14454   00294A                     u3960:
 14455   00294A  2EE8               	decfsz	wreg,f,c
 14456   00294C  EFA0  F014         	goto	u3965
 14457   002950  5019               	movf	??___flmul^0,w,c
 14458   002952  2624               	addwf	___flmul@prod^0,f,c
 14459   002954  501A               	movf	(??___flmul+1)^0,w,c
 14460   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14461   002958  501B               	movf	(??___flmul+2)^0,w,c
 14462   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14463   00295C  501C               	movf	(??___flmul+3)^0,w,c
 14464   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14465   002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14466   002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14467   002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14468   00296C  6A1E               	clrf	___flmul@grs^0,c
 14469   00296E  5022               	movf	___flmul@aexp^0,w,c
 14470   002970  C023  F019         	movff	___flmul@bexp,??___flmul
 14471   002974  6A1A               	clrf	(??___flmul+1)^0,c
 14472   002976  2619               	addwf	??___flmul^0,f,c
 14473   002978  0E00               	movlw	0
 14474   00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 14475   00297C  0E82               	movlw	130
 14476   00297E  2419               	addwf	??___flmul^0,w,c
 14477   002980  6E28               	movwf	___flmul@temp^0,c
 14478   002982  0EFF               	movlw	255
 14479   002984  201A               	addwfc	(??___flmul+1)^0,w,c
 14480   002986  6E29               	movwf	(___flmul@temp+1)^0,c
 14481   002988  EFDB  F014         	goto	l4489
 14482   00298C                     l4483:
 14483   00298C  90D8               	bcf	status,0,c
 14484   00298E  3624               	rlcf	___flmul@prod^0,f,c
 14485   002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14486   002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14487   002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14488   002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14489   002998  EFD0  F014         	goto	u3971
 14490   00299C  EFD2  F014         	goto	u3970
 14491   0029A0                     u3971:
 14492   0029A0  EFD3  F014         	goto	l1371
 14493   0029A4                     u3970:
 14494   0029A4  8024               	bsf	___flmul@prod^0,0,c
 14495   0029A6                     l1371:
 14496   0029A6  90D8               	bcf	status,0,c
 14497   0029A8  361E               	rlcf	___flmul@grs^0,f,c
 14498   0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14499   0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14500   0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14501   0029B0  0628               	decf	___flmul@temp^0,f,c
 14502   0029B2  A0D8               	btfss	status,0,c
 14503   0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14504   0029B6                     l4489:
 14505   0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14506   0029B8  EFE0  F014         	goto	u3981
 14507   0029BC  EFE2  F014         	goto	u3980
 14508   0029C0                     u3981:
 14509   0029C0  EFC6  F014         	goto	l4483
 14510   0029C4                     u3980:
 14511   0029C4  0E00               	movlw	0
 14512   0029C6  6E22               	movwf	___flmul@aexp^0,c
 14513   0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14514   0029CA  EFE9  F014         	goto	u3991
 14515   0029CE  EFEB  F014         	goto	u3990
 14516   0029D2                     u3991:
 14517   0029D2  EF0F  F015         	goto	l1373
 14518   0029D6                     u3990:
 14519   0029D6  0EFF               	movlw	255
 14520   0029D8  141E               	andwf	___flmul@grs^0,w,c
 14521   0029DA  6E19               	movwf	??___flmul^0,c
 14522   0029DC  0EFF               	movlw	255
 14523   0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14524   0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 14525   0029E2  0EFF               	movlw	255
 14526   0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14527   0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 14528   0029E8  0E7F               	movlw	127
 14529   0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14530   0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 14531   0029EE  5019               	movf	??___flmul^0,w,c
 14532   0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14533   0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14534   0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14535   0029F6  B4D8               	btfsc	status,2,c
 14536   0029F8  EF00  F015         	goto	u4001
 14537   0029FC  EF02  F015         	goto	u4000
 14538   002A00                     u4001:
 14539   002A00  EF06  F015         	goto	l1374
 14540   002A04                     u4000:
 14541   002A04                     l4497:
 14542   002A04  0E01               	movlw	1
 14543   002A06  6E22               	movwf	___flmul@aexp^0,c
 14544   002A08  EF0F  F015         	goto	l1373
 14545   002A0C                     l1374:
 14546   002A0C  A024               	btfss	___flmul@prod^0,0,c
 14547   002A0E  EF0B  F015         	goto	u4011
 14548   002A12  EF0D  F015         	goto	u4010
 14549   002A16                     u4011:
 14550   002A16  EF0F  F015         	goto	l1373
 14551   002A1A                     u4010:
 14552   002A1A  EF02  F015         	goto	l4497
 14553   002A1E                     l1373:
 14554   002A1E  5022               	movf	___flmul@aexp^0,w,c
 14555   002A20  B4D8               	btfsc	status,2,c
 14556   002A22  EF15  F015         	goto	u4021
 14557   002A26  EF17  F015         	goto	u4020
 14558   002A2A                     u4021:
 14559   002A2A  EF3B  F015         	goto	l4509
 14560   002A2E                     u4020:
 14561   002A2E  0E01               	movlw	1
 14562   002A30  2624               	addwf	___flmul@prod^0,f,c
 14563   002A32  0E00               	movlw	0
 14564   002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14565   002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14566   002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14567   002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14568   002A3C  EF22  F015         	goto	u4031
 14569   002A40  EF24  F015         	goto	u4030
 14570   002A44                     u4031:
 14571   002A44  EF3B  F015         	goto	l4509
 14572   002A48                     u4030:
 14573   002A48  C024  F019         	movff	___flmul@prod,??___flmul
 14574   002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14575   002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14576   002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14577   002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 14578   002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 14579   002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 14580   002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 14581   002A60  3219               	rrcf	??___flmul^0,f,c
 14582   002A62  C019  F024         	movff	??___flmul,___flmul@prod
 14583   002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14584   002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14585   002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14586   002A72  4A28               	infsnz	___flmul@temp^0,f,c
 14587   002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 14588   002A76                     l4509:
 14589   002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14590   002A78  EF46  F015         	goto	u4041
 14591   002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 14592   002A7E  E108               	bnz	u4040
 14593   002A80  2828               	incf	___flmul@temp^0,w,c
 14594   002A82  A0D8               	btfss	status,0,c
 14595   002A84  EF46  F015         	goto	u4041
 14596   002A88  EF48  F015         	goto	u4040
 14597   002A8C                     u4041:
 14598   002A8C  EF52  F015         	goto	l4513
 14599   002A90                     u4040:
 14600   002A90  0E00               	movlw	0
 14601   002A92  6E24               	movwf	___flmul@prod^0,c
 14602   002A94  0E00               	movlw	0
 14603   002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 14604   002A98  0E80               	movlw	128
 14605   002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 14606   002A9C  0E7F               	movlw	127
 14607   002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 14608   002AA0  EF80  F015         	goto	l4525
 14609   002AA4                     l4513:
 14610   002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14611   002AA6  EF5F  F015         	goto	u4050
 14612   002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 14613   002AAC  E106               	bnz	u4051
 14614   002AAE  0428               	decf	___flmul@temp^0,w,c
 14615   002AB0  B0D8               	btfsc	status,0,c
 14616   002AB2  EF5D  F015         	goto	u4051
 14617   002AB6  EF5F  F015         	goto	u4050
 14618   002ABA                     u4051:
 14619   002ABA  EF6B  F015         	goto	l1381
 14620   002ABE                     u4050:
 14621   002ABE  0E00               	movlw	0
 14622   002AC0  6E24               	movwf	___flmul@prod^0,c
 14623   002AC2  0E00               	movlw	0
 14624   002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 14625   002AC6  0E00               	movlw	0
 14626   002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 14627   002ACA  0E00               	movlw	0
 14628   002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 14629   002ACE  0E00               	movlw	0
 14630   002AD0  6E1D               	movwf	___flmul@sign^0,c
 14631   002AD2  EF80  F015         	goto	l4525
 14632   002AD6                     l1381:
 14633   002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14634   002ADA  0EFF               	movlw	255
 14635   002ADC  1624               	andwf	___flmul@prod^0,f,c
 14636   002ADE  0EFF               	movlw	255
 14637   002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14638   002AE2  0E7F               	movlw	127
 14639   002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14640   002AE6  0E00               	movlw	0
 14641   002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14642   002AEA  A023               	btfss	___flmul@bexp^0,0,c
 14643   002AEC  EF7A  F015         	goto	u4061
 14644   002AF0  EF7C  F015         	goto	u4060
 14645   002AF4                     u4061:
 14646   002AF4  EF7D  F015         	goto	l4523
 14647   002AF8                     u4060:
 14648   002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14649   002AFA                     l4523:
 14650   002AFA  90D8               	bcf	status,0,c
 14651   002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 14652   002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 14653   002B00                     l4525:
 14654   002B00  501D               	movf	___flmul@sign^0,w,c
 14655   002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14656   002B04  C024  F011         	movff	___flmul@prod,?___flmul
 14657   002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14658   002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14659   002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14660   002B14                     l1368:
 14661   002B14  0012               	return		;funcret
 14662   002B16                     __end_of___flmul:
 14663                           	callstack 0
 14664                           
 14665 ;; *************** function ___flge *****************
 14666 ;; Defined at:
 14667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  ff1             4   41[COMRAM] unsigned char 
 14670 ;;  ff2             4   45[COMRAM] unsigned char 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;		None
 14673 ;; Return value:  Size  Location     Type
 14674 ;;		None               void
 14675 ;; Registers used:
 14676 ;;		wreg, status,2, status,0
 14677 ;; Tracked objects:
 14678 ;;		On entry : 0/0
 14679 ;;		On exit  : 0/0
 14680 ;;		Unchanged: 0/0
 14681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14686 ;;Total ram usage:       12 bytes
 14687 ;; Hardware stack levels used: 1
 14688 ;; Hardware stack levels required when called: 1
 14689 ;; This function calls:
 14690 ;;		Nothing
 14691 ;; This function is called by:
 14692 ;;		_Colour_decider
 14693 ;;		_efgtoa
 14694 ;; This function uses a non-reentrant model
 14695 ;;
 14696                           
 14697                           	psect	text80
 14698   004A7E                     __ptext80:
 14699                           	callstack 0
 14700   004A7E                     ___flge:
 14701                           	callstack 25
 14702   004A7E  0E00               	movlw	0
 14703   004A80  142A               	andwf	___flge@ff1^0,w,c
 14704   004A82  6E32               	movwf	??___flge^0,c
 14705   004A84  0E00               	movlw	0
 14706   004A86  142B               	andwf	(___flge@ff1+1)^0,w,c
 14707   004A88  6E33               	movwf	(??___flge+1)^0,c
 14708   004A8A  0E80               	movlw	128
 14709   004A8C  142C               	andwf	(___flge@ff1+2)^0,w,c
 14710   004A8E  6E34               	movwf	(??___flge+2)^0,c
 14711   004A90  0E7F               	movlw	127
 14712   004A92  142D               	andwf	(___flge@ff1+3)^0,w,c
 14713   004A94  6E35               	movwf	(??___flge+3)^0,c
 14714   004A96  5032               	movf	??___flge^0,w,c
 14715   004A98  1033               	iorwf	(??___flge+1)^0,w,c
 14716   004A9A  1034               	iorwf	(??___flge+2)^0,w,c
 14717   004A9C  1035               	iorwf	(??___flge+3)^0,w,c
 14718   004A9E  A4D8               	btfss	status,2,c
 14719   004AA0  EF54  F025         	goto	u4101
 14720   004AA4  EF56  F025         	goto	u4100
 14721   004AA8                     u4101:
 14722   004AA8  EF5E  F025         	goto	l4557
 14723   004AAC                     u4100:
 14724   004AAC  0E00               	movlw	0
 14725   004AAE  6E2A               	movwf	___flge@ff1^0,c
 14726   004AB0  0E00               	movlw	0
 14727   004AB2  6E2B               	movwf	(___flge@ff1+1)^0,c
 14728   004AB4  0E00               	movlw	0
 14729   004AB6  6E2C               	movwf	(___flge@ff1+2)^0,c
 14730   004AB8  0E00               	movlw	0
 14731   004ABA  6E2D               	movwf	(___flge@ff1+3)^0,c
 14732   004ABC                     l4557:
 14733   004ABC  0E00               	movlw	0
 14734   004ABE  142E               	andwf	___flge@ff2^0,w,c
 14735   004AC0  6E32               	movwf	??___flge^0,c
 14736   004AC2  0E00               	movlw	0
 14737   004AC4  142F               	andwf	(___flge@ff2+1)^0,w,c
 14738   004AC6  6E33               	movwf	(??___flge+1)^0,c
 14739   004AC8  0E80               	movlw	128
 14740   004ACA  1430               	andwf	(___flge@ff2+2)^0,w,c
 14741   004ACC  6E34               	movwf	(??___flge+2)^0,c
 14742   004ACE  0E7F               	movlw	127
 14743   004AD0  1431               	andwf	(___flge@ff2+3)^0,w,c
 14744   004AD2  6E35               	movwf	(??___flge+3)^0,c
 14745   004AD4  5032               	movf	??___flge^0,w,c
 14746   004AD6  1033               	iorwf	(??___flge+1)^0,w,c
 14747   004AD8  1034               	iorwf	(??___flge+2)^0,w,c
 14748   004ADA  1035               	iorwf	(??___flge+3)^0,w,c
 14749   004ADC  A4D8               	btfss	status,2,c
 14750   004ADE  EF73  F025         	goto	u4111
 14751   004AE2  EF75  F025         	goto	u4110
 14752   004AE6                     u4111:
 14753   004AE6  EF7D  F025         	goto	l4561
 14754   004AEA                     u4110:
 14755   004AEA  0E00               	movlw	0
 14756   004AEC  6E2E               	movwf	___flge@ff2^0,c
 14757   004AEE  0E00               	movlw	0
 14758   004AF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 14759   004AF2  0E00               	movlw	0
 14760   004AF4  6E30               	movwf	(___flge@ff2+2)^0,c
 14761   004AF6  0E00               	movlw	0
 14762   004AF8  6E31               	movwf	(___flge@ff2+3)^0,c
 14763   004AFA                     l4561:
 14764   004AFA  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14765   004AFC  EF82  F025         	goto	u4121
 14766   004B00  EF84  F025         	goto	u4120
 14767   004B04                     u4121:
 14768   004B04  EF8D  F025         	goto	l4565
 14769   004B08                     u4120:
 14770   004B08  6C2A               	negf	___flge@ff1^0,c
 14771   004B0A  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14772   004B0C  B0D8               	btfsc	status,0,c
 14773   004B0E  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14774   004B10  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14775   004B12  B0D8               	btfsc	status,0,c
 14776   004B14  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14777   004B16  0E80               	movlw	128
 14778   004B18  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14779   004B1A                     l4565:
 14780   004B1A  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14781   004B1C  EF92  F025         	goto	u4131
 14782   004B20  EF94  F025         	goto	u4130
 14783   004B24                     u4131:
 14784   004B24  EF9D  F025         	goto	l1015
 14785   004B28                     u4130:
 14786   004B28  6C2E               	negf	___flge@ff2^0,c
 14787   004B2A  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14788   004B2C  B0D8               	btfsc	status,0,c
 14789   004B2E  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14790   004B30  1E30               	comf	(___flge@ff2+2)^0,f,c
 14791   004B32  B0D8               	btfsc	status,0,c
 14792   004B34  2A30               	incf	(___flge@ff2+2)^0,f,c
 14793   004B36  0E80               	movlw	128
 14794   004B38  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14795   004B3A                     l1015:
 14796   004B3A  0E00               	movlw	0
 14797   004B3C  1A2A               	xorwf	___flge@ff1^0,f,c
 14798   004B3E  0E00               	movlw	0
 14799   004B40  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14800   004B42  0E00               	movlw	0
 14801   004B44  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14802   004B46  0E80               	movlw	128
 14803   004B48  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14804   004B4A  0E00               	movlw	0
 14805   004B4C  1A2E               	xorwf	___flge@ff2^0,f,c
 14806   004B4E  0E00               	movlw	0
 14807   004B50  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14808   004B52  0E00               	movlw	0
 14809   004B54  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14810   004B56  0E80               	movlw	128
 14811   004B58  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14812   004B5A  502E               	movf	___flge@ff2^0,w,c
 14813   004B5C  5C2A               	subwf	___flge@ff1^0,w,c
 14814   004B5E  502F               	movf	(___flge@ff2+1)^0,w,c
 14815   004B60  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14816   004B62  5030               	movf	(___flge@ff2+2)^0,w,c
 14817   004B64  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14818   004B66  5031               	movf	(___flge@ff2+3)^0,w,c
 14819   004B68  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14820   004B6A  B0D8               	btfsc	status,0,c
 14821   004B6C  EFBA  F025         	goto	u4141
 14822   004B70  EFBC  F025         	goto	u4140
 14823   004B74                     u4141:
 14824   004B74  EFBF  F025         	goto	l4571
 14825   004B78                     u4140:
 14826   004B78  90D8               	bcf	status,0,c
 14827   004B7A  EFC0  F025         	goto	l1020
 14828   004B7E                     l4571:
 14829   004B7E  80D8               	bsf	status,0,c
 14830   004B80                     l1020:
 14831   004B80  0012               	return		;funcret
 14832   004B82                     __end_of___flge:
 14833                           	callstack 0
 14834                           
 14835 ;; *************** function ___fleq *****************
 14836 ;; Defined at:
 14837 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14838 ;; Parameters:    Size  Location     Type
 14839 ;;  ff1             4   49[COMRAM] unsigned char 
 14840 ;;  ff2             4   53[COMRAM] unsigned char 
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;		None
 14843 ;; Return value:  Size  Location     Type
 14844 ;;		None               void
 14845 ;; Registers used:
 14846 ;;		wreg, status,2, status,0
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14852 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14855 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14856 ;;Total ram usage:       12 bytes
 14857 ;; Hardware stack levels used: 1
 14858 ;; Hardware stack levels required when called: 1
 14859 ;; This function calls:
 14860 ;;		Nothing
 14861 ;; This function is called by:
 14862 ;;		_Colour_decider
 14863 ;;		_efgtoa
 14864 ;; This function uses a non-reentrant model
 14865 ;;
 14866                           
 14867                           	psect	text81
 14868   004F60                     __ptext81:
 14869                           	callstack 0
 14870   004F60                     ___fleq:
 14871                           	callstack 25
 14872   004F60  0E00               	movlw	0
 14873   004F62  1432               	andwf	___fleq@ff1^0,w,c
 14874   004F64  6E3A               	movwf	??___fleq^0,c
 14875   004F66  0E00               	movlw	0
 14876   004F68  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14877   004F6A  6E3B               	movwf	(??___fleq+1)^0,c
 14878   004F6C  0E80               	movlw	128
 14879   004F6E  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14880   004F70  6E3C               	movwf	(??___fleq+2)^0,c
 14881   004F72  0E7F               	movlw	127
 14882   004F74  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14883   004F76  6E3D               	movwf	(??___fleq+3)^0,c
 14884   004F78  503A               	movf	??___fleq^0,w,c
 14885   004F7A  103B               	iorwf	(??___fleq+1)^0,w,c
 14886   004F7C  103C               	iorwf	(??___fleq+2)^0,w,c
 14887   004F7E  103D               	iorwf	(??___fleq+3)^0,w,c
 14888   004F80  A4D8               	btfss	status,2,c
 14889   004F82  EFC5  F027         	goto	u4071
 14890   004F86  EFC7  F027         	goto	u4070
 14891   004F8A                     u4071:
 14892   004F8A  EFCF  F027         	goto	l4541
 14893   004F8E                     u4070:
 14894   004F8E  0E00               	movlw	0
 14895   004F90  6E32               	movwf	___fleq@ff1^0,c
 14896   004F92  0E00               	movlw	0
 14897   004F94  6E33               	movwf	(___fleq@ff1+1)^0,c
 14898   004F96  0E00               	movlw	0
 14899   004F98  6E34               	movwf	(___fleq@ff1+2)^0,c
 14900   004F9A  0E00               	movlw	0
 14901   004F9C  6E35               	movwf	(___fleq@ff1+3)^0,c
 14902   004F9E                     l4541:
 14903   004F9E  0E00               	movlw	0
 14904   004FA0  1436               	andwf	___fleq@ff2^0,w,c
 14905   004FA2  6E3A               	movwf	??___fleq^0,c
 14906   004FA4  0E00               	movlw	0
 14907   004FA6  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14908   004FA8  6E3B               	movwf	(??___fleq+1)^0,c
 14909   004FAA  0E80               	movlw	128
 14910   004FAC  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14911   004FAE  6E3C               	movwf	(??___fleq+2)^0,c
 14912   004FB0  0E7F               	movlw	127
 14913   004FB2  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14914   004FB4  6E3D               	movwf	(??___fleq+3)^0,c
 14915   004FB6  503A               	movf	??___fleq^0,w,c
 14916   004FB8  103B               	iorwf	(??___fleq+1)^0,w,c
 14917   004FBA  103C               	iorwf	(??___fleq+2)^0,w,c
 14918   004FBC  103D               	iorwf	(??___fleq+3)^0,w,c
 14919   004FBE  A4D8               	btfss	status,2,c
 14920   004FC0  EFE4  F027         	goto	u4081
 14921   004FC4  EFE6  F027         	goto	u4080
 14922   004FC8                     u4081:
 14923   004FC8  EFEE  F027         	goto	l4545
 14924   004FCC                     u4080:
 14925   004FCC  0E00               	movlw	0
 14926   004FCE  6E36               	movwf	___fleq@ff2^0,c
 14927   004FD0  0E00               	movlw	0
 14928   004FD2  6E37               	movwf	(___fleq@ff2+1)^0,c
 14929   004FD4  0E00               	movlw	0
 14930   004FD6  6E38               	movwf	(___fleq@ff2+2)^0,c
 14931   004FD8  0E00               	movlw	0
 14932   004FDA  6E39               	movwf	(___fleq@ff2+3)^0,c
 14933   004FDC                     l4545:
 14934   004FDC  5036               	movf	___fleq@ff2^0,w,c
 14935   004FDE  1832               	xorwf	___fleq@ff1^0,w,c
 14936   004FE0  E10F               	bnz	u4090
 14937   004FE2  5037               	movf	(___fleq@ff2+1)^0,w,c
 14938   004FE4  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14939   004FE6  E10C               	bnz	u4090
 14940   004FE8  5038               	movf	(___fleq@ff2+2)^0,w,c
 14941   004FEA  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14942   004FEC  E109               	bnz	u4090
 14943   004FEE  5039               	movf	(___fleq@ff2+3)^0,w,c
 14944   004FF0  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14945   004FF2  B4D8               	btfsc	status,2,c
 14946   004FF4  EFFE  F027         	goto	u4091
 14947   004FF8  EF00  F028         	goto	u4090
 14948   004FFC                     u4091:
 14949   004FFC  EF03  F028         	goto	l4549
 14950   005000                     u4090:
 14951   005000  90D8               	bcf	status,0,c
 14952   005002  EF04  F028         	goto	l1009
 14953   005006                     l4549:
 14954   005006  80D8               	bsf	status,0,c
 14955   005008                     l1009:
 14956   005008  0012               	return		;funcret
 14957   00500A                     __end_of___fleq:
 14958                           	callstack 0
 14959                           
 14960 ;; *************** function ___fldiv *****************
 14961 ;; Defined at:
 14962 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;  b               4   49[COMRAM] unsigned char 
 14965 ;;  a               4   53[COMRAM] unsigned char 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;  grs             4   68[COMRAM] unsigned long 
 14968 ;;  rem             4   61[COMRAM] unsigned long 
 14969 ;;  new_exp         2   66[COMRAM] short 
 14970 ;;  aexp            1   73[COMRAM] unsigned char 
 14971 ;;  bexp            1   72[COMRAM] unsigned char 
 14972 ;;  sign            1   65[COMRAM] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  4   49[COMRAM] unsigned char 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14983 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14985 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14986 ;;Total ram usage:       25 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 1
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_colour_rel
 14993 ;;		_Colour_decider
 14994 ;;		_efgtoa
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text82
 14999   002B16                     __ptext82:
 15000                           	callstack 0
 15001   002B16                     ___fldiv:
 15002                           	callstack 25
 15003   002B16  5035               	movf	(___fldiv@b+3)^0,w,c
 15004   002B18  0B80               	andlw	128
 15005   002B1A  6E42               	movwf	___fldiv@sign^0,c
 15006   002B1C  5035               	movf	(___fldiv@b+3)^0,w,c
 15007   002B1E  2435               	addwf	(___fldiv@b+3)^0,w,c
 15008   002B20  6E49               	movwf	___fldiv@bexp^0,c
 15009   002B22  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15010   002B24  EF96  F015         	goto	u3651
 15011   002B28  EF98  F015         	goto	u3650
 15012   002B2C                     u3651:
 15013   002B2C  EF99  F015         	goto	l4269
 15014   002B30                     u3650:
 15015   002B30  8049               	bsf	___fldiv@bexp^0,0,c
 15016   002B32                     l4269:
 15017   002B32  5049               	movf	___fldiv@bexp^0,w,c
 15018   002B34  B4D8               	btfsc	status,2,c
 15019   002B36  EF9F  F015         	goto	u3661
 15020   002B3A  EFA1  F015         	goto	u3660
 15021   002B3E                     u3661:
 15022   002B3E  EFB6  F015         	goto	l4279
 15023   002B42                     u3660:
 15024   002B42  2849               	incf	___fldiv@bexp^0,w,c
 15025   002B44  A4D8               	btfss	status,2,c
 15026   002B46  EFA7  F015         	goto	u3671
 15027   002B4A  EFA9  F015         	goto	u3670
 15028   002B4E                     u3671:
 15029   002B4E  EFB1  F015         	goto	l4275
 15030   002B52                     u3670:
 15031   002B52  0E00               	movlw	0
 15032   002B54  6E32               	movwf	___fldiv@b^0,c
 15033   002B56  0E00               	movlw	0
 15034   002B58  6E33               	movwf	(___fldiv@b+1)^0,c
 15035   002B5A  0E00               	movlw	0
 15036   002B5C  6E34               	movwf	(___fldiv@b+2)^0,c
 15037   002B5E  0E00               	movlw	0
 15038   002B60  6E35               	movwf	(___fldiv@b+3)^0,c
 15039   002B62                     l4275:
 15040   002B62  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15041   002B64  0E00               	movlw	0
 15042   002B66  6E35               	movwf	(___fldiv@b+3)^0,c
 15043   002B68  EFBE  F015         	goto	l4281
 15044   002B6C                     l4279:
 15045   002B6C  0E00               	movlw	0
 15046   002B6E  6E32               	movwf	___fldiv@b^0,c
 15047   002B70  0E00               	movlw	0
 15048   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
 15049   002B74  0E00               	movlw	0
 15050   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
 15051   002B78  0E00               	movlw	0
 15052   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
 15053   002B7C                     l4281:
 15054   002B7C  5039               	movf	(___fldiv@a+3)^0,w,c
 15055   002B7E  0B80               	andlw	128
 15056   002B80  1A42               	xorwf	___fldiv@sign^0,f,c
 15057   002B82  5039               	movf	(___fldiv@a+3)^0,w,c
 15058   002B84  2439               	addwf	(___fldiv@a+3)^0,w,c
 15059   002B86  6E4A               	movwf	___fldiv@aexp^0,c
 15060   002B88  AE38               	btfss	(___fldiv@a+2)^0,7,c
 15061   002B8A  EFC9  F015         	goto	u3681
 15062   002B8E  EFCB  F015         	goto	u3680
 15063   002B92                     u3681:
 15064   002B92  EFCC  F015         	goto	l4289
 15065   002B96                     u3680:
 15066   002B96  804A               	bsf	___fldiv@aexp^0,0,c
 15067   002B98                     l4289:
 15068   002B98  504A               	movf	___fldiv@aexp^0,w,c
 15069   002B9A  B4D8               	btfsc	status,2,c
 15070   002B9C  EFD2  F015         	goto	u3691
 15071   002BA0  EFD4  F015         	goto	u3690
 15072   002BA4                     u3691:
 15073   002BA4  EFE9  F015         	goto	l4299
 15074   002BA8                     u3690:
 15075   002BA8  284A               	incf	___fldiv@aexp^0,w,c
 15076   002BAA  A4D8               	btfss	status,2,c
 15077   002BAC  EFDA  F015         	goto	u3701
 15078   002BB0  EFDC  F015         	goto	u3700
 15079   002BB4                     u3701:
 15080   002BB4  EFE4  F015         	goto	l4295
 15081   002BB8                     u3700:
 15082   002BB8  0E00               	movlw	0
 15083   002BBA  6E36               	movwf	___fldiv@a^0,c
 15084   002BBC  0E00               	movlw	0
 15085   002BBE  6E37               	movwf	(___fldiv@a+1)^0,c
 15086   002BC0  0E00               	movlw	0
 15087   002BC2  6E38               	movwf	(___fldiv@a+2)^0,c
 15088   002BC4  0E00               	movlw	0
 15089   002BC6  6E39               	movwf	(___fldiv@a+3)^0,c
 15090   002BC8                     l4295:
 15091   002BC8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 15092   002BCA  0E00               	movlw	0
 15093   002BCC  6E39               	movwf	(___fldiv@a+3)^0,c
 15094   002BCE  EFF1  F015         	goto	l4301
 15095   002BD2                     l4299:
 15096   002BD2  0E00               	movlw	0
 15097   002BD4  6E36               	movwf	___fldiv@a^0,c
 15098   002BD6  0E00               	movlw	0
 15099   002BD8  6E37               	movwf	(___fldiv@a+1)^0,c
 15100   002BDA  0E00               	movlw	0
 15101   002BDC  6E38               	movwf	(___fldiv@a+2)^0,c
 15102   002BDE  0E00               	movlw	0
 15103   002BE0  6E39               	movwf	(___fldiv@a+3)^0,c
 15104   002BE2                     l4301:
 15105   002BE2  5036               	movf	___fldiv@a^0,w,c
 15106   002BE4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 15107   002BE6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 15108   002BE8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 15109   002BEA  A4D8               	btfss	status,2,c
 15110   002BEC  EFFA  F015         	goto	u3711
 15111   002BF0  EFFC  F015         	goto	u3710
 15112   002BF4                     u3711:
 15113   002BF4  EF14  F016         	goto	l4313
 15114   002BF8                     u3710:
 15115   002BF8  0E00               	movlw	0
 15116   002BFA  6E32               	movwf	___fldiv@b^0,c
 15117   002BFC  0E00               	movlw	0
 15118   002BFE  6E33               	movwf	(___fldiv@b+1)^0,c
 15119   002C00  0E00               	movlw	0
 15120   002C02  6E34               	movwf	(___fldiv@b+2)^0,c
 15121   002C04  0E00               	movlw	0
 15122   002C06  6E35               	movwf	(___fldiv@b+3)^0,c
 15123   002C08  0E80               	movlw	128
 15124   002C0A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15125   002C0C  0E7F               	movlw	127
 15126   002C0E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15127   002C10                     l4307:
 15128   002C10  5042               	movf	___fldiv@sign^0,w,c
 15129   002C12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15130   002C14  C032  F032         	movff	___fldiv@b,?___fldiv
 15131   002C18  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15132   002C1C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15133   002C20  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15134   002C24  EF57  F017         	goto	l1332
 15135   002C28                     l4313:
 15136   002C28  5049               	movf	___fldiv@bexp^0,w,c
 15137   002C2A  A4D8               	btfss	status,2,c
 15138   002C2C  EF1A  F016         	goto	u3721
 15139   002C30  EF1C  F016         	goto	u3720
 15140   002C34                     u3721:
 15141   002C34  EF26  F016         	goto	l4321
 15142   002C38                     u3720:
 15143   002C38  0E00               	movlw	0
 15144   002C3A  6E32               	movwf	?___fldiv^0,c
 15145   002C3C  0E00               	movlw	0
 15146   002C3E  6E33               	movwf	(?___fldiv+1)^0,c
 15147   002C40  0E00               	movlw	0
 15148   002C42  6E34               	movwf	(?___fldiv+2)^0,c
 15149   002C44  0E00               	movlw	0
 15150   002C46  6E35               	movwf	(?___fldiv+3)^0,c
 15151   002C48  EF57  F017         	goto	l1332
 15152   002C4C                     l4321:
 15153   002C4C  504A               	movf	___fldiv@aexp^0,w,c
 15154   002C4E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15155   002C52  6A3B               	clrf	(??___fldiv+1)^0,c
 15156   002C54  5E3A               	subwf	??___fldiv^0,f,c
 15157   002C56  0E00               	movlw	0
 15158   002C58  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15159   002C5A  0E7F               	movlw	127
 15160   002C5C  243A               	addwf	??___fldiv^0,w,c
 15161   002C5E  6E43               	movwf	___fldiv@new_exp^0,c
 15162   002C60  0E00               	movlw	0
 15163   002C62  203B               	addwfc	(??___fldiv+1)^0,w,c
 15164   002C64  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15165   002C66  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15166   002C6A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15167   002C6E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15168   002C72  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15169   002C76  0E00               	movlw	0
 15170   002C78  6E32               	movwf	___fldiv@b^0,c
 15171   002C7A  0E00               	movlw	0
 15172   002C7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15173   002C7E  0E00               	movlw	0
 15174   002C80  6E34               	movwf	(___fldiv@b+2)^0,c
 15175   002C82  0E00               	movlw	0
 15176   002C84  6E35               	movwf	(___fldiv@b+3)^0,c
 15177   002C86  0E00               	movlw	0
 15178   002C88  6E45               	movwf	___fldiv@grs^0,c
 15179   002C8A  0E00               	movlw	0
 15180   002C8C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15181   002C8E  0E00               	movlw	0
 15182   002C90  6E47               	movwf	(___fldiv@grs+2)^0,c
 15183   002C92  0E00               	movlw	0
 15184   002C94  6E48               	movwf	(___fldiv@grs+3)^0,c
 15185   002C96  0E00               	movlw	0
 15186   002C98  6E4A               	movwf	___fldiv@aexp^0,c
 15187   002C9A  EF87  F016         	goto	l1334
 15188   002C9E                     l4331:
 15189   002C9E  504A               	movf	___fldiv@aexp^0,w,c
 15190   002CA0  B4D8               	btfsc	status,2,c
 15191   002CA2  EF55  F016         	goto	u3731
 15192   002CA6  EF57  F016         	goto	u3730
 15193   002CAA                     u3731:
 15194   002CAA  EF6E  F016         	goto	l4339
 15195   002CAE                     u3730:
 15196   002CAE  90D8               	bcf	status,0,c
 15197   002CB0  363E               	rlcf	___fldiv@rem^0,f,c
 15198   002CB2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15199   002CB4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15200   002CB6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15201   002CB8  90D8               	bcf	status,0,c
 15202   002CBA  3632               	rlcf	___fldiv@b^0,f,c
 15203   002CBC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15204   002CBE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15205   002CC0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15206   002CC2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15207   002CC4  EF66  F016         	goto	u3741
 15208   002CC8  EF68  F016         	goto	u3740
 15209   002CCC                     u3741:
 15210   002CCC  EF69  F016         	goto	l1337
 15211   002CD0                     u3740:
 15212   002CD0  8032               	bsf	___fldiv@b^0,0,c
 15213   002CD2                     l1337:
 15214   002CD2  90D8               	bcf	status,0,c
 15215   002CD4  3645               	rlcf	___fldiv@grs^0,f,c
 15216   002CD6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15217   002CD8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15218   002CDA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15219   002CDC                     l4339:
 15220   002CDC  5036               	movf	___fldiv@a^0,w,c
 15221   002CDE  5C3E               	subwf	___fldiv@rem^0,w,c
 15222   002CE0  5037               	movf	(___fldiv@a+1)^0,w,c
 15223   002CE2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15224   002CE4  5038               	movf	(___fldiv@a+2)^0,w,c
 15225   002CE6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15226   002CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15227   002CEA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15228   002CEC  A0D8               	btfss	status,0,c
 15229   002CEE  EF7B  F016         	goto	u3751
 15230   002CF2  EF7D  F016         	goto	u3750
 15231   002CF6                     u3751:
 15232   002CF6  EF86  F016         	goto	l4345
 15233   002CFA                     u3750:
 15234   002CFA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15235   002CFC  5036               	movf	___fldiv@a^0,w,c
 15236   002CFE  5E3E               	subwf	___fldiv@rem^0,f,c
 15237   002D00  5037               	movf	(___fldiv@a+1)^0,w,c
 15238   002D02  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15239   002D04  5038               	movf	(___fldiv@a+2)^0,w,c
 15240   002D06  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15241   002D08  5039               	movf	(___fldiv@a+3)^0,w,c
 15242   002D0A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15243   002D0C                     l4345:
 15244   002D0C  2A4A               	incf	___fldiv@aexp^0,f,c
 15245   002D0E                     l1334:
 15246   002D0E  0E19               	movlw	25
 15247   002D10  644A               	cpfsgt	___fldiv@aexp^0,c
 15248   002D12  EF8D  F016         	goto	u3761
 15249   002D16  EF8F  F016         	goto	u3760
 15250   002D1A                     u3761:
 15251   002D1A  EF4F  F016         	goto	l4331
 15252   002D1E                     u3760:
 15253   002D1E  503E               	movf	___fldiv@rem^0,w,c
 15254   002D20  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15255   002D22  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15256   002D24  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15257   002D26  B4D8               	btfsc	status,2,c
 15258   002D28  EF98  F016         	goto	u3771
 15259   002D2C  EF9A  F016         	goto	u3770
 15260   002D30                     u3771:
 15261   002D30  EFB2  F016         	goto	l4357
 15262   002D34                     u3770:
 15263   002D34  8045               	bsf	___fldiv@grs^0,0,c
 15264   002D36  EFB2  F016         	goto	l4357
 15265   002D3A                     l4351:
 15266   002D3A  90D8               	bcf	status,0,c
 15267   002D3C  3632               	rlcf	___fldiv@b^0,f,c
 15268   002D3E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15269   002D40  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15270   002D42  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15271   002D44  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15272   002D46  EFA7  F016         	goto	u3781
 15273   002D4A  EFA9  F016         	goto	u3780
 15274   002D4E                     u3781:
 15275   002D4E  EFAA  F016         	goto	l1343
 15276   002D52                     u3780:
 15277   002D52  8032               	bsf	___fldiv@b^0,0,c
 15278   002D54                     l1343:
 15279   002D54  90D8               	bcf	status,0,c
 15280   002D56  3645               	rlcf	___fldiv@grs^0,f,c
 15281   002D58  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15282   002D5A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15283   002D5C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15284   002D5E  0643               	decf	___fldiv@new_exp^0,f,c
 15285   002D60  A0D8               	btfss	status,0,c
 15286   002D62  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15287   002D64                     l4357:
 15288   002D64  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15289   002D66  EFB7  F016         	goto	u3791
 15290   002D6A  EFB9  F016         	goto	u3790
 15291   002D6E                     u3791:
 15292   002D6E  EF9D  F016         	goto	l4351
 15293   002D72                     u3790:
 15294   002D72  0E00               	movlw	0
 15295   002D74  6E4A               	movwf	___fldiv@aexp^0,c
 15296   002D76  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15297   002D78  EFC0  F016         	goto	u3801
 15298   002D7C  EFC2  F016         	goto	u3800
 15299   002D80                     u3801:
 15300   002D80  EFE6  F016         	goto	l1345
 15301   002D84                     u3800:
 15302   002D84  0EFF               	movlw	255
 15303   002D86  1445               	andwf	___fldiv@grs^0,w,c
 15304   002D88  6E3A               	movwf	??___fldiv^0,c
 15305   002D8A  0EFF               	movlw	255
 15306   002D8C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15307   002D8E  6E3B               	movwf	(??___fldiv+1)^0,c
 15308   002D90  0EFF               	movlw	255
 15309   002D92  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15310   002D94  6E3C               	movwf	(??___fldiv+2)^0,c
 15311   002D96  0E7F               	movlw	127
 15312   002D98  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15313   002D9A  6E3D               	movwf	(??___fldiv+3)^0,c
 15314   002D9C  503A               	movf	??___fldiv^0,w,c
 15315   002D9E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15316   002DA0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15317   002DA2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15318   002DA4  B4D8               	btfsc	status,2,c
 15319   002DA6  EFD7  F016         	goto	u3811
 15320   002DAA  EFD9  F016         	goto	u3810
 15321   002DAE                     u3811:
 15322   002DAE  EFDD  F016         	goto	l1346
 15323   002DB2                     u3810:
 15324   002DB2                     l4365:
 15325   002DB2  0E01               	movlw	1
 15326   002DB4  6E4A               	movwf	___fldiv@aexp^0,c
 15327   002DB6  EFE6  F016         	goto	l1345
 15328   002DBA                     l1346:
 15329   002DBA  A032               	btfss	___fldiv@b^0,0,c
 15330   002DBC  EFE2  F016         	goto	u3821
 15331   002DC0  EFE4  F016         	goto	u3820
 15332   002DC4                     u3821:
 15333   002DC4  EFE6  F016         	goto	l1345
 15334   002DC8                     u3820:
 15335   002DC8  EFD9  F016         	goto	l4365
 15336   002DCC                     l1345:
 15337   002DCC  504A               	movf	___fldiv@aexp^0,w,c
 15338   002DCE  B4D8               	btfsc	status,2,c
 15339   002DD0  EFEC  F016         	goto	u3831
 15340   002DD4  EFEE  F016         	goto	u3830
 15341   002DD8                     u3831:
 15342   002DD8  EF12  F017         	goto	l4377
 15343   002DDC                     u3830:
 15344   002DDC  0E01               	movlw	1
 15345   002DDE  2632               	addwf	___fldiv@b^0,f,c
 15346   002DE0  0E00               	movlw	0
 15347   002DE2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15348   002DE4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15349   002DE6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15350   002DE8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15351   002DEA  EFF9  F016         	goto	u3841
 15352   002DEE  EFFB  F016         	goto	u3840
 15353   002DF2                     u3841:
 15354   002DF2  EF12  F017         	goto	l4377
 15355   002DF6                     u3840:
 15356   002DF6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15357   002DFA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15358   002DFE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15359   002E02  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15360   002E06  343D               	rlcf	(??___fldiv+3)^0,w,c
 15361   002E08  323D               	rrcf	(??___fldiv+3)^0,f,c
 15362   002E0A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15363   002E0C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15364   002E0E  323A               	rrcf	??___fldiv^0,f,c
 15365   002E10  C03A  F032         	movff	??___fldiv,___fldiv@b
 15366   002E14  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15367   002E18  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15368   002E1C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15369   002E20  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15370   002E22  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15371   002E24                     l4377:
 15372   002E24  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15373   002E26  EF1D  F017         	goto	u3851
 15374   002E2A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15375   002E2C  E108               	bnz	u3850
 15376   002E2E  2843               	incf	___fldiv@new_exp^0,w,c
 15377   002E30  A0D8               	btfss	status,0,c
 15378   002E32  EF1D  F017         	goto	u3851
 15379   002E36  EF1F  F017         	goto	u3850
 15380   002E3A                     u3851:
 15381   002E3A  EF2A  F017         	goto	l4381
 15382   002E3E                     u3850:
 15383   002E3E  0E00               	movlw	0
 15384   002E40  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15385   002E42  6843               	setf	___fldiv@new_exp^0,c
 15386   002E44  0E00               	movlw	0
 15387   002E46  6E32               	movwf	___fldiv@b^0,c
 15388   002E48  0E00               	movlw	0
 15389   002E4A  6E33               	movwf	(___fldiv@b+1)^0,c
 15390   002E4C  0E00               	movlw	0
 15391   002E4E  6E34               	movwf	(___fldiv@b+2)^0,c
 15392   002E50  0E00               	movlw	0
 15393   002E52  6E35               	movwf	(___fldiv@b+3)^0,c
 15394   002E54                     l4381:
 15395   002E54  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15396   002E56  EF37  F017         	goto	u3860
 15397   002E5A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15398   002E5C  E106               	bnz	u3861
 15399   002E5E  0443               	decf	___fldiv@new_exp^0,w,c
 15400   002E60  B0D8               	btfsc	status,0,c
 15401   002E62  EF35  F017         	goto	u3861
 15402   002E66  EF37  F017         	goto	u3860
 15403   002E6A                     u3861:
 15404   002E6A  EF45  F017         	goto	l4385
 15405   002E6E                     u3860:
 15406   002E6E  0E00               	movlw	0
 15407   002E70  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15408   002E72  0E00               	movlw	0
 15409   002E74  6E43               	movwf	___fldiv@new_exp^0,c
 15410   002E76  0E00               	movlw	0
 15411   002E78  6E32               	movwf	___fldiv@b^0,c
 15412   002E7A  0E00               	movlw	0
 15413   002E7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15414   002E7E  0E00               	movlw	0
 15415   002E80  6E34               	movwf	(___fldiv@b+2)^0,c
 15416   002E82  0E00               	movlw	0
 15417   002E84  6E35               	movwf	(___fldiv@b+3)^0,c
 15418   002E86  0E00               	movlw	0
 15419   002E88  6E42               	movwf	___fldiv@sign^0,c
 15420   002E8A                     l4385:
 15421   002E8A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15422   002E8E  A049               	btfss	___fldiv@bexp^0,0,c
 15423   002E90  EF4C  F017         	goto	u3871
 15424   002E94  EF4E  F017         	goto	u3870
 15425   002E98                     u3871:
 15426   002E98  EF51  F017         	goto	l4391
 15427   002E9C                     u3870:
 15428   002E9C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15429   002E9E  EF52  F017         	goto	l4393
 15430   002EA2                     l4391:
 15431   002EA2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15432   002EA4                     l4393:
 15433   002EA4  90D8               	bcf	status,0,c
 15434   002EA6  3049               	rrcf	___fldiv@bexp^0,w,c
 15435   002EA8  6E35               	movwf	(___fldiv@b+3)^0,c
 15436   002EAA  EF08  F016         	goto	l4307
 15437   002EAE                     l1332:
 15438   002EAE  0012               	return		;funcret
 15439   002EB0                     __end_of___fldiv:
 15440                           	callstack 0
 15441                           
 15442 ;; *************** function _Buttons_init *****************
 15443 ;; Defined at:
 15444 ;;		line 43 in file "LED_buttons.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;		None
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		None
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15462 ;;Total ram usage:        0 bytes
 15463 ;; Hardware stack levels used: 1
 15464 ;; Hardware stack levels required when called: 1
 15465 ;; This function calls:
 15466 ;;		Nothing
 15467 ;; This function is called by:
 15468 ;;		_main
 15469 ;; This function uses a non-reentrant model
 15470 ;;
 15471                           
 15472                           	psect	text83
 15473   006138                     __ptext83:
 15474                           	callstack 0
 15475   006138                     _Buttons_init:
 15476                           	callstack 29
 15477   006138                     
 15478                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15479   006138  8486               	bsf	134,2,c	;volatile
 15480                           
 15481                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15482   00613A  010E               	movlb	14	; () banked
 15483   00613C  95B4               	bcf	180,2,b	;volatile
 15484                           
 15485                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15486   00613E  8686               	bsf	134,3,c	;volatile
 15487                           
 15488                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15489   006140  97B4               	bcf	180,3,b	;volatile
 15490   006142                     
 15491                           ; BSR set to: 14
 15492   006142  0012               	return		;funcret
 15493   006144                     __end_of_Buttons_init:
 15494                           	callstack 0
 15495                           
 15496 ;; *************** function _HighISR *****************
 15497 ;; Defined at:
 15498 ;;		line 23 in file "interrupts.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;		None
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;		None
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      void 
 15505 ;; Registers used:
 15506 ;;		wreg, status,2
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15516 ;;Total ram usage:        0 bytes
 15517 ;; Hardware stack levels used: 1
 15518 ;; This function calls:
 15519 ;;		Nothing
 15520 ;; This function is called by:
 15521 ;;		Interrupt level 2
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           	psect	intcode
 15526   000008                     __pintcode:
 15527                           	callstack 0
 15528   000008                     _HighISR:
 15529                           	callstack 22
 15530                           
 15531                           ; BSR set to: 14
 15532                           ;incstack = 0
 15533   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15534   00000A                     
 15535                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15536   00000A  010E               	movlb	14	; () banked
 15537   00000C  AB33               	btfss	51,5,b	;volatile
 15538   00000E  EF0B  F000         	goto	i2u568_41
 15539   000012  EF0D  F000         	goto	i2u568_40
 15540   000016                     i2u568_41:
 15541   000016  EF18  F000         	goto	i2l227
 15542   00001A                     i2u568_40:
 15543   00001A                     
 15544                           ; BSR set to: 14
 15545                           ;interrupts.c: 26:         TMR0H=0;
 15546   00001A  0E00               	movlw	0
 15547   00001C  6ED4               	movwf	212,c	;volatile
 15548                           
 15549                           ;interrupts.c: 27:         TMR0L=0;
 15550   00001E  0E00               	movlw	0
 15551   000020  6ED3               	movwf	211,c	;volatile
 15552                           
 15553                           ;interrupts.c: 28:         lost_flag=1;
 15554   000022  0E00               	movlw	0
 15555   000024  0101               	movlb	1	; () banked
 15556   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15557   000028  0E01               	movlw	1
 15558   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15559   00002C                     
 15560                           ; BSR set to: 1
 15561                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15562   00002C  010E               	movlb	14	; () banked
 15563   00002E  9B33               	bcf	51,5,b	;volatile
 15564   000030                     i2l227:
 15565                           
 15566                           ; BSR set to: 14
 15567   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15568   000032  0011               	retfie		f
 15569   000034                     __end_of_HighISR:
 15570                           	callstack 0
 15571                           
 15572                           	psect	rparam
 15573   000000                     
 15574                           	psect	temp
 15575   00005F                     btemp:
 15576                           	callstack 0
 15577   00005F                     	ds	1
 15578   000000                     int$flags	set	btemp
 15579   000000                     wtemp8	set	btemp+1
 15580   000000                     ttemp5	set	btemp+1
 15581   000000                     ttemp6	set	btemp+4
 15582   000000                     ttemp7	set	btemp+8
 15583                           
 15584                           	psect	idloc
 15585                           
 15586                           ;Config register IDLOC0 @ 0x200000
 15587                           ;	unspecified, using default values
 15588   200000                     	org	2097152
 15589   200000  0FFF               	dw	4095
 15590                           
 15591                           ;Config register IDLOC1 @ 0x200002
 15592                           ;	unspecified, using default values
 15593   200002                     	org	2097154
 15594   200002  0FFF               	dw	4095
 15595                           
 15596                           ;Config register IDLOC2 @ 0x200004
 15597                           ;	unspecified, using default values
 15598   200004                     	org	2097156
 15599   200004  0FFF               	dw	4095
 15600                           
 15601                           ;Config register IDLOC3 @ 0x200006
 15602                           ;	unspecified, using default values
 15603   200006                     	org	2097158
 15604   200006  0FFF               	dw	4095
 15605                           
 15606                           ;Config register IDLOC4 @ 0x200008
 15607                           ;	unspecified, using default values
 15608   200008                     	org	2097160
 15609   200008  0FFF               	dw	4095
 15610                           
 15611                           ;Config register IDLOC5 @ 0x20000A
 15612                           ;	unspecified, using default values
 15613   20000A                     	org	2097162
 15614   20000A  0FFF               	dw	4095
 15615                           
 15616                           ;Config register IDLOC6 @ 0x20000C
 15617                           ;	unspecified, using default values
 15618   20000C                     	org	2097164
 15619   20000C  0FFF               	dw	4095
 15620                           
 15621                           ;Config register IDLOC7 @ 0x20000E
 15622                           ;	unspecified, using default values
 15623   20000E                     	org	2097166
 15624   20000E  0FFF               	dw	4095
 15625                           
 15626                           	psect	config
 15627                           
 15628                           ;Config register CONFIG1L @ 0x300000
 15629                           ;	External Oscillator mode Selection bits
 15630                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15631                           ;	Power-up default value for COSC bits
 15632                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15633   300000                     	org	3145728
 15634   300000  AA                 	db	170
 15635                           
 15636                           ;Config register CONFIG1H @ 0x300001
 15637                           ;	unspecified, using default values
 15638                           ;	Clock Out Enable bit
 15639                           ;	CLKOUTEN = 0x1, unprogrammed default
 15640                           ;	Clock Switch Enable bit
 15641                           ;	CSWEN = 0x1, unprogrammed default
 15642                           ;	Fail-Safe Clock Monitor Enable bit
 15643                           ;	FCMEN = 0x1, unprogrammed default
 15644   300001                     	org	3145729
 15645   300001  FF                 	db	255
 15646                           
 15647                           ;Config register CONFIG2L @ 0x300002
 15648                           ;	unspecified, using default values
 15649                           ;	Master Clear Enable bit
 15650                           ;	MCLRE = 0x1, unprogrammed default
 15651                           ;	Power-up Timer Enable bit
 15652                           ;	PWRTE = 0x1, unprogrammed default
 15653                           ;	Low-power BOR enable bit
 15654                           ;	LPBOREN = 0x1, unprogrammed default
 15655                           ;	Brown-out Reset Enable bits
 15656                           ;	BOREN = 0x3, unprogrammed default
 15657   300002                     	org	3145730
 15658   300002  FF                 	db	255
 15659                           
 15660                           ;Config register CONFIG2H @ 0x300003
 15661                           ;	unspecified, using default values
 15662                           ;	Brown Out Reset Voltage selection bits
 15663                           ;	BORV = 0x3, unprogrammed default
 15664                           ;	ZCD Disable bit
 15665                           ;	ZCD = 0x1, unprogrammed default
 15666                           ;	PPSLOCK bit One-Way Set Enable bit
 15667                           ;	PPS1WAY = 0x1, unprogrammed default
 15668                           ;	Stack Full/Underflow Reset Enable bit
 15669                           ;	STVREN = 0x1, unprogrammed default
 15670                           ;	Debugger Enable bit
 15671                           ;	DEBUG = 0x1, unprogrammed default
 15672                           ;	Extended Instruction Set Enable bit
 15673                           ;	XINST = 0x1, unprogrammed default
 15674   300003                     	org	3145731
 15675   300003  FF                 	db	255
 15676                           
 15677                           ;Config register CONFIG3L @ 0x300004
 15678                           ;	WDT Period Select bits
 15679                           ;	WDTCPS = 0x1F, unprogrammed default
 15680                           ;	WDT operating mode
 15681                           ;	WDTE = OFF, WDT Disabled
 15682   300004                     	org	3145732
 15683   300004  9F                 	db	159
 15684                           
 15685                           ;Config register CONFIG3H @ 0x300005
 15686                           ;	unspecified, using default values
 15687                           ;	WDT Window Select bits
 15688                           ;	WDTCWS = 0x7, unprogrammed default
 15689                           ;	WDT input clock selector
 15690                           ;	WDTCCS = 0x7, unprogrammed default
 15691   300005                     	org	3145733
 15692   300005  FF                 	db	255
 15693                           
 15694                           ;Config register CONFIG4L @ 0x300006
 15695                           ;	unspecified, using default values
 15696                           ;	Write Protection Block 0
 15697                           ;	WRT0 = 0x1, unprogrammed default
 15698                           ;	Write Protection Block 1
 15699                           ;	WRT1 = 0x1, unprogrammed default
 15700                           ;	Write Protection Block 2
 15701                           ;	WRT2 = 0x1, unprogrammed default
 15702                           ;	Write Protection Block 3
 15703                           ;	WRT3 = 0x1, unprogrammed default
 15704                           ;	Write Protection Block 3
 15705                           ;	WRT4 = 0x1, unprogrammed default
 15706                           ;	Write Protection Block 3
 15707                           ;	WRT5 = 0x1, unprogrammed default
 15708                           ;	Write Protection Block 3
 15709                           ;	WRT6 = 0x1, unprogrammed default
 15710                           ;	Write Protection Block 3
 15711                           ;	WRT7 = 0x1, unprogrammed default
 15712   300006                     	org	3145734
 15713   300006  FF                 	db	255
 15714                           
 15715                           ;Config register CONFIG4H @ 0x300007
 15716                           ;	unspecified, using default values
 15717                           ;	Configuration Register Write Protection bit
 15718                           ;	WRTC = 0x1, unprogrammed default
 15719                           ;	Boot Block Write Protection bit
 15720                           ;	WRTB = 0x1, unprogrammed default
 15721                           ;	Data EEPROM Write Protection bit
 15722                           ;	WRTD = 0x1, unprogrammed default
 15723                           ;	Scanner Enable bit
 15724                           ;	SCANE = 0x1, unprogrammed default
 15725                           ;	Low Voltage Programming Enable bit
 15726                           ;	LVP = 0x1, unprogrammed default
 15727   300007                     	org	3145735
 15728   300007  FF                 	db	255
 15729                           
 15730                           ;Config register CONFIG5L @ 0x300008
 15731                           ;	unspecified, using default values
 15732                           ;	UserNVM Program Memory Code Protection bit
 15733                           ;	CP = 0x1, unprogrammed default
 15734                           ;	DataNVM Memory Code Protection bit
 15735                           ;	CPD = 0x1, unprogrammed default
 15736   300008                     	org	3145736
 15737   300008  FF                 	db	255
 15738                           
 15739                           ;Config register CONFIG5H @ 0x300009
 15740                           ;	unspecified, using default values
 15741   300009                     	org	3145737
 15742   300009  FF                 	db	255
 15743                           
 15744                           ;Config register CONFIG6L @ 0x30000A
 15745                           ;	unspecified, using default values
 15746                           ;	Table Read Protection Block 0
 15747                           ;	EBTR0 = 0x1, unprogrammed default
 15748                           ;	Table Read Protection Block 1
 15749                           ;	EBTR1 = 0x1, unprogrammed default
 15750                           ;	Table Read Protection Block 2
 15751                           ;	EBTR2 = 0x1, unprogrammed default
 15752                           ;	Table Read Protection Block 3
 15753                           ;	EBTR3 = 0x1, unprogrammed default
 15754                           ;	Table Read Protection Block 4
 15755                           ;	EBTR4 = 0x1, unprogrammed default
 15756                           ;	Table Read Protection Block 5
 15757                           ;	EBTR5 = 0x1, unprogrammed default
 15758                           ;	Table Read Protection Block 6
 15759                           ;	EBTR6 = 0x1, unprogrammed default
 15760                           ;	Table Read Protection Block 7
 15761                           ;	EBTR7 = 0x1, unprogrammed default
 15762   30000A                     	org	3145738
 15763   30000A  FF                 	db	255
 15764                           
 15765                           ;Config register CONFIG6H @ 0x30000B
 15766                           ;	unspecified, using default values
 15767                           ;	Boot Block Table Read Protection bit
 15768                           ;	EBTRB = 0x1, unprogrammed default
 15769   30000B                     	org	3145739
 15770   30000B  FF                 	db	255
 15771                           tosu	equ	0xFFF
 15772                           tosh	equ	0xFFE
 15773                           tosl	equ	0xFFD
 15774                           stkptr	equ	0xFFC
 15775                           pclatu	equ	0xFFB
 15776                           pclath	equ	0xFFA
 15777                           pcl	equ	0xFF9
 15778                           tblptru	equ	0xFF8
 15779                           tblptrh	equ	0xFF7
 15780                           tblptrl	equ	0xFF6
 15781                           tablat	equ	0xFF5
 15782                           prodh	equ	0xFF4
 15783                           prodl	equ	0xFF3
 15784                           indf0	equ	0xFEF
 15785                           postinc0	equ	0xFEE
 15786                           postdec0	equ	0xFED
 15787                           preinc0	equ	0xFEC
 15788                           plusw0	equ	0xFEB
 15789                           fsr0h	equ	0xFEA
 15790                           fsr0l	equ	0xFE9
 15791                           wreg	equ	0xFE8
 15792                           indf1	equ	0xFE7
 15793                           postinc1	equ	0xFE6
 15794                           postdec1	equ	0xFE5
 15795                           preinc1	equ	0xFE4
 15796                           plusw1	equ	0xFE3
 15797                           fsr1h	equ	0xFE2
 15798                           fsr1l	equ	0xFE1
 15799                           bsr	equ	0xFE0
 15800                           indf2	equ	0xFDF
 15801                           postinc2	equ	0xFDE
 15802                           postdec2	equ	0xFDD
 15803                           preinc2	equ	0xFDC
 15804                           plusw2	equ	0xFDB
 15805                           fsr2h	equ	0xFDA
 15806                           fsr2l	equ	0xFD9
 15807                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2837$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2753$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2753$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    homeReverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    homeReverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _homeReverse->_fullSpeedBack
    _homeReverse->_stop
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_Backhalfblock
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  577217
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35323
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34968
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34615
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28769
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    9024
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  323638
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  161589
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                        _homeReverse
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _homeReverse                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   24821
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   24821
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   17923
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   24973
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _Backhalfblock                                        6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   24821
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   15468
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   24821
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    8570
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23353
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3702
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _Backhalfblock
         _fullSpeedBack
           _setMotorPWM
         _stop
       _reverseDetect
         _fullSpeedBack
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _BlueMove
       _GreenMove
       _LightBlueMove
       _OrangeMove
       _RedMove
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _homeReverse
         _fullSpeedBack
         _stop
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 17:14:44 2023

               _color_read_Red 5B8E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5B3E                   ___fldiv@sign 0042                _color_read_Blue 5C2E  
                           l52 60C8                             l61 5C2C                             l70 31DC  
                           l55 5B8C                             l80 222A                             l64 5C7C  
                           l49 5AEC                             l58 5BDC                             l67 56EC  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4374  
             _color_read_Green 5BDE                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 611E                            l132 6034                            l221 6136  
                          l141 6160                            l150 612A                            l206 600A  
                          l135 6036                            l144 614C                            l153 5E78  
                          l138 605C                            l147 6156                            l500 5746  
                          l332 3586                            l430 5386                            l503 5EF6  
                          l424 4812                            l512 5A48                            l600 3A8E  
                          l521 59F6                            l417 5308                            l506 5F34  
                          l530 4EB4                            l515 5A9A                            l524 55C6  
                          l188 6106                            l348 37D4                            l509 547A  
                          l197 610A                            l454 5280                            l470 51E2  
                          l438 5144                            l446 50A6                            l518 59A4  
                          l462 4F5E                            l606 3AB6                            l534 4392  
                          l527 4DFE                            l544 44CE                            l536 43E8  
                          l473 5FC0                            l633 568E                            l545 4504  
                          l537 4442                            l482 5D68                            l546 451E  
                          l538 44B2                            l491 58AA                            l539 447A  
                          l476 5FDA                            l636 5F8E                            l629 60E8  
                          l485 57A0                            l750 60A8                            l494 5852  
                          l479 5D1A                            l639 5FA4                            l664 6082  
                          l488 5CCC                            l497 57FA                            l594 3A8E  
                          l667 6142                            l739 3FAC                            l747 3FAC  
                          l864 46A6                            l877 4976                            _abs 5E7A  
                          _pad 5388                            _rel 014C                   ?_colour_move 002D  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1020 4B80  
                         l1015 4B3A                           l1024 5F6C                           l1009 5008  
                         ?_abs 0013                           l1047 4A7C                           l1304 2604  
                         l1320 5DAE                           l1305 25F2                           l1241 54E6  
                         l1332 2EAE                           l1412 42AE                           l1405 4216  
                         l1334 2D0E                           l1343 2D54                           l1280 23CE  
                         l1408 4372                           l1248 54EE                           l1345 2DCC  
                         l1337 2CD2                           l1346 2DBA                           l1602 562C  
                         l1371 29A6                           l4011 2484                           l4003 244C  
                         l1419 430A                           l1364 27B0                           l1620 4D48  
                         l1460 53AA                           l1428 5952                           l1381 2AD6  
                         l1373 2A1E                           l4013 2488                           l4005 245C  
                         l4021 24A8                           l4101 5E00                           l1374 2A0C  
                         l1278 241A                           l1542 34E2                           l1295 2534  
                         l4023 24CE                           l4031 2524                           l4015 2496  
                         l4007 246A                           l1287 26EA                           l1279 2408  
                         l4111 5220                           l1631 616C                           l4103 5E12  
                         l1471 3B4C                           l1527 1618                           l1368 2B14  
                         l1464 5400                           l1472 3B92                           l1608 5B3C  
                         l4041 2578                           l4033 254A                           l4025 2502  
                         l4017 2498                           l4009 2478                           l4113 522C  
                         l4121 530A                           l4201 45B2                           l4105 5E16  
                         l5001 16A8                           l4051 25A2                           l4043 2586  
                         l4035 255A                           l4027 2504                           l4019 24A2  
                         l4115 5238                           l4107 51E4                           l4123 530E  
                         l4131 5356                           l4211 461C                           l4203 45BA  
                         l1483 3D34                           l5011 175E                           l5003 1700  
                         l1628 5E36                           l1564 5900                           l4301 2BE2  
                         l4061 25D4                           l4053 25B2                           l4045 2588  
                         l4029 2514                           l4109 5208                           l4117 5250  
                         l4133 536E                           l4125 5326                           l4141 50F0  
                         l5101 4D4A                           l4221 4666                           l4213 463C  
                         l4205 45CE                           l1469 3B44                           l1637 5DF2  
                         l5021 17D0                           l5013 177A                           l5005 1734  
                         l1582 5EB8                           l1574 4C7E                           l1494 1836  
                         l4303 2BF8                           l4071 262E                           l4063 25EA  
                         l4047 2596                           l4039 256E                           l4055 25B4  
                         l4119 5268                           l4127 5332                           l4143 50FC  
                         l4135 50A8                           l4151 502E                           l5103 4E00  
                         l4223 4686                           l4215 463E                           l4207 45DC  
                         l4231 4826                           l1591 4102                           l5023 17E8  
                         l5015 1782                           l5007 173C                           l5111 3222  
                         l4321 2C4C                           l4305 2C08                           l4313 2C28  
                         l4401 26EC                           l4081 26AA                           l4073 2668  
                         l4049 259E                           l4057 25C2                           l4129 533E  
                         l5033 6158                           l5041 614E                           l4137 50CC  
                         l4145 5114                           l4161 508E                           l4153 5046  
                         l5201 5B3E                           l4217 4650                           l4209 45EE  
                         l4241 4896                           l4233 4846                           l5025 17F8  
                         l5017 1792                           l5009 1740                           l1497 11D0  
                         l5121 32CC                           l5113 3226                           l5105 31DE  
                         l4331 2C9E                           l4323 2C66                           l4315 2C38  
                         l4307 2C10                           l4411 2728                           l4403 26F8  
                         l4091 26CA                           l4083 26AE                           l4067 2614  
                         l4075 266A                           l4059 25C6                           l5035 615C  
                         l5043 6152                           l4171 519A                           l4163 5146  
                         l4147 512C                           l4139 50E4                           l4155 5052  
                         l5051 5E3E                           l5203 5B84                           l4219 4656  
                         l4251 490E                           l4243 489E                           l4235 484A  
                         l4227 4814                           l1579 5EB0                           l5027 180E  
                         l5019 17C2                           l1499 1016                           l5131 332A  
                         l5115 3236                           l5107 3206                           l1588 41BE  
                         l4341 2CFA                           l4333 2CAE                           l4325 2C76  
                         l4317 2C38                           l4309 2C14                           l4501 2A2E  
                         l4421 275A                           l4413 2738                           l4405 2706  
                         l4093 26D8                           l4085 26BC                           l4077 267A  
                         l4069 2620                           l5301 4264                           l5037 6122  
                         l4165 516A                           l4173 51B2                           l4181 5FBA  
                         l4157 505E                           l4149 500A                           l5053 5E46  
                         l5045 6144                           l5221 5C74                           l5213 5BDE  
                         l4253 4920                           l4245 48B2                           l4237 4858  
                         l4229 4818                           l5029 1816                           l5141 3390  
                         l5133 3332                           l5125 32FC                           l5117 3256  
                         l5109 3214                           l4351 2D3A                           l4343 2CFC  
                         l4335 2CC2                           l4327 2C86                           l4271 2B42  
                         l4263 2B16                           l4511 2A90                           l4503 2A3A  
                         l4431 279A                           l4423 2768                           l4415 273E  
                         l4407 2708                           l4095 26DA                           l4087 26C2  
                         l4079 268A                           l5311 42EC                           l5303 4296  
                         l5039 6126                           l4175 51CA                           l4167 5182  
                         l4159 5076                           l5071 4F0A                           l5063 4EB6  
                         l5231 37EC                           l5055 5E4E                           l5047 6148  
                         l5215 5C24                           l5207 5B8E                           l4191 4556  
                         l4183 4520                           l4247 48C0                           l4255 4926  
                         l4239 4878                           l1599 561C                           l5151 3442  
                         l5143 33C4                           l5127 330C                           l5119 3276  
                         l4361 2D76                           l4353 2D44                           l4345 2D0C  
                         l4337 2CD0                           l4329 2C96                           l4281 2B7C  
                         l4273 2B52                           l4265 2B22                           l4521 2AF8  
                         l4513 2AA4                           l4505 2A48                           l4441 27E4  
                         l4433 27A0                           l4425 276A                           l4417 274E  
                         l4409 2718                           l4089 26C4                           l5321 4342  
                         l5313 42FA                           l5305 4298                           l4169 518E  
                         l4177 5FA6                           l5081 5C92                           l5065 4EDA  
                         l5073 4F22                           l5241 3836                           l5233 37EE  
                         l5057 5E74                           l5049 5E3A                           l5209 5BD4  
                         l5225 610A                           l4193 4564                           l4185 4524  
                         l4257 4936                           l4249 48EE                           l6033 334E  
                         l5129 3322                           l5137 333A                           l4371 2DE8  
                         l4363 2D84                           l4355 2D52                           l4347 2D1E  
                         l4339 2CDC                           l4291 2BA8                           l4283 2B82  
                         l4275 2B62                           l4267 2B30                           l4523 2AFA  
                         l4515 2ABE                           l4507 2A72                           l4451 2834  
                         l4443 27F0                           l4435 27C0                           l4427 277A  
                         l4419 2754                           l4531 5D6A                           l5323 4352  
                         l5315 4318                           l5307 42A4                           l5411 199C  
                         l4179 5FAA                           l5091 5EBA                           l5083 5CA0  
                         l5075 4F3A                           l5067 4EF2                           l5251 390A  
                         l5243 385E                           l5235 37F6                           l5059 5E76  
                         l5219 5C2E                           l5227 611A                           l4195 4584  
                         l4187 4532                           l4259 4956                           l4099 5DF4  
                         l6035 340C                           l5147 33F8                           l5139 336C  
                         l5163 34B6                           l5331 58AC                           l4381 2E54  
                         l4373 2DF6                           l4365 2DB2                           l4349 2D34  
                         l4357 2D64                           l4293 2BB8                           l4285 2B88  
                         l4277 2B64                           l4269 2B32                           l4541 4F9E  
                         l4517 2ADA                           l4525 2B00                           l4509 2A76  
                         l4461 2876                           l4453 2840                           l4445 27FA  
                         l4437 27D0                           l4429 278A                           l3901 2246  
                         l4533 5D7A                           l5325 4360                           l5317 431A  
                         l5309 42E0                           l5421 1A9A                           l5413 19F0  
                         l5405 1910                           l5341 5A9C                           l5085 5854  
                         l5093 5EF8                           l5077 4F52                           l5069 4EFE  
                         l5261 39E2                           l5253 3936                           l5245 388A  
                         l5229 37D8                           l4197 4588                           l4189 4552  
                         l4621 4A5C                           l4605 4A08                           l6037 3496  
                         l5157 3474                           l5149 3422                           l5333 58B8  
                         ?_pad 0011                           l4391 2EA2                           l4383 2E6E  
                         l4375 2E20                           l4359 2D72                           l4295 2BC8  
                         l4287 2B96                           l4279 2B6C                           l4543 4FCC  
                         l4527 2B04                           l4519 2AEA                           l4471 28D8  
                         l4463 2882                           l4455 284C                           l4447 2810  
                         l3911 227A                           l3903 2248                           l5327 4362  
                         l5319 431E                           l5511 212A                           l5503 204A  
                         l5431 1B6A                           l5415 1A22                           l5407 1962  
                         l5191 601C                           l5351 5ACE                           l5343 5AA0  
                         l5087 5868                           l5095 5402                           l5079 5C7E  
                         l5271 3AAC                           l5263 3A0C                           l5255 3960  
                         l5247 38B4                           l5239 3808                           l4199 4594  
                         l4631 53A2                           l4623 4A6C                           l4615 4A30  
                         l4607 4A12                           l4711 5B1E                           l4703 5AEE  
                         l5159 34A4                           l5335 58D6                           l4393 2EA4  
                         l4385 2E8A                           l4369 2DDC                           l4377 2E24  
                         l4297 2BCA                           l4289 2B98                           l4545 4FDC  
                         l4537 4F60                           l4561 4AFA                           l4553 4A7E  
                         l4481 296E                           l4473 28E4                           l4465 2892  
                         l4457 285A                           l4449 281C                           l3921 22AC  
                         l3905 2258                           l3913 2282                           l5521 21B2  
                         l5505 207C                           l5441 1D08                           l5433 1BA2  
                         l5425 1AA6                           l5417 1A28                           l5409 1994  
                         l3841 60A0                           l5601 60CA                           l5193 601E  
                         l5361 5AE0                           l5353 5AD8                           l5345 5AAA  
                         l5089 587E                           l5281 559A                           l5097 5954  
                         l4721 5F7A                           l5265 3A38                           l5257 398C  
                         l5249 38E0                           l4641 5E7A                           l4633 53B6  
                         l4801 3CEE                           l4617 4A3C                           l4609 4A1C  
                         l4705 5B02                           l4713 5B22                           l5337 58F6  
                         l4387 2E8E                           l4379 2E3E                           l4299 2BD2  
                         l4547 5000                           l4539 4F8E                           l4571 4B7E  
                         l4563 4B08                           l4555 4AAC                           l4491 29C4  
                         l4483 298C                           l4475 2900                           l4467 28AC  
                         l4459 2866                           l3931 22E2                           l3923 22B2  
                         l3915 2292                           l3907 2268                           l5291 4226  
                         l5507 20AE                           l5531 21BE                           l5435 1BB4  
                         l5443 1D60                           l5427 1ABA                           l5419 1A44  
                         l3851 549E                           l5603 60D2                           l5195 6020  
                         l5187 600C                           l4715 6036                           l5371 5AEA  
                         l5363 5AE2                           l5355 5ADA                           l5347 5ABA  
                         l5283 55B2                           l4731 5D02                           l5275 59F8  
                         l5099 59A6                           l4723 5F8A                           l5267 3A62  
                         l5259 39B6                           l4643 5E94                           l4635 53CA  
                         l4627 5388                           l4803 3CFE                           l4619 4A4C  
                         l4651 4C08                           l4707 5B0E                           l4811 0E3E  
                         l5611 4376                           l4389 2E9C                           l4549 5006  
                         l4565 4B1A                           l4557 4ABC                           l4493 29C8  
                         l4485 2996                           l4477 292A                           l4469 28BC  
                         l3941 231E                           l3933 22F2                           l3925 22C0  
                         l3917 2298                           l3909 2278                           l5293 423C  
                         l5285 41C2                           l5533 21F0                           l5509 20EC  
                         l5517 2136                           l5445 1D92                           l5453 1DD0  
                         l5437 1C30                           l5429 1B5A                           l3861 54D8  
                         l3853 54A6                           l3845 547C                           l5605 60DC  
                         l5197 6022                           l5189 6016                           l4717 6046  
                         l5365 5AE4                           l5357 5ADC                           l5349 5AC4  
                         l4741 5748                           l4733 5D1C                           l5277 5A4A  
                         l4725 5CCE                           l5269 3AA2                           l5701 3DB0  
                         l5381 3044                           l5373 5690                           l4637 53CE  
                         l4629 5396                           l4805 3D04                           l4653 4C14  
                         l4645 4B82                           l4709 5B12                           l4901 11E8  
                         l4821 0E8A                           l4813 0E44                           l5621 441E  
                         l5613 4394                           l4567 4B28                           l4559 4AEA  
                         l4495 29D6                           l4487 29A4                           l4479 2960  
                         l3951 233C                           l3943 232C                           l3935 22F4  
                         l3927 22C2                           l3919 22AA                           l5287 41D2  
                         l5535 2222                           l5519 2174                           l5471 1F1C  
                         l5455 1E02                           l5463 1E40                           l5447 1DC4  
                         l5439 1C8C                           l5391 1862                           l3863 54DA  
                         l3855 54B4                           l3847 5484                           l3839 6084  
                         l5607 60E6                           l5199 60AC                           l5367 5AE6  
                         l5359 5ADE                           l4743 575C                           l4735 5D30  
                         l5279 555E                           l4727 5CE2                           l4751 5826  
                         l4719 5F6E                           l5711 3DF2                           l5703 3DB4  
                         l5383 3078                           l5375 2EB0                           l5551 6100  
                         l3871 4CA4                           l4639 53EC                           l4807 3D14  
                         l4575 5F36                           l4591 49CC                           l4583 4978  
                         l4663 4C76                           l4647 4BA2                           l4671 55C8  
                         l4911 121A                           l4903 11F4                           l4831 0EC8  
                         l4823 0E94                           l4815 0E54                           l5631 445A  
                         l5623 4422                           l5615 43EA                           l4569 4B78  
                         l4497 2A04                           l4489 29B6                           l3961 2350  
                         l3953 2340                           l3945 2330                           l3929 22D2  
                         l3937 22FC                           l5297 4250                           l5289 41E0  
                         l5481 1F84                           l5465 1E72                           l5457 1E34  
                         l5393 186E                           l3865 54E0                           l3857 54BA  
                         l3849 5496                           l3881 46A8                           l5369 5AE8  
                         l4745 5774                           l4737 5D3C                           l4729 5CEE  
                         l4753 56EE                           l5721 3E24                           l5713 3DF6  
                         l5385 3110                           l5377 2F7C                           l5553 6102  
                         l5545 60EA                           l5561 5FEE                           l3873 4CAE  
                         l4761 3AD8                           l4577 5F4C                           l4593 49CE  
                         l4585 498E                           l4649 4BE0                           l4657 4C20  
                         l4681 4038                           l4673 55E6                           l4921 1262  
                         l4913 1228                           l4905 11FC                           l4841 0F10  
                         l4833 0ED0                           l4825 0E9C                           l4817 0E62  
                         l5641 4494                           l5633 445C                           l5625 443A  
                         l5617 4402                           l5609 4374                           l5801 34F8  
                         l3971 2364                           l3963 2354                           l3955 2344  
                         l3947 2334                           l3939 230C                           l5299 4258  
                         l5483 1FC2                           l5467 1EA4                           l5395 189E  
                         l3859 54D0                           l3891 4772                           l3883 46C4  
                         l4739 5D50                           l4755 5702                           l4747 57FC  
                         l5723 3E38                           l5731 3E56                           l5715 3DFA  
                         l5707 3DCA                           l5387 3144                           l5379 2FB0  
                         l5571 5282                           l5555 6104                           l5547 60F4  
                         l5563 5FF2                           l3875 4CCC                           l3867 4C80  
                         l4771 3B54                           l4763 3AEC                           l4579 5F5C  
                         l4595 49DE                           l4659 4C32                           l4683 4046  
                         l4691 4126                           l4675 3FAE                           l4667 5DB0  
                         l4931 1376                           l4923 1272                           l4915 1240  
                         l4907 1204                           l4843 0F16                           l4827 0EAC  
                         l4835 0ED4                           l4819 0E66                           l5643 44AC  
                         l5635 4474                           l5627 443C                           l5619 4410  
                         l5651 44E8                           l5811 3516                           l5803 34FC  
                         l3981 23B6                           l3973 2368                           l3965 2358  
                         l3957 2348                           l3949 2338                           l5469 1EDE  
                         l5493 1FDA                           l5397 18D2                           l5389 1838  
                         l3893 478E                           l3885 4718                           l5565 612C  
                         l4757 571A                           l4749 5810                           l5733 3E6A  
                         l5725 3E3C                           l5709 3DDE                           l5661 5666  
                         l5581 52B0                           l5573 5294                           l5549 60F6  
                         l5557 5FDC                           l3877 4D02                           l3869 4C92  
                         l4781 3B8E                           l4773 3B64                           l4765 3AFC  
                         l4597 49E2                           l4589 49A2                           l4693 4162  
                         l4677 3FCE                           l4669 5DC0                           l4941 1416  
                         l4925 1286                           l4933 137C                           l4917 1252  
                         l4909 1208                           l4861 0FA2                           l4845 0F1E  
                         l4837 0EFA                           l4853 0F60                           l4829 0EBC  
                         l5653 44F6                           l5637 4488                           l5629 4450  
                         l5645 44B2                           l5821 3536                           l5813 351A  
                         l5805 3508                           l3991 23FA                           l3983 23C6  
                         l3967 235C                           l3959 234C                           l3975 236C  
                         l5495 200C                           l5479 1F4A                           l5399 1906  
                         l3895 47D2                           l3887 472C                           l5567 605E  
                         l5751 3ECC                           l5735 3E7E                           l5743 3E9C  
                         l5727 3E40                           l5719 3E10                           l5663 5672  
                         l5591 52EE                           l5583 52B4                           l5575 5296  
                         l5559 5FE0                           l4791 3C32                           l4783 3B9A  
                         l4775 3B6A                           l4767 3B1C                           l4759 3AB8  
                         l4599 49F0                           l4695 4176                           l4687 40B6  
                         l4679 4024                           l4951 14F2                           l4943 1448  
                         l4935 139A                           l4927 12EA                           l4919 125A  
                         l4863 0FAA                           l4855 0F86                           l4871 0FC6  
                         l4847 0F36                           l4839 0F0C                           l5671 5902  
                         l5655 4506                           l5647 44C0                           l5639 4492  
                         l5831 3556                           l5823 353A                           l5815 3522  
                         l5807 350C                           l5569 6138                           l3993 23FC  
                         l3985 23DC                           l3977 2370                           l3969 2360  
                         l3897 222C                           l5497 203E                           l5489 1FCE  
                         l3889 4730                           l5665 57A2                           l5761 3F0E  
                         l5745 3EB0                           l5737 3E82                           l5657 562E  
                         l5593 52F0                           l5585 52D8                           l5577 5298  
                         l4793 3C38                           l4785 3BA4                           l4777 3B7A  
                         l4769 3B38                           l4697 419E                           l4689 40F2  
                         l4961 1554                           l4953 14F8                           l4945 1458  
                         l4937 13CE                           l4929 1342                           l4881 1060  
                         l4873 0FE0                           l4857 0F98                           l4849 0F40  
                         l5673 5914                           l5649 44D0                           l5841 35B4  
                         l5833 356A                           l5825 353E                           l5817 352A  
                         l5809 3512                           l3995 2406                           l3987 23E8  
                         l3979 239A                           l3899 2238                           l5667 57B6  
                         l5771 3F42                           l5763 3F12                           l5747 3EC4  
                         l5755 3EE2                           l5739 3E86                           l5691 3D64  
                         l5683 3D36                           l5659 5634                           l5595 52FA  
                         l5587 52E2                           l5579 529A                           l4787 3BAA  
                         l4795 3C9C                           l4779 3B86                           l4699 41AE  
                         l4971 15EE                           l4963 155C                           l4955 152C  
                         l4947 1468                           l4939 1400                           l4891 1156  
                         l4883 109E                           l4859 0F9C                           l5675 591C  
                         l5851 360E                           l5843 35BC                           l5835 356C  
                         l5827 3546                           l5819 3532                           l3997 2428  
                         l3989 23EC                           l5669 57CE                           l5773 3F5E  
                         l5781 3F96                           l5757 3EF6                           l5749 3EC8  
                         l5693 3D76                           l5685 3D48                           l5597 52FC  
                         l5589 52E4                           l4797 3CB6                           l4789 3C2C  
                         l4981 164C                           l4973 160E                           l4965 1562  
                         l4957 1540                           l4949 149C                           l4893 115E  
                         l4885 10D0                           l4877 1026                           l5677 5924  
                         l5861 3648                           l5853 3612                           l5845 35D0  
                         l5837 3594                           l5829 354E                           l3999 2438  
                         l5775 3F76                           l5759 3F0A                           l5767 3F28  
                         l5687 3D5C                           l5695 3D84                           l5599 5306  
                         l4799 3CD4                           l4991 1674                           l4983 1652  
                         l4975 162A                           l4967 156A                           l4959 1544  
                         l4887 110E                           l4879 102C                           l5679 5940  
                         l5871 36AE                           l5863 365C                           l5855 3628  
                         l5847 35DC                           l5839 35AE                           l5791 34E4  
                         l5777 3F8A                           l5769 3F3C                           l5697 3D98  
                         l5689 3D60                           l4985 165A                           l4977 1638  
                         l4993 167A                           l4969 1576                           l4889 1122  
                         l4897 119E                           l5873 36CA                           l5865 3674  
                         l5881 36FC                           l5857 362C                           l5849 35F0  
                         l5793 34E8                           l5779 3F8E                           l5699 3DAC  
                         l4995 168C                           l4987 166A                           l4979 1648  
                         l4899 11D8                           l5891 379E                           l5883 371A  
                         l5875 36E4                           l5867 368E                           l5859 3644  
                         l5795 34EC                           l4997 169E                           l4989 166E  
                         l5893 37A2                           l5885 3770                           l5877 36EC  
                         l5869 369A                           l5797 34F0                           l4999 16A2  
                         l5887 377C                           l5879 36F4                           l5799 34F4  
                         l5889 378C                           l5897 37C0                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E34  
                         STR_5 0E38                           u3000 478E                           u3001 478A  
                         u3010 2246                           u3011 2242                           u3100 239A  
                         u3020 2258                           u3101 2396                           u3021 2254  
                         u3110 23B2                           u3030 2268                           u3111 23AC  
                         u3031 2264                           u4000 2A04                           u3200 2496  
                         u3120 23B4                           u3040 22AA                   _BAUD4CONbits 000EE9  
                         u4001 2A00                           u3201 2492                           u3041 22A6  
                         u4010 2A1A                           u3210 24CE                           u3130 23DC  
                         u3050 22C0                           u4011 2A16                           u3211 24CA  
                         u3131 23D8                           u3051 22BC                           u4100 4AAC  
                         u4020 2A2E                           u3300 25EA                           u3220 2514  
                         u3140 23FA                           u3060 22D2                           u4101 4AA8  
                         u4021 2A2A                           u3301 25E6                           u3221 2510  
                         u3141 23F6                           u3061 22CE                           u4110 4AEA  
                         u4030 2A48                           u3310 2600                           u3230 254A  
                         u3150 241A                           u3070 22E2                           u4111 4AE6  
                         u4031 2A44                           u3311 25FC                           u3231 2546  
                         u3151 2416                           u3071 22DE                           u4120 4B08  
                         u4040 2A90                           u3320 2614                           u3240 255A  
                         u3160 2428                           u3080 231E                           u5000 3804  
                         u3400 5E36                           u4200 4A2C                           u4121 4B04  
                         u4041 2A8C                           u3321 2610                           u3241 2556  
                         u3161 2424                           u3081 231A                           u5001 3800  
                         u3401 5E32                           u4201 4A28                           u4130 4B28  
                         u4050 2ABE                           u3330 262E                           u3250 2586  
                         u3170 2438                           u3090 232C                           u3410 5268  
                         u5010 385E                           u4210 4A4C                           _T2PR 000FBC  
                         u4131 4B24                           u4051 2ABA                           u3331 262A  
                         u3251 2582                           u3171 2434                           u3091 2328  
                         u3411 5264                           u5011 385A                           u4211 4A48  
                         u4140 4B78                           u4060 2AF8                           u3340 2668  
                         u3260 2596                           u3180 246A                           u5100 423C  
                         u3420 5280                           u3500 51E2                           u5020 38B4  
                         u4220 4A5C                           u4141 4B74                           u4061 2AF4  
                         u3341 2664                           u3261 2592                           u3181 2466  
                         u5101 4238                           u3421 527C                           u3501 51DE  
                         u5021 38B0                           u4221 4A58                           u4070 4F8E  
                         u3350 267A                           u3270 25B2                           u3190 2478  
                         u5110 4292                           u3430 536E                           u3510 5FDA  
                         u5030 390A                           u4230 5396                           u4150 5F4C  
                         u4310 4C6C                           u4071 4F8A                           u3351 2676  
                         u3271 25AE                           u3191 2474                           u5111 428E  
                         u3431 536A                           u3511 5FD6                           u5031 3906  
                         u4231 5392                           u4151 5F48                           u4311 4C66  
                         u4080 4FCC                           u3360 268A                           u3280 25C2  
                         u5120 42DC                           u5200 1962                           u3440 5386  
                         u5040 3960                           u3520 4532                           u3600 4858  
                         u4240 53EC                           u4160 498E                           u4320 4C6E  
                         u4400 40D6                           u4081 4FC8                           u3361 2686  
                         u3281 25BE                           u5121 42D8                           u5201 195E  
                         u3441 5382                           u5041 395C                           u3521 452E  
                         u3601 4854                           u4241 53E8                           u4161 498A  
                         u4305 4C44                           u4090 5000                           u3370 26AA  
                         u3290 25D4                           u5130 42FA                           u5210 19F0  
                         u3450 512C                           u5050 39B6                           u3530 4564  
                         u3610 4896                           u4250 5E94                           u4170 49C2  
                         u4410 40F2                           u4330 5DF2                           u4091 4FFC  
                         u3371 26A6                           u3291 25D0                           u5131 42F6  
                         u5211 19EC                           u3451 5128                           u5051 39B2  
                         u3531 4560                           u3611 4892                           u4251 5E90  
                         u4411 40EE                           u4331 5DEE                           u3700 2BB8  
                         u3380 26BC                           u5140 430A                           u5300 1E34  
                         u5220 1A44                           u3460 5144                           u5060 3A0C  
                         u3620 48C0                           u4500 3AEA                           u4180 49F0  
                         u4260 4BC2                           u4420 4146                           u4340 55E6  
                         u3701 2BB4                           u3381 26B8                           u5141 4306  
                         u5301 1E30                           u5221 1A40                           u3461 5140  
                         u5061 3A08                           u3541 458E                           u3621 48BC  
                         u4181 49EC                           u4405 40CC                           u4341 55E2  
                         u3710 2BF8                           u3390 26D8                           u5150 4318  
                         u5310 1E72                           u5230 1A9A                           u3470 508E  
                         u5070 3A62                           u3550 45B2                           u3630 48EE  
                         u4510 3AFC                           u4190 4A04                           u4270 4BE0  
                         u4430 4162                           u4350 3FF6                           u3711 2BF4  
                         u3391 26D4                           u5151 4314                           u5311 1E6E  
                         u5231 1A96                           u3471 508A                           u6007 5D0C  
                         u5071 3A5E                           u3551 45AE                           u3631 48EA  
                         u4511 3AF8                           u4191 4A00                           u4175 49B8  
                         u4271 4BDC                           u4431 415E                           u3800 2D84  
                         u3720 2C38                           u5160 4352                           u5080 41D2  
                         u5400 207C                           u5320 1EA4                           u5240 1ABA  
                         u2920 5496                           u3480 50A6                           u3560 45DC  
                         u3640 4936                           u4520 3B38                           u4280 4C08  
                         u4440 419E                           u4360 4024                           u4600 0EAC  
                         u3801 2D80                           u3721 2C34                           u5161 434E  
                         u5081 41CE                           u5401 2078                           u5321 1EA0  
                         u5241 1AB6                           u2921 5492                           u3481 50A2  
                         u6017 5068                           u3561 45D8                           u3641 4932  
                         u4521 3B34                           u4281 4C04                           u4265 4BB8  
                         u4441 419A                           u4425 413C                           u4361 4020  
                         u4601 0EA8                           u3810 2DB2                           u3730 2CAE  
                         u3650 2B30                           u5170 4360                           u5090 41E0  
                         u5410 20AE                           u5330 1EDE                           u5250 1B6A  
                         u2930 54B4                           u3490 51CA                           u3570 461C  
                         u4530 3B64                           u4290 4C32                           u4370 4046  
                         u4450 5B3C                           u4610 0EBC                           u3811 2DAE  
                         u3731 2CAA                           u3651 2B2C                           u5171 435C  
                         u5091 41DC                           u5411 20AA                           u5331 1EDA  
                         u5251 1B66                           u2931 54B0                           u3491 51C6  
                         u6107 51A4                           u6027 55A4                           u3571 4618  
                         u4531 3B60                           u4291 4C2E                           u4371 4042  
                         u4355 3FEC                           u4451 5B38                           u4611 0EB8  
                         u3820 2DC8                           u3740 2CD0                           u3660 2B42  
                         u3900 2728                           u5420 20EC                           u5340 1F1C  
                         u5260 1BB4                           u2940 54D0                           u4460 6046  
                         u3580 4666                           u4540 3B7A                           u4700 119A  
                         u4620 0EFA                           u5180 58F6                           u5500 441E  
                         u3821 2DC4                           u3741 2CCC                           u3661 2B3E  
                         u3901 2724                           u5421 20E8                           u5341 1F18  
                         u5261 1BB0                           u2941 54CC                           u4461 6042  
                         u6117 5AB0                           u6037 5D5A                           u3581 4662  
                         u4541 3B76                           u4701 1196                           u4621 0EF6  
                         u5181 58F2                           u5501 441A                           u3830 2DDC  
                         u3750 2CFA                           u3670 2B52                           u3910 2768  
                         u5430 212A                           u5350 1F46                           u5270 1D92  
                         u4470 605C                           u3590 4826                           u2950 4C92  
                         u4550 3CB6                           u4390 40B2                           u4710 11D0  
                         u4630 0F0C                           u5510 4450                           u3831 2DD8  
                         u3751 2CF6                           u3671 2B4E                           u3911 2764  
                         u5431 2126                           u5351 1F42                           u5271 1D8E  
                         u5191 1868                           u6127 57C0                           u4471 6058  
                         u6047 5106                           u3591 4822                           u2951 4C8E  
                         u4551 3CB2                           u4391 40AE                           u4711 11CC  
                         u4631 0F08                           u5511 444C                           u3840 2DF6  
                         u3760 2D1E                           u3680 2B96                           u3920 277A  
                         u5440 2174                           u5360 1F84                           u5280 1DC4  
                         u4480 5FA4                           u5600 3DDE                           u2960 4CA4  
                         u4560 3CD4                           u4800 14F2                           u4720 11E8  
                         u4640 0F86                           u5520 4488                           u3841 2DF2  
                         u3761 2D1A                           u3681 2B92                           u3921 2776  
                         u5441 2170                           u5361 1F80                           u5281 1DC0  
                         u6137 57EC                           u6057 5FB0                           u4481 5FA0  
                         u5601 3DDA                           u2961 4CA0                           u4561 3CD0  
                         u4385 405A                           u4801 14EE                           u4721 11E4  
                         u4641 0F82                           u5521 4484                           u3850 2E3E  
                         u3770 2D34                           u3690 2BA8                           u3930 278A  
                         u5450 21B2                           u5370 1FC2                           u5290 1E02  
                         u5610 3E24                           u2970 4CCC                           u4570 3CEE  
                         u4490 3AE8                           u4386 4064                           u4810 1540  
                         u4730 121A                           u4650 0F98                           u5530 44C0  
                         u3851 2E3A                           u3771 2D30                           u3691 2BA4  
                         u3931 2786                           u5451 21AE                           u5371 1FBE  
                         u5291 1DFE                           u6147 5348                           u6067 5872  
                         u5611 3E20                           u2971 4CC8                           u4571 3CEA  
                         u4491 3AE2                           u4387 4074                           u4811 153C  
                         u4731 1216                           u4651 0F94                           u5531 44BC  
                         u3860 2E6E                           u3780 2D52                           u3940 27C0  
                         u5460 21F0                           u5380 200C                           u5620 3E6A  
                         u2980 4D02                           u4580 3CFE                           u4900 17F8  
                         u4820 15EE                           u4740 1228                           u4660 1012  
                         u5540 44CE                           u5700 360E                           u3861 2E6A  
                         u3781 2D4E                           u3941 27BC                           u5461 21EC  
                         u5381 2008                           u6157 5242                           u6077 589C  
                         u5621 3E66                           u2981 4CFE                           u4581 3CFA  
                         u4901 17F4                           u4821 15EA                           u4741 1224  
                         u4661 100E                           u5541 44CA                           u5701 360A  
                         u3870 2E9C                           u3790 2D72                           u3950 27D0  
                         u5470 2222                           u5390 203E                           u2990 46C4  
                         u5630 3EB0                           u4910 5E62                           u4830 162A  
                         u4750 1252                           u4670 109E                           u4590 0E62  
                         u5550 44F6                           u5710 3628                           u3871 2E98  
                         u3791 2D6E                           u3951 27CC                           u5471 221E  
                         u5391 203A                           u2991 46C0                           u6087 5766  
                         u5631 3EAC                           u4911 5E5A                           u4831 1626  
                         u4751 124E                           u4671 109A                           u4591 0E5E  
                         u5551 44F2                           u5711 3624                           u3960 294A  
                         u3880 2706                           u5640 3EF6                           u5480 600A  
                         u4840 1638                           u4760 139A                           u4680 10D0  
                         u5560 4504                           u5720 36E4                           u3881 2702  
                         u6097 5792                           u5641 3EF2                           u5481 6006  
                         u4841 1634                           u4761 1396                           u4681 10CC  
                         u5561 4500                           u5721 36E0                           u3970 29A4  
                         u3890 2718                           u4930 4F3A                           u5650 3F3C  
                         u5570 5666                           u4850 168C                           u4770 1400  
                         u4690 110E                           u5490 4410                           u5730 371A  
                         u3971 29A0                           u3891 2714                           u4931 4F36  
                         u5651 3F38                           u5571 5662                           u4851 1688  
                         u4771 13FC                           u4691 110A                           u5491 440C  
                         u5731 3716                           u3980 29C4                           u4940 4F52  
                         u5660 3F5E                           u5580 3D48                           u4860 175E  
                         u4780 1448                           u5740 379E                           u3981 29C0  
                         u3965 2940                           u4941 4F4E                           u5661 3F5A  
                         u5581 3D44                           u4861 175A                           u4781 1444  
                         u5741 379A                           u3990 29D6                           u5670 3FA8  
                         u5590 3D98                           u4870 177A                           u4790 1458  
                         u4950 3206                           u5750 37D4                           u3991 29D2  
                         u5671 3FA4                           u5591 3D94                           u4871 1776  
                         u4791 1454                           u4951 3202                           u5751 37D0  
                         u4928 5E64                           u4880 17E2                           u4960 3256  
                         u4881 17DC                           u4961 3252                           u4890 17E4  
                         u4970 3276                           u5690 3594                           u4971 3272  
                         u5907 44DA                           u5691 3590                           u5827 3578  
                         u4980 338C                           u4981 3388                           u5917 4510  
                         u5837 35A0                           u4990 611A                           u5927 4F14  
                         u4991 6116                           u5847 3680                           u5937 5F80  
                         u5857 4380                           u5947 5C98                           u5867 43F4  
                         u5957 5CBE                           u5877 442C                           u5967 581A  
                         u5887 4466                           u5977 5844                           u5897 449E  
                         u5987 570C                           u5997 5738                  _LightBlueMove 59A6  
                         abs@a 0013                           _dbuf 02A0                           _labs 55C8  
                         _main 34E4                           _dtoa 3AB8                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 530A                   ?_homeReverse 001A  
                ___fpclassifyf 4B82                           prodh 000FF4                           prodl 000FF3  
                         start 0034                ___fldiv@new_exp 0043         __end_of_color_read_Red 5BDE  
              __end_of_HighISR 0034         __end_of_color_read_lum 5B8E                  _Backhalfblock 56EE  
                 ___param_bank 000000                ReverseYellow@mL 0020                ReverseYellow@mR 0022  
              __end_of_RedMove 5EF8                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 5CCE                _RunOneBlockTime 00F2  
             __end_of_LED_init 6084                  ___fltol@sign1 0009                __end_of___aodiv 46A8  
                        ?_labs 0001                __end_of___fladd 26EC                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4978                __end_of___fldiv 2EB0  
              __end_of___flneg 5F6E                __end_of___flmul 2B16                __end_of___flsub 5DB0  
              __end_of___fltol 4A7E                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 54F0                          i2l227 0030                   vfpfcnvrt@fmt 0097  
                        _TMR0H 000FD4                          _TMR0L 000FD3                __end_of_go_Home 3AB8  
      __end_of_sendCharSerial4 6120     __end_of_I2C_2_Master_Start 6162     __end_of_I2C_2_Master_Write 612C  
                 YellowMove@mL 0020                          _flags 00ED                   YellowMove@mR 0022  
                        _fputc 4C80                          _fputs 5DF4                 delayed_ms@time 0001  
                        labs@a 0001                          pad@fp 0011                          _power 00F6  
                        _width 00E7                          _putch 616C                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5                  ?_Buttons_init 0001                          plusw2 000FDB  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 5954                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5C7E  
        _I2C_2_Master_RepStart 6144               __end_of_BlueMove 547C                 ?_Backhalfblock 001A  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 54F0        __end_of_turnCalibration 4520  
              _reverseOneBlock 5854                   __end_of_labs 562E                   __end_of_main 37D8  
                 __end_of_dtoa 3D36                   __end_of_stop 5388                _colour_rel$3264 0064  
              _colour_rel$3265 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026          __end_of_ReverseYellow 4E00               __end_of_PinkMove 5A9C  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                 ??_Buttons_init 0001                         _RG6PPS 000E88  
                       i2l5785 000A                         i2l5787 001A                         i2l5789 002C  
                    ??_HighISR 0001       __end_of_color_click_init 5AEE                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 5954               __end_of___xxtofl 4374  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4A7E  
                       ___fleq 4F60                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 6084              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 0E3E                      ??___lwdiv 000B                         _floorf 3FAE  
                       _memcpy 5AEE                         clear_0 5536                         clear_1 5542  
                       clear_2 554E                         _motorL 0161                         _motorR 0158  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5DB0                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 5902                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 5146  
                   ___flge@ff1 002A                     _YellowMove 59F8                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5554        __end_of_reverseOneBlock 58AC                     ___flneg@f1 0001  
     __end_of_color_read_Green 5C2E         ?_I2C_2_Master_RepStart 0001                ??_Backhalfblock 001E  
                ___rparam_used 000001                      ?_LED_init 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 612C                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 5146                   __pidataBANK0 6162  
                 __pidataBANK1 6168                  __end_of_fputc 4D4A                  __end_of_fputs 5E38  
                __end_of_putch 616E              __end_of_GreenMove 5F36            __end_of_Timer0_init 60EA  
          __end_of_ReversePink 4EB6                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14367 00D3          __end_of_reverseDetect 57A2  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 57A2                     ??_LED_init 0001  
                   _getTMR0val 562E              __end_of_RetryMove 55C8                      ?_PinkMove 0020  
            _color_writetoaddr 60AA                     _delayed_ms 5F6E                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 001A  
                      ?_memcpy 0001           __end_of_Buttons_init 6144              __end_of_TurnDelay 5FDC  
        __end_of_timed_forward 4F60            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2EB0        __end_of_Interrupts_init 6138  
       color_writetoaddr@value 0003               ??_color_read_Red 0007                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 60CA  
                      _RedMove 5EBA             _I2C_2_Master_Start 6158                     ??_PinkMove 0024  
                   _initUSART4 60EA             _I2C_2_Master_Write 6120                        __Hparam 0000  
                      _WayBack 011A                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 60CA                    RetryMove@mL 0020                    RetryMove@mR 0022  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 4E00                        ___aodiv 4520                        ___fladd 222C  
                      ___aomod 4814                        ___fldiv 2B16                        ___flneg 5F36  
                      ___flmul 26EC                        ___flsub 5D6A                        ___fltol 4978  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 547C            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 001A  
                 turnLeft45@mR 001C                        __pcinit 54F0                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 37D8                        __ptext0 34E4  
                      __ptext1 4374                        __ptext2 5902                        __ptext3 58AC  
                      __ptext4 31DE                        __ptext5 0E3E                        __ptext6 5DB0  
                      __ptext7 5AEE                        __ptext8 55C8                        __ptext9 3FAE  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F1  
            color_read_lum@tmp 000A                        main@buf 0172                        _sprintf 5902  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5554  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                    ?_getTMR0val 0001                LightBlueMove@mL 0020  
              LightBlueMove@mR 0022                ??_fullSpeedBack 0018             ??_color_click_init 0005  
                   _move_count 01DA                    ?_delayed_ms 0001              turnCalibration@mL 0020  
            turnCalibration@mR 0022                     _lost_count 00EB              __end_of_vfpfcnvrt 34E4  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec1 000FE5  
                      postdec2 000FDD                    _Turn45Delay 00F4                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 009D  
                   ??_vfprintf 005F                        strcpy@d 0007                        strcpy@s 0005  
              _initDCmotorsPWM 5282                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 50A8                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                   _consecuitive 0116  
                  _CCP1CONbits 000FAB                     main@colour 01D6                   _EUSART4RXbuf 0100  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D1C                 __end_of___flge 4B82  
               __end_of___fleq 500A                 _fullSpeedAhead 51E4                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 60AA  
               __end_of_efgtoa 1838                 __end_of_floorf 41C0                 __end_of_memcpy 5B3E  
                   floorf@F526 00DF       __end_of_Forwardhalfblock 57FC                  ??_colour_move 002F  
                    _GreenMove 5EF8                 __end_of_strcpy 5DF4            start_initialization 54F0  
                  __end_of_abs 5EBA                    __end_of_pad 5402                  _TxBufWriteCnt 00EF  
        __end_of_LightBlueMove 59F8                   ??_OrangeMove 0024                   _Buttons_init 6138  
        __end_of___fpclassifyf 4C80                  ??_homeReverse 001E                  homeReverse@mL 001A  
                homeReverse@mR 001C            color_read_Green@tmp 000A   colour_move@recognized_colour 002D  
        __end_of_Backhalfblock 5748        __end_of_initDCmotorsPWM 530A                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 5282                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 555E                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F2  
                  __pdataBANK1 01D8                _ForwardOneBlock 57FC                       ??_floorf 004F  
                     ??_memcpy 0007                Backhalfblock@mL 001A                Backhalfblock@mR 001C  
                     ??_strcpy 0005                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4D4A                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 59A6                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 5FA6  
                __pcstackBANK0 0060                  __pcstackBANK1 0172               ___aodiv@dividend 0001  
          __end_of_colour_move 3FAE                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020                    _efgtoa$2896 006F  
             ___lwdiv@dividend 0007                      _dtoa$2865 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 0020                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
          __end_of_homeReverse 5CCE                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3266 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5A4A           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 56EE  
            _I2C_2_Master_Idle 6036              _I2C_2_Master_Init 600C              _I2C_2_Master_Read 5E38  
            _I2C_2_Master_Stop 614E                     ?_TurnDelay 0001                   _RxBufReadCnt 00F0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0005  
               colour_rel@vals 004B              _sendStringSerial4 5FDC            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _LED_init 605E  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 5854                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0114  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u568_40 001A  
                     i2u568_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 1838            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 31DE      __end_of_I2C_2_Master_Idle 605E  
    __end_of_I2C_2_Master_Init 6036      __end_of_I2C_2_Master_Read 5E7A              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 6158                   setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024                    _colour_move 3D36              ??_color_read_Blue 0007  
           __end_of_getTMR0val 5690                   _TxBufReadCnt 00EE                       _BlueMove 5402  
                    _turnRight 500A             __end_of_delayed_ms 5FA6                     vfpfcnvrt@c 00A5  
            ??_turnCalibration 0024                      copy_data0 5504                      copy_data1 5524  
    __end_of_sendStringSerial4 600C                   ??_colour_rel 004F                  _reverseDetect 5748  
__end_of_I2C_2_Master_RepStart 614E             color_read_Blue@tmp 000A            __end_of_setMotorPWM 4814  
                  _homeReverse 5C7E                   ??_initUSART4 0001                       _PinkMove 5A4A  
                     __Hrparam 0000         __end_of_Colour_decider 222C                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 51E4                    ??_RetryMove 0024           TurnDelay@Turn45Delay 0001  
                  _readColours 5690                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 31DE  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3                     _ANSELFbits 000EB4  
                _timed_forward 4EB6                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 41C0                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 6108                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4B82                       __ptext11 4978  
                     __ptext20 4520                       __ptext12 5F36                       __ptext21 5FDC  
                     __ptext13 3AB8                       __ptext30 60EA                       __ptext22 6108  
                     __ptext14 5388                       __ptext31 5282                       __ptext23 5690  
                     __ptext15 5DF4                       __ptext40 4E00                       __ptext32 562E  
                     __ptext24 5B3E                       __ptext16 4C80                       __ptext41 57FC  
                     __ptext33 2EB0                       __ptext25 5B8E                       __ptext17 616C  
                     __ptext50 500A                       __ptext42 5EBA                       __ptext34 3D36  
                     __ptext26 5BDE                       __ptext18 5E7A                       __ptext51 555E  
                     __ptext43 5954                       __ptext35 37D8                       __ptext27 5C2E  
                     __ptext19 4814                       __ptext60 60AA                       __ptext52 5A4A  
                     __ptext44 59A6                       __ptext36 4EB6                       __ptext28 6144  
                     __ptext61 6120                       __ptext53 5D1C                       __ptext45 5EF8  
                     __ptext37 5F6E                       __ptext29 5E38                       __ptext70 530A  
                     __ptext62 614E                       __ptext54 50A8                       __ptext46 5402  
                     __ptext38 5C7E                       __ptext71 51E4                       __ptext63 6158  
                     __ptext55 5FA6                       __ptext47 56EE                       __ptext39 4D4A  
                     __ptext80 4A7E                       __ptext72 46A8                       __ptext64 6036  
                     __ptext56 5854                       __ptext48 59F8                       __ptext81 4F60  
                     __ptext73 6084                       __ptext65 600C                       __ptext57 5748  
                     __ptext49 5CCE                       __ptext82 2B16                       __ptext74 547C  
                     __ptext66 60CA                       __ptext58 5146                       __ptext83 6138  
                     __ptext75 1838                       __ptext67 605E                       __ptext59 5A9C  
                     __ptext76 41C0                       __ptext68 612C                       __ptext77 5D6A  
                     __ptext69 57A2                       __ptext78 222C                       __ptext79 26EC  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 58AC                       _run_flag 01D8  
                ??_turnRight45 001E                       _turnLeft 50A8               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
                   _INTCONbits 000FF2                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 46A8                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
                    strcpy@src 0003                 getTMR0val@temp 0003                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 009B                ___aomod@counter 0011  
             _color_click_init 5A9C                       sprintf@f 00C6                       sprintf@s 00B0  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C            __end_of_turnRight45 5D1C  
                  _prev_colour 0118                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5D6A                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 6108                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
