

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 00:31:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87   000000                     
    88                           ; Generated 06/04/2022 GMT
    89                           ; 
    90                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F67K40 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122   000000                     
   123                           	psect	idataBANK0
   124   0055E6                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _high_threshold
   128   0055E6  03E8               	dw	1000
   129                           
   130                           ;initializer for _DataFlag
   131   0055E8  01                 	db	1
   132   000000                     _TRISEbits	set	3973
   133   000000                     _TX4REG	set	3812
   134   000000                     _RC4STAbits	set	3815
   135   000000                     _SP4BRGH	set	3814
   136   000000                     _SSP2CON2bits	set	3802
   137   000000                     _RX4PPS	set	3605
   138   000000                     _SSP2CLKPPS	set	3612
   139   000000                     _SSP2DATPPS	set	3613
   140   000000                     _ANSELDbits	set	3751
   141   000000                     _SSP2ADD	set	3798
   142   000000                     _SSP2CON1bits	set	3801
   143   000000                     _LATAbits	set	3961
   144   000000                     _LATFbits	set	3966
   145   000000                     _LATGbits	set	3967
   146   000000                     _TRISAbits	set	3969
   147   000000                     _TRISGbits	set	3975
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _TRISCbits	set	3971
   151   000000                     _TRISDbits	set	3972
   152   000000                     _TRISFbits	set	3974
   153   000000                     _LATDbits	set	3964
   154   000000                     _RC4REG	set	3811
   155   000000                     _SP4BRGL	set	3813
   156   000000                     _TX4STAbits	set	3816
   157   000000                     _BAUD4CONbits	set	3817
   158   000000                     _SSP2CON2	set	3802
   159   000000                     _SSP2STAT	set	3800
   160   000000                     _SSP2BUF	set	3797
   161   000000                     _PIE4bits	set	3629
   162   000000                     _PIR4bits	set	3639
   163   000000                     _RC0PPS	set	3682
   164   000000                     _RD5PPS	set	3695
   165   000000                     _RE2PPS	set	3700
   166   000000                     _RD6PPS	set	3696
   167   000000                     _RC7PPS	set	3689
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _T2PR	set	4028
   173   000000                     _T2CONbits	set	4029
   174   000000                     _CCP2CONbits	set	4007
   175   000000                     _CCP3CONbits	set	3878
   176   000000                     _CCP4CONbits	set	3874
   177   000000                     _RE4PPS	set	3702
   178   000000                     _RG6PPS	set	3720
   179   000000                     _T2CLKCONbits	set	4031
   180   000000                     _T2HLTbits	set	4030
   181                           
   182                           	psect	smallconst
   183   000E00                     __psmallconst:
   184                           	callstack 0
   185   000E00  00                 	db	0
   186   000E01                     STR_1:
   187   000E01  72                 	db	114	;'r'
   188   000E02  65                 	db	101	;'e'
   189   000E03  64                 	db	100	;'d'
   190   000E04  3D                 	db	61	;'='
   191   000E05  25                 	db	37
   192   000E06  66                 	db	102	;'f'
   193   000E07  20                 	db	32
   194   000E08  67                 	db	103	;'g'
   195   000E09  72                 	db	114	;'r'
   196   000E0A  65                 	db	101	;'e'
   197   000E0B  65                 	db	101	;'e'
   198   000E0C  6E                 	db	110	;'n'
   199   000E0D  3D                 	db	61	;'='
   200   000E0E  25                 	db	37
   201   000E0F  66                 	db	102	;'f'
   202   000E10  20                 	db	32
   203   000E11  62                 	db	98	;'b'
   204   000E12  6C                 	db	108	;'l'
   205   000E13  75                 	db	117	;'u'
   206   000E14  65                 	db	101	;'e'
   207   000E15  3D                 	db	61	;'='
   208   000E16  25                 	db	37
   209   000E17  66                 	db	102	;'f'
   210   000E18  20                 	db	32
   211   000E19  6C                 	db	108	;'l'
   212   000E1A  75                 	db	117	;'u'
   213   000E1B  6D                 	db	109	;'m'
   214   000E1C  3D                 	db	61	;'='
   215   000E1D  25                 	db	37
   216   000E1E  64                 	db	100	;'d'
   217   000E1F  20                 	db	32
   218   000E20  63                 	db	99	;'c'
   219   000E21  6F                 	db	111	;'o'
   220   000E22  6C                 	db	108	;'l'
   221   000E23  6F                 	db	111	;'o'
   222   000E24  75                 	db	117	;'u'
   223   000E25  72                 	db	114	;'r'
   224   000E26  31                 	db	49	;'1'
   225   000E27  3D                 	db	61	;'='
   226   000E28  25                 	db	37
   227   000E29  64                 	db	100	;'d'
   228   000E2A  20                 	db	32
   229   000E2B  0D                 	db	13
   230   000E2C  0A                 	db	10
   231   000E2D  00                 	db	0
   232   000E2E                     STR_2:
   233   000E2E  72                 	db	114	;'r'
   234   000E2F  65                 	db	101	;'e'
   235   000E30  64                 	db	100	;'d'
   236   000E31  3D                 	db	61	;'='
   237   000E32  25                 	db	37
   238   000E33  64                 	db	100	;'d'
   239   000E34  20                 	db	32
   240   000E35  67                 	db	103	;'g'
   241   000E36  72                 	db	114	;'r'
   242   000E37  65                 	db	101	;'e'
   243   000E38  65                 	db	101	;'e'
   244   000E39  6E                 	db	110	;'n'
   245   000E3A  3D                 	db	61	;'='
   246   000E3B  25                 	db	37
   247   000E3C  64                 	db	100	;'d'
   248   000E3D  20                 	db	32
   249   000E3E  62                 	db	98	;'b'
   250   000E3F  6C                 	db	108	;'l'
   251   000E40  75                 	db	117	;'u'
   252   000E41  65                 	db	101	;'e'
   253   000E42  3D                 	db	61	;'='
   254   000E43  25                 	db	37
   255   000E44  64                 	db	100	;'d'
   256   000E45  20                 	db	32
   257   000E46  6C                 	db	108	;'l'
   258   000E47  75                 	db	117	;'u'
   259   000E48  6D                 	db	109	;'m'
   260   000E49  3D                 	db	61	;'='
   261   000E4A  25                 	db	37
   262   000E4B  64                 	db	100	;'d'
   263   000E4C  20                 	db	32
   264   000E4D  0D                 	db	13
   265   000E4E  0A                 	db	10
   266   000E4F  00                 	db	0
   267   000E50                     STR_3:
   268   000E50  69                 	db	105	;'i'
   269   000E51  6E                 	db	110	;'n'
   270   000E52  66                 	db	102	;'f'
   271   000E53  00                 	db	0
   272   000E54                     STR_6:
   273   000E54  6E                 	db	110	;'n'
   274   000E55  61                 	db	97	;'a'
   275   000E56  6E                 	db	110	;'n'
   276   000E57  00                 	db	0
   277   000E58  00                 	db	0	; dummy byte at the end
   278   000000                     
   279                           ; #config settings
   280                           
   281                           	psect	cinit
   282   00526E                     __pcinit:
   283                           	callstack 0
   284   00526E                     start_initialization:
   285                           	callstack 0
   286   00526E                     __initialization:
   287                           	callstack 0
   288                           
   289                           ; Initialize objects allocated to BANK0 (3 bytes)
   290                           ; load TBLPTR registers with __pidataBANK0
   291   00526E  0EE6               	movlw	low __pidataBANK0
   292   005270  6EF6               	movwf	tblptrl,c
   293   005272  0E55               	movlw	high __pidataBANK0
   294   005274  6EF7               	movwf	tblptrh,c
   295   005276  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   296   005278  6EF8               	movwf	tblptru,c
   297   00527A  0009               	tblrd		*+	;fetch initializer
   298   00527C  CFF5 F0FA          	movff	tablat,__pdataBANK0
   299   005280  0009               	tblrd		*+	;fetch initializer
   300   005282  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   301   005286  0009               	tblrd		*+	;fetch initializer
   302   005288  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   303                           
   304                           ; Clear objects allocated to BANK2 (60 bytes)
   305   00528C  EE02  F000         	lfsr	0,__pbssBANK2
   306   005290  0E3C               	movlw	60
   307   005292                     clear_0:
   308   005292  6AEE               	clrf	postinc0,c
   309   005294  06E8               	decf	wreg,f,c
   310   005296  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to BANK1 (130 bytes)
   313   005298  EE01  F000         	lfsr	0,__pbssBANK1
   314   00529C  0E82               	movlw	130
   315   00529E                     clear_1:
   316   00529E  6AEE               	clrf	postinc0,c
   317   0052A0  06E8               	decf	wreg,f,c
   318   0052A2  E1FD               	bnz	clear_1
   319                           
   320                           ; Clear objects allocated to BANK0 (39 bytes)
   321   0052A4  EE00  F0D3         	lfsr	0,__pbssBANK0
   322   0052A8  0E27               	movlw	39
   323   0052AA                     clear_2:
   324   0052AA  6AEE               	clrf	postinc0,c
   325   0052AC  06E8               	decf	wreg,f,c
   326   0052AE  E1FD               	bnz	clear_2
   327   0052B0                     end_of_initialization:
   328                           	callstack 0
   329   0052B0                     __end_of__initialization:
   330                           	callstack 0
   331   0052B0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332   0052B2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   333   0052B4  0100               	movlb	0
   334   0052B6  EFDA  F017         	goto	_main	;jump to C main() function
   335                           
   336                           	psect	bssBANK0
   337   0000D3                     __pbssBANK0:
   338                           	callstack 0
   339   0000D3                     _EUSART4RXbuf:
   340                           	callstack 0
   341   0000D3                     	ds	20
   342   0000E7                     floorf@F526:
   343                           	callstack 0
   344   0000E7                     	ds	4
   345   0000EB                     ___fpclassifyf@F465:
   346                           	callstack 0
   347   0000EB                     	ds	4
   348   0000EF                     _width:
   349                           	callstack 0
   350   0000EF                     	ds	2
   351   0000F1                     _prec:
   352                           	callstack 0
   353   0000F1                     	ds	2
   354   0000F3                     _low_threshold:
   355                           	callstack 0
   356   0000F3                     	ds	2
   357   0000F5                     _flags:
   358                           	callstack 0
   359   0000F5                     	ds	1
   360   0000F6                     _TxBufReadCnt:
   361                           	callstack 0
   362   0000F6                     	ds	1
   363   0000F7                     _TxBufWriteCnt:
   364                           	callstack 0
   365   0000F7                     	ds	1
   366   0000F8                     _RxBufReadCnt:
   367                           	callstack 0
   368   0000F8                     	ds	1
   369   0000F9                     _RxBufWriteCnt:
   370                           	callstack 0
   371   0000F9                     	ds	1
   372                           
   373                           	psect	dataBANK0
   374   0000FA                     __pdataBANK0:
   375                           	callstack 0
   376   0000FA                     _high_threshold:
   377                           	callstack 0
   378   0000FA                     	ds	2
   379   0000FC                     _DataFlag:
   380                           	callstack 0
   381   0000FC                     	ds	1
   382                           
   383                           	psect	bssBANK1
   384   000100                     __pbssBANK1:
   385                           	callstack 0
   386   000100                     	ds	12
   387   00010C                     _dbuf:
   388                           	callstack 0
   389   00010C                     	ds	80
   390   00015C                     _rel:
   391                           	callstack 0
   392   00015C                     	ds	12
   393   000168                     _motorR:
   394                           	callstack 0
   395   000168                     	ds	9
   396   000171                     _motorL:
   397                           	callstack 0
   398   000171                     	ds	9
   399   00017A                     _vals:
   400                           	callstack 0
   401   00017A                     	ds	8
   402                           
   403                           	psect	bssBANK2
   404   000200                     __pbssBANK2:
   405                           	callstack 0
   406   000200                     _EUSART4TXbuf:
   407                           	callstack 0
   408   000200                     	ds	60
   409                           
   410                           	psect	cstackBANK1
   411   000182                     __pcstackBANK1:
   412                           	callstack 0
   413   000182                     main@buf:
   414                           	callstack 0
   415                           
   416                           ; 100 bytes @ 0x0
   417   000182                     	ds	100
   418   0001E6                     main@consecuitive:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x64
   422   0001E6                     	ds	2
   423   0001E8                     main@colour:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x66
   427   0001E8                     	ds	2
   428   0001EA                     main@prev_colour:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x68
   432   0001EA                     	ds	2
   433                           
   434                           	psect	cstackBANK0
   435   000060                     __pcstackBANK0:
   436                           	callstack 0
   437   000060                     efgtoa@fp:
   438                           	callstack 0
   439   000060                     colour_rel@L:
   440                           	callstack 0
   441   000060                     _Colour_decider$2643:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x0
   445   000060                     	ds	2
   446   000062                     efgtoa@f:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x2
   450   000062                     	ds	2
   451   000064                     Colour_decider@Cmax_i:
   452                           	callstack 0
   453   000064                     _colour_rel$2641:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x4
   457   000064                     	ds	2
   458   000066                     efgtoa@c:
   459                           	callstack 0
   460   000066                     Colour_decider@RGB_col:
   461                           	callstack 0
   462                           
   463                           ; 12 bytes @ 0x6
   464   000066                     	ds	1
   465   000067                     ??_efgtoa:
   466                           
   467                           ; 1 bytes @ 0x7
   468   000067                     	ds	1
   469   000068                     _colour_rel$2642:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x8
   473   000068                     	ds	1
   474   000069                     efgtoa@ne:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x9
   478   000069                     	ds	2
   479   00006B                     efgtoa@p:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xB
   483   00006B                     	ds	1
   484   00006C                     colour_rel@R:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0xC
   488   00006C                     	ds	1
   489   00006D                     efgtoa@t:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xD
   493   00006D                     	ds	2
   494   00006F                     _efgtoa$2278:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xF
   498   00006F                     	ds	1
   499   000070                     colour_rel@G:
   500                           	callstack 0
   501                           
   502                           ; 4 bytes @ 0x10
   503   000070                     	ds	1
   504   000071                     efgtoa@pp:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x11
   508   000071                     	ds	1
   509   000072                     efgtoa@mode:
   510                           	callstack 0
   511   000072                     Colour_decider@Cmax:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x12
   515   000072                     	ds	1
   516   000073                     efgtoa@nmode:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x13
   520   000073                     	ds	1
   521   000074                     efgtoa@d:
   522                           	callstack 0
   523   000074                     colour_rel@B:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x14
   527   000074                     	ds	2
   528   000076                     efgtoa@m:
   529                           	callstack 0
   530   000076                     Colour_decider@Cmin:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x16
   534   000076                     	ds	2
   535   000078                     efgtoa@e:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x18
   539   000078                     	ds	2
   540   00007A                     Colour_decider@i:
   541                           	callstack 0
   542   00007A                     efgtoa@w:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1A
   546   00007A                     	ds	2
   547   00007C                     Colour_decider@Hue:
   548                           	callstack 0
   549   00007C                     efgtoa@ou:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x1C
   553   00007C                     	ds	4
   554   000080                     efgtoa@i:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x20
   558   000080                     	ds	2
   559   000082                     efgtoa@h:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x22
   563   000082                     	ds	4
   564   000086                     efgtoa@l:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x26
   568   000086                     	ds	4
   569   00008A                     efgtoa@sign:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x2A
   573   00008A                     	ds	1
   574   00008B                     efgtoa@n:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2B
   578   00008B                     	ds	2
   579   00008D                     efgtoa@g:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x2D
   583   00008D                     	ds	4
   584   000091                     efgtoa@u:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x31
   588   000091                     	ds	4
   589   000095                     vfpfcnvrt@fp:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x35
   593   000095                     	ds	2
   594   000097                     vfpfcnvrt@fmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x37
   598   000097                     	ds	2
   599   000099                     vfpfcnvrt@ap:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x39
   603   000099                     	ds	2
   604   00009B                     ??_vfpfcnvrt:
   605                           
   606                           ; 1 bytes @ 0x3B
   607   00009B                     	ds	2
   608   00009D                     vfpfcnvrt@convarg:
   609                           	callstack 0
   610                           
   611                           ; 8 bytes @ 0x3D
   612   00009D                     	ds	8
   613   0000A5                     vfpfcnvrt@c:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x45
   617   0000A5                     	ds	1
   618   0000A6                     vfpfcnvrt@cp:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x46
   622   0000A6                     	ds	2
   623   0000A8                     ?_vfprintf:
   624                           	callstack 0
   625   0000A8                     vfprintf@fp:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x48
   629   0000A8                     	ds	2
   630   0000AA                     vfprintf@fmt:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x4A
   634   0000AA                     	ds	2
   635   0000AC                     vfprintf@ap:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x4C
   639   0000AC                     	ds	2
   640   0000AE                     vfprintf@cfmt:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x4E
   644   0000AE                     	ds	2
   645   0000B0                     ?_sprintf:
   646                           	callstack 0
   647   0000B0                     sprintf@s:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x50
   651   0000B0                     	ds	2
   652   0000B2                     sprintf@fmt:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x52
   656   0000B2                     	ds	18
   657   0000C4                     sprintf@ap:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x64
   661   0000C4                     	ds	2
   662   0000C6                     sprintf@f:
   663                           	callstack 0
   664                           
   665                           ; 11 bytes @ 0x66
   666   0000C6                     	ds	11
   667   0000D1                     ??_main:
   668                           
   669                           ; 1 bytes @ 0x71
   670   0000D1                     	ds	2
   671                           
   672                           	psect	cstackCOMRAM
   673   000001                     __pcstackCOMRAM:
   674                           	callstack 0
   675   000001                     ??_I2C_2_Master_Idle:
   676   000001                     ?___fpclassifyf:
   677                           	callstack 0
   678   000001                     ?___wmul:
   679                           	callstack 0
   680   000001                     ?___fladd:
   681                           	callstack 0
   682   000001                     ?_labs:
   683                           	callstack 0
   684   000001                     ?___flneg:
   685                           	callstack 0
   686   000001                     ?___fltol:
   687                           	callstack 0
   688   000001                     ?___xxtofl:
   689                           	callstack 0
   690   000001                     ?___aodiv:
   691                           	callstack 0
   692   000001                     ?___aomod:
   693                           	callstack 0
   694   000001                     sendCharSerial4@charToSend:
   695                           	callstack 0
   696   000001                     initDCmotorsPWM@PWMperiod:
   697                           	callstack 0
   698   000001                     ___wmul@multiplier:
   699                           	callstack 0
   700   000001                     memcpy@d1:
   701                           	callstack 0
   702   000001                     fputc@c:
   703                           	callstack 0
   704   000001                     strcpy@dest:
   705                           	callstack 0
   706   000001                     ___flneg@f1:
   707                           	callstack 0
   708   000001                     ___fltol@f1:
   709                           	callstack 0
   710   000001                     ___fladd@b:
   711                           	callstack 0
   712   000001                     ___xxtofl@val:
   713                           	callstack 0
   714   000001                     ___fpclassifyf@x:
   715                           	callstack 0
   716   000001                     labs@a:
   717                           	callstack 0
   718   000001                     ___aodiv@dividend:
   719                           	callstack 0
   720   000001                     ___aomod@dividend:
   721                           	callstack 0
   722                           
   723                           ; 8 bytes @ 0x0
   724   000001                     	ds	1
   725   000002                     ??_I2C_2_Master_Read:
   726   000002                     I2C_2_Master_Write@data_byte:
   727                           	callstack 0
   728   000002                     sendStringSerial4@string:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1
   732   000002                     	ds	1
   733   000003                     color_writetoaddr@value:
   734                           	callstack 0
   735   000003                     I2C_2_Master_Read@ack:
   736                           	callstack 0
   737   000003                     ___wmul@multiplicand:
   738                           	callstack 0
   739   000003                     memcpy@s1:
   740                           	callstack 0
   741   000003                     fputc@fp:
   742                           	callstack 0
   743   000003                     strcpy@src:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x2
   747   000003                     	ds	1
   748   000004                     color_writetoaddr@address:
   749                           	callstack 0
   750   000004                     I2C_2_Master_Read@tmp:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x3
   754   000004                     	ds	1
   755   000005                     ??_fputc:
   756   000005                     ??___fpclassifyf:
   757   000005                     ??_labs:
   758   000005                     ??_color_click_init:
   759   000005                     ??___fltol:
   760   000005                     ??___xxtofl:
   761   000005                     ?_color_read_lum:
   762                           	callstack 0
   763   000005                     ?_color_read_Red:
   764                           	callstack 0
   765   000005                     ?_color_read_Green:
   766                           	callstack 0
   767   000005                     ?_color_read_Blue:
   768                           	callstack 0
   769   000005                     ___wmul@product:
   770                           	callstack 0
   771   000005                     memcpy@n:
   772                           	callstack 0
   773   000005                     strcpy@s:
   774                           	callstack 0
   775   000005                     ___fladd@a:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x4
   779   000005                     	ds	2
   780   000007                     ??_color_read_lum:
   781   000007                     ??_color_read_Red:
   782   000007                     ??_color_read_Green:
   783   000007                     ??_color_read_Blue:
   784   000007                     ?___lwdiv:
   785                           	callstack 0
   786   000007                     ___lwdiv@dividend:
   787                           	callstack 0
   788   000007                     memcpy@d:
   789                           	callstack 0
   790   000007                     strcpy@d:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x6
   794   000007                     	ds	2
   795   000009                     ??___fladd:
   796   000009                     ___fltol@sign1:
   797                           	callstack 0
   798   000009                     ___xxtofl@sign:
   799                           	callstack 0
   800   000009                     ___lwdiv@divisor:
   801                           	callstack 0
   802   000009                     ___fpclassifyf@e:
   803                           	callstack 0
   804   000009                     memcpy@s:
   805                           	callstack 0
   806   000009                     ___aodiv@divisor:
   807                           	callstack 0
   808   000009                     ___aomod@divisor:
   809                           	callstack 0
   810                           
   811                           ; 8 bytes @ 0x8
   812   000009                     	ds	1
   813   00000A                     ___fltol@exp1:
   814                           	callstack 0
   815   00000A                     ___xxtofl@exp:
   816                           	callstack 0
   817   00000A                     color_read_lum@tmp:
   818                           	callstack 0
   819   00000A                     color_read_Red@tmp:
   820                           	callstack 0
   821   00000A                     color_read_Green@tmp:
   822                           	callstack 0
   823   00000A                     color_read_Blue@tmp:
   824                           	callstack 0
   825   00000A                     fputs@s:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x9
   829   00000A                     	ds	1
   830   00000B                     memcpy@tmp:
   831                           	callstack 0
   832   00000B                     ___lwdiv@quotient:
   833                           	callstack 0
   834   00000B                     ___xxtofl@arg:
   835                           	callstack 0
   836   00000B                     ___fpclassifyf@u:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0xA
   840   00000B                     	ds	1
   841   00000C                     readColours@vals:
   842                           	callstack 0
   843   00000C                     fputs@fp:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0xB
   847   00000C                     	ds	1
   848   00000D                     ___lwdiv@counter:
   849                           	callstack 0
   850   00000D                     ___fladd@signs:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0xC
   854   00000D                     	ds	1
   855   00000E                     ___fladd@aexp:
   856                           	callstack 0
   857   00000E                     fputs@c:
   858                           	callstack 0
   859   00000E                     setMotorPWM@m:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xD
   863   00000E                     	ds	1
   864   00000F                     ___fladd@bexp:
   865                           	callstack 0
   866   00000F                     fputs@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xE
   870   00000F                     	ds	1
   871   000010                     ??_setMotorPWM:
   872   000010                     ___fladd@grs:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0xF
   876   000010                     	ds	1
   877   000011                     ?___flmul:
   878                           	callstack 0
   879   000011                     ___aodiv@counter:
   880                           	callstack 0
   881   000011                     ___aomod@counter:
   882                           	callstack 0
   883   000011                     pad@fp:
   884                           	callstack 0
   885   000011                     ___flmul@b:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x10
   889   000011                     	ds	1
   890   000012                     setMotorPWM@posDuty:
   891                           	callstack 0
   892   000012                     ___aodiv@sign:
   893                           	callstack 0
   894   000012                     ___aomod@sign:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x11
   898   000012                     	ds	1
   899   000013                     ?_abs:
   900                           	callstack 0
   901   000013                     setMotorPWM@negDuty:
   902                           	callstack 0
   903   000013                     pad@buf:
   904                           	callstack 0
   905   000013                     abs@a:
   906                           	callstack 0
   907   000013                     ___aodiv@quotient:
   908                           	callstack 0
   909                           
   910                           ; 8 bytes @ 0x12
   911   000013                     	ds	1
   912   000014                     stop@mL:
   913                           	callstack 0
   914   000014                     turnLeft@mL:
   915                           	callstack 0
   916   000014                     turnRight@mL:
   917                           	callstack 0
   918   000014                     fullSpeedBack@mL:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x13
   922   000014                     	ds	1
   923   000015                     ??_abs:
   924   000015                     pad@p:
   925                           	callstack 0
   926   000015                     ___flmul@a:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x14
   930   000015                     	ds	1
   931   000016                     stop@mR:
   932                           	callstack 0
   933   000016                     turnLeft@mR:
   934                           	callstack 0
   935   000016                     turnRight@mR:
   936                           	callstack 0
   937   000016                     fullSpeedBack@mR:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x15
   941   000016                     	ds	1
   942   000017                     ??_pad:
   943                           
   944                           ; 1 bytes @ 0x16
   945   000017                     	ds	1
   946   000018                     ??_stop:
   947   000018                     ??_turnLeft:
   948   000018                     ??_turnRight:
   949   000018                     ??_fullSpeedBack:
   950   000018                     pad@i:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x17
   954   000018                     	ds	1
   955   000019                     ??___flmul:
   956   000019                     turnRight45@mL:
   957                           	callstack 0
   958   000019                     turnLeft45@mL:
   959                           	callstack 0
   960   000019                     reverseDetect@mL:
   961                           	callstack 0
   962   000019                     reverseOneBlock@mL:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x18
   966   000019                     	ds	1
   967   00001A                     pad@w:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x19
   971   00001A                     	ds	1
   972   00001B                     turnRight45@mR:
   973                           	callstack 0
   974   00001B                     turnLeft45@mR:
   975                           	callstack 0
   976   00001B                     reverseDetect@mR:
   977                           	callstack 0
   978   00001B                     reverseOneBlock@mR:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x1A
   982   00001B                     	ds	1
   983   00001C                     dtoa@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x1B
   987   00001C                     	ds	1
   988   00001D                     ??_turnRight45:
   989   00001D                     ??_turnLeft45:
   990   00001D                     ??_reverseDetect:
   991   00001D                     ??_reverseOneBlock:
   992   00001D                     ___flmul@sign:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x1C
   996   00001D                     	ds	1
   997   00001E                     ___flmul@grs:
   998                           	callstack 0
   999   00001E                     dtoa@d:
  1000                           	callstack 0
  1001                           
  1002                           ; 8 bytes @ 0x1D
  1003   00001E                     	ds	1
  1004   00001F                     RedMove@mL:
  1005                           	callstack 0
  1006   00001F                     GreenMove@mL:
  1007                           	callstack 0
  1008   00001F                     BlueMove@mL:
  1009                           	callstack 0
  1010   00001F                     YellowMove@mL:
  1011                           	callstack 0
  1012   00001F                     PinkMove@mL:
  1013                           	callstack 0
  1014   00001F                     OrangeMove@mL:
  1015                           	callstack 0
  1016   00001F                     LightBlueMove@mL:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1E
  1020   00001F                     	ds	2
  1021   000021                     RedMove@mR:
  1022                           	callstack 0
  1023   000021                     GreenMove@mR:
  1024                           	callstack 0
  1025   000021                     BlueMove@mR:
  1026                           	callstack 0
  1027   000021                     YellowMove@mR:
  1028                           	callstack 0
  1029   000021                     PinkMove@mR:
  1030                           	callstack 0
  1031   000021                     OrangeMove@mR:
  1032                           	callstack 0
  1033   000021                     LightBlueMove@mR:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x20
  1037   000021                     	ds	1
  1038   000022                     ___flmul@aexp:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x21
  1042   000022                     	ds	1
  1043   000023                     ___flmul@bexp:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x22
  1047   000023                     	ds	1
  1048   000024                     ___flmul@prod:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x23
  1052   000024                     	ds	2
  1053   000026                     ??_dtoa:
  1054                           
  1055                           ; 1 bytes @ 0x25
  1056   000026                     	ds	2
  1057   000028                     ___flmul@temp:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x27
  1061   000028                     	ds	2
  1062   00002A                     ?___flsub:
  1063                           	callstack 0
  1064   00002A                     ___flge@ff1:
  1065                           	callstack 0
  1066   00002A                     ___flsub@b:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x29
  1070   00002A                     	ds	4
  1071   00002E                     _dtoa$2247:
  1072                           	callstack 0
  1073   00002E                     ___flge@ff2:
  1074                           	callstack 0
  1075   00002E                     ___flsub@a:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x2D
  1079   00002E                     	ds	2
  1080   000030                     dtoa@p:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x2F
  1084   000030                     	ds	2
  1085   000032                     ??___flge:
  1086   000032                     ?___fldiv:
  1087                           	callstack 0
  1088   000032                     dtoa@w:
  1089                           	callstack 0
  1090   000032                     ___fleq@ff1:
  1091                           	callstack 0
  1092   000032                     ___fldiv@b:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x31
  1096   000032                     	ds	2
  1097   000034                     dtoa@n:
  1098                           	callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x33
  1101   000034                     	ds	2
  1102   000036                     ___fleq@ff2:
  1103                           	callstack 0
  1104   000036                     ___fldiv@a:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x35
  1108   000036                     	ds	4
  1109   00003A                     ??___fldiv:
  1110   00003A                     ??___fleq:
  1111                           
  1112                           ; 1 bytes @ 0x39
  1113   00003A                     	ds	2
  1114   00003C                     dtoa@i:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x3B
  1118   00003C                     	ds	2
  1119   00003E                     dtoa@s:
  1120                           	callstack 0
  1121   00003E                     ___fldiv@rem:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x3D
  1125   00003E                     	ds	4
  1126   000042                     ___fldiv@sign:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x41
  1130   000042                     	ds	1
  1131   000043                     ___fldiv@new_exp:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x42
  1135   000043                     	ds	2
  1136   000045                     ___fldiv@grs:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x44
  1140   000045                     	ds	4
  1141   000049                     ___fldiv@bexp:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x48
  1145   000049                     	ds	1
  1146   00004A                     ___fldiv@aexp:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x49
  1150   00004A                     	ds	1
  1151   00004B                     ?_Colour_decider:
  1152                           	callstack 0
  1153   00004B                     ?_floorf:
  1154                           	callstack 0
  1155   00004B                     colour_rel@vals:
  1156                           	callstack 0
  1157   00004B                     Colour_decider@vals:
  1158                           	callstack 0
  1159   00004B                     floorf@x:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x4A
  1163   00004B                     	ds	2
  1164   00004D                     colour_rel@rel:
  1165                           	callstack 0
  1166   00004D                     Colour_decider@rel:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x4C
  1170   00004D                     	ds	2
  1171   00004F                     ??_floorf:
  1172   00004F                     ??_Colour_decider:
  1173                           
  1174                           ; 1 bytes @ 0x4E
  1175   00004F                     	ds	6
  1176   000055                     floorf@m:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x54
  1180   000055                     	ds	4
  1181   000059                     floorf@e:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x58
  1185   000059                     	ds	2
  1186   00005B                     floorf@u:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x5A
  1190   00005B                     	ds	4
  1191   00005F                     
  1192                           ; 1 bytes @ 0x5E
  1193 ;;
  1194 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1195 ;;
  1196 ;; *************** function _main *****************
  1197 ;; Defined at:
  1198 ;;		line 29 in file "main.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  colour          2  102[BANK1 ] int 
  1203 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1204 ;;  prev_colour     2  104[BANK1 ] int 
  1205 ;;  consecuitive    2  100[BANK1 ] int 
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Locals:         0       0     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;      Totals:         0       2     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1219 ;;Total ram usage:      108 bytes
  1220 ;; Hardware stack levels required when called: 9
  1221 ;; This function calls:
  1222 ;;		_BlueMove
  1223 ;;		_Colour_decider
  1224 ;;		_GreenMove
  1225 ;;		_I2C_2_Master_Init
  1226 ;;		_Interrupts_init
  1227 ;;		_LightBlueMove
  1228 ;;		_OrangeMove
  1229 ;;		_PinkMove
  1230 ;;		_RedMove
  1231 ;;		_YellowMove
  1232 ;;		_color_click_init
  1233 ;;		_colour_rel
  1234 ;;		_initDCmotorsPWM
  1235 ;;		_initUSART4
  1236 ;;		_readColours
  1237 ;;		_sendStringSerial4
  1238 ;;		_sprintf
  1239 ;;		_stop
  1240 ;; This function is called by:
  1241 ;;		Startup code after reset
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text0
  1246   002FB4                     __ptext0:
  1247                           	callstack 0
  1248   002FB4                     _main:
  1249                           	callstack 22
  1250   002FB4                     
  1251                           ;main.c: 30:     initUSART4();
  1252   002FB4  ECC3  F02A         	call	_initUSART4	;wreg free
  1253   002FB8                     
  1254                           ;main.c: 31:     Interrupts_init();
  1255   002FB8  ECF6  F02A         	call	_Interrupts_init	;wreg free
  1256   002FBC                     
  1257                           ;main.c: 32:     color_click_init();
  1258   002FBC  ECA2  F027         	call	_color_click_init	;wreg free
  1259   002FC0                     
  1260                           ;main.c: 33:     I2C_2_Master_Init();
  1261   002FC0  EC77  F02A         	call	_I2C_2_Master_Init	;wreg free
  1262   002FC4                     
  1263                           ;main.c: 34:     initDCmotorsPWM(200);
  1264   002FC4  0E00               	movlw	0
  1265   002FC6  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1266   002FC8  0EC8               	movlw	200
  1267   002FCA  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1268   002FCC  EC11  F025         	call	_initDCmotorsPWM	;wreg free
  1269   002FD0                     
  1270                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1271   002FD0  9287               	bcf	135,1,c	;volatile
  1272   002FD2                     
  1273                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1274   002FD2  9881               	bcf	129,4,c	;volatile
  1275   002FD4                     
  1276                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1277   002FD4  9E86               	bcf	134,7,c	;volatile
  1278   002FD6                     
  1279                           ;main.c: 39:     LATGbits.LATG1=1;
  1280   002FD6  827F               	bsf	127,1,c	;volatile
  1281   002FD8                     
  1282                           ;main.c: 40:     LATAbits.LATA4=1;
  1283   002FD8  8879               	bsf	121,4,c	;volatile
  1284   002FDA                     
  1285                           ;main.c: 41:     LATFbits.LATF7=1;
  1286   002FDA  8E7E               	bsf	126,7,c	;volatile
  1287   002FDC                     
  1288                           ;main.c: 45:     motorL.power=0;
  1289   002FDC  0E00               	movlw	0
  1290   002FDE  0101               	movlb	1	; () banked
  1291   002FE0  6F71               	movwf	_motorL& (0+255),b
  1292   002FE2                     
  1293                           ; BSR set to: 1
  1294                           ;main.c: 46:     motorL.direction=1;
  1295   002FE2  0E01               	movlw	1
  1296   002FE4  6F72               	movwf	(_motorL+1)& (0+255),b
  1297   002FE6                     
  1298                           ; BSR set to: 1
  1299                           ;main.c: 47:     motorL.brakemode=1;
  1300   002FE6  0E01               	movlw	1
  1301   002FE8  6F73               	movwf	(_motorL+2)& (0+255),b
  1302   002FEA                     
  1303                           ; BSR set to: 1
  1304                           ;main.c: 48:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1305   002FEA  0EAA               	movlw	170
  1306   002FEC  6F76               	movwf	(_motorL+5)& (0+255),b
  1307   002FEE  0E0F               	movlw	15
  1308   002FF0  6F77               	movwf	(_motorL+6)& (0+255),b
  1309   002FF2                     
  1310                           ; BSR set to: 1
  1311                           ;main.c: 49:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1312   002FF2  0EA6               	movlw	166
  1313   002FF4  6F78               	movwf	(_motorL+7)& (0+255),b
  1314   002FF6  0E0F               	movlw	15
  1315   002FF8  6F79               	movwf	(_motorL+8)& (0+255),b
  1316   002FFA                     
  1317                           ; BSR set to: 1
  1318                           ;main.c: 50:     motorL.PWMperiod=200;
  1319   002FFA  0E00               	movlw	0
  1320   002FFC  6F75               	movwf	(_motorL+4)& (0+255),b
  1321   002FFE  0EC8               	movlw	200
  1322   003000  6F74               	movwf	(_motorL+3)& (0+255),b
  1323   003002                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 51:     motorR.power=0;
  1326   003002  0E00               	movlw	0
  1327   003004  6F68               	movwf	_motorR& (0+255),b
  1328   003006                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 52:     motorR.direction=1;
  1331   003006  0E01               	movlw	1
  1332   003008  6F69               	movwf	(_motorR+1)& (0+255),b
  1333   00300A                     
  1334                           ; BSR set to: 1
  1335                           ;main.c: 53:     motorR.brakemode=1;
  1336   00300A  0E01               	movlw	1
  1337   00300C  6F6A               	movwf	(_motorR+2)& (0+255),b
  1338   00300E                     
  1339                           ; BSR set to: 1
  1340                           ;main.c: 54:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1341   00300E  0E25               	movlw	37
  1342   003010  6F6D               	movwf	(_motorR+5)& (0+255),b
  1343   003012  0E0F               	movlw	15
  1344   003014  6F6E               	movwf	(_motorR+6)& (0+255),b
  1345   003016                     
  1346                           ; BSR set to: 1
  1347                           ;main.c: 55:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1348   003016  0E21               	movlw	33
  1349   003018  6F6F               	movwf	(_motorR+7)& (0+255),b
  1350   00301A  0E0F               	movlw	15
  1351   00301C  6F70               	movwf	(_motorR+8)& (0+255),b
  1352   00301E                     
  1353                           ; BSR set to: 1
  1354                           ;main.c: 56:     motorR.PWMperiod=200;
  1355   00301E  0E00               	movlw	0
  1356   003020  6F6C               	movwf	(_motorR+4)& (0+255),b
  1357   003022  0EC8               	movlw	200
  1358   003024  6F6B               	movwf	(_motorR+3)& (0+255),b
  1359   003026                     
  1360                           ; BSR set to: 1
  1361                           ;main.c: 57:     int consecuitive=0;
  1362   003026  0E00               	movlw	0
  1363   003028  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1364   00302A  0E00               	movlw	0
  1365   00302C  6FE6               	movwf	main@consecuitive& (0+255),b
  1366   00302E                     
  1367                           ; BSR set to: 1
  1368                           ;main.c: 58:     int prev_colour =0;
  1369   00302E  0E00               	movlw	0
  1370   003030  6FEB               	movwf	(main@prev_colour+1)& (0+255),b
  1371   003032  0E00               	movlw	0
  1372   003034  6FEA               	movwf	main@prev_colour& (0+255),b
  1373   003036                     l5136:
  1374                           
  1375                           ;main.c: 61:     {;main.c: 65:         readColours(&vals);
  1376   003036  0E7A               	movlw	low _vals
  1377   003038  6E0C               	movwf	readColours@vals^0,c
  1378   00303A  0E01               	movlw	high _vals
  1379   00303C  6E0D               	movwf	(readColours@vals+1)^0,c
  1380   00303E  EC6D  F026         	call	_readColours	;wreg free
  1381   003042                     
  1382                           ;main.c: 68:         colour_rel(&vals, &rel);
  1383   003042  0E7A               	movlw	low _vals
  1384   003044  6E4B               	movwf	colour_rel@vals^0,c
  1385   003046  0E01               	movlw	high _vals
  1386   003048  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1387   00304A  0E5C               	movlw	low _rel
  1388   00304C  6E4D               	movwf	colour_rel@rel^0,c
  1389   00304E  0E01               	movlw	high _rel
  1390   003050  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1391   003052  EC8A  F019         	call	_colour_rel	;wreg free
  1392   003056                     
  1393                           ;main.c: 71:         if (vals.L>=2200){
  1394   003056  0101               	movlb	1	; () banked
  1395   003058  BF81               	btfsc	(_vals+7)& (0+255),7,b
  1396   00305A  EF38  F018         	goto	u5241
  1397   00305E  0E98               	movlw	152
  1398   003060  5D80               	subwf	(_vals+6)& (0+255),w,b
  1399   003062  0E08               	movlw	8
  1400   003064  5981               	subwfb	(_vals+7)& (0+255),w,b
  1401   003066  A0D8               	btfss	status,0,c
  1402   003068  EF38  F018         	goto	u5241
  1403   00306C  EF3A  F018         	goto	u5240
  1404   003070                     u5241:
  1405   003070  EF65  F019         	goto	l5194
  1406   003074                     u5240:
  1407   003074                     
  1408                           ; BSR set to: 1
  1409                           ;main.c: 73:             stop(&motorL, &motorR);
  1410   003074  0E71               	movlw	low _motorL
  1411   003076  6E14               	movwf	stop@mL^0,c
  1412   003078  0E01               	movlw	high _motorL
  1413   00307A  6E15               	movwf	(stop@mL+1)^0,c
  1414   00307C  0E68               	movlw	low _motorR
  1415   00307E  6E16               	movwf	stop@mR^0,c
  1416   003080  0E01               	movlw	high _motorR
  1417   003082  6E17               	movwf	(stop@mR+1)^0,c
  1418   003084  EC92  F025         	call	_stop	;wreg free
  1419   003088                     
  1420                           ;main.c: 74:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1421   003088  0E11               	movlw	17
  1422   00308A  0100               	movlb	0	; () banked
  1423   00308C  6FD2               	movwf	(??_main+1)& (0+255),b
  1424   00308E  0E3C               	movlw	60
  1425   003090  6FD1               	movwf	??_main& (0+255),b
  1426   003092  0ECB               	movlw	203
  1427   003094                     u5367:
  1428   003094  2EE8               	decfsz	wreg,f,c
  1429   003096  D7FE               	bra	u5367
  1430   003098  2FD1               	decfsz	??_main& (0+255),f,b
  1431   00309A  D7FC               	bra	u5367
  1432   00309C  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1433   00309E  D7FA               	bra	u5367
  1434                           
  1435                           ;main.c: 79:             while (consecuitive<20){
  1436   0030A0  EF85  F018         	goto	l5158
  1437   0030A4                     l5146:
  1438                           
  1439                           ; BSR set to: 1
  1440                           ;main.c: 80:                 int colour = Colour_decider(&vals, &rel);
  1441   0030A4  0E7A               	movlw	low _vals
  1442   0030A6  6E4B               	movwf	Colour_decider@vals^0,c
  1443   0030A8  0E01               	movlw	high _vals
  1444   0030AA  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1445   0030AC  0E5C               	movlw	low _rel
  1446   0030AE  6E4D               	movwf	Colour_decider@rel^0,c
  1447   0030B0  0E01               	movlw	high _rel
  1448   0030B2  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1449   0030B4  EC2D  F007         	call	_Colour_decider	;wreg free
  1450   0030B8  C04B  F1E8         	movff	?_Colour_decider,main@colour
  1451   0030BC  C04C  F1E9         	movff	?_Colour_decider+1,main@colour+1
  1452   0030C0                     
  1453                           ;main.c: 81:                 if (colour==prev_colour){
  1454   0030C0  0101               	movlb	1	; () banked
  1455   0030C2  51EA               	movf	main@prev_colour& (0+255),w,b
  1456   0030C4  19E8               	xorwf	main@colour& (0+255),w,b
  1457   0030C6  E107               	bnz	u5251
  1458   0030C8  51EB               	movf	(main@prev_colour+1)& (0+255),w,b
  1459   0030CA  19E9               	xorwf	(main@colour+1)& (0+255),w,b
  1460   0030CC  A4D8               	btfss	status,2,c
  1461   0030CE  EF6B  F018         	goto	u5251
  1462   0030D2  EF6D  F018         	goto	u5250
  1463   0030D6                     u5251:
  1464   0030D6  EF71  F018         	goto	l5152
  1465   0030DA                     u5250:
  1466   0030DA                     
  1467                           ; BSR set to: 1
  1468                           ;main.c: 82:                     consecuitive++;
  1469   0030DA  4BE6               	infsnz	main@consecuitive& (0+255),f,b
  1470   0030DC  2BE7               	incf	(main@consecuitive+1)& (0+255),f,b
  1471                           
  1472                           ;main.c: 83:                 }
  1473   0030DE  EF75  F018         	goto	l5154
  1474   0030E2                     l5152:
  1475                           
  1476                           ; BSR set to: 1
  1477                           ;main.c: 85:                     consecuitive=0;
  1478   0030E2  0E00               	movlw	0
  1479   0030E4  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1480   0030E6  0E00               	movlw	0
  1481   0030E8  6FE6               	movwf	main@consecuitive& (0+255),b
  1482   0030EA                     l5154:
  1483                           
  1484                           ; BSR set to: 1
  1485                           ;main.c: 87:                 prev_colour=colour;
  1486   0030EA  C1E8  F1EA         	movff	main@colour,main@prev_colour
  1487   0030EE  C1E9  F1EB         	movff	main@colour+1,main@prev_colour+1
  1488   0030F2                     
  1489                           ; BSR set to: 1
  1490                           ;main.c: 88:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1491   0030F2  0E05               	movlw	5
  1492   0030F4  0100               	movlb	0	; () banked
  1493   0030F6  6FD2               	movwf	(??_main+1)& (0+255),b
  1494   0030F8  0E0F               	movlw	15
  1495   0030FA  6FD1               	movwf	??_main& (0+255),b
  1496   0030FC  0EF1               	movlw	241
  1497   0030FE                     u5377:
  1498   0030FE  2EE8               	decfsz	wreg,f,c
  1499   003100  D7FE               	bra	u5377
  1500   003102  2FD1               	decfsz	??_main& (0+255),f,b
  1501   003104  D7FC               	bra	u5377
  1502   003106  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1503   003108  D7FA               	bra	u5377
  1504   00310A                     l5158:
  1505                           
  1506                           ;main.c: 79:             while (consecuitive<20){
  1507   00310A  0101               	movlb	1	; () banked
  1508   00310C  BFE7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1509   00310E  EF92  F018         	goto	u5261
  1510   003112  51E7               	movf	(main@consecuitive+1)& (0+255),w,b
  1511   003114  E109               	bnz	u5260
  1512   003116  0E14               	movlw	20
  1513   003118  5DE6               	subwf	main@consecuitive& (0+255),w,b
  1514   00311A  A0D8               	btfss	status,0,c
  1515   00311C  EF92  F018         	goto	u5261
  1516   003120  EF94  F018         	goto	u5260
  1517   003124                     u5261:
  1518   003124  EF52  F018         	goto	l5146
  1519   003128                     u5260:
  1520   003128                     
  1521                           ; BSR set to: 1
  1522                           ;main.c: 90:             consecuitive=0;
  1523   003128  0E00               	movlw	0
  1524   00312A  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1525   00312C  0E00               	movlw	0
  1526   00312E  6FE6               	movwf	main@consecuitive& (0+255),b
  1527   003130                     
  1528                           ; BSR set to: 1
  1529                           ;main.c: 92:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",re
      +                          l.R, rel.G,rel.B,vals.L, prev_colour);
  1530   003130  0E82               	movlw	low main@buf
  1531   003132  0100               	movlb	0	; () banked
  1532   003134  6FB0               	movwf	sprintf@s& (0+255),b
  1533   003136  0E01               	movlw	high main@buf
  1534   003138  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1535   00313A  0E01               	movlw	low STR_1
  1536   00313C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1537   00313E  0E0E               	movlw	high STR_1
  1538   003140  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1539   003142  C15C  F0B4         	movff	_rel,?_sprintf+4
  1540   003146  C15D  F0B5         	movff	_rel+1,?_sprintf+5
  1541   00314A  C15E  F0B6         	movff	_rel+2,?_sprintf+6
  1542   00314E  C15F  F0B7         	movff	_rel+3,?_sprintf+7
  1543   003152  C160  F0B8         	movff	_rel+4,?_sprintf+8
  1544   003156  C161  F0B9         	movff	_rel+5,?_sprintf+9
  1545   00315A  C162  F0BA         	movff	_rel+6,?_sprintf+10
  1546   00315E  C163  F0BB         	movff	_rel+7,?_sprintf+11
  1547   003162  C164  F0BC         	movff	_rel+8,?_sprintf+12
  1548   003166  C165  F0BD         	movff	_rel+9,?_sprintf+13
  1549   00316A  C166  F0BE         	movff	_rel+10,?_sprintf+14
  1550   00316E  C167  F0BF         	movff	_rel+11,?_sprintf+15
  1551   003172  C180  F0C0         	movff	_vals+6,?_sprintf+16
  1552   003176  C181  F0C1         	movff	_vals+7,?_sprintf+17
  1553   00317A  C1EA  F0C2         	movff	main@prev_colour,?_sprintf+18
  1554   00317E  C1EB  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1555   003182  EC79  F027         	call	_sprintf	;wreg free
  1556   003186                     
  1557                           ;main.c: 93:             sendStringSerial4(buf);
  1558   003186  0E82               	movlw	low main@buf
  1559   003188  6E02               	movwf	sendStringSerial4@string^0,c
  1560   00318A  0E01               	movlw	high main@buf
  1561   00318C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1562   00318E  EC5F  F02A         	call	_sendStringSerial4	;wreg free
  1563   003192                     
  1564                           ;main.c: 95:             if (prev_colour==1){
  1565   003192  0101               	movlb	1	; () banked
  1566   003194  05EA               	decf	main@prev_colour& (0+255),w,b
  1567   003196  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1568   003198  A4D8               	btfss	status,2,c
  1569   00319A  EFD1  F018         	goto	u5271
  1570   00319E  EFD3  F018         	goto	u5270
  1571   0031A2                     u5271:
  1572   0031A2  EFDF  F018         	goto	l5170
  1573   0031A6                     u5270:
  1574   0031A6                     
  1575                           ; BSR set to: 1
  1576                           ;main.c: 96:                 RedMove(&motorL, &motorR);
  1577   0031A6  0E71               	movlw	low _motorL
  1578   0031A8  6E1F               	movwf	RedMove@mL^0,c
  1579   0031AA  0E01               	movlw	high _motorL
  1580   0031AC  6E20               	movwf	(RedMove@mL+1)^0,c
  1581   0031AE  0E68               	movlw	low _motorR
  1582   0031B0  6E21               	movwf	RedMove@mR^0,c
  1583   0031B2  0E01               	movlw	high _motorR
  1584   0031B4  6E22               	movwf	(RedMove@mR+1)^0,c
  1585   0031B6  EC05  F02A         	call	_RedMove	;wreg free
  1586                           
  1587                           ;main.c: 97:             }
  1588   0031BA  EF1B  F018         	goto	l5136
  1589   0031BE                     l5170:
  1590                           
  1591                           ; BSR set to: 1
  1592   0031BE  0E02               	movlw	2
  1593   0031C0  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1594   0031C2  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1595   0031C4  A4D8               	btfss	status,2,c
  1596   0031C6  EFE7  F018         	goto	u5281
  1597   0031CA  EFE9  F018         	goto	u5280
  1598   0031CE                     u5281:
  1599   0031CE  EFF5  F018         	goto	l5174
  1600   0031D2                     u5280:
  1601   0031D2                     
  1602                           ; BSR set to: 1
  1603                           ;main.c: 99:                 OrangeMove(&motorL, &motorR);
  1604   0031D2  0E71               	movlw	low _motorL
  1605   0031D4  6E1F               	movwf	OrangeMove@mL^0,c
  1606   0031D6  0E01               	movlw	high _motorL
  1607   0031D8  6E20               	movwf	(OrangeMove@mL+1)^0,c
  1608   0031DA  0E68               	movlw	low _motorR
  1609   0031DC  6E21               	movwf	OrangeMove@mR^0,c
  1610   0031DE  0E01               	movlw	high _motorR
  1611   0031E0  6E22               	movwf	(OrangeMove@mR+1)^0,c
  1612   0031E2  EC1D  F028         	call	_OrangeMove	;wreg free
  1613                           
  1614                           ;main.c: 100:             }
  1615   0031E6  EF1B  F018         	goto	l5136
  1616   0031EA                     l5174:
  1617                           
  1618                           ; BSR set to: 1
  1619   0031EA  0E03               	movlw	3
  1620   0031EC  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1621   0031EE  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1622   0031F0  A4D8               	btfss	status,2,c
  1623   0031F2  EFFD  F018         	goto	u5291
  1624   0031F6  EFFF  F018         	goto	u5290
  1625   0031FA                     u5291:
  1626   0031FA  EF0B  F019         	goto	l5178
  1627   0031FE                     u5290:
  1628   0031FE                     
  1629                           ; BSR set to: 1
  1630                           ;main.c: 102:                 YellowMove(&motorL, &motorR);
  1631   0031FE  0E71               	movlw	low _motorL
  1632   003200  6E1F               	movwf	YellowMove@mL^0,c
  1633   003202  0E01               	movlw	high _motorL
  1634   003204  6E20               	movwf	(YellowMove@mL+1)^0,c
  1635   003206  0E68               	movlw	low _motorR
  1636   003208  6E21               	movwf	YellowMove@mR^0,c
  1637   00320A  0E01               	movlw	high _motorR
  1638   00320C  6E22               	movwf	(YellowMove@mR+1)^0,c
  1639   00320E  ECCB  F027         	call	_YellowMove	;wreg free
  1640                           
  1641                           ;main.c: 103:             }
  1642   003212  EF1B  F018         	goto	l5136
  1643   003216                     l5178:
  1644                           
  1645                           ; BSR set to: 1
  1646   003216  0E04               	movlw	4
  1647   003218  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1648   00321A  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1649   00321C  A4D8               	btfss	status,2,c
  1650   00321E  EF13  F019         	goto	u5301
  1651   003222  EF15  F019         	goto	u5300
  1652   003226                     u5301:
  1653   003226  EF21  F019         	goto	l5182
  1654   00322A                     u5300:
  1655   00322A                     
  1656                           ; BSR set to: 1
  1657                           ;main.c: 105:                 BlueMove(&motorL, &motorR);
  1658   00322A  0E71               	movlw	low _motorL
  1659   00322C  6E1F               	movwf	BlueMove@mL^0,c
  1660   00322E  0E01               	movlw	high _motorL
  1661   003230  6E20               	movwf	(BlueMove@mL+1)^0,c
  1662   003232  0E68               	movlw	low _motorR
  1663   003234  6E21               	movwf	BlueMove@mR^0,c
  1664   003236  0E01               	movlw	high _motorR
  1665   003238  6E22               	movwf	(BlueMove@mR+1)^0,c
  1666   00323A  EC3A  F026         	call	_BlueMove	;wreg free
  1667                           
  1668                           ;main.c: 106:             }
  1669   00323E  EF1B  F018         	goto	l5136
  1670   003242                     l5182:
  1671                           
  1672                           ; BSR set to: 1
  1673   003242  0E05               	movlw	5
  1674   003244  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1675   003246  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1676   003248  A4D8               	btfss	status,2,c
  1677   00324A  EF29  F019         	goto	u5311
  1678   00324E  EF2B  F019         	goto	u5310
  1679   003252                     u5311:
  1680   003252  EF37  F019         	goto	l5186
  1681   003256                     u5310:
  1682   003256                     
  1683                           ; BSR set to: 1
  1684                           ;main.c: 108:                 GreenMove(&motorL, &motorR);
  1685   003256  0E71               	movlw	low _motorL
  1686   003258  6E1F               	movwf	GreenMove@mL^0,c
  1687   00325A  0E01               	movlw	high _motorL
  1688   00325C  6E20               	movwf	(GreenMove@mL+1)^0,c
  1689   00325E  0E68               	movlw	low _motorR
  1690   003260  6E21               	movwf	GreenMove@mR^0,c
  1691   003262  0E01               	movlw	high _motorR
  1692   003264  6E22               	movwf	(GreenMove@mR+1)^0,c
  1693   003266  EC24  F02A         	call	_GreenMove	;wreg free
  1694                           
  1695                           ;main.c: 109:             }
  1696   00326A  EF1B  F018         	goto	l5136
  1697   00326E                     l5186:
  1698                           
  1699                           ; BSR set to: 1
  1700   00326E  0E06               	movlw	6
  1701   003270  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1702   003272  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1703   003274  A4D8               	btfss	status,2,c
  1704   003276  EF3F  F019         	goto	u5321
  1705   00327A  EF41  F019         	goto	u5320
  1706   00327E                     u5321:
  1707   00327E  EF4D  F019         	goto	l5190
  1708   003282                     u5320:
  1709   003282                     
  1710                           ; BSR set to: 1
  1711                           ;main.c: 111:                 LightBlueMove(&motorL, &motorR);
  1712   003282  0E71               	movlw	low _motorL
  1713   003284  6E1F               	movwf	LightBlueMove@mL^0,c
  1714   003286  0E01               	movlw	high _motorL
  1715   003288  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  1716   00328A  0E68               	movlw	low _motorR
  1717   00328C  6E21               	movwf	LightBlueMove@mR^0,c
  1718   00328E  0E01               	movlw	high _motorR
  1719   003290  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  1720   003292  EC46  F028         	call	_LightBlueMove	;wreg free
  1721                           
  1722                           ;main.c: 112:             }
  1723   003296  EF1B  F018         	goto	l5136
  1724   00329A                     l5190:
  1725                           
  1726                           ; BSR set to: 1
  1727   00329A  0E07               	movlw	7
  1728   00329C  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1729   00329E  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1730   0032A0  A4D8               	btfss	status,2,c
  1731   0032A2  EF55  F019         	goto	u5331
  1732   0032A6  EF57  F019         	goto	u5330
  1733   0032AA                     u5331:
  1734   0032AA  EF63  F019         	goto	l374
  1735   0032AE                     u5330:
  1736   0032AE                     
  1737                           ; BSR set to: 1
  1738                           ;main.c: 114:                 PinkMove(&motorL, &motorR);
  1739   0032AE  0E71               	movlw	low _motorL
  1740   0032B0  6E1F               	movwf	PinkMove@mL^0,c
  1741   0032B2  0E01               	movlw	high _motorL
  1742   0032B4  6E20               	movwf	(PinkMove@mL+1)^0,c
  1743   0032B6  0E68               	movlw	low _motorR
  1744   0032B8  6E21               	movwf	PinkMove@mR^0,c
  1745   0032BA  0E01               	movlw	high _motorR
  1746   0032BC  6E22               	movwf	(PinkMove@mR+1)^0,c
  1747   0032BE  ECF4  F027         	call	_PinkMove	;wreg free
  1748   0032C2  EF1B  F018         	goto	l5136
  1749   0032C6                     l374:
  1750                           
  1751                           ; BSR set to: 1
  1752   0032C6  EF1B  F018         	goto	l5136
  1753   0032CA                     l5194:
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;main.c: 121:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  1757   0032CA  0E82               	movlw	low main@buf
  1758   0032CC  0100               	movlb	0	; () banked
  1759   0032CE  6FB0               	movwf	sprintf@s& (0+255),b
  1760   0032D0  0E01               	movlw	high main@buf
  1761   0032D2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1762   0032D4  0E2E               	movlw	low STR_2
  1763   0032D6  6FB2               	movwf	sprintf@fmt& (0+255),b
  1764   0032D8  0E0E               	movlw	high STR_2
  1765   0032DA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1766   0032DC  C17A  F0B4         	movff	_vals,?_sprintf+4
  1767   0032E0  C17B  F0B5         	movff	_vals+1,?_sprintf+5
  1768   0032E4  C17C  F0B6         	movff	_vals+2,?_sprintf+6
  1769   0032E8  C17D  F0B7         	movff	_vals+3,?_sprintf+7
  1770   0032EC  C17E  F0B8         	movff	_vals+4,?_sprintf+8
  1771   0032F0  C17F  F0B9         	movff	_vals+5,?_sprintf+9
  1772   0032F4  C180  F0BA         	movff	_vals+6,?_sprintf+10
  1773   0032F8  C181  F0BB         	movff	_vals+7,?_sprintf+11
  1774   0032FC  EC79  F027         	call	_sprintf	;wreg free
  1775   003300                     
  1776                           ;main.c: 122:             sendStringSerial4(buf);
  1777   003300  0E82               	movlw	low main@buf
  1778   003302  6E02               	movwf	sendStringSerial4@string^0,c
  1779   003304  0E01               	movlw	high main@buf
  1780   003306  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1781   003308  EC5F  F02A         	call	_sendStringSerial4	;wreg free
  1782   00330C  EF1B  F018         	goto	l5136
  1783   003310  EF07  F000         	goto	start
  1784   003314                     __end_of_main:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _sprintf *****************
  1788 ;; Defined at:
  1789 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1792 ;;		 -> main@buf(100), 
  1793 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1794 ;;		 -> STR_2(34), STR_1(45), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  f              11  102[BANK0 ] struct _IO_FILE
  1797 ;;  ap              2  100[BANK0 ] PTR void [1]
  1798 ;;		 -> ?_sprintf(2), 
  1799 ;;  ret             2    0        int 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2   80[BANK0 ] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1809 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1812 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1813 ;;Total ram usage:       33 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 8
  1816 ;; This function calls:
  1817 ;;		_vfprintf
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text1
  1824   004EF2                     __ptext1:
  1825                           	callstack 0
  1826   004EF2                     _sprintf:
  1827                           	callstack 22
  1828   004EF2  0EB4               	movlw	low (?_sprintf+4)
  1829   004EF4  0100               	movlb	0	; () banked
  1830   004EF6  6FC4               	movwf	sprintf@ap& (0+255),b
  1831   004EF8  0E00               	movlw	high (?_sprintf+4)
  1832   004EFA  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  1833   004EFC  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  1834   004F00  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  1835   004F04                     
  1836                           ; BSR set to: 0
  1837   004F04  0E00               	movlw	0
  1838   004F06  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  1839   004F08  0E00               	movlw	0
  1840   004F0A  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  1841   004F0C                     
  1842                           ; BSR set to: 0
  1843   004F0C  0E00               	movlw	0
  1844   004F0E  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  1845   004F10  0E00               	movlw	0
  1846   004F12  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  1847   004F14                     
  1848                           ; BSR set to: 0
  1849   004F14  0EC6               	movlw	low sprintf@f
  1850   004F16  6FA8               	movwf	vfprintf@fp& (0+255),b
  1851   004F18  0E00               	movlw	high sprintf@f
  1852   004F1A  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  1853   004F1C  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1854   004F20  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1855   004F24  0EC4               	movlw	low sprintf@ap
  1856   004F26  6FAC               	movwf	vfprintf@ap& (0+255),b
  1857   004F28  0E00               	movlw	high sprintf@ap
  1858   004F2A  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  1859   004F2C  EC4E  F027         	call	_vfprintf	;wreg free
  1860   004F30  0100               	movlb	0	; () banked
  1861   004F32  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  1862   004F34  25B0               	addwf	sprintf@s& (0+255),w,b
  1863   004F36  6ED9               	movwf	fsr2l,c
  1864   004F38  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  1865   004F3A  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1866   004F3C  6EDA               	movwf	fsr2h,c
  1867   004F3E  0E00               	movlw	0
  1868   004F40  6EDF               	movwf	indf2,c
  1869   004F42                     
  1870                           ; BSR set to: 0
  1871   004F42  0012               	return		;funcret
  1872   004F44                     __end_of_sprintf:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _vfprintf *****************
  1876 ;; Defined at:
  1877 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  1880 ;;		 -> sprintf@f(11), 
  1881 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  1882 ;;		 -> STR_2(34), STR_1(45), 
  1883 ;;  ap              2   76[BANK0 ] PTR PTR void 
  1884 ;;		 -> sprintf@ap(2), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  1887 ;;		 -> STR_2(34), STR_1(45), 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  2   72[BANK0 ] int 
  1890 ;; Registers used:
  1891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;Total ram usage:        8 bytes
  1902 ;; Hardware stack levels used: 1
  1903 ;; Hardware stack levels required when called: 7
  1904 ;; This function calls:
  1905 ;;		_vfpfcnvrt
  1906 ;; This function is called by:
  1907 ;;		_sprintf
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text2
  1912   004E9C                     __ptext2:
  1913                           	callstack 0
  1914   004E9C                     _vfprintf:
  1915                           	callstack 22
  1916   004E9C                     
  1917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1918   004E9C  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  1919   004EA0  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1922   004EA4  EF63  F027         	goto	l4716
  1923   004EA8                     l4714:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1926   004EA8  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  1927   004EAC  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1928   004EB0  0EAE               	movlw	low vfprintf@cfmt
  1929   004EB2  0100               	movlb	0	; () banked
  1930   004EB4  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  1931   004EB6  0E00               	movlw	high vfprintf@cfmt
  1932   004EB8  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1933   004EBA  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  1934   004EBE  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1935   004EC2  EC21  F01B         	call	_vfpfcnvrt	;wreg free
  1936   004EC6                     l4716:
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1939   004EC6  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  1940   004ECA  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1941   004ECE                     	if	0	;tblptru may be non-zero
  1942   004ECE                     	endif
  1943   004ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1944   004ECE  0E00               	movlw	low (__mediumconst shr (0+16))
  1945   004ED0  6EF8               	movwf	tblptru,c
  1946   004ED2                     	endif
  1947   004ED2  0008               	tblrd		*
  1948   004ED4  50F5               	movf	tablat,w,c
  1949   004ED6  0900               	iorlw	0
  1950   004ED8  A4D8               	btfss	status,2,c
  1951   004EDA  EF71  F027         	goto	u4811
  1952   004EDE  EF73  F027         	goto	u4810
  1953   004EE2                     u4811:
  1954   004EE2  EF54  F027         	goto	l4714
  1955   004EE6                     u4810:
  1956   004EE6                     
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1958   004EE6  0E00               	movlw	0
  1959   004EE8  0100               	movlb	0	; () banked
  1960   004EEA  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  1961   004EEC  0E00               	movlw	0
  1962   004EEE  6FA8               	movwf	?_vfprintf& (0+255),b
  1963   004EF0                     
  1964                           ; BSR set to: 0
  1965   004EF0  0012               	return		;funcret
  1966   004EF2                     __end_of_vfprintf:
  1967                           	callstack 0
  1968                           
  1969 ;; *************** function _vfpfcnvrt *****************
  1970 ;; Defined at:
  1971 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  1974 ;;		 -> sprintf@f(11), 
  1975 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  1976 ;;		 -> vfprintf@cfmt(2), 
  1977 ;;  ap              2   57[BANK0 ] PTR PTR void 
  1978 ;;		 -> sprintf@ap(2), 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  convarg         8   61[BANK0 ] struct .
  1981 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  1982 ;;		 -> STR_2(34), STR_1(45), 
  1983 ;;  i               2    0        int 
  1984 ;;  done            2    0        int 
  1985 ;;  c               1   69[BANK0 ] unsigned char 
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1995 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1996 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;Total ram usage:       19 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 6
  2002 ;; This function calls:
  2003 ;;		_dtoa
  2004 ;;		_efgtoa
  2005 ;;		_fputc
  2006 ;; This function is called by:
  2007 ;;		_vfprintf
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text3
  2012   003642                     __ptext3:
  2013                           	callstack 0
  2014   003642                     _vfpfcnvrt:
  2015                           	callstack 22
  2016   003642                     
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2018   003642  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019   003646  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020   00364A  CFDE FFF6          	movff	postinc2,tblptrl
  2021   00364E  CFDD FFF7          	movff	postdec2,tblptrh
  2022   003652                     	if	0	;tblptru may be non-zero
  2023   003652                     	endif
  2024   003652                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2025   003652  0E00               	movlw	low (__mediumconst shr (0+16))
  2026   003654  6EF8               	movwf	tblptru,c
  2027   003656                     	endif
  2028   003656  0008               	tblrd		*
  2029   003658  50F5               	movf	tablat,w,c
  2030   00365A  0A25               	xorlw	37
  2031   00365C  A4D8               	btfss	status,2,c
  2032   00365E  EF33  F01B         	goto	u4661
  2033   003662  EF35  F01B         	goto	u4660
  2034   003666                     u4661:
  2035   003666  EF8D  F01C         	goto	l4576
  2036   00366A                     u4660:
  2037   00366A                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2039   00366A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2040   00366E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2041   003672  2ADE               	incf	postinc2,f,c
  2042   003674  0E00               	movlw	0
  2043   003676  22DD               	addwfc	postdec2,f,c
  2044   003678                     
  2045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2046   003678  0E00               	movlw	0
  2047   00367A  0100               	movlb	0	; () banked
  2048   00367C  6FF0               	movwf	(_width+1)& (0+255),b
  2049   00367E  0E00               	movlw	0
  2050   003680  6FEF               	movwf	_width& (0+255),b
  2051   003682  C0EF  F0F5         	movff	_width,_flags
  2052   003686                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2055   003686  69F1               	setf	_prec& (0+255),b
  2056   003688  69F2               	setf	(_prec+1)& (0+255),b
  2057   00368A                     
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2060   00368A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2061   00368E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2062   003692  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2063   003696  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2064   00369A                     
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2067   00369A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2068   00369E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2069   0036A2                     	if	0	;tblptru may be non-zero
  2070   0036A2                     	endif
  2071   0036A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2072   0036A2  0E00               	movlw	low (__mediumconst shr (0+16))
  2073   0036A4  6EF8               	movwf	tblptru,c
  2074   0036A6                     	endif
  2075   0036A6  0008               	tblrd		*
  2076   0036A8  50F5               	movf	tablat,w,c
  2077   0036AA  0A64               	xorlw	100
  2078   0036AC  B4D8               	btfsc	status,2,c
  2079   0036AE  EF5B  F01B         	goto	u4671
  2080   0036B2  EF5D  F01B         	goto	u4670
  2081   0036B6                     u4671:
  2082   0036B6  EF6D  F01B         	goto	l4532
  2083   0036BA                     u4670:
  2084   0036BA                     
  2085                           ; BSR set to: 0
  2086   0036BA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2087   0036BE  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2088   0036C2                     	if	0	;tblptru may be non-zero
  2089   0036C2                     	endif
  2090   0036C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2091   0036C2  0E00               	movlw	low (__mediumconst shr (0+16))
  2092   0036C4  6EF8               	movwf	tblptru,c
  2093   0036C6                     	endif
  2094   0036C6  0008               	tblrd		*
  2095   0036C8  50F5               	movf	tablat,w,c
  2096   0036CA  0A69               	xorlw	105
  2097   0036CC  A4D8               	btfss	status,2,c
  2098   0036CE  EF6B  F01B         	goto	u4681
  2099   0036D2  EF6D  F01B         	goto	u4680
  2100   0036D6                     u4681:
  2101   0036D6  EFB0  F01B         	goto	l4538
  2102   0036DA                     u4680:
  2103   0036DA                     l4532:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2107   0036DA  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2108   0036DE  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2109   0036E2  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2110   0036E6  0E02               	movlw	2
  2111   0036E8  26DE               	addwf	postinc2,f,c
  2112   0036EA  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2113   0036EE  0E00               	movlw	0
  2114   0036F0  22DD               	addwfc	postdec2,f,c
  2115   0036F2  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2116   0036F6  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2117   0036FA  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2118   0036FE  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2119   003702  0E00               	movlw	0
  2120   003704  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2121   003706  0EFF               	movlw	-1
  2122   003708  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2123   00370A  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2124   00370C  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2125   00370E  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2126   003710  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2127   003712  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2130   003714  0E01               	movlw	1
  2131   003716  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2132   003718  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2133   00371A  0E00               	movlw	0
  2134   00371C  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2135   00371E  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2136   003720  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2137   003724  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2138   003728  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2139   00372C  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2140   003730                     
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2143   003730  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2144   003734  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2145   003738  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2146   00373C  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2147   003740  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2148   003744  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2149   003748  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2150   00374C  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2151   003750  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2152   003754  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2153   003758  ECA4  F01C         	call	_dtoa	;wreg free
  2154   00375C  EFA3  F01C         	goto	l1305
  2155   003760                     l4538:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2159   003760  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2160   003764  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2161   003768  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2162   00376C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2163   003770                     
  2164                           ; BSR set to: 0
  2165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2166   003770  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2167   003774  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2168   003778                     	if	0	;tblptru may be non-zero
  2169   003778                     	endif
  2170   003778                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2171   003778  0E00               	movlw	low (__mediumconst shr (0+16))
  2172   00377A  6EF8               	movwf	tblptru,c
  2173   00377C                     	endif
  2174   00377C  0008               	tblrd		*
  2175   00377E  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2178   003782  EFCF  F01B         	goto	l4550
  2179   003786                     l4542:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2183   003786  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2184   003788  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2185                           
  2186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2187   00378A  EFE8  F01B         	goto	l4552
  2188   00378E                     l4544:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2192   00378E  0E6C               	movlw	108
  2193   003790  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2196   003792  EFE8  F01B         	goto	l4552
  2197   003796                     l4546:
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2201   003796  0E00               	movlw	0
  2202   003798  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2205   00379A  EFE8  F01B         	goto	l4552
  2206   00379E                     l4550:
  2207                           
  2208                           ; BSR set to: 0
  2209   00379E  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2210   0037A0  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2211   0037A2  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220   0037A4  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2221   0037A6  0A00               	xorlw	0	; case 0
  2222   0037A8  B4D8               	btfsc	status,2,c
  2223   0037AA  EFD9  F01B         	goto	l5298
  2224   0037AE  EFCB  F01B         	goto	l4546
  2225   0037B2                     l5298:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ; Switch size 1, requested type "simple"
  2229                           ; Number of cases is 3, Range of values is 76 to 108
  2230                           ; switch strategies available:
  2231                           ; Name         Instructions Cycles
  2232                           ; simple_byte           10     6 (average)
  2233                           ;	Chosen strategy is simple_byte
  2234   0037B2  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2235   0037B4  0A4C               	xorlw	76	; case 76
  2236   0037B6  B4D8               	btfsc	status,2,c
  2237   0037B8  EFC3  F01B         	goto	l4542
  2238   0037BC  0A2A               	xorlw	42	; case 102
  2239   0037BE  B4D8               	btfsc	status,2,c
  2240   0037C0  EFC7  F01B         	goto	l4544
  2241   0037C4  0A0A               	xorlw	10	; case 108
  2242   0037C6  B4D8               	btfsc	status,2,c
  2243   0037C8  EFC3  F01B         	goto	l4542
  2244   0037CC  EFCB  F01B         	goto	l4546
  2245   0037D0                     l4552:
  2246                           
  2247                           ; BSR set to: 0
  2248   0037D0  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2249   0037D4  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2250   0037D8                     	if	0	;tblptru may be non-zero
  2251   0037D8                     	endif
  2252   0037D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2253   0037D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2254   0037DA  6EF8               	movwf	tblptru,c
  2255   0037DC                     	endif
  2256   0037DC  0008               	tblrd		*
  2257   0037DE  50F5               	movf	tablat,w,c
  2258   0037E0  0A66               	xorlw	102
  2259   0037E2  A4D8               	btfss	status,2,c
  2260   0037E4  EFF6  F01B         	goto	u4691
  2261   0037E8  EFF8  F01B         	goto	u4690
  2262   0037EC                     u4691:
  2263   0037EC  EF84  F01C         	goto	l4572
  2264   0037F0                     u4690:
  2265   0037F0  EF2E  F01C         	goto	l4560
  2266   0037F4                     l4554:
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2270   0037F4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2271   0037F8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2272   0037FC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2273   003800  0E04               	movlw	4
  2274   003802  26DE               	addwf	postinc2,f,c
  2275   003804  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2276   003808  0E00               	movlw	0
  2277   00380A  22DD               	addwfc	postdec2,f,c
  2278   00380C  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2279   003810  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2280   003814  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2281   003818  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2282   00381C  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2283   003820  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2286   003824  EF43  F01C         	goto	l4562
  2287   003828                     l4556:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2291   003828  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2292   00382C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2293   003830  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2294   003834  0E04               	movlw	4
  2295   003836  26DE               	addwf	postinc2,f,c
  2296   003838  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2297   00383C  0E00               	movlw	0
  2298   00383E  22DD               	addwfc	postdec2,f,c
  2299   003840  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2300   003844  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2301   003848  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2302   00384C  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2303   003850  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2304   003854  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2307   003858  EF43  F01C         	goto	l4562
  2308   00385C                     l4560:
  2309                           
  2310                           ; BSR set to: 0
  2311   00385C  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2312   00385E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2313   003860  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2314                           
  2315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 1, Range of values is 0 to 0
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            4     3 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322   003862  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2323   003864  0A00               	xorlw	0	; case 0
  2324   003866  B4D8               	btfsc	status,2,c
  2325   003868  EF38  F01C         	goto	l5300
  2326   00386C  EF43  F01C         	goto	l4562
  2327   003870                     l5300:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ; Switch size 1, requested type "simple"
  2331                           ; Number of cases is 2, Range of values is 76 to 108
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte            7     4 (average)
  2335                           ;	Chosen strategy is simple_byte
  2336   003870  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2337   003872  0A4C               	xorlw	76	; case 76
  2338   003874  B4D8               	btfsc	status,2,c
  2339   003876  EF14  F01C         	goto	l4556
  2340   00387A  0A20               	xorlw	32	; case 108
  2341   00387C  B4D8               	btfsc	status,2,c
  2342   00387E  EFFA  F01B         	goto	l4554
  2343   003882  EF43  F01C         	goto	l4562
  2344   003886                     l4562:
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2348   003886  0E01               	movlw	1
  2349   003888  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2350   00388A  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2351   00388C  0E00               	movlw	0
  2352   00388E  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2353   003890  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2354   003892  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2355   003896  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2356   00389A  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2357   00389E  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2360   0038A2  EF6C  F01C         	goto	l4570
  2361   0038A6                     l4564:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2365   0038A6  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2366   0038AA  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2367   0038AE  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2368   0038B2  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2369   0038B6  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2370   0038BA  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2371   0038BE  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2372   0038C2  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2373   0038C6                     	if	0	;tblptru may be non-zero
  2374   0038C6                     	endif
  2375   0038C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2376   0038C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2377   0038C8  6EF8               	movwf	tblptru,c
  2378   0038CA                     	endif
  2379   0038CA  0008               	tblrd		*
  2380   0038CC  CFF5 F066          	movff	tablat,efgtoa@c
  2381   0038D0  EC9B  F00C         	call	_efgtoa	;wreg free
  2382   0038D4  EFA3  F01C         	goto	l1305
  2383   0038D8                     l4570:
  2384                           
  2385                           ; BSR set to: 0
  2386   0038D8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2387   0038DC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2388   0038E0                     	if	0	;tblptru may be non-zero
  2389   0038E0                     	endif
  2390   0038E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2391   0038E0  0E00               	movlw	low (__mediumconst shr (0+16))
  2392   0038E2  6EF8               	movwf	tblptru,c
  2393   0038E4                     	endif
  2394   0038E4  0008               	tblrd		*
  2395   0038E6  50F5               	movf	tablat,w,c
  2396   0038E8  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2397   0038EA  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2398                           
  2399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2400                           ; Switch size 1, requested type "simple"
  2401                           ; Number of cases is 1, Range of values is 0 to 0
  2402                           ; switch strategies available:
  2403                           ; Name         Instructions Cycles
  2404                           ; simple_byte            4     3 (average)
  2405                           ;	Chosen strategy is simple_byte
  2406   0038EC  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2407   0038EE  0A00               	xorlw	0	; case 0
  2408   0038F0  B4D8               	btfsc	status,2,c
  2409   0038F2  EF7D  F01C         	goto	l5302
  2410   0038F6  EF84  F01C         	goto	l4572
  2411   0038FA                     l5302:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 1, Range of values is 102 to 102
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte            4     3 (average)
  2419                           ;	Chosen strategy is simple_byte
  2420   0038FA  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2421   0038FC  0A66               	xorlw	102	; case 102
  2422   0038FE  B4D8               	btfsc	status,2,c
  2423   003900  EF53  F01C         	goto	l4564
  2424   003904  EF84  F01C         	goto	l4572
  2425   003908                     l4572:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2428   003908  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2429   00390C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2430   003910  2ADE               	incf	postinc2,f,c
  2431   003912  0E00               	movlw	0
  2432   003914  22DD               	addwfc	postdec2,f,c
  2433   003916  EFA3  F01C         	goto	l1305
  2434   00391A                     l4576:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2437   00391A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438   00391E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439   003922  CFDE FFF6          	movff	postinc2,tblptrl
  2440   003926  CFDD FFF7          	movff	postdec2,tblptrh
  2441   00392A                     	if	0	;tblptru may be non-zero
  2442   00392A                     	endif
  2443   00392A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2444   00392A  0E00               	movlw	low (__mediumconst shr (0+16))
  2445   00392C  6EF8               	movwf	tblptru,c
  2446   00392E                     	endif
  2447   00392E  0008               	tblrd		*
  2448   003930  50F5               	movf	tablat,w,c
  2449   003932  6E01               	movwf	fputc@c^0,c
  2450   003934  6A02               	clrf	(fputc@c+1)^0,c
  2451   003936  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2452   00393A  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2453   00393E  EC76  F023         	call	_fputc	;wreg free
  2454   003942  EF84  F01C         	goto	l4572
  2455   003946                     l1305:
  2456   003946  0012               	return		;funcret
  2457   003948                     __end_of_vfpfcnvrt:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _efgtoa *****************
  2461 ;; Defined at:
  2462 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2465 ;;		 -> sprintf@f(11), 
  2466 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2467 ;;  c               1    6[BANK0 ] unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  u               4   49[BANK0 ] struct flui
  2470 ;;  g               4   45[BANK0 ] struct flui
  2471 ;;  l               4   38[BANK0 ] struct flui
  2472 ;;  h               4   34[BANK0 ] struct flui
  2473 ;;  ou              4   28[BANK0 ] struct flui
  2474 ;;  n               2   43[BANK0 ] int 
  2475 ;;  i               2   32[BANK0 ] int 
  2476 ;;  w               2   26[BANK0 ] int 
  2477 ;;  e               2   24[BANK0 ] int 
  2478 ;;  m               2   22[BANK0 ] int 
  2479 ;;  d               2   20[BANK0 ] int 
  2480 ;;  t               2   13[BANK0 ] int 
  2481 ;;  p               2   11[BANK0 ] int 
  2482 ;;  ne              2    9[BANK0 ] int 
  2483 ;;  sign            1   42[BANK0 ] unsigned char 
  2484 ;;  nmode           1   19[BANK0 ] unsigned char 
  2485 ;;  mode            1   18[BANK0 ] unsigned char 
  2486 ;;  pp              1   17[BANK0 ] unsigned char 
  2487 ;;  esign           1    0        unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2497 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;Total ram usage:       53 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 5
  2504 ;; This function calls:
  2505 ;;		___fladd
  2506 ;;		___fldiv
  2507 ;;		___fleq
  2508 ;;		___flge
  2509 ;;		___flmul
  2510 ;;		___flneg
  2511 ;;		___flsub
  2512 ;;		___fltol
  2513 ;;		___fpclassifyf
  2514 ;;		_floorf
  2515 ;;		_labs
  2516 ;;		_memcpy
  2517 ;;		_pad
  2518 ;;		_strcpy
  2519 ;; This function is called by:
  2520 ;;		_vfpfcnvrt
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text4
  2525   001936                     __ptext4:
  2526                           	callstack 0
  2527   001936                     _efgtoa:
  2528                           	callstack 22
  2529   001936                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2531   001936  0E00               	movlw	0
  2532   001938  0100               	movlb	0	; () banked
  2533   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2534   00193C                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2537   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2538   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2539   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2540   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2541   00194C                     
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2544   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2545   00194E  EFAD  F00C         	goto	u4240
  2546   001952  EFAB  F00C         	goto	u4241
  2547   001956                     u4241:
  2548   001956  EFC1  F00C         	goto	l4220
  2549   00195A                     u4240:
  2550   00195A                     
  2551                           ; BSR set to: 0
  2552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2553   00195A  0E01               	movlw	1
  2554   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2555   00195E                     
  2556                           ; BSR set to: 0
  2557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2558   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2559   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2560   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2561   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2562   00196E  EC43  F02A         	call	___flneg	;wreg free
  2563   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2564   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2565   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2566   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2567   001982                     l4220:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2570   001982  0E00               	movlw	0
  2571   001984  0100               	movlb	0	; () banked
  2572   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2573   001988  0E00               	movlw	0
  2574   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2575   00198C                     
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2578   00198C  C0EF  F07A         	movff	_width,efgtoa@w
  2579   001990  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  2580   001994                     
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2583   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2584   001996  B4D8               	btfsc	status,2,c
  2585   001998  EFD0  F00C         	goto	u4251
  2586   00199C  EFD2  F00C         	goto	u4250
  2587   0019A0                     u4251:
  2588   0019A0  EFE6  F00C         	goto	l4234
  2589   0019A4                     u4250:
  2590   0019A4                     
  2591                           ; BSR set to: 0
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2593   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2594   0019A6  A4D8               	btfss	status,2,c
  2595   0019A8  EFD8  F00C         	goto	u4261
  2596   0019AC  EFDA  F00C         	goto	u4260
  2597   0019B0                     u4261:
  2598   0019B0  EFE0  F00C         	goto	l4230
  2599   0019B4                     u4260:
  2600   0019B4                     
  2601                           ; BSR set to: 0
  2602   0019B4  0E00               	movlw	0
  2603   0019B6  6F70               	movwf	(_efgtoa$2278+1)& (0+255),b
  2604   0019B8  0E2B               	movlw	43
  2605   0019BA  6F6F               	movwf	_efgtoa$2278& (0+255),b
  2606   0019BC  EFE4  F00C         	goto	l4232
  2607   0019C0                     l4230:
  2608                           
  2609                           ; BSR set to: 0
  2610   0019C0  0E00               	movlw	0
  2611   0019C2  6F70               	movwf	(_efgtoa$2278+1)& (0+255),b
  2612   0019C4  0E2D               	movlw	45
  2613   0019C6  6F6F               	movwf	_efgtoa$2278& (0+255),b
  2614   0019C8                     l4232:
  2615                           
  2616                           ; BSR set to: 0
  2617   0019C8  C06F  F08A         	movff	_efgtoa$2278,efgtoa@sign
  2618   0019CC                     l4234:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2622   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2623   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2624   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2625   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2626   0019DC  ECF7  F022         	call	___fpclassifyf	;wreg free
  2627   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  2628   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2629   0019E4  A4D8               	btfss	status,2,c
  2630   0019E6  EFF7  F00C         	goto	u4271
  2631   0019EA  EFF9  F00C         	goto	u4270
  2632   0019EE                     u4271:
  2633   0019EE  EF2C  F00D         	goto	l4252
  2634   0019F2                     u4270:
  2635   0019F2                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2637   0019F2  0100               	movlb	0	; () banked
  2638   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  2639   0019F6  B4D8               	btfsc	status,2,c
  2640   0019F8  EF00  F00D         	goto	u4281
  2641   0019FC  EF02  F00D         	goto	u4280
  2642   001A00                     u4281:
  2643   001A00  EF0B  F00D         	goto	l4244
  2644   001A04                     u4280:
  2645   001A04                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2648   001A04  C08A  F10C         	movff	efgtoa@sign,_dbuf
  2649   001A08                     
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2652   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  2653   001A0A  A0D8               	btfss	status,0,c
  2654   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  2655   001A0E                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2658   001A0E  0E00               	movlw	0
  2659   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2660   001A12  0E01               	movlw	1
  2661   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  2662   001A16                     l4244:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2666   001A16  0E0C               	movlw	low _dbuf
  2667   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  2668   001A1A  6E01               	movwf	strcpy@dest^0,c
  2669   001A1C  0E01               	movlw	high _dbuf
  2670   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2671   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  2672   001A22  0E50               	movlw	low STR_3
  2673   001A24  6E03               	movwf	strcpy@src^0,c
  2674   001A26  0E0E               	movlw	high STR_3
  2675   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  2676   001A2A  EC80  F029         	call	_strcpy	;wreg free
  2677   001A2E                     l4246:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2680   001A2E  0100               	movlb	0	; () banked
  2681   001A30  0EFD               	movlw	253
  2682   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  2683   001A34  0EFF               	movlw	255
  2684   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2685   001A38                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2688   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  2689   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  2690   001A40  0E0C               	movlw	low _dbuf
  2691   001A42  6E13               	movwf	pad@buf^0,c
  2692   001A44  0E01               	movlw	high _dbuf
  2693   001A46  6E14               	movwf	(pad@buf+1)^0,c
  2694   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  2695   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  2696   001A50  EC55  F025         	call	_pad	;wreg free
  2697   001A54  EF97  F011         	goto	l1257
  2698   001A58                     l4252:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2701   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2702   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2703   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2704   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2705   001A68  ECF7  F022         	call	___fpclassifyf	;wreg free
  2706   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  2707   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2708   001A70  A4D8               	btfss	status,2,c
  2709   001A72  EF3D  F00D         	goto	u4291
  2710   001A76  EF3F  F00D         	goto	u4290
  2711   001A7A                     u4291:
  2712   001A7A  EF5F  F00D         	goto	l4270
  2713   001A7E                     u4290:
  2714   001A7E                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2716   001A7E  0100               	movlb	0	; () banked
  2717   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  2718   001A82  B4D8               	btfsc	status,2,c
  2719   001A84  EF46  F00D         	goto	u4301
  2720   001A88  EF48  F00D         	goto	u4300
  2721   001A8C                     u4301:
  2722   001A8C  EF51  F00D         	goto	l4262
  2723   001A90                     u4300:
  2724   001A90                     
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2727   001A90  C08A  F10C         	movff	efgtoa@sign,_dbuf
  2728   001A94                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2731   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  2732   001A96  A0D8               	btfss	status,0,c
  2733   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  2734   001A9A                     
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2737   001A9A  0E00               	movlw	0
  2738   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2739   001A9E  0E01               	movlw	1
  2740   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  2741   001AA2                     l4262:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2745   001AA2  0E0C               	movlw	low _dbuf
  2746   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  2747   001AA6  6E01               	movwf	strcpy@dest^0,c
  2748   001AA8  0E01               	movlw	high _dbuf
  2749   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2750   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  2751   001AAE  0E54               	movlw	low STR_6
  2752   001AB0  6E03               	movwf	strcpy@src^0,c
  2753   001AB2  0E0E               	movlw	high STR_6
  2754   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  2755   001AB6  EC80  F029         	call	_strcpy	;wreg free
  2756   001ABA  EF17  F00D         	goto	l4246
  2757   001ABE                     l4270:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2760   001ABE  0E00               	movlw	0
  2761   001AC0  0100               	movlb	0	; () banked
  2762   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  2763   001AC4  0E00               	movlw	0
  2764   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  2765   001AC8  0E80               	movlw	128
  2766   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  2767   001ACC  0E3F               	movlw	63
  2768   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2771   001AD0  0E00               	movlw	0
  2772   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  2773   001AD4  0E00               	movlw	0
  2774   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  2775   001AD8                     
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2778   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  2779   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  2780   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  2781   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  2782   001AE8  0E00               	movlw	0
  2783   001AEA  6E36               	movwf	___fleq@ff2^0,c
  2784   001AEC  0E00               	movlw	0
  2785   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  2786   001AF0  0E00               	movlw	0
  2787   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  2788   001AF4  0E00               	movlw	0
  2789   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  2790   001AF8  ECDB  F023         	call	___fleq	;wreg free
  2791   001AFC  B0D8               	btfsc	status,0,c
  2792   001AFE  EF83  F00D         	goto	u4311
  2793   001B02  EF85  F00D         	goto	u4310
  2794   001B06                     u4311:
  2795   001B06  EF64  F00E         	goto	l1260
  2796   001B0A                     u4310:
  2797   001B0A  EF92  F00D         	goto	l4278
  2798   001B0E                     l1262:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2801   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  2802   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  2803   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  2804   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  2805   001B1E                     
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2807   001B1E  0100               	movlb	0	; () banked
  2808   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  2809   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  2810   001B24                     l4278:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2813   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  2814   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  2815   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  2816   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  2817   001B34  0E00               	movlw	0
  2818   001B36  6E15               	movwf	___flmul@a^0,c
  2819   001B38  0E00               	movlw	0
  2820   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  2821   001B3C  0E20               	movlw	32
  2822   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  2823   001B40  0E41               	movlw	65
  2824   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  2825   001B44  ECF8  F013         	call	___flmul	;wreg free
  2826   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  2827   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  2828   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  2829   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  2830   001B58  0100               	movlb	0	; () banked
  2831   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  2832   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  2833   001B5E  6E01               	movwf	labs@a^0,c
  2834   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  2835   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2836   001B64  6E02               	movwf	(labs@a+1)^0,c
  2837   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  2838   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2839   001B6A  6E03               	movwf	(labs@a+2)^0,c
  2840   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  2841   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2842   001B70  6E04               	movwf	(labs@a+3)^0,c
  2843   001B72  EC07  F026         	call	_labs	;wreg free
  2844   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  2845   001B78  EFC9  F00D         	goto	u4321
  2846   001B7C  5004               	movf	(?_labs+3)^0,w,c
  2847   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  2848   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  2849   001B82  E109               	bnz	u4320
  2850   001B84  0E02               	movlw	2
  2851   001B86  5C01               	subwf	?_labs^0,w,c
  2852   001B88  A0D8               	btfss	status,0,c
  2853   001B8A  EFC9  F00D         	goto	u4321
  2854   001B8E  EFCB  F00D         	goto	u4320
  2855   001B92                     u4321:
  2856   001B92  EF87  F00D         	goto	l1262
  2857   001B96                     u4320:
  2858   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  2859   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  2860   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  2861   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  2862   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  2863   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  2864   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  2865   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  2866   001BB6  EC75  F022         	call	___flge	;wreg free
  2867   001BBA  A0D8               	btfss	status,0,c
  2868   001BBC  EFE2  F00D         	goto	u4331
  2869   001BC0  EFE4  F00D         	goto	u4330
  2870   001BC4                     u4331:
  2871   001BC4  EF87  F00D         	goto	l1262
  2872   001BC8                     u4330:
  2873   001BC8                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2875   001BC8  0100               	movlb	0	; () banked
  2876   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  2877   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  2878   001BCE  6E01               	movwf	labs@a^0,c
  2879   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  2880   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2881   001BD4  6E02               	movwf	(labs@a+1)^0,c
  2882   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  2883   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2884   001BDA  6E03               	movwf	(labs@a+2)^0,c
  2885   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  2886   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2887   001BE0  6E04               	movwf	(labs@a+3)^0,c
  2888   001BE2  EC07  F026         	call	_labs	;wreg free
  2889   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  2890   001BE8  EF03  F00E         	goto	u4340
  2891   001BEC  5004               	movf	(?_labs+3)^0,w,c
  2892   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  2893   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  2894   001BF2  E107               	bnz	u4341
  2895   001BF4  0E02               	movlw	2
  2896   001BF6  5C01               	subwf	?_labs^0,w,c
  2897   001BF8  B0D8               	btfsc	status,0,c
  2898   001BFA  EF01  F00E         	goto	u4341
  2899   001BFE  EF03  F00E         	goto	u4340
  2900   001C02                     u4341:
  2901   001C02  EF4B  F00E         	goto	l4296
  2902   001C06                     u4340:
  2903   001C06                     l4286:
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2906   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  2907   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  2908   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  2909   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2912   001C16  EF64  F00E         	goto	l1260
  2913   001C1A                     l4288:
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2916   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  2917   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  2918   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  2919   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  2920   001C2A  0E00               	movlw	0
  2921   001C2C  6E36               	movwf	___fldiv@a^0,c
  2922   001C2E  0E00               	movlw	0
  2923   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  2924   001C32  0E20               	movlw	32
  2925   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  2926   001C36  0E41               	movlw	65
  2927   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  2928   001C3A  EC0D  F016         	call	___fldiv	;wreg free
  2929   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  2930   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  2931   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  2932   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  2933   001C4E                     
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2935   001C4E  0100               	movlb	0	; () banked
  2936   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  2937   001C52  A0D8               	btfss	status,0,c
  2938   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  2939   001C56                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2942   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  2943   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  2944   001C5A  6E01               	movwf	labs@a^0,c
  2945   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  2946   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2947   001C60  6E02               	movwf	(labs@a+1)^0,c
  2948   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  2949   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2950   001C66  6E03               	movwf	(labs@a+2)^0,c
  2951   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  2952   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2953   001C6C  6E04               	movwf	(labs@a+3)^0,c
  2954   001C6E  EC07  F026         	call	_labs	;wreg free
  2955   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  2956   001C74  EF49  F00E         	goto	u4350
  2957   001C78  5004               	movf	(?_labs+3)^0,w,c
  2958   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  2959   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  2960   001C7E  E107               	bnz	u4351
  2961   001C80  0E02               	movlw	2
  2962   001C82  5C01               	subwf	?_labs^0,w,c
  2963   001C84  B0D8               	btfsc	status,0,c
  2964   001C86  EF47  F00E         	goto	u4351
  2965   001C8A  EF49  F00E         	goto	u4350
  2966   001C8E                     u4351:
  2967   001C8E  EF4B  F00E         	goto	l4296
  2968   001C92                     u4350:
  2969   001C92  EF03  F00E         	goto	l4286
  2970   001C96                     l4296:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2973   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  2974   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  2975   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  2976   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  2977   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  2978   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  2979   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  2980   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  2981   001CB6  EC75  F022         	call	___flge	;wreg free
  2982   001CBA  A0D8               	btfss	status,0,c
  2983   001CBC  EF62  F00E         	goto	u4361
  2984   001CC0  EF64  F00E         	goto	u4360
  2985   001CC4                     u4361:
  2986   001CC4  EF0D  F00E         	goto	l4288
  2987   001CC8                     u4360:
  2988   001CC8                     l1260:
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2991   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2994   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  2995   001CD0                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2997   001CD0  0100               	movlb	0	; () banked
  2998   001CD2  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  2999   001CD4  EF6E  F00E         	goto	u4371
  3000   001CD8  EF70  F00E         	goto	u4370
  3001   001CDC                     u4371:
  3002   001CDC  EF76  F00E         	goto	l4302
  3003   001CE0                     u4370:
  3004   001CE0                     
  3005                           ; BSR set to: 0
  3006   001CE0  C0F1  F06B         	movff	_prec,efgtoa@p
  3007   001CE4  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3008   001CE8  EF7A  F00E         	goto	l4304
  3009   001CEC                     l4302:
  3010                           
  3011                           ; BSR set to: 0
  3012   001CEC  0E00               	movlw	0
  3013   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3014   001CF0  0E06               	movlw	6
  3015   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3016   001CF4                     l4304:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3020   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3021   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3022   001CFC                     
  3023                           ; BSR set to: 0
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3025   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3026   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3027   001D00                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3030   001D00  0E66               	movlw	102
  3031   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3032   001D04  A4D8               	btfss	status,2,c
  3033   001D06  EF87  F00E         	goto	u4381
  3034   001D0A  EF89  F00E         	goto	u4380
  3035   001D0E                     u4381:
  3036   001D0E  EFA9  F00E         	goto	l4318
  3037   001D12                     u4380:
  3038   001D12                     
  3039                           ; BSR set to: 0
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3041   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3042   001D14  EF90  F00E         	goto	u4390
  3043   001D18  EF8E  F00E         	goto	u4391
  3044   001D1C                     u4391:
  3045   001D1C  EF9C  F00E         	goto	l4314
  3046   001D20                     u4390:
  3047   001D20                     
  3048                           ; BSR set to: 0
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3050   001D20  0E00               	movlw	0
  3051   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3052   001D24  0E00               	movlw	0
  3053   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3054   001D28  0E80               	movlw	128
  3055   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3056   001D2C  0E3F               	movlw	63
  3057   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3060   001D30  0E00               	movlw	0
  3061   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3062   001D34  0E00               	movlw	0
  3063   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3064   001D38                     l4314:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3068   001D38  0E67               	movlw	103
  3069   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3070   001D3C  B4D8               	btfsc	status,2,c
  3071   001D3E  EFA3  F00E         	goto	u4401
  3072   001D42  EFA5  F00E         	goto	u4400
  3073   001D46                     u4401:
  3074   001D46  EFA9  F00E         	goto	l4318
  3075   001D4A                     u4400:
  3076   001D4A                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3079   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3080   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3081   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3082   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3083   001D52                     l4318:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3087   001D52  0E00               	movlw	0
  3088   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3089   001D56  0E00               	movlw	0
  3090   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3091   001D5A                     
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3094   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3095   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3096   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3097   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3098   001D6A                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3101   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3102   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3103   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3104   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3107   001D7A  EF3A  F00F         	goto	l4332
  3108   001D7E                     l4324:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3112   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3113   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3114   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3115   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3116   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3117   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3118   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3119   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3120   001D9E  EC0D  F016         	call	___fldiv	;wreg free
  3121   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3122   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3123   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3124   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3125   001DB2  ECE3  F01D         	call	_floorf	;wreg free
  3126   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3127   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3128   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3129   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3132   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3133   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3134   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3135   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3136   001DD6  ECF2  F021         	call	___fltol	;wreg free
  3137   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3138   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3139   001DE2                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3141   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3142   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3143   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3144   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3145   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3146   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3147   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3148   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3149   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3150   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3151   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3152   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3153   001E12  ECF8  F013         	call	___flmul	;wreg free
  3154   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3155   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3156   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3157   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3158   001E26  EC5D  F029         	call	___flsub	;wreg free
  3159   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3160   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3161   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3162   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3163   001E3A                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3165   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3166   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3167   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3168   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3169   001E4A  0E00               	movlw	0
  3170   001E4C  6E36               	movwf	___fldiv@a^0,c
  3171   001E4E  0E00               	movlw	0
  3172   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3173   001E52  0E20               	movlw	32
  3174   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3175   001E56  0E41               	movlw	65
  3176   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3177   001E5A  EC0D  F016         	call	___fldiv	;wreg free
  3178   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3179   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3180   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3181   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3182   001E6E                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3184   001E6E  0100               	movlb	0	; () banked
  3185   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3186   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3187   001E74                     l4332:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3191   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3192   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3193   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3194   001E7A  0A80               	xorlw	128
  3195   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3196   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3197   001E80  0A80               	xorlw	128
  3198   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3199   001E84  A0D8               	btfss	status,0,c
  3200   001E86  EF47  F00F         	goto	u4411
  3201   001E8A  EF49  F00F         	goto	u4410
  3202   001E8E                     u4411:
  3203   001E8E  EFBF  F00E         	goto	l4324
  3204   001E92                     u4410:
  3205   001E92                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3208   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3209   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3210   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3211   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3212   001EA2  0E00               	movlw	0
  3213   001EA4  6E15               	movwf	___flmul@a^0,c
  3214   001EA6  0E00               	movlw	0
  3215   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3216   001EAA  0EA0               	movlw	160
  3217   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3218   001EAE  0E40               	movlw	64
  3219   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3220   001EB2  ECF8  F013         	call	___flmul	;wreg free
  3221   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3222   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3223   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3224   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3225   001EC6                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3227   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3228   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3229   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3230   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3231   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3232   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3233   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3234   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3235   001EE6  EC75  F022         	call	___flge	;wreg free
  3236   001EEA  B0D8               	btfsc	status,0,c
  3237   001EEC  EF7A  F00F         	goto	u4421
  3238   001EF0  EF7C  F00F         	goto	u4420
  3239   001EF4                     u4421:
  3240   001EF4  EF87  F00F         	goto	l4340
  3241   001EF8                     u4420:
  3242   001EF8                     
  3243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3244   001EF8  0E00               	movlw	0
  3245   001EFA  0100               	movlb	0	; () banked
  3246   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3247   001EFE  0E00               	movlw	0
  3248   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3249   001F02  0E00               	movlw	0
  3250   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3251   001F06  0E00               	movlw	0
  3252   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3255   001F0A  EFB0  F00F         	goto	l4346
  3256   001F0E                     l4340:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3259   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3260   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3261   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3262   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3263   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3264   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3265   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3266   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3267   001F2E  ECDB  F023         	call	___fleq	;wreg free
  3268   001F32  A0D8               	btfss	status,0,c
  3269   001F34  EF9E  F00F         	goto	u4431
  3270   001F38  EFA0  F00F         	goto	u4430
  3271   001F3C                     u4431:
  3272   001F3C  EFB0  F00F         	goto	l4346
  3273   001F40                     u4430:
  3274   001F40  0100               	movlb	0	; () banked
  3275   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3276   001F44  EFA6  F00F         	goto	u4441
  3277   001F48  EFA8  F00F         	goto	u4440
  3278   001F4C                     u4441:
  3279   001F4C  EFB0  F00F         	goto	l4346
  3280   001F50                     u4440:
  3281   001F50                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3284   001F50  0E00               	movlw	0
  3285   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3286   001F54  0E00               	movlw	0
  3287   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3288   001F58  0E00               	movlw	0
  3289   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3290   001F5C  0E00               	movlw	0
  3291   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3292   001F60                     l4346:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3295   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3296   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3297   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3298   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3299   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3300   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3301   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3302   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3303   001F80  EC98  F011         	call	___fladd	;wreg free
  3304   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3305   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3306   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3307   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3308   001F94                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3310   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3311   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3312   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3313   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3314   001FA4  0E00               	movlw	0
  3315   001FA6  6E15               	movwf	___flmul@a^0,c
  3316   001FA8  0E00               	movlw	0
  3317   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3318   001FAC  0E20               	movlw	32
  3319   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3320   001FB0  0E41               	movlw	65
  3321   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3322   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3323   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3324   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3325   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3326   001FC4  ECF8  F013         	call	___flmul	;wreg free
  3327   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3328   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3329   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3330   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3331   001FD8  EC75  F022         	call	___flge	;wreg free
  3332   001FDC  A0D8               	btfss	status,0,c
  3333   001FDE  EFF3  F00F         	goto	u4451
  3334   001FE2  EFF5  F00F         	goto	u4450
  3335   001FE6                     u4451:
  3336   001FE6  EF1E  F010         	goto	l4358
  3337   001FEA                     u4450:
  3338   001FEA                     
  3339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3340   001FEA  0100               	movlb	0	; () banked
  3341   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3342   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3343   001FF0                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3346   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3347   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3348   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3349   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3350   002000  0E00               	movlw	0
  3351   002002  6E15               	movwf	___flmul@a^0,c
  3352   002004  0E00               	movlw	0
  3353   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3354   002008  0E20               	movlw	32
  3355   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3356   00200C  0E41               	movlw	65
  3357   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3358   002010  ECF8  F013         	call	___flmul	;wreg free
  3359   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3360   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3361   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3362   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3363   002024                     
  3364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3365   002024  0E66               	movlw	102
  3366   002026  0100               	movlb	0	; () banked
  3367   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3368   00202A  A4D8               	btfss	status,2,c
  3369   00202C  EF1A  F010         	goto	u4461
  3370   002030  EF1C  F010         	goto	u4460
  3371   002034                     u4461:
  3372   002034  EF1E  F010         	goto	l4358
  3373   002038                     u4460:
  3374   002038                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3377   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3378   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3379   00203C                     l4358:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3382   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3383   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3384   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3385   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3386   00204C                     
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3388   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3389   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3390   002054                     
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3392   002054  0E00               	movlw	0
  3393   002056  0100               	movlb	0	; () banked
  3394   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3395   00205A                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3398   00205A  0E00               	movlw	0
  3399   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3400   00205E  0E00               	movlw	0
  3401   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3402   002062                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3405   002062  0E00               	movlw	0
  3406   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3407   002066  0E00               	movlw	0
  3408   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3411   00206A  EF1C  F011         	goto	l4408
  3412   00206E                     l4368:
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3416   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3417   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3418   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3419   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3420   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3421   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3422   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3423   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3424   00208E  EC0D  F016         	call	___fldiv	;wreg free
  3425   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3426   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3427   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3428   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3429   0020A2  ECE3  F01D         	call	_floorf	;wreg free
  3430   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3431   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3432   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3433   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3436   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3437   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3438   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3439   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3440   0020C6  ECF2  F021         	call	___fltol	;wreg free
  3441   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3442   0020CC  EF73  F010         	goto	u4470
  3443   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3444   0020D2  E107               	bnz	u4471
  3445   0020D4  0E0A               	movlw	10
  3446   0020D6  5C01               	subwf	?___fltol^0,w,c
  3447   0020D8  B0D8               	btfsc	status,0,c
  3448   0020DA  EF71  F010         	goto	u4471
  3449   0020DE  EF73  F010         	goto	u4470
  3450   0020E2                     u4471:
  3451   0020E2  EF83  F010         	goto	l4372
  3452   0020E6                     u4470:
  3453   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3454   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3455   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3456   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3457   0020F6  ECF2  F021         	call	___fltol	;wreg free
  3458   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3459   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3460   002102  EF88  F010         	goto	l1290
  3461   002106                     l4372:
  3462   002106  0E00               	movlw	0
  3463   002108  0100               	movlb	0	; () banked
  3464   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3465   00210C  0E09               	movlw	9
  3466   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3467   002110                     l1290:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3470   002110  0100               	movlb	0	; () banked
  3471   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3472   002114  A4D8               	btfss	status,2,c
  3473   002116  EF8F  F010         	goto	u4481
  3474   00211A  EF91  F010         	goto	u4480
  3475   00211E                     u4481:
  3476   00211E  EFB9  F010         	goto	l4392
  3477   002122                     u4480:
  3478   002122                     
  3479                           ; BSR set to: 0
  3480   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3481   002124  EF98  F010         	goto	u4490
  3482   002128  EF96  F010         	goto	u4491
  3483   00212C                     u4491:
  3484   00212C  EFB9  F010         	goto	l4392
  3485   002130                     u4490:
  3486   002130                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3489   002130  0E0C               	movlw	low _dbuf
  3490   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3491   002134  6ED9               	movwf	fsr2l,c
  3492   002136  0E01               	movlw	high _dbuf
  3493   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3494   00213A  6EDA               	movwf	fsr2h,c
  3495   00213C  0E2E               	movlw	46
  3496   00213E  6EDF               	movwf	indf2,c
  3497   002140                     
  3498                           ; BSR set to: 0
  3499   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3500   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3501   002144                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3504   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3505   002146  A0D8               	btfss	status,0,c
  3506   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3507   00214A                     
  3508                           ; BSR set to: 0
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3510   00214A  0E01               	movlw	1
  3511   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3512   00214E  EFB9  F010         	goto	l4392
  3513   002152                     l4384:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3517   002152  0E0C               	movlw	low _dbuf
  3518   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3519   002156  6ED9               	movwf	fsr2l,c
  3520   002158  0E01               	movlw	high _dbuf
  3521   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3522   00215C  6EDA               	movwf	fsr2h,c
  3523   00215E  0E30               	movlw	48
  3524   002160  6EDF               	movwf	indf2,c
  3525   002162                     
  3526                           ; BSR set to: 0
  3527   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3528   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3529   002166                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3532   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3533   002168  A0D8               	btfss	status,0,c
  3534   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3535   00216C                     
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3538   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3539   00216E  A0D8               	btfss	status,0,c
  3540   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3541   002172                     l4392:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3545   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3546   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3547   002176  A4D8               	btfss	status,2,c
  3548   002178  EFC0  F010         	goto	u4501
  3549   00217C  EFC2  F010         	goto	u4500
  3550   002180                     u4501:
  3551   002180  EFA9  F010         	goto	l4384
  3552   002184                     u4500:
  3553   002184                     
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3556   002184  0E0C               	movlw	low _dbuf
  3557   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3558   002188  6ED9               	movwf	fsr2l,c
  3559   00218A  0E01               	movlw	high _dbuf
  3560   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3561   00218E  6EDA               	movwf	fsr2h,c
  3562   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3563   002192  0F30               	addlw	48
  3564   002194  6EDF               	movwf	indf2,c
  3565   002196                     
  3566                           ; BSR set to: 0
  3567   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3568   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3569   00219A                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3572   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3573   00219C  A0D8               	btfss	status,0,c
  3574   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3575   0021A0                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3578   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3579   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3580   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3581   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3582   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3583   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3584   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3585   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3586   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3587   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3588   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3589   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3590   0021D0  ECF8  F013         	call	___flmul	;wreg free
  3591   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3592   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3593   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3594   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3595   0021E4  EC5D  F029         	call	___flsub	;wreg free
  3596   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3597   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3598   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3599   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3600   0021F8                     
  3601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3602   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3603   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3604   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3605   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3606   002208  0E00               	movlw	0
  3607   00220A  6E36               	movwf	___fldiv@a^0,c
  3608   00220C  0E00               	movlw	0
  3609   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  3610   002210  0E20               	movlw	32
  3611   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  3612   002214  0E41               	movlw	65
  3613   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  3614   002218  EC0D  F016         	call	___fldiv	;wreg free
  3615   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  3616   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3617   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3618   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3619   00222C                     
  3620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3621   00222C  0100               	movlb	0	; () banked
  3622   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  3623   002230  A0D8               	btfss	status,0,c
  3624   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3625   002234                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3628   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3629   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3630   002238                     l4408:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3634   002238  5176               	movf	efgtoa@m& (0+255),w,b
  3635   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  3636   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3637   00223E  0A80               	xorlw	128
  3638   002240  6F67               	movwf	??_efgtoa& (0+255),b
  3639   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3640   002244  0A80               	xorlw	128
  3641   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  3642   002248  B0D8               	btfsc	status,0,c
  3643   00224A  EF29  F011         	goto	u4511
  3644   00224E  EF2B  F011         	goto	u4510
  3645   002252                     u4511:
  3646   002252  EF39  F011         	goto	l4412
  3647   002256                     u4510:
  3648   002256                     
  3649                           ; BSR set to: 0
  3650   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3651   002258  EF37  F011         	goto	u4521
  3652   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3653   00225E  E109               	bnz	u4520
  3654   002260  0E4B               	movlw	75
  3655   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  3656   002264  A0D8               	btfss	status,0,c
  3657   002266  EF37  F011         	goto	u4521
  3658   00226A  EF39  F011         	goto	u4520
  3659   00226E                     u4521:
  3660   00226E  EF37  F010         	goto	l4368
  3661   002272                     u4520:
  3662   002272                     l4412:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3666   002272  0E00               	movlw	0
  3667   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3668   002276  0E4F               	movlw	79
  3669   002278  6F80               	movwf	efgtoa@i& (0+255),b
  3670   00227A                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3673   00227A  0E0C               	movlw	low _dbuf
  3674   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  3675   00227E  6ED9               	movwf	fsr2l,c
  3676   002280  0E01               	movlw	high _dbuf
  3677   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3678   002284  6EDA               	movwf	fsr2h,c
  3679   002286  0E00               	movlw	0
  3680   002288  6EDF               	movwf	indf2,c
  3681   00228A                     
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3684   00228A  0E0C               	movlw	low _dbuf
  3685   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  3686   00228E  0E01               	movlw	high _dbuf
  3687   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3688   002292  518B               	movf	efgtoa@n& (0+255),w,b
  3689   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  3690   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3691   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3692   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  3693   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  3694   00229E  6E01               	movwf	memcpy@d1^0,c
  3695   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3696   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3697   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  3698   0022A6  0E0C               	movlw	low _dbuf
  3699   0022A8  6E03               	movwf	memcpy@s1^0,c
  3700   0022AA  0E01               	movlw	high _dbuf
  3701   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  3702   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  3703   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  3704   0022B6  EC6F  F028         	call	_memcpy	;wreg free
  3705   0022BA                     
  3706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3707   0022BA  0100               	movlb	0	; () banked
  3708   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  3709   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  3710   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  3711   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3712   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3713   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3714   0022C8                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3717   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  3718   0022CA  A4D8               	btfss	status,2,c
  3719   0022CC  EF6A  F011         	goto	u4531
  3720   0022D0  EF6D  F011         	goto	u4530
  3721   0022D4                     u4531:
  3722   0022D4  0E01               	movlw	1
  3723   0022D6  EF6E  F011         	goto	u4540
  3724   0022DA                     u4530:
  3725   0022DA  0E00               	movlw	0
  3726   0022DC                     u4540:
  3727   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  3728   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  3729   0022E0                     
  3730                           ; BSR set to: 0
  3731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3732   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  3733   0022E2  B4D8               	btfsc	status,2,c
  3734   0022E4  EF76  F011         	goto	u4551
  3735   0022E8  EF78  F011         	goto	u4550
  3736   0022EC                     u4551:
  3737   0022EC  EF83  F011         	goto	l4426
  3738   0022F0                     u4550:
  3739   0022F0                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3742   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  3743   0022F2  A0D8               	btfss	status,0,c
  3744   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  3745   0022F6  0E0C               	movlw	low _dbuf
  3746   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  3747   0022FA  6ED9               	movwf	fsr2l,c
  3748   0022FC  0E01               	movlw	high _dbuf
  3749   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3750   002300  6EDA               	movwf	fsr2h,c
  3751   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  3752   002306                     l4426:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3756   002306  5180               	movf	efgtoa@i& (0+255),w,b
  3757   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  3758   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3759   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3760   00230E                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3763   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  3764   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3765   002316  0E0C               	movlw	low _dbuf
  3766   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  3767   00231A  6E13               	movwf	pad@buf^0,c
  3768   00231C  0E01               	movlw	high _dbuf
  3769   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3770   002320  6E14               	movwf	(pad@buf+1)^0,c
  3771   002322  C07A  F015         	movff	efgtoa@w,pad@p
  3772   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3773   00232A  EC55  F025         	call	_pad	;wreg free
  3774   00232E                     l1257:
  3775   00232E  0012               	return		;funcret
  3776   002330                     __end_of_efgtoa:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _strcpy *****************
  3780 ;; Defined at:
  3781 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3784 ;;		 -> dbuf(80), 
  3785 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3786 ;;		 -> STR_6(4), STR_3(4), 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  d               2    6[COMRAM] PTR unsigned char 
  3789 ;;		 -> dbuf(80), 
  3790 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3791 ;;		 -> STR_6(4), STR_3(4), 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  2    0[COMRAM] PTR unsigned char 
  3794 ;; Registers used:
  3795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;Total ram usage:        8 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_efgtoa
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text5
  3816   005300                     __ptext5:
  3817                           	callstack 0
  3818   005300                     _strcpy:
  3819                           	callstack 25
  3820   005300  C003  F005         	movff	strcpy@src,strcpy@s
  3821   005304  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3822   005308  C001  F007         	movff	strcpy@dest,strcpy@d
  3823   00530C  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3824   005310                     l4092:
  3825   005310  C005  FFF6         	movff	strcpy@s,tblptrl
  3826   005314  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3827   005318  4A05               	infsnz	strcpy@s^0,f,c
  3828   00531A  2A06               	incf	(strcpy@s+1)^0,f,c
  3829   00531C                     	if	0	;tblptru may be non-zero
  3830   00531C                     	endif
  3831   00531C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3832   00531C  0E00               	movlw	low (__mediumconst shr (0+16))
  3833   00531E  6EF8               	movwf	tblptru,c
  3834   005320                     	endif
  3835   005320  C007  FFD9         	movff	strcpy@d,fsr2l
  3836   005324  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3837   005328  4A07               	infsnz	strcpy@d^0,f,c
  3838   00532A  2A08               	incf	(strcpy@d+1)^0,f,c
  3839   00532C  0008               	tblrd		*
  3840   00532E  CFF5 FFDF          	movff	tablat,indf2
  3841   005332  50DF               	movf	indf2,w,c
  3842   005334  A4D8               	btfss	status,2,c
  3843   005336  EF9F  F029         	goto	u3971
  3844   00533A  EFA1  F029         	goto	u3970
  3845   00533E                     u3971:
  3846   00533E  EF88  F029         	goto	l4092
  3847   005342                     u3970:
  3848   005342  0012               	return		;funcret
  3849   005344                     __end_of_strcpy:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _memcpy *****************
  3853 ;; Defined at:
  3854 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  d1              2    0[COMRAM] PTR void 
  3857 ;;		 -> dbuf(80), 
  3858 ;;  s1              2    2[COMRAM] PTR const void 
  3859 ;;		 -> dbuf(80), 
  3860 ;;  n               2    4[COMRAM] unsigned int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3863 ;;		 -> dbuf(80), 
  3864 ;;  d               2    6[COMRAM] PTR unsigned char 
  3865 ;;		 -> dbuf(80), 
  3866 ;;  tmp             1   10[COMRAM] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2    0[COMRAM] PTR void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3876 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;Total ram usage:       11 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_efgtoa
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text6
  3891   0050DE                     __ptext6:
  3892                           	callstack 0
  3893   0050DE                     _memcpy:
  3894                           	callstack 25
  3895   0050DE  C003  F009         	movff	memcpy@s1,memcpy@s
  3896   0050E2  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3897   0050E6  C001  F007         	movff	memcpy@d1,memcpy@d
  3898   0050EA  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3899   0050EE  EF89  F028         	goto	l4136
  3900   0050F2                     l4128:
  3901   0050F2  C009  FFD9         	movff	memcpy@s,fsr2l
  3902   0050F6  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3903   0050FA  50DF               	movf	indf2,w,c
  3904   0050FC  6E0B               	movwf	memcpy@tmp^0,c
  3905   0050FE  4A09               	infsnz	memcpy@s^0,f,c
  3906   005100  2A0A               	incf	(memcpy@s+1)^0,f,c
  3907   005102  C007  FFD9         	movff	memcpy@d,fsr2l
  3908   005106  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3909   00510A  C00B  FFDF         	movff	memcpy@tmp,indf2
  3910   00510E  4A07               	infsnz	memcpy@d^0,f,c
  3911   005110  2A08               	incf	(memcpy@d+1)^0,f,c
  3912   005112                     l4136:
  3913   005112  0605               	decf	memcpy@n^0,f,c
  3914   005114  A0D8               	btfss	status,0,c
  3915   005116  0606               	decf	(memcpy@n+1)^0,f,c
  3916   005118  2805               	incf	memcpy@n^0,w,c
  3917   00511A  E106               	bnz	u4091
  3918   00511C  2806               	incf	(memcpy@n+1)^0,w,c
  3919   00511E  A4D8               	btfss	status,2,c
  3920   005120  EF94  F028         	goto	u4091
  3921   005124  EF96  F028         	goto	u4090
  3922   005128                     u4091:
  3923   005128  EF79  F028         	goto	l4128
  3924   00512C                     u4090:
  3925   00512C  0012               	return		;funcret
  3926   00512E                     __end_of_memcpy:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _labs *****************
  3930 ;; Defined at:
  3931 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  a               4    0[COMRAM] long 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  4    0[COMRAM] long 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        8 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 1
  3952 ;; This function calls:
  3953 ;;		Nothing
  3954 ;; This function is called by:
  3955 ;;		_efgtoa
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text7
  3960   004C0E                     __ptext7:
  3961                           	callstack 0
  3962   004C0E                     _labs:
  3963                           	callstack 25
  3964   004C0E  BE04               	btfsc	(labs@a+3)^0,7,c
  3965   004C10  EF16  F026         	goto	u3980
  3966   004C14  5004               	movf	(labs@a+3)^0,w,c
  3967   004C16  1003               	iorwf	(labs@a+2)^0,w,c
  3968   004C18  1002               	iorwf	(labs@a+1)^0,w,c
  3969   004C1A  E106               	bnz	u3981
  3970   004C1C  0401               	decf	labs@a^0,w,c
  3971   004C1E  B0D8               	btfsc	status,0,c
  3972   004C20  EF14  F026         	goto	u3981
  3973   004C24  EF16  F026         	goto	u3980
  3974   004C28                     u3981:
  3975   004C28  EF31  F026         	goto	l1362
  3976   004C2C                     u3980:
  3977   004C2C  C001  F005         	movff	labs@a,??_labs
  3978   004C30  C002  F006         	movff	labs@a+1,??_labs+1
  3979   004C34  C003  F007         	movff	labs@a+2,??_labs+2
  3980   004C38  C004  F008         	movff	labs@a+3,??_labs+3
  3981   004C3C  1E05               	comf	??_labs^0,f,c
  3982   004C3E  1E06               	comf	(??_labs+1)^0,f,c
  3983   004C40  1E07               	comf	(??_labs+2)^0,f,c
  3984   004C42  1E08               	comf	(??_labs+3)^0,f,c
  3985   004C44  2A05               	incf	??_labs^0,f,c
  3986   004C46  0E00               	movlw	0
  3987   004C48  2206               	addwfc	(??_labs+1)^0,f,c
  3988   004C4A  2207               	addwfc	(??_labs+2)^0,f,c
  3989   004C4C  2208               	addwfc	(??_labs+3)^0,f,c
  3990   004C4E  C005  F001         	movff	??_labs,?_labs
  3991   004C52  C006  F002         	movff	??_labs+1,?_labs+1
  3992   004C56  C007  F003         	movff	??_labs+2,?_labs+2
  3993   004C5A  C008  F004         	movff	??_labs+3,?_labs+3
  3994   004C5E  EF39  F026         	goto	l1365
  3995   004C62                     l1362:
  3996   004C62  C001  F001         	movff	labs@a,?_labs
  3997   004C66  C002  F002         	movff	labs@a+1,?_labs+1
  3998   004C6A  C003  F003         	movff	labs@a+2,?_labs+2
  3999   004C6E  C004  F004         	movff	labs@a+3,?_labs+3
  4000   004C72                     l1365:
  4001   004C72  0012               	return		;funcret
  4002   004C74                     __end_of_labs:
  4003                           	callstack 0
  4004                           
  4005 ;; *************** function _floorf *****************
  4006 ;; Defined at:
  4007 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  x               4   74[COMRAM] float 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  u               4   90[COMRAM] struct .
  4012 ;;  m               4   84[COMRAM] unsigned long 
  4013 ;;  e               2   88[COMRAM] int 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  4   74[COMRAM] float 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;Total ram usage:       20 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_efgtoa
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text8
  4038   003BC6                     __ptext8:
  4039                           	callstack 0
  4040   003BC6                     _floorf:
  4041                           	callstack 25
  4042   003BC6  C0E7  F05B         	movff	floorf@F526,floorf@u
  4043   003BCA  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  4044   003BCE  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  4045   003BD2  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  4046   003BD6  C04B  F05B         	movff	floorf@x,floorf@u
  4047   003BDA  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4048   003BDE  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4049   003BE2  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4050   003BE6  0E81               	movlw	129
  4051   003BE8  6E4F               	movwf	??_floorf^0,c
  4052   003BEA  0EFF               	movlw	255
  4053   003BEC  6E50               	movwf	(??_floorf+1)^0,c
  4054   003BEE  C05B  F051         	movff	floorf@u,??_floorf+2
  4055   003BF2  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4056   003BF6  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4057   003BFA  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4058   003BFE  0E18               	movlw	24
  4059   003C00  EF07  F01E         	goto	u3990
  4060   003C04                     u3995:
  4061   003C04  90D8               	bcf	status,0,c
  4062   003C06  3254               	rrcf	(??_floorf+5)^0,f,c
  4063   003C08  3253               	rrcf	(??_floorf+4)^0,f,c
  4064   003C0A  3252               	rrcf	(??_floorf+3)^0,f,c
  4065   003C0C  3251               	rrcf	(??_floorf+2)^0,f,c
  4066   003C0E                     u3990:
  4067   003C0E  2EE8               	decfsz	wreg,f,c
  4068   003C10  EF02  F01E         	goto	u3995
  4069   003C14  5051               	movf	(??_floorf+2)^0,w,c
  4070   003C16  244F               	addwf	??_floorf^0,w,c
  4071   003C18  6E59               	movwf	floorf@e^0,c
  4072   003C1A  0E00               	movlw	0
  4073   003C1C  2050               	addwfc	(??_floorf+1)^0,w,c
  4074   003C1E  6E5A               	movwf	(floorf@e+1)^0,c
  4075   003C20  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4076   003C22  EF1C  F01E         	goto	u4001
  4077   003C26  505A               	movf	(floorf@e+1)^0,w,c
  4078   003C28  E109               	bnz	u4000
  4079   003C2A  0E17               	movlw	23
  4080   003C2C  5C59               	subwf	floorf@e^0,w,c
  4081   003C2E  A0D8               	btfss	status,0,c
  4082   003C30  EF1C  F01E         	goto	u4001
  4083   003C34  EF1E  F01E         	goto	u4000
  4084   003C38                     u4001:
  4085   003C38  EF28  F01E         	goto	l4104
  4086   003C3C                     u4000:
  4087   003C3C                     l4102:
  4088   003C3C  C04B  F04B         	movff	floorf@x,?_floorf
  4089   003C40  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4090   003C44  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4091   003C48  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4092   003C4C  EFEB  F01E         	goto	l1351
  4093   003C50                     l4104:
  4094   003C50  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4095   003C52  EF2D  F01E         	goto	u4011
  4096   003C56  EF2F  F01E         	goto	u4010
  4097   003C5A                     u4011:
  4098   003C5A  EF9F  F01E         	goto	l4114
  4099   003C5E                     u4010:
  4100   003C5E  C059  F04F         	movff	floorf@e,??_floorf
  4101   003C62  0EFF               	movlw	255
  4102   003C64  6E50               	movwf	(??_floorf+1)^0,c
  4103   003C66  0EFF               	movlw	255
  4104   003C68  6E51               	movwf	(??_floorf+2)^0,c
  4105   003C6A  0E7F               	movlw	127
  4106   003C6C  6E52               	movwf	(??_floorf+3)^0,c
  4107   003C6E  0E00               	movlw	0
  4108   003C70  6E53               	movwf	(??_floorf+4)^0,c
  4109   003C72                     u4025:
  4110   003C72  664F               	tstfsz	??_floorf^0,c
  4111   003C74  EF3E  F01E         	goto	u4026
  4112   003C78  EF46  F01E         	goto	u4027
  4113   003C7C                     u4026:
  4114   003C7C  3453               	rlcf	(??_floorf+4)^0,w,c
  4115   003C7E  3253               	rrcf	(??_floorf+4)^0,f,c
  4116   003C80  3252               	rrcf	(??_floorf+3)^0,f,c
  4117   003C82  3251               	rrcf	(??_floorf+2)^0,f,c
  4118   003C84  3250               	rrcf	(??_floorf+1)^0,f,c
  4119   003C86  2E4F               	decfsz	??_floorf^0,f,c
  4120   003C88  EF39  F01E         	goto	u4025
  4121   003C8C                     u4027:
  4122   003C8C  C050  F055         	movff	??_floorf+1,floorf@m
  4123   003C90  C051  F056         	movff	??_floorf+2,floorf@m+1
  4124   003C94  C052  F057         	movff	??_floorf+3,floorf@m+2
  4125   003C98  C053  F058         	movff	??_floorf+4,floorf@m+3
  4126   003C9C  5055               	movf	floorf@m^0,w,c
  4127   003C9E  145B               	andwf	floorf@u^0,w,c
  4128   003CA0  6E4F               	movwf	??_floorf^0,c
  4129   003CA2  5056               	movf	(floorf@m+1)^0,w,c
  4130   003CA4  145C               	andwf	(floorf@u+1)^0,w,c
  4131   003CA6  6E50               	movwf	(??_floorf+1)^0,c
  4132   003CA8  5057               	movf	(floorf@m+2)^0,w,c
  4133   003CAA  145D               	andwf	(floorf@u+2)^0,w,c
  4134   003CAC  6E51               	movwf	(??_floorf+2)^0,c
  4135   003CAE  5058               	movf	(floorf@m+3)^0,w,c
  4136   003CB0  145E               	andwf	(floorf@u+3)^0,w,c
  4137   003CB2  6E52               	movwf	(??_floorf+3)^0,c
  4138   003CB4  504F               	movf	??_floorf^0,w,c
  4139   003CB6  1050               	iorwf	(??_floorf+1)^0,w,c
  4140   003CB8  1051               	iorwf	(??_floorf+2)^0,w,c
  4141   003CBA  1052               	iorwf	(??_floorf+3)^0,w,c
  4142   003CBC  A4D8               	btfss	status,2,c
  4143   003CBE  EF63  F01E         	goto	u4031
  4144   003CC2  EF65  F01E         	goto	u4030
  4145   003CC6                     u4031:
  4146   003CC6  EF67  F01E         	goto	l4110
  4147   003CCA                     u4030:
  4148   003CCA  EF1E  F01E         	goto	l4102
  4149   003CCE                     l4110:
  4150   003CCE  C05B  F04F         	movff	floorf@u,??_floorf
  4151   003CD2  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4152   003CD6  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4153   003CDA  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4154   003CDE  0E20               	movlw	32
  4155   003CE0  EF77  F01E         	goto	u4040
  4156   003CE4                     u4045:
  4157   003CE4  90D8               	bcf	status,0,c
  4158   003CE6  3252               	rrcf	(??_floorf+3)^0,f,c
  4159   003CE8  3251               	rrcf	(??_floorf+2)^0,f,c
  4160   003CEA  3250               	rrcf	(??_floorf+1)^0,f,c
  4161   003CEC  324F               	rrcf	??_floorf^0,f,c
  4162   003CEE                     u4040:
  4163   003CEE  2EE8               	decfsz	wreg,f,c
  4164   003CF0  EF72  F01E         	goto	u4045
  4165   003CF4  504F               	movf	??_floorf^0,w,c
  4166   003CF6  1050               	iorwf	(??_floorf+1)^0,w,c
  4167   003CF8  1051               	iorwf	(??_floorf+2)^0,w,c
  4168   003CFA  1052               	iorwf	(??_floorf+3)^0,w,c
  4169   003CFC  B4D8               	btfsc	status,2,c
  4170   003CFE  EF83  F01E         	goto	u4051
  4171   003D02  EF85  F01E         	goto	u4050
  4172   003D06                     u4051:
  4173   003D06  EF8D  F01E         	goto	l1354
  4174   003D0A                     u4050:
  4175   003D0A  5055               	movf	floorf@m^0,w,c
  4176   003D0C  265B               	addwf	floorf@u^0,f,c
  4177   003D0E  5056               	movf	(floorf@m+1)^0,w,c
  4178   003D10  225C               	addwfc	(floorf@u+1)^0,f,c
  4179   003D12  5057               	movf	(floorf@m+2)^0,w,c
  4180   003D14  225D               	addwfc	(floorf@u+2)^0,f,c
  4181   003D16  5058               	movf	(floorf@m+3)^0,w,c
  4182   003D18  225E               	addwfc	(floorf@u+3)^0,f,c
  4183   003D1A                     l1354:
  4184   003D1A  1C55               	comf	floorf@m^0,w,c
  4185   003D1C  6E4F               	movwf	??_floorf^0,c
  4186   003D1E  1C56               	comf	(floorf@m+1)^0,w,c
  4187   003D20  6E50               	movwf	(??_floorf+1)^0,c
  4188   003D22  1C57               	comf	(floorf@m+2)^0,w,c
  4189   003D24  6E51               	movwf	(??_floorf+2)^0,c
  4190   003D26  1C58               	comf	(floorf@m+3)^0,w,c
  4191   003D28  6E52               	movwf	(??_floorf+3)^0,c
  4192   003D2A  504F               	movf	??_floorf^0,w,c
  4193   003D2C  165B               	andwf	floorf@u^0,f,c
  4194   003D2E  5050               	movf	(??_floorf+1)^0,w,c
  4195   003D30  165C               	andwf	(floorf@u+1)^0,f,c
  4196   003D32  5051               	movf	(??_floorf+2)^0,w,c
  4197   003D34  165D               	andwf	(floorf@u+2)^0,f,c
  4198   003D36  5052               	movf	(??_floorf+3)^0,w,c
  4199   003D38  165E               	andwf	(floorf@u+3)^0,f,c
  4200   003D3A  EFE3  F01E         	goto	l4122
  4201   003D3E                     l4114:
  4202   003D3E  C05B  F04F         	movff	floorf@u,??_floorf
  4203   003D42  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4204   003D46  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4205   003D4A  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4206   003D4E  0E20               	movlw	32
  4207   003D50  EFAF  F01E         	goto	u4060
  4208   003D54                     u4065:
  4209   003D54  90D8               	bcf	status,0,c
  4210   003D56  3252               	rrcf	(??_floorf+3)^0,f,c
  4211   003D58  3251               	rrcf	(??_floorf+2)^0,f,c
  4212   003D5A  3250               	rrcf	(??_floorf+1)^0,f,c
  4213   003D5C  324F               	rrcf	??_floorf^0,f,c
  4214   003D5E                     u4060:
  4215   003D5E  2EE8               	decfsz	wreg,f,c
  4216   003D60  EFAA  F01E         	goto	u4065
  4217   003D64  504F               	movf	??_floorf^0,w,c
  4218   003D66  1050               	iorwf	(??_floorf+1)^0,w,c
  4219   003D68  1051               	iorwf	(??_floorf+2)^0,w,c
  4220   003D6A  1052               	iorwf	(??_floorf+3)^0,w,c
  4221   003D6C  A4D8               	btfss	status,2,c
  4222   003D6E  EFBB  F01E         	goto	u4071
  4223   003D72  EFBD  F01E         	goto	u4070
  4224   003D76                     u4071:
  4225   003D76  EFC7  F01E         	goto	l4118
  4226   003D7A                     u4070:
  4227   003D7A  0E00               	movlw	0
  4228   003D7C  6E5B               	movwf	floorf@u^0,c
  4229   003D7E  0E00               	movlw	0
  4230   003D80  6E5C               	movwf	(floorf@u+1)^0,c
  4231   003D82  0E00               	movlw	0
  4232   003D84  6E5D               	movwf	(floorf@u+2)^0,c
  4233   003D86  0E00               	movlw	0
  4234   003D88  6E5E               	movwf	(floorf@u+3)^0,c
  4235   003D8A  EFE3  F01E         	goto	l4122
  4236   003D8E                     l4118:
  4237   003D8E  90D8               	bcf	status,0,c
  4238   003D90  345B               	rlcf	floorf@u^0,w,c
  4239   003D92  6E4F               	movwf	??_floorf^0,c
  4240   003D94  345C               	rlcf	(floorf@u+1)^0,w,c
  4241   003D96  6E50               	movwf	(??_floorf+1)^0,c
  4242   003D98  345D               	rlcf	(floorf@u+2)^0,w,c
  4243   003D9A  6E51               	movwf	(??_floorf+2)^0,c
  4244   003D9C  345E               	rlcf	(floorf@u+3)^0,w,c
  4245   003D9E  6E52               	movwf	(??_floorf+3)^0,c
  4246   003DA0  504F               	movf	??_floorf^0,w,c
  4247   003DA2  1050               	iorwf	(??_floorf+1)^0,w,c
  4248   003DA4  1051               	iorwf	(??_floorf+2)^0,w,c
  4249   003DA6  1052               	iorwf	(??_floorf+3)^0,w,c
  4250   003DA8  B4D8               	btfsc	status,2,c
  4251   003DAA  EFD9  F01E         	goto	u4081
  4252   003DAE  EFDB  F01E         	goto	u4080
  4253   003DB2                     u4081:
  4254   003DB2  EFE3  F01E         	goto	l4122
  4255   003DB6                     u4080:
  4256   003DB6  0E00               	movlw	0
  4257   003DB8  6E5B               	movwf	floorf@u^0,c
  4258   003DBA  0E00               	movlw	0
  4259   003DBC  6E5C               	movwf	(floorf@u+1)^0,c
  4260   003DBE  0E80               	movlw	128
  4261   003DC0  6E5D               	movwf	(floorf@u+2)^0,c
  4262   003DC2  0EBF               	movlw	191
  4263   003DC4  6E5E               	movwf	(floorf@u+3)^0,c
  4264   003DC6                     l4122:
  4265   003DC6  C05B  F04B         	movff	floorf@u,?_floorf
  4266   003DCA  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4267   003DCE  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4268   003DD2  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4269   003DD6                     l1351:
  4270   003DD6  0012               	return		;funcret
  4271   003DD8                     __end_of_floorf:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function ___fpclassifyf *****************
  4275 ;; Defined at:
  4276 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  x               4    0[COMRAM] float 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  u               4   10[COMRAM] struct .
  4281 ;;  e               2    8[COMRAM] int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    0[COMRAM] int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;Total ram usage:       14 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_efgtoa
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text9
  4306   0045EE                     __ptext9:
  4307                           	callstack 0
  4308   0045EE                     ___fpclassifyf:
  4309                           	callstack 25
  4310   0045EE  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4311   0045F2  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4312   0045F6  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4313   0045FA  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4314   0045FE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4315   004602  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4316   004606  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4317   00460A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4318   00460E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4319   004612  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4320   004616  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4321   00461A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4322   00461E  0E18               	movlw	24
  4323   004620  EF17  F023         	goto	u3900
  4324   004624                     u3905:
  4325   004624  90D8               	bcf	status,0,c
  4326   004626  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4327   004628  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4328   00462A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4329   00462C  3205               	rrcf	??___fpclassifyf^0,f,c
  4330   00462E                     u3900:
  4331   00462E  2EE8               	decfsz	wreg,f,c
  4332   004630  EF12  F023         	goto	u3905
  4333   004634  5005               	movf	??___fpclassifyf^0,w,c
  4334   004636  6E09               	movwf	___fpclassifyf@e^0,c
  4335   004638  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4336   00463A  5009               	movf	___fpclassifyf@e^0,w,c
  4337   00463C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4338   00463E  A4D8               	btfss	status,2,c
  4339   004640  EF24  F023         	goto	u3911
  4340   004644  EF26  F023         	goto	u3910
  4341   004648                     u3911:
  4342   004648  EF46  F023         	goto	l4080
  4343   00464C                     u3910:
  4344   00464C  90D8               	bcf	status,0,c
  4345   00464E  340B               	rlcf	___fpclassifyf@u^0,w,c
  4346   004650  6E05               	movwf	??___fpclassifyf^0,c
  4347   004652  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4348   004654  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4349   004656  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4350   004658  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4351   00465A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4352   00465C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4353   00465E  5005               	movf	??___fpclassifyf^0,w,c
  4354   004660  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4355   004662  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4356   004664  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4357   004666  A4D8               	btfss	status,2,c
  4358   004668  EF38  F023         	goto	u3921
  4359   00466C  EF3A  F023         	goto	u3920
  4360   004670                     u3921:
  4361   004670  EF40  F023         	goto	l4076
  4362   004674                     u3920:
  4363   004674  0E00               	movlw	0
  4364   004676  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4365   004678  0E02               	movlw	2
  4366   00467A  6E01               	movwf	?___fpclassifyf^0,c
  4367   00467C  EF75  F023         	goto	l1337
  4368   004680                     l4076:
  4369   004680  0E00               	movlw	0
  4370   004682  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4371   004684  0E03               	movlw	3
  4372   004686  6E01               	movwf	?___fpclassifyf^0,c
  4373   004688  EF75  F023         	goto	l1337
  4374   00468C                     l4080:
  4375   00468C  2809               	incf	___fpclassifyf@e^0,w,c
  4376   00468E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4377   004690  A4D8               	btfss	status,2,c
  4378   004692  EF4D  F023         	goto	u3931
  4379   004696  EF4F  F023         	goto	u3930
  4380   00469A                     u3931:
  4381   00469A  EF71  F023         	goto	l4086
  4382   00469E                     u3930:
  4383   00469E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4384   0046A2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4385   0046A6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4386   0046AA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4387   0046AE  0E09               	movlw	9
  4388   0046B0                     u3945:
  4389   0046B0  90D8               	bcf	status,0,c
  4390   0046B2  3605               	rlcf	??___fpclassifyf^0,f,c
  4391   0046B4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4392   0046B6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4393   0046B8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4394   0046BA  2EE8               	decfsz	wreg,f,c
  4395   0046BC  EF58  F023         	goto	u3945
  4396   0046C0  5005               	movf	??___fpclassifyf^0,w,c
  4397   0046C2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4398   0046C4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4399   0046C6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4400   0046C8  B4D8               	btfsc	status,2,c
  4401   0046CA  EF69  F023         	goto	u3951
  4402   0046CE  EF6C  F023         	goto	u3950
  4403   0046D2                     u3951:
  4404   0046D2  0E01               	movlw	1
  4405   0046D4  EF6D  F023         	goto	u3960
  4406   0046D8                     u3950:
  4407   0046D8  0E00               	movlw	0
  4408   0046DA                     u3960:
  4409   0046DA  6E01               	movwf	?___fpclassifyf^0,c
  4410   0046DC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4411   0046DE  EF75  F023         	goto	l1337
  4412   0046E2                     l4086:
  4413   0046E2  0E00               	movlw	0
  4414   0046E4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4415   0046E6  0E04               	movlw	4
  4416   0046E8  6E01               	movwf	?___fpclassifyf^0,c
  4417   0046EA                     l1337:
  4418   0046EA  0012               	return		;funcret
  4419   0046EC                     __end_of___fpclassifyf:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function ___fltol *****************
  4423 ;; Defined at:
  4424 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  f1              4    0[COMRAM] int 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  exp1            1    9[COMRAM] unsigned char 
  4429 ;;  sign1           1    8[COMRAM] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  4    0[COMRAM] long 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2, status,0
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4439 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;Total ram usage:       10 bytes
  4444 ;; Hardware stack levels used: 1
  4445 ;; Hardware stack levels required when called: 1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_efgtoa
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text10
  4454   0043E4                     __ptext10:
  4455                           	callstack 0
  4456   0043E4                     ___fltol:
  4457                           	callstack 25
  4458   0043E4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4459   0043E6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4460   0043E8  6E0A               	movwf	___fltol@exp1^0,c
  4461   0043EA  500A               	movf	___fltol@exp1^0,w,c
  4462   0043EC  A4D8               	btfss	status,2,c
  4463   0043EE  EFFB  F021         	goto	u3771
  4464   0043F2  EFFD  F021         	goto	u3770
  4465   0043F6                     u3771:
  4466   0043F6  EF07  F022         	goto	l3990
  4467   0043FA                     u3770:
  4468   0043FA                     l3986:
  4469   0043FA  0E00               	movlw	0
  4470   0043FC  6E01               	movwf	?___fltol^0,c
  4471   0043FE  0E00               	movlw	0
  4472   004400  6E02               	movwf	(?___fltol+1)^0,c
  4473   004402  0E00               	movlw	0
  4474   004404  6E03               	movwf	(?___fltol+2)^0,c
  4475   004406  0E00               	movlw	0
  4476   004408  6E04               	movwf	(?___fltol+3)^0,c
  4477   00440A  EF74  F022         	goto	l810
  4478   00440E                     l3990:
  4479   00440E  C001  F005         	movff	___fltol@f1,??___fltol
  4480   004412  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4481   004416  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4482   00441A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4483   00441E  0E20               	movlw	32
  4484   004420  EF17  F022         	goto	u3780
  4485   004424                     u3785:
  4486   004424  90D8               	bcf	status,0,c
  4487   004426  3208               	rrcf	(??___fltol+3)^0,f,c
  4488   004428  3207               	rrcf	(??___fltol+2)^0,f,c
  4489   00442A  3206               	rrcf	(??___fltol+1)^0,f,c
  4490   00442C  3205               	rrcf	??___fltol^0,f,c
  4491   00442E                     u3780:
  4492   00442E  2EE8               	decfsz	wreg,f,c
  4493   004430  EF12  F022         	goto	u3785
  4494   004434  5005               	movf	??___fltol^0,w,c
  4495   004436  6E09               	movwf	___fltol@sign1^0,c
  4496   004438  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4497   00443A  0EFF               	movlw	255
  4498   00443C  1601               	andwf	___fltol@f1^0,f,c
  4499   00443E  0EFF               	movlw	255
  4500   004440  1602               	andwf	(___fltol@f1+1)^0,f,c
  4501   004442  0EFF               	movlw	255
  4502   004444  1603               	andwf	(___fltol@f1+2)^0,f,c
  4503   004446  0E00               	movlw	0
  4504   004448  1604               	andwf	(___fltol@f1+3)^0,f,c
  4505   00444A  0E96               	movlw	150
  4506   00444C  5E0A               	subwf	___fltol@exp1^0,f,c
  4507   00444E  BE0A               	btfsc	___fltol@exp1^0,7,c
  4508   004450  EF2E  F022         	goto	u3790
  4509   004454  EF2C  F022         	goto	u3791
  4510   004458                     u3791:
  4511   004458  EF44  F022         	goto	l4010
  4512   00445C                     u3790:
  4513   00445C  500A               	movf	___fltol@exp1^0,w,c
  4514   00445E  0A80               	xorlw	128
  4515   004460  0F97               	addlw	151
  4516   004462  B0D8               	btfsc	status,0,c
  4517   004464  EF36  F022         	goto	u3801
  4518   004468  EF38  F022         	goto	u3800
  4519   00446C                     u3801:
  4520   00446C  EF3A  F022         	goto	l4006
  4521   004470                     u3800:
  4522   004470  EFFD  F021         	goto	l3986
  4523   004474                     l4006:
  4524   004474  90D8               	bcf	status,0,c
  4525   004476  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4526   004478  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4527   00447A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4528   00447C  3201               	rrcf	___fltol@f1^0,f,c
  4529   00447E  3E0A               	incfsz	___fltol@exp1^0,f,c
  4530   004480  EF3A  F022         	goto	l4006
  4531   004484  EF5C  F022         	goto	l4020
  4532   004488                     l4010:
  4533   004488  0E1F               	movlw	31
  4534   00448A  640A               	cpfsgt	___fltol@exp1^0,c
  4535   00448C  EF4A  F022         	goto	u3811
  4536   004490  EF4C  F022         	goto	u3810
  4537   004494                     u3811:
  4538   004494  EF54  F022         	goto	l4018
  4539   004498                     u3810:
  4540   004498  EFFD  F021         	goto	l3986
  4541   00449C                     l4016:
  4542   00449C  90D8               	bcf	status,0,c
  4543   00449E  3601               	rlcf	___fltol@f1^0,f,c
  4544   0044A0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4545   0044A2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4546   0044A4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4547   0044A6  060A               	decf	___fltol@exp1^0,f,c
  4548   0044A8                     l4018:
  4549   0044A8  500A               	movf	___fltol@exp1^0,w,c
  4550   0044AA  A4D8               	btfss	status,2,c
  4551   0044AC  EF5A  F022         	goto	u3821
  4552   0044B0  EF5C  F022         	goto	u3820
  4553   0044B4                     u3821:
  4554   0044B4  EF4E  F022         	goto	l4016
  4555   0044B8                     u3820:
  4556   0044B8                     l4020:
  4557   0044B8  5009               	movf	___fltol@sign1^0,w,c
  4558   0044BA  B4D8               	btfsc	status,2,c
  4559   0044BC  EF62  F022         	goto	u3831
  4560   0044C0  EF64  F022         	goto	u3830
  4561   0044C4                     u3831:
  4562   0044C4  EF6C  F022         	goto	l4024
  4563   0044C8                     u3830:
  4564   0044C8  1E04               	comf	(___fltol@f1+3)^0,f,c
  4565   0044CA  1E03               	comf	(___fltol@f1+2)^0,f,c
  4566   0044CC  1E02               	comf	(___fltol@f1+1)^0,f,c
  4567   0044CE  6C01               	negf	___fltol@f1^0,c
  4568   0044D0  0E00               	movlw	0
  4569   0044D2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4570   0044D4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4571   0044D6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4572   0044D8                     l4024:
  4573   0044D8  C001  F001         	movff	___fltol@f1,?___fltol
  4574   0044DC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4575   0044E0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4576   0044E4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4577   0044E8                     l810:
  4578   0044E8  0012               	return		;funcret
  4579   0044EA                     __end_of___fltol:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function ___flneg *****************
  4583 ;; Defined at:
  4584 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  f1              4    0[COMRAM] long 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  4    0[COMRAM] long 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;Total ram usage:        4 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 1
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_efgtoa
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text11
  4613   005486                     __ptext11:
  4614                           	callstack 0
  4615   005486                     ___flneg:
  4616                           	callstack 25
  4617   005486  5001               	movf	___flneg@f1^0,w,c
  4618   005488  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4619   00548A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4620   00548C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4621   00548E  B4D8               	btfsc	status,2,c
  4622   005490  EF4C  F02A         	goto	u3761
  4623   005494  EF4E  F02A         	goto	u3760
  4624   005498                     u3761:
  4625   005498  EF56  F02A         	goto	l3980
  4626   00549C                     u3760:
  4627   00549C  0E00               	movlw	0
  4628   00549E  1A01               	xorwf	___flneg@f1^0,f,c
  4629   0054A0  0E00               	movlw	0
  4630   0054A2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4631   0054A4  0E00               	movlw	0
  4632   0054A6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4633   0054A8  0E80               	movlw	128
  4634   0054AA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4635   0054AC                     l3980:
  4636   0054AC  C001  F001         	movff	___flneg@f1,?___flneg
  4637   0054B0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4638   0054B4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4639   0054B8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4640   0054BC  0012               	return		;funcret
  4641   0054BE                     __end_of___flneg:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _dtoa *****************
  4645 ;; Defined at:
  4646 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4649 ;;		 -> sprintf@f(11), 
  4650 ;;  d               8   29[COMRAM] long long 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  n               8   51[COMRAM] long long 
  4653 ;;  i               2   59[COMRAM] int 
  4654 ;;  w               2   49[COMRAM] int 
  4655 ;;  p               2   47[COMRAM] int 
  4656 ;;  s               1   61[COMRAM] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4666 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4668 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;Total ram usage:       35 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 5
  4673 ;; This function calls:
  4674 ;;		___aodiv
  4675 ;;		___aomod
  4676 ;;		_abs
  4677 ;;		_pad
  4678 ;; This function is called by:
  4679 ;;		_vfpfcnvrt
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text12
  4684   003948                     __ptext12:
  4685                           	callstack 0
  4686   003948                     _dtoa:
  4687                           	callstack 22
  4688   003948                     
  4689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4690   003948  C01E  F034         	movff	dtoa@d,dtoa@n
  4691   00394C  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  4692   003950  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  4693   003954  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  4694   003958  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  4695   00395C  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  4696   003960  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  4697   003964  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  4698   003968                     
  4699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4700   003968  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  4701   00396A  EFB9  F01C         	goto	u4141
  4702   00396E  EFBC  F01C         	goto	u4140
  4703   003972                     u4141:
  4704   003972  0E01               	movlw	1
  4705   003974  EFBD  F01C         	goto	u4150
  4706   003978                     u4140:
  4707   003978  0E00               	movlw	0
  4708   00397A                     u4150:
  4709   00397A  6E3E               	movwf	dtoa@s^0,c
  4710   00397C                     
  4711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4712   00397C  503E               	movf	dtoa@s^0,w,c
  4713   00397E  B4D8               	btfsc	status,2,c
  4714   003980  EFC4  F01C         	goto	u4161
  4715   003984  EFC6  F01C         	goto	u4160
  4716   003988                     u4161:
  4717   003988  EFD6  F01C         	goto	l4166
  4718   00398C                     u4160:
  4719   00398C                     
  4720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4721   00398C  1E3B               	comf	(dtoa@n+7)^0,f,c
  4722   00398E  1E3A               	comf	(dtoa@n+6)^0,f,c
  4723   003990  1E39               	comf	(dtoa@n+5)^0,f,c
  4724   003992  1E38               	comf	(dtoa@n+4)^0,f,c
  4725   003994  1E37               	comf	(dtoa@n+3)^0,f,c
  4726   003996  1E36               	comf	(dtoa@n+2)^0,f,c
  4727   003998  1E35               	comf	(dtoa@n+1)^0,f,c
  4728   00399A  6C34               	negf	dtoa@n^0,c
  4729   00399C  0E00               	movlw	0
  4730   00399E  2235               	addwfc	(dtoa@n+1)^0,f,c
  4731   0039A0  2236               	addwfc	(dtoa@n+2)^0,f,c
  4732   0039A2  2237               	addwfc	(dtoa@n+3)^0,f,c
  4733   0039A4  2238               	addwfc	(dtoa@n+4)^0,f,c
  4734   0039A6  2239               	addwfc	(dtoa@n+5)^0,f,c
  4735   0039A8  223A               	addwfc	(dtoa@n+6)^0,f,c
  4736   0039AA  223B               	addwfc	(dtoa@n+7)^0,f,c
  4737   0039AC                     l4166:
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4740   0039AC  0100               	movlb	0	; () banked
  4741   0039AE  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  4742   0039B0  EFE4  F01C         	goto	u4170
  4743   0039B4  51F2               	movf	(_prec+1)& (0+255),w,b
  4744   0039B6  E106               	bnz	u4171
  4745   0039B8  05F1               	decf	_prec& (0+255),w,b
  4746   0039BA  B0D8               	btfsc	status,0,c
  4747   0039BC  EFE2  F01C         	goto	u4171
  4748   0039C0  EFE4  F01C         	goto	u4170
  4749   0039C4                     u4171:
  4750   0039C4  EFEA  F01C         	goto	l1232
  4751   0039C8                     u4170:
  4752   0039C8                     
  4753                           ; BSR set to: 0
  4754   0039C8  0E00               	movlw	0
  4755   0039CA  6E31               	movwf	(dtoa@p+1)^0,c
  4756   0039CC  0E01               	movlw	1
  4757   0039CE  6E30               	movwf	dtoa@p^0,c
  4758   0039D0  EFEE  F01C         	goto	l1234
  4759   0039D4                     l1232:
  4760                           
  4761                           ; BSR set to: 0
  4762   0039D4  C0F1  F030         	movff	_prec,dtoa@p
  4763   0039D8  C0F2  F031         	movff	_prec+1,dtoa@p+1
  4764   0039DC                     l1234:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4768   0039DC  C0EF  F032         	movff	_width,dtoa@w
  4769   0039E0  C0F0  F033         	movff	_width+1,dtoa@w+1
  4770   0039E4                     
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4773   0039E4  503E               	movf	dtoa@s^0,w,c
  4774   0039E6  B4D8               	btfsc	status,2,c
  4775   0039E8  EFF8  F01C         	goto	u4181
  4776   0039EC  EFFA  F01C         	goto	u4180
  4777   0039F0                     u4181:
  4778   0039F0  EF11  F01D         	goto	l1235
  4779   0039F4                     u4180:
  4780   0039F4                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4783   0039F4  0632               	decf	dtoa@w^0,f,c
  4784   0039F6  A0D8               	btfss	status,0,c
  4785   0039F8  0633               	decf	(dtoa@w+1)^0,f,c
  4786   0039FA                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4789   0039FA  503E               	movf	dtoa@s^0,w,c
  4790   0039FC  A4D8               	btfss	status,2,c
  4791   0039FE  EF03  F01D         	goto	u4191
  4792   003A02  EF05  F01D         	goto	u4190
  4793   003A06                     u4191:
  4794   003A06  EF0B  F01D         	goto	l4178
  4795   003A0A                     u4190:
  4796   003A0A                     
  4797                           ; BSR set to: 0
  4798   003A0A  0E00               	movlw	0
  4799   003A0C  6E2F               	movwf	(_dtoa$2247+1)^0,c
  4800   003A0E  0E2B               	movlw	43
  4801   003A10  6E2E               	movwf	_dtoa$2247^0,c
  4802   003A12  EF0F  F01D         	goto	l4180
  4803   003A16                     l4178:
  4804                           
  4805                           ; BSR set to: 0
  4806   003A16  0E00               	movlw	0
  4807   003A18  6E2F               	movwf	(_dtoa$2247+1)^0,c
  4808   003A1A  0E2D               	movlw	45
  4809   003A1C  6E2E               	movwf	_dtoa$2247^0,c
  4810   003A1E                     l4180:
  4811                           
  4812                           ; BSR set to: 0
  4813   003A1E  C02E  F03E         	movff	_dtoa$2247,dtoa@s
  4814   003A22                     l1235:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4818   003A22  0E00               	movlw	0
  4819   003A24  6E3D               	movwf	(dtoa@i+1)^0,c
  4820   003A26  0E4F               	movlw	79
  4821   003A28  6E3C               	movwf	dtoa@i^0,c
  4822   003A2A                     
  4823                           ; BSR set to: 0
  4824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4825   003A2A  0E00               	movlw	0
  4826   003A2C  0101               	movlb	1	; () banked
  4827   003A2E  6F5B               	movwf	(_dbuf+79)& (0+255),b
  4828                           
  4829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4830   003A30  EF96  F01D         	goto	l4194
  4831   003A34                     l4184:
  4832                           
  4833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4834   003A34  063C               	decf	dtoa@i^0,f,c
  4835   003A36  A0D8               	btfss	status,0,c
  4836   003A38  063D               	decf	(dtoa@i+1)^0,f,c
  4837   003A3A                     
  4838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4839   003A3A  0E0C               	movlw	low _dbuf
  4840   003A3C  243C               	addwf	dtoa@i^0,w,c
  4841   003A3E  6ED9               	movwf	fsr2l,c
  4842   003A40  0E01               	movlw	high _dbuf
  4843   003A42  203D               	addwfc	(dtoa@i+1)^0,w,c
  4844   003A44  6EDA               	movwf	fsr2h,c
  4845   003A46  C034  F001         	movff	dtoa@n,___aomod@dividend
  4846   003A4A  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4847   003A4E  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4848   003A52  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4849   003A56  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4850   003A5A  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4851   003A5E  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4852   003A62  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4853   003A66  0E0A               	movlw	10
  4854   003A68  6E09               	movwf	___aomod@divisor^0,c
  4855   003A6A  0E00               	movlw	0
  4856   003A6C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4857   003A6E  0E00               	movlw	0
  4858   003A70  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4859   003A72  0E00               	movlw	0
  4860   003A74  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4861   003A76  0E00               	movlw	0
  4862   003A78  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4863   003A7A  0E00               	movlw	0
  4864   003A7C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4865   003A7E  0E00               	movlw	0
  4866   003A80  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4867   003A82  0E00               	movlw	0
  4868   003A84  6E10               	movwf	(___aomod@divisor+7)^0,c
  4869   003A86  EC40  F021         	call	___aomod	;wreg free
  4870   003A8A  C001  F026         	movff	?___aomod,??_dtoa
  4871   003A8E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4872   003A92  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4873   003A96  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4874   003A9A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4875   003A9E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4876   003AA2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4877   003AA6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4878   003AAA  C026  F013         	movff	??_dtoa,abs@a
  4879   003AAE  C027  F014         	movff	??_dtoa+1,abs@a+1
  4880   003AB2  ECE5  F029         	call	_abs	;wreg free
  4881   003AB6  5013               	movf	?_abs^0,w,c
  4882   003AB8  0F30               	addlw	48
  4883   003ABA  6EDF               	movwf	indf2,c
  4884   003ABC                     
  4885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4886   003ABC  0630               	decf	dtoa@p^0,f,c
  4887   003ABE  A0D8               	btfss	status,0,c
  4888   003AC0  0631               	decf	(dtoa@p+1)^0,f,c
  4889   003AC2                     
  4890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4891   003AC2  0632               	decf	dtoa@w^0,f,c
  4892   003AC4  A0D8               	btfss	status,0,c
  4893   003AC6  0633               	decf	(dtoa@w+1)^0,f,c
  4894   003AC8                     
  4895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4896   003AC8  C034  F001         	movff	dtoa@n,___aodiv@dividend
  4897   003ACC  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4898   003AD0  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4899   003AD4  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4900   003AD8  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4901   003ADC  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4902   003AE0  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4903   003AE4  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4904   003AE8  0E0A               	movlw	10
  4905   003AEA  6E09               	movwf	___aodiv@divisor^0,c
  4906   003AEC  0E00               	movlw	0
  4907   003AEE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4908   003AF0  0E00               	movlw	0
  4909   003AF2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4910   003AF4  0E00               	movlw	0
  4911   003AF6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4912   003AF8  0E00               	movlw	0
  4913   003AFA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4914   003AFC  0E00               	movlw	0
  4915   003AFE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4916   003B00  0E00               	movlw	0
  4917   003B02  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4918   003B04  0E00               	movlw	0
  4919   003B06  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4920   003B08  ECC6  F01F         	call	___aodiv	;wreg free
  4921   003B0C  C001  F034         	movff	?___aodiv,dtoa@n
  4922   003B10  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  4923   003B14  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  4924   003B18  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  4925   003B1C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  4926   003B20  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  4927   003B24  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  4928   003B28  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  4929   003B2C                     l4194:
  4930                           
  4931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4932   003B2C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  4933   003B2E  EFA1  F01D         	goto	u4201
  4934   003B32  503D               	movf	(dtoa@i+1)^0,w,c
  4935   003B34  E108               	bnz	u4200
  4936   003B36  043C               	decf	dtoa@i^0,w,c
  4937   003B38  A0D8               	btfss	status,0,c
  4938   003B3A  EFA1  F01D         	goto	u4201
  4939   003B3E  EFA3  F01D         	goto	u4200
  4940   003B42                     u4201:
  4941   003B42  EFBF  F01D         	goto	l4200
  4942   003B46                     u4200:
  4943   003B46  5034               	movf	dtoa@n^0,w,c
  4944   003B48  1035               	iorwf	(dtoa@n+1)^0,w,c
  4945   003B4A  1036               	iorwf	(dtoa@n+2)^0,w,c
  4946   003B4C  1037               	iorwf	(dtoa@n+3)^0,w,c
  4947   003B4E  1038               	iorwf	(dtoa@n+4)^0,w,c
  4948   003B50  1039               	iorwf	(dtoa@n+5)^0,w,c
  4949   003B52  103A               	iorwf	(dtoa@n+6)^0,w,c
  4950   003B54  103B               	iorwf	(dtoa@n+7)^0,w,c
  4951   003B56  A4D8               	btfss	status,2,c
  4952   003B58  EFB0  F01D         	goto	u4211
  4953   003B5C  EFB2  F01D         	goto	u4210
  4954   003B60                     u4211:
  4955   003B60  EF1A  F01D         	goto	l4184
  4956   003B64                     u4210:
  4957   003B64  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4958   003B66  EFBF  F01D         	goto	u4220
  4959   003B6A  5031               	movf	(dtoa@p+1)^0,w,c
  4960   003B6C  E106               	bnz	u4221
  4961   003B6E  0430               	decf	dtoa@p^0,w,c
  4962   003B70  B0D8               	btfsc	status,0,c
  4963   003B72  EFBD  F01D         	goto	u4221
  4964   003B76  EFBF  F01D         	goto	u4220
  4965   003B7A                     u4221:
  4966   003B7A  EF1A  F01D         	goto	l4184
  4967   003B7E                     u4220:
  4968   003B7E                     l4200:
  4969                           
  4970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4971   003B7E  503E               	movf	dtoa@s^0,w,c
  4972   003B80  B4D8               	btfsc	status,2,c
  4973   003B82  EFC5  F01D         	goto	u4231
  4974   003B86  EFC7  F01D         	goto	u4230
  4975   003B8A                     u4231:
  4976   003B8A  EFD2  F01D         	goto	l4206
  4977   003B8E                     u4230:
  4978   003B8E                     
  4979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4980   003B8E  063C               	decf	dtoa@i^0,f,c
  4981   003B90  A0D8               	btfss	status,0,c
  4982   003B92  063D               	decf	(dtoa@i+1)^0,f,c
  4983   003B94                     
  4984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4985   003B94  0E0C               	movlw	low _dbuf
  4986   003B96  243C               	addwf	dtoa@i^0,w,c
  4987   003B98  6ED9               	movwf	fsr2l,c
  4988   003B9A  0E01               	movlw	high _dbuf
  4989   003B9C  203D               	addwfc	(dtoa@i+1)^0,w,c
  4990   003B9E  6EDA               	movwf	fsr2h,c
  4991   003BA0  C03E  FFDF         	movff	dtoa@s,indf2
  4992   003BA4                     l4206:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4995   003BA4  C01C  F011         	movff	dtoa@fp,pad@fp
  4996   003BA8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4997   003BAC  0E0C               	movlw	low _dbuf
  4998   003BAE  243C               	addwf	dtoa@i^0,w,c
  4999   003BB0  6E13               	movwf	pad@buf^0,c
  5000   003BB2  0E01               	movlw	high _dbuf
  5001   003BB4  203D               	addwfc	(dtoa@i+1)^0,w,c
  5002   003BB6  6E14               	movwf	(pad@buf+1)^0,c
  5003   003BB8  C032  F015         	movff	dtoa@w,pad@p
  5004   003BBC  C033  F016         	movff	dtoa@w+1,pad@p+1
  5005   003BC0  EC55  F025         	call	_pad	;wreg free
  5006   003BC4  0012               	return		;funcret
  5007   003BC6                     __end_of_dtoa:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _pad *****************
  5011 ;; Defined at:
  5012 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5015 ;;		 -> sprintf@f(11), 
  5016 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5017 ;;		 -> dbuf(80), 
  5018 ;;  p               2   20[COMRAM] int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;  w               2   25[COMRAM] int 
  5021 ;;  i               2   23[COMRAM] int 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5031 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:       11 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 4
  5038 ;; This function calls:
  5039 ;;		_fputc
  5040 ;;		_fputs
  5041 ;; This function is called by:
  5042 ;;		_dtoa
  5043 ;;		_efgtoa
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text13
  5048   004AAA                     __ptext13:
  5049                           	callstack 0
  5050   004AAA                     _pad:
  5051                           	callstack 22
  5052   004AAA                     
  5053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5054   004AAA  BE16               	btfsc	(pad@p+1)^0,7,c
  5055   004AAC  EF5A  F025         	goto	u3871
  5056   004AB0  EF5C  F025         	goto	u3870
  5057   004AB4                     u3871:
  5058   004AB4  EF62  F025         	goto	l4054
  5059   004AB8                     u3870:
  5060   004AB8  C015  F01A         	movff	pad@p,pad@w
  5061   004ABC  C016  F01B         	movff	pad@p+1,pad@w+1
  5062   004AC0  EF66  F025         	goto	l1223
  5063   004AC4                     l4054:
  5064   004AC4  0E00               	movlw	0
  5065   004AC6  6E1B               	movwf	(pad@w+1)^0,c
  5066   004AC8  0E00               	movlw	0
  5067   004ACA  6E1A               	movwf	pad@w^0,c
  5068   004ACC                     l1223:
  5069                           
  5070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5071   004ACC  0E00               	movlw	0
  5072   004ACE  6E19               	movwf	(pad@i+1)^0,c
  5073   004AD0  0E00               	movlw	0
  5074   004AD2  6E18               	movwf	pad@i^0,c
  5075                           
  5076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5077   004AD4  EF78  F025         	goto	l4060
  5078   004AD8                     l4056:
  5079                           
  5080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5081   004AD8  0E00               	movlw	0
  5082   004ADA  6E02               	movwf	(fputc@c+1)^0,c
  5083   004ADC  0E20               	movlw	32
  5084   004ADE  6E01               	movwf	fputc@c^0,c
  5085   004AE0  C011  F003         	movff	pad@fp,fputc@fp
  5086   004AE4  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5087   004AE8  EC76  F023         	call	_fputc	;wreg free
  5088   004AEC                     
  5089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5090   004AEC  4A18               	infsnz	pad@i^0,f,c
  5091   004AEE  2A19               	incf	(pad@i+1)^0,f,c
  5092   004AF0                     l4060:
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5095   004AF0  501A               	movf	pad@w^0,w,c
  5096   004AF2  5C18               	subwf	pad@i^0,w,c
  5097   004AF4  5019               	movf	(pad@i+1)^0,w,c
  5098   004AF6  0A80               	xorlw	128
  5099   004AF8  6E17               	movwf	??_pad^0,c
  5100   004AFA  501B               	movf	(pad@w+1)^0,w,c
  5101   004AFC  0A80               	xorlw	128
  5102   004AFE  5817               	subwfb	??_pad^0,w,c
  5103   004B00  A0D8               	btfss	status,0,c
  5104   004B02  EF85  F025         	goto	u3881
  5105   004B06  EF87  F025         	goto	u3880
  5106   004B0A                     u3881:
  5107   004B0A  EF6C  F025         	goto	l4056
  5108   004B0E                     u3880:
  5109   004B0E                     
  5110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5111   004B0E  C013  F00A         	movff	pad@buf,fputs@s
  5112   004B12  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5113   004B16  C011  F00C         	movff	pad@fp,fputs@fp
  5114   004B1A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5115   004B1E  ECA2  F029         	call	_fputs	;wreg free
  5116   004B22  0012               	return		;funcret
  5117   004B24                     __end_of_pad:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _fputs *****************
  5121 ;; Defined at:
  5122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5125 ;;		 -> dbuf(80), 
  5126 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5127 ;;		 -> sprintf@f(11), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  i               2   14[COMRAM] int 
  5130 ;;  c               1   13[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    9[COMRAM] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5143 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;Total ram usage:        7 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 3
  5147 ;; This function calls:
  5148 ;;		_fputc
  5149 ;; This function is called by:
  5150 ;;		_pad
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text14
  5155   005344                     __ptext14:
  5156                           	callstack 0
  5157   005344                     _fputs:
  5158                           	callstack 22
  5159   005344  0E00               	movlw	0
  5160   005346  6E10               	movwf	(fputs@i+1)^0,c
  5161   005348  0E00               	movlw	0
  5162   00534A  6E0F               	movwf	fputs@i^0,c
  5163   00534C  EFB3  F029         	goto	l3576
  5164   005350                     l3572:
  5165   005350  C00E  F001         	movff	fputs@c,fputc@c
  5166   005354  6A02               	clrf	(fputc@c+1)^0,c
  5167   005356  C00C  F003         	movff	fputs@fp,fputc@fp
  5168   00535A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5169   00535E  EC76  F023         	call	_fputc	;wreg free
  5170   005362  4A0F               	infsnz	fputs@i^0,f,c
  5171   005364  2A10               	incf	(fputs@i+1)^0,f,c
  5172   005366                     l3576:
  5173   005366  500F               	movf	fputs@i^0,w,c
  5174   005368  240A               	addwf	fputs@s^0,w,c
  5175   00536A  6ED9               	movwf	fsr2l,c
  5176   00536C  5010               	movf	(fputs@i+1)^0,w,c
  5177   00536E  200B               	addwfc	(fputs@s+1)^0,w,c
  5178   005370  6EDA               	movwf	fsr2h,c
  5179   005372  50DF               	movf	indf2,w,c
  5180   005374  6E0E               	movwf	fputs@c^0,c
  5181   005376  500E               	movf	fputs@c^0,w,c
  5182   005378  A4D8               	btfss	status,2,c
  5183   00537A  EFC1  F029         	goto	u3121
  5184   00537E  EFC3  F029         	goto	u3120
  5185   005382                     u3121:
  5186   005382  EFA8  F029         	goto	l3572
  5187   005386                     u3120:
  5188   005386  0012               	return		;funcret
  5189   005388                     __end_of_fputs:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _fputc *****************
  5193 ;; Defined at:
  5194 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  c               2    0[COMRAM] int 
  5197 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5198 ;;		 -> sprintf@f(11), 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  2    0[COMRAM] int 
  5203 ;; Registers used:
  5204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        9 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 2
  5217 ;; This function calls:
  5218 ;;		_putch
  5219 ;; This function is called by:
  5220 ;;		_pad
  5221 ;;		_vfpfcnvrt
  5222 ;;		_fputs
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text15
  5227   0046EC                     __ptext15:
  5228                           	callstack 0
  5229   0046EC                     _fputc:
  5230                           	callstack 25
  5231   0046EC  5003               	movf	fputc@fp^0,w,c
  5232   0046EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5233   0046F0  B4D8               	btfsc	status,2,c
  5234   0046F2  EF7D  F023         	goto	u2691
  5235   0046F6  EF7F  F023         	goto	u2690
  5236   0046FA                     u2691:
  5237   0046FA  EF88  F023         	goto	l3358
  5238   0046FE                     u2690:
  5239   0046FE  5003               	movf	fputc@fp^0,w,c
  5240   004700  1004               	iorwf	(fputc@fp+1)^0,w,c
  5241   004702  A4D8               	btfss	status,2,c
  5242   004704  EF86  F023         	goto	u2701
  5243   004708  EF88  F023         	goto	u2700
  5244   00470C                     u2701:
  5245   00470C  EF8D  F023         	goto	l3360
  5246   004710                     u2700:
  5247   004710                     l3358:
  5248   004710  5001               	movf	fputc@c^0,w,c
  5249   004712  ECF5  F02A         	call	_putch
  5250   004716  EFDA  F023         	goto	l1383
  5251   00471A                     l3360:
  5252   00471A  EE20 F009          	lfsr	2,9
  5253   00471E  5003               	movf	fputc@fp^0,w,c
  5254   004720  26D9               	addwf	fsr2l,f,c
  5255   004722  5004               	movf	(fputc@fp+1)^0,w,c
  5256   004724  22DA               	addwfc	fsr2h,f,c
  5257   004726  50DE               	movf	postinc2,w,c
  5258   004728  10DE               	iorwf	postinc2,w,c
  5259   00472A  B4D8               	btfsc	status,2,c
  5260   00472C  EF9A  F023         	goto	u2711
  5261   004730  EF9C  F023         	goto	u2710
  5262   004734                     u2711:
  5263   004734  EFB7  F023         	goto	l3364
  5264   004738                     u2710:
  5265   004738  EE20 F009          	lfsr	2,9
  5266   00473C  5003               	movf	fputc@fp^0,w,c
  5267   00473E  26D9               	addwf	fsr2l,f,c
  5268   004740  5004               	movf	(fputc@fp+1)^0,w,c
  5269   004742  22DA               	addwfc	fsr2h,f,c
  5270   004744  EE10 F003          	lfsr	1,3
  5271   004748  5003               	movf	fputc@fp^0,w,c
  5272   00474A  26E1               	addwf	fsr1l,f,c
  5273   00474C  5004               	movf	(fputc@fp+1)^0,w,c
  5274   00474E  22E2               	addwfc	fsr1h,f,c
  5275   004750  50DE               	movf	postinc2,w,c
  5276   004752  5CE6               	subwf	postinc1,w,c
  5277   004754  50E6               	movf	postinc1,w,c
  5278   004756  0A80               	xorlw	128
  5279   004758  6E09               	movwf	(??_fputc+4)^0,c
  5280   00475A  50DE               	movf	postinc2,w,c
  5281   00475C  0A80               	xorlw	128
  5282   00475E  5809               	subwfb	(??_fputc+4)^0,w,c
  5283   004760  B0D8               	btfsc	status,0,c
  5284   004762  EFB5  F023         	goto	u2721
  5285   004766  EFB7  F023         	goto	u2720
  5286   00476A                     u2721:
  5287   00476A  EFDA  F023         	goto	l1383
  5288   00476E                     u2720:
  5289   00476E                     l3364:
  5290   00476E  EE20 F003          	lfsr	2,3
  5291   004772  5003               	movf	fputc@fp^0,w,c
  5292   004774  26D9               	addwf	fsr2l,f,c
  5293   004776  5004               	movf	(fputc@fp+1)^0,w,c
  5294   004778  22DA               	addwfc	fsr2h,f,c
  5295   00477A  CFDE F005          	movff	postinc2,??_fputc
  5296   00477E  CFDD F006          	movff	postdec2,??_fputc+1
  5297   004782  C003  FFD9         	movff	fputc@fp,fsr2l
  5298   004786  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5299   00478A  CFDE F007          	movff	postinc2,??_fputc+2
  5300   00478E  CFDD F008          	movff	postdec2,??_fputc+3
  5301   004792  5005               	movf	??_fputc^0,w,c
  5302   004794  2407               	addwf	(??_fputc+2)^0,w,c
  5303   004796  6ED9               	movwf	fsr2l,c
  5304   004798  5006               	movf	(??_fputc+1)^0,w,c
  5305   00479A  2008               	addwfc	(??_fputc+3)^0,w,c
  5306   00479C  6EDA               	movwf	fsr2h,c
  5307   00479E  C001  FFDF         	movff	fputc@c,indf2
  5308   0047A2  EE20 F003          	lfsr	2,3
  5309   0047A6  5003               	movf	fputc@fp^0,w,c
  5310   0047A8  26D9               	addwf	fsr2l,f,c
  5311   0047AA  5004               	movf	(fputc@fp+1)^0,w,c
  5312   0047AC  22DA               	addwfc	fsr2h,f,c
  5313   0047AE  2ADE               	incf	postinc2,f,c
  5314   0047B0  0E00               	movlw	0
  5315   0047B2  22DD               	addwfc	postdec2,f,c
  5316   0047B4                     l1383:
  5317   0047B4  0012               	return		;funcret
  5318   0047B6                     __end_of_fputc:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _putch *****************
  5322 ;; Defined at:
  5323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  c               1    wreg     unsigned char 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  c               1    0[COMRAM] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 1
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_fputc
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text16
  5352   0055EA                     __ptext16:
  5353                           	callstack 0
  5354   0055EA                     _putch:
  5355                           	callstack 25
  5356   0055EA  0012               	return		;funcret
  5357   0055EC                     __end_of_putch:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _abs *****************
  5361 ;; Defined at:
  5362 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  a               2   18[COMRAM] int 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   18[COMRAM] int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;Total ram usage:        4 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_dtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text17
  5391   0053CA                     __ptext17:
  5392                           	callstack 0
  5393   0053CA                     _abs:
  5394                           	callstack 25
  5395   0053CA  BE14               	btfsc	(abs@a+1)^0,7,c
  5396   0053CC  EFF2  F029         	goto	u3890
  5397   0053D0  5014               	movf	(abs@a+1)^0,w,c
  5398   0053D2  E106               	bnz	u3891
  5399   0053D4  0413               	decf	abs@a^0,w,c
  5400   0053D6  B0D8               	btfsc	status,0,c
  5401   0053D8  EFF0  F029         	goto	u3891
  5402   0053DC  EFF2  F029         	goto	u3890
  5403   0053E0                     u3891:
  5404   0053E0  EF00  F02A         	goto	l1342
  5405   0053E4                     u3890:
  5406   0053E4  C013  F015         	movff	abs@a,??_abs
  5407   0053E8  C014  F016         	movff	abs@a+1,??_abs+1
  5408   0053EC  1E15               	comf	??_abs^0,f,c
  5409   0053EE  1E16               	comf	(??_abs+1)^0,f,c
  5410   0053F0  4A15               	infsnz	??_abs^0,f,c
  5411   0053F2  2A16               	incf	(??_abs+1)^0,f,c
  5412   0053F4  C015  F013         	movff	??_abs,?_abs
  5413   0053F8  C016  F014         	movff	??_abs+1,?_abs+1
  5414   0053FC  EF04  F02A         	goto	l1345
  5415   005400                     l1342:
  5416   005400  C013  F013         	movff	abs@a,?_abs
  5417   005404  C014  F014         	movff	abs@a+1,?_abs+1
  5418   005408                     l1345:
  5419   005408  0012               	return		;funcret
  5420   00540A                     __end_of_abs:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function ___aomod *****************
  5424 ;; Defined at:
  5425 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  dividend        8    0[COMRAM] long long 
  5428 ;;  divisor         8    8[COMRAM] long long 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  sign            1   17[COMRAM] unsigned char 
  5431 ;;  counter         1   16[COMRAM] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  8    0[COMRAM] long long 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5441 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;Total ram usage:       18 bytes
  5446 ;; Hardware stack levels used: 1
  5447 ;; Hardware stack levels required when called: 1
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_dtoa
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text18
  5456   004280                     __ptext18:
  5457                           	callstack 0
  5458   004280                     ___aomod:
  5459                           	callstack 25
  5460   004280  0E00               	movlw	0
  5461   004282  6E12               	movwf	___aomod@sign^0,c
  5462   004284  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5463   004286  EF49  F021         	goto	u3200
  5464   00428A  EF47  F021         	goto	u3201
  5465   00428E                     u3201:
  5466   00428E  EF5B  F021         	goto	l3636
  5467   004292                     u3200:
  5468   004292  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5469   004294  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5470   004296  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5471   004298  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5472   00429A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5473   00429C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5474   00429E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5475   0042A0  6C01               	negf	___aomod@dividend^0,c
  5476   0042A2  0E00               	movlw	0
  5477   0042A4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5478   0042A6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5479   0042A8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5480   0042AA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5481   0042AC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5482   0042AE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5483   0042B0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5484   0042B2  0E01               	movlw	1
  5485   0042B4  6E12               	movwf	___aomod@sign^0,c
  5486   0042B6                     l3636:
  5487   0042B6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5488   0042B8  EF62  F021         	goto	u3210
  5489   0042BC  EF60  F021         	goto	u3211
  5490   0042C0                     u3211:
  5491   0042C0  EF72  F021         	goto	l3640
  5492   0042C4                     u3210:
  5493   0042C4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5494   0042C6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5495   0042C8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5496   0042CA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5497   0042CC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5498   0042CE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5499   0042D0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5500   0042D2  6C09               	negf	___aomod@divisor^0,c
  5501   0042D4  0E00               	movlw	0
  5502   0042D6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5503   0042D8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5504   0042DA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5505   0042DC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5506   0042DE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5507   0042E0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5508   0042E2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5509   0042E4                     l3640:
  5510   0042E4  5009               	movf	___aomod@divisor^0,w,c
  5511   0042E6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5512   0042E8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5513   0042EA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5514   0042EC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5515   0042EE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5516   0042F0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5517   0042F2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5518   0042F4  B4D8               	btfsc	status,2,c
  5519   0042F6  EF7F  F021         	goto	u3221
  5520   0042FA  EF81  F021         	goto	u3220
  5521   0042FE                     u3221:
  5522   0042FE  EFC9  F021         	goto	l3656
  5523   004302                     u3220:
  5524   004302  0E01               	movlw	1
  5525   004304  6E11               	movwf	___aomod@counter^0,c
  5526   004306  EF8F  F021         	goto	l3646
  5527   00430A                     l3644:
  5528   00430A  90D8               	bcf	status,0,c
  5529   00430C  3609               	rlcf	___aomod@divisor^0,f,c
  5530   00430E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5531   004310  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5532   004312  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5533   004314  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5534   004316  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5535   004318  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5536   00431A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5537   00431C  2A11               	incf	___aomod@counter^0,f,c
  5538   00431E                     l3646:
  5539   00431E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5540   004320  EF94  F021         	goto	u3231
  5541   004324  EF96  F021         	goto	u3230
  5542   004328                     u3231:
  5543   004328  EF85  F021         	goto	l3644
  5544   00432C                     u3230:
  5545   00432C                     l3648:
  5546   00432C  5009               	movf	___aomod@divisor^0,w,c
  5547   00432E  5C01               	subwf	___aomod@dividend^0,w,c
  5548   004330  500A               	movf	(___aomod@divisor+1)^0,w,c
  5549   004332  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5550   004334  500B               	movf	(___aomod@divisor+2)^0,w,c
  5551   004336  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5552   004338  500C               	movf	(___aomod@divisor+3)^0,w,c
  5553   00433A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5554   00433C  500D               	movf	(___aomod@divisor+4)^0,w,c
  5555   00433E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5556   004340  500E               	movf	(___aomod@divisor+5)^0,w,c
  5557   004342  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5558   004344  500F               	movf	(___aomod@divisor+6)^0,w,c
  5559   004346  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5560   004348  5010               	movf	(___aomod@divisor+7)^0,w,c
  5561   00434A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5562   00434C  A0D8               	btfss	status,0,c
  5563   00434E  EFAB  F021         	goto	u3241
  5564   004352  EFAD  F021         	goto	u3240
  5565   004356                     u3241:
  5566   004356  EFBD  F021         	goto	l3652
  5567   00435A                     u3240:
  5568   00435A  5009               	movf	___aomod@divisor^0,w,c
  5569   00435C  5E01               	subwf	___aomod@dividend^0,f,c
  5570   00435E  500A               	movf	(___aomod@divisor+1)^0,w,c
  5571   004360  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5572   004362  500B               	movf	(___aomod@divisor+2)^0,w,c
  5573   004364  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5574   004366  500C               	movf	(___aomod@divisor+3)^0,w,c
  5575   004368  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5576   00436A  500D               	movf	(___aomod@divisor+4)^0,w,c
  5577   00436C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5578   00436E  500E               	movf	(___aomod@divisor+5)^0,w,c
  5579   004370  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5580   004372  500F               	movf	(___aomod@divisor+6)^0,w,c
  5581   004374  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5582   004376  5010               	movf	(___aomod@divisor+7)^0,w,c
  5583   004378  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5584   00437A                     l3652:
  5585   00437A  90D8               	bcf	status,0,c
  5586   00437C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5587   00437E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5588   004380  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5589   004382  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5590   004384  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5591   004386  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5592   004388  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5593   00438A  3209               	rrcf	___aomod@divisor^0,f,c
  5594   00438C  2E11               	decfsz	___aomod@counter^0,f,c
  5595   00438E  EF96  F021         	goto	l3648
  5596   004392                     l3656:
  5597   004392  5012               	movf	___aomod@sign^0,w,c
  5598   004394  B4D8               	btfsc	status,2,c
  5599   004396  EFCF  F021         	goto	u3251
  5600   00439A  EFD1  F021         	goto	u3250
  5601   00439E                     u3251:
  5602   00439E  EFE1  F021         	goto	l3660
  5603   0043A2                     u3250:
  5604   0043A2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5605   0043A4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5606   0043A6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5607   0043A8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5608   0043AA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5609   0043AC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5610   0043AE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5611   0043B0  6C01               	negf	___aomod@dividend^0,c
  5612   0043B2  0E00               	movlw	0
  5613   0043B4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5614   0043B6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5615   0043B8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5616   0043BA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5617   0043BC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5618   0043BE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5619   0043C0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5620   0043C2                     l3660:
  5621   0043C2  C001  F001         	movff	___aomod@dividend,?___aomod
  5622   0043C6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5623   0043CA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5624   0043CE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5625   0043D2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5626   0043D6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5627   0043DA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5628   0043DE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5629   0043E2  0012               	return		;funcret
  5630   0043E4                     __end_of___aomod:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function ___aodiv *****************
  5634 ;; Defined at:
  5635 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  dividend        8    0[COMRAM] long long 
  5638 ;;  divisor         8    8[COMRAM] long long 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  quotient        8   18[COMRAM] long long 
  5641 ;;  sign            1   17[COMRAM] unsigned char 
  5642 ;;  counter         1   16[COMRAM] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  8    0[COMRAM] long long 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5652 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5653 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;Total ram usage:       26 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 1
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_dtoa
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text19
  5667   003F8C                     __ptext19:
  5668                           	callstack 0
  5669   003F8C                     ___aodiv:
  5670                           	callstack 25
  5671   003F8C  0E00               	movlw	0
  5672   003F8E  6E12               	movwf	___aodiv@sign^0,c
  5673   003F90  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5674   003F92  EFCF  F01F         	goto	u3130
  5675   003F96  EFCD  F01F         	goto	u3131
  5676   003F9A                     u3131:
  5677   003F9A  EFE1  F01F         	goto	l3592
  5678   003F9E                     u3130:
  5679   003F9E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5680   003FA0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5681   003FA2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5682   003FA4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5683   003FA6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5684   003FA8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5685   003FAA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5686   003FAC  6C09               	negf	___aodiv@divisor^0,c
  5687   003FAE  0E00               	movlw	0
  5688   003FB0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5689   003FB2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5690   003FB4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5691   003FB6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5692   003FB8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5693   003FBA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5694   003FBC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5695   003FBE  0E01               	movlw	1
  5696   003FC0  6E12               	movwf	___aodiv@sign^0,c
  5697   003FC2                     l3592:
  5698   003FC2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5699   003FC4  EFE8  F01F         	goto	u3140
  5700   003FC8  EFE6  F01F         	goto	u3141
  5701   003FCC                     u3141:
  5702   003FCC  EFFA  F01F         	goto	l3598
  5703   003FD0                     u3140:
  5704   003FD0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5705   003FD2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5706   003FD4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5707   003FD6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5708   003FD8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5709   003FDA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5710   003FDC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5711   003FDE  6C01               	negf	___aodiv@dividend^0,c
  5712   003FE0  0E00               	movlw	0
  5713   003FE2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5714   003FE4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5715   003FE6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5716   003FE8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5717   003FEA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5718   003FEC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5719   003FEE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5720   003FF0  0E01               	movlw	1
  5721   003FF2  1A12               	xorwf	___aodiv@sign^0,f,c
  5722   003FF4                     l3598:
  5723   003FF4  EE20  F013         	lfsr	2,___aodiv@quotient
  5724   003FF8  0E07               	movlw	7
  5725   003FFA                     u3151:
  5726   003FFA  6ADE               	clrf	postinc2,c
  5727   003FFC  06E8               	decf	wreg,f,c
  5728   003FFE  E2FD               	bc	u3151
  5729   004000  5009               	movf	___aodiv@divisor^0,w,c
  5730   004002  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5731   004004  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5732   004006  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5733   004008  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5734   00400A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5735   00400C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5736   00400E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5737   004010  B4D8               	btfsc	status,2,c
  5738   004012  EF0D  F020         	goto	u3161
  5739   004016  EF0F  F020         	goto	u3160
  5740   00401A                     u3161:
  5741   00401A  EF61  F020         	goto	l3620
  5742   00401E                     u3160:
  5743   00401E  0E01               	movlw	1
  5744   004020  6E11               	movwf	___aodiv@counter^0,c
  5745   004022  EF1D  F020         	goto	l3606
  5746   004026                     l3604:
  5747   004026  90D8               	bcf	status,0,c
  5748   004028  3609               	rlcf	___aodiv@divisor^0,f,c
  5749   00402A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5750   00402C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5751   00402E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5752   004030  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5753   004032  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5754   004034  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5755   004036  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5756   004038  2A11               	incf	___aodiv@counter^0,f,c
  5757   00403A                     l3606:
  5758   00403A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5759   00403C  EF22  F020         	goto	u3171
  5760   004040  EF24  F020         	goto	u3170
  5761   004044                     u3171:
  5762   004044  EF13  F020         	goto	l3604
  5763   004048                     u3170:
  5764   004048                     l3608:
  5765   004048  90D8               	bcf	status,0,c
  5766   00404A  3613               	rlcf	___aodiv@quotient^0,f,c
  5767   00404C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5768   00404E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5769   004050  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5770   004052  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5771   004054  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5772   004056  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5773   004058  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5774   00405A  5009               	movf	___aodiv@divisor^0,w,c
  5775   00405C  5C01               	subwf	___aodiv@dividend^0,w,c
  5776   00405E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5777   004060  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5778   004062  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5779   004064  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5780   004066  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5781   004068  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5782   00406A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5783   00406C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5784   00406E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5785   004070  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5786   004072  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5787   004074  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5788   004076  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5789   004078  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5790   00407A  A0D8               	btfss	status,0,c
  5791   00407C  EF42  F020         	goto	u3181
  5792   004080  EF44  F020         	goto	u3180
  5793   004084                     u3181:
  5794   004084  EF55  F020         	goto	l3616
  5795   004088                     u3180:
  5796   004088  5009               	movf	___aodiv@divisor^0,w,c
  5797   00408A  5E01               	subwf	___aodiv@dividend^0,f,c
  5798   00408C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5799   00408E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5800   004090  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5801   004092  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5802   004094  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5803   004096  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5804   004098  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5805   00409A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5806   00409C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5807   00409E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5808   0040A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5809   0040A2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5810   0040A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5811   0040A6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5812   0040A8  8013               	bsf	___aodiv@quotient^0,0,c
  5813   0040AA                     l3616:
  5814   0040AA  90D8               	bcf	status,0,c
  5815   0040AC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5816   0040AE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5817   0040B0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5818   0040B2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5819   0040B4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5820   0040B6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5821   0040B8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5822   0040BA  3209               	rrcf	___aodiv@divisor^0,f,c
  5823   0040BC  2E11               	decfsz	___aodiv@counter^0,f,c
  5824   0040BE  EF24  F020         	goto	l3608
  5825   0040C2                     l3620:
  5826   0040C2  5012               	movf	___aodiv@sign^0,w,c
  5827   0040C4  B4D8               	btfsc	status,2,c
  5828   0040C6  EF67  F020         	goto	u3191
  5829   0040CA  EF69  F020         	goto	u3190
  5830   0040CE                     u3191:
  5831   0040CE  EF79  F020         	goto	l3624
  5832   0040D2                     u3190:
  5833   0040D2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5834   0040D4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5835   0040D6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5836   0040D8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5837   0040DA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5838   0040DC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5839   0040DE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5840   0040E0  6C13               	negf	___aodiv@quotient^0,c
  5841   0040E2  0E00               	movlw	0
  5842   0040E4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5843   0040E6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5844   0040E8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5845   0040EA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5846   0040EC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5847   0040EE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5848   0040F0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5849   0040F2                     l3624:
  5850   0040F2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5851   0040F6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5852   0040FA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5853   0040FE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5854   004102  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5855   004106  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5856   00410A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5857   00410E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5858   004112  0012               	return		;funcret
  5859   004114                     __end_of___aodiv:
  5860                           	callstack 0
  5861                           
  5862 ;; *************** function _sendStringSerial4 *****************
  5863 ;; Defined at:
  5864 ;;		line 33 in file "serial.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  string          2    1[COMRAM] PTR unsigned char 
  5867 ;;		 -> main@buf(100), 
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;		None
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;Total ram usage:        2 bytes
  5884 ;; Hardware stack levels used: 1
  5885 ;; Hardware stack levels required when called: 2
  5886 ;; This function calls:
  5887 ;;		_sendCharSerial4
  5888 ;; This function is called by:
  5889 ;;		_main
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text20
  5894   0054BE                     __ptext20:
  5895                           	callstack 0
  5896   0054BE                     _sendStringSerial4:
  5897                           	callstack 28
  5898   0054BE                     
  5899                           ;serial.c: 34:     while (*string!=0){
  5900   0054BE  EF6A  F02A         	goto	l4972
  5901   0054C2                     l4968:
  5902                           
  5903                           ;serial.c: 35:         sendCharSerial4(*string++);
  5904   0054C2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5905   0054C6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5906   0054CA  50DF               	movf	indf2,w,c
  5907   0054CC  ECD2  F02A         	call	_sendCharSerial4
  5908   0054D0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  5909   0054D2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  5910   0054D4                     l4972:
  5911                           
  5912                           ;serial.c: 34:     while (*string!=0){
  5913   0054D4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5914   0054D8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5915   0054DC  50DF               	movf	indf2,w,c
  5916   0054DE  A4D8               	btfss	status,2,c
  5917   0054E0  EF74  F02A         	goto	u5151
  5918   0054E4  EF76  F02A         	goto	u5150
  5919   0054E8                     u5151:
  5920   0054E8  EF61  F02A         	goto	l4968
  5921   0054EC                     u5150:
  5922   0054EC  0012               	return		;funcret
  5923   0054EE                     __end_of_sendStringSerial4:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _sendCharSerial4 *****************
  5927 ;; Defined at:
  5928 ;;		line 26 in file "serial.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  charToSend      1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  charToSend      1    0[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;Total ram usage:        1 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 1
  5949 ;; This function calls:
  5950 ;;		Nothing
  5951 ;; This function is called by:
  5952 ;;		_sendStringSerial4
  5953 ;; This function uses a non-reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text21
  5957   0055A4                     __ptext21:
  5958                           	callstack 0
  5959   0055A4                     _sendCharSerial4:
  5960                           	callstack 28
  5961                           
  5962                           ;incstack = 0
  5963                           ;sendCharSerial4@charToSend stored from wreg
  5964   0055A4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5965   0055A6                     l203:
  5966   0055A6  010E               	movlb	14	; () banked
  5967   0055A8  A537               	btfss	55,2,b	;volatile
  5968   0055AA  EFD9  F02A         	goto	u4701
  5969   0055AE  EFDB  F02A         	goto	u4700
  5970   0055B2                     u4701:
  5971   0055B2  EFD3  F02A         	goto	l203
  5972   0055B6                     u4700:
  5973   0055B6                     
  5974                           ; BSR set to: 14
  5975                           ;serial.c: 28:     TX4REG = charToSend;
  5976   0055B6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5977   0055BA                     
  5978                           ; BSR set to: 14
  5979   0055BA  0012               	return		;funcret
  5980   0055BC                     __end_of_sendCharSerial4:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _readColours *****************
  5984 ;; Defined at:
  5985 ;;		line 105 in file "color.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  vals            2   11[COMRAM] PTR struct RGB
  5988 ;;		 -> vals(8), 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;Total ram usage:        2 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; Hardware stack levels required when called: 4
  6007 ;; This function calls:
  6008 ;;		_color_read_Blue
  6009 ;;		_color_read_Green
  6010 ;;		_color_read_Red
  6011 ;;		_color_read_lum
  6012 ;; This function is called by:
  6013 ;;		_main
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           	psect	text22
  6018   004CDA                     __ptext22:
  6019                           	callstack 0
  6020   004CDA                     _readColours:
  6021                           	callstack 26
  6022   004CDA                     
  6023                           ;color.c: 107:     vals ->R = color_read_Red();
  6024   004CDA  ECBF  F028         	call	_color_read_Red	;wreg free
  6025   004CDE  C00C  FFD9         	movff	readColours@vals,fsr2l
  6026   004CE2  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6027   004CE6  C005  FFDE         	movff	?_color_read_Red,postinc2
  6028   004CEA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6029                           
  6030                           ;color.c: 108:     vals ->B = color_read_Blue();
  6031   004CEE  EC0F  F029         	call	_color_read_Blue	;wreg free
  6032   004CF2  EE20 F004          	lfsr	2,4
  6033   004CF6  500C               	movf	readColours@vals^0,w,c
  6034   004CF8  26D9               	addwf	fsr2l,f,c
  6035   004CFA  500D               	movf	(readColours@vals+1)^0,w,c
  6036   004CFC  22DA               	addwfc	fsr2h,f,c
  6037   004CFE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6038   004D02  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6039                           
  6040                           ;color.c: 109:     vals ->G = color_read_Green();
  6041   004D06  ECE7  F028         	call	_color_read_Green	;wreg free
  6042   004D0A  EE20 F002          	lfsr	2,2
  6043   004D0E  500C               	movf	readColours@vals^0,w,c
  6044   004D10  26D9               	addwf	fsr2l,f,c
  6045   004D12  500D               	movf	(readColours@vals+1)^0,w,c
  6046   004D14  22DA               	addwfc	fsr2h,f,c
  6047   004D16  C005  FFDE         	movff	?_color_read_Green,postinc2
  6048   004D1A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6049                           
  6050                           ;color.c: 110:     vals ->L = color_read_lum();
  6051   004D1E  EC97  F028         	call	_color_read_lum	;wreg free
  6052   004D22  EE20 F006          	lfsr	2,6
  6053   004D26  500C               	movf	readColours@vals^0,w,c
  6054   004D28  26D9               	addwf	fsr2l,f,c
  6055   004D2A  500D               	movf	(readColours@vals+1)^0,w,c
  6056   004D2C  22DA               	addwfc	fsr2h,f,c
  6057   004D2E  C005  FFDE         	movff	?_color_read_lum,postinc2
  6058   004D32  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6059   004D36  0012               	return		;funcret
  6060   004D38                     __end_of_readColours:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _color_read_lum *****************
  6064 ;; Defined at:
  6065 ;;		line 49 in file "color.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  tmp             2    9[COMRAM] unsigned int 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  2    4[COMRAM] unsigned int 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0, cstack
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;Total ram usage:        7 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 3
  6086 ;; This function calls:
  6087 ;;		_I2C_2_Master_Read
  6088 ;;		_I2C_2_Master_RepStart
  6089 ;;		_I2C_2_Master_Start
  6090 ;;		_I2C_2_Master_Stop
  6091 ;;		_I2C_2_Master_Write
  6092 ;; This function is called by:
  6093 ;;		_readColours
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text23
  6098   00512E                     __ptext23:
  6099                           	callstack 0
  6100   00512E                     _color_read_lum:
  6101                           	callstack 26
  6102   00512E                     
  6103                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6104   00512E  ECEE  F02A         	call	_I2C_2_Master_Start	;wreg free
  6105                           
  6106                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6107   005132  0E52               	movlw	82
  6108   005134  ECDE  F02A         	call	_I2C_2_Master_Write
  6109                           
  6110                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6111   005138  0EB4               	movlw	180
  6112   00513A  ECDE  F02A         	call	_I2C_2_Master_Write
  6113                           
  6114                           ;color.c: 55:  I2C_2_Master_RepStart();
  6115   00513E  ECE4  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6116                           
  6117                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6118   005142  0E53               	movlw	83
  6119   005144  ECDE  F02A         	call	_I2C_2_Master_Write
  6120                           
  6121                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6122   005148  0E01               	movlw	1
  6123   00514A  ECC4  F029         	call	_I2C_2_Master_Read
  6124   00514E  6E07               	movwf	??_color_read_lum^0,c
  6125   005150  5007               	movf	??_color_read_lum^0,w,c
  6126   005152  6E0A               	movwf	color_read_lum@tmp^0,c
  6127   005154  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6128                           
  6129                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6130   005156  0E00               	movlw	0
  6131   005158  ECC4  F029         	call	_I2C_2_Master_Read
  6132   00515C  6E07               	movwf	??_color_read_lum^0,c
  6133   00515E  5007               	movf	??_color_read_lum^0,w,c
  6134   005160  6E09               	movwf	(??_color_read_lum+2)^0,c
  6135   005162  6A08               	clrf	(??_color_read_lum+1)^0,c
  6136   005164  500A               	movf	color_read_lum@tmp^0,w,c
  6137   005166  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6138   005168  6E0A               	movwf	color_read_lum@tmp^0,c
  6139   00516A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6140   00516C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6141   00516E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6142                           
  6143                           ;color.c: 59:  I2C_2_Master_Stop();
  6144   005170  ECE9  F02A         	call	_I2C_2_Master_Stop	;wreg free
  6145   005174                     
  6146                           ;color.c: 60:  return tmp;
  6147   005174  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6148   005178  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6149   00517C  0012               	return		;funcret
  6150   00517E                     __end_of_color_read_lum:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function _color_read_Red *****************
  6154 ;; Defined at:
  6155 ;;		line 63 in file "color.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  tmp             2    9[COMRAM] unsigned int 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  2    4[COMRAM] unsigned int 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6171 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6172 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6173 ;;Total ram usage:        7 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; Hardware stack levels required when called: 3
  6176 ;; This function calls:
  6177 ;;		_I2C_2_Master_Read
  6178 ;;		_I2C_2_Master_RepStart
  6179 ;;		_I2C_2_Master_Start
  6180 ;;		_I2C_2_Master_Stop
  6181 ;;		_I2C_2_Master_Write
  6182 ;; This function is called by:
  6183 ;;		_readColours
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           	psect	text24
  6188   00517E                     __ptext24:
  6189                           	callstack 0
  6190   00517E                     _color_read_Red:
  6191                           	callstack 26
  6192   00517E                     
  6193                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6194   00517E  ECEE  F02A         	call	_I2C_2_Master_Start	;wreg free
  6195                           
  6196                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6197   005182  0E52               	movlw	82
  6198   005184  ECDE  F02A         	call	_I2C_2_Master_Write
  6199                           
  6200                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6201   005188  0EB6               	movlw	182
  6202   00518A  ECDE  F02A         	call	_I2C_2_Master_Write
  6203                           
  6204                           ;color.c: 69:  I2C_2_Master_RepStart();
  6205   00518E  ECE4  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6206                           
  6207                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6208   005192  0E53               	movlw	83
  6209   005194  ECDE  F02A         	call	_I2C_2_Master_Write
  6210                           
  6211                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6212   005198  0E01               	movlw	1
  6213   00519A  ECC4  F029         	call	_I2C_2_Master_Read
  6214   00519E  6E07               	movwf	??_color_read_Red^0,c
  6215   0051A0  5007               	movf	??_color_read_Red^0,w,c
  6216   0051A2  6E0A               	movwf	color_read_Red@tmp^0,c
  6217   0051A4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6218                           
  6219                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6220   0051A6  0E00               	movlw	0
  6221   0051A8  ECC4  F029         	call	_I2C_2_Master_Read
  6222   0051AC  6E07               	movwf	??_color_read_Red^0,c
  6223   0051AE  5007               	movf	??_color_read_Red^0,w,c
  6224   0051B0  6E09               	movwf	(??_color_read_Red+2)^0,c
  6225   0051B2  6A08               	clrf	(??_color_read_Red+1)^0,c
  6226   0051B4  500A               	movf	color_read_Red@tmp^0,w,c
  6227   0051B6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6228   0051B8  6E0A               	movwf	color_read_Red@tmp^0,c
  6229   0051BA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6230   0051BC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6231   0051BE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6232                           
  6233                           ;color.c: 73:  I2C_2_Master_Stop();
  6234   0051C0  ECE9  F02A         	call	_I2C_2_Master_Stop	;wreg free
  6235   0051C4                     
  6236                           ;color.c: 74:  return tmp;
  6237   0051C4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6238   0051C8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6239   0051CC  0012               	return		;funcret
  6240   0051CE                     __end_of_color_read_Red:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _color_read_Green *****************
  6244 ;; Defined at:
  6245 ;;		line 76 in file "color.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;		None
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  tmp             2    9[COMRAM] unsigned int 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  2    4[COMRAM] unsigned int 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;Total ram usage:        7 bytes
  6264 ;; Hardware stack levels used: 1
  6265 ;; Hardware stack levels required when called: 3
  6266 ;; This function calls:
  6267 ;;		_I2C_2_Master_Read
  6268 ;;		_I2C_2_Master_RepStart
  6269 ;;		_I2C_2_Master_Start
  6270 ;;		_I2C_2_Master_Stop
  6271 ;;		_I2C_2_Master_Write
  6272 ;; This function is called by:
  6273 ;;		_readColours
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text25
  6278   0051CE                     __ptext25:
  6279                           	callstack 0
  6280   0051CE                     _color_read_Green:
  6281                           	callstack 26
  6282   0051CE                     
  6283                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6284   0051CE  ECEE  F02A         	call	_I2C_2_Master_Start	;wreg free
  6285                           
  6286                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6287   0051D2  0E52               	movlw	82
  6288   0051D4  ECDE  F02A         	call	_I2C_2_Master_Write
  6289                           
  6290                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6291   0051D8  0EB8               	movlw	184
  6292   0051DA  ECDE  F02A         	call	_I2C_2_Master_Write
  6293                           
  6294                           ;color.c: 82:  I2C_2_Master_RepStart();
  6295   0051DE  ECE4  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6296                           
  6297                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6298   0051E2  0E53               	movlw	83
  6299   0051E4  ECDE  F02A         	call	_I2C_2_Master_Write
  6300                           
  6301                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6302   0051E8  0E01               	movlw	1
  6303   0051EA  ECC4  F029         	call	_I2C_2_Master_Read
  6304   0051EE  6E07               	movwf	??_color_read_Green^0,c
  6305   0051F0  5007               	movf	??_color_read_Green^0,w,c
  6306   0051F2  6E0A               	movwf	color_read_Green@tmp^0,c
  6307   0051F4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6308                           
  6309                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6310   0051F6  0E00               	movlw	0
  6311   0051F8  ECC4  F029         	call	_I2C_2_Master_Read
  6312   0051FC  6E07               	movwf	??_color_read_Green^0,c
  6313   0051FE  5007               	movf	??_color_read_Green^0,w,c
  6314   005200  6E09               	movwf	(??_color_read_Green+2)^0,c
  6315   005202  6A08               	clrf	(??_color_read_Green+1)^0,c
  6316   005204  500A               	movf	color_read_Green@tmp^0,w,c
  6317   005206  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6318   005208  6E0A               	movwf	color_read_Green@tmp^0,c
  6319   00520A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6320   00520C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6321   00520E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6322                           
  6323                           ;color.c: 86:  I2C_2_Master_Stop();
  6324   005210  ECE9  F02A         	call	_I2C_2_Master_Stop	;wreg free
  6325   005214                     
  6326                           ;color.c: 87:  return tmp;
  6327   005214  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6328   005218  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6329   00521C  0012               	return		;funcret
  6330   00521E                     __end_of_color_read_Green:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _color_read_Blue *****************
  6334 ;; Defined at:
  6335 ;;		line 90 in file "color.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;		None
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  tmp             2    9[COMRAM] unsigned int 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  2    4[COMRAM] unsigned int 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;Total ram usage:        7 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 3
  6356 ;; This function calls:
  6357 ;;		_I2C_2_Master_Read
  6358 ;;		_I2C_2_Master_RepStart
  6359 ;;		_I2C_2_Master_Start
  6360 ;;		_I2C_2_Master_Stop
  6361 ;;		_I2C_2_Master_Write
  6362 ;; This function is called by:
  6363 ;;		_readColours
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           	psect	text26
  6368   00521E                     __ptext26:
  6369                           	callstack 0
  6370   00521E                     _color_read_Blue:
  6371                           	callstack 26
  6372   00521E                     
  6373                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6374   00521E  ECEE  F02A         	call	_I2C_2_Master_Start	;wreg free
  6375                           
  6376                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6377   005222  0E52               	movlw	82
  6378   005224  ECDE  F02A         	call	_I2C_2_Master_Write
  6379                           
  6380                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6381   005228  0EBA               	movlw	186
  6382   00522A  ECDE  F02A         	call	_I2C_2_Master_Write
  6383                           
  6384                           ;color.c: 96:  I2C_2_Master_RepStart();
  6385   00522E  ECE4  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6386                           
  6387                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6388   005232  0E53               	movlw	83
  6389   005234  ECDE  F02A         	call	_I2C_2_Master_Write
  6390                           
  6391                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6392   005238  0E01               	movlw	1
  6393   00523A  ECC4  F029         	call	_I2C_2_Master_Read
  6394   00523E  6E07               	movwf	??_color_read_Blue^0,c
  6395   005240  5007               	movf	??_color_read_Blue^0,w,c
  6396   005242  6E0A               	movwf	color_read_Blue@tmp^0,c
  6397   005244  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6398                           
  6399                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6400   005246  0E00               	movlw	0
  6401   005248  ECC4  F029         	call	_I2C_2_Master_Read
  6402   00524C  6E07               	movwf	??_color_read_Blue^0,c
  6403   00524E  5007               	movf	??_color_read_Blue^0,w,c
  6404   005250  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6405   005252  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6406   005254  500A               	movf	color_read_Blue@tmp^0,w,c
  6407   005256  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6408   005258  6E0A               	movwf	color_read_Blue@tmp^0,c
  6409   00525A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6410   00525C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6411   00525E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6412                           
  6413                           ;color.c: 100:  I2C_2_Master_Stop();
  6414   005260  ECE9  F02A         	call	_I2C_2_Master_Stop	;wreg free
  6415   005264                     
  6416                           ;color.c: 101:  return tmp;
  6417   005264  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6418   005268  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6419   00526C  0012               	return		;funcret
  6420   00526E                     __end_of_color_read_Blue:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _I2C_2_Master_RepStart *****************
  6424 ;; Defined at:
  6425 ;;		line 33 in file "i2c.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      void 
  6432 ;; Registers used:
  6433 ;;		wreg, status,2, status,0, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used: 1
  6445 ;; Hardware stack levels required when called: 2
  6446 ;; This function calls:
  6447 ;;		_I2C_2_Master_Idle
  6448 ;; This function is called by:
  6449 ;;		_color_read_lum
  6450 ;;		_color_read_Red
  6451 ;;		_color_read_Green
  6452 ;;		_color_read_Blue
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text27
  6457   0055C8                     __ptext27:
  6458                           	callstack 0
  6459   0055C8                     _I2C_2_Master_RepStart:
  6460                           	callstack 26
  6461   0055C8                     
  6462                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6463   0055C8  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  6464   0055CC                     
  6465                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6466   0055CC  010E               	movlb	14	; () banked
  6467   0055CE  83DA               	bsf	218,1,b	;volatile
  6468   0055D0                     
  6469                           ; BSR set to: 14
  6470   0055D0  0012               	return		;funcret
  6471   0055D2                     __end_of_I2C_2_Master_RepStart:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function _I2C_2_Master_Read *****************
  6475 ;; Defined at:
  6476 ;;		line 51 in file "i2c.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  ack             1    wreg     unsigned char 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  ack             1    2[COMRAM] unsigned char 
  6481 ;;  tmp             1    3[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      unsigned char 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6494 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6495 ;;Total ram usage:        3 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 2
  6498 ;; This function calls:
  6499 ;;		_I2C_2_Master_Idle
  6500 ;; This function is called by:
  6501 ;;		_color_read_lum
  6502 ;;		_color_read_Red
  6503 ;;		_color_read_Green
  6504 ;;		_color_read_Blue
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text28
  6509   005388                     __ptext28:
  6510                           	callstack 0
  6511   005388                     _I2C_2_Master_Read:
  6512                           	callstack 26
  6513                           
  6514                           ; BSR set to: 14
  6515                           ;incstack = 0
  6516                           ;I2C_2_Master_Read@ack stored from wreg
  6517   005388  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6518   00538A                     
  6519                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6520   00538A  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  6521   00538E                     
  6522                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6523   00538E  010E               	movlb	14	; () banked
  6524   005390  87DA               	bsf	218,3,b	;volatile
  6525                           
  6526                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6527   005392  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  6528   005396                     
  6529                           ;i2c.c: 57:   tmp = SSP2BUF;
  6530   005396  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6531                           
  6532                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6533   00539A  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  6534   00539E                     
  6535                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6536   00539E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6537   0053A0  B4D8               	btfsc	status,2,c
  6538   0053A2  EFD5  F029         	goto	u4561
  6539   0053A6  EFD9  F029         	goto	u4560
  6540   0053AA                     u4561:
  6541   0053AA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6542   0053AC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6543   0053AE  EFDA  F029         	goto	u4578
  6544   0053B2                     u4560:
  6545   0053B2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6546   0053B4                     u4578:
  6547   0053B4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6548   0053B6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6549   0053B8  010E               	movlb	14	; () banked
  6550   0053BA  51DA               	movf	218,w,b	;volatile
  6551   0053BC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6552   0053BE  0BDF               	andlw	-33
  6553   0053C0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6554   0053C2  6FDA               	movwf	218,b	;volatile
  6555   0053C4                     
  6556                           ; BSR set to: 14
  6557                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6558   0053C4  89DA               	bsf	218,4,b	;volatile
  6559   0053C6                     
  6560                           ; BSR set to: 14
  6561                           ;i2c.c: 61:   return tmp;
  6562   0053C6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6563   0053C8                     
  6564                           ; BSR set to: 14
  6565   0053C8  0012               	return		;funcret
  6566   0053CA                     __end_of_I2C_2_Master_Read:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _initUSART4 *****************
  6570 ;; Defined at:
  6571 ;;		line 4 in file "serial.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;Total ram usage:        0 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 1
  6592 ;; This function calls:
  6593 ;;		Nothing
  6594 ;; This function is called by:
  6595 ;;		_main
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text29
  6600   005586                     __ptext29:
  6601                           	callstack 0
  6602   005586                     _initUSART4:
  6603                           	callstack 29
  6604   005586                     
  6605                           ;serial.c: 5:     RC0PPS = 0x12;
  6606   005586  0E12               	movlw	18
  6607   005588  010E               	movlb	14	; () banked
  6608   00558A  6F62               	movwf	98,b	;volatile
  6609                           
  6610                           ;serial.c: 6:     RX4PPS = 0x11;
  6611   00558C  0E11               	movlw	17
  6612   00558E  6F15               	movwf	21,b	;volatile
  6613   005590                     
  6614                           ; BSR set to: 14
  6615                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6616   005590  97E9               	bcf	233,3,b	;volatile
  6617   005592                     
  6618                           ; BSR set to: 14
  6619                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6620   005592  95E8               	bcf	232,2,b	;volatile
  6621                           
  6622                           ;serial.c: 9:     SP4BRGL = 51;
  6623   005594  0E33               	movlw	51
  6624   005596  6FE5               	movwf	229,b	;volatile
  6625                           
  6626                           ;serial.c: 10:     SP4BRGH = 0;
  6627   005598  0E00               	movlw	0
  6628   00559A  6FE6               	movwf	230,b	;volatile
  6629   00559C                     
  6630                           ; BSR set to: 14
  6631                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  6632   00559C  89E7               	bsf	231,4,b	;volatile
  6633   00559E                     
  6634                           ; BSR set to: 14
  6635                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  6636   00559E  8BE8               	bsf	232,5,b	;volatile
  6637   0055A0                     
  6638                           ; BSR set to: 14
  6639                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  6640   0055A0  8FE7               	bsf	231,7,b	;volatile
  6641   0055A2                     
  6642                           ; BSR set to: 14
  6643   0055A2  0012               	return		;funcret
  6644   0055A4                     __end_of_initUSART4:
  6645                           	callstack 0
  6646                           
  6647 ;; *************** function _initDCmotorsPWM *****************
  6648 ;; Defined at:
  6649 ;;		line 5 in file "dc_motor.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;Total ram usage:        2 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 1
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_main
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text30
  6678   004A22                     __ptext30:
  6679                           	callstack 0
  6680   004A22                     _initDCmotorsPWM:
  6681                           	callstack 29
  6682   004A22                     
  6683                           ;dc_motor.c: 9:     RE2PPS=0x05;
  6684   004A22  0E05               	movlw	5
  6685   004A24  010E               	movlb	14	; () banked
  6686   004A26  6F74               	movwf	116,b	;volatile
  6687                           
  6688                           ;dc_motor.c: 10:     RE4PPS=0x06;
  6689   004A28  0E06               	movlw	6
  6690   004A2A  6F76               	movwf	118,b	;volatile
  6691                           
  6692                           ;dc_motor.c: 11:     RC7PPS=0x07;
  6693   004A2C  0E07               	movlw	7
  6694   004A2E  6F69               	movwf	105,b	;volatile
  6695                           
  6696                           ;dc_motor.c: 12:     RG6PPS=0x08;
  6697   004A30  0E08               	movlw	8
  6698   004A32  6F88               	movwf	136,b	;volatile
  6699   004A34                     
  6700                           ; BSR set to: 14
  6701                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  6702   004A34  9485               	bcf	133,2,c	;volatile
  6703   004A36                     
  6704                           ; BSR set to: 14
  6705                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  6706   004A36  9885               	bcf	133,4,c	;volatile
  6707   004A38                     
  6708                           ; BSR set to: 14
  6709                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  6710   004A38  9E83               	bcf	131,7,c	;volatile
  6711   004A3A                     
  6712                           ; BSR set to: 14
  6713                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6714   004A3A  9C87               	bcf	135,6,c	;volatile
  6715                           
  6716                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  6717   004A3C  50BD               	movf	189,w,c	;volatile
  6718   004A3E  0B8F               	andlw	-113
  6719   004A40  0930               	iorlw	48
  6720   004A42  6EBD               	movwf	189,c	;volatile
  6721                           
  6722                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  6723   004A44  0EE0               	movlw	-32
  6724   004A46  16BE               	andwf	190,f,c	;volatile
  6725                           
  6726                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  6727   004A48  50BF               	movf	191,w,c	;volatile
  6728   004A4A  0BF0               	andlw	-16
  6729   004A4C  0901               	iorlw	1
  6730   004A4E  6EBF               	movwf	191,c	;volatile
  6731   004A50                     
  6732                           ; BSR set to: 14
  6733                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  6734   004A50  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6735   004A54                     
  6736                           ; BSR set to: 14
  6737                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  6738   004A54  8EBD               	bsf	189,7,c	;volatile
  6739                           
  6740                           ;dc_motor.c: 33:     CCPR1H=0;
  6741   004A56  0E00               	movlw	0
  6742   004A58  6EAA               	movwf	170,c	;volatile
  6743                           
  6744                           ;dc_motor.c: 34:     CCPR2H=0;
  6745   004A5A  0E00               	movlw	0
  6746   004A5C  6EA6               	movwf	166,c	;volatile
  6747                           
  6748                           ;dc_motor.c: 35:     CCPR3H=0;
  6749   004A5E  0E00               	movlw	0
  6750   004A60  010F               	movlb	15	; () banked
  6751   004A62  6F25               	movwf	37,b	;volatile
  6752                           
  6753                           ;dc_motor.c: 36:     CCPR4H=0;
  6754   004A64  0E00               	movlw	0
  6755   004A66  6F21               	movwf	33,b	;volatile
  6756                           
  6757                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  6758   004A68  0EFC               	movlw	-4
  6759   004A6A  16AD               	andwf	173,f,c	;volatile
  6760                           
  6761                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  6762   004A6C  0EF3               	movlw	-13
  6763   004A6E  16AD               	andwf	173,f,c	;volatile
  6764                           
  6765                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  6766   004A70  0ECF               	movlw	-49
  6767   004A72  16AD               	andwf	173,f,c	;volatile
  6768                           
  6769                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  6770   004A74  0E3F               	movlw	-193
  6771   004A76  16AD               	andwf	173,f,c	;volatile
  6772   004A78                     
  6773                           ; BSR set to: 15
  6774                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  6775   004A78  88AB               	bsf	171,4,c	;volatile
  6776                           
  6777                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  6778   004A7A  50AB               	movf	171,w,c	;volatile
  6779   004A7C  0BF0               	andlw	-16
  6780   004A7E  090C               	iorlw	12
  6781   004A80  6EAB               	movwf	171,c	;volatile
  6782   004A82                     
  6783                           ; BSR set to: 15
  6784                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  6785   004A82  8EAB               	bsf	171,7,c	;volatile
  6786   004A84                     
  6787                           ; BSR set to: 15
  6788                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  6789   004A84  88A7               	bsf	167,4,c	;volatile
  6790                           
  6791                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  6792   004A86  50A7               	movf	167,w,c	;volatile
  6793   004A88  0BF0               	andlw	-16
  6794   004A8A  090C               	iorlw	12
  6795   004A8C  6EA7               	movwf	167,c	;volatile
  6796   004A8E                     
  6797                           ; BSR set to: 15
  6798                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  6799   004A8E  8EA7               	bsf	167,7,c	;volatile
  6800   004A90                     
  6801                           ; BSR set to: 15
  6802                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  6803   004A90  8926               	bsf	38,4,b	;volatile
  6804                           
  6805                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  6806   004A92  5126               	movf	38,w,b	;volatile
  6807   004A94  0BF0               	andlw	-16
  6808   004A96  090C               	iorlw	12
  6809   004A98  6F26               	movwf	38,b	;volatile
  6810   004A9A                     
  6811                           ; BSR set to: 15
  6812                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  6813   004A9A  8F26               	bsf	38,7,b	;volatile
  6814   004A9C                     
  6815                           ; BSR set to: 15
  6816                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  6817   004A9C  8922               	bsf	34,4,b	;volatile
  6818                           
  6819                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  6820   004A9E  5122               	movf	34,w,b	;volatile
  6821   004AA0  0BF0               	andlw	-16
  6822   004AA2  090C               	iorlw	12
  6823   004AA4  6F22               	movwf	34,b	;volatile
  6824   004AA6                     
  6825                           ; BSR set to: 15
  6826                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  6827   004AA6  8F22               	bsf	34,7,b	;volatile
  6828   004AA8                     
  6829                           ; BSR set to: 15
  6830   004AA8  0012               	return		;funcret
  6831   004AAA                     __end_of_initDCmotorsPWM:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _colour_rel *****************
  6835 ;; Defined at:
  6836 ;;		line 114 in file "color.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  vals            2   74[COMRAM] PTR struct RGB
  6839 ;;		 -> vals(8), 
  6840 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  6841 ;;		 -> rel(12), 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  B               4   20[BANK0 ] float 
  6844 ;;  G               4   16[BANK0 ] float 
  6845 ;;  R               4   12[BANK0 ] float 
  6846 ;;  L               4    0[BANK0 ] float 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;Total ram usage:       28 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 2
  6863 ;; This function calls:
  6864 ;;		___fladd
  6865 ;;		___fldiv
  6866 ;;		___xxtofl
  6867 ;; This function is called by:
  6868 ;;		_main
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text31
  6873   003314                     __ptext31:
  6874                           	callstack 0
  6875   003314                     _colour_rel:
  6876                           	callstack 28
  6877   003314                     
  6878                           ;color.c: 115:     float R = vals->R;
  6879   003314  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  6880   003318  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  6881   00331C  CFDE F001          	movff	postinc2,___xxtofl@val
  6882   003320  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6883   003324  0E00               	movlw	0
  6884   003326  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6885   003328  0EFF               	movlw	-1
  6886   00332A  6E03               	movwf	(___xxtofl@val+2)^0,c
  6887   00332C  6E04               	movwf	(___xxtofl@val+3)^0,c
  6888   00332E  0E01               	movlw	1
  6889   003330  ECEC  F01E         	call	___xxtofl
  6890   003334  C001  F06C         	movff	?___xxtofl,colour_rel@R
  6891   003338  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  6892   00333C  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  6893   003340  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  6894                           
  6895                           ;color.c: 116:     float G = vals->G;
  6896   003344  EE20 F002          	lfsr	2,2
  6897   003348  504B               	movf	colour_rel@vals^0,w,c
  6898   00334A  26D9               	addwf	fsr2l,f,c
  6899   00334C  504C               	movf	(colour_rel@vals+1)^0,w,c
  6900   00334E  22DA               	addwfc	fsr2h,f,c
  6901   003350  CFDE F001          	movff	postinc2,___xxtofl@val
  6902   003354  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6903   003358  0E00               	movlw	0
  6904   00335A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6905   00335C  0EFF               	movlw	-1
  6906   00335E  6E03               	movwf	(___xxtofl@val+2)^0,c
  6907   003360  6E04               	movwf	(___xxtofl@val+3)^0,c
  6908   003362  0E01               	movlw	1
  6909   003364  ECEC  F01E         	call	___xxtofl
  6910   003368  C001  F070         	movff	?___xxtofl,colour_rel@G
  6911   00336C  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  6912   003370  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  6913   003374  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  6914                           
  6915                           ;color.c: 117:     float B = vals->B;
  6916   003378  EE20 F004          	lfsr	2,4
  6917   00337C  504B               	movf	colour_rel@vals^0,w,c
  6918   00337E  26D9               	addwf	fsr2l,f,c
  6919   003380  504C               	movf	(colour_rel@vals+1)^0,w,c
  6920   003382  22DA               	addwfc	fsr2h,f,c
  6921   003384  CFDE F001          	movff	postinc2,___xxtofl@val
  6922   003388  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6923   00338C  0E00               	movlw	0
  6924   00338E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6925   003390  0EFF               	movlw	-1
  6926   003392  6E03               	movwf	(___xxtofl@val+2)^0,c
  6927   003394  6E04               	movwf	(___xxtofl@val+3)^0,c
  6928   003396  0E01               	movlw	1
  6929   003398  ECEC  F01E         	call	___xxtofl
  6930   00339C  C001  F074         	movff	?___xxtofl,colour_rel@B
  6931   0033A0  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  6932   0033A4  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  6933   0033A8  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  6934                           
  6935                           ;color.c: 118:     float L = vals->L;
  6936   0033AC  EE20 F006          	lfsr	2,6
  6937   0033B0  504B               	movf	colour_rel@vals^0,w,c
  6938   0033B2  26D9               	addwf	fsr2l,f,c
  6939   0033B4  504C               	movf	(colour_rel@vals+1)^0,w,c
  6940   0033B6  22DA               	addwfc	fsr2h,f,c
  6941   0033B8  CFDE F001          	movff	postinc2,___xxtofl@val
  6942   0033BC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6943   0033C0  0E00               	movlw	0
  6944   0033C2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6945   0033C4  0EFF               	movlw	-1
  6946   0033C6  6E03               	movwf	(___xxtofl@val+2)^0,c
  6947   0033C8  6E04               	movwf	(___xxtofl@val+3)^0,c
  6948   0033CA  0E01               	movlw	1
  6949   0033CC  ECEC  F01E         	call	___xxtofl
  6950   0033D0  C001  F060         	movff	?___xxtofl,colour_rel@L
  6951   0033D4  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  6952   0033D8  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  6953   0033DC  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  6954   0033E0                     
  6955                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6956   0033E0  C070  F005         	movff	colour_rel@G,___fladd@a
  6957   0033E4  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  6958   0033E8  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  6959   0033EC  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  6960   0033F0  C06C  F001         	movff	colour_rel@R,___fladd@b
  6961   0033F4  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  6962   0033F8  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  6963   0033FC  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  6964   003400  EC98  F011         	call	___fladd	;wreg free
  6965   003404  C001  F064         	movff	?___fladd,_colour_rel$2641
  6966   003408  C002  F065         	movff	?___fladd+1,_colour_rel$2641+1
  6967   00340C  C003  F066         	movff	?___fladd+2,_colour_rel$2641+2
  6968   003410  C004  F067         	movff	?___fladd+3,_colour_rel$2641+3
  6969   003414                     
  6970                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6971   003414  C074  F005         	movff	colour_rel@B,___fladd@a
  6972   003418  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  6973   00341C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  6974   003420  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  6975   003424  C064  F001         	movff	_colour_rel$2641,___fladd@b
  6976   003428  C065  F002         	movff	_colour_rel$2641+1,___fladd@b+1
  6977   00342C  C066  F003         	movff	_colour_rel$2641+2,___fladd@b+2
  6978   003430  C067  F004         	movff	_colour_rel$2641+3,___fladd@b+3
  6979   003434  EC98  F011         	call	___fladd	;wreg free
  6980   003438  C001  F068         	movff	?___fladd,_colour_rel$2642
  6981   00343C  C002  F069         	movff	?___fladd+1,_colour_rel$2642+1
  6982   003440  C003  F06A         	movff	?___fladd+2,_colour_rel$2642+2
  6983   003444  C004  F06B         	movff	?___fladd+3,_colour_rel$2642+3
  6984                           
  6985                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6986   003448  C06C  F032         	movff	colour_rel@R,___fldiv@b
  6987   00344C  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  6988   003450  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  6989   003454  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  6990   003458  C060  F005         	movff	colour_rel@L,___fladd@a
  6991   00345C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  6992   003460  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  6993   003464  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  6994   003468  C068  F001         	movff	_colour_rel$2642,___fladd@b
  6995   00346C  C069  F002         	movff	_colour_rel$2642+1,___fladd@b+1
  6996   003470  C06A  F003         	movff	_colour_rel$2642+2,___fladd@b+2
  6997   003474  C06B  F004         	movff	_colour_rel$2642+3,___fladd@b+3
  6998   003478  EC98  F011         	call	___fladd	;wreg free
  6999   00347C  C001  F036         	movff	?___fladd,___fldiv@a
  7000   003480  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7001   003484  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7002   003488  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7003   00348C  EC0D  F016         	call	___fldiv	;wreg free
  7004   003490  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7005   003494  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7006   003498  C032  FFDE         	movff	?___fldiv,postinc2
  7007   00349C  C033  FFDE         	movff	?___fldiv+1,postinc2
  7008   0034A0  C034  FFDE         	movff	?___fldiv+2,postinc2
  7009   0034A4  C035  FFDE         	movff	?___fldiv+3,postinc2
  7010   0034A8                     
  7011                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7012   0034A8  C070  F005         	movff	colour_rel@G,___fladd@a
  7013   0034AC  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7014   0034B0  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7015   0034B4  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7016   0034B8  C06C  F001         	movff	colour_rel@R,___fladd@b
  7017   0034BC  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7018   0034C0  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7019   0034C4  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7020   0034C8  EC98  F011         	call	___fladd	;wreg free
  7021   0034CC  C001  F064         	movff	?___fladd,_colour_rel$2641
  7022   0034D0  C002  F065         	movff	?___fladd+1,_colour_rel$2641+1
  7023   0034D4  C003  F066         	movff	?___fladd+2,_colour_rel$2641+2
  7024   0034D8  C004  F067         	movff	?___fladd+3,_colour_rel$2641+3
  7025   0034DC                     
  7026                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7027   0034DC  C074  F005         	movff	colour_rel@B,___fladd@a
  7028   0034E0  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7029   0034E4  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7030   0034E8  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7031   0034EC  C064  F001         	movff	_colour_rel$2641,___fladd@b
  7032   0034F0  C065  F002         	movff	_colour_rel$2641+1,___fladd@b+1
  7033   0034F4  C066  F003         	movff	_colour_rel$2641+2,___fladd@b+2
  7034   0034F8  C067  F004         	movff	_colour_rel$2641+3,___fladd@b+3
  7035   0034FC  EC98  F011         	call	___fladd	;wreg free
  7036   003500  C001  F068         	movff	?___fladd,_colour_rel$2642
  7037   003504  C002  F069         	movff	?___fladd+1,_colour_rel$2642+1
  7038   003508  C003  F06A         	movff	?___fladd+2,_colour_rel$2642+2
  7039   00350C  C004  F06B         	movff	?___fladd+3,_colour_rel$2642+3
  7040                           
  7041                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7042   003510  C074  F032         	movff	colour_rel@B,___fldiv@b
  7043   003514  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7044   003518  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7045   00351C  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7046   003520  C060  F005         	movff	colour_rel@L,___fladd@a
  7047   003524  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7048   003528  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7049   00352C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7050   003530  C068  F001         	movff	_colour_rel$2642,___fladd@b
  7051   003534  C069  F002         	movff	_colour_rel$2642+1,___fladd@b+1
  7052   003538  C06A  F003         	movff	_colour_rel$2642+2,___fladd@b+2
  7053   00353C  C06B  F004         	movff	_colour_rel$2642+3,___fladd@b+3
  7054   003540  EC98  F011         	call	___fladd	;wreg free
  7055   003544  C001  F036         	movff	?___fladd,___fldiv@a
  7056   003548  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7057   00354C  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7058   003550  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7059   003554  EC0D  F016         	call	___fldiv	;wreg free
  7060   003558  EE20 F008          	lfsr	2,8
  7061   00355C  504D               	movf	colour_rel@rel^0,w,c
  7062   00355E  26D9               	addwf	fsr2l,f,c
  7063   003560  504E               	movf	(colour_rel@rel+1)^0,w,c
  7064   003562  22DA               	addwfc	fsr2h,f,c
  7065   003564  C032  FFDE         	movff	?___fldiv,postinc2
  7066   003568  C033  FFDE         	movff	?___fldiv+1,postinc2
  7067   00356C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7068   003570  C035  FFDE         	movff	?___fldiv+3,postinc2
  7069   003574                     
  7070                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7071   003574  C070  F005         	movff	colour_rel@G,___fladd@a
  7072   003578  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7073   00357C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7074   003580  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7075   003584  C06C  F001         	movff	colour_rel@R,___fladd@b
  7076   003588  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7077   00358C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7078   003590  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7079   003594  EC98  F011         	call	___fladd	;wreg free
  7080   003598  C001  F064         	movff	?___fladd,_colour_rel$2641
  7081   00359C  C002  F065         	movff	?___fladd+1,_colour_rel$2641+1
  7082   0035A0  C003  F066         	movff	?___fladd+2,_colour_rel$2641+2
  7083   0035A4  C004  F067         	movff	?___fladd+3,_colour_rel$2641+3
  7084   0035A8                     
  7085                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7086   0035A8  C074  F005         	movff	colour_rel@B,___fladd@a
  7087   0035AC  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7088   0035B0  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7089   0035B4  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7090   0035B8  C064  F001         	movff	_colour_rel$2641,___fladd@b
  7091   0035BC  C065  F002         	movff	_colour_rel$2641+1,___fladd@b+1
  7092   0035C0  C066  F003         	movff	_colour_rel$2641+2,___fladd@b+2
  7093   0035C4  C067  F004         	movff	_colour_rel$2641+3,___fladd@b+3
  7094   0035C8  EC98  F011         	call	___fladd	;wreg free
  7095   0035CC  C001  F068         	movff	?___fladd,_colour_rel$2642
  7096   0035D0  C002  F069         	movff	?___fladd+1,_colour_rel$2642+1
  7097   0035D4  C003  F06A         	movff	?___fladd+2,_colour_rel$2642+2
  7098   0035D8  C004  F06B         	movff	?___fladd+3,_colour_rel$2642+3
  7099                           
  7100                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7101   0035DC  C070  F032         	movff	colour_rel@G,___fldiv@b
  7102   0035E0  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7103   0035E4  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7104   0035E8  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7105   0035EC  C060  F005         	movff	colour_rel@L,___fladd@a
  7106   0035F0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7107   0035F4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7108   0035F8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7109   0035FC  C068  F001         	movff	_colour_rel$2642,___fladd@b
  7110   003600  C069  F002         	movff	_colour_rel$2642+1,___fladd@b+1
  7111   003604  C06A  F003         	movff	_colour_rel$2642+2,___fladd@b+2
  7112   003608  C06B  F004         	movff	_colour_rel$2642+3,___fladd@b+3
  7113   00360C  EC98  F011         	call	___fladd	;wreg free
  7114   003610  C001  F036         	movff	?___fladd,___fldiv@a
  7115   003614  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7116   003618  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7117   00361C  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7118   003620  EC0D  F016         	call	___fldiv	;wreg free
  7119   003624  EE20 F004          	lfsr	2,4
  7120   003628  504D               	movf	colour_rel@rel^0,w,c
  7121   00362A  26D9               	addwf	fsr2l,f,c
  7122   00362C  504E               	movf	(colour_rel@rel+1)^0,w,c
  7123   00362E  22DA               	addwfc	fsr2h,f,c
  7124   003630  C032  FFDE         	movff	?___fldiv,postinc2
  7125   003634  C033  FFDE         	movff	?___fldiv+1,postinc2
  7126   003638  C034  FFDE         	movff	?___fldiv+2,postinc2
  7127   00363C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7128   003640  0012               	return		;funcret
  7129   003642                     __end_of_colour_rel:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function _color_click_init *****************
  7133 ;; Defined at:
  7134 ;;		line 7 in file "color.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0, cstack
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;Total ram usage:        1 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 4
  7155 ;; This function calls:
  7156 ;;		_I2C_2_Master_Init
  7157 ;;		_color_writetoaddr
  7158 ;; This function is called by:
  7159 ;;		_main
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text32
  7164   004F44                     __ptext32:
  7165                           	callstack 0
  7166   004F44                     _color_click_init:
  7167                           	callstack 26
  7168   004F44                     
  7169                           ;color.c: 10:     I2C_2_Master_Init();
  7170   004F44  EC77  F02A         	call	_I2C_2_Master_Init	;wreg free
  7171   004F48                     
  7172                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  7173   004F48  0E01               	movlw	1
  7174   004F4A  6E03               	movwf	color_writetoaddr@value^0,c
  7175   004F4C  0E00               	movlw	0
  7176   004F4E  ECB3  F02A         	call	_color_writetoaddr
  7177   004F52                     
  7178                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7179   004F52  0E3F               	movlw	63
  7180   004F54  6E05               	movwf	??_color_click_init^0,c
  7181   004F56  0E55               	movlw	85
  7182   004F58                     u5387:
  7183   004F58  2EE8               	decfsz	wreg,f,c
  7184   004F5A  D7FE               	bra	u5387
  7185   004F5C  2E05               	decfsz	??_color_click_init^0,f,c
  7186   004F5E  D7FC               	bra	u5387
  7187   004F60  F000               	nop	
  7188   004F62                     
  7189                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  7190   004F62  0E03               	movlw	3
  7191   004F64  6E03               	movwf	color_writetoaddr@value^0,c
  7192   004F66  0E00               	movlw	0
  7193   004F68  ECB3  F02A         	call	_color_writetoaddr
  7194   004F6C                     
  7195                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  7196   004F6C  0ED5               	movlw	213
  7197   004F6E  6E03               	movwf	color_writetoaddr@value^0,c
  7198   004F70  0E01               	movlw	1
  7199   004F72  ECB3  F02A         	call	_color_writetoaddr
  7200   004F76                     
  7201                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  7202   004F76  0E00               	movlw	0
  7203   004F78  6E03               	movwf	color_writetoaddr@value^0,c
  7204   004F7A  0E0F               	movlw	15
  7205   004F7C  ECB3  F02A         	call	_color_writetoaddr
  7206   004F80                     
  7207                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  7208   004F80  9287               	bcf	135,1,c	;volatile
  7209   004F82                     
  7210                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  7211   004F82  9881               	bcf	129,4,c	;volatile
  7212   004F84                     
  7213                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  7214   004F84  9E86               	bcf	134,7,c	;volatile
  7215   004F86                     
  7216                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  7217   004F86  9684               	bcf	132,3,c	;volatile
  7218   004F88                     
  7219                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  7220   004F88  9884               	bcf	132,4,c	;volatile
  7221   004F8A                     
  7222                           ;color.c: 28:     LATGbits.LATG1=0;
  7223   004F8A  927F               	bcf	127,1,c	;volatile
  7224   004F8C                     
  7225                           ;color.c: 29:     LATFbits.LATF7=0;
  7226   004F8C  9E7E               	bcf	126,7,c	;volatile
  7227   004F8E                     
  7228                           ;color.c: 30:     LATAbits.LATA4=0;
  7229   004F8E  9879               	bcf	121,4,c	;volatile
  7230   004F90                     
  7231                           ;color.c: 32:     LATDbits.LATD3=0;
  7232   004F90  967C               	bcf	124,3,c	;volatile
  7233   004F92                     
  7234                           ;color.c: 33:     LATDbits.LATD4=0;
  7235   004F92  987C               	bcf	124,4,c	;volatile
  7236   004F94  0012               	return		;funcret
  7237   004F96                     __end_of_color_click_init:
  7238                           	callstack 0
  7239                           
  7240 ;; *************** function _color_writetoaddr *****************
  7241 ;; Defined at:
  7242 ;;		line 41 in file "color.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  address         1    wreg     unsigned char 
  7245 ;;  value           1    2[COMRAM] unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  address         1    3[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7257 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;Total ram usage:        2 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 3
  7264 ;; This function calls:
  7265 ;;		_I2C_2_Master_Start
  7266 ;;		_I2C_2_Master_Stop
  7267 ;;		_I2C_2_Master_Write
  7268 ;; This function is called by:
  7269 ;;		_color_click_init
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text33
  7274   005566                     __ptext33:
  7275                           	callstack 0
  7276   005566                     _color_writetoaddr:
  7277                           	callstack 26
  7278                           
  7279                           ;incstack = 0
  7280                           ;color_writetoaddr@address stored from wreg
  7281   005566  6E04               	movwf	color_writetoaddr@address^0,c
  7282   005568                     
  7283                           ;color.c: 42:     I2C_2_Master_Start();
  7284   005568  ECEE  F02A         	call	_I2C_2_Master_Start	;wreg free
  7285                           
  7286                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  7287   00556C  0E52               	movlw	82
  7288   00556E  ECDE  F02A         	call	_I2C_2_Master_Write
  7289                           
  7290                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  7291   005572  5004               	movf	color_writetoaddr@address^0,w,c
  7292   005574  0980               	iorlw	128
  7293   005576  ECDE  F02A         	call	_I2C_2_Master_Write
  7294                           
  7295                           ;color.c: 45:     I2C_2_Master_Write(value);
  7296   00557A  5003               	movf	color_writetoaddr@value^0,w,c
  7297   00557C  ECDE  F02A         	call	_I2C_2_Master_Write
  7298                           
  7299                           ;color.c: 46:     I2C_2_Master_Stop();
  7300   005580  ECE9  F02A         	call	_I2C_2_Master_Stop	;wreg free
  7301   005584  0012               	return		;funcret
  7302   005586                     __end_of_color_writetoaddr:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function _I2C_2_Master_Write *****************
  7306 ;; Defined at:
  7307 ;;		line 45 in file "i2c.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  data_byte       1    wreg     unsigned char 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  data_byte       1    1[COMRAM] unsigned char 
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;Total ram usage:        1 bytes
  7326 ;; Hardware stack levels used: 1
  7327 ;; Hardware stack levels required when called: 2
  7328 ;; This function calls:
  7329 ;;		_I2C_2_Master_Idle
  7330 ;; This function is called by:
  7331 ;;		_color_writetoaddr
  7332 ;;		_color_read_lum
  7333 ;;		_color_read_Red
  7334 ;;		_color_read_Green
  7335 ;;		_color_read_Blue
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text34
  7340   0055BC                     __ptext34:
  7341                           	callstack 0
  7342   0055BC                     _I2C_2_Master_Write:
  7343                           	callstack 26
  7344                           
  7345                           ;incstack = 0
  7346                           ;I2C_2_Master_Write@data_byte stored from wreg
  7347   0055BC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7348   0055BE                     
  7349                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7350   0055BE  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  7351   0055C2                     
  7352                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7353   0055C2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7354   0055C6  0012               	return		;funcret
  7355   0055C8                     __end_of_I2C_2_Master_Write:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _I2C_2_Master_Stop *****************
  7359 ;; Defined at:
  7360 ;;		line 39 in file "i2c.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; Hardware stack levels required when called: 2
  7381 ;; This function calls:
  7382 ;;		_I2C_2_Master_Idle
  7383 ;; This function is called by:
  7384 ;;		_color_writetoaddr
  7385 ;;		_color_read_lum
  7386 ;;		_color_read_Red
  7387 ;;		_color_read_Green
  7388 ;;		_color_read_Blue
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text35
  7393   0055D2                     __ptext35:
  7394                           	callstack 0
  7395   0055D2                     _I2C_2_Master_Stop:
  7396                           	callstack 26
  7397   0055D2                     
  7398                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7399   0055D2  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  7400   0055D6                     
  7401                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7402   0055D6  010E               	movlb	14	; () banked
  7403   0055D8  85DA               	bsf	218,2,b	;volatile
  7404   0055DA                     
  7405                           ; BSR set to: 14
  7406   0055DA  0012               	return		;funcret
  7407   0055DC                     __end_of_I2C_2_Master_Stop:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _I2C_2_Master_Start *****************
  7411 ;; Defined at:
  7412 ;;		line 27 in file "i2c.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;Total ram usage:        0 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 2
  7433 ;; This function calls:
  7434 ;;		_I2C_2_Master_Idle
  7435 ;; This function is called by:
  7436 ;;		_color_writetoaddr
  7437 ;;		_color_read_lum
  7438 ;;		_color_read_Red
  7439 ;;		_color_read_Green
  7440 ;;		_color_read_Blue
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text36
  7445   0055DC                     __ptext36:
  7446                           	callstack 0
  7447   0055DC                     _I2C_2_Master_Start:
  7448                           	callstack 26
  7449   0055DC                     
  7450                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7451   0055DC  EC8C  F02A         	call	_I2C_2_Master_Idle	;wreg free
  7452   0055E0                     
  7453                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7454   0055E0  010E               	movlb	14	; () banked
  7455   0055E2  81DA               	bsf	218,0,b	;volatile
  7456   0055E4                     
  7457                           ; BSR set to: 14
  7458   0055E4  0012               	return		;funcret
  7459   0055E6                     __end_of_I2C_2_Master_Start:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _I2C_2_Master_Idle *****************
  7463 ;; Defined at:
  7464 ;;		line 22 in file "i2c.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;Total ram usage:        1 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 1
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_I2C_2_Master_Start
  7489 ;;		_I2C_2_Master_RepStart
  7490 ;;		_I2C_2_Master_Stop
  7491 ;;		_I2C_2_Master_Write
  7492 ;;		_I2C_2_Master_Read
  7493 ;; This function uses a non-reentrant model
  7494 ;;
  7495                           
  7496                           	psect	text37
  7497   005518                     __ptext37:
  7498                           	callstack 0
  7499   005518                     _I2C_2_Master_Idle:
  7500                           	callstack 26
  7501   005518                     l137:
  7502   005518  010E               	movlb	14	; () banked
  7503   00551A  B5D8               	btfsc	216,2,b	;volatile
  7504   00551C  EF92  F02A         	goto	u4101
  7505   005520  EF94  F02A         	goto	u4100
  7506   005524                     u4101:
  7507   005524  EF8C  F02A         	goto	l137
  7508   005528                     u4100:
  7509   005528                     
  7510                           ; BSR set to: 14
  7511   005528  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7512   00552C  0E1F               	movlw	31
  7513   00552E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7514   005530  A4D8               	btfss	status,2,c
  7515   005532  EF9D  F02A         	goto	u4111
  7516   005536  EF9F  F02A         	goto	u4110
  7517   00553A                     u4111:
  7518   00553A  EF8C  F02A         	goto	l137
  7519   00553E                     u4110:
  7520   00553E                     
  7521                           ; BSR set to: 14
  7522   00553E  0012               	return		;funcret
  7523   005540                     __end_of_I2C_2_Master_Idle:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function _I2C_2_Master_Init *****************
  7527 ;; Defined at:
  7528 ;;		line 4 in file "i2c.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      void 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used: 1
  7548 ;; Hardware stack levels required when called: 1
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_color_click_init
  7553 ;;		_main
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text38
  7558   0054EE                     __ptext38:
  7559                           	callstack 0
  7560   0054EE                     _I2C_2_Master_Init:
  7561                           	callstack 28
  7562   0054EE                     
  7563                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7564   0054EE  010E               	movlb	14	; () banked
  7565   0054F0  51D9               	movf	217,w,b	;volatile
  7566   0054F2  0BF0               	andlw	-16
  7567   0054F4  0908               	iorlw	8
  7568   0054F6  6FD9               	movwf	217,b	;volatile
  7569   0054F8                     
  7570                           ; BSR set to: 14
  7571                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7572   0054F8  8BD9               	bsf	217,5,b	;volatile
  7573                           
  7574                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7575   0054FA  0E9F               	movlw	159
  7576   0054FC  6FD6               	movwf	214,b	;volatile
  7577   0054FE                     
  7578                           ; BSR set to: 14
  7579                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7580   0054FE  8A84               	bsf	132,5,c	;volatile
  7581   005500                     
  7582                           ; BSR set to: 14
  7583                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7584   005500  8C84               	bsf	132,6,c	;volatile
  7585   005502                     
  7586                           ; BSR set to: 14
  7587                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7588   005502  9BA7               	bcf	167,5,b	;volatile
  7589   005504                     
  7590                           ; BSR set to: 14
  7591                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7592   005504  9DA7               	bcf	167,6,b	;volatile
  7593                           
  7594                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7595   005506  0E1D               	movlw	29
  7596   005508  6F1D               	movwf	29,b	;volatile
  7597                           
  7598                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7599   00550A  0E1E               	movlw	30
  7600   00550C  6F1C               	movwf	28,b	;volatile
  7601                           
  7602                           ;i2c.c: 18:   RD5PPS=0x1C;
  7603   00550E  0E1C               	movlw	28
  7604   005510  6F6F               	movwf	111,b	;volatile
  7605                           
  7606                           ;i2c.c: 19:   RD6PPS=0x1B;
  7607   005512  0E1B               	movlw	27
  7608   005514  6F70               	movwf	112,b	;volatile
  7609   005516                     
  7610                           ; BSR set to: 14
  7611   005516  0012               	return		;funcret
  7612   005518                     __end_of_I2C_2_Master_Init:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _YellowMove *****************
  7616 ;; Defined at:
  7617 ;;		line 239 in file "dc_motor.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7620 ;;		 -> motorL(9), 
  7621 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7622 ;;		 -> motorR(9), 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;		None
  7625 ;; Return value:  Size  Location     Type
  7626 ;;                  1    wreg      void 
  7627 ;; Registers used:
  7628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7629 ;; Tracked objects:
  7630 ;;		On entry : 0/0
  7631 ;;		On exit  : 0/0
  7632 ;;		Unchanged: 0/0
  7633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;Total ram usage:        4 bytes
  7639 ;; Hardware stack levels used: 1
  7640 ;; Hardware stack levels required when called: 5
  7641 ;; This function calls:
  7642 ;;		_reverseDetect
  7643 ;;		_reverseOneBlock
  7644 ;;		_turnRight45
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text39
  7651   004F96                     __ptext39:
  7652                           	callstack 0
  7653   004F96                     _YellowMove:
  7654                           	callstack 25
  7655   004F96                     
  7656                           ;dc_motor.c: 240:     reverseDetect(&motorL, &motorR);
  7657   004F96  0E71               	movlw	low _motorL
  7658   004F98  6E19               	movwf	reverseDetect@mL^0,c
  7659   004F9A  0E01               	movlw	high _motorL
  7660   004F9C  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7661   004F9E  0E68               	movlw	low _motorR
  7662   004FA0  6E1B               	movwf	reverseDetect@mR^0,c
  7663   004FA2  0E01               	movlw	high _motorR
  7664   004FA4  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7665   004FA6  ECC9  F026         	call	_reverseDetect	;wreg free
  7666                           
  7667                           ;dc_motor.c: 242:     reverseOneBlock(&motorL, &motorR);
  7668   004FAA  0E71               	movlw	low _motorL
  7669   004FAC  6E19               	movwf	reverseOneBlock@mL^0,c
  7670   004FAE  0E01               	movlw	high _motorL
  7671   004FB0  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  7672   004FB2  0E68               	movlw	low _motorR
  7673   004FB4  6E1B               	movwf	reverseOneBlock@mR^0,c
  7674   004FB6  0E01               	movlw	high _motorR
  7675   004FB8  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  7676   004FBA  EC9C  F026         	call	_reverseOneBlock	;wreg free
  7677                           
  7678                           ;dc_motor.c: 244:     turnRight45(&motorL, &motorR);
  7679   004FBE  0E71               	movlw	low _motorL
  7680   004FC0  6E19               	movwf	turnRight45@mL^0,c
  7681   004FC2  0E01               	movlw	high _motorL
  7682   004FC4  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7683   004FC6  0E68               	movlw	low _motorR
  7684   004FC8  6E1B               	movwf	turnRight45@mR^0,c
  7685   004FCA  0E01               	movlw	high _motorR
  7686   004FCC  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7687   004FCE  EC22  F027         	call	_turnRight45	;wreg free
  7688                           
  7689                           ;dc_motor.c: 245:     turnRight45(&motorL, &motorR);
  7690   004FD2  0E71               	movlw	low _motorL
  7691   004FD4  6E19               	movwf	turnRight45@mL^0,c
  7692   004FD6  0E01               	movlw	high _motorL
  7693   004FD8  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7694   004FDA  0E68               	movlw	low _motorR
  7695   004FDC  6E1B               	movwf	turnRight45@mR^0,c
  7696   004FDE  0E01               	movlw	high _motorR
  7697   004FE0  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7698   004FE2  EC22  F027         	call	_turnRight45	;wreg free
  7699   004FE6  0012               	return		;funcret
  7700   004FE8                     __end_of_YellowMove:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _RedMove *****************
  7704 ;; Defined at:
  7705 ;;		line 213 in file "dc_motor.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7708 ;;		 -> motorL(9), 
  7709 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7710 ;;		 -> motorR(9), 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;Total ram usage:        4 bytes
  7727 ;; Hardware stack levels used: 1
  7728 ;; Hardware stack levels required when called: 5
  7729 ;; This function calls:
  7730 ;;		_reverseDetect
  7731 ;;		_turnRight45
  7732 ;; This function is called by:
  7733 ;;		_main
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text40
  7738   00540A                     __ptext40:
  7739                           	callstack 0
  7740   00540A                     _RedMove:
  7741                           	callstack 25
  7742   00540A                     
  7743                           ;dc_motor.c: 214:     reverseDetect(&motorL, &motorR);
  7744   00540A  0E71               	movlw	low _motorL
  7745   00540C  6E19               	movwf	reverseDetect@mL^0,c
  7746   00540E  0E01               	movlw	high _motorL
  7747   005410  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7748   005412  0E68               	movlw	low _motorR
  7749   005414  6E1B               	movwf	reverseDetect@mR^0,c
  7750   005416  0E01               	movlw	high _motorR
  7751   005418  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7752   00541A  ECC9  F026         	call	_reverseDetect	;wreg free
  7753                           
  7754                           ;dc_motor.c: 216:     turnRight45(&motorL, &motorR);
  7755   00541E  0E71               	movlw	low _motorL
  7756   005420  6E19               	movwf	turnRight45@mL^0,c
  7757   005422  0E01               	movlw	high _motorL
  7758   005424  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7759   005426  0E68               	movlw	low _motorR
  7760   005428  6E1B               	movwf	turnRight45@mR^0,c
  7761   00542A  0E01               	movlw	high _motorR
  7762   00542C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7763   00542E  EC22  F027         	call	_turnRight45	;wreg free
  7764                           
  7765                           ;dc_motor.c: 217:     turnRight45(&motorL, &motorR);
  7766   005432  0E71               	movlw	low _motorL
  7767   005434  6E19               	movwf	turnRight45@mL^0,c
  7768   005436  0E01               	movlw	high _motorL
  7769   005438  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7770   00543A  0E68               	movlw	low _motorR
  7771   00543C  6E1B               	movwf	turnRight45@mR^0,c
  7772   00543E  0E01               	movlw	high _motorR
  7773   005440  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7774   005442  EC22  F027         	call	_turnRight45	;wreg free
  7775   005446  0012               	return		;funcret
  7776   005448                     __end_of_RedMove:
  7777                           	callstack 0
  7778                           
  7779 ;; *************** function _PinkMove *****************
  7780 ;; Defined at:
  7781 ;;		line 249 in file "dc_motor.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7784 ;;		 -> motorL(9), 
  7785 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7786 ;;		 -> motorR(9), 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;Total ram usage:        4 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 5
  7805 ;; This function calls:
  7806 ;;		_reverseDetect
  7807 ;;		_reverseOneBlock
  7808 ;;		_turnLeft45
  7809 ;; This function is called by:
  7810 ;;		_main
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text41
  7815   004FE8                     __ptext41:
  7816                           	callstack 0
  7817   004FE8                     _PinkMove:
  7818                           	callstack 25
  7819   004FE8                     
  7820                           ;dc_motor.c: 250:     reverseDetect(&motorL, &motorR);
  7821   004FE8  0E71               	movlw	low _motorL
  7822   004FEA  6E19               	movwf	reverseDetect@mL^0,c
  7823   004FEC  0E01               	movlw	high _motorL
  7824   004FEE  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7825   004FF0  0E68               	movlw	low _motorR
  7826   004FF2  6E1B               	movwf	reverseDetect@mR^0,c
  7827   004FF4  0E01               	movlw	high _motorR
  7828   004FF6  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7829   004FF8  ECC9  F026         	call	_reverseDetect	;wreg free
  7830                           
  7831                           ;dc_motor.c: 252:     reverseOneBlock(&motorL, &motorR);
  7832   004FFC  0E71               	movlw	low _motorL
  7833   004FFE  6E19               	movwf	reverseOneBlock@mL^0,c
  7834   005000  0E01               	movlw	high _motorL
  7835   005002  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  7836   005004  0E68               	movlw	low _motorR
  7837   005006  6E1B               	movwf	reverseOneBlock@mR^0,c
  7838   005008  0E01               	movlw	high _motorR
  7839   00500A  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  7840   00500C  EC9C  F026         	call	_reverseOneBlock	;wreg free
  7841                           
  7842                           ;dc_motor.c: 254:     turnLeft45(&motorL, &motorR);
  7843   005010  0E71               	movlw	low _motorL
  7844   005012  6E19               	movwf	turnLeft45@mL^0,c
  7845   005014  0E01               	movlw	high _motorL
  7846   005016  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7847   005018  0E68               	movlw	low _motorR
  7848   00501A  6E1B               	movwf	turnLeft45@mR^0,c
  7849   00501C  0E01               	movlw	high _motorR
  7850   00501E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7851   005020  ECF6  F026         	call	_turnLeft45	;wreg free
  7852                           
  7853                           ;dc_motor.c: 255:     turnLeft45(&motorL, &motorR);
  7854   005024  0E71               	movlw	low _motorL
  7855   005026  6E19               	movwf	turnLeft45@mL^0,c
  7856   005028  0E01               	movlw	high _motorL
  7857   00502A  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7858   00502C  0E68               	movlw	low _motorR
  7859   00502E  6E1B               	movwf	turnLeft45@mR^0,c
  7860   005030  0E01               	movlw	high _motorR
  7861   005032  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7862   005034  ECF6  F026         	call	_turnLeft45	;wreg free
  7863   005038  0012               	return		;funcret
  7864   00503A                     __end_of_PinkMove:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _reverseOneBlock *****************
  7868 ;; Defined at:
  7869 ;;		line 202 in file "dc_motor.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  7872 ;;		 -> motorL(9), 
  7873 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  7874 ;;		 -> motorR(9), 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        6 bytes
  7891 ;; Hardware stack levels used: 1
  7892 ;; Hardware stack levels required when called: 4
  7893 ;; This function calls:
  7894 ;;		_fullSpeedBack
  7895 ;;		_stop
  7896 ;; This function is called by:
  7897 ;;		_YellowMove
  7898 ;;		_PinkMove
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           	psect	text42
  7903   004D38                     __ptext42:
  7904                           	callstack 0
  7905   004D38                     _reverseOneBlock:
  7906                           	callstack 25
  7907   004D38                     
  7908                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  7909   004D38  C019  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7910   004D3C  C01A  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7911   004D40  C01B  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7912   004D44  C01C  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7913   004D48  ECC6  F024         	call	_fullSpeedBack	;wreg free
  7914   004D4C                     
  7915                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7916   004D4C  0E52               	movlw	82
  7917   004D4E  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  7918   004D50  0E2B               	movlw	43
  7919   004D52  6E1D               	movwf	??_reverseOneBlock^0,c
  7920   004D54  0E00               	movlw	0
  7921   004D56                     u5397:
  7922   004D56  2EE8               	decfsz	wreg,f,c
  7923   004D58  D7FE               	bra	u5397
  7924   004D5A  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  7925   004D5C  D7FC               	bra	u5397
  7926   004D5E  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7927   004D60  D7FA               	bra	u5397
  7928   004D62  D000               	nop2	
  7929   004D64                     
  7930                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  7931   004D64  0E71               	movlw	low _motorL
  7932   004D66  6E14               	movwf	stop@mL^0,c
  7933   004D68  0E01               	movlw	high _motorL
  7934   004D6A  6E15               	movwf	(stop@mL+1)^0,c
  7935   004D6C  0E68               	movlw	low _motorR
  7936   004D6E  6E16               	movwf	stop@mR^0,c
  7937   004D70  0E01               	movlw	high _motorR
  7938   004D72  6E17               	movwf	(stop@mR+1)^0,c
  7939   004D74  EC92  F025         	call	_stop	;wreg free
  7940                           
  7941                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7942   004D78  0E52               	movlw	82
  7943   004D7A  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  7944   004D7C  0E2B               	movlw	43
  7945   004D7E  6E1D               	movwf	??_reverseOneBlock^0,c
  7946   004D80  0E00               	movlw	0
  7947   004D82                     u5407:
  7948   004D82  2EE8               	decfsz	wreg,f,c
  7949   004D84  D7FE               	bra	u5407
  7950   004D86  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  7951   004D88  D7FC               	bra	u5407
  7952   004D8A  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7953   004D8C  D7FA               	bra	u5407
  7954   004D8E  D000               	nop2	
  7955   004D90  0012               	return		;funcret
  7956   004D92                     __end_of_reverseOneBlock:
  7957                           	callstack 0
  7958                           
  7959 ;; *************** function _OrangeMove *****************
  7960 ;; Defined at:
  7961 ;;		line 259 in file "dc_motor.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7964 ;;		 -> motorL(9), 
  7965 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7966 ;;		 -> motorR(9), 
  7967 ;; Auto vars:     Size  Location     Type
  7968 ;;		None
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7981 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7982 ;;Total ram usage:        4 bytes
  7983 ;; Hardware stack levels used: 1
  7984 ;; Hardware stack levels required when called: 5
  7985 ;; This function calls:
  7986 ;;		_reverseDetect
  7987 ;;		_turnRight45
  7988 ;; This function is called by:
  7989 ;;		_main
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           	psect	text43
  7994   00503A                     __ptext43:
  7995                           	callstack 0
  7996   00503A                     _OrangeMove:
  7997                           	callstack 25
  7998   00503A                     
  7999                           ;dc_motor.c: 260:     reverseDetect(&motorL, &motorR);
  8000   00503A  0E71               	movlw	low _motorL
  8001   00503C  6E19               	movwf	reverseDetect@mL^0,c
  8002   00503E  0E01               	movlw	high _motorL
  8003   005040  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8004   005042  0E68               	movlw	low _motorR
  8005   005044  6E1B               	movwf	reverseDetect@mR^0,c
  8006   005046  0E01               	movlw	high _motorR
  8007   005048  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8008   00504A  ECC9  F026         	call	_reverseDetect	;wreg free
  8009                           
  8010                           ;dc_motor.c: 262:     turnRight45(&motorL, &motorR);
  8011   00504E  0E71               	movlw	low _motorL
  8012   005050  6E19               	movwf	turnRight45@mL^0,c
  8013   005052  0E01               	movlw	high _motorL
  8014   005054  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8015   005056  0E68               	movlw	low _motorR
  8016   005058  6E1B               	movwf	turnRight45@mR^0,c
  8017   00505A  0E01               	movlw	high _motorR
  8018   00505C  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8019   00505E  EC22  F027         	call	_turnRight45	;wreg free
  8020                           
  8021                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  8022   005062  0E71               	movlw	low _motorL
  8023   005064  6E19               	movwf	turnRight45@mL^0,c
  8024   005066  0E01               	movlw	high _motorL
  8025   005068  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8026   00506A  0E68               	movlw	low _motorR
  8027   00506C  6E1B               	movwf	turnRight45@mR^0,c
  8028   00506E  0E01               	movlw	high _motorR
  8029   005070  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8030   005072  EC22  F027         	call	_turnRight45	;wreg free
  8031                           
  8032                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  8033   005076  0E71               	movlw	low _motorL
  8034   005078  6E19               	movwf	turnRight45@mL^0,c
  8035   00507A  0E01               	movlw	high _motorL
  8036   00507C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8037   00507E  0E68               	movlw	low _motorR
  8038   005080  6E1B               	movwf	turnRight45@mR^0,c
  8039   005082  0E01               	movlw	high _motorR
  8040   005084  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8041   005086  EC22  F027         	call	_turnRight45	;wreg free
  8042   00508A  0012               	return		;funcret
  8043   00508C                     __end_of_OrangeMove:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function _LightBlueMove *****************
  8047 ;; Defined at:
  8048 ;;		line 268 in file "dc_motor.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8051 ;;		 -> motorL(9), 
  8052 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8053 ;;		 -> motorR(9), 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;Total ram usage:        4 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 5
  8072 ;; This function calls:
  8073 ;;		_reverseDetect
  8074 ;;		_turnLeft45
  8075 ;; This function is called by:
  8076 ;;		_main
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text44
  8081   00508C                     __ptext44:
  8082                           	callstack 0
  8083   00508C                     _LightBlueMove:
  8084                           	callstack 25
  8085   00508C                     
  8086                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  8087   00508C  0E71               	movlw	low _motorL
  8088   00508E  6E19               	movwf	reverseDetect@mL^0,c
  8089   005090  0E01               	movlw	high _motorL
  8090   005092  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8091   005094  0E68               	movlw	low _motorR
  8092   005096  6E1B               	movwf	reverseDetect@mR^0,c
  8093   005098  0E01               	movlw	high _motorR
  8094   00509A  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8095   00509C  ECC9  F026         	call	_reverseDetect	;wreg free
  8096                           
  8097                           ;dc_motor.c: 271:     turnLeft45(&motorL, &motorR);
  8098   0050A0  0E71               	movlw	low _motorL
  8099   0050A2  6E19               	movwf	turnLeft45@mL^0,c
  8100   0050A4  0E01               	movlw	high _motorL
  8101   0050A6  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8102   0050A8  0E68               	movlw	low _motorR
  8103   0050AA  6E1B               	movwf	turnLeft45@mR^0,c
  8104   0050AC  0E01               	movlw	high _motorR
  8105   0050AE  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8106   0050B0  ECF6  F026         	call	_turnLeft45	;wreg free
  8107                           
  8108                           ;dc_motor.c: 272:     turnLeft45(&motorL, &motorR);
  8109   0050B4  0E71               	movlw	low _motorL
  8110   0050B6  6E19               	movwf	turnLeft45@mL^0,c
  8111   0050B8  0E01               	movlw	high _motorL
  8112   0050BA  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8113   0050BC  0E68               	movlw	low _motorR
  8114   0050BE  6E1B               	movwf	turnLeft45@mR^0,c
  8115   0050C0  0E01               	movlw	high _motorR
  8116   0050C2  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8117   0050C4  ECF6  F026         	call	_turnLeft45	;wreg free
  8118                           
  8119                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  8120   0050C8  0E71               	movlw	low _motorL
  8121   0050CA  6E19               	movwf	turnLeft45@mL^0,c
  8122   0050CC  0E01               	movlw	high _motorL
  8123   0050CE  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8124   0050D0  0E68               	movlw	low _motorR
  8125   0050D2  6E1B               	movwf	turnLeft45@mR^0,c
  8126   0050D4  0E01               	movlw	high _motorR
  8127   0050D6  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8128   0050D8  ECF6  F026         	call	_turnLeft45	;wreg free
  8129   0050DC  0012               	return		;funcret
  8130   0050DE                     __end_of_LightBlueMove:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function _Interrupts_init *****************
  8134 ;; Defined at:
  8135 ;;		line 12 in file "interrupts.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		None
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_main
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text45
  8164   0055EC                     __ptext45:
  8165                           	callstack 0
  8166   0055EC                     _Interrupts_init:
  8167                           	callstack 29
  8168   0055EC  0012               	return		;funcret
  8169   0055EE                     __end_of_Interrupts_init:
  8170                           	callstack 0
  8171                           
  8172 ;; *************** function _GreenMove *****************
  8173 ;; Defined at:
  8174 ;;		line 221 in file "dc_motor.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8177 ;;		 -> motorL(9), 
  8178 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8179 ;;		 -> motorR(9), 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;Total ram usage:        4 bytes
  8196 ;; Hardware stack levels used: 1
  8197 ;; Hardware stack levels required when called: 5
  8198 ;; This function calls:
  8199 ;;		_reverseDetect
  8200 ;;		_turnLeft45
  8201 ;; This function is called by:
  8202 ;;		_main
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text46
  8207   005448                     __ptext46:
  8208                           	callstack 0
  8209   005448                     _GreenMove:
  8210                           	callstack 25
  8211   005448                     
  8212                           ;dc_motor.c: 222:     reverseDetect(&motorL, &motorR);
  8213   005448  0E71               	movlw	low _motorL
  8214   00544A  6E19               	movwf	reverseDetect@mL^0,c
  8215   00544C  0E01               	movlw	high _motorL
  8216   00544E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8217   005450  0E68               	movlw	low _motorR
  8218   005452  6E1B               	movwf	reverseDetect@mR^0,c
  8219   005454  0E01               	movlw	high _motorR
  8220   005456  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8221   005458  ECC9  F026         	call	_reverseDetect	;wreg free
  8222                           
  8223                           ;dc_motor.c: 224:     turnLeft45(&motorL, &motorR);
  8224   00545C  0E71               	movlw	low _motorL
  8225   00545E  6E19               	movwf	turnLeft45@mL^0,c
  8226   005460  0E01               	movlw	high _motorL
  8227   005462  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8228   005464  0E68               	movlw	low _motorR
  8229   005466  6E1B               	movwf	turnLeft45@mR^0,c
  8230   005468  0E01               	movlw	high _motorR
  8231   00546A  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8232   00546C  ECF6  F026         	call	_turnLeft45	;wreg free
  8233                           
  8234                           ;dc_motor.c: 225:     turnLeft45(&motorL, &motorR);
  8235   005470  0E71               	movlw	low _motorL
  8236   005472  6E19               	movwf	turnLeft45@mL^0,c
  8237   005474  0E01               	movlw	high _motorL
  8238   005476  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8239   005478  0E68               	movlw	low _motorR
  8240   00547A  6E1B               	movwf	turnLeft45@mR^0,c
  8241   00547C  0E01               	movlw	high _motorR
  8242   00547E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8243   005480  ECF6  F026         	call	_turnLeft45	;wreg free
  8244   005484  0012               	return		;funcret
  8245   005486                     __end_of_GreenMove:
  8246                           	callstack 0
  8247                           
  8248 ;; *************** function _turnLeft45 *****************
  8249 ;; Defined at:
  8250 ;;		line 188 in file "dc_motor.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8253 ;;		 -> motorL(9), 
  8254 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8255 ;;		 -> motorR(9), 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8271 ;;Total ram usage:        6 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 4
  8274 ;; This function calls:
  8275 ;;		_stop
  8276 ;;		_turnLeft
  8277 ;; This function is called by:
  8278 ;;		_GreenMove
  8279 ;;		_PinkMove
  8280 ;;		_LightBlueMove
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text47
  8285   004DEC                     __ptext47:
  8286                           	callstack 0
  8287   004DEC                     _turnLeft45:
  8288                           	callstack 25
  8289   004DEC                     
  8290                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  8291   004DEC  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  8292   004DF0  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  8293   004DF4  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  8294   004DF8  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  8295   004DFC  EC30  F024         	call	_turnLeft	;wreg free
  8296   004E00                     
  8297                           ;dc_motor.c: 190:     _delay((unsigned long)((220)*(64000000/4000.0)));
  8298   004E00  0E12               	movlw	18
  8299   004E02  6E1E               	movwf	(??_turnLeft45+1)^0,c
  8300   004E04  0EDC               	movlw	220
  8301   004E06  6E1D               	movwf	??_turnLeft45^0,c
  8302   004E08  0E60               	movlw	96
  8303   004E0A                     u5417:
  8304   004E0A  2EE8               	decfsz	wreg,f,c
  8305   004E0C  D7FE               	bra	u5417
  8306   004E0E  2E1D               	decfsz	??_turnLeft45^0,f,c
  8307   004E10  D7FC               	bra	u5417
  8308   004E12  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  8309   004E14  D7FA               	bra	u5417
  8310   004E16                     
  8311                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  8312   004E16  0E71               	movlw	low _motorL
  8313   004E18  6E14               	movwf	stop@mL^0,c
  8314   004E1A  0E01               	movlw	high _motorL
  8315   004E1C  6E15               	movwf	(stop@mL+1)^0,c
  8316   004E1E  0E68               	movlw	low _motorR
  8317   004E20  6E16               	movwf	stop@mR^0,c
  8318   004E22  0E01               	movlw	high _motorR
  8319   004E24  6E17               	movwf	(stop@mR+1)^0,c
  8320   004E26  EC92  F025         	call	_stop	;wreg free
  8321                           
  8322                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8323   004E2A  0E52               	movlw	82
  8324   004E2C  6E1E               	movwf	(??_turnLeft45+1)^0,c
  8325   004E2E  0E2B               	movlw	43
  8326   004E30  6E1D               	movwf	??_turnLeft45^0,c
  8327   004E32  0E00               	movlw	0
  8328   004E34                     u5427:
  8329   004E34  2EE8               	decfsz	wreg,f,c
  8330   004E36  D7FE               	bra	u5427
  8331   004E38  2E1D               	decfsz	??_turnLeft45^0,f,c
  8332   004E3A  D7FC               	bra	u5427
  8333   004E3C  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  8334   004E3E  D7FA               	bra	u5427
  8335   004E40  D000               	nop2	
  8336   004E42  0012               	return		;funcret
  8337   004E44                     __end_of_turnLeft45:
  8338                           	callstack 0
  8339                           
  8340 ;; *************** function _turnLeft *****************
  8341 ;; Defined at:
  8342 ;;		line 110 in file "dc_motor.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8345 ;;		 -> motorL(9), 
  8346 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8347 ;;		 -> motorR(9), 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;Total ram usage:        5 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 3
  8366 ;; This function calls:
  8367 ;;		_setMotorPWM
  8368 ;; This function is called by:
  8369 ;;		_turnLeft45
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text48
  8374   004860                     __ptext48:
  8375                           	callstack 0
  8376   004860                     _turnLeft:
  8377                           	callstack 25
  8378   004860                     
  8379                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  8380   004860  EE20 F001          	lfsr	2,1
  8381   004864  5014               	movf	turnLeft@mL^0,w,c
  8382   004866  26D9               	addwf	fsr2l,f,c
  8383   004868  5015               	movf	(turnLeft@mL+1)^0,w,c
  8384   00486A  22DA               	addwfc	fsr2h,f,c
  8385   00486C  0E00               	movlw	0
  8386   00486E  6EDF               	movwf	indf2,c
  8387                           
  8388                           ;dc_motor.c: 113:     mR->direction =1;
  8389   004870  EE20 F001          	lfsr	2,1
  8390   004874  5016               	movf	turnLeft@mR^0,w,c
  8391   004876  26D9               	addwf	fsr2l,f,c
  8392   004878  5017               	movf	(turnLeft@mR+1)^0,w,c
  8393   00487A  22DA               	addwfc	fsr2h,f,c
  8394   00487C  0E01               	movlw	1
  8395   00487E  6EDF               	movwf	indf2,c
  8396                           
  8397                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  8398   004880  EF62  F024         	goto	l4486
  8399   004884                     l4478:
  8400                           
  8401                           ;dc_motor.c: 117:         mL->power+=10;
  8402   004884  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8403   004888  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8404   00488C  0E0A               	movlw	10
  8405   00488E  26DF               	addwf	indf2,f,c
  8406                           
  8407                           ;dc_motor.c: 118:         mR->power+=10;
  8408   004890  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8409   004894  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8410   004898  0E0A               	movlw	10
  8411   00489A  26DF               	addwf	indf2,f,c
  8412   00489C                     
  8413                           ;dc_motor.c: 120:         setMotorPWM(mL);
  8414   00489C  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8415   0048A0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8416   0048A4  EC8A  F020         	call	_setMotorPWM	;wreg free
  8417   0048A8                     
  8418                           ;dc_motor.c: 121:         setMotorPWM(mR);
  8419   0048A8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8420   0048AC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8421   0048B0  EC8A  F020         	call	_setMotorPWM	;wreg free
  8422   0048B4                     
  8423                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8424   0048B4  0E15               	movlw	21
  8425   0048B6  6E18               	movwf	??_turnLeft^0,c
  8426   0048B8  0EC6               	movlw	198
  8427   0048BA                     u5437:
  8428   0048BA  2EE8               	decfsz	wreg,f,c
  8429   0048BC  D7FE               	bra	u5437
  8430   0048BE  2E18               	decfsz	??_turnLeft^0,f,c
  8431   0048C0  D7FC               	bra	u5437
  8432   0048C2  D000               	nop2	
  8433   0048C4                     l4486:
  8434                           
  8435                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  8436   0048C4  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8437   0048C8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8438   0048CC  0E46               	movlw	70
  8439   0048CE  60DF               	cpfslt	indf2,c
  8440   0048D0  EF6C  F024         	goto	u4601
  8441   0048D4  EF6E  F024         	goto	u4600
  8442   0048D8                     u4601:
  8443   0048D8  EF7A  F024         	goto	l453
  8444   0048DC                     u4600:
  8445   0048DC  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8446   0048E0  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8447   0048E4  0E45               	movlw	69
  8448   0048E6  64DF               	cpfsgt	indf2,c
  8449   0048E8  EF78  F024         	goto	u4611
  8450   0048EC  EF7A  F024         	goto	u4610
  8451   0048F0                     u4611:
  8452   0048F0  EF42  F024         	goto	l4478
  8453   0048F4                     u4610:
  8454   0048F4                     l453:
  8455   0048F4  0012               	return		;funcret
  8456   0048F6                     __end_of_turnLeft:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _Colour_decider *****************
  8460 ;; Defined at:
  8461 ;;		line 125 in file "color.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;  vals            2   74[COMRAM] PTR struct RGB
  8464 ;;		 -> vals(8), 
  8465 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8466 ;;		 -> rel(12), 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;  RGB_col        12    6[BANK0 ] float [3]
  8469 ;;  Hue             4   28[BANK0 ] float 
  8470 ;;  Cmin            4   22[BANK0 ] float 
  8471 ;;  Cmax            4   18[BANK0 ] float 
  8472 ;;  i               2   26[BANK0 ] int 
  8473 ;;  Cmax_i          2    4[BANK0 ] int 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  2   74[COMRAM] int 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8486 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8487 ;;Total ram usage:       38 bytes
  8488 ;; Hardware stack levels used: 1
  8489 ;; Hardware stack levels required when called: 3
  8490 ;; This function calls:
  8491 ;;		___fladd
  8492 ;;		___fldiv
  8493 ;;		___fleq
  8494 ;;		___flge
  8495 ;;		___flmul
  8496 ;;		___flsub
  8497 ;;		___xxtofl
  8498 ;; This function is called by:
  8499 ;;		_main
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text49
  8504   000E5A                     __ptext49:
  8505                           	callstack 0
  8506   000E5A                     _Colour_decider:
  8507                           	callstack 27
  8508   000E5A                     
  8509                           ;color.c: 126:     float Cmax = 0;
  8510   000E5A  0E00               	movlw	0
  8511   000E5C  0100               	movlb	0	; () banked
  8512   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8513   000E60  0E00               	movlw	0
  8514   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8515   000E64  0E00               	movlw	0
  8516   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8517   000E68  0E00               	movlw	0
  8518   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8519                           
  8520                           ;color.c: 127:     float Cmin= 100000;
  8521   000E6C  0E00               	movlw	0
  8522   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8523   000E70  0E50               	movlw	80
  8524   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8525   000E74  0EC3               	movlw	195
  8526   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8527   000E78  0E47               	movlw	71
  8528   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8529                           
  8530                           ;color.c: 128:     int Cmax_i =4;
  8531   000E7C  0E00               	movlw	0
  8532   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8533   000E80  0E04               	movlw	4
  8534   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8535   000E84                     
  8536                           ; BSR set to: 0
  8537                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8538   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8539   000E88  0E0B               	movlw	11
  8540   000E8A                     u4821:
  8541   000E8A  6ADE               	clrf	postinc2,c
  8542   000E8C  06E8               	decf	wreg,f,c
  8543   000E8E  E2FD               	bc	u4821
  8544   000E90                     
  8545                           ; BSR set to: 0
  8546   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8547   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8548   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8549   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8550   000EA0  0E00               	movlw	0
  8551   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8552   000EA4  0EFF               	movlw	-1
  8553   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8554   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8555   000EAA  0E01               	movlw	1
  8556   000EAC  ECEC  F01E         	call	___xxtofl
  8557   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8558   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8559   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8560   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8561   000EC0  EE20 F002          	lfsr	2,2
  8562   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8563   000EC6  26D9               	addwf	fsr2l,f,c
  8564   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8565   000ECA  22DA               	addwfc	fsr2h,f,c
  8566   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8567   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8568   000ED4  0E00               	movlw	0
  8569   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8570   000ED8  0EFF               	movlw	-1
  8571   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8572   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8573   000EDE  0E01               	movlw	1
  8574   000EE0  ECEC  F01E         	call	___xxtofl
  8575   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8576   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8577   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8578   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8579   000EF4  EE20 F004          	lfsr	2,4
  8580   000EF8  504B               	movf	Colour_decider@vals^0,w,c
  8581   000EFA  26D9               	addwf	fsr2l,f,c
  8582   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8583   000EFE  22DA               	addwfc	fsr2h,f,c
  8584   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
  8585   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8586   000F08  0E00               	movlw	0
  8587   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8588   000F0C  0EFF               	movlw	-1
  8589   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
  8590   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
  8591   000F12  0E01               	movlw	1
  8592   000F14  ECEC  F01E         	call	___xxtofl
  8593   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8594   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8595   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8596   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8597   000F28                     
  8598                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8599   000F28  0E00               	movlw	0
  8600   000F2A  0100               	movlb	0	; () banked
  8601   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8602   000F2E  0E00               	movlw	0
  8603   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
  8604   000F32                     l4786:
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8608   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
  8609   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8610   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8611   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8612   000F42  0E66               	movlw	low Colour_decider@RGB_col
  8613   000F44  6E4F               	movwf	??_Colour_decider^0,c
  8614   000F46  0E00               	movlw	high Colour_decider@RGB_col
  8615   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
  8616   000F4A  90D8               	bcf	status,0,c
  8617   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8618   000F4E  6ED9               	movwf	fsr2l,c
  8619   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8620   000F52  6EDA               	movwf	fsr2h,c
  8621   000F54  90D8               	bcf	status,0,c
  8622   000F56  36D9               	rlcf	fsr2l,f,c
  8623   000F58  36DA               	rlcf	fsr2h,f,c
  8624   000F5A  504F               	movf	??_Colour_decider^0,w,c
  8625   000F5C  26D9               	addwf	fsr2l,f,c
  8626   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8627   000F60  22DA               	addwfc	fsr2h,f,c
  8628   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
  8629   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
  8630   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
  8631   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
  8632   000F72  EC75  F022         	call	___flge	;wreg free
  8633   000F76  B0D8               	btfsc	status,0,c
  8634   000F78  EFC0  F007         	goto	u4831
  8635   000F7C  EFC2  F007         	goto	u4830
  8636   000F80                     u4831:
  8637   000F80  EFDF  F007         	goto	l4792
  8638   000F84                     u4830:
  8639   000F84                     
  8640                           ;color.c: 137:             Cmax=RGB_col[i];
  8641   000F84  0E66               	movlw	low Colour_decider@RGB_col
  8642   000F86  6E4F               	movwf	??_Colour_decider^0,c
  8643   000F88  0E00               	movlw	high Colour_decider@RGB_col
  8644   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
  8645   000F8C  90D8               	bcf	status,0,c
  8646   000F8E  0100               	movlb	0	; () banked
  8647   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8648   000F92  6ED9               	movwf	fsr2l,c
  8649   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8650   000F96  6EDA               	movwf	fsr2h,c
  8651   000F98  90D8               	bcf	status,0,c
  8652   000F9A  36D9               	rlcf	fsr2l,f,c
  8653   000F9C  36DA               	rlcf	fsr2h,f,c
  8654   000F9E  504F               	movf	??_Colour_decider^0,w,c
  8655   000FA0  26D9               	addwf	fsr2l,f,c
  8656   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
  8657   000FA4  22DA               	addwfc	fsr2h,f,c
  8658   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8659   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8660   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8661   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8662   000FB6                     
  8663                           ; BSR set to: 0
  8664                           ;color.c: 138:             Cmax_i=i;
  8665   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8666   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8667   000FBE                     l4792:
  8668                           
  8669                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8670   000FBE  0E66               	movlw	low Colour_decider@RGB_col
  8671   000FC0  6E4F               	movwf	??_Colour_decider^0,c
  8672   000FC2  0E00               	movlw	high Colour_decider@RGB_col
  8673   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8674   000FC6  90D8               	bcf	status,0,c
  8675   000FC8  0100               	movlb	0	; () banked
  8676   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8677   000FCC  6ED9               	movwf	fsr2l,c
  8678   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8679   000FD0  6EDA               	movwf	fsr2h,c
  8680   000FD2  90D8               	bcf	status,0,c
  8681   000FD4  36D9               	rlcf	fsr2l,f,c
  8682   000FD6  36DA               	rlcf	fsr2h,f,c
  8683   000FD8  504F               	movf	??_Colour_decider^0,w,c
  8684   000FDA  26D9               	addwf	fsr2l,f,c
  8685   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8686   000FDE  22DA               	addwfc	fsr2h,f,c
  8687   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
  8688   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8689   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8690   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8691   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
  8692   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8693   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8694   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8695   001000  EC75  F022         	call	___flge	;wreg free
  8696   001004  B0D8               	btfsc	status,0,c
  8697   001006  EF07  F008         	goto	u4841
  8698   00100A  EF09  F008         	goto	u4840
  8699   00100E                     u4841:
  8700   00100E  EF22  F008         	goto	l4796
  8701   001012                     u4840:
  8702   001012  0E66               	movlw	low Colour_decider@RGB_col
  8703   001014  6E4F               	movwf	??_Colour_decider^0,c
  8704   001016  0E00               	movlw	high Colour_decider@RGB_col
  8705   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
  8706   00101A  90D8               	bcf	status,0,c
  8707   00101C  0100               	movlb	0	; () banked
  8708   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8709   001020  6ED9               	movwf	fsr2l,c
  8710   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8711   001024  6EDA               	movwf	fsr2h,c
  8712   001026  90D8               	bcf	status,0,c
  8713   001028  36D9               	rlcf	fsr2l,f,c
  8714   00102A  36DA               	rlcf	fsr2h,f,c
  8715   00102C  504F               	movf	??_Colour_decider^0,w,c
  8716   00102E  26D9               	addwf	fsr2l,f,c
  8717   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
  8718   001032  22DA               	addwfc	fsr2h,f,c
  8719   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8720   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8721   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8722   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8723   001044                     l4796:
  8724                           
  8725                           ;color.c: 141:     }
  8726   001044  0100               	movlb	0	; () banked
  8727   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8728   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8729   00104A                     
  8730                           ; BSR set to: 0
  8731   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8732   00104C  EF31  F008         	goto	u4851
  8733   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8734   001052  E109               	bnz	u4850
  8735   001054  0E03               	movlw	3
  8736   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8737   001058  A0D8               	btfss	status,0,c
  8738   00105A  EF31  F008         	goto	u4851
  8739   00105E  EF33  F008         	goto	u4850
  8740   001062                     u4851:
  8741   001062  EF99  F007         	goto	l4786
  8742   001066                     u4850:
  8743   001066                     
  8744                           ; BSR set to: 0
  8745                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8746   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8747   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8748   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8749   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8750   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8751   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8752   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8753   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8754   001086  EC5D  F029         	call	___flsub	;wreg free
  8755   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
  8756   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
  8757   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
  8758   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
  8759   00109A  0E00               	movlw	0
  8760   00109C  6E36               	movwf	___fleq@ff2^0,c
  8761   00109E  0E00               	movlw	0
  8762   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
  8763   0010A2  0E00               	movlw	0
  8764   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
  8765   0010A6  0E00               	movlw	0
  8766   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
  8767   0010AA  ECDB  F023         	call	___fleq	;wreg free
  8768   0010AE  A0D8               	btfss	status,0,c
  8769   0010B0  EF5C  F008         	goto	u4861
  8770   0010B4  EF5E  F008         	goto	u4860
  8771   0010B8                     u4861:
  8772   0010B8  EF64  F008         	goto	l4806
  8773   0010BC                     u4860:
  8774   0010BC                     l4802:
  8775   0010BC  0E00               	movlw	0
  8776   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8777   0010C0  0E00               	movlw	0
  8778   0010C2  6E4B               	movwf	?_Colour_decider^0,c
  8779   0010C4  EF9A  F00C         	goto	l70
  8780   0010C8                     l4806:
  8781                           
  8782                           ;color.c: 146:     if (Cmax_i==0){
  8783   0010C8  0100               	movlb	0	; () banked
  8784   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8785   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8786   0010CE  A4D8               	btfss	status,2,c
  8787   0010D0  EF6C  F008         	goto	u4871
  8788   0010D4  EF6E  F008         	goto	u4870
  8789   0010D8                     u4871:
  8790   0010D8  EFE2  F008         	goto	l4814
  8791   0010DC                     u4870:
  8792   0010DC                     
  8793                           ; BSR set to: 0
  8794                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8795   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8796   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8797   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8798   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8799   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8800   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8801   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8802   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8803   0010FC  EC5D  F029         	call	___flsub	;wreg free
  8804   001100  C02A  F036         	movff	?___flsub,___fldiv@a
  8805   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8806   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8807   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8808   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
  8809   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8810   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8811   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8812   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
  8813   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8814   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8815   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8816   001130  EC5D  F029         	call	___flsub	;wreg free
  8817   001134  C02A  F032         	movff	?___flsub,___fldiv@b
  8818   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8819   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8820   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8821   001144  EC0D  F016         	call	___fldiv	;wreg free
  8822   001148  C032  F011         	movff	?___fldiv,___flmul@b
  8823   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
  8824   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
  8825   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
  8826   001158  0E00               	movlw	0
  8827   00115A  6E15               	movwf	___flmul@a^0,c
  8828   00115C  0E00               	movlw	0
  8829   00115E  6E16               	movwf	(___flmul@a+1)^0,c
  8830   001160  0E70               	movlw	112
  8831   001162  6E17               	movwf	(___flmul@a+2)^0,c
  8832   001164  0E42               	movlw	66
  8833   001166  6E18               	movwf	(___flmul@a+3)^0,c
  8834   001168  ECF8  F013         	call	___flmul	;wreg free
  8835   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8836   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8837   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8838   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8839   00117C                     
  8840                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8841   00117C  0100               	movlb	0	; () banked
  8842   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8843   001180  EFC6  F008         	goto	u4880
  8844   001184  EFC4  F008         	goto	u4881
  8845   001188                     u4881:
  8846   001188  EFC1  F009         	goto	l4824
  8847   00118C                     u4880:
  8848   00118C                     
  8849                           ; BSR set to: 0
  8850   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8851   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8852   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8853   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8854   00119C  0E00               	movlw	0
  8855   00119E  6E05               	movwf	___fladd@a^0,c
  8856   0011A0  0E00               	movlw	0
  8857   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
  8858   0011A4  0EB4               	movlw	180
  8859   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
  8860   0011A8  0E43               	movlw	67
  8861   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
  8862   0011AC  EC98  F011         	call	___fladd	;wreg free
  8863   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8864   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8865   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8866   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8867   0011C0  EFC1  F009         	goto	l4824
  8868   0011C4                     l4814:
  8869                           
  8870                           ; BSR set to: 0
  8871   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8872   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8873   0011C8  A4D8               	btfss	status,2,c
  8874   0011CA  EFE9  F008         	goto	u4891
  8875   0011CE  EFEB  F008         	goto	u4890
  8876   0011D2                     u4891:
  8877   0011D2  EF57  F009         	goto	l4820
  8878   0011D6                     u4890:
  8879   0011D6                     
  8880                           ; BSR set to: 0
  8881                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8882   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8883   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8884   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8885   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8886   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8887   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8888   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8889   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8890   0011F6  EC5D  F029         	call	___flsub	;wreg free
  8891   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
  8892   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8893   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8894   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8895   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
  8896   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8897   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8898   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8899   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
  8900   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8901   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8902   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8903   00122A  EC5D  F029         	call	___flsub	;wreg free
  8904   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
  8905   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8906   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8907   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8908   00123E  EC0D  F016         	call	___fldiv	;wreg free
  8909   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2643
  8910   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2643+1
  8911   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2643+2
  8912   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2643+3
  8913   001252                     
  8914                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8915   001252  0E00               	movlw	0
  8916   001254  6E05               	movwf	___fladd@a^0,c
  8917   001256  0E00               	movlw	0
  8918   001258  6E06               	movwf	(___fladd@a+1)^0,c
  8919   00125A  0E00               	movlw	0
  8920   00125C  6E07               	movwf	(___fladd@a+2)^0,c
  8921   00125E  0E40               	movlw	64
  8922   001260  6E08               	movwf	(___fladd@a+3)^0,c
  8923   001262  C060  F001         	movff	_Colour_decider$2643,___fladd@b
  8924   001266  C061  F002         	movff	_Colour_decider$2643+1,___fladd@b+1
  8925   00126A  C062  F003         	movff	_Colour_decider$2643+2,___fladd@b+2
  8926   00126E  C063  F004         	movff	_Colour_decider$2643+3,___fladd@b+3
  8927   001272  EC98  F011         	call	___fladd	;wreg free
  8928   001276  C001  F011         	movff	?___fladd,___flmul@b
  8929   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
  8930   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
  8931   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
  8932   001286  0E00               	movlw	0
  8933   001288  6E15               	movwf	___flmul@a^0,c
  8934   00128A  0E00               	movlw	0
  8935   00128C  6E16               	movwf	(___flmul@a+1)^0,c
  8936   00128E  0E70               	movlw	112
  8937   001290  6E17               	movwf	(___flmul@a+2)^0,c
  8938   001292  0E42               	movlw	66
  8939   001294  6E18               	movwf	(___flmul@a+3)^0,c
  8940   001296  ECF8  F013         	call	___flmul	;wreg free
  8941   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8942   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8943   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8944   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8945                           
  8946                           ;color.c: 155:     }
  8947   0012AA  EFC1  F009         	goto	l4824
  8948   0012AE                     l4820:
  8949                           
  8950                           ; BSR set to: 0
  8951                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8952   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8953   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8954   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8955   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8956   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8957   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8958   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8959   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8960   0012CE  EC5D  F029         	call	___flsub	;wreg free
  8961   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
  8962   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8963   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8964   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8965   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
  8966   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8967   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8968   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8969   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
  8970   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8971   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8972   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8973   001302  EC5D  F029         	call	___flsub	;wreg free
  8974   001306  C02A  F032         	movff	?___flsub,___fldiv@b
  8975   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8976   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8977   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8978   001316  EC0D  F016         	call	___fldiv	;wreg free
  8979   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2643
  8980   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2643+1
  8981   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2643+2
  8982   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2643+3
  8983   00132A                     
  8984                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8985   00132A  0E00               	movlw	0
  8986   00132C  6E05               	movwf	___fladd@a^0,c
  8987   00132E  0E00               	movlw	0
  8988   001330  6E06               	movwf	(___fladd@a+1)^0,c
  8989   001332  0E80               	movlw	128
  8990   001334  6E07               	movwf	(___fladd@a+2)^0,c
  8991   001336  0E40               	movlw	64
  8992   001338  6E08               	movwf	(___fladd@a+3)^0,c
  8993   00133A  C060  F001         	movff	_Colour_decider$2643,___fladd@b
  8994   00133E  C061  F002         	movff	_Colour_decider$2643+1,___fladd@b+1
  8995   001342  C062  F003         	movff	_Colour_decider$2643+2,___fladd@b+2
  8996   001346  C063  F004         	movff	_Colour_decider$2643+3,___fladd@b+3
  8997   00134A  EC98  F011         	call	___fladd	;wreg free
  8998   00134E  C001  F011         	movff	?___fladd,___flmul@b
  8999   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
  9000   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
  9001   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
  9002   00135E  0E00               	movlw	0
  9003   001360  6E15               	movwf	___flmul@a^0,c
  9004   001362  0E00               	movlw	0
  9005   001364  6E16               	movwf	(___flmul@a+1)^0,c
  9006   001366  0E70               	movlw	112
  9007   001368  6E17               	movwf	(___flmul@a+2)^0,c
  9008   00136A  0E42               	movlw	66
  9009   00136C  6E18               	movwf	(___flmul@a+3)^0,c
  9010   00136E  ECF8  F013         	call	___flmul	;wreg free
  9011   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9012   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9013   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9014   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9015   001382                     l4824:
  9016                           
  9017                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9018   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9019   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9020   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9021   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9022   001392  0E00               	movlw	0
  9023   001394  6E2E               	movwf	___flge@ff2^0,c
  9024   001396  0E00               	movlw	0
  9025   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
  9026   00139A  0EA5               	movlw	165
  9027   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
  9028   00139E  0E43               	movlw	67
  9029   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
  9030   0013A2  EC75  F022         	call	___flge	;wreg free
  9031   0013A6  A0D8               	btfss	status,0,c
  9032   0013A8  EFD8  F009         	goto	u4901
  9033   0013AC  EFDA  F009         	goto	u4900
  9034   0013B0                     u4901:
  9035   0013B0  EFF9  F009         	goto	l4834
  9036   0013B4                     u4900:
  9037   0013B4  0E00               	movlw	0
  9038   0013B6  6E2A               	movwf	___flge@ff1^0,c
  9039   0013B8  0E00               	movlw	0
  9040   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
  9041   0013BC  0EB4               	movlw	180
  9042   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
  9043   0013C0  0E43               	movlw	67
  9044   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
  9045   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9046   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9047   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9048   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9049   0013D4  EC75  F022         	call	___flge	;wreg free
  9050   0013D8  A0D8               	btfss	status,0,c
  9051   0013DA  EFF1  F009         	goto	u4911
  9052   0013DE  EFF3  F009         	goto	u4910
  9053   0013E2                     u4911:
  9054   0013E2  EFF9  F009         	goto	l4834
  9055   0013E6                     u4910:
  9056   0013E6                     
  9057                           ;color.c: 164:         return 1;
  9058   0013E6  0E00               	movlw	0
  9059   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9060   0013EA  0E01               	movlw	1
  9061   0013EC  6E4B               	movwf	?_Colour_decider^0,c
  9062   0013EE  EF9A  F00C         	goto	l70
  9063   0013F2                     l4834:
  9064   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9065   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9066   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9067   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9068   001402  0E00               	movlw	0
  9069   001404  6E2E               	movwf	___flge@ff2^0,c
  9070   001406  0E00               	movlw	0
  9071   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
  9072   00140A  0EA0               	movlw	160
  9073   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
  9074   00140E  0E40               	movlw	64
  9075   001410  6E31               	movwf	(___flge@ff2+3)^0,c
  9076   001412  EC75  F022         	call	___flge	;wreg free
  9077   001416  A0D8               	btfss	status,0,c
  9078   001418  EF10  F00A         	goto	u4921
  9079   00141C  EF12  F00A         	goto	u4920
  9080   001420                     u4921:
  9081   001420  EF31  F00A         	goto	l4844
  9082   001424                     u4920:
  9083   001424  0E00               	movlw	0
  9084   001426  6E2A               	movwf	___flge@ff1^0,c
  9085   001428  0E00               	movlw	0
  9086   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9087   00142C  0E40               	movlw	64
  9088   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9089   001430  0E41               	movlw	65
  9090   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
  9091   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9092   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9093   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9094   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9095   001444  EC75  F022         	call	___flge	;wreg free
  9096   001448  A0D8               	btfss	status,0,c
  9097   00144A  EF29  F00A         	goto	u4931
  9098   00144E  EF2B  F00A         	goto	u4930
  9099   001452                     u4931:
  9100   001452  EF31  F00A         	goto	l4844
  9101   001456                     u4930:
  9102   001456                     
  9103                           ;color.c: 168:         return 2;
  9104   001456  0E00               	movlw	0
  9105   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9106   00145A  0E02               	movlw	2
  9107   00145C  6E4B               	movwf	?_Colour_decider^0,c
  9108   00145E  EF9A  F00C         	goto	l70
  9109   001462                     l4844:
  9110   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9111   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9112   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9113   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9114   001472  0E00               	movlw	0
  9115   001474  6E2E               	movwf	___flge@ff2^0,c
  9116   001476  0E00               	movlw	0
  9117   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
  9118   00147A  0EA0               	movlw	160
  9119   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
  9120   00147E  0E41               	movlw	65
  9121   001480  6E31               	movwf	(___flge@ff2+3)^0,c
  9122   001482  EC75  F022         	call	___flge	;wreg free
  9123   001486  A0D8               	btfss	status,0,c
  9124   001488  EF48  F00A         	goto	u4941
  9125   00148C  EF4A  F00A         	goto	u4940
  9126   001490                     u4941:
  9127   001490  EFCA  F00A         	goto	l4870
  9128   001494                     u4940:
  9129   001494  0E00               	movlw	0
  9130   001496  6E2A               	movwf	___flge@ff1^0,c
  9131   001498  0E00               	movlw	0
  9132   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9133   00149C  0EE8               	movlw	232
  9134   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9135   0014A0  0E41               	movlw	65
  9136   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
  9137   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9138   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9139   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9140   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9141   0014B4  EC75  F022         	call	___flge	;wreg free
  9142   0014B8  A0D8               	btfss	status,0,c
  9143   0014BA  EF61  F00A         	goto	u4951
  9144   0014BE  EF63  F00A         	goto	u4950
  9145   0014C2                     u4951:
  9146   0014C2  EFCA  F00A         	goto	l4870
  9147   0014C6                     u4950:
  9148   0014C6                     
  9149                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9150   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9151   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9152   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
  9153   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9154   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9155   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9156   0014DE  0ECD               	movlw	205
  9157   0014E0  6E2E               	movwf	___flge@ff2^0,c
  9158   0014E2  0ECC               	movlw	204
  9159   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
  9160   0014E6  0E4C               	movlw	76
  9161   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
  9162   0014EA  0E3E               	movlw	62
  9163   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
  9164   0014EE  EC75  F022         	call	___flge	;wreg free
  9165   0014F2  A0D8               	btfss	status,0,c
  9166   0014F4  EF7E  F00A         	goto	u4961
  9167   0014F8  EF80  F00A         	goto	u4960
  9168   0014FC                     u4961:
  9169   0014FC  EF9F  F00A         	goto	l4858
  9170   001500                     u4960:
  9171   001500  0E1F               	movlw	31
  9172   001502  6E2A               	movwf	___flge@ff1^0,c
  9173   001504  0E85               	movlw	133
  9174   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
  9175   001508  0E6B               	movlw	107
  9176   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
  9177   00150C  0E3E               	movlw	62
  9178   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
  9179   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9180   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9181   001518  CFDE F02E          	movff	postinc2,___flge@ff2
  9182   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
  9183   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
  9184   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
  9185   001528  EC75  F022         	call	___flge	;wreg free
  9186   00152C  A0D8               	btfss	status,0,c
  9187   00152E  EF9B  F00A         	goto	u4971
  9188   001532  EF9D  F00A         	goto	u4970
  9189   001536                     u4971:
  9190   001536  EF9F  F00A         	goto	l4858
  9191   00153A                     u4970:
  9192   00153A  EF5E  F008         	goto	l4802
  9193   00153E                     l4858:
  9194   00153E  EE20 F008          	lfsr	2,8
  9195   001542  504D               	movf	Colour_decider@rel^0,w,c
  9196   001544  26D9               	addwf	fsr2l,f,c
  9197   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9198   001548  22DA               	addwfc	fsr2h,f,c
  9199   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
  9200   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9201   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9202   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9203   00155A  0E29               	movlw	41
  9204   00155C  6E2E               	movwf	___flge@ff2^0,c
  9205   00155E  0E5C               	movlw	92
  9206   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
  9207   001562  0E0F               	movlw	15
  9208   001564  6E30               	movwf	(___flge@ff2+2)^0,c
  9209   001566  0E3E               	movlw	62
  9210   001568  6E31               	movwf	(___flge@ff2+3)^0,c
  9211   00156A  EC75  F022         	call	___flge	;wreg free
  9212   00156E  A0D8               	btfss	status,0,c
  9213   001570  EFBC  F00A         	goto	u4981
  9214   001574  EFBE  F00A         	goto	u4980
  9215   001578                     u4981:
  9216   001578  EFC4  F00A         	goto	l4866
  9217   00157C                     u4980:
  9218   00157C                     l4860:
  9219                           
  9220                           ;color.c: 179:             return 4;
  9221   00157C  0E00               	movlw	0
  9222   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9223   001580  0E04               	movlw	4
  9224   001582  6E4B               	movwf	?_Colour_decider^0,c
  9225   001584  EF9A  F00C         	goto	l70
  9226   001588                     l4866:
  9227                           
  9228                           ;color.c: 182:             return 3;
  9229   001588  0E00               	movlw	0
  9230   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9231   00158C  0E03               	movlw	3
  9232   00158E  6E4B               	movwf	?_Colour_decider^0,c
  9233   001590  EF9A  F00C         	goto	l70
  9234   001594                     l4870:
  9235   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9236   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9237   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9238   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9239   0015A4  0E00               	movlw	0
  9240   0015A6  6E2E               	movwf	___flge@ff2^0,c
  9241   0015A8  0E00               	movlw	0
  9242   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
  9243   0015AC  0E34               	movlw	52
  9244   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
  9245   0015B0  0E42               	movlw	66
  9246   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
  9247   0015B4  EC75  F022         	call	___flge	;wreg free
  9248   0015B8  A0D8               	btfss	status,0,c
  9249   0015BA  EFE1  F00A         	goto	u4991
  9250   0015BE  EFE3  F00A         	goto	u4990
  9251   0015C2                     u4991:
  9252   0015C2  EF48  F00B         	goto	l4894
  9253   0015C6                     u4990:
  9254   0015C6  0E00               	movlw	0
  9255   0015C8  6E2A               	movwf	___flge@ff1^0,c
  9256   0015CA  0E00               	movlw	0
  9257   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
  9258   0015CE  0EA0               	movlw	160
  9259   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
  9260   0015D2  0E42               	movlw	66
  9261   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
  9262   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9263   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9264   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9265   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9266   0015E6  EC75  F022         	call	___flge	;wreg free
  9267   0015EA  A0D8               	btfss	status,0,c
  9268   0015EC  EFFA  F00A         	goto	u5001
  9269   0015F0  EFFC  F00A         	goto	u5000
  9270   0015F4                     u5001:
  9271   0015F4  EF48  F00B         	goto	l4894
  9272   0015F8                     u5000:
  9273   0015F8                     
  9274                           ;color.c: 188:         if(0.15<=rel->B){
  9275   0015F8  EE20 F008          	lfsr	2,8
  9276   0015FC  504D               	movf	Colour_decider@rel^0,w,c
  9277   0015FE  26D9               	addwf	fsr2l,f,c
  9278   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9279   001602  22DA               	addwfc	fsr2h,f,c
  9280   001604  CFDE F02A          	movff	postinc2,___flge@ff1
  9281   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9282   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9283   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9284   001614  0E9A               	movlw	154
  9285   001616  6E2E               	movwf	___flge@ff2^0,c
  9286   001618  0E99               	movlw	153
  9287   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
  9288   00161C  0E19               	movlw	25
  9289   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
  9290   001620  0E3E               	movlw	62
  9291   001622  6E31               	movwf	(___flge@ff2+3)^0,c
  9292   001624  EC75  F022         	call	___flge	;wreg free
  9293   001628  A0D8               	btfss	status,0,c
  9294   00162A  EF19  F00B         	goto	u5011
  9295   00162E  EF1B  F00B         	goto	u5010
  9296   001632                     u5011:
  9297   001632  EF1D  F00B         	goto	l4882
  9298   001636                     u5010:
  9299   001636  EFBE  F00A         	goto	l4860
  9300   00163A                     l4882:
  9301   00163A  EE20 F008          	lfsr	2,8
  9302   00163E  504D               	movf	Colour_decider@rel^0,w,c
  9303   001640  26D9               	addwf	fsr2l,f,c
  9304   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9305   001644  22DA               	addwfc	fsr2h,f,c
  9306   001646  CFDE F02A          	movff	postinc2,___flge@ff1
  9307   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9308   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9309   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9310   001656  0E8F               	movlw	143
  9311   001658  6E2E               	movwf	___flge@ff2^0,c
  9312   00165A  0EC2               	movlw	194
  9313   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
  9314   00165E  0EF5               	movlw	245
  9315   001660  6E30               	movwf	(___flge@ff2+2)^0,c
  9316   001662  0E3D               	movlw	61
  9317   001664  6E31               	movwf	(___flge@ff2+3)^0,c
  9318   001666  EC75  F022         	call	___flge	;wreg free
  9319   00166A  A0D8               	btfss	status,0,c
  9320   00166C  EF3A  F00B         	goto	u5021
  9321   001670  EF3C  F00B         	goto	u5020
  9322   001674                     u5021:
  9323   001674  EF42  F00B         	goto	l4890
  9324   001678                     u5020:
  9325   001678                     l4884:
  9326                           
  9327                           ;color.c: 192:             return 6;
  9328   001678  0E00               	movlw	0
  9329   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9330   00167C  0E06               	movlw	6
  9331   00167E  6E4B               	movwf	?_Colour_decider^0,c
  9332   001680  EF9A  F00C         	goto	l70
  9333   001684                     l4890:
  9334                           
  9335                           ;color.c: 195:             return 5;
  9336   001684  0E00               	movlw	0
  9337   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9338   001688  0E05               	movlw	5
  9339   00168A  6E4B               	movwf	?_Colour_decider^0,c
  9340   00168C  EF9A  F00C         	goto	l70
  9341   001690                     l4894:
  9342   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9343   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9344   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9345   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9346   0016A0  0E00               	movlw	0
  9347   0016A2  6E2E               	movwf	___flge@ff2^0,c
  9348   0016A4  0E00               	movlw	0
  9349   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
  9350   0016A8  0EA2               	movlw	162
  9351   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
  9352   0016AC  0E42               	movlw	66
  9353   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
  9354   0016B0  EC75  F022         	call	___flge	;wreg free
  9355   0016B4  A0D8               	btfss	status,0,c
  9356   0016B6  EF5F  F00B         	goto	u5031
  9357   0016BA  EF61  F00B         	goto	u5030
  9358   0016BE                     u5031:
  9359   0016BE  EF9B  F00B         	goto	l4910
  9360   0016C2                     u5030:
  9361   0016C2  0E00               	movlw	0
  9362   0016C4  6E2A               	movwf	___flge@ff1^0,c
  9363   0016C6  0E00               	movlw	0
  9364   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
  9365   0016CA  0EE6               	movlw	230
  9366   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
  9367   0016CE  0E42               	movlw	66
  9368   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
  9369   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9370   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9371   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9372   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9373   0016E2  EC75  F022         	call	___flge	;wreg free
  9374   0016E6  A0D8               	btfss	status,0,c
  9375   0016E8  EF78  F00B         	goto	u5041
  9376   0016EC  EF7A  F00B         	goto	u5040
  9377   0016F0                     u5041:
  9378   0016F0  EF9B  F00B         	goto	l4910
  9379   0016F4                     u5040:
  9380   0016F4                     
  9381                           ;color.c: 201:         if(0.15<=rel->B){
  9382   0016F4  EE20 F008          	lfsr	2,8
  9383   0016F8  504D               	movf	Colour_decider@rel^0,w,c
  9384   0016FA  26D9               	addwf	fsr2l,f,c
  9385   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9386   0016FE  22DA               	addwfc	fsr2h,f,c
  9387   001700  CFDE F02A          	movff	postinc2,___flge@ff1
  9388   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9389   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9390   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9391   001710  0E9A               	movlw	154
  9392   001712  6E2E               	movwf	___flge@ff2^0,c
  9393   001714  0E99               	movlw	153
  9394   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
  9395   001718  0E19               	movlw	25
  9396   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
  9397   00171C  0E3E               	movlw	62
  9398   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
  9399   001720  EC75  F022         	call	___flge	;wreg free
  9400   001724  A0D8               	btfss	status,0,c
  9401   001726  EF97  F00B         	goto	u5051
  9402   00172A  EF99  F00B         	goto	u5050
  9403   00172E                     u5051:
  9404   00172E  EF3C  F00B         	goto	l4884
  9405   001732                     u5050:
  9406   001732  EFBE  F00A         	goto	l4860
  9407   001736                     l4910:
  9408   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9409   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9410   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9411   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9412   001746  0E00               	movlw	0
  9413   001748  6E2E               	movwf	___flge@ff2^0,c
  9414   00174A  0E00               	movlw	0
  9415   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
  9416   00174E  0EF0               	movlw	240
  9417   001750  6E30               	movwf	(___flge@ff2+2)^0,c
  9418   001752  0E41               	movlw	65
  9419   001754  6E31               	movwf	(___flge@ff2+3)^0,c
  9420   001756  EC75  F022         	call	___flge	;wreg free
  9421   00175A  A0D8               	btfss	status,0,c
  9422   00175C  EFB2  F00B         	goto	u5061
  9423   001760  EFB4  F00B         	goto	u5060
  9424   001764                     u5061:
  9425   001764  EFCD  F00B         	goto	l4914
  9426   001768                     u5060:
  9427   001768  0E00               	movlw	0
  9428   00176A  6E2A               	movwf	___flge@ff1^0,c
  9429   00176C  0E00               	movlw	0
  9430   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
  9431   001770  0E68               	movlw	104
  9432   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
  9433   001774  0E42               	movlw	66
  9434   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
  9435   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9436   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9437   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9438   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9439   001788  EC75  F022         	call	___flge	;wreg free
  9440   00178C  B0D8               	btfsc	status,0,c
  9441   00178E  EFCB  F00B         	goto	u5071
  9442   001792  EFCD  F00B         	goto	u5070
  9443   001796                     u5071:
  9444   001796  EFBE  F00A         	goto	l4860
  9445   00179A                     u5070:
  9446   00179A                     l4914:
  9447   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9448   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9449   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9450   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9451   0017AA  0E00               	movlw	0
  9452   0017AC  6E2E               	movwf	___flge@ff2^0,c
  9453   0017AE  0E00               	movlw	0
  9454   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
  9455   0017B2  0EF0               	movlw	240
  9456   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
  9457   0017B6  0E42               	movlw	66
  9458   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
  9459   0017BA  EC75  F022         	call	___flge	;wreg free
  9460   0017BE  A0D8               	btfss	status,0,c
  9461   0017C0  EFE4  F00B         	goto	u5081
  9462   0017C4  EFE6  F00B         	goto	u5080
  9463   0017C8                     u5081:
  9464   0017C8  EF01  F00C         	goto	l4924
  9465   0017CC                     u5080:
  9466   0017CC  0E00               	movlw	0
  9467   0017CE  6E2A               	movwf	___flge@ff1^0,c
  9468   0017D0  0E00               	movlw	0
  9469   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
  9470   0017D4  0E5C               	movlw	92
  9471   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
  9472   0017D8  0E43               	movlw	67
  9473   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
  9474   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9475   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9476   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9477   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9478   0017EC  EC75  F022         	call	___flge	;wreg free
  9479   0017F0  A0D8               	btfss	status,0,c
  9480   0017F2  EFFD  F00B         	goto	u5091
  9481   0017F6  EFFF  F00B         	goto	u5090
  9482   0017FA                     u5091:
  9483   0017FA  EF01  F00C         	goto	l4924
  9484   0017FE                     u5090:
  9485   0017FE  EFBE  F00A         	goto	l4860
  9486   001802                     l4924:
  9487   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9488   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9489   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9490   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9491   001812  0E00               	movlw	0
  9492   001814  6E2E               	movwf	___flge@ff2^0,c
  9493   001816  0E00               	movlw	0
  9494   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
  9495   00181A  0E60               	movlw	96
  9496   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
  9497   00181E  0E41               	movlw	65
  9498   001820  6E31               	movwf	(___flge@ff2+3)^0,c
  9499   001822  EC75  F022         	call	___flge	;wreg free
  9500   001826  A0D8               	btfss	status,0,c
  9501   001828  EF18  F00C         	goto	u5101
  9502   00182C  EF1A  F00C         	goto	u5100
  9503   001830                     u5101:
  9504   001830  EF96  F00C         	goto	l4950
  9505   001834                     u5100:
  9506   001834  0E00               	movlw	0
  9507   001836  6E2A               	movwf	___flge@ff1^0,c
  9508   001838  0E00               	movlw	0
  9509   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9510   00183C  0E98               	movlw	152
  9511   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9512   001840  0E41               	movlw	65
  9513   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
  9514   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9515   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9516   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9517   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9518   001854  EC75  F022         	call	___flge	;wreg free
  9519   001858  A0D8               	btfss	status,0,c
  9520   00185A  EF31  F00C         	goto	u5111
  9521   00185E  EF33  F00C         	goto	u5110
  9522   001862                     u5111:
  9523   001862  EF96  F00C         	goto	l4950
  9524   001866                     u5110:
  9525   001866                     
  9526                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9527   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9528   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9529   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
  9530   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9531   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9532   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9533   00187E  0ECD               	movlw	205
  9534   001880  6E2E               	movwf	___flge@ff2^0,c
  9535   001882  0ECC               	movlw	204
  9536   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
  9537   001886  0E4C               	movlw	76
  9538   001888  6E30               	movwf	(___flge@ff2+2)^0,c
  9539   00188A  0E3E               	movlw	62
  9540   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
  9541   00188E  EC75  F022         	call	___flge	;wreg free
  9542   001892  A0D8               	btfss	status,0,c
  9543   001894  EF4E  F00C         	goto	u5121
  9544   001898  EF50  F00C         	goto	u5120
  9545   00189C                     u5121:
  9546   00189C  EF6F  F00C         	goto	l4938
  9547   0018A0                     u5120:
  9548   0018A0  0E1F               	movlw	31
  9549   0018A2  6E2A               	movwf	___flge@ff1^0,c
  9550   0018A4  0E85               	movlw	133
  9551   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
  9552   0018A8  0E6B               	movlw	107
  9553   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
  9554   0018AC  0E3E               	movlw	62
  9555   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
  9556   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9557   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9558   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
  9559   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
  9560   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
  9561   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
  9562   0018C8  EC75  F022         	call	___flge	;wreg free
  9563   0018CC  A0D8               	btfss	status,0,c
  9564   0018CE  EF6B  F00C         	goto	u5131
  9565   0018D2  EF6D  F00C         	goto	u5130
  9566   0018D6                     u5131:
  9567   0018D6  EF6F  F00C         	goto	l4938
  9568   0018DA                     u5130:
  9569   0018DA  EF5E  F008         	goto	l4802
  9570   0018DE                     l4938:
  9571   0018DE  EE20 F008          	lfsr	2,8
  9572   0018E2  504D               	movf	Colour_decider@rel^0,w,c
  9573   0018E4  26D9               	addwf	fsr2l,f,c
  9574   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9575   0018E8  22DA               	addwfc	fsr2h,f,c
  9576   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
  9577   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9578   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9579   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9580   0018FA  0E9A               	movlw	154
  9581   0018FC  6E2E               	movwf	___flge@ff2^0,c
  9582   0018FE  0E99               	movlw	153
  9583   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
  9584   001902  0E19               	movlw	25
  9585   001904  6E30               	movwf	(___flge@ff2+2)^0,c
  9586   001906  0E3E               	movlw	62
  9587   001908  6E31               	movwf	(___flge@ff2+3)^0,c
  9588   00190A  EC75  F022         	call	___flge	;wreg free
  9589   00190E  A0D8               	btfss	status,0,c
  9590   001910  EF8C  F00C         	goto	u5141
  9591   001914  EF8E  F00C         	goto	u5140
  9592   001918                     u5141:
  9593   001918  EF90  F00C         	goto	l4946
  9594   00191C                     u5140:
  9595   00191C  EFBE  F00A         	goto	l4860
  9596   001920                     l4946:
  9597                           
  9598                           ;color.c: 223:             return 7;
  9599   001920  0E00               	movlw	0
  9600   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9601   001924  0E07               	movlw	7
  9602   001926  6E4B               	movwf	?_Colour_decider^0,c
  9603   001928  EF9A  F00C         	goto	l70
  9604   00192C                     l4950:
  9605                           
  9606                           ;color.c: 227:         return 10;
  9607   00192C  0E00               	movlw	0
  9608   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9609   001930  0E0A               	movlw	10
  9610   001932  6E4B               	movwf	?_Colour_decider^0,c
  9611   001934                     l70:
  9612   001934  0012               	return		;funcret
  9613   001936                     __end_of_Colour_decider:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function ___xxtofl *****************
  9617 ;; Defined at:
  9618 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  sign            1    wreg     unsigned char 
  9621 ;;  val             4    0[COMRAM] long 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  sign            1    8[COMRAM] unsigned char 
  9624 ;;  arg             4   10[COMRAM] unsigned long 
  9625 ;;  exp             1    9[COMRAM] unsigned char 
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  4    0[COMRAM] unsigned char 
  9628 ;; Registers used:
  9629 ;;		wreg, status,2, status,0
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9639 ;;Total ram usage:       14 bytes
  9640 ;; Hardware stack levels used: 1
  9641 ;; Hardware stack levels required when called: 1
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_colour_rel
  9646 ;;		_Colour_decider
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text50
  9651   003DD8                     __ptext50:
  9652                           	callstack 0
  9653   003DD8                     ___xxtofl:
  9654                           	callstack 28
  9655                           
  9656                           ;incstack = 0
  9657                           ;___xxtofl@sign stored from wreg
  9658   003DD8  6E09               	movwf	___xxtofl@sign^0,c
  9659   003DDA  5009               	movf	___xxtofl@sign^0,w,c
  9660   003DDC  B4D8               	btfsc	status,2,c
  9661   003DDE  EFF3  F01E         	goto	u4711
  9662   003DE2  EFF5  F01E         	goto	u4710
  9663   003DE6                     u4711:
  9664   003DE6  EF17  F01F         	goto	l1168
  9665   003DEA                     u4710:
  9666   003DEA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9667   003DEC  EFFC  F01E         	goto	u4720
  9668   003DF0  EFFA  F01E         	goto	u4721
  9669   003DF4                     u4721:
  9670   003DF4  EF17  F01F         	goto	l1168
  9671   003DF8                     u4720:
  9672   003DF8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9673   003DFC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9674   003E00  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9675   003E04  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9676   003E08  1E05               	comf	??___xxtofl^0,f,c
  9677   003E0A  1E06               	comf	(??___xxtofl+1)^0,f,c
  9678   003E0C  1E07               	comf	(??___xxtofl+2)^0,f,c
  9679   003E0E  1E08               	comf	(??___xxtofl+3)^0,f,c
  9680   003E10  2A05               	incf	??___xxtofl^0,f,c
  9681   003E12  0E00               	movlw	0
  9682   003E14  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9683   003E16  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9684   003E18  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9685   003E1A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9686   003E1E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9687   003E22  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9688   003E26  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9689   003E2A  EF1F  F01F         	goto	l4672
  9690   003E2E                     l1168:
  9691   003E2E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9692   003E32  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9693   003E36  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9694   003E3A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9695   003E3E                     l4672:
  9696   003E3E  5001               	movf	___xxtofl@val^0,w,c
  9697   003E40  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9698   003E42  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9699   003E44  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9700   003E46  A4D8               	btfss	status,2,c
  9701   003E48  EF28  F01F         	goto	u4731
  9702   003E4C  EF2A  F01F         	goto	u4730
  9703   003E50                     u4731:
  9704   003E50  EF34  F01F         	goto	l4678
  9705   003E54                     u4730:
  9706   003E54  0E00               	movlw	0
  9707   003E56  6E01               	movwf	?___xxtofl^0,c
  9708   003E58  0E00               	movlw	0
  9709   003E5A  6E02               	movwf	(?___xxtofl+1)^0,c
  9710   003E5C  0E00               	movlw	0
  9711   003E5E  6E03               	movwf	(?___xxtofl+2)^0,c
  9712   003E60  0E00               	movlw	0
  9713   003E62  6E04               	movwf	(?___xxtofl+3)^0,c
  9714   003E64  EFC5  F01F         	goto	l1171
  9715   003E68                     l4678:
  9716   003E68  0E96               	movlw	150
  9717   003E6A  6E0A               	movwf	___xxtofl@exp^0,c
  9718   003E6C  EF3E  F01F         	goto	l4682
  9719   003E70                     l4680:
  9720   003E70  2A0A               	incf	___xxtofl@exp^0,f,c
  9721   003E72  90D8               	bcf	status,0,c
  9722   003E74  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9723   003E76  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9724   003E78  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9725   003E7A  320B               	rrcf	___xxtofl@arg^0,f,c
  9726   003E7C                     l4682:
  9727   003E7C  0E00               	movlw	0
  9728   003E7E  140B               	andwf	___xxtofl@arg^0,w,c
  9729   003E80  6E05               	movwf	??___xxtofl^0,c
  9730   003E82  0E00               	movlw	0
  9731   003E84  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9732   003E86  6E06               	movwf	(??___xxtofl+1)^0,c
  9733   003E88  0E00               	movlw	0
  9734   003E8A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9735   003E8C  6E07               	movwf	(??___xxtofl+2)^0,c
  9736   003E8E  0EFE               	movlw	254
  9737   003E90  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9738   003E92  6E08               	movwf	(??___xxtofl+3)^0,c
  9739   003E94  5005               	movf	??___xxtofl^0,w,c
  9740   003E96  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9741   003E98  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9742   003E9A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9743   003E9C  A4D8               	btfss	status,2,c
  9744   003E9E  EF53  F01F         	goto	u4741
  9745   003EA2  EF55  F01F         	goto	u4740
  9746   003EA6                     u4741:
  9747   003EA6  EF38  F01F         	goto	l4680
  9748   003EAA                     u4740:
  9749   003EAA  EF63  F01F         	goto	l1175
  9750   003EAE                     l4684:
  9751   003EAE  2A0A               	incf	___xxtofl@exp^0,f,c
  9752   003EB0  0E01               	movlw	1
  9753   003EB2  260B               	addwf	___xxtofl@arg^0,f,c
  9754   003EB4  0E00               	movlw	0
  9755   003EB6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9756   003EB8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9757   003EBA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9758   003EBC  90D8               	bcf	status,0,c
  9759   003EBE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9760   003EC0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9761   003EC2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9762   003EC4  320B               	rrcf	___xxtofl@arg^0,f,c
  9763   003EC6                     l1175:
  9764   003EC6  0E00               	movlw	0
  9765   003EC8  140B               	andwf	___xxtofl@arg^0,w,c
  9766   003ECA  6E05               	movwf	??___xxtofl^0,c
  9767   003ECC  0E00               	movlw	0
  9768   003ECE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9769   003ED0  6E06               	movwf	(??___xxtofl+1)^0,c
  9770   003ED2  0E00               	movlw	0
  9771   003ED4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9772   003ED6  6E07               	movwf	(??___xxtofl+2)^0,c
  9773   003ED8  0EFF               	movlw	255
  9774   003EDA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9775   003EDC  6E08               	movwf	(??___xxtofl+3)^0,c
  9776   003EDE  5005               	movf	??___xxtofl^0,w,c
  9777   003EE0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9778   003EE2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9779   003EE4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9780   003EE6  A4D8               	btfss	status,2,c
  9781   003EE8  EF78  F01F         	goto	u4751
  9782   003EEC  EF7A  F01F         	goto	u4750
  9783   003EF0                     u4751:
  9784   003EF0  EF57  F01F         	goto	l4684
  9785   003EF4                     u4750:
  9786   003EF4  EF82  F01F         	goto	l4692
  9787   003EF8                     l4690:
  9788   003EF8  060A               	decf	___xxtofl@exp^0,f,c
  9789   003EFA  90D8               	bcf	status,0,c
  9790   003EFC  360B               	rlcf	___xxtofl@arg^0,f,c
  9791   003EFE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9792   003F00  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9793   003F02  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9794   003F04                     l4692:
  9795   003F04  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9796   003F06  EF87  F01F         	goto	u4761
  9797   003F0A  EF89  F01F         	goto	u4760
  9798   003F0E                     u4761:
  9799   003F0E  EF91  F01F         	goto	l1182
  9800   003F12                     u4760:
  9801   003F12  0E02               	movlw	2
  9802   003F14  600A               	cpfslt	___xxtofl@exp^0,c
  9803   003F16  EF8F  F01F         	goto	u4771
  9804   003F1A  EF91  F01F         	goto	u4770
  9805   003F1E                     u4771:
  9806   003F1E  EF7C  F01F         	goto	l4690
  9807   003F22                     u4770:
  9808   003F22                     l1182:
  9809   003F22  B00A               	btfsc	___xxtofl@exp^0,0,c
  9810   003F24  EF96  F01F         	goto	u4781
  9811   003F28  EF98  F01F         	goto	u4780
  9812   003F2C                     u4781:
  9813   003F2C  EF99  F01F         	goto	l4698
  9814   003F30                     u4780:
  9815   003F30  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9816   003F32                     l4698:
  9817   003F32  90D8               	bcf	status,0,c
  9818   003F34  320A               	rrcf	___xxtofl@exp^0,f,c
  9819   003F36  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9820   003F3A  6A06               	clrf	(??___xxtofl+1)^0,c
  9821   003F3C  6A07               	clrf	(??___xxtofl+2)^0,c
  9822   003F3E  6A08               	clrf	(??___xxtofl+3)^0,c
  9823   003F40  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9824   003F44  6A07               	clrf	(??___xxtofl+2)^0,c
  9825   003F46  6A06               	clrf	(??___xxtofl+1)^0,c
  9826   003F48  6A05               	clrf	??___xxtofl^0,c
  9827   003F4A  5005               	movf	??___xxtofl^0,w,c
  9828   003F4C  120B               	iorwf	___xxtofl@arg^0,f,c
  9829   003F4E  5006               	movf	(??___xxtofl+1)^0,w,c
  9830   003F50  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9831   003F52  5007               	movf	(??___xxtofl+2)^0,w,c
  9832   003F54  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9833   003F56  5008               	movf	(??___xxtofl+3)^0,w,c
  9834   003F58  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9835   003F5A  5009               	movf	___xxtofl@sign^0,w,c
  9836   003F5C  B4D8               	btfsc	status,2,c
  9837   003F5E  EFB3  F01F         	goto	u4791
  9838   003F62  EFB5  F01F         	goto	u4790
  9839   003F66                     u4791:
  9840   003F66  EFBD  F01F         	goto	l4708
  9841   003F6A                     u4790:
  9842   003F6A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9843   003F6C  EFBC  F01F         	goto	u4800
  9844   003F70  EFBA  F01F         	goto	u4801
  9845   003F74                     u4801:
  9846   003F74  EFBD  F01F         	goto	l4708
  9847   003F78                     u4800:
  9848   003F78  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9849   003F7A                     l4708:
  9850   003F7A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9851   003F7E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9852   003F82  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9853   003F86  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9854   003F8A                     l1171:
  9855   003F8A  0012               	return		;funcret
  9856   003F8C                     __end_of___xxtofl:
  9857                           	callstack 0
  9858                           
  9859 ;; *************** function ___flsub *****************
  9860 ;; Defined at:
  9861 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  b               4   41[COMRAM] unsigned char 
  9864 ;;  a               4   45[COMRAM] unsigned char 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  4   41[COMRAM] unsigned char 
  9869 ;; Registers used:
  9870 ;;		wreg, status,2, status,0, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9879 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;Total ram usage:        8 bytes
  9881 ;; Hardware stack levels used: 1
  9882 ;; Hardware stack levels required when called: 2
  9883 ;; This function calls:
  9884 ;;		___fladd
  9885 ;; This function is called by:
  9886 ;;		_Colour_decider
  9887 ;;		_efgtoa
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text51
  9892   0052BA                     __ptext51:
  9893                           	callstack 0
  9894   0052BA                     ___flsub:
  9895                           	callstack 24
  9896   0052BA  0E00               	movlw	0
  9897   0052BC  1A2E               	xorwf	___flsub@a^0,f,c
  9898   0052BE  0E00               	movlw	0
  9899   0052C0  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  9900   0052C2  0E00               	movlw	0
  9901   0052C4  1A30               	xorwf	(___flsub@a+2)^0,f,c
  9902   0052C6  0E80               	movlw	128
  9903   0052C8  1A31               	xorwf	(___flsub@a+3)^0,f,c
  9904   0052CA  C02A  F001         	movff	___flsub@b,___fladd@b
  9905   0052CE  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
  9906   0052D2  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
  9907   0052D6  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
  9908   0052DA  C02E  F005         	movff	___flsub@a,___fladd@a
  9909   0052DE  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
  9910   0052E2  C030  F007         	movff	___flsub@a+2,___fladd@a+2
  9911   0052E6  C031  F008         	movff	___flsub@a+3,___fladd@a+3
  9912   0052EA  EC98  F011         	call	___fladd	;wreg free
  9913   0052EE  C001  F02A         	movff	?___fladd,?___flsub
  9914   0052F2  C002  F02B         	movff	?___fladd+1,?___flsub+1
  9915   0052F6  C003  F02C         	movff	?___fladd+2,?___flsub+2
  9916   0052FA  C004  F02D         	movff	?___fladd+3,?___flsub+3
  9917   0052FE  0012               	return		;funcret
  9918   005300                     __end_of___flsub:
  9919                           	callstack 0
  9920                           
  9921 ;; *************** function ___fladd *****************
  9922 ;; Defined at:
  9923 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9924 ;; Parameters:    Size  Location     Type
  9925 ;;  b               4    0[COMRAM] unsigned char 
  9926 ;;  a               4    4[COMRAM] unsigned char 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  grs             1   15[COMRAM] unsigned char 
  9929 ;;  bexp            1   14[COMRAM] unsigned char 
  9930 ;;  aexp            1   13[COMRAM] unsigned char 
  9931 ;;  signs           1   12[COMRAM] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  4    0[COMRAM] unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg, status,2, status,0
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9941 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9944 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9945 ;;Total ram usage:       16 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 1
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_colour_rel
  9952 ;;		_Colour_decider
  9953 ;;		___flsub
  9954 ;;		_efgtoa
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text52
  9959   002330                     __ptext52:
  9960                           	callstack 0
  9961   002330                     ___fladd:
  9962                           	callstack 24
  9963   002330  5004               	movf	(___fladd@b+3)^0,w,c
  9964   002332  0B80               	andlw	128
  9965   002334  6E0D               	movwf	___fladd@signs^0,c
  9966   002336  5004               	movf	(___fladd@b+3)^0,w,c
  9967   002338  2404               	addwf	(___fladd@b+3)^0,w,c
  9968   00233A  6E0F               	movwf	___fladd@bexp^0,c
  9969   00233C  AE03               	btfss	(___fladd@b+2)^0,7,c
  9970   00233E  EFA3  F011         	goto	u2731
  9971   002342  EFA5  F011         	goto	u2730
  9972   002346                     u2731:
  9973   002346  EFA6  F011         	goto	l3374
  9974   00234A                     u2730:
  9975   00234A  800F               	bsf	___fladd@bexp^0,0,c
  9976   00234C                     l3374:
  9977   00234C  500F               	movf	___fladd@bexp^0,w,c
  9978   00234E  B4D8               	btfsc	status,2,c
  9979   002350  EFAC  F011         	goto	u2741
  9980   002354  EFAE  F011         	goto	u2740
  9981   002358                     u2741:
  9982   002358  EFC3  F011         	goto	l3384
  9983   00235C                     u2740:
  9984   00235C  280F               	incf	___fladd@bexp^0,w,c
  9985   00235E  A4D8               	btfss	status,2,c
  9986   002360  EFB4  F011         	goto	u2751
  9987   002364  EFB6  F011         	goto	u2750
  9988   002368                     u2751:
  9989   002368  EFBE  F011         	goto	l3380
  9990   00236C                     u2750:
  9991   00236C  0E00               	movlw	0
  9992   00236E  6E01               	movwf	___fladd@b^0,c
  9993   002370  0E00               	movlw	0
  9994   002372  6E02               	movwf	(___fladd@b+1)^0,c
  9995   002374  0E00               	movlw	0
  9996   002376  6E03               	movwf	(___fladd@b+2)^0,c
  9997   002378  0E00               	movlw	0
  9998   00237A  6E04               	movwf	(___fladd@b+3)^0,c
  9999   00237C                     l3380:
 10000   00237C  8E03               	bsf	(___fladd@b+2)^0,7,c
 10001   00237E  0E00               	movlw	0
 10002   002380  6E04               	movwf	(___fladd@b+3)^0,c
 10003   002382  EFCB  F011         	goto	l3386
 10004   002386                     l3384:
 10005   002386  0E00               	movlw	0
 10006   002388  6E01               	movwf	___fladd@b^0,c
 10007   00238A  0E00               	movlw	0
 10008   00238C  6E02               	movwf	(___fladd@b+1)^0,c
 10009   00238E  0E00               	movlw	0
 10010   002390  6E03               	movwf	(___fladd@b+2)^0,c
 10011   002392  0E00               	movlw	0
 10012   002394  6E04               	movwf	(___fladd@b+3)^0,c
 10013   002396                     l3386:
 10014   002396  5008               	movf	(___fladd@a+3)^0,w,c
 10015   002398  0B80               	andlw	128
 10016   00239A  6E0E               	movwf	___fladd@aexp^0,c
 10017   00239C  500D               	movf	___fladd@signs^0,w,c
 10018   00239E  180E               	xorwf	___fladd@aexp^0,w,c
 10019   0023A0  B4D8               	btfsc	status,2,c
 10020   0023A2  EFD5  F011         	goto	u2761
 10021   0023A6  EFD7  F011         	goto	u2760
 10022   0023AA                     u2761:
 10023   0023AA  EFD8  F011         	goto	l3392
 10024   0023AE                     u2760:
 10025   0023AE  8C0D               	bsf	___fladd@signs^0,6,c
 10026   0023B0                     l3392:
 10027   0023B0  5008               	movf	(___fladd@a+3)^0,w,c
 10028   0023B2  2408               	addwf	(___fladd@a+3)^0,w,c
 10029   0023B4  6E0E               	movwf	___fladd@aexp^0,c
 10030   0023B6  AE07               	btfss	(___fladd@a+2)^0,7,c
 10031   0023B8  EFE0  F011         	goto	u2771
 10032   0023BC  EFE2  F011         	goto	u2770
 10033   0023C0                     u2771:
 10034   0023C0  EFE3  F011         	goto	l3398
 10035   0023C4                     u2770:
 10036   0023C4  800E               	bsf	___fladd@aexp^0,0,c
 10037   0023C6                     l3398:
 10038   0023C6  500E               	movf	___fladd@aexp^0,w,c
 10039   0023C8  B4D8               	btfsc	status,2,c
 10040   0023CA  EFE9  F011         	goto	u2781
 10041   0023CE  EFEB  F011         	goto	u2780
 10042   0023D2                     u2781:
 10043   0023D2  EF00  F012         	goto	l3408
 10044   0023D6                     u2780:
 10045   0023D6  280E               	incf	___fladd@aexp^0,w,c
 10046   0023D8  A4D8               	btfss	status,2,c
 10047   0023DA  EFF1  F011         	goto	u2791
 10048   0023DE  EFF3  F011         	goto	u2790
 10049   0023E2                     u2791:
 10050   0023E2  EFFB  F011         	goto	l3404
 10051   0023E6                     u2790:
 10052   0023E6  0E00               	movlw	0
 10053   0023E8  6E05               	movwf	___fladd@a^0,c
 10054   0023EA  0E00               	movlw	0
 10055   0023EC  6E06               	movwf	(___fladd@a+1)^0,c
 10056   0023EE  0E00               	movlw	0
 10057   0023F0  6E07               	movwf	(___fladd@a+2)^0,c
 10058   0023F2  0E00               	movlw	0
 10059   0023F4  6E08               	movwf	(___fladd@a+3)^0,c
 10060   0023F6                     l3404:
 10061   0023F6  8E07               	bsf	(___fladd@a+2)^0,7,c
 10062   0023F8  0E00               	movlw	0
 10063   0023FA  6E08               	movwf	(___fladd@a+3)^0,c
 10064   0023FC  EF08  F012         	goto	l3410
 10065   002400                     l3408:
 10066   002400  0E00               	movlw	0
 10067   002402  6E05               	movwf	___fladd@a^0,c
 10068   002404  0E00               	movlw	0
 10069   002406  6E06               	movwf	(___fladd@a+1)^0,c
 10070   002408  0E00               	movlw	0
 10071   00240A  6E07               	movwf	(___fladd@a+2)^0,c
 10072   00240C  0E00               	movlw	0
 10073   00240E  6E08               	movwf	(___fladd@a+3)^0,c
 10074   002410                     l3410:
 10075   002410  500F               	movf	___fladd@bexp^0,w,c
 10076   002412  5C0E               	subwf	___fladd@aexp^0,w,c
 10077   002414  B0D8               	btfsc	status,0,c
 10078   002416  EF0F  F012         	goto	u2801
 10079   00241A  EF11  F012         	goto	u2800
 10080   00241E                     u2801:
 10081   00241E  EF38  F012         	goto	l3446
 10082   002422                     u2800:
 10083   002422  AC0D               	btfss	___fladd@signs^0,6,c
 10084   002424  EF16  F012         	goto	u2811
 10085   002428  EF18  F012         	goto	u2810
 10086   00242C                     u2811:
 10087   00242C  EF1A  F012         	goto	l3416
 10088   002430                     u2810:
 10089   002430  0E80               	movlw	128
 10090   002432  1A0D               	xorwf	___fladd@signs^0,f,c
 10091   002434                     l3416:
 10092   002434  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10093   002438  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10094   00243C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10095   002440  C001  F010         	movff	___fladd@b,___fladd@grs
 10096   002444  C005  F001         	movff	___fladd@a,___fladd@b
 10097   002448  C010  F005         	movff	___fladd@grs,___fladd@a
 10098   00244C  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10099   002450  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10100   002454  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10101   002458  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10102   00245C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10103   002460  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10104   002464  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10105   002468  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10106   00246C  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10107   002470                     l3446:
 10108   002470  0E00               	movlw	0
 10109   002472  6E10               	movwf	___fladd@grs^0,c
 10110   002474  500F               	movf	___fladd@bexp^0,w,c
 10111   002476  C00E  F009         	movff	___fladd@aexp,??___fladd
 10112   00247A  6A0A               	clrf	(??___fladd+1)^0,c
 10113   00247C  5E09               	subwf	??___fladd^0,f,c
 10114   00247E  0E00               	movlw	0
 10115   002480  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10116   002482  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10117   002484  EF4D  F012         	goto	u2821
 10118   002488  500A               	movf	(??___fladd+1)^0,w,c
 10119   00248A  E109               	bnz	u2820
 10120   00248C  0E1A               	movlw	26
 10121   00248E  5C09               	subwf	??___fladd^0,w,c
 10122   002490  A0D8               	btfss	status,0,c
 10123   002492  EF4D  F012         	goto	u2821
 10124   002496  EF4F  F012         	goto	u2820
 10125   00249A                     u2821:
 10126   00249A  EF86  F012         	goto	l1042
 10127   00249E                     u2820:
 10128   00249E  5001               	movf	___fladd@b^0,w,c
 10129   0024A0  1002               	iorwf	(___fladd@b+1)^0,w,c
 10130   0024A2  1003               	iorwf	(___fladd@b+2)^0,w,c
 10131   0024A4  1004               	iorwf	(___fladd@b+3)^0,w,c
 10132   0024A6  A4D8               	btfss	status,2,c
 10133   0024A8  EF58  F012         	goto	u2831
 10134   0024AC  EF5B  F012         	goto	u2830
 10135   0024B0                     u2831:
 10136   0024B0  0E01               	movlw	1
 10137   0024B2  EF5C  F012         	goto	u2840
 10138   0024B6                     u2830:
 10139   0024B6  0E00               	movlw	0
 10140   0024B8                     u2840:
 10141   0024B8  6E10               	movwf	___fladd@grs^0,c
 10142   0024BA  0E00               	movlw	0
 10143   0024BC  6E01               	movwf	___fladd@b^0,c
 10144   0024BE  0E00               	movlw	0
 10145   0024C0  6E02               	movwf	(___fladd@b+1)^0,c
 10146   0024C2  0E00               	movlw	0
 10147   0024C4  6E03               	movwf	(___fladd@b+2)^0,c
 10148   0024C6  0E00               	movlw	0
 10149   0024C8  6E04               	movwf	(___fladd@b+3)^0,c
 10150   0024CA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10151   0024CE  EF8F  F012         	goto	l1041
 10152   0024D2                     l1043:
 10153   0024D2  A010               	btfss	___fladd@grs^0,0,c
 10154   0024D4  EF6E  F012         	goto	u2851
 10155   0024D8  EF70  F012         	goto	u2850
 10156   0024DC                     u2851:
 10157   0024DC  EF76  F012         	goto	l3458
 10158   0024E0                     u2850:
 10159   0024E0  90D8               	bcf	status,0,c
 10160   0024E2  3010               	rrcf	___fladd@grs^0,w,c
 10161   0024E4  0901               	iorlw	1
 10162   0024E6  6E10               	movwf	___fladd@grs^0,c
 10163   0024E8  EF78  F012         	goto	l3460
 10164   0024EC                     l3458:
 10165   0024EC  90D8               	bcf	status,0,c
 10166   0024EE  3210               	rrcf	___fladd@grs^0,f,c
 10167   0024F0                     l3460:
 10168   0024F0  A001               	btfss	___fladd@b^0,0,c
 10169   0024F2  EF7D  F012         	goto	u2861
 10170   0024F6  EF7F  F012         	goto	u2860
 10171   0024FA                     u2861:
 10172   0024FA  EF80  F012         	goto	l3464
 10173   0024FE                     u2860:
 10174   0024FE  8E10               	bsf	___fladd@grs^0,7,c
 10175   002500                     l3464:
 10176   002500  3404               	rlcf	(___fladd@b+3)^0,w,c
 10177   002502  3204               	rrcf	(___fladd@b+3)^0,f,c
 10178   002504  3203               	rrcf	(___fladd@b+2)^0,f,c
 10179   002506  3202               	rrcf	(___fladd@b+1)^0,f,c
 10180   002508  3201               	rrcf	___fladd@b^0,f,c
 10181   00250A  2A0F               	incf	___fladd@bexp^0,f,c
 10182   00250C                     l1042:
 10183   00250C  500E               	movf	___fladd@aexp^0,w,c
 10184   00250E  5C0F               	subwf	___fladd@bexp^0,w,c
 10185   002510  A0D8               	btfss	status,0,c
 10186   002512  EF8D  F012         	goto	u2871
 10187   002516  EF8F  F012         	goto	u2870
 10188   00251A                     u2871:
 10189   00251A  EF69  F012         	goto	l1043
 10190   00251E                     u2870:
 10191   00251E                     l1041:
 10192   00251E  BC0D               	btfsc	___fladd@signs^0,6,c
 10193   002520  EF94  F012         	goto	u2881
 10194   002524  EF96  F012         	goto	u2880
 10195   002528                     u2881:
 10196   002528  EFD6  F012         	goto	l3492
 10197   00252C                     u2880:
 10198   00252C  500F               	movf	___fladd@bexp^0,w,c
 10199   00252E  A4D8               	btfss	status,2,c
 10200   002530  EF9C  F012         	goto	u2891
 10201   002534  EF9E  F012         	goto	u2890
 10202   002538                     u2891:
 10203   002538  EFA8  F012         	goto	l3474
 10204   00253C                     u2890:
 10205   00253C  0E00               	movlw	0
 10206   00253E  6E01               	movwf	?___fladd^0,c
 10207   002540  0E00               	movlw	0
 10208   002542  6E02               	movwf	(?___fladd+1)^0,c
 10209   002544  0E00               	movlw	0
 10210   002546  6E03               	movwf	(?___fladd+2)^0,c
 10211   002548  0E00               	movlw	0
 10212   00254A  6E04               	movwf	(?___fladd+3)^0,c
 10213   00254C  EFF7  F013         	goto	l1050
 10214   002550                     l3474:
 10215   002550  5005               	movf	___fladd@a^0,w,c
 10216   002552  2601               	addwf	___fladd@b^0,f,c
 10217   002554  5006               	movf	(___fladd@a+1)^0,w,c
 10218   002556  2202               	addwfc	(___fladd@b+1)^0,f,c
 10219   002558  5007               	movf	(___fladd@a+2)^0,w,c
 10220   00255A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10221   00255C  5008               	movf	(___fladd@a+3)^0,w,c
 10222   00255E  2204               	addwfc	(___fladd@b+3)^0,f,c
 10223   002560  A004               	btfss	(___fladd@b+3)^0,0,c
 10224   002562  EFB5  F012         	goto	u2901
 10225   002566  EFB7  F012         	goto	u2900
 10226   00256A                     u2901:
 10227   00256A  EF63  F013         	goto	l3528
 10228   00256E                     u2900:
 10229   00256E  A010               	btfss	___fladd@grs^0,0,c
 10230   002570  EFBC  F012         	goto	u2911
 10231   002574  EFBE  F012         	goto	u2910
 10232   002578                     u2911:
 10233   002578  EFC4  F012         	goto	l3482
 10234   00257C                     u2910:
 10235   00257C  90D8               	bcf	status,0,c
 10236   00257E  3010               	rrcf	___fladd@grs^0,w,c
 10237   002580  0901               	iorlw	1
 10238   002582  6E10               	movwf	___fladd@grs^0,c
 10239   002584  EFC6  F012         	goto	l3484
 10240   002588                     l3482:
 10241   002588  90D8               	bcf	status,0,c
 10242   00258A  3210               	rrcf	___fladd@grs^0,f,c
 10243   00258C                     l3484:
 10244   00258C  A001               	btfss	___fladd@b^0,0,c
 10245   00258E  EFCB  F012         	goto	u2921
 10246   002592  EFCD  F012         	goto	u2920
 10247   002596                     u2921:
 10248   002596  EFCE  F012         	goto	l3488
 10249   00259A                     u2920:
 10250   00259A  8E10               	bsf	___fladd@grs^0,7,c
 10251   00259C                     l3488:
 10252   00259C  3404               	rlcf	(___fladd@b+3)^0,w,c
 10253   00259E  3204               	rrcf	(___fladd@b+3)^0,f,c
 10254   0025A0  3203               	rrcf	(___fladd@b+2)^0,f,c
 10255   0025A2  3202               	rrcf	(___fladd@b+1)^0,f,c
 10256   0025A4  3201               	rrcf	___fladd@b^0,f,c
 10257   0025A6  2A0F               	incf	___fladd@bexp^0,f,c
 10258   0025A8  EF63  F013         	goto	l3528
 10259   0025AC                     l3492:
 10260   0025AC  5005               	movf	___fladd@a^0,w,c
 10261   0025AE  5C01               	subwf	___fladd@b^0,w,c
 10262   0025B0  5006               	movf	(___fladd@a+1)^0,w,c
 10263   0025B2  5802               	subwfb	(___fladd@b+1)^0,w,c
 10264   0025B4  5007               	movf	(___fladd@a+2)^0,w,c
 10265   0025B6  5803               	subwfb	(___fladd@b+2)^0,w,c
 10266   0025B8  5004               	movf	(___fladd@b+3)^0,w,c
 10267   0025BA  0A80               	xorlw	128
 10268   0025BC  6E09               	movwf	??___fladd^0,c
 10269   0025BE  5008               	movf	(___fladd@a+3)^0,w,c
 10270   0025C0  0A80               	xorlw	128
 10271   0025C2  5809               	subwfb	??___fladd^0,w,c
 10272   0025C4  B0D8               	btfsc	status,0,c
 10273   0025C6  EFE7  F012         	goto	u2931
 10274   0025CA  EFE9  F012         	goto	u2930
 10275   0025CE                     u2931:
 10276   0025CE  EF14  F013         	goto	l3502
 10277   0025D2                     u2930:
 10278   0025D2  5001               	movf	___fladd@b^0,w,c
 10279   0025D4  5C05               	subwf	___fladd@a^0,w,c
 10280   0025D6  6E09               	movwf	??___fladd^0,c
 10281   0025D8  5002               	movf	(___fladd@b+1)^0,w,c
 10282   0025DA  5806               	subwfb	(___fladd@a+1)^0,w,c
 10283   0025DC  6E0A               	movwf	(??___fladd+1)^0,c
 10284   0025DE  5003               	movf	(___fladd@b+2)^0,w,c
 10285   0025E0  5807               	subwfb	(___fladd@a+2)^0,w,c
 10286   0025E2  6E0B               	movwf	(??___fladd+2)^0,c
 10287   0025E4  5004               	movf	(___fladd@b+3)^0,w,c
 10288   0025E6  5808               	subwfb	(___fladd@a+3)^0,w,c
 10289   0025E8  6E0C               	movwf	(??___fladd+3)^0,c
 10290   0025EA  0EFF               	movlw	255
 10291   0025EC  2409               	addwf	??___fladd^0,w,c
 10292   0025EE  6E01               	movwf	___fladd@b^0,c
 10293   0025F0  0EFF               	movlw	255
 10294   0025F2  200A               	addwfc	(??___fladd+1)^0,w,c
 10295   0025F4  6E02               	movwf	(___fladd@b+1)^0,c
 10296   0025F6  0EFF               	movlw	255
 10297   0025F8  200B               	addwfc	(??___fladd+2)^0,w,c
 10298   0025FA  6E03               	movwf	(___fladd@b+2)^0,c
 10299   0025FC  0EFF               	movlw	255
 10300   0025FE  200C               	addwfc	(??___fladd+3)^0,w,c
 10301   002600  6E04               	movwf	(___fladd@b+3)^0,c
 10302   002602  0E80               	movlw	128
 10303   002604  1A0D               	xorwf	___fladd@signs^0,f,c
 10304   002606  6C10               	negf	___fladd@grs^0,c
 10305   002608  5010               	movf	___fladd@grs^0,w,c
 10306   00260A  A4D8               	btfss	status,2,c
 10307   00260C  EF0A  F013         	goto	u2941
 10308   002610  EF0C  F013         	goto	u2940
 10309   002614                     u2941:
 10310   002614  EF1C  F013         	goto	l1058
 10311   002618                     u2940:
 10312   002618  0E01               	movlw	1
 10313   00261A  2601               	addwf	___fladd@b^0,f,c
 10314   00261C  0E00               	movlw	0
 10315   00261E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10316   002620  2203               	addwfc	(___fladd@b+2)^0,f,c
 10317   002622  2204               	addwfc	(___fladd@b+3)^0,f,c
 10318   002624  EF1C  F013         	goto	l1058
 10319   002628                     l3502:
 10320   002628  5005               	movf	___fladd@a^0,w,c
 10321   00262A  5E01               	subwf	___fladd@b^0,f,c
 10322   00262C  5006               	movf	(___fladd@a+1)^0,w,c
 10323   00262E  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10324   002630  5007               	movf	(___fladd@a+2)^0,w,c
 10325   002632  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10326   002634  5008               	movf	(___fladd@a+3)^0,w,c
 10327   002636  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10328   002638                     l1058:
 10329   002638  5001               	movf	___fladd@b^0,w,c
 10330   00263A  1002               	iorwf	(___fladd@b+1)^0,w,c
 10331   00263C  1003               	iorwf	(___fladd@b+2)^0,w,c
 10332   00263E  1004               	iorwf	(___fladd@b+3)^0,w,c
 10333   002640  A4D8               	btfss	status,2,c
 10334   002642  EF25  F013         	goto	u2951
 10335   002646  EF27  F013         	goto	u2950
 10336   00264A                     u2951:
 10337   00264A  EF5C  F013         	goto	l3526
 10338   00264E                     u2950:
 10339   00264E  5010               	movf	___fladd@grs^0,w,c
 10340   002650  A4D8               	btfss	status,2,c
 10341   002652  EF2D  F013         	goto	u2961
 10342   002656  EF2F  F013         	goto	u2960
 10343   00265A                     u2961:
 10344   00265A  EF5C  F013         	goto	l3526
 10345   00265E                     u2960:
 10346   00265E  0E00               	movlw	0
 10347   002660  6E01               	movwf	?___fladd^0,c
 10348   002662  0E00               	movlw	0
 10349   002664  6E02               	movwf	(?___fladd+1)^0,c
 10350   002666  0E00               	movlw	0
 10351   002668  6E03               	movwf	(?___fladd+2)^0,c
 10352   00266A  0E00               	movlw	0
 10353   00266C  6E04               	movwf	(?___fladd+3)^0,c
 10354   00266E  EFF7  F013         	goto	l1050
 10355   002672                     l3510:
 10356   002672  90D8               	bcf	status,0,c
 10357   002674  3601               	rlcf	___fladd@b^0,f,c
 10358   002676  3602               	rlcf	(___fladd@b+1)^0,f,c
 10359   002678  3603               	rlcf	(___fladd@b+2)^0,f,c
 10360   00267A  3604               	rlcf	(___fladd@b+3)^0,f,c
 10361   00267C  AE10               	btfss	___fladd@grs^0,7,c
 10362   00267E  EF43  F013         	goto	u2971
 10363   002682  EF45  F013         	goto	u2970
 10364   002686                     u2971:
 10365   002686  EF46  F013         	goto	l3516
 10366   00268A                     u2970:
 10367   00268A  8001               	bsf	___fladd@b^0,0,c
 10368   00268C                     l3516:
 10369   00268C  A010               	btfss	___fladd@grs^0,0,c
 10370   00268E  EF4B  F013         	goto	u2981
 10371   002692  EF4D  F013         	goto	u2980
 10372   002696                     u2981:
 10373   002696  EF51  F013         	goto	l3520
 10374   00269A                     u2980:
 10375   00269A  80D8               	bsf	status,0,c
 10376   00269C  3610               	rlcf	___fladd@grs^0,f,c
 10377   00269E  EF53  F013         	goto	l3522
 10378   0026A2                     l3520:
 10379   0026A2  90D8               	bcf	status,0,c
 10380   0026A4  3610               	rlcf	___fladd@grs^0,f,c
 10381   0026A6                     l3522:
 10382   0026A6  500F               	movf	___fladd@bexp^0,w,c
 10383   0026A8  B4D8               	btfsc	status,2,c
 10384   0026AA  EF59  F013         	goto	u2991
 10385   0026AE  EF5B  F013         	goto	u2990
 10386   0026B2                     u2991:
 10387   0026B2  EF5C  F013         	goto	l3526
 10388   0026B6                     u2990:
 10389   0026B6  060F               	decf	___fladd@bexp^0,f,c
 10390   0026B8                     l3526:
 10391   0026B8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10392   0026BA  EF61  F013         	goto	u3001
 10393   0026BE  EF63  F013         	goto	u3000
 10394   0026C2                     u3001:
 10395   0026C2  EF39  F013         	goto	l3510
 10396   0026C6                     u3000:
 10397   0026C6                     l3528:
 10398   0026C6  0E00               	movlw	0
 10399   0026C8  6E0E               	movwf	___fladd@aexp^0,c
 10400   0026CA  AE10               	btfss	___fladd@grs^0,7,c
 10401   0026CC  EF6A  F013         	goto	u3011
 10402   0026D0  EF6C  F013         	goto	u3010
 10403   0026D4                     u3011:
 10404   0026D4  EF84  F013         	goto	l1067
 10405   0026D8                     u3010:
 10406   0026D8  C010  F009         	movff	___fladd@grs,??___fladd
 10407   0026DC  0E7F               	movlw	127
 10408   0026DE  1609               	andwf	??___fladd^0,f,c
 10409   0026E0  B4D8               	btfsc	status,2,c
 10410   0026E2  EF75  F013         	goto	u3021
 10411   0026E6  EF77  F013         	goto	u3020
 10412   0026EA                     u3021:
 10413   0026EA  EF7B  F013         	goto	l1068
 10414   0026EE                     u3020:
 10415   0026EE                     l3534:
 10416   0026EE  0E01               	movlw	1
 10417   0026F0  6E0E               	movwf	___fladd@aexp^0,c
 10418   0026F2  EF84  F013         	goto	l1067
 10419   0026F6                     l1068:
 10420   0026F6  A001               	btfss	___fladd@b^0,0,c
 10421   0026F8  EF80  F013         	goto	u3031
 10422   0026FC  EF82  F013         	goto	u3030
 10423   002700                     u3031:
 10424   002700  EF84  F013         	goto	l1067
 10425   002704                     u3030:
 10426   002704  EF77  F013         	goto	l3534
 10427   002708                     l1067:
 10428   002708  500E               	movf	___fladd@aexp^0,w,c
 10429   00270A  B4D8               	btfsc	status,2,c
 10430   00270C  EF8A  F013         	goto	u3041
 10431   002710  EF8C  F013         	goto	u3040
 10432   002714                     u3041:
 10433   002714  EFB7  F013         	goto	l3546
 10434   002718                     u3040:
 10435   002718  0E01               	movlw	1
 10436   00271A  2601               	addwf	___fladd@b^0,f,c
 10437   00271C  0E00               	movlw	0
 10438   00271E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10439   002720  2203               	addwfc	(___fladd@b+2)^0,f,c
 10440   002722  2204               	addwfc	(___fladd@b+3)^0,f,c
 10441   002724  A004               	btfss	(___fladd@b+3)^0,0,c
 10442   002726  EF97  F013         	goto	u3051
 10443   00272A  EF99  F013         	goto	u3050
 10444   00272E                     u3051:
 10445   00272E  EFB7  F013         	goto	l3546
 10446   002732                     u3050:
 10447   002732  C001  F009         	movff	___fladd@b,??___fladd
 10448   002736  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10449   00273A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10450   00273E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10451   002742  340C               	rlcf	(??___fladd+3)^0,w,c
 10452   002744  320C               	rrcf	(??___fladd+3)^0,f,c
 10453   002746  320B               	rrcf	(??___fladd+2)^0,f,c
 10454   002748  320A               	rrcf	(??___fladd+1)^0,f,c
 10455   00274A  3209               	rrcf	??___fladd^0,f,c
 10456   00274C  C009  F001         	movff	??___fladd,___fladd@b
 10457   002750  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10458   002754  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10459   002758  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10460   00275C  280F               	incf	___fladd@bexp^0,w,c
 10461   00275E  B4D8               	btfsc	status,2,c
 10462   002760  EFB4  F013         	goto	u3061
 10463   002764  EFB6  F013         	goto	u3060
 10464   002768                     u3061:
 10465   002768  EFB7  F013         	goto	l3546
 10466   00276C                     u3060:
 10467   00276C  2A0F               	incf	___fladd@bexp^0,f,c
 10468   00276E                     l3546:
 10469   00276E  280F               	incf	___fladd@bexp^0,w,c
 10470   002770  B4D8               	btfsc	status,2,c
 10471   002772  EFBD  F013         	goto	u3071
 10472   002776  EFBF  F013         	goto	u3070
 10473   00277A                     u3071:
 10474   00277A  EFC7  F013         	goto	l3550
 10475   00277E                     u3070:
 10476   00277E  500F               	movf	___fladd@bexp^0,w,c
 10477   002780  A4D8               	btfss	status,2,c
 10478   002782  EFC5  F013         	goto	u3081
 10479   002786  EFC7  F013         	goto	u3080
 10480   00278A                     u3081:
 10481   00278A  EFD9  F013         	goto	l3554
 10482   00278E                     u3080:
 10483   00278E                     l3550:
 10484   00278E  0E00               	movlw	0
 10485   002790  6E01               	movwf	___fladd@b^0,c
 10486   002792  0E00               	movlw	0
 10487   002794  6E02               	movwf	(___fladd@b+1)^0,c
 10488   002796  0E00               	movlw	0
 10489   002798  6E03               	movwf	(___fladd@b+2)^0,c
 10490   00279A  0E00               	movlw	0
 10491   00279C  6E04               	movwf	(___fladd@b+3)^0,c
 10492   00279E  500F               	movf	___fladd@bexp^0,w,c
 10493   0027A0  A4D8               	btfss	status,2,c
 10494   0027A2  EFD5  F013         	goto	u3091
 10495   0027A6  EFD7  F013         	goto	u3090
 10496   0027AA                     u3091:
 10497   0027AA  EFD9  F013         	goto	l3554
 10498   0027AE                     u3090:
 10499   0027AE  0E00               	movlw	0
 10500   0027B0  6E0D               	movwf	___fladd@signs^0,c
 10501   0027B2                     l3554:
 10502   0027B2  A00F               	btfss	___fladd@bexp^0,0,c
 10503   0027B4  EFDE  F013         	goto	u3101
 10504   0027B8  EFE0  F013         	goto	u3100
 10505   0027BC                     u3101:
 10506   0027BC  EFE3  F013         	goto	l3558
 10507   0027C0                     u3100:
 10508   0027C0  8E03               	bsf	(___fladd@b+2)^0,7,c
 10509   0027C2  EFE4  F013         	goto	l3560
 10510   0027C6                     l3558:
 10511   0027C6  9E03               	bcf	(___fladd@b+2)^0,7,c
 10512   0027C8                     l3560:
 10513   0027C8  90D8               	bcf	status,0,c
 10514   0027CA  300F               	rrcf	___fladd@bexp^0,w,c
 10515   0027CC  6E04               	movwf	(___fladd@b+3)^0,c
 10516   0027CE  AE0D               	btfss	___fladd@signs^0,7,c
 10517   0027D0  EFEC  F013         	goto	u3111
 10518   0027D4  EFEE  F013         	goto	u3110
 10519   0027D8                     u3111:
 10520   0027D8  EFEF  F013         	goto	l3566
 10521   0027DC                     u3110:
 10522   0027DC  8E04               	bsf	(___fladd@b+3)^0,7,c
 10523   0027DE                     l3566:
 10524   0027DE  C001  F001         	movff	___fladd@b,?___fladd
 10525   0027E2  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10526   0027E6  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10527   0027EA  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10528   0027EE                     l1050:
 10529   0027EE  0012               	return		;funcret
 10530   0027F0                     __end_of___fladd:
 10531                           	callstack 0
 10532                           
 10533 ;; *************** function ___flmul *****************
 10534 ;; Defined at:
 10535 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;  b               4   16[COMRAM] unsigned char 
 10538 ;;  a               4   20[COMRAM] unsigned char 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  prod            4   35[COMRAM] struct .
 10541 ;;  grs             4   29[COMRAM] unsigned long 
 10542 ;;  temp            2   39[COMRAM] struct .
 10543 ;;  bexp            1   34[COMRAM] unsigned char 
 10544 ;;  aexp            1   33[COMRAM] unsigned char 
 10545 ;;  sign            1   28[COMRAM] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  4   16[COMRAM] unsigned char 
 10548 ;; Registers used:
 10549 ;;		wreg, status,2, status,0, prodl, prodh
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10555 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;Total ram usage:       25 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; Hardware stack levels required when called: 1
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_Colour_decider
 10566 ;;		_efgtoa
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text53
 10571   0027F0                     __ptext53:
 10572                           	callstack 0
 10573   0027F0                     ___flmul:
 10574                           	callstack 25
 10575   0027F0  5014               	movf	(___flmul@b+3)^0,w,c
 10576   0027F2  0B80               	andlw	128
 10577   0027F4  6E1D               	movwf	___flmul@sign^0,c
 10578   0027F6  5014               	movf	(___flmul@b+3)^0,w,c
 10579   0027F8  2414               	addwf	(___flmul@b+3)^0,w,c
 10580   0027FA  6E23               	movwf	___flmul@bexp^0,c
 10581   0027FC  AE13               	btfss	(___flmul@b+2)^0,7,c
 10582   0027FE  EF03  F014         	goto	u3491
 10583   002802  EF05  F014         	goto	u3490
 10584   002806                     u3491:
 10585   002806  EF06  F014         	goto	l3808
 10586   00280A                     u3490:
 10587   00280A  8023               	bsf	___flmul@bexp^0,0,c
 10588   00280C                     l3808:
 10589   00280C  5023               	movf	___flmul@bexp^0,w,c
 10590   00280E  B4D8               	btfsc	status,2,c
 10591   002810  EF0C  F014         	goto	u3501
 10592   002814  EF0E  F014         	goto	u3500
 10593   002818                     u3501:
 10594   002818  EF21  F014         	goto	l3816
 10595   00281C                     u3500:
 10596   00281C  2823               	incf	___flmul@bexp^0,w,c
 10597   00281E  A4D8               	btfss	status,2,c
 10598   002820  EF14  F014         	goto	u3511
 10599   002824  EF16  F014         	goto	u3510
 10600   002828                     u3511:
 10601   002828  EF1E  F014         	goto	l3814
 10602   00282C                     u3510:
 10603   00282C  0E00               	movlw	0
 10604   00282E  6E11               	movwf	___flmul@b^0,c
 10605   002830  0E00               	movlw	0
 10606   002832  6E12               	movwf	(___flmul@b+1)^0,c
 10607   002834  0E00               	movlw	0
 10608   002836  6E13               	movwf	(___flmul@b+2)^0,c
 10609   002838  0E00               	movlw	0
 10610   00283A  6E14               	movwf	(___flmul@b+3)^0,c
 10611   00283C                     l3814:
 10612   00283C  8E13               	bsf	(___flmul@b+2)^0,7,c
 10613   00283E  EF29  F014         	goto	l3818
 10614   002842                     l3816:
 10615   002842  0E00               	movlw	0
 10616   002844  6E11               	movwf	___flmul@b^0,c
 10617   002846  0E00               	movlw	0
 10618   002848  6E12               	movwf	(___flmul@b+1)^0,c
 10619   00284A  0E00               	movlw	0
 10620   00284C  6E13               	movwf	(___flmul@b+2)^0,c
 10621   00284E  0E00               	movlw	0
 10622   002850  6E14               	movwf	(___flmul@b+3)^0,c
 10623   002852                     l3818:
 10624   002852  5018               	movf	(___flmul@a+3)^0,w,c
 10625   002854  0B80               	andlw	128
 10626   002856  1A1D               	xorwf	___flmul@sign^0,f,c
 10627   002858  5018               	movf	(___flmul@a+3)^0,w,c
 10628   00285A  2418               	addwf	(___flmul@a+3)^0,w,c
 10629   00285C  6E22               	movwf	___flmul@aexp^0,c
 10630   00285E  AE17               	btfss	(___flmul@a+2)^0,7,c
 10631   002860  EF34  F014         	goto	u3521
 10632   002864  EF36  F014         	goto	u3520
 10633   002868                     u3521:
 10634   002868  EF37  F014         	goto	l3826
 10635   00286C                     u3520:
 10636   00286C  8022               	bsf	___flmul@aexp^0,0,c
 10637   00286E                     l3826:
 10638   00286E  5022               	movf	___flmul@aexp^0,w,c
 10639   002870  B4D8               	btfsc	status,2,c
 10640   002872  EF3D  F014         	goto	u3531
 10641   002876  EF3F  F014         	goto	u3530
 10642   00287A                     u3531:
 10643   00287A  EF52  F014         	goto	l3834
 10644   00287E                     u3530:
 10645   00287E  2822               	incf	___flmul@aexp^0,w,c
 10646   002880  A4D8               	btfss	status,2,c
 10647   002882  EF45  F014         	goto	u3541
 10648   002886  EF47  F014         	goto	u3540
 10649   00288A                     u3541:
 10650   00288A  EF4F  F014         	goto	l3832
 10651   00288E                     u3540:
 10652   00288E  0E00               	movlw	0
 10653   002890  6E15               	movwf	___flmul@a^0,c
 10654   002892  0E00               	movlw	0
 10655   002894  6E16               	movwf	(___flmul@a+1)^0,c
 10656   002896  0E00               	movlw	0
 10657   002898  6E17               	movwf	(___flmul@a+2)^0,c
 10658   00289A  0E00               	movlw	0
 10659   00289C  6E18               	movwf	(___flmul@a+3)^0,c
 10660   00289E                     l3832:
 10661   00289E  8E17               	bsf	(___flmul@a+2)^0,7,c
 10662   0028A0  EF5A  F014         	goto	l1127
 10663   0028A4                     l3834:
 10664   0028A4  0E00               	movlw	0
 10665   0028A6  6E15               	movwf	___flmul@a^0,c
 10666   0028A8  0E00               	movlw	0
 10667   0028AA  6E16               	movwf	(___flmul@a+1)^0,c
 10668   0028AC  0E00               	movlw	0
 10669   0028AE  6E17               	movwf	(___flmul@a+2)^0,c
 10670   0028B0  0E00               	movlw	0
 10671   0028B2  6E18               	movwf	(___flmul@a+3)^0,c
 10672   0028B4                     l1127:
 10673   0028B4  5022               	movf	___flmul@aexp^0,w,c
 10674   0028B6  B4D8               	btfsc	status,2,c
 10675   0028B8  EF60  F014         	goto	u3551
 10676   0028BC  EF62  F014         	goto	u3550
 10677   0028C0                     u3551:
 10678   0028C0  EF6A  F014         	goto	l3838
 10679   0028C4                     u3550:
 10680   0028C4  5023               	movf	___flmul@bexp^0,w,c
 10681   0028C6  A4D8               	btfss	status,2,c
 10682   0028C8  EF68  F014         	goto	u3561
 10683   0028CC  EF6A  F014         	goto	u3560
 10684   0028D0                     u3561:
 10685   0028D0  EF74  F014         	goto	l3842
 10686   0028D4                     u3560:
 10687   0028D4                     l3838:
 10688   0028D4  0E00               	movlw	0
 10689   0028D6  6E11               	movwf	?___flmul^0,c
 10690   0028D8  0E00               	movlw	0
 10691   0028DA  6E12               	movwf	(?___flmul+1)^0,c
 10692   0028DC  0E00               	movlw	0
 10693   0028DE  6E13               	movwf	(?___flmul+2)^0,c
 10694   0028E0  0E00               	movlw	0
 10695   0028E2  6E14               	movwf	(?___flmul+3)^0,c
 10696   0028E4  EF0C  F016         	goto	l1131
 10697   0028E8                     l3842:
 10698   0028E8  5017               	movf	(___flmul@a+2)^0,w,c
 10699   0028EA  0211               	mulwf	___flmul@b^0,c
 10700   0028EC  CFF3 F028          	movff	prodl,___flmul@temp
 10701   0028F0  CFF4 F029          	movff	prodh,___flmul@temp+1
 10702   0028F4  5028               	movf	___flmul@temp^0,w,c
 10703   0028F6  6E1E               	movwf	___flmul@grs^0,c
 10704   0028F8  6A1F               	clrf	(___flmul@grs+1)^0,c
 10705   0028FA  6A20               	clrf	(___flmul@grs+2)^0,c
 10706   0028FC  6A21               	clrf	(___flmul@grs+3)^0,c
 10707   0028FE  5029               	movf	(___flmul@temp+1)^0,w,c
 10708   002900  6E24               	movwf	___flmul@prod^0,c
 10709   002902  6A25               	clrf	(___flmul@prod+1)^0,c
 10710   002904  6A26               	clrf	(___flmul@prod+2)^0,c
 10711   002906  6A27               	clrf	(___flmul@prod+3)^0,c
 10712   002908  5016               	movf	(___flmul@a+1)^0,w,c
 10713   00290A  0212               	mulwf	(___flmul@b+1)^0,c
 10714   00290C  CFF3 F028          	movff	prodl,___flmul@temp
 10715   002910  CFF4 F029          	movff	prodh,___flmul@temp+1
 10716   002914  5028               	movf	___flmul@temp^0,w,c
 10717   002916  261E               	addwf	___flmul@grs^0,f,c
 10718   002918  0E00               	movlw	0
 10719   00291A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10720   00291C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10721   00291E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10722   002920  5029               	movf	(___flmul@temp+1)^0,w,c
 10723   002922  2624               	addwf	___flmul@prod^0,f,c
 10724   002924  0E00               	movlw	0
 10725   002926  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10726   002928  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10727   00292A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10728   00292C  5015               	movf	___flmul@a^0,w,c
 10729   00292E  0213               	mulwf	(___flmul@b+2)^0,c
 10730   002930  CFF3 F028          	movff	prodl,___flmul@temp
 10731   002934  CFF4 F029          	movff	prodh,___flmul@temp+1
 10732   002938  5028               	movf	___flmul@temp^0,w,c
 10733   00293A  261E               	addwf	___flmul@grs^0,f,c
 10734   00293C  0E00               	movlw	0
 10735   00293E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10736   002940  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10737   002942  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10738   002944  5029               	movf	(___flmul@temp+1)^0,w,c
 10739   002946  2624               	addwf	___flmul@prod^0,f,c
 10740   002948  0E00               	movlw	0
 10741   00294A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10742   00294C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10743   00294E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10744   002950  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10745   002954  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10746   002958  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10747   00295C  6A1E               	clrf	___flmul@grs^0,c
 10748   00295E  5015               	movf	___flmul@a^0,w,c
 10749   002960  0212               	mulwf	(___flmul@b+1)^0,c
 10750   002962  CFF3 F028          	movff	prodl,___flmul@temp
 10751   002966  CFF4 F029          	movff	prodh,___flmul@temp+1
 10752   00296A  5028               	movf	___flmul@temp^0,w,c
 10753   00296C  261E               	addwf	___flmul@grs^0,f,c
 10754   00296E  5029               	movf	(___flmul@temp+1)^0,w,c
 10755   002970  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10756   002972  0E00               	movlw	0
 10757   002974  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10758   002976  0E00               	movlw	0
 10759   002978  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10760   00297A  5016               	movf	(___flmul@a+1)^0,w,c
 10761   00297C  0211               	mulwf	___flmul@b^0,c
 10762   00297E  CFF3 F028          	movff	prodl,___flmul@temp
 10763   002982  CFF4 F029          	movff	prodh,___flmul@temp+1
 10764   002986  5028               	movf	___flmul@temp^0,w,c
 10765   002988  261E               	addwf	___flmul@grs^0,f,c
 10766   00298A  5029               	movf	(___flmul@temp+1)^0,w,c
 10767   00298C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10768   00298E  0E00               	movlw	0
 10769   002990  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10770   002992  0E00               	movlw	0
 10771   002994  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10772   002996  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10773   00299A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10774   00299E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10775   0029A2  6A1E               	clrf	___flmul@grs^0,c
 10776   0029A4  5015               	movf	___flmul@a^0,w,c
 10777   0029A6  0211               	mulwf	___flmul@b^0,c
 10778   0029A8  CFF3 F028          	movff	prodl,___flmul@temp
 10779   0029AC  CFF4 F029          	movff	prodh,___flmul@temp+1
 10780   0029B0  5028               	movf	___flmul@temp^0,w,c
 10781   0029B2  261E               	addwf	___flmul@grs^0,f,c
 10782   0029B4  5029               	movf	(___flmul@temp+1)^0,w,c
 10783   0029B6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10784   0029B8  0E00               	movlw	0
 10785   0029BA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10786   0029BC  0E00               	movlw	0
 10787   0029BE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10788   0029C0  5017               	movf	(___flmul@a+2)^0,w,c
 10789   0029C2  0212               	mulwf	(___flmul@b+1)^0,c
 10790   0029C4  CFF3 F028          	movff	prodl,___flmul@temp
 10791   0029C8  CFF4 F029          	movff	prodh,___flmul@temp+1
 10792   0029CC  5028               	movf	___flmul@temp^0,w,c
 10793   0029CE  2624               	addwf	___flmul@prod^0,f,c
 10794   0029D0  5029               	movf	(___flmul@temp+1)^0,w,c
 10795   0029D2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10796   0029D4  0E00               	movlw	0
 10797   0029D6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10798   0029D8  0E00               	movlw	0
 10799   0029DA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10800   0029DC  5016               	movf	(___flmul@a+1)^0,w,c
 10801   0029DE  0213               	mulwf	(___flmul@b+2)^0,c
 10802   0029E0  CFF3 F028          	movff	prodl,___flmul@temp
 10803   0029E4  CFF4 F029          	movff	prodh,___flmul@temp+1
 10804   0029E8  5028               	movf	___flmul@temp^0,w,c
 10805   0029EA  2624               	addwf	___flmul@prod^0,f,c
 10806   0029EC  5029               	movf	(___flmul@temp+1)^0,w,c
 10807   0029EE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10808   0029F0  0E00               	movlw	0
 10809   0029F2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10810   0029F4  0E00               	movlw	0
 10811   0029F6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10812   0029F8  5017               	movf	(___flmul@a+2)^0,w,c
 10813   0029FA  0213               	mulwf	(___flmul@b+2)^0,c
 10814   0029FC  CFF3 F028          	movff	prodl,___flmul@temp
 10815   002A00  CFF4 F029          	movff	prodh,___flmul@temp+1
 10816   002A04  5028               	movf	___flmul@temp^0,w,c
 10817   002A06  6E19               	movwf	??___flmul^0,c
 10818   002A08  5029               	movf	(___flmul@temp+1)^0,w,c
 10819   002A0A  6E1A               	movwf	(??___flmul+1)^0,c
 10820   002A0C  6A1B               	clrf	(??___flmul+2)^0,c
 10821   002A0E  6A1C               	clrf	(??___flmul+3)^0,c
 10822   002A10  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 10823   002A14  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 10824   002A18  C019  F01A         	movff	??___flmul,??___flmul+1
 10825   002A1C  6A19               	clrf	??___flmul^0,c
 10826   002A1E  5019               	movf	??___flmul^0,w,c
 10827   002A20  2624               	addwf	___flmul@prod^0,f,c
 10828   002A22  501A               	movf	(??___flmul+1)^0,w,c
 10829   002A24  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10830   002A26  501B               	movf	(??___flmul+2)^0,w,c
 10831   002A28  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10832   002A2A  501C               	movf	(??___flmul+3)^0,w,c
 10833   002A2C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10834   002A2E  C01E  F019         	movff	___flmul@grs,??___flmul
 10835   002A32  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 10836   002A36  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 10837   002A3A  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 10838   002A3E  0E19               	movlw	25
 10839   002A40  EF27  F015         	goto	u3570
 10840   002A44                     u3575:
 10841   002A44  90D8               	bcf	status,0,c
 10842   002A46  321C               	rrcf	(??___flmul+3)^0,f,c
 10843   002A48  321B               	rrcf	(??___flmul+2)^0,f,c
 10844   002A4A  321A               	rrcf	(??___flmul+1)^0,f,c
 10845   002A4C  3219               	rrcf	??___flmul^0,f,c
 10846   002A4E                     u3570:
 10847   002A4E  2EE8               	decfsz	wreg,f,c
 10848   002A50  EF22  F015         	goto	u3575
 10849   002A54  5019               	movf	??___flmul^0,w,c
 10850   002A56  2624               	addwf	___flmul@prod^0,f,c
 10851   002A58  501A               	movf	(??___flmul+1)^0,w,c
 10852   002A5A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10853   002A5C  501B               	movf	(??___flmul+2)^0,w,c
 10854   002A5E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10855   002A60  501C               	movf	(??___flmul+3)^0,w,c
 10856   002A62  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10857   002A64  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10858   002A68  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10859   002A6C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10860   002A70  6A1E               	clrf	___flmul@grs^0,c
 10861   002A72  5022               	movf	___flmul@aexp^0,w,c
 10862   002A74  C023  F019         	movff	___flmul@bexp,??___flmul
 10863   002A78  6A1A               	clrf	(??___flmul+1)^0,c
 10864   002A7A  2619               	addwf	??___flmul^0,f,c
 10865   002A7C  0E00               	movlw	0
 10866   002A7E  221A               	addwfc	(??___flmul+1)^0,f,c
 10867   002A80  0E82               	movlw	130
 10868   002A82  2419               	addwf	??___flmul^0,w,c
 10869   002A84  6E28               	movwf	___flmul@temp^0,c
 10870   002A86  0EFF               	movlw	255
 10871   002A88  201A               	addwfc	(??___flmul+1)^0,w,c
 10872   002A8A  6E29               	movwf	(___flmul@temp+1)^0,c
 10873   002A8C  EF5D  F015         	goto	l3890
 10874   002A90                     l3884:
 10875   002A90  90D8               	bcf	status,0,c
 10876   002A92  3624               	rlcf	___flmul@prod^0,f,c
 10877   002A94  3625               	rlcf	(___flmul@prod+1)^0,f,c
 10878   002A96  3626               	rlcf	(___flmul@prod+2)^0,f,c
 10879   002A98  3627               	rlcf	(___flmul@prod+3)^0,f,c
 10880   002A9A  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10881   002A9C  EF52  F015         	goto	u3581
 10882   002AA0  EF54  F015         	goto	u3580
 10883   002AA4                     u3581:
 10884   002AA4  EF55  F015         	goto	l1134
 10885   002AA8                     u3580:
 10886   002AA8  8024               	bsf	___flmul@prod^0,0,c
 10887   002AAA                     l1134:
 10888   002AAA  90D8               	bcf	status,0,c
 10889   002AAC  361E               	rlcf	___flmul@grs^0,f,c
 10890   002AAE  361F               	rlcf	(___flmul@grs+1)^0,f,c
 10891   002AB0  3620               	rlcf	(___flmul@grs+2)^0,f,c
 10892   002AB2  3621               	rlcf	(___flmul@grs+3)^0,f,c
 10893   002AB4  0628               	decf	___flmul@temp^0,f,c
 10894   002AB6  A0D8               	btfss	status,0,c
 10895   002AB8  0629               	decf	(___flmul@temp+1)^0,f,c
 10896   002ABA                     l3890:
 10897   002ABA  AE26               	btfss	(___flmul@prod+2)^0,7,c
 10898   002ABC  EF62  F015         	goto	u3591
 10899   002AC0  EF64  F015         	goto	u3590
 10900   002AC4                     u3591:
 10901   002AC4  EF48  F015         	goto	l3884
 10902   002AC8                     u3590:
 10903   002AC8  0E00               	movlw	0
 10904   002ACA  6E22               	movwf	___flmul@aexp^0,c
 10905   002ACC  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10906   002ACE  EF6B  F015         	goto	u3601
 10907   002AD2  EF6D  F015         	goto	u3600
 10908   002AD6                     u3601:
 10909   002AD6  EF91  F015         	goto	l1136
 10910   002ADA                     u3600:
 10911   002ADA  0EFF               	movlw	255
 10912   002ADC  141E               	andwf	___flmul@grs^0,w,c
 10913   002ADE  6E19               	movwf	??___flmul^0,c
 10914   002AE0  0EFF               	movlw	255
 10915   002AE2  141F               	andwf	(___flmul@grs+1)^0,w,c
 10916   002AE4  6E1A               	movwf	(??___flmul+1)^0,c
 10917   002AE6  0EFF               	movlw	255
 10918   002AE8  1420               	andwf	(___flmul@grs+2)^0,w,c
 10919   002AEA  6E1B               	movwf	(??___flmul+2)^0,c
 10920   002AEC  0E7F               	movlw	127
 10921   002AEE  1421               	andwf	(___flmul@grs+3)^0,w,c
 10922   002AF0  6E1C               	movwf	(??___flmul+3)^0,c
 10923   002AF2  5019               	movf	??___flmul^0,w,c
 10924   002AF4  101A               	iorwf	(??___flmul+1)^0,w,c
 10925   002AF6  101B               	iorwf	(??___flmul+2)^0,w,c
 10926   002AF8  101C               	iorwf	(??___flmul+3)^0,w,c
 10927   002AFA  B4D8               	btfsc	status,2,c
 10928   002AFC  EF82  F015         	goto	u3611
 10929   002B00  EF84  F015         	goto	u3610
 10930   002B04                     u3611:
 10931   002B04  EF88  F015         	goto	l1137
 10932   002B08                     u3610:
 10933   002B08                     l3898:
 10934   002B08  0E01               	movlw	1
 10935   002B0A  6E22               	movwf	___flmul@aexp^0,c
 10936   002B0C  EF91  F015         	goto	l1136
 10937   002B10                     l1137:
 10938   002B10  A024               	btfss	___flmul@prod^0,0,c
 10939   002B12  EF8D  F015         	goto	u3621
 10940   002B16  EF8F  F015         	goto	u3620
 10941   002B1A                     u3621:
 10942   002B1A  EF91  F015         	goto	l1136
 10943   002B1E                     u3620:
 10944   002B1E  EF84  F015         	goto	l3898
 10945   002B22                     l1136:
 10946   002B22  5022               	movf	___flmul@aexp^0,w,c
 10947   002B24  B4D8               	btfsc	status,2,c
 10948   002B26  EF97  F015         	goto	u3631
 10949   002B2A  EF99  F015         	goto	u3630
 10950   002B2E                     u3631:
 10951   002B2E  EFBD  F015         	goto	l3910
 10952   002B32                     u3630:
 10953   002B32  0E01               	movlw	1
 10954   002B34  2624               	addwf	___flmul@prod^0,f,c
 10955   002B36  0E00               	movlw	0
 10956   002B38  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10957   002B3A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10958   002B3C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10959   002B3E  A027               	btfss	(___flmul@prod+3)^0,0,c
 10960   002B40  EFA4  F015         	goto	u3641
 10961   002B44  EFA6  F015         	goto	u3640
 10962   002B48                     u3641:
 10963   002B48  EFBD  F015         	goto	l3910
 10964   002B4C                     u3640:
 10965   002B4C  C024  F019         	movff	___flmul@prod,??___flmul
 10966   002B50  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 10967   002B54  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 10968   002B58  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 10969   002B5C  341C               	rlcf	(??___flmul+3)^0,w,c
 10970   002B5E  321C               	rrcf	(??___flmul+3)^0,f,c
 10971   002B60  321B               	rrcf	(??___flmul+2)^0,f,c
 10972   002B62  321A               	rrcf	(??___flmul+1)^0,f,c
 10973   002B64  3219               	rrcf	??___flmul^0,f,c
 10974   002B66  C019  F024         	movff	??___flmul,___flmul@prod
 10975   002B6A  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 10976   002B6E  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 10977   002B72  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 10978   002B76  4A28               	infsnz	___flmul@temp^0,f,c
 10979   002B78  2A29               	incf	(___flmul@temp+1)^0,f,c
 10980   002B7A                     l3910:
 10981   002B7A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10982   002B7C  EFC8  F015         	goto	u3651
 10983   002B80  5029               	movf	(___flmul@temp+1)^0,w,c
 10984   002B82  E108               	bnz	u3650
 10985   002B84  2828               	incf	___flmul@temp^0,w,c
 10986   002B86  A0D8               	btfss	status,0,c
 10987   002B88  EFC8  F015         	goto	u3651
 10988   002B8C  EFCA  F015         	goto	u3650
 10989   002B90                     u3651:
 10990   002B90  EFD4  F015         	goto	l3914
 10991   002B94                     u3650:
 10992   002B94  0E00               	movlw	0
 10993   002B96  6E24               	movwf	___flmul@prod^0,c
 10994   002B98  0E00               	movlw	0
 10995   002B9A  6E25               	movwf	(___flmul@prod+1)^0,c
 10996   002B9C  0E80               	movlw	128
 10997   002B9E  6E26               	movwf	(___flmul@prod+2)^0,c
 10998   002BA0  0E7F               	movlw	127
 10999   002BA2  6E27               	movwf	(___flmul@prod+3)^0,c
 11000   002BA4  EF02  F016         	goto	l3926
 11001   002BA8                     l3914:
 11002   002BA8  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 11003   002BAA  EFE1  F015         	goto	u3660
 11004   002BAE  5029               	movf	(___flmul@temp+1)^0,w,c
 11005   002BB0  E106               	bnz	u3661
 11006   002BB2  0428               	decf	___flmul@temp^0,w,c
 11007   002BB4  B0D8               	btfsc	status,0,c
 11008   002BB6  EFDF  F015         	goto	u3661
 11009   002BBA  EFE1  F015         	goto	u3660
 11010   002BBE                     u3661:
 11011   002BBE  EFED  F015         	goto	l1144
 11012   002BC2                     u3660:
 11013   002BC2  0E00               	movlw	0
 11014   002BC4  6E24               	movwf	___flmul@prod^0,c
 11015   002BC6  0E00               	movlw	0
 11016   002BC8  6E25               	movwf	(___flmul@prod+1)^0,c
 11017   002BCA  0E00               	movlw	0
 11018   002BCC  6E26               	movwf	(___flmul@prod+2)^0,c
 11019   002BCE  0E00               	movlw	0
 11020   002BD0  6E27               	movwf	(___flmul@prod+3)^0,c
 11021   002BD2  0E00               	movlw	0
 11022   002BD4  6E1D               	movwf	___flmul@sign^0,c
 11023   002BD6  EF02  F016         	goto	l3926
 11024   002BDA                     l1144:
 11025   002BDA  C028  F023         	movff	___flmul@temp,___flmul@bexp
 11026   002BDE  0EFF               	movlw	255
 11027   002BE0  1624               	andwf	___flmul@prod^0,f,c
 11028   002BE2  0EFF               	movlw	255
 11029   002BE4  1625               	andwf	(___flmul@prod+1)^0,f,c
 11030   002BE6  0E7F               	movlw	127
 11031   002BE8  1626               	andwf	(___flmul@prod+2)^0,f,c
 11032   002BEA  0E00               	movlw	0
 11033   002BEC  1627               	andwf	(___flmul@prod+3)^0,f,c
 11034   002BEE  A023               	btfss	___flmul@bexp^0,0,c
 11035   002BF0  EFFC  F015         	goto	u3671
 11036   002BF4  EFFE  F015         	goto	u3670
 11037   002BF8                     u3671:
 11038   002BF8  EFFF  F015         	goto	l3924
 11039   002BFC                     u3670:
 11040   002BFC  8E26               	bsf	(___flmul@prod+2)^0,7,c
 11041   002BFE                     l3924:
 11042   002BFE  90D8               	bcf	status,0,c
 11043   002C00  3023               	rrcf	___flmul@bexp^0,w,c
 11044   002C02  6E27               	movwf	(___flmul@prod+3)^0,c
 11045   002C04                     l3926:
 11046   002C04  501D               	movf	___flmul@sign^0,w,c
 11047   002C06  1227               	iorwf	(___flmul@prod+3)^0,f,c
 11048   002C08  C024  F011         	movff	___flmul@prod,?___flmul
 11049   002C0C  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 11050   002C10  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 11051   002C14  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 11052   002C18                     l1131:
 11053   002C18  0012               	return		;funcret
 11054   002C1A                     __end_of___flmul:
 11055                           	callstack 0
 11056                           
 11057 ;; *************** function ___flge *****************
 11058 ;; Defined at:
 11059 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  ff1             4   41[COMRAM] unsigned char 
 11062 ;;  ff2             4   45[COMRAM] unsigned char 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;		None               void
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;Total ram usage:       12 bytes
 11079 ;; Hardware stack levels used: 1
 11080 ;; Hardware stack levels required when called: 1
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_Colour_decider
 11085 ;;		_efgtoa
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text54
 11090   0044EA                     __ptext54:
 11091                           	callstack 0
 11092   0044EA                     ___flge:
 11093                           	callstack 25
 11094   0044EA  0E00               	movlw	0
 11095   0044EC  142A               	andwf	___flge@ff1^0,w,c
 11096   0044EE  6E32               	movwf	??___flge^0,c
 11097   0044F0  0E00               	movlw	0
 11098   0044F2  142B               	andwf	(___flge@ff1+1)^0,w,c
 11099   0044F4  6E33               	movwf	(??___flge+1)^0,c
 11100   0044F6  0E80               	movlw	128
 11101   0044F8  142C               	andwf	(___flge@ff1+2)^0,w,c
 11102   0044FA  6E34               	movwf	(??___flge+2)^0,c
 11103   0044FC  0E7F               	movlw	127
 11104   0044FE  142D               	andwf	(___flge@ff1+3)^0,w,c
 11105   004500  6E35               	movwf	(??___flge+3)^0,c
 11106   004502  5032               	movf	??___flge^0,w,c
 11107   004504  1033               	iorwf	(??___flge+1)^0,w,c
 11108   004506  1034               	iorwf	(??___flge+2)^0,w,c
 11109   004508  1035               	iorwf	(??___flge+3)^0,w,c
 11110   00450A  A4D8               	btfss	status,2,c
 11111   00450C  EF8A  F022         	goto	u3711
 11112   004510  EF8C  F022         	goto	u3710
 11113   004514                     u3711:
 11114   004514  EF94  F022         	goto	l3958
 11115   004518                     u3710:
 11116   004518  0E00               	movlw	0
 11117   00451A  6E2A               	movwf	___flge@ff1^0,c
 11118   00451C  0E00               	movlw	0
 11119   00451E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11120   004520  0E00               	movlw	0
 11121   004522  6E2C               	movwf	(___flge@ff1+2)^0,c
 11122   004524  0E00               	movlw	0
 11123   004526  6E2D               	movwf	(___flge@ff1+3)^0,c
 11124   004528                     l3958:
 11125   004528  0E00               	movlw	0
 11126   00452A  142E               	andwf	___flge@ff2^0,w,c
 11127   00452C  6E32               	movwf	??___flge^0,c
 11128   00452E  0E00               	movlw	0
 11129   004530  142F               	andwf	(___flge@ff2+1)^0,w,c
 11130   004532  6E33               	movwf	(??___flge+1)^0,c
 11131   004534  0E80               	movlw	128
 11132   004536  1430               	andwf	(___flge@ff2+2)^0,w,c
 11133   004538  6E34               	movwf	(??___flge+2)^0,c
 11134   00453A  0E7F               	movlw	127
 11135   00453C  1431               	andwf	(___flge@ff2+3)^0,w,c
 11136   00453E  6E35               	movwf	(??___flge+3)^0,c
 11137   004540  5032               	movf	??___flge^0,w,c
 11138   004542  1033               	iorwf	(??___flge+1)^0,w,c
 11139   004544  1034               	iorwf	(??___flge+2)^0,w,c
 11140   004546  1035               	iorwf	(??___flge+3)^0,w,c
 11141   004548  A4D8               	btfss	status,2,c
 11142   00454A  EFA9  F022         	goto	u3721
 11143   00454E  EFAB  F022         	goto	u3720
 11144   004552                     u3721:
 11145   004552  EFB3  F022         	goto	l3962
 11146   004556                     u3720:
 11147   004556  0E00               	movlw	0
 11148   004558  6E2E               	movwf	___flge@ff2^0,c
 11149   00455A  0E00               	movlw	0
 11150   00455C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11151   00455E  0E00               	movlw	0
 11152   004560  6E30               	movwf	(___flge@ff2+2)^0,c
 11153   004562  0E00               	movlw	0
 11154   004564  6E31               	movwf	(___flge@ff2+3)^0,c
 11155   004566                     l3962:
 11156   004566  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 11157   004568  EFB8  F022         	goto	u3731
 11158   00456C  EFBA  F022         	goto	u3730
 11159   004570                     u3731:
 11160   004570  EFC3  F022         	goto	l3966
 11161   004574                     u3730:
 11162   004574  6C2A               	negf	___flge@ff1^0,c
 11163   004576  1E2B               	comf	(___flge@ff1+1)^0,f,c
 11164   004578  B0D8               	btfsc	status,0,c
 11165   00457A  2A2B               	incf	(___flge@ff1+1)^0,f,c
 11166   00457C  1E2C               	comf	(___flge@ff1+2)^0,f,c
 11167   00457E  B0D8               	btfsc	status,0,c
 11168   004580  2A2C               	incf	(___flge@ff1+2)^0,f,c
 11169   004582  0E80               	movlw	128
 11170   004584  562D               	subfwb	(___flge@ff1+3)^0,f,c
 11171   004586                     l3966:
 11172   004586  AE31               	btfss	(___flge@ff2+3)^0,7,c
 11173   004588  EFC8  F022         	goto	u3741
 11174   00458C  EFCA  F022         	goto	u3740
 11175   004590                     u3741:
 11176   004590  EFD3  F022         	goto	l778
 11177   004594                     u3740:
 11178   004594  6C2E               	negf	___flge@ff2^0,c
 11179   004596  1E2F               	comf	(___flge@ff2+1)^0,f,c
 11180   004598  B0D8               	btfsc	status,0,c
 11181   00459A  2A2F               	incf	(___flge@ff2+1)^0,f,c
 11182   00459C  1E30               	comf	(___flge@ff2+2)^0,f,c
 11183   00459E  B0D8               	btfsc	status,0,c
 11184   0045A0  2A30               	incf	(___flge@ff2+2)^0,f,c
 11185   0045A2  0E80               	movlw	128
 11186   0045A4  5631               	subfwb	(___flge@ff2+3)^0,f,c
 11187   0045A6                     l778:
 11188   0045A6  0E00               	movlw	0
 11189   0045A8  1A2A               	xorwf	___flge@ff1^0,f,c
 11190   0045AA  0E00               	movlw	0
 11191   0045AC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 11192   0045AE  0E00               	movlw	0
 11193   0045B0  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 11194   0045B2  0E80               	movlw	128
 11195   0045B4  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 11196   0045B6  0E00               	movlw	0
 11197   0045B8  1A2E               	xorwf	___flge@ff2^0,f,c
 11198   0045BA  0E00               	movlw	0
 11199   0045BC  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 11200   0045BE  0E00               	movlw	0
 11201   0045C0  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 11202   0045C2  0E80               	movlw	128
 11203   0045C4  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 11204   0045C6  502E               	movf	___flge@ff2^0,w,c
 11205   0045C8  5C2A               	subwf	___flge@ff1^0,w,c
 11206   0045CA  502F               	movf	(___flge@ff2+1)^0,w,c
 11207   0045CC  582B               	subwfb	(___flge@ff1+1)^0,w,c
 11208   0045CE  5030               	movf	(___flge@ff2+2)^0,w,c
 11209   0045D0  582C               	subwfb	(___flge@ff1+2)^0,w,c
 11210   0045D2  5031               	movf	(___flge@ff2+3)^0,w,c
 11211   0045D4  582D               	subwfb	(___flge@ff1+3)^0,w,c
 11212   0045D6  B0D8               	btfsc	status,0,c
 11213   0045D8  EFF0  F022         	goto	u3751
 11214   0045DC  EFF2  F022         	goto	u3750
 11215   0045E0                     u3751:
 11216   0045E0  EFF5  F022         	goto	l3972
 11217   0045E4                     u3750:
 11218   0045E4  90D8               	bcf	status,0,c
 11219   0045E6  EFF6  F022         	goto	l783
 11220   0045EA                     l3972:
 11221   0045EA  80D8               	bsf	status,0,c
 11222   0045EC                     l783:
 11223   0045EC  0012               	return		;funcret
 11224   0045EE                     __end_of___flge:
 11225                           	callstack 0
 11226                           
 11227 ;; *************** function ___fleq *****************
 11228 ;; Defined at:
 11229 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  ff1             4   49[COMRAM] unsigned char 
 11232 ;;  ff2             4   53[COMRAM] unsigned char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;		None               void
 11237 ;; Registers used:
 11238 ;;		wreg, status,2, status,0
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11247 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11248 ;;Total ram usage:       12 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; Hardware stack levels required when called: 1
 11251 ;; This function calls:
 11252 ;;		Nothing
 11253 ;; This function is called by:
 11254 ;;		_Colour_decider
 11255 ;;		_efgtoa
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text55
 11260   0047B6                     __ptext55:
 11261                           	callstack 0
 11262   0047B6                     ___fleq:
 11263                           	callstack 25
 11264   0047B6  0E00               	movlw	0
 11265   0047B8  1432               	andwf	___fleq@ff1^0,w,c
 11266   0047BA  6E3A               	movwf	??___fleq^0,c
 11267   0047BC  0E00               	movlw	0
 11268   0047BE  1433               	andwf	(___fleq@ff1+1)^0,w,c
 11269   0047C0  6E3B               	movwf	(??___fleq+1)^0,c
 11270   0047C2  0E80               	movlw	128
 11271   0047C4  1434               	andwf	(___fleq@ff1+2)^0,w,c
 11272   0047C6  6E3C               	movwf	(??___fleq+2)^0,c
 11273   0047C8  0E7F               	movlw	127
 11274   0047CA  1435               	andwf	(___fleq@ff1+3)^0,w,c
 11275   0047CC  6E3D               	movwf	(??___fleq+3)^0,c
 11276   0047CE  503A               	movf	??___fleq^0,w,c
 11277   0047D0  103B               	iorwf	(??___fleq+1)^0,w,c
 11278   0047D2  103C               	iorwf	(??___fleq+2)^0,w,c
 11279   0047D4  103D               	iorwf	(??___fleq+3)^0,w,c
 11280   0047D6  A4D8               	btfss	status,2,c
 11281   0047D8  EFF0  F023         	goto	u3681
 11282   0047DC  EFF2  F023         	goto	u3680
 11283   0047E0                     u3681:
 11284   0047E0  EFFA  F023         	goto	l3942
 11285   0047E4                     u3680:
 11286   0047E4  0E00               	movlw	0
 11287   0047E6  6E32               	movwf	___fleq@ff1^0,c
 11288   0047E8  0E00               	movlw	0
 11289   0047EA  6E33               	movwf	(___fleq@ff1+1)^0,c
 11290   0047EC  0E00               	movlw	0
 11291   0047EE  6E34               	movwf	(___fleq@ff1+2)^0,c
 11292   0047F0  0E00               	movlw	0
 11293   0047F2  6E35               	movwf	(___fleq@ff1+3)^0,c
 11294   0047F4                     l3942:
 11295   0047F4  0E00               	movlw	0
 11296   0047F6  1436               	andwf	___fleq@ff2^0,w,c
 11297   0047F8  6E3A               	movwf	??___fleq^0,c
 11298   0047FA  0E00               	movlw	0
 11299   0047FC  1437               	andwf	(___fleq@ff2+1)^0,w,c
 11300   0047FE  6E3B               	movwf	(??___fleq+1)^0,c
 11301   004800  0E80               	movlw	128
 11302   004802  1438               	andwf	(___fleq@ff2+2)^0,w,c
 11303   004804  6E3C               	movwf	(??___fleq+2)^0,c
 11304   004806  0E7F               	movlw	127
 11305   004808  1439               	andwf	(___fleq@ff2+3)^0,w,c
 11306   00480A  6E3D               	movwf	(??___fleq+3)^0,c
 11307   00480C  503A               	movf	??___fleq^0,w,c
 11308   00480E  103B               	iorwf	(??___fleq+1)^0,w,c
 11309   004810  103C               	iorwf	(??___fleq+2)^0,w,c
 11310   004812  103D               	iorwf	(??___fleq+3)^0,w,c
 11311   004814  A4D8               	btfss	status,2,c
 11312   004816  EF0F  F024         	goto	u3691
 11313   00481A  EF11  F024         	goto	u3690
 11314   00481E                     u3691:
 11315   00481E  EF19  F024         	goto	l3946
 11316   004822                     u3690:
 11317   004822  0E00               	movlw	0
 11318   004824  6E36               	movwf	___fleq@ff2^0,c
 11319   004826  0E00               	movlw	0
 11320   004828  6E37               	movwf	(___fleq@ff2+1)^0,c
 11321   00482A  0E00               	movlw	0
 11322   00482C  6E38               	movwf	(___fleq@ff2+2)^0,c
 11323   00482E  0E00               	movlw	0
 11324   004830  6E39               	movwf	(___fleq@ff2+3)^0,c
 11325   004832                     l3946:
 11326   004832  5036               	movf	___fleq@ff2^0,w,c
 11327   004834  1832               	xorwf	___fleq@ff1^0,w,c
 11328   004836  E10F               	bnz	u3700
 11329   004838  5037               	movf	(___fleq@ff2+1)^0,w,c
 11330   00483A  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 11331   00483C  E10C               	bnz	u3700
 11332   00483E  5038               	movf	(___fleq@ff2+2)^0,w,c
 11333   004840  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 11334   004842  E109               	bnz	u3700
 11335   004844  5039               	movf	(___fleq@ff2+3)^0,w,c
 11336   004846  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 11337   004848  B4D8               	btfsc	status,2,c
 11338   00484A  EF29  F024         	goto	u3701
 11339   00484E  EF2B  F024         	goto	u3700
 11340   004852                     u3701:
 11341   004852  EF2E  F024         	goto	l3950
 11342   004856                     u3700:
 11343   004856  90D8               	bcf	status,0,c
 11344   004858  EF2F  F024         	goto	l772
 11345   00485C                     l3950:
 11346   00485C  80D8               	bsf	status,0,c
 11347   00485E                     l772:
 11348   00485E  0012               	return		;funcret
 11349   004860                     __end_of___fleq:
 11350                           	callstack 0
 11351                           
 11352 ;; *************** function ___fldiv *****************
 11353 ;; Defined at:
 11354 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  b               4   49[COMRAM] unsigned char 
 11357 ;;  a               4   53[COMRAM] unsigned char 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;  grs             4   68[COMRAM] unsigned long 
 11360 ;;  rem             4   61[COMRAM] unsigned long 
 11361 ;;  new_exp         2   66[COMRAM] short 
 11362 ;;  aexp            1   73[COMRAM] unsigned char 
 11363 ;;  bexp            1   72[COMRAM] unsigned char 
 11364 ;;  sign            1   65[COMRAM] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  4   49[COMRAM] unsigned char 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11375 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;Total ram usage:       25 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 1
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_colour_rel
 11385 ;;		_Colour_decider
 11386 ;;		_efgtoa
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text56
 11391   002C1A                     __ptext56:
 11392                           	callstack 0
 11393   002C1A                     ___fldiv:
 11394                           	callstack 25
 11395   002C1A  5035               	movf	(___fldiv@b+3)^0,w,c
 11396   002C1C  0B80               	andlw	128
 11397   002C1E  6E42               	movwf	___fldiv@sign^0,c
 11398   002C20  5035               	movf	(___fldiv@b+3)^0,w,c
 11399   002C22  2435               	addwf	(___fldiv@b+3)^0,w,c
 11400   002C24  6E49               	movwf	___fldiv@bexp^0,c
 11401   002C26  AE34               	btfss	(___fldiv@b+2)^0,7,c
 11402   002C28  EF18  F016         	goto	u3261
 11403   002C2C  EF1A  F016         	goto	u3260
 11404   002C30                     u3261:
 11405   002C30  EF1B  F016         	goto	l3670
 11406   002C34                     u3260:
 11407   002C34  8049               	bsf	___fldiv@bexp^0,0,c
 11408   002C36                     l3670:
 11409   002C36  5049               	movf	___fldiv@bexp^0,w,c
 11410   002C38  B4D8               	btfsc	status,2,c
 11411   002C3A  EF21  F016         	goto	u3271
 11412   002C3E  EF23  F016         	goto	u3270
 11413   002C42                     u3271:
 11414   002C42  EF38  F016         	goto	l3680
 11415   002C46                     u3270:
 11416   002C46  2849               	incf	___fldiv@bexp^0,w,c
 11417   002C48  A4D8               	btfss	status,2,c
 11418   002C4A  EF29  F016         	goto	u3281
 11419   002C4E  EF2B  F016         	goto	u3280
 11420   002C52                     u3281:
 11421   002C52  EF33  F016         	goto	l3676
 11422   002C56                     u3280:
 11423   002C56  0E00               	movlw	0
 11424   002C58  6E32               	movwf	___fldiv@b^0,c
 11425   002C5A  0E00               	movlw	0
 11426   002C5C  6E33               	movwf	(___fldiv@b+1)^0,c
 11427   002C5E  0E00               	movlw	0
 11428   002C60  6E34               	movwf	(___fldiv@b+2)^0,c
 11429   002C62  0E00               	movlw	0
 11430   002C64  6E35               	movwf	(___fldiv@b+3)^0,c
 11431   002C66                     l3676:
 11432   002C66  8E34               	bsf	(___fldiv@b+2)^0,7,c
 11433   002C68  0E00               	movlw	0
 11434   002C6A  6E35               	movwf	(___fldiv@b+3)^0,c
 11435   002C6C  EF40  F016         	goto	l3682
 11436   002C70                     l3680:
 11437   002C70  0E00               	movlw	0
 11438   002C72  6E32               	movwf	___fldiv@b^0,c
 11439   002C74  0E00               	movlw	0
 11440   002C76  6E33               	movwf	(___fldiv@b+1)^0,c
 11441   002C78  0E00               	movlw	0
 11442   002C7A  6E34               	movwf	(___fldiv@b+2)^0,c
 11443   002C7C  0E00               	movlw	0
 11444   002C7E  6E35               	movwf	(___fldiv@b+3)^0,c
 11445   002C80                     l3682:
 11446   002C80  5039               	movf	(___fldiv@a+3)^0,w,c
 11447   002C82  0B80               	andlw	128
 11448   002C84  1A42               	xorwf	___fldiv@sign^0,f,c
 11449   002C86  5039               	movf	(___fldiv@a+3)^0,w,c
 11450   002C88  2439               	addwf	(___fldiv@a+3)^0,w,c
 11451   002C8A  6E4A               	movwf	___fldiv@aexp^0,c
 11452   002C8C  AE38               	btfss	(___fldiv@a+2)^0,7,c
 11453   002C8E  EF4B  F016         	goto	u3291
 11454   002C92  EF4D  F016         	goto	u3290
 11455   002C96                     u3291:
 11456   002C96  EF4E  F016         	goto	l3690
 11457   002C9A                     u3290:
 11458   002C9A  804A               	bsf	___fldiv@aexp^0,0,c
 11459   002C9C                     l3690:
 11460   002C9C  504A               	movf	___fldiv@aexp^0,w,c
 11461   002C9E  B4D8               	btfsc	status,2,c
 11462   002CA0  EF54  F016         	goto	u3301
 11463   002CA4  EF56  F016         	goto	u3300
 11464   002CA8                     u3301:
 11465   002CA8  EF6B  F016         	goto	l3700
 11466   002CAC                     u3300:
 11467   002CAC  284A               	incf	___fldiv@aexp^0,w,c
 11468   002CAE  A4D8               	btfss	status,2,c
 11469   002CB0  EF5C  F016         	goto	u3311
 11470   002CB4  EF5E  F016         	goto	u3310
 11471   002CB8                     u3311:
 11472   002CB8  EF66  F016         	goto	l3696
 11473   002CBC                     u3310:
 11474   002CBC  0E00               	movlw	0
 11475   002CBE  6E36               	movwf	___fldiv@a^0,c
 11476   002CC0  0E00               	movlw	0
 11477   002CC2  6E37               	movwf	(___fldiv@a+1)^0,c
 11478   002CC4  0E00               	movlw	0
 11479   002CC6  6E38               	movwf	(___fldiv@a+2)^0,c
 11480   002CC8  0E00               	movlw	0
 11481   002CCA  6E39               	movwf	(___fldiv@a+3)^0,c
 11482   002CCC                     l3696:
 11483   002CCC  8E38               	bsf	(___fldiv@a+2)^0,7,c
 11484   002CCE  0E00               	movlw	0
 11485   002CD0  6E39               	movwf	(___fldiv@a+3)^0,c
 11486   002CD2  EF73  F016         	goto	l3702
 11487   002CD6                     l3700:
 11488   002CD6  0E00               	movlw	0
 11489   002CD8  6E36               	movwf	___fldiv@a^0,c
 11490   002CDA  0E00               	movlw	0
 11491   002CDC  6E37               	movwf	(___fldiv@a+1)^0,c
 11492   002CDE  0E00               	movlw	0
 11493   002CE0  6E38               	movwf	(___fldiv@a+2)^0,c
 11494   002CE2  0E00               	movlw	0
 11495   002CE4  6E39               	movwf	(___fldiv@a+3)^0,c
 11496   002CE6                     l3702:
 11497   002CE6  5036               	movf	___fldiv@a^0,w,c
 11498   002CE8  1037               	iorwf	(___fldiv@a+1)^0,w,c
 11499   002CEA  1038               	iorwf	(___fldiv@a+2)^0,w,c
 11500   002CEC  1039               	iorwf	(___fldiv@a+3)^0,w,c
 11501   002CEE  A4D8               	btfss	status,2,c
 11502   002CF0  EF7C  F016         	goto	u3321
 11503   002CF4  EF7E  F016         	goto	u3320
 11504   002CF8                     u3321:
 11505   002CF8  EF96  F016         	goto	l3714
 11506   002CFC                     u3320:
 11507   002CFC  0E00               	movlw	0
 11508   002CFE  6E32               	movwf	___fldiv@b^0,c
 11509   002D00  0E00               	movlw	0
 11510   002D02  6E33               	movwf	(___fldiv@b+1)^0,c
 11511   002D04  0E00               	movlw	0
 11512   002D06  6E34               	movwf	(___fldiv@b+2)^0,c
 11513   002D08  0E00               	movlw	0
 11514   002D0A  6E35               	movwf	(___fldiv@b+3)^0,c
 11515   002D0C  0E80               	movlw	128
 11516   002D0E  1234               	iorwf	(___fldiv@b+2)^0,f,c
 11517   002D10  0E7F               	movlw	127
 11518   002D12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11519   002D14                     l3708:
 11520   002D14  5042               	movf	___fldiv@sign^0,w,c
 11521   002D16  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11522   002D18  C032  F032         	movff	___fldiv@b,?___fldiv
 11523   002D1C  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 11524   002D20  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 11525   002D24  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 11526   002D28  EFD9  F017         	goto	l1095
 11527   002D2C                     l3714:
 11528   002D2C  5049               	movf	___fldiv@bexp^0,w,c
 11529   002D2E  A4D8               	btfss	status,2,c
 11530   002D30  EF9C  F016         	goto	u3331
 11531   002D34  EF9E  F016         	goto	u3330
 11532   002D38                     u3331:
 11533   002D38  EFA8  F016         	goto	l3722
 11534   002D3C                     u3330:
 11535   002D3C  0E00               	movlw	0
 11536   002D3E  6E32               	movwf	?___fldiv^0,c
 11537   002D40  0E00               	movlw	0
 11538   002D42  6E33               	movwf	(?___fldiv+1)^0,c
 11539   002D44  0E00               	movlw	0
 11540   002D46  6E34               	movwf	(?___fldiv+2)^0,c
 11541   002D48  0E00               	movlw	0
 11542   002D4A  6E35               	movwf	(?___fldiv+3)^0,c
 11543   002D4C  EFD9  F017         	goto	l1095
 11544   002D50                     l3722:
 11545   002D50  504A               	movf	___fldiv@aexp^0,w,c
 11546   002D52  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 11547   002D56  6A3B               	clrf	(??___fldiv+1)^0,c
 11548   002D58  5E3A               	subwf	??___fldiv^0,f,c
 11549   002D5A  0E00               	movlw	0
 11550   002D5C  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 11551   002D5E  0E7F               	movlw	127
 11552   002D60  243A               	addwf	??___fldiv^0,w,c
 11553   002D62  6E43               	movwf	___fldiv@new_exp^0,c
 11554   002D64  0E00               	movlw	0
 11555   002D66  203B               	addwfc	(??___fldiv+1)^0,w,c
 11556   002D68  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11557   002D6A  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 11558   002D6E  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 11559   002D72  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 11560   002D76  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 11561   002D7A  0E00               	movlw	0
 11562   002D7C  6E32               	movwf	___fldiv@b^0,c
 11563   002D7E  0E00               	movlw	0
 11564   002D80  6E33               	movwf	(___fldiv@b+1)^0,c
 11565   002D82  0E00               	movlw	0
 11566   002D84  6E34               	movwf	(___fldiv@b+2)^0,c
 11567   002D86  0E00               	movlw	0
 11568   002D88  6E35               	movwf	(___fldiv@b+3)^0,c
 11569   002D8A  0E00               	movlw	0
 11570   002D8C  6E45               	movwf	___fldiv@grs^0,c
 11571   002D8E  0E00               	movlw	0
 11572   002D90  6E46               	movwf	(___fldiv@grs+1)^0,c
 11573   002D92  0E00               	movlw	0
 11574   002D94  6E47               	movwf	(___fldiv@grs+2)^0,c
 11575   002D96  0E00               	movlw	0
 11576   002D98  6E48               	movwf	(___fldiv@grs+3)^0,c
 11577   002D9A  0E00               	movlw	0
 11578   002D9C  6E4A               	movwf	___fldiv@aexp^0,c
 11579   002D9E  EF09  F017         	goto	l1097
 11580   002DA2                     l3732:
 11581   002DA2  504A               	movf	___fldiv@aexp^0,w,c
 11582   002DA4  B4D8               	btfsc	status,2,c
 11583   002DA6  EFD7  F016         	goto	u3341
 11584   002DAA  EFD9  F016         	goto	u3340
 11585   002DAE                     u3341:
 11586   002DAE  EFF0  F016         	goto	l3740
 11587   002DB2                     u3340:
 11588   002DB2  90D8               	bcf	status,0,c
 11589   002DB4  363E               	rlcf	___fldiv@rem^0,f,c
 11590   002DB6  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 11591   002DB8  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 11592   002DBA  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 11593   002DBC  90D8               	bcf	status,0,c
 11594   002DBE  3632               	rlcf	___fldiv@b^0,f,c
 11595   002DC0  3633               	rlcf	(___fldiv@b+1)^0,f,c
 11596   002DC2  3634               	rlcf	(___fldiv@b+2)^0,f,c
 11597   002DC4  3635               	rlcf	(___fldiv@b+3)^0,f,c
 11598   002DC6  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11599   002DC8  EFE8  F016         	goto	u3351
 11600   002DCC  EFEA  F016         	goto	u3350
 11601   002DD0                     u3351:
 11602   002DD0  EFEB  F016         	goto	l1100
 11603   002DD4                     u3350:
 11604   002DD4  8032               	bsf	___fldiv@b^0,0,c
 11605   002DD6                     l1100:
 11606   002DD6  90D8               	bcf	status,0,c
 11607   002DD8  3645               	rlcf	___fldiv@grs^0,f,c
 11608   002DDA  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 11609   002DDC  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 11610   002DDE  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 11611   002DE0                     l3740:
 11612   002DE0  5036               	movf	___fldiv@a^0,w,c
 11613   002DE2  5C3E               	subwf	___fldiv@rem^0,w,c
 11614   002DE4  5037               	movf	(___fldiv@a+1)^0,w,c
 11615   002DE6  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 11616   002DE8  5038               	movf	(___fldiv@a+2)^0,w,c
 11617   002DEA  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 11618   002DEC  5039               	movf	(___fldiv@a+3)^0,w,c
 11619   002DEE  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 11620   002DF0  A0D8               	btfss	status,0,c
 11621   002DF2  EFFD  F016         	goto	u3361
 11622   002DF6  EFFF  F016         	goto	u3360
 11623   002DFA                     u3361:
 11624   002DFA  EF08  F017         	goto	l3746
 11625   002DFE                     u3360:
 11626   002DFE  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 11627   002E00  5036               	movf	___fldiv@a^0,w,c
 11628   002E02  5E3E               	subwf	___fldiv@rem^0,f,c
 11629   002E04  5037               	movf	(___fldiv@a+1)^0,w,c
 11630   002E06  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 11631   002E08  5038               	movf	(___fldiv@a+2)^0,w,c
 11632   002E0A  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 11633   002E0C  5039               	movf	(___fldiv@a+3)^0,w,c
 11634   002E0E  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 11635   002E10                     l3746:
 11636   002E10  2A4A               	incf	___fldiv@aexp^0,f,c
 11637   002E12                     l1097:
 11638   002E12  0E19               	movlw	25
 11639   002E14  644A               	cpfsgt	___fldiv@aexp^0,c
 11640   002E16  EF0F  F017         	goto	u3371
 11641   002E1A  EF11  F017         	goto	u3370
 11642   002E1E                     u3371:
 11643   002E1E  EFD1  F016         	goto	l3732
 11644   002E22                     u3370:
 11645   002E22  503E               	movf	___fldiv@rem^0,w,c
 11646   002E24  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 11647   002E26  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 11648   002E28  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 11649   002E2A  B4D8               	btfsc	status,2,c
 11650   002E2C  EF1A  F017         	goto	u3381
 11651   002E30  EF1C  F017         	goto	u3380
 11652   002E34                     u3381:
 11653   002E34  EF34  F017         	goto	l3758
 11654   002E38                     u3380:
 11655   002E38  8045               	bsf	___fldiv@grs^0,0,c
 11656   002E3A  EF34  F017         	goto	l3758
 11657   002E3E                     l3752:
 11658   002E3E  90D8               	bcf	status,0,c
 11659   002E40  3632               	rlcf	___fldiv@b^0,f,c
 11660   002E42  3633               	rlcf	(___fldiv@b+1)^0,f,c
 11661   002E44  3634               	rlcf	(___fldiv@b+2)^0,f,c
 11662   002E46  3635               	rlcf	(___fldiv@b+3)^0,f,c
 11663   002E48  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11664   002E4A  EF29  F017         	goto	u3391
 11665   002E4E  EF2B  F017         	goto	u3390
 11666   002E52                     u3391:
 11667   002E52  EF2C  F017         	goto	l1106
 11668   002E56                     u3390:
 11669   002E56  8032               	bsf	___fldiv@b^0,0,c
 11670   002E58                     l1106:
 11671   002E58  90D8               	bcf	status,0,c
 11672   002E5A  3645               	rlcf	___fldiv@grs^0,f,c
 11673   002E5C  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 11674   002E5E  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 11675   002E60  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 11676   002E62  0643               	decf	___fldiv@new_exp^0,f,c
 11677   002E64  A0D8               	btfss	status,0,c
 11678   002E66  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 11679   002E68                     l3758:
 11680   002E68  AE34               	btfss	(___fldiv@b+2)^0,7,c
 11681   002E6A  EF39  F017         	goto	u3401
 11682   002E6E  EF3B  F017         	goto	u3400
 11683   002E72                     u3401:
 11684   002E72  EF1F  F017         	goto	l3752
 11685   002E76                     u3400:
 11686   002E76  0E00               	movlw	0
 11687   002E78  6E4A               	movwf	___fldiv@aexp^0,c
 11688   002E7A  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11689   002E7C  EF42  F017         	goto	u3411
 11690   002E80  EF44  F017         	goto	u3410
 11691   002E84                     u3411:
 11692   002E84  EF68  F017         	goto	l1108
 11693   002E88                     u3410:
 11694   002E88  0EFF               	movlw	255
 11695   002E8A  1445               	andwf	___fldiv@grs^0,w,c
 11696   002E8C  6E3A               	movwf	??___fldiv^0,c
 11697   002E8E  0EFF               	movlw	255
 11698   002E90  1446               	andwf	(___fldiv@grs+1)^0,w,c
 11699   002E92  6E3B               	movwf	(??___fldiv+1)^0,c
 11700   002E94  0EFF               	movlw	255
 11701   002E96  1447               	andwf	(___fldiv@grs+2)^0,w,c
 11702   002E98  6E3C               	movwf	(??___fldiv+2)^0,c
 11703   002E9A  0E7F               	movlw	127
 11704   002E9C  1448               	andwf	(___fldiv@grs+3)^0,w,c
 11705   002E9E  6E3D               	movwf	(??___fldiv+3)^0,c
 11706   002EA0  503A               	movf	??___fldiv^0,w,c
 11707   002EA2  103B               	iorwf	(??___fldiv+1)^0,w,c
 11708   002EA4  103C               	iorwf	(??___fldiv+2)^0,w,c
 11709   002EA6  103D               	iorwf	(??___fldiv+3)^0,w,c
 11710   002EA8  B4D8               	btfsc	status,2,c
 11711   002EAA  EF59  F017         	goto	u3421
 11712   002EAE  EF5B  F017         	goto	u3420
 11713   002EB2                     u3421:
 11714   002EB2  EF5F  F017         	goto	l1109
 11715   002EB6                     u3420:
 11716   002EB6                     l3766:
 11717   002EB6  0E01               	movlw	1
 11718   002EB8  6E4A               	movwf	___fldiv@aexp^0,c
 11719   002EBA  EF68  F017         	goto	l1108
 11720   002EBE                     l1109:
 11721   002EBE  A032               	btfss	___fldiv@b^0,0,c
 11722   002EC0  EF64  F017         	goto	u3431
 11723   002EC4  EF66  F017         	goto	u3430
 11724   002EC8                     u3431:
 11725   002EC8  EF68  F017         	goto	l1108
 11726   002ECC                     u3430:
 11727   002ECC  EF5B  F017         	goto	l3766
 11728   002ED0                     l1108:
 11729   002ED0  504A               	movf	___fldiv@aexp^0,w,c
 11730   002ED2  B4D8               	btfsc	status,2,c
 11731   002ED4  EF6E  F017         	goto	u3441
 11732   002ED8  EF70  F017         	goto	u3440
 11733   002EDC                     u3441:
 11734   002EDC  EF94  F017         	goto	l3778
 11735   002EE0                     u3440:
 11736   002EE0  0E01               	movlw	1
 11737   002EE2  2632               	addwf	___fldiv@b^0,f,c
 11738   002EE4  0E00               	movlw	0
 11739   002EE6  2233               	addwfc	(___fldiv@b+1)^0,f,c
 11740   002EE8  2234               	addwfc	(___fldiv@b+2)^0,f,c
 11741   002EEA  2235               	addwfc	(___fldiv@b+3)^0,f,c
 11742   002EEC  A035               	btfss	(___fldiv@b+3)^0,0,c
 11743   002EEE  EF7B  F017         	goto	u3451
 11744   002EF2  EF7D  F017         	goto	u3450
 11745   002EF6                     u3451:
 11746   002EF6  EF94  F017         	goto	l3778
 11747   002EFA                     u3450:
 11748   002EFA  C032  F03A         	movff	___fldiv@b,??___fldiv
 11749   002EFE  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 11750   002F02  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 11751   002F06  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 11752   002F0A  343D               	rlcf	(??___fldiv+3)^0,w,c
 11753   002F0C  323D               	rrcf	(??___fldiv+3)^0,f,c
 11754   002F0E  323C               	rrcf	(??___fldiv+2)^0,f,c
 11755   002F10  323B               	rrcf	(??___fldiv+1)^0,f,c
 11756   002F12  323A               	rrcf	??___fldiv^0,f,c
 11757   002F14  C03A  F032         	movff	??___fldiv,___fldiv@b
 11758   002F18  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 11759   002F1C  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 11760   002F20  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 11761   002F24  4A43               	infsnz	___fldiv@new_exp^0,f,c
 11762   002F26  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 11763   002F28                     l3778:
 11764   002F28  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11765   002F2A  EF9F  F017         	goto	u3461
 11766   002F2E  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 11767   002F30  E108               	bnz	u3460
 11768   002F32  2843               	incf	___fldiv@new_exp^0,w,c
 11769   002F34  A0D8               	btfss	status,0,c
 11770   002F36  EF9F  F017         	goto	u3461
 11771   002F3A  EFA1  F017         	goto	u3460
 11772   002F3E                     u3461:
 11773   002F3E  EFAC  F017         	goto	l3782
 11774   002F42                     u3460:
 11775   002F42  0E00               	movlw	0
 11776   002F44  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11777   002F46  6843               	setf	___fldiv@new_exp^0,c
 11778   002F48  0E00               	movlw	0
 11779   002F4A  6E32               	movwf	___fldiv@b^0,c
 11780   002F4C  0E00               	movlw	0
 11781   002F4E  6E33               	movwf	(___fldiv@b+1)^0,c
 11782   002F50  0E00               	movlw	0
 11783   002F52  6E34               	movwf	(___fldiv@b+2)^0,c
 11784   002F54  0E00               	movlw	0
 11785   002F56  6E35               	movwf	(___fldiv@b+3)^0,c
 11786   002F58                     l3782:
 11787   002F58  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11788   002F5A  EFB9  F017         	goto	u3470
 11789   002F5E  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 11790   002F60  E106               	bnz	u3471
 11791   002F62  0443               	decf	___fldiv@new_exp^0,w,c
 11792   002F64  B0D8               	btfsc	status,0,c
 11793   002F66  EFB7  F017         	goto	u3471
 11794   002F6A  EFB9  F017         	goto	u3470
 11795   002F6E                     u3471:
 11796   002F6E  EFC7  F017         	goto	l3786
 11797   002F72                     u3470:
 11798   002F72  0E00               	movlw	0
 11799   002F74  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11800   002F76  0E00               	movlw	0
 11801   002F78  6E43               	movwf	___fldiv@new_exp^0,c
 11802   002F7A  0E00               	movlw	0
 11803   002F7C  6E32               	movwf	___fldiv@b^0,c
 11804   002F7E  0E00               	movlw	0
 11805   002F80  6E33               	movwf	(___fldiv@b+1)^0,c
 11806   002F82  0E00               	movlw	0
 11807   002F84  6E34               	movwf	(___fldiv@b+2)^0,c
 11808   002F86  0E00               	movlw	0
 11809   002F88  6E35               	movwf	(___fldiv@b+3)^0,c
 11810   002F8A  0E00               	movlw	0
 11811   002F8C  6E42               	movwf	___fldiv@sign^0,c
 11812   002F8E                     l3786:
 11813   002F8E  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 11814   002F92  A049               	btfss	___fldiv@bexp^0,0,c
 11815   002F94  EFCE  F017         	goto	u3481
 11816   002F98  EFD0  F017         	goto	u3480
 11817   002F9C                     u3481:
 11818   002F9C  EFD3  F017         	goto	l3792
 11819   002FA0                     u3480:
 11820   002FA0  8E34               	bsf	(___fldiv@b+2)^0,7,c
 11821   002FA2  EFD4  F017         	goto	l3794
 11822   002FA6                     l3792:
 11823   002FA6  9E34               	bcf	(___fldiv@b+2)^0,7,c
 11824   002FA8                     l3794:
 11825   002FA8  90D8               	bcf	status,0,c
 11826   002FAA  3049               	rrcf	___fldiv@bexp^0,w,c
 11827   002FAC  6E35               	movwf	(___fldiv@b+3)^0,c
 11828   002FAE  EF8A  F016         	goto	l3708
 11829   002FB2                     l1095:
 11830   002FB2  0012               	return		;funcret
 11831   002FB4                     __end_of___fldiv:
 11832                           	callstack 0
 11833                           
 11834 ;; *************** function _BlueMove *****************
 11835 ;; Defined at:
 11836 ;;		line 229 in file "dc_motor.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  mL              2   30[COMRAM] PTR struct DC_motor
 11839 ;;		 -> motorL(9), 
 11840 ;;  mR              2   32[COMRAM] PTR struct DC_motor
 11841 ;;		 -> motorR(9), 
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;Total ram usage:        4 bytes
 11858 ;; Hardware stack levels used: 1
 11859 ;; Hardware stack levels required when called: 5
 11860 ;; This function calls:
 11861 ;;		_reverseDetect
 11862 ;;		_turnRight45
 11863 ;; This function is called by:
 11864 ;;		_main
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           	psect	text57
 11869   004C74                     __ptext57:
 11870                           	callstack 0
 11871   004C74                     _BlueMove:
 11872                           	callstack 25
 11873   004C74                     
 11874                           ;dc_motor.c: 230:     reverseDetect(&motorL, &motorR);
 11875   004C74  0E71               	movlw	low _motorL
 11876   004C76  6E19               	movwf	reverseDetect@mL^0,c
 11877   004C78  0E01               	movlw	high _motorL
 11878   004C7A  6E1A               	movwf	(reverseDetect@mL+1)^0,c
 11879   004C7C  0E68               	movlw	low _motorR
 11880   004C7E  6E1B               	movwf	reverseDetect@mR^0,c
 11881   004C80  0E01               	movlw	high _motorR
 11882   004C82  6E1C               	movwf	(reverseDetect@mR+1)^0,c
 11883   004C84  ECC9  F026         	call	_reverseDetect	;wreg free
 11884                           
 11885                           ;dc_motor.c: 232:     turnRight45(&motorL, &motorR);
 11886   004C88  0E71               	movlw	low _motorL
 11887   004C8A  6E19               	movwf	turnRight45@mL^0,c
 11888   004C8C  0E01               	movlw	high _motorL
 11889   004C8E  6E1A               	movwf	(turnRight45@mL+1)^0,c
 11890   004C90  0E68               	movlw	low _motorR
 11891   004C92  6E1B               	movwf	turnRight45@mR^0,c
 11892   004C94  0E01               	movlw	high _motorR
 11893   004C96  6E1C               	movwf	(turnRight45@mR+1)^0,c
 11894   004C98  EC22  F027         	call	_turnRight45	;wreg free
 11895                           
 11896                           ;dc_motor.c: 233:     turnRight45(&motorL, &motorR);
 11897   004C9C  0E71               	movlw	low _motorL
 11898   004C9E  6E19               	movwf	turnRight45@mL^0,c
 11899   004CA0  0E01               	movlw	high _motorL
 11900   004CA2  6E1A               	movwf	(turnRight45@mL+1)^0,c
 11901   004CA4  0E68               	movlw	low _motorR
 11902   004CA6  6E1B               	movwf	turnRight45@mR^0,c
 11903   004CA8  0E01               	movlw	high _motorR
 11904   004CAA  6E1C               	movwf	(turnRight45@mR+1)^0,c
 11905   004CAC  EC22  F027         	call	_turnRight45	;wreg free
 11906                           
 11907                           ;dc_motor.c: 234:     turnRight45(&motorL, &motorR);
 11908   004CB0  0E71               	movlw	low _motorL
 11909   004CB2  6E19               	movwf	turnRight45@mL^0,c
 11910   004CB4  0E01               	movlw	high _motorL
 11911   004CB6  6E1A               	movwf	(turnRight45@mL+1)^0,c
 11912   004CB8  0E68               	movlw	low _motorR
 11913   004CBA  6E1B               	movwf	turnRight45@mR^0,c
 11914   004CBC  0E01               	movlw	high _motorR
 11915   004CBE  6E1C               	movwf	(turnRight45@mR+1)^0,c
 11916   004CC0  EC22  F027         	call	_turnRight45	;wreg free
 11917                           
 11918                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
 11919   004CC4  0E71               	movlw	low _motorL
 11920   004CC6  6E19               	movwf	turnRight45@mL^0,c
 11921   004CC8  0E01               	movlw	high _motorL
 11922   004CCA  6E1A               	movwf	(turnRight45@mL+1)^0,c
 11923   004CCC  0E68               	movlw	low _motorR
 11924   004CCE  6E1B               	movwf	turnRight45@mR^0,c
 11925   004CD0  0E01               	movlw	high _motorR
 11926   004CD2  6E1C               	movwf	(turnRight45@mR+1)^0,c
 11927   004CD4  EC22  F027         	call	_turnRight45	;wreg free
 11928   004CD8  0012               	return		;funcret
 11929   004CDA                     __end_of_BlueMove:
 11930                           	callstack 0
 11931                           
 11932 ;; *************** function _turnRight45 *****************
 11933 ;; Defined at:
 11934 ;;		line 181 in file "dc_motor.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 11937 ;;		 -> motorL(9), 
 11938 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 11939 ;;		 -> motorR(9), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11954 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11955 ;;Total ram usage:        6 bytes
 11956 ;; Hardware stack levels used: 1
 11957 ;; Hardware stack levels required when called: 4
 11958 ;; This function calls:
 11959 ;;		_stop
 11960 ;;		_turnRight
 11961 ;; This function is called by:
 11962 ;;		_RedMove
 11963 ;;		_BlueMove
 11964 ;;		_YellowMove
 11965 ;;		_OrangeMove
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text58
 11970   004E44                     __ptext58:
 11971                           	callstack 0
 11972   004E44                     _turnRight45:
 11973                           	callstack 25
 11974   004E44                     
 11975                           ;dc_motor.c: 182:     turnRight(mL,mR);
 11976   004E44  C019  F014         	movff	turnRight45@mL,turnRight@mL
 11977   004E48  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 11978   004E4C  C01B  F016         	movff	turnRight45@mR,turnRight@mR
 11979   004E50  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 11980   004E54  EC7B  F024         	call	_turnRight	;wreg free
 11981   004E58                     
 11982                           ;dc_motor.c: 183:     _delay((unsigned long)((220)*(64000000/4000.0)));
 11983   004E58  0E12               	movlw	18
 11984   004E5A  6E1E               	movwf	(??_turnRight45+1)^0,c
 11985   004E5C  0EDC               	movlw	220
 11986   004E5E  6E1D               	movwf	??_turnRight45^0,c
 11987   004E60  0E60               	movlw	96
 11988   004E62                     u5447:
 11989   004E62  2EE8               	decfsz	wreg,f,c
 11990   004E64  D7FE               	bra	u5447
 11991   004E66  2E1D               	decfsz	??_turnRight45^0,f,c
 11992   004E68  D7FC               	bra	u5447
 11993   004E6A  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
 11994   004E6C  D7FA               	bra	u5447
 11995   004E6E                     
 11996                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
 11997   004E6E  0E71               	movlw	low _motorL
 11998   004E70  6E14               	movwf	stop@mL^0,c
 11999   004E72  0E01               	movlw	high _motorL
 12000   004E74  6E15               	movwf	(stop@mL+1)^0,c
 12001   004E76  0E68               	movlw	low _motorR
 12002   004E78  6E16               	movwf	stop@mR^0,c
 12003   004E7A  0E01               	movlw	high _motorR
 12004   004E7C  6E17               	movwf	(stop@mR+1)^0,c
 12005   004E7E  EC92  F025         	call	_stop	;wreg free
 12006                           
 12007                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12008   004E82  0E52               	movlw	82
 12009   004E84  6E1E               	movwf	(??_turnRight45+1)^0,c
 12010   004E86  0E2B               	movlw	43
 12011   004E88  6E1D               	movwf	??_turnRight45^0,c
 12012   004E8A  0E00               	movlw	0
 12013   004E8C                     u5457:
 12014   004E8C  2EE8               	decfsz	wreg,f,c
 12015   004E8E  D7FE               	bra	u5457
 12016   004E90  2E1D               	decfsz	??_turnRight45^0,f,c
 12017   004E92  D7FC               	bra	u5457
 12018   004E94  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
 12019   004E96  D7FA               	bra	u5457
 12020   004E98  D000               	nop2	
 12021   004E9A  0012               	return		;funcret
 12022   004E9C                     __end_of_turnRight45:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function _turnRight *****************
 12026 ;; Defined at:
 12027 ;;		line 128 in file "dc_motor.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12030 ;;		 -> motorL(9), 
 12031 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12032 ;;		 -> motorR(9), 
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      void 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12047 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12048 ;;Total ram usage:        5 bytes
 12049 ;; Hardware stack levels used: 1
 12050 ;; Hardware stack levels required when called: 3
 12051 ;; This function calls:
 12052 ;;		_setMotorPWM
 12053 ;; This function is called by:
 12054 ;;		_turnRight45
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text59
 12059   0048F6                     __ptext59:
 12060                           	callstack 0
 12061   0048F6                     _turnRight:
 12062                           	callstack 25
 12063   0048F6                     
 12064                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
 12065   0048F6  EE20 F001          	lfsr	2,1
 12066   0048FA  5014               	movf	turnRight@mL^0,w,c
 12067   0048FC  26D9               	addwf	fsr2l,f,c
 12068   0048FE  5015               	movf	(turnRight@mL+1)^0,w,c
 12069   004900  22DA               	addwfc	fsr2h,f,c
 12070   004902  0E01               	movlw	1
 12071   004904  6EDF               	movwf	indf2,c
 12072                           
 12073                           ;dc_motor.c: 131:     mR->direction =0;
 12074   004906  EE20 F001          	lfsr	2,1
 12075   00490A  5016               	movf	turnRight@mR^0,w,c
 12076   00490C  26D9               	addwf	fsr2l,f,c
 12077   00490E  5017               	movf	(turnRight@mR+1)^0,w,c
 12078   004910  22DA               	addwfc	fsr2h,f,c
 12079   004912  0E00               	movlw	0
 12080   004914  6EDF               	movwf	indf2,c
 12081                           
 12082                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
 12083   004916  EFAD  F024         	goto	l4500
 12084   00491A                     l4492:
 12085                           
 12086                           ;dc_motor.c: 135:         mL->power+=10;
 12087   00491A  C014  FFD9         	movff	turnRight@mL,fsr2l
 12088   00491E  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 12089   004922  0E0A               	movlw	10
 12090   004924  26DF               	addwf	indf2,f,c
 12091                           
 12092                           ;dc_motor.c: 136:         mR->power+=10;
 12093   004926  C016  FFD9         	movff	turnRight@mR,fsr2l
 12094   00492A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 12095   00492E  0E0A               	movlw	10
 12096   004930  26DF               	addwf	indf2,f,c
 12097   004932                     
 12098                           ;dc_motor.c: 138:         setMotorPWM(mL);
 12099   004932  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 12100   004936  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 12101   00493A  EC8A  F020         	call	_setMotorPWM	;wreg free
 12102   00493E                     
 12103                           ;dc_motor.c: 139:         setMotorPWM(mR);
 12104   00493E  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 12105   004942  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 12106   004946  EC8A  F020         	call	_setMotorPWM	;wreg free
 12107   00494A                     
 12108                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12109   00494A  0E15               	movlw	21
 12110   00494C  6E18               	movwf	??_turnRight^0,c
 12111   00494E  0EC6               	movlw	198
 12112   004950                     u5467:
 12113   004950  2EE8               	decfsz	wreg,f,c
 12114   004952  D7FE               	bra	u5467
 12115   004954  2E18               	decfsz	??_turnRight^0,f,c
 12116   004956  D7FC               	bra	u5467
 12117   004958  D000               	nop2	
 12118   00495A                     l4500:
 12119                           
 12120                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
 12121   00495A  C014  FFD9         	movff	turnRight@mL,fsr2l
 12122   00495E  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 12123   004962  0E46               	movlw	70
 12124   004964  60DF               	cpfslt	indf2,c
 12125   004966  EFB7  F024         	goto	u4621
 12126   00496A  EFB9  F024         	goto	u4620
 12127   00496E                     u4621:
 12128   00496E  EFC5  F024         	goto	l461
 12129   004972                     u4620:
 12130   004972  C016  FFD9         	movff	turnRight@mR,fsr2l
 12131   004976  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 12132   00497A  0E45               	movlw	69
 12133   00497C  64DF               	cpfsgt	indf2,c
 12134   00497E  EFC3  F024         	goto	u4631
 12135   004982  EFC5  F024         	goto	u4630
 12136   004986                     u4631:
 12137   004986  EF8D  F024         	goto	l4492
 12138   00498A                     u4630:
 12139   00498A                     l461:
 12140   00498A  0012               	return		;funcret
 12141   00498C                     __end_of_turnRight:
 12142                           	callstack 0
 12143                           
 12144 ;; *************** function _reverseDetect *****************
 12145 ;; Defined at:
 12146 ;;		line 195 in file "dc_motor.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 12149 ;;		 -> motorL(9), 
 12150 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 12151 ;;		 -> motorR(9), 
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;		None
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  1    wreg      void 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12167 ;;Total ram usage:        6 bytes
 12168 ;; Hardware stack levels used: 1
 12169 ;; Hardware stack levels required when called: 4
 12170 ;; This function calls:
 12171 ;;		_fullSpeedBack
 12172 ;;		_stop
 12173 ;; This function is called by:
 12174 ;;		_RedMove
 12175 ;;		_GreenMove
 12176 ;;		_BlueMove
 12177 ;;		_YellowMove
 12178 ;;		_PinkMove
 12179 ;;		_OrangeMove
 12180 ;;		_LightBlueMove
 12181 ;; This function uses a non-reentrant model
 12182 ;;
 12183                           
 12184                           	psect	text60
 12185   004D92                     __ptext60:
 12186                           	callstack 0
 12187   004D92                     _reverseDetect:
 12188                           	callstack 25
 12189   004D92                     
 12190                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 12191   004D92  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 12192   004D96  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 12193   004D9A  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 12194   004D9E  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 12195   004DA2  ECC6  F024         	call	_fullSpeedBack	;wreg free
 12196   004DA6                     
 12197                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12198   004DA6  0E11               	movlw	17
 12199   004DA8  6E1E               	movwf	(??_reverseDetect+1)^0,c
 12200   004DAA  0E3C               	movlw	60
 12201   004DAC  6E1D               	movwf	??_reverseDetect^0,c
 12202   004DAE  0ECB               	movlw	203
 12203   004DB0                     u5477:
 12204   004DB0  2EE8               	decfsz	wreg,f,c
 12205   004DB2  D7FE               	bra	u5477
 12206   004DB4  2E1D               	decfsz	??_reverseDetect^0,f,c
 12207   004DB6  D7FC               	bra	u5477
 12208   004DB8  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 12209   004DBA  D7FA               	bra	u5477
 12210   004DBC  F000               	nop	
 12211   004DBE                     
 12212                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 12213   004DBE  0E71               	movlw	low _motorL
 12214   004DC0  6E14               	movwf	stop@mL^0,c
 12215   004DC2  0E01               	movlw	high _motorL
 12216   004DC4  6E15               	movwf	(stop@mL+1)^0,c
 12217   004DC6  0E68               	movlw	low _motorR
 12218   004DC8  6E16               	movwf	stop@mR^0,c
 12219   004DCA  0E01               	movlw	high _motorR
 12220   004DCC  6E17               	movwf	(stop@mR+1)^0,c
 12221   004DCE  EC92  F025         	call	_stop	;wreg free
 12222                           
 12223                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12224   004DD2  0E52               	movlw	82
 12225   004DD4  6E1E               	movwf	(??_reverseDetect+1)^0,c
 12226   004DD6  0E2B               	movlw	43
 12227   004DD8  6E1D               	movwf	??_reverseDetect^0,c
 12228   004DDA  0E00               	movlw	0
 12229   004DDC                     u5487:
 12230   004DDC  2EE8               	decfsz	wreg,f,c
 12231   004DDE  D7FE               	bra	u5487
 12232   004DE0  2E1D               	decfsz	??_reverseDetect^0,f,c
 12233   004DE2  D7FC               	bra	u5487
 12234   004DE4  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 12235   004DE6  D7FA               	bra	u5487
 12236   004DE8  D000               	nop2	
 12237   004DEA  0012               	return		;funcret
 12238   004DEC                     __end_of_reverseDetect:
 12239                           	callstack 0
 12240                           
 12241 ;; *************** function _stop *****************
 12242 ;; Defined at:
 12243 ;;		line 92 in file "dc_motor.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12246 ;;		 -> motorL(9), 
 12247 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12248 ;;		 -> motorR(9), 
 12249 ;; Auto vars:     Size  Location     Type
 12250 ;;		None
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      void 
 12253 ;; Registers used:
 12254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12263 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12264 ;;Total ram usage:        5 bytes
 12265 ;; Hardware stack levels used: 1
 12266 ;; Hardware stack levels required when called: 3
 12267 ;; This function calls:
 12268 ;;		_setMotorPWM
 12269 ;; This function is called by:
 12270 ;;		_main
 12271 ;;		_turnRight45
 12272 ;;		_turnLeft45
 12273 ;;		_reverseDetect
 12274 ;;		_reverseOneBlock
 12275 ;; This function uses a non-reentrant model
 12276 ;;
 12277                           
 12278                           	psect	text61
 12279   004B24                     __ptext61:
 12280                           	callstack 0
 12281   004B24                     _stop:
 12282                           	callstack 27
 12283   004B24                     
 12284                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 12285   004B24  EFB4  F025         	goto	l4472
 12286   004B28                     l4464:
 12287                           
 12288                           ;dc_motor.c: 96:         mL->power-=10;
 12289   004B28  C014  FFD9         	movff	stop@mL,fsr2l
 12290   004B2C  C015  FFDA         	movff	stop@mL+1,fsr2h
 12291   004B30  0E0A               	movlw	10
 12292   004B32  5EDF               	subwf	indf2,f,c
 12293                           
 12294                           ;dc_motor.c: 97:         mR->power-=10;
 12295   004B34  C016  FFD9         	movff	stop@mR,fsr2l
 12296   004B38  C017  FFDA         	movff	stop@mR+1,fsr2h
 12297   004B3C  0E0A               	movlw	10
 12298   004B3E  5EDF               	subwf	indf2,f,c
 12299   004B40                     
 12300                           ;dc_motor.c: 102:         setMotorPWM(mL);
 12301   004B40  C014  F00E         	movff	stop@mL,setMotorPWM@m
 12302   004B44  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 12303   004B48  EC8A  F020         	call	_setMotorPWM	;wreg free
 12304   004B4C                     
 12305                           ;dc_motor.c: 103:         setMotorPWM(mR);
 12306   004B4C  C016  F00E         	movff	stop@mR,setMotorPWM@m
 12307   004B50  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 12308   004B54  EC8A  F020         	call	_setMotorPWM	;wreg free
 12309   004B58                     
 12310                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12311   004B58  0E15               	movlw	21
 12312   004B5A  6E18               	movwf	??_stop^0,c
 12313   004B5C  0EC6               	movlw	198
 12314   004B5E                     u5497:
 12315   004B5E  2EE8               	decfsz	wreg,f,c
 12316   004B60  D7FE               	bra	u5497
 12317   004B62  2E18               	decfsz	??_stop^0,f,c
 12318   004B64  D7FC               	bra	u5497
 12319   004B66  D000               	nop2	
 12320   004B68                     l4472:
 12321                           
 12322                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 12323   004B68  C014  FFD9         	movff	stop@mL,fsr2l
 12324   004B6C  C015  FFDA         	movff	stop@mL+1,fsr2h
 12325   004B70  50DF               	movf	indf2,w,c
 12326   004B72  A4D8               	btfss	status,2,c
 12327   004B74  EFBE  F025         	goto	u4581
 12328   004B78  EFC0  F025         	goto	u4580
 12329   004B7C                     u4581:
 12330   004B7C  EF94  F025         	goto	l4464
 12331   004B80                     u4580:
 12332   004B80  C016  FFD9         	movff	stop@mR,fsr2l
 12333   004B84  C017  FFDA         	movff	stop@mR+1,fsr2h
 12334   004B88  50DF               	movf	indf2,w,c
 12335   004B8A  A4D8               	btfss	status,2,c
 12336   004B8C  EFCA  F025         	goto	u4591
 12337   004B90  EFCC  F025         	goto	u4590
 12338   004B94                     u4591:
 12339   004B94  EF94  F025         	goto	l4464
 12340   004B98                     u4590:
 12341   004B98  0012               	return		;funcret
 12342   004B9A                     __end_of_stop:
 12343                           	callstack 0
 12344                           
 12345 ;; *************** function _fullSpeedBack *****************
 12346 ;; Defined at:
 12347 ;;		line 164 in file "dc_motor.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12350 ;;		 -> motorL(9), 
 12351 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12352 ;;		 -> motorR(9), 
 12353 ;; Auto vars:     Size  Location     Type
 12354 ;;		None
 12355 ;; Return value:  Size  Location     Type
 12356 ;;                  1    wreg      void 
 12357 ;; Registers used:
 12358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12359 ;; Tracked objects:
 12360 ;;		On entry : 0/0
 12361 ;;		On exit  : 0/0
 12362 ;;		Unchanged: 0/0
 12363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12367 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12368 ;;Total ram usage:        5 bytes
 12369 ;; Hardware stack levels used: 1
 12370 ;; Hardware stack levels required when called: 3
 12371 ;; This function calls:
 12372 ;;		_setMotorPWM
 12373 ;; This function is called by:
 12374 ;;		_reverseDetect
 12375 ;;		_reverseOneBlock
 12376 ;; This function uses a non-reentrant model
 12377 ;;
 12378                           
 12379                           	psect	text62
 12380   00498C                     __ptext62:
 12381                           	callstack 0
 12382   00498C                     _fullSpeedBack:
 12383                           	callstack 25
 12384   00498C                     
 12385                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 12386   00498C  EE20 F001          	lfsr	2,1
 12387   004990  5014               	movf	fullSpeedBack@mL^0,w,c
 12388   004992  26D9               	addwf	fsr2l,f,c
 12389   004994  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 12390   004996  22DA               	addwfc	fsr2h,f,c
 12391   004998  0E00               	movlw	0
 12392   00499A  6EDF               	movwf	indf2,c
 12393                           
 12394                           ;dc_motor.c: 168:     mR->direction =0;
 12395   00499C  EE20 F001          	lfsr	2,1
 12396   0049A0  5016               	movf	fullSpeedBack@mR^0,w,c
 12397   0049A2  26D9               	addwf	fsr2l,f,c
 12398   0049A4  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 12399   0049A6  22DA               	addwfc	fsr2h,f,c
 12400   0049A8  0E00               	movlw	0
 12401   0049AA  6EDF               	movwf	indf2,c
 12402                           
 12403                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 12404   0049AC  EFF8  F024         	goto	l4514
 12405   0049B0                     l4506:
 12406                           
 12407                           ;dc_motor.c: 171:         mL->power+=10;
 12408   0049B0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12409   0049B4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12410   0049B8  0E0A               	movlw	10
 12411   0049BA  26DF               	addwf	indf2,f,c
 12412                           
 12413                           ;dc_motor.c: 172:         mR->power+=10;
 12414   0049BC  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12415   0049C0  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12416   0049C4  0E0A               	movlw	10
 12417   0049C6  26DF               	addwf	indf2,f,c
 12418   0049C8                     
 12419                           ;dc_motor.c: 174:         setMotorPWM(mL);
 12420   0049C8  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 12421   0049CC  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12422   0049D0  EC8A  F020         	call	_setMotorPWM	;wreg free
 12423   0049D4                     
 12424                           ;dc_motor.c: 175:         setMotorPWM(mR);
 12425   0049D4  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 12426   0049D8  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12427   0049DC  EC8A  F020         	call	_setMotorPWM	;wreg free
 12428   0049E0                     
 12429                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12430   0049E0  0E15               	movlw	21
 12431   0049E2  6E18               	movwf	??_fullSpeedBack^0,c
 12432   0049E4  0EC6               	movlw	198
 12433   0049E6                     u5507:
 12434   0049E6  2EE8               	decfsz	wreg,f,c
 12435   0049E8  D7FE               	bra	u5507
 12436   0049EA  2E18               	decfsz	??_fullSpeedBack^0,f,c
 12437   0049EC  D7FC               	bra	u5507
 12438   0049EE  D000               	nop2	
 12439   0049F0                     l4514:
 12440                           
 12441                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 12442   0049F0  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12443   0049F4  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12444   0049F8  0E32               	movlw	50
 12445   0049FA  60DF               	cpfslt	indf2,c
 12446   0049FC  EF02  F025         	goto	u4641
 12447   004A00  EF04  F025         	goto	u4640
 12448   004A04                     u4641:
 12449   004A04  EF10  F025         	goto	l477
 12450   004A08                     u4640:
 12451   004A08  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12452   004A0C  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12453   004A10  0E31               	movlw	49
 12454   004A12  64DF               	cpfsgt	indf2,c
 12455   004A14  EF0E  F025         	goto	u4651
 12456   004A18  EF10  F025         	goto	u4650
 12457   004A1C                     u4651:
 12458   004A1C  EFD8  F024         	goto	l4506
 12459   004A20                     u4650:
 12460   004A20                     l477:
 12461   004A20  0012               	return		;funcret
 12462   004A22                     __end_of_fullSpeedBack:
 12463                           	callstack 0
 12464                           
 12465 ;; *************** function _setMotorPWM *****************
 12466 ;; Defined at:
 12467 ;;		line 67 in file "dc_motor.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  m               2   13[COMRAM] PTR struct DC_motor
 12470 ;;		 -> motorR(9), motorL(9), 
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;  negDuty         1   18[COMRAM] unsigned char 
 12473 ;;  posDuty         1   17[COMRAM] unsigned char 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  1    wreg      void 
 12476 ;; Registers used:
 12477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;Total ram usage:        6 bytes
 12488 ;; Hardware stack levels used: 1
 12489 ;; Hardware stack levels required when called: 2
 12490 ;; This function calls:
 12491 ;;		___lwdiv
 12492 ;;		___wmul
 12493 ;; This function is called by:
 12494 ;;		_stop
 12495 ;;		_turnLeft
 12496 ;;		_turnRight
 12497 ;;		_fullSpeedBack
 12498 ;;		_fullSpeedAhead
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text63
 12503   004114                     __ptext63:
 12504                           	callstack 0
 12505   004114                     _setMotorPWM:
 12506                           	callstack 27
 12507   004114                     
 12508                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 12509   004114  EE20 F002          	lfsr	2,2
 12510   004118  500E               	movf	setMotorPWM@m^0,w,c
 12511   00411A  26D9               	addwf	fsr2l,f,c
 12512   00411C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12513   00411E  22DA               	addwfc	fsr2h,f,c
 12514   004120  50DF               	movf	indf2,w,c
 12515   004122  B4D8               	btfsc	status,2,c
 12516   004124  EF96  F020         	goto	u4121
 12517   004128  EF98  F020         	goto	u4120
 12518   00412C                     u4121:
 12519   00412C  EFCC  F020         	goto	l4148
 12520   004130                     u4120:
 12521   004130                     
 12522                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 12523   004130  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12524   004134  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12525   004138  50DF               	movf	indf2,w,c
 12526   00413A  6E10               	movwf	??_setMotorPWM^0,c
 12527   00413C  5010               	movf	??_setMotorPWM^0,w,c
 12528   00413E  6E01               	movwf	___wmul@multiplier^0,c
 12529   004140  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12530   004142  EE20 F003          	lfsr	2,3
 12531   004146  500E               	movf	setMotorPWM@m^0,w,c
 12532   004148  26D9               	addwf	fsr2l,f,c
 12533   00414A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12534   00414C  22DA               	addwfc	fsr2h,f,c
 12535   00414E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12536   004152  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12537   004156  ECA0  F02A         	call	___wmul	;wreg free
 12538   00415A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12539   00415E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12540   004162  0E00               	movlw	0
 12541   004164  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12542   004166  0E64               	movlw	100
 12543   004168  6E09               	movwf	___lwdiv@divisor^0,c
 12544   00416A  ECCD  F025         	call	___lwdiv	;wreg free
 12545   00416E  EE20 F003          	lfsr	2,3
 12546   004172  500E               	movf	setMotorPWM@m^0,w,c
 12547   004174  26D9               	addwf	fsr2l,f,c
 12548   004176  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12549   004178  22DA               	addwfc	fsr2h,f,c
 12550   00417A  50DF               	movf	indf2,w,c
 12551   00417C  6E11               	movwf	(??_setMotorPWM+1)^0,c
 12552   00417E  5007               	movf	?___lwdiv^0,w,c
 12553   004180  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 12554   004182  6E12               	movwf	setMotorPWM@posDuty^0,c
 12555   004184                     
 12556                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 12557   004184  EE20 F003          	lfsr	2,3
 12558   004188  500E               	movf	setMotorPWM@m^0,w,c
 12559   00418A  26D9               	addwf	fsr2l,f,c
 12560   00418C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12561   00418E  22DA               	addwfc	fsr2h,f,c
 12562   004190  50DF               	movf	indf2,w,c
 12563   004192  6E13               	movwf	setMotorPWM@negDuty^0,c
 12564                           
 12565                           ;dc_motor.c: 74:     }
 12566   004194  EFEF  F020         	goto	l4152
 12567   004198                     l4148:
 12568                           
 12569                           ;dc_motor.c: 76:         posDuty=0;
 12570   004198  0E00               	movlw	0
 12571   00419A  6E12               	movwf	setMotorPWM@posDuty^0,c
 12572   00419C                     
 12573                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12574   00419C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12575   0041A0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12576   0041A4  50DF               	movf	indf2,w,c
 12577   0041A6  6E10               	movwf	??_setMotorPWM^0,c
 12578   0041A8  5010               	movf	??_setMotorPWM^0,w,c
 12579   0041AA  6E01               	movwf	___wmul@multiplier^0,c
 12580   0041AC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12581   0041AE  EE20 F003          	lfsr	2,3
 12582   0041B2  500E               	movf	setMotorPWM@m^0,w,c
 12583   0041B4  26D9               	addwf	fsr2l,f,c
 12584   0041B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12585   0041B8  22DA               	addwfc	fsr2h,f,c
 12586   0041BA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12587   0041BE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12588   0041C2  ECA0  F02A         	call	___wmul	;wreg free
 12589   0041C6  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12590   0041CA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12591   0041CE  0E00               	movlw	0
 12592   0041D0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12593   0041D2  0E64               	movlw	100
 12594   0041D4  6E09               	movwf	___lwdiv@divisor^0,c
 12595   0041D6  ECCD  F025         	call	___lwdiv	;wreg free
 12596   0041DA  5007               	movf	?___lwdiv^0,w,c
 12597   0041DC  6E13               	movwf	setMotorPWM@negDuty^0,c
 12598   0041DE                     l4152:
 12599                           
 12600                           ;dc_motor.c: 80:     if (m->direction) {
 12601   0041DE  EE20 F001          	lfsr	2,1
 12602   0041E2  500E               	movf	setMotorPWM@m^0,w,c
 12603   0041E4  26D9               	addwf	fsr2l,f,c
 12604   0041E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12605   0041E8  22DA               	addwfc	fsr2h,f,c
 12606   0041EA  50DF               	movf	indf2,w,c
 12607   0041EC  B4D8               	btfsc	status,2,c
 12608   0041EE  EFFB  F020         	goto	u4131
 12609   0041F2  EFFD  F020         	goto	u4130
 12610   0041F6                     u4131:
 12611   0041F6  EF1F  F021         	goto	l4156
 12612   0041FA                     u4130:
 12613   0041FA                     
 12614                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 12615   0041FA  EE20 F005          	lfsr	2,5
 12616   0041FE  500E               	movf	setMotorPWM@m^0,w,c
 12617   004200  26D9               	addwf	fsr2l,f,c
 12618   004202  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12619   004204  22DA               	addwfc	fsr2h,f,c
 12620   004206  CFDE F010          	movff	postinc2,??_setMotorPWM
 12621   00420A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12622   00420E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12623   004212  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12624   004216  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12625                           
 12626                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 12627   00421A  EE20 F007          	lfsr	2,7
 12628   00421E  500E               	movf	setMotorPWM@m^0,w,c
 12629   004220  26D9               	addwf	fsr2l,f,c
 12630   004222  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12631   004224  22DA               	addwfc	fsr2h,f,c
 12632   004226  CFDE F010          	movff	postinc2,??_setMotorPWM
 12633   00422A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12634   00422E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12635   004232  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12636   004236  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12637                           
 12638                           ;dc_motor.c: 85:     } else {
 12639   00423A  EF3F  F021         	goto	l439
 12640   00423E                     l4156:
 12641                           
 12642                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 12643   00423E  EE20 F005          	lfsr	2,5
 12644   004242  500E               	movf	setMotorPWM@m^0,w,c
 12645   004244  26D9               	addwf	fsr2l,f,c
 12646   004246  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12647   004248  22DA               	addwfc	fsr2h,f,c
 12648   00424A  CFDE F010          	movff	postinc2,??_setMotorPWM
 12649   00424E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12650   004252  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12651   004256  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12652   00425A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12653                           
 12654                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 12655   00425E  EE20 F007          	lfsr	2,7
 12656   004262  500E               	movf	setMotorPWM@m^0,w,c
 12657   004264  26D9               	addwf	fsr2l,f,c
 12658   004266  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12659   004268  22DA               	addwfc	fsr2h,f,c
 12660   00426A  CFDE F010          	movff	postinc2,??_setMotorPWM
 12661   00426E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12662   004272  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12663   004276  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12664   00427A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12665   00427E                     l439:
 12666   00427E  0012               	return		;funcret
 12667   004280                     __end_of_setMotorPWM:
 12668                           	callstack 0
 12669                           
 12670 ;; *************** function ___wmul *****************
 12671 ;; Defined at:
 12672 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12673 ;; Parameters:    Size  Location     Type
 12674 ;;  multiplier      2    0[COMRAM] unsigned int 
 12675 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12676 ;; Auto vars:     Size  Location     Type
 12677 ;;  product         2    4[COMRAM] unsigned int 
 12678 ;; Return value:  Size  Location     Type
 12679 ;;                  2    0[COMRAM] unsigned int 
 12680 ;; Registers used:
 12681 ;;		wreg, status,2, status,0, prodl, prodh
 12682 ;; Tracked objects:
 12683 ;;		On entry : 0/0
 12684 ;;		On exit  : 0/0
 12685 ;;		Unchanged: 0/0
 12686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12688 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12691 ;;Total ram usage:        6 bytes
 12692 ;; Hardware stack levels used: 1
 12693 ;; Hardware stack levels required when called: 1
 12694 ;; This function calls:
 12695 ;;		Nothing
 12696 ;; This function is called by:
 12697 ;;		_setMotorPWM
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text64
 12702   005540                     __ptext64:
 12703                           	callstack 0
 12704   005540                     ___wmul:
 12705                           	callstack 27
 12706   005540  5001               	movf	___wmul@multiplier^0,w,c
 12707   005542  0203               	mulwf	___wmul@multiplicand^0,c
 12708   005544  CFF3 F005          	movff	prodl,___wmul@product
 12709   005548  CFF4 F006          	movff	prodh,___wmul@product+1
 12710   00554C  5001               	movf	___wmul@multiplier^0,w,c
 12711   00554E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12712   005550  50F3               	movf	243,w,c
 12713   005552  2606               	addwf	(___wmul@product+1)^0,f,c
 12714   005554  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12715   005556  0203               	mulwf	___wmul@multiplicand^0,c
 12716   005558  50F3               	movf	243,w,c
 12717   00555A  2606               	addwf	(___wmul@product+1)^0,f,c
 12718   00555C  C005  F001         	movff	___wmul@product,?___wmul
 12719   005560  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12720   005564  0012               	return		;funcret
 12721   005566                     __end_of___wmul:
 12722                           	callstack 0
 12723                           
 12724 ;; *************** function ___lwdiv *****************
 12725 ;; Defined at:
 12726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  dividend        2    6[COMRAM] unsigned int 
 12729 ;;  divisor         2    8[COMRAM] unsigned int 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  quotient        2   10[COMRAM] unsigned int 
 12732 ;;  counter         1   12[COMRAM] unsigned char 
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  2    6[COMRAM] unsigned int 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0
 12737 ;; Tracked objects:
 12738 ;;		On entry : 0/0
 12739 ;;		On exit  : 0/0
 12740 ;;		Unchanged: 0/0
 12741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12743 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12746 ;;Total ram usage:        7 bytes
 12747 ;; Hardware stack levels used: 1
 12748 ;; Hardware stack levels required when called: 1
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_setMotorPWM
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text65
 12757   004B9A                     __ptext65:
 12758                           	callstack 0
 12759   004B9A                     ___lwdiv:
 12760                           	callstack 27
 12761   004B9A  0E00               	movlw	0
 12762   004B9C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12763   004B9E  0E00               	movlw	0
 12764   004BA0  6E0B               	movwf	___lwdiv@quotient^0,c
 12765   004BA2  5009               	movf	___lwdiv@divisor^0,w,c
 12766   004BA4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12767   004BA6  B4D8               	btfsc	status,2,c
 12768   004BA8  EFD8  F025         	goto	u3841
 12769   004BAC  EFDA  F025         	goto	u3840
 12770   004BB0                     u3841:
 12771   004BB0  EF02  F026         	goto	l1004
 12772   004BB4                     u3840:
 12773   004BB4  0E01               	movlw	1
 12774   004BB6  6E0D               	movwf	___lwdiv@counter^0,c
 12775   004BB8  EFE2  F025         	goto	l4036
 12776   004BBC                     l4034:
 12777   004BBC  90D8               	bcf	status,0,c
 12778   004BBE  3609               	rlcf	___lwdiv@divisor^0,f,c
 12779   004BC0  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12780   004BC2  2A0D               	incf	___lwdiv@counter^0,f,c
 12781   004BC4                     l4036:
 12782   004BC4  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 12783   004BC6  EFE7  F025         	goto	u3851
 12784   004BCA  EFE9  F025         	goto	u3850
 12785   004BCE                     u3851:
 12786   004BCE  EFDE  F025         	goto	l4034
 12787   004BD2                     u3850:
 12788   004BD2                     l4038:
 12789   004BD2  90D8               	bcf	status,0,c
 12790   004BD4  360B               	rlcf	___lwdiv@quotient^0,f,c
 12791   004BD6  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12792   004BD8  5009               	movf	___lwdiv@divisor^0,w,c
 12793   004BDA  5C07               	subwf	___lwdiv@dividend^0,w,c
 12794   004BDC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12795   004BDE  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12796   004BE0  A0D8               	btfss	status,0,c
 12797   004BE2  EFF5  F025         	goto	u3861
 12798   004BE6  EFF7  F025         	goto	u3860
 12799   004BEA                     u3861:
 12800   004BEA  EFFC  F025         	goto	l4046
 12801   004BEE                     u3860:
 12802   004BEE  5009               	movf	___lwdiv@divisor^0,w,c
 12803   004BF0  5E07               	subwf	___lwdiv@dividend^0,f,c
 12804   004BF2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12805   004BF4  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12806   004BF6  800B               	bsf	___lwdiv@quotient^0,0,c
 12807   004BF8                     l4046:
 12808   004BF8  90D8               	bcf	status,0,c
 12809   004BFA  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12810   004BFC  3209               	rrcf	___lwdiv@divisor^0,f,c
 12811   004BFE  2E0D               	decfsz	___lwdiv@counter^0,f,c
 12812   004C00  EFE9  F025         	goto	l4038
 12813   004C04                     l1004:
 12814   004C04  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 12815   004C08  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12816   004C0C  0012               	return		;funcret
 12817   004C0E                     __end_of___lwdiv:
 12818                           	callstack 0
 12819                           
 12820 ;; *************** function _HighISR *****************
 12821 ;; Defined at:
 12822 ;;		line 59 in file "interrupts.c"
 12823 ;; Parameters:    Size  Location     Type
 12824 ;;		None
 12825 ;; Auto vars:     Size  Location     Type
 12826 ;;		None
 12827 ;; Return value:  Size  Location     Type
 12828 ;;                  1    wreg      void 
 12829 ;; Registers used:
 12830 ;;		None
 12831 ;; Tracked objects:
 12832 ;;		On entry : 0/0
 12833 ;;		On exit  : 0/0
 12834 ;;		Unchanged: 0/0
 12835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12840 ;;Total ram usage:        0 bytes
 12841 ;; Hardware stack levels used: 1
 12842 ;; This function calls:
 12843 ;;		Nothing
 12844 ;; This function is called by:
 12845 ;;		Interrupt level 2
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           	psect	intcode
 12850   000008                     __pintcode:
 12851                           	callstack 0
 12852   000008                     _HighISR:
 12853                           	callstack 22
 12854                           
 12855                           ;incstack = 0
 12856   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12857   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12858   00000C  0011               	retfie		f
 12859   00000E                     __end_of_HighISR:
 12860                           	callstack 0
 12861                           
 12862                           	psect	rparam
 12863   000000                     
 12864                           	psect	temp
 12865   00005F                     btemp:
 12866                           	callstack 0
 12867   00005F                     	ds	1
 12868   000000                     int$flags	set	btemp
 12869   000000                     wtemp8	set	btemp+1
 12870   000000                     ttemp5	set	btemp+1
 12871   000000                     ttemp6	set	btemp+4
 12872   000000                     ttemp7	set	btemp+8
 12873                           
 12874                           	psect	idloc
 12875                           
 12876                           ;Config register IDLOC0 @ 0x200000
 12877                           ;	unspecified, using default values
 12878   200000                     	org	2097152
 12879   200000  0FFF               	dw	4095
 12880                           
 12881                           ;Config register IDLOC1 @ 0x200002
 12882                           ;	unspecified, using default values
 12883   200002                     	org	2097154
 12884   200002  0FFF               	dw	4095
 12885                           
 12886                           ;Config register IDLOC2 @ 0x200004
 12887                           ;	unspecified, using default values
 12888   200004                     	org	2097156
 12889   200004  0FFF               	dw	4095
 12890                           
 12891                           ;Config register IDLOC3 @ 0x200006
 12892                           ;	unspecified, using default values
 12893   200006                     	org	2097158
 12894   200006  0FFF               	dw	4095
 12895                           
 12896                           ;Config register IDLOC4 @ 0x200008
 12897                           ;	unspecified, using default values
 12898   200008                     	org	2097160
 12899   200008  0FFF               	dw	4095
 12900                           
 12901                           ;Config register IDLOC5 @ 0x20000A
 12902                           ;	unspecified, using default values
 12903   20000A                     	org	2097162
 12904   20000A  0FFF               	dw	4095
 12905                           
 12906                           ;Config register IDLOC6 @ 0x20000C
 12907                           ;	unspecified, using default values
 12908   20000C                     	org	2097164
 12909   20000C  0FFF               	dw	4095
 12910                           
 12911                           ;Config register IDLOC7 @ 0x20000E
 12912                           ;	unspecified, using default values
 12913   20000E                     	org	2097166
 12914   20000E  0FFF               	dw	4095
 12915                           
 12916                           	psect	config
 12917                           
 12918                           ;Config register CONFIG1L @ 0x300000
 12919                           ;	External Oscillator mode Selection bits
 12920                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12921                           ;	Power-up default value for COSC bits
 12922                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12923   300000                     	org	3145728
 12924   300000  AA                 	db	170
 12925                           
 12926                           ;Config register CONFIG1H @ 0x300001
 12927                           ;	unspecified, using default values
 12928                           ;	Clock Out Enable bit
 12929                           ;	CLKOUTEN = 0x1, unprogrammed default
 12930                           ;	Clock Switch Enable bit
 12931                           ;	CSWEN = 0x1, unprogrammed default
 12932                           ;	Fail-Safe Clock Monitor Enable bit
 12933                           ;	FCMEN = 0x1, unprogrammed default
 12934   300001                     	org	3145729
 12935   300001  FF                 	db	255
 12936                           
 12937                           ;Config register CONFIG2L @ 0x300002
 12938                           ;	unspecified, using default values
 12939                           ;	Master Clear Enable bit
 12940                           ;	MCLRE = 0x1, unprogrammed default
 12941                           ;	Power-up Timer Enable bit
 12942                           ;	PWRTE = 0x1, unprogrammed default
 12943                           ;	Low-power BOR enable bit
 12944                           ;	LPBOREN = 0x1, unprogrammed default
 12945                           ;	Brown-out Reset Enable bits
 12946                           ;	BOREN = 0x3, unprogrammed default
 12947   300002                     	org	3145730
 12948   300002  FF                 	db	255
 12949                           
 12950                           ;Config register CONFIG2H @ 0x300003
 12951                           ;	unspecified, using default values
 12952                           ;	Brown Out Reset Voltage selection bits
 12953                           ;	BORV = 0x3, unprogrammed default
 12954                           ;	ZCD Disable bit
 12955                           ;	ZCD = 0x1, unprogrammed default
 12956                           ;	PPSLOCK bit One-Way Set Enable bit
 12957                           ;	PPS1WAY = 0x1, unprogrammed default
 12958                           ;	Stack Full/Underflow Reset Enable bit
 12959                           ;	STVREN = 0x1, unprogrammed default
 12960                           ;	Debugger Enable bit
 12961                           ;	DEBUG = 0x1, unprogrammed default
 12962                           ;	Extended Instruction Set Enable bit
 12963                           ;	XINST = 0x1, unprogrammed default
 12964   300003                     	org	3145731
 12965   300003  FF                 	db	255
 12966                           
 12967                           ;Config register CONFIG3L @ 0x300004
 12968                           ;	WDT Period Select bits
 12969                           ;	WDTCPS = 0x1F, unprogrammed default
 12970                           ;	WDT operating mode
 12971                           ;	WDTE = OFF, WDT Disabled
 12972   300004                     	org	3145732
 12973   300004  9F                 	db	159
 12974                           
 12975                           ;Config register CONFIG3H @ 0x300005
 12976                           ;	unspecified, using default values
 12977                           ;	WDT Window Select bits
 12978                           ;	WDTCWS = 0x7, unprogrammed default
 12979                           ;	WDT input clock selector
 12980                           ;	WDTCCS = 0x7, unprogrammed default
 12981   300005                     	org	3145733
 12982   300005  FF                 	db	255
 12983                           
 12984                           ;Config register CONFIG4L @ 0x300006
 12985                           ;	unspecified, using default values
 12986                           ;	Write Protection Block 0
 12987                           ;	WRT0 = 0x1, unprogrammed default
 12988                           ;	Write Protection Block 1
 12989                           ;	WRT1 = 0x1, unprogrammed default
 12990                           ;	Write Protection Block 2
 12991                           ;	WRT2 = 0x1, unprogrammed default
 12992                           ;	Write Protection Block 3
 12993                           ;	WRT3 = 0x1, unprogrammed default
 12994                           ;	Write Protection Block 3
 12995                           ;	WRT4 = 0x1, unprogrammed default
 12996                           ;	Write Protection Block 3
 12997                           ;	WRT5 = 0x1, unprogrammed default
 12998                           ;	Write Protection Block 3
 12999                           ;	WRT6 = 0x1, unprogrammed default
 13000                           ;	Write Protection Block 3
 13001                           ;	WRT7 = 0x1, unprogrammed default
 13002   300006                     	org	3145734
 13003   300006  FF                 	db	255
 13004                           
 13005                           ;Config register CONFIG4H @ 0x300007
 13006                           ;	unspecified, using default values
 13007                           ;	Configuration Register Write Protection bit
 13008                           ;	WRTC = 0x1, unprogrammed default
 13009                           ;	Boot Block Write Protection bit
 13010                           ;	WRTB = 0x1, unprogrammed default
 13011                           ;	Data EEPROM Write Protection bit
 13012                           ;	WRTD = 0x1, unprogrammed default
 13013                           ;	Scanner Enable bit
 13014                           ;	SCANE = 0x1, unprogrammed default
 13015                           ;	Low Voltage Programming Enable bit
 13016                           ;	LVP = 0x1, unprogrammed default
 13017   300007                     	org	3145735
 13018   300007  FF                 	db	255
 13019                           
 13020                           ;Config register CONFIG5L @ 0x300008
 13021                           ;	unspecified, using default values
 13022                           ;	UserNVM Program Memory Code Protection bit
 13023                           ;	CP = 0x1, unprogrammed default
 13024                           ;	DataNVM Memory Code Protection bit
 13025                           ;	CPD = 0x1, unprogrammed default
 13026   300008                     	org	3145736
 13027   300008  FF                 	db	255
 13028                           
 13029                           ;Config register CONFIG5H @ 0x300009
 13030                           ;	unspecified, using default values
 13031   300009                     	org	3145737
 13032   300009  FF                 	db	255
 13033                           
 13034                           ;Config register CONFIG6L @ 0x30000A
 13035                           ;	unspecified, using default values
 13036                           ;	Table Read Protection Block 0
 13037                           ;	EBTR0 = 0x1, unprogrammed default
 13038                           ;	Table Read Protection Block 1
 13039                           ;	EBTR1 = 0x1, unprogrammed default
 13040                           ;	Table Read Protection Block 2
 13041                           ;	EBTR2 = 0x1, unprogrammed default
 13042                           ;	Table Read Protection Block 3
 13043                           ;	EBTR3 = 0x1, unprogrammed default
 13044                           ;	Table Read Protection Block 4
 13045                           ;	EBTR4 = 0x1, unprogrammed default
 13046                           ;	Table Read Protection Block 5
 13047                           ;	EBTR5 = 0x1, unprogrammed default
 13048                           ;	Table Read Protection Block 6
 13049                           ;	EBTR6 = 0x1, unprogrammed default
 13050                           ;	Table Read Protection Block 7
 13051                           ;	EBTR7 = 0x1, unprogrammed default
 13052   30000A                     	org	3145738
 13053   30000A  FF                 	db	255
 13054                           
 13055                           ;Config register CONFIG6H @ 0x30000B
 13056                           ;	unspecified, using default values
 13057                           ;	Boot Block Table Read Protection bit
 13058                           ;	EBTRB = 0x1, unprogrammed default
 13059   30000B                     	org	3145739
 13060   30000B  FF                 	db	255
 13061                           tosu	equ	0xFFF
 13062                           tosh	equ	0xFFE
 13063                           tosl	equ	0xFFD
 13064                           stkptr	equ	0xFFC
 13065                           pclatu	equ	0xFFB
 13066                           pclath	equ	0xFFA
 13067                           pcl	equ	0xFF9
 13068                           tblptru	equ	0xFF8
 13069                           tblptrh	equ	0xFF7
 13070                           tblptrl	equ	0xFF6
 13071                           tablat	equ	0xFF5
 13072                           prodh	equ	0xFF4
 13073                           prodl	equ	0xFF3
 13074                           indf0	equ	0xFEF
 13075                           postinc0	equ	0xFEE
 13076                           postdec0	equ	0xFED
 13077                           preinc0	equ	0xFEC
 13078                           plusw0	equ	0xFEB
 13079                           fsr0h	equ	0xFEA
 13080                           fsr0l	equ	0xFE9
 13081                           wreg	equ	0xFE8
 13082                           indf1	equ	0xFE7
 13083                           postinc1	equ	0xFE6
 13084                           postdec1	equ	0xFE5
 13085                           preinc1	equ	0xFE4
 13086                           plusw1	equ	0xFE3
 13087                           fsr1h	equ	0xFE2
 13088                           fsr1l	equ	0xFE1
 13089                           bsr	equ	0xFE0
 13090                           indf2	equ	0xFDF
 13091                           postinc2	equ	0xFDE
 13092                           postdec2	equ	0xFDD
 13093                           preinc2	equ	0xFDC
 13094                           plusw2	equ	0xFDB
 13095                           fsr2h	equ	0xFDA
 13096                           fsr2l	equ	0xFD9
 13097                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        3
    BSS         229
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     157
    BANK1           256    106     236
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2219$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2135$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2135$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               108   108      0  170805
                                            113 BANK0      2     2      0
                                              0 BANK1    106   106      0
                           _BlueMove
                     _Colour_decider
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35365
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34858
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34505
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28659
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8600
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   18262
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _RedMove                                              4     0      4   12884
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   17654
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    5378
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _OrangeMove                                           4     0      4   12884
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _LightBlueMove                                        4     0      4   12276
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GreenMove                                            4     0      4   12276
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    5986
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23331
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _BlueMove                                             4     0      4   12884
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnRight45                                          6     2      4    6594
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    6138
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    2721
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2309
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6A      EC       7       92.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhll        1E      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll      F      0       0      55        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      9      0       0      54        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      40        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BITBIGSFRlllhh       1      0       0      39        0.0%
BITBIGSFRllh         1      0       0      38        0.0%
BITBIGSFRlhl         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     223      58        0.0%
DATA                 0      0     223       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 00:31:20 2023

               _color_read_Red 517E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 512E                   ___fldiv@sign 0042                _color_read_Blue 521E  
                           l42 5584                             l51 521C                             l60 3640  
                           l45 517C                             l70 1934                             l54 526C  
                           l39 4F94                             l48 51CC                             l57 4D36  
          ___wmul@multiplicand 0003               _color_read_Green 51CE                readColours@vals 000C  
            ??_Interrupts_init 0001                            l203 55A6                            l140 553E  
                          l212 54EC                            l134 5516                            l206 55BA  
                          l143 55E4                            l152 55C6                            l137 5518  
                          l146 55D0                            l155 53C8                            l501 4FE6  
                          l149 55DA                            l510 50DC                            l504 5038  
                          l432 4AA8                            l513 5564                            l266 55EC  
                          l194 55A2                            l507 508A                            l445 4B98  
                          l461 498A                            l453 48F4                            l374 32C6  
                          l439 427E                            l480 4E9A                            l640 43E2  
                          l810 44E8                            l483 4E42                            l627 4112  
                          l492 5446                            l477 4A20                            l486 4DEA  
                          l495 5484                            l489 4D90                            l498 4CD8  
                          l772 485E                            l783 45EC                            l778 45A6  
                          l787 54BC                            _abs 53CA                            _pad 4AAA  
                          _rel 015C                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         l1011 4C0C                           l1004 4C04                           l1100 2DD6  
                         l1041 251E                           l1106 2E58                           l1050 27EE  
                         l1042 250C                           l1131 2C18                           l1043 24D2  
                         ?_abs 0013                           l1108 2ED0                           l1109 2EBE  
                         l1134 2AAA                           l1127 28B4                           l1223 4ACC  
                         l1144 2BDA                           l1136 2B22                           l1232 39D4  
                         l1400 5342                           l1137 2B10                           l1305 3946  
                         l1058 2638                           l1234 39DC                           l1067 2708  
                         l1083 52FE                           l1171 3F8A                           l1227 4B22  
                         l1235 3A22                           l1068 26F6                           l1260 1CC8  
                         l1182 3F22                           l1342 5400                           l1246 3BC4  
                         l1262 1B0E                           l1095 2FB2                           l1175 3EC6  
                         l1351 3DD6                           l1327 4EF0                           l1191 4F42  
                         l1168 3E2E                           l4000 445C                           l1097 2E12  
                         l1345 5408                           l1337 46EA                           l1257 232E  
                         l4010 4488                           l1354 3D1A                           l1362 4C62  
                         l1290 2110                           l1371 512C                           l4020 44B8  
                         l4100 3BE6                           l1365 4C72                           l4030 4BA2  
                         l4022 44C8                           l4006 4474                           l4110 3CCE  
                         l4102 3C3C                           l1383 47B4                           l1391 5386  
                         l4040 4BD8                           l4032 4BB4                           l3400 23D6  
                         l5000 4A78                           l4200 3B7E                           l4024 44D8  
                         l4016 449C                           l4008 447E                           l4120 3DB6  
                         l4112 3D0A                           l4104 3C50                           l4042 4BEE  
                         l4034 4BBC                           l3410 2410                           l3402 23E6  
                         l5010 4A9A                           l5002 4A82                           l1394 55EA  
                         l4050 4AAA                           l4202 3B8E                           l4018 44A8  
                         l4122 3DC6                           l4106 3C5E                           l4114 3D3E  
                         l4130 50FE                           l4210 1936                           l4044 4BF6  
                         l4036 4BC4                           l4028 4B9A                           l3500 2618  
                         l3420 243C                           l3412 2422                           l3404 23F6  
                         l4140 5528                           l5012 4A9C                           l5004 4A84  
                         l4060 4AF0                           l4052 4AB8                           l4204 3B94  
                         l4116 3D7A                           l4132 5102                           l4300 1CE0  
                         l4220 1982                           l4212 193C                           l5020 4F0C  
                         l5100 2FD4                           l4046 4BF8                           l4038 4BD2  
                         l4150 419C                           l4142 4114                           l3510 2672  
                         l3502 2628                           l3430 2450                           l3422 2440  
                         l3414 2430                           l3406 23F8                           l5030 503A  
                         l5014 4AA6                           l5006 4A8E                           l4062 4B0E  
                         l4054 4AC4                           l4206 3BA4                           l4070 460E  
                         l4118 3D8E                           l4134 510E                           l4126 50DE  
                         l4310 1D12                           l4302 1CEC                           l4230 19C0  
                         l4222 198C                           l4214 194C                           l5022 4F14  
                         l5110 2FE2                           l5102 2FD6                           l4048 4BFE  
                         l4152 41DE                           l4144 4130                           l3520 26A2  
                         l3512 267C                           l3504 264E                           l3440 2464  
                         l3432 2454                           l3424 2444                           l3416 2434  
                         l3408 2400                           l5040 4FE8                           l5032 4F96  
                         l5008 4A90                           l3600 4000                           l4064 53CA  
                         l3360 471A                           l4056 4AD8                           l4160 3968  
                         l4072 464C                           l4080 468C                           l4128 50F2  
                         l4136 5112                           l4400 21A0                           l4320 1D5A  
                         l4312 1D20                           l4304 1CF4                           l4240 1A08  
                         l4232 19C8                           l4224 1994                           l4216 195A  
                         l5024 4F30                           l5016 4EF2                           l5120 3002  
                         l5112 2FE6                           l5104 2FD8                           l4154 41FA  
                         l4146 4184                           l5034 4C74                           l3530 26CA  
                         l3522 26A6                           l3514 268A                           l3506 265E  
                         l3450 249E                           l3442 2468                           l3434 2458  
                         l3426 2448                           l3418 2438                           l3370 233C  
                         l4138 5518                           l3610 405A                           l3602 401E  
                         l4066 53E4                           l3362 4738                           l3354 46EC  
                         l4058 4AEC                           l4170 39E4                           l4162 397C  
                         l4082 469E                           l4074 4674                           l4090 5300  
                         l4410 2256                           l4402 21F8                           l4330 1E6E  
                         l4322 1D6A                           l4314 1D38                           l4306 1CFC  
                         l4242 1A0E                           l4226 19A4                           l4234 19CC  
                         l4218 195E                           l5018 4F04                           l5130 301E  
                         l5122 3006                           l5114 2FEA                           l5106 2FDA  
                         l4156 423E                           l4148 4198                           l4500 495A  
                         l3700 2CD6                           l3540 2724                           l3532 26D8  
                         l3524 26B6                           l3516 268C                           l3460 24F0  
                         l3452 24BA                           l3444 246C                           l3436 245C  
                         l3428 244C                           l3380 237C                           l3372 234A  
                         l5036 5448                           l5028 540A                           l3612 4088  
                         l3604 4026                           l3620 40C2                           l3364 476E  
                         l3356 46FE                           l4180 3A1E                           l4172 39F4  
                         l4164 398C                           l4076 4680                           l4068 45EE  
                         l4092 5310                           l4420 22C8                           l4412 2272  
                         l4404 222C                           l4340 1F0E                           l4324 1D7E  
                         l4332 1E74                           l4316 1D4A                           l4308 1D00  
                         l4260 1A9A                           l4244 1A16                           l4236 19F2  
                         l4252 1A58                           l4228 19B4                           l5300 3870  
                         l5140 3056                           l5132 3026                           l5124 300A  
                         l5116 2FF2                           l5108 2FDC                           l4510 49D4  
                         l4502 4972                           l3710 2D18                           l3702 2CE6  
                         l3550 278E                           l3542 2732                           l3534 26EE  
                         l3518 269A                           l3526 26B8                           l3470 253C  
                         l3462 24FE                           l3454 24CA                           l3438 2460  
                         l3446 2470                           l3390 23AE                           l3382 237E  
                         l3374 234C                           l5038 508C                           l3622 40D2  
                         l3614 40A8                           l3606 403A                           l3630 4284  
                         l3358 4710                           l4190 3AC2                           l4182 3A2A  
                         l4174 39FA                           l4166 39AC                           l4158 3948  
                         l4086 46E2                           l4094 4C0E                           l4422 22E0  
                         l4414 227A                           l4406 2234                           l4350 1FEA  
                         l4342 1F40                           l4334 1E92                           l4326 1DE2  
                         l4318 1D52                           l4262 1AA2                           l4254 1A7E  
                         l4270 1ABE                           l4246 1A2E                           l4238 1A04  
                         l5302 38FA                           l5150 30DA                           l5142 3074  
                         l5134 302E                           l5126 300E                           l5118 2FFA  
                         l4512 49E0                           l4504 498C                           l3704 2CFC  
                         l3560 27C8                           l3552 27AE                           l3544 276C  
                         l3480 257C                           l3528 26C6                           l3464 2500  
                         l3456 24E0                           l3448 2474                           l3392 23B0  
                         l3376 235C                           l3384 2386                           l3368 2330  
                         l4600 54EE                           l4432 55DC                           l4440 55D2  
                         l3624 40F2                           l3616 40AA                           l3608 4048  
                         l3640 42E4                           l3632 4292                           l4192 3AC8  
                         l4184 3A34                           l4176 3A0A                           l4168 39C8  
                         l4096 4C2C                           l4424 22F0                           l4416 228A  
                         l4408 2238                           l4360 204C                           l4352 1FF0  
                         l4344 1F50                           l4336 1EC6                           l4328 1E3A  
                         l4280 1B58                           l4272 1AD8                           l4256 1A90  
                         l4248 1A38                           l4520 366A                           l5160 3128  
                         l5152 30E2                           l5144 3088                           l5136 3036  
                         l5128 3016                           l4506 49B0                           l4514 49F0  
                         l3730 2D9A                           l3722 2D50                           l3706 2D0C  
                         l3714 2D2C                           l3810 281C                           l3802 27F0  
                         l3562 27CE                           l3554 27B2                           l3538 2718  
                         l3546 276E                           l3490 25A6                           l3482 2588  
                         l3474 2550                           l3466 250A                           l3458 24EC  
                         l3394 23B6                           l3386 2396                           l3378 236C  
                         l4610 5504                           l4602 54F8                           l4434 55E0  
                         l4442 55D6                           l4450 538E                           l3618 40BC  
                         l3650 435A                           l3642 4302                           l3634 42B2  
                         l3570 5344                           l4186 3A3A                           l4194 3B2C  
                         l4178 3A16                           l4098 3BC6                           l4426 2306  
                         l4418 22BA                           l4370 20E6                           l4362 2054  
                         l4354 2024                           l4346 1F60                           l4338 1EF8  
                         l4290 1C4E                           l4282 1B96                           l4258 1A94  
                         l4530 36BA                           l4522 3678                           l5170 31BE  
                         l5162 3130                           l5154 30EA                           l5146 30A4  
                         l5138 3042                           l5090 2FBC                           l3580 555C  
                         l4516 4A08                           l4508 49C8                           l3740 2DE0  
                         l3732 2DA2                           l3724 2D6A                           l3716 2D3C  
                         l3708 2D14                           l3820 2858                           l3812 282C  
                         l3804 27FC                           l3564 27DC                           l3556 27C0  
                         l3548 277E                           l3484 258C                           l3476 2560  
                         l3468 252C                           l3492 25AC                           l3396 23C4  
                         l3388 239C                           l4700 3F36                           l4604 54FE  
                         l4436 55BE                           l4612 5568                           l4452 5396  
                         l4444 55C8                           l4620 517E                           l3660 43C2  
                         l3652 437A                           l3644 430A                           l3636 42B6  
                         l3628 4280                           l3572 5350                           l4196 3B46  
                         l4188 3ABC                           l4428 230E                           l4380 2144  
                         l4372 2106                           l4364 205A                           l4356 2038  
                         l4348 1F94                           l4292 1C56                           l4284 1BC8  
                         l4276 1B1E                           l4540 3770                           l4532 36DA  
                         l4524 3686                           l5180 322A                           l5172 31D2  
                         l5164 3186                           l5156 30F2                           l5148 30C0  
                         l5092 2FC0                           l4470 4B58                           l4462 4B24  
                         l3750 2E38                           l3742 2DFE                           l3734 2DB2  
                         l3726 2D7A                           l3718 2D3C                           l3670 2C36  
                         l3902 2B32                           l3910 2B7A                           l3830 288E  
                         l3822 285E                           l3814 283C                           l3806 280A  
                         l3566 27DE                           l3558 27C6                           l3494 25D2  
                         l3486 259A                           l3478 256E                           l3398 23C6  
                         l4702 3F5A                           l4606 5500                           l4438 55C2  
                         l4454 539E                           l4446 55CC                           l4622 51C4  
                         l4614 512E                           l3590 3FBE                           l3654 438C  
                         l3646 431E                           l3638 42C4                           l3574 5362  
                         l4198 3B64                           l4390 216C                           l4382 214A  
                         l4374 2122                           l4366 2062                           l4358 203C  
                         l4286 1C06                           l4278 1B24                           l4542 3786  
                         l4550 379E                           l4534 3730                           l4526 368A  
                         l4518 3642                           l5190 329A                           l5182 3242  
                         l5174 31EA                           l5166 3192                           l5158 310A  
                         l5094 2FC4                           l5086 2FB4                           ?_pad 0011  
                         l4464 4B28                           l4472 4B68                           l3760 2E76  
                         l3752 2E3E                           l3744 2E00                           l3736 2DC6  
                         l3728 2D8A                           l3672 2C46                           l3680 2C70  
                         l3664 2C1A                           l3920 2BEE                           l3912 2B94  
                         l3904 2B3E                           l3832 289E                           l3824 286C  
                         l3816 2842                           l3808 280C                           l3496 2606  
                         l3488 259C                           l4704 3F6A                           l4800 1066  
                         l4480 489C                           l4608 5502                           l4456 53C4  
                         l4448 538A                           l4632 521E                           l4616 5174  
                         l4640 55B6                           l3592 3FC2                           l3584 3F8C  
                         l3648 432C                           l3656 4392                           l3576 5366  
                         l4384 2152                           l4376 2130                           l4392 2172  
                         l4368 206E                           l4288 1C1A                           l4296 1C96  
                         l4560 385C                           l4544 378E                           l4552 37D0  
                         l4528 369A                           l4712 4E9C                           l5192 32AE  
                         l5184 3256                           l5176 31FE                           l5168 31A6  
                         l5096 2FD0                           l5088 2FB8                           l3578 5540  
                         l4474 4B80                           l4466 4B40                           l4490 48F6  
                         l4642 4E44                           l3770 2EE0                           l3762 2E7A  
                         l3754 2E48                           l3746 2E10                           l3738 2DD4  
                         l3690 2C9C                           l3682 2C80                           l3674 2C56  
                         l3666 2C26                           l3922 2BFC                           l3914 2BA8  
                         l3906 2B4C                           l3850 2920                           l3842 28E8  
                         l3834 28A4                           l3826 286E                           l3818 2852  
                         l3498 2608                           l4706 3F78                           l4810 117C  
                         l4802 10BC                           l4482 48A8                           l4650 4E00  
                         l4730 4F6C                           l4722 4F44                           l4458 53C6  
                         l4634 5264                           l4626 51CE                           l3594 3FD0  
                         l3586 3F90                           l3658 43A2                           l4394 2184  
                         l4386 2162                           l4378 2140                           l4298 1CD0  
                         l4570 38D8                           l4562 3886                           l4554 37F4  
                         l4546 3796                           l4538 3760                           l4714 4EA8  
                         l5186 326E                           l5178 3216                           l5194 32CA  
                         l5098 2FD2                           l4468 4B4C                           l4492 491A  
                         l4644 4E58                           l3780 2F42                           l3772 2EEC  
                         l3764 2E88                           l3756 2E56                           l3748 2E22  
                         l3692 2CAC                           l3684 2C86                           l3676 2C66  
                         l3668 2C34                           l3940 47E4                           l3924 2BFE  
                         l3916 2BC2                           l3908 2B76                           l3860 296A  
                         l3852 2938                           l3844 28F4                           l3836 28C4  
                         l3828 287E                           l3932 52BA                           l4708 3F7A  
                         l4820 12AE                           l4812 118C                           l4484 48B4  
                         l4476 4860                           l4652 4E16                           l4660 4D38  
                         l4740 4F86                           l4732 4F76                           l4724 4F48  
                         l4628 5214                           l3596 3FF0                           l3588 3F9E  
                         l4396 2196                           l4388 2166                           l4564 38A6  
                         l4556 3828                           l4572 3908                           l4716 4EC6  
                         l5196 3300                           l5188 3282                           l4654 4D92  
                         l4494 4932                           l4646 4E6E                           l3790 2FA0  
                         l3782 2F58                           l3774 2EFA                           l3766 2EB6  
                         l3758 2E68                           l3694 2CBC                           l3686 2C8C  
                         l3678 2C68                           l3950 485C                           l3942 47F4  
                         l3918 2BDE                           l3926 2C04                           l3870 29C0  
                         l3862 297A                           l3854 2944                           l3846 28FE  
                         l3838 28D4                           l3934 52CA                           l4670 3DF8  
                         l4910 1736                           l4822 132A                           l4814 11C4  
                         l4806 10C8                           l4478 4884                           l4486 48C4  
                         l4662 4D4C                           l4750 4F90                           l4742 4F88  
                         l4734 4F80                           l4726 4F52                           l4638 55A6  
                         l3598 3FF4                           l4398 219A                           l4718 4EE6  
                         l4656 4DA6                           l4496 493E                           l3792 2FA6  
                         l3784 2F72                           l3776 2F24                           l3696 2CCC  
                         l3688 2C9A                           l3944 4822                           l3960 4556  
                         l3928 2C08                           l3880 2A64                           l3872 29DC  
                         l3864 2986                           l3856 2950                           l3848 2914  
                         l4680 3E70                           l4672 3E3E                           l4912 1768  
                         l4816 11D6                           l4824 1382                           l4808 10DC  
                         l4488 48DC                           l4648 4DEC                           l4664 4D64  
                         l4752 4F92                           l4744 4F8A                           l4736 4F82  
                         l4728 4F62                           l4760 3414                           l4576 391A  
                         l4658 4DBE                           l4498 494A                           l3794 2FA8  
                         l3786 2F8E                           l3778 2F28                           l3698 2CCE  
                         l3946 4832                           l3938 47B6                           l3970 45E4  
                         l3962 4566                           l3954 44EA                           l3890 2ABA  
                         l3882 2A72                           l3874 29E8                           l3866 2996  
                         l3858 295E                           l4690 3EF8                           l4682 3E7C  
                         l4674 3E54                           l4666 3DDA                           l4930 18A0  
                         l4914 179A                           l4850 1500                           l4826 13B4  
                         l4834 13F2                           l4818 1252                           l4770 0E5A  
                         l4746 4F8C                           l4738 4F84                           l4762 34A8  
                         l4754 4CDA                           l5298 37B2                           l3788 2F92  
                         l3948 4856                           l3972 45EA                           l3964 4574  
                         l3956 4518                           l3892 2AC8                           l3884 2A90  
                         l3876 2A04                           l3868 29B0                           l4692 3F04  
                         l4684 3EAE                           l4668 3DEA                           l4916 17CC  
                         l4924 1802                           l4860 157C                           l4836 1424  
                         l4844 1462                           l4828 13E6                           l4780 0F28  
                         l4772 0E84                           l4748 4F8E                           l4764 34DC  
                         l4756 3314                           l3980 54AC                           l3966 4586  
                         l3958 4528                           l3894 2ACC                           l3886 2A9A  
                         l3878 2A2E                           l4694 3F12                           l4686 3EB0  
                         l4678 3E68                           l4926 1834                           l4950 192C  
                         l4846 1494                           l4870 1594                           l4838 1456  
                         l4790 0FB6                           l4774 0E90                           l4766 3574  
                         l4758 33E0                           l3990 440E                           l3968 4594  
                         l3896 2ADA                           l3888 2AA8                           l4696 3F30  
                         l4688 3EBC                           l4928 1866                           l4872 15C6  
                         l4848 14C6                           l4792 0FBE                           l4776 0EC0  
                         l4768 35A8                           l4960 559C                           l3976 5486  
                         l3992 4438                           l3984 43E4                           l3898 2B08  
                         l4698 3F32                           l4946 1920                           l4938 18DE  
                         l4890 1684                           l4882 163A                           l4874 15F8  
                         l4866 1588                           l4858 153E                           l4794 1012  
                         l4786 0F32                           l4778 0EF4                           l4962 559E  
                         l4954 5586                           l4970 54D0                           l3978 549C  
                         l3994 443A                           l3986 43FA                           l4884 1678  
                         l4796 1044                           l4788 0F84                           l4964 55A0  
                         l4956 5590                           l4972 54D4                           l3996 444A  
                         l4894 1690                           l4798 104A                           l4990 4A36  
                         l4958 5592                           l4966 54BE                           l3998 444E  
                         l4896 16C2                           l4992 4A38                           l4968 54C2  
                         l4898 16F4                           l4994 4A3A                           l4986 4A22  
                         l4996 4A50                           l4988 4A34                           l4998 4A54  
                  GreenMove@mL 001F                    GreenMove@mR 0021                           STR_1 0E01  
                         STR_2 0E2E                           STR_3 0E50                           STR_6 0E54  
                         u3000 26C6                           u3001 26C2                           u3010 26D8  
                         u3011 26D4                           u3100 27C0                           u3020 26EE  
                         u3101 27BC                           u3021 26EA                           u3110 27DC  
                         u3030 2704                           u3111 27D8                           u3031 2700  
                         u3040 2718                           u3200 4292                           u3120 5386  
                         u4000 3C3C                   _BAUD4CONbits 000EE9                           u3041 2714  
                         u3201 428E                           u3121 5382                           u4001 3C38  
                         u3050 2732                           u3130 3F9E                           u3210 42C4  
                         u4010 3C5E                           u3051 272E                           u3131 3F9A  
                         u3211 42C0                           u4011 3C5A                           u3300 2CAC  
                         u3060 276C                           u4100 5528                           u3140 3FD0  
                         u3220 4302                           u3301 2CA8                           u3061 2768  
                         u4101 5524                           u3141 3FCC                           u3221 42FE  
                         u3310 2CBC                           u3070 277E                           u4110 553E  
                         u3230 432C                           u4030 3CCA                           u3311 2CB8  
                         u3071 277A                           u4111 553A                           u3151 3FFA  
                         u3231 4328                           u4031 3CC6                           u4120 4130  
                         u3400 2E76                           u3320 2CFC                           u3080 278E  
                         u5000 15F8                           u3160 401E                           u3240 435A  
                         u4200 3B46                           u4040 3CEE                           u4121 412C  
                         u3401 2E72                           u3321 2CF8                           u3081 278A  
                         u5001 15F4                           u3161 401A                           u3241 4356  
                         u4201 3B42                           u4025 3C72                           u4130 41FA  
                         u3410 2E88                           u3330 2D3C                           u3090 27AE  
                         u5010 1636                           u3170 4048                           u3250 43A2  
                         u4210 3B64                           u4050 3D0A                           u4026 3C7C  
                         _T2PR 000FBC                           u4131 41F6                           u3411 2E84  
                         u3331 2D38                           u3091 27AA                           u5011 1632  
                         u3171 4044                           u3251 439E                           u4211 3B60  
                         u4051 3D06                           u4027 3C8C                           u3420 2EB6  
                         u3340 2DB2                           u3260 2C34                           u3500 281C  
                         u5100 1834                           u5020 1678                           u3180 4088  
                         u2700 4710                           u4220 3B7E                           u4140 3978  
                         u4060 3D5E                           u4300 1A90                           u3421 2EB2  
                         u3341 2DAE                           u3261 2C30                           u3501 2818  
                         u5101 1830                           u5021 1674                           u3181 4084  
                         u2701 470C                           u4221 3B7A                           u4141 3972  
                         u4045 3CE4                           u4301 1A8C                           u3430 2ECC  
                         u3350 2DD4                           u3270 2C46                           u3510 282C  
                         u5110 1866                           u5030 16C2                           u3190 40D2  
                         u2710 4738                           u4230 3B8E                           u4150 397A  
                         u4070 3D7A                           u4310 1B0A                           u3431 2EC8  
                         u3351 2DD0                           u3271 2C42                           u3511 2828  
                         u5111 1862                           u5031 16BE                           u3191 40CE  
                         u2711 4734                           u4231 3B8A                           u4071 3D76  
                         u4311 1B06                           u3440 2EE0                           u3360 2DFE  
                         u3280 2C56                           u3600 2ADA                           u3520 286C  
                         u2800 2422                           u5120 18A0                           u5040 16F4  
                         u2720 476E                           u4160 398C                           u4080 3DB6  
                         u4400 1D4A                           u4320 1B96                           u4240 195A  
                         u3441 2EDC                           u3361 2DFA                           u3281 2C52  
                         u3601 2AD6                           u3521 2868                           u2801 241E  
                         u5121 189C                           u5041 16F0                           u2721 476A  
                         u4161 3988                           u4081 3DB2                           u4065 3D54  
                         u4401 1D46                           u4321 1B92                           u4241 1956  
                         u3450 2EFA                           u3370 2E22                           u3290 2C9A  
                         u3610 2B08                           u3530 287E                           u2810 2430  
                         u2730 234A                           u5130 18DA                           u5050 1732  
                         u4170 39C8                           u4090 512C                           u4410 1E92  
                         u4330 1BC8                           u4250 19A4                           u3451 2EF6  
                         u3371 2E1E                           u3291 2C96                           u3611 2B04  
                         u3531 287A                           u2811 242C                           u2731 2346  
                         u5131 18D6                           u5051 172E                           u4171 39C4  
                         u4091 5128                           u4411 1E8E                           u4331 1BC4  
                         u4251 19A0                           u3460 2F42                           u3380 2E38  
                         u3700 4856                           u3620 2B1E                           u3540 288E  
                         u2900 256E                           u2820 249E                           u2740 235C  
                         u5140 191C                           u5060 1768                           u4180 39F4  
                         u4500 2184                           u4420 1EF8                           u4340 1C06  
                         u4260 19B4                           u5300 322A                           u3461 2F3E  
                         u3381 2E34                           u3701 4852                           u3621 2B1A  
                         u3541 288A                           u2901 256A                           u2821 249A  
                         u2741 2358                           u5141 1918                           u5061 1764  
                         u4181 39F0                           u4501 2180                           u4421 1EF4  
                         u4341 1C02                           u4261 19B0                           u5301 3226  
                         u3470 2F72                           u3390 2E56                           u3710 4518  
                         u3630 2B32                           u3550 28C4                           u2910 257C  
                         u2830 24B6                           u2750 236C                           u5070 179A  
                         u5150 54EC                           u4190 3A0A                           u4510 2256  
                         u4430 1F40                           u4350 1C92                           u4270 19F2  
                         u5310 3256                           u3471 2F6E                           u3391 2E52  
                         u3711 4514                           u3631 2B2E                           u3551 28C0  
                         u2911 2578                           u2831 24B0                           u2751 2368  
                         u5071 1796                           u5151 54E8                           u4191 3A06  
                         u4511 2252                           u4431 1F3C                           u4351 1C8E  
                         u4271 19EE                           u5311 3252                           u3480 2FA0  
                         u3720 4556                           u3640 2B4C                           u3560 28D4  
                         u2920 259A                           u2840 24B8                           u2760 23AE  
                         u5080 17CC                           u4600 48DC                           u3800 4470  
                         u4520 2272                           u4440 1F50                           u4360 1CC8  
                         u4280 1A04                           u5320 3282                           u5240 3074  
                         u3481 2F9C                           u3721 4552                           u3641 2B48  
                         u3561 28D0                           u2921 2596                           u2761 23AA  
                         u5081 17C8                           u4601 48D8                           u3801 446C  
                         u4521 226E                           u4441 1F4C                           u4361 1CC4  
                         u4281 1A00                           u5321 327E                           u5241 3070  
                         u3730 4574                           u3650 2B94                           u3570 2A4E  
                         u3490 280A                           u2930 25D2                           u2850 24E0  
                         u2770 23C4                           u5090 17FE                           u4610 48F4  
                         u2690 46FE                           u3810 4498                           u4530 22DA  
                         u4450 1FEA                           u4370 1CE0                           u4290 1A7E  
                         u5330 32AE                           u5250 30DA                           u3731 4570  
                         u3651 2B90                           u3491 2806                           u2931 25CE  
                         u2851 24DC                           u2771 23C0                           u5091 17FA  
                         u4611 48F0                           u2691 46FA                           u3811 4494  
                         u4531 22D4                           u4451 1FE6                           u4371 1CDC  
                         u4291 1A7A                           u5331 32AA                           u5251 30D6  
                         u4620 4972                           u3740 4594                           u3660 2BC2  
                         u3580 2AA8                           u2940 2618                           u2860 24FE  
                         u2780 23D6                           u4700 55B6                           u3820 44B8  
                         u3900 462E                           u4540 22DC                           u4460 2038  
                         u4380 1D12                           u5260 3128                           u4621 496E  
                         u3741 4590                           u3661 2BBE                           u3581 2AA4  
                         u2941 2614                           u2861 24FA                           u2781 23D2  
                         u4701 55B2                           u3821 44B4                           u4461 2034  
                         u4381 1D0E                           u5261 3124                           u4630 498A  
                         u3750 45E4                           u3670 2BFC                           u3590 2AC8  
                         u2950 264E                           u2870 251E                           u2790 23E6  
                         u4710 3DEA                           u3830 44C8                           u3910 464C  
                         u4550 22F0                           u4470 20E6                           u4390 1D20  
                         u5270 31A6                           u4631 4986                           u3751 45E0  
                         u3671 2BF8                           u3591 2AC4                           u3575 2A44  
                         u2951 264A                           u2871 251A                           u2791 23E2  
                         u4711 3DE6                           u5407 4D82                           u3831 44C4  
                         u3911 4648                           u4551 22EC                           u4471 20E2  
                         u4391 1D1C                           u5271 31A2                           u3840 4BB4  
                         u4640 4A08                           u3680 47E4                           u2960 265E  
                         u2880 252C                           u4800 3F78                           u4720 3DF8  
                         u4560 53B2                           u3760 549C                           u3920 4674  
                         u4480 2122                           u5280 31D2                           u3841 4BB0  
                         u4641 4A04                           u3681 47E0                           u2961 265A  
                         u2881 2528                           u4801 3F74                           u4721 3DF4  
                         u5417 4E0A                           u4561 53AA                           u3761 5498  
                         u3921 4670                           u3905 4624                           u4481 211E  
                         u5281 31CE                           u3850 4BD2                           u4650 4A20  
                         u3690 4822                           u2970 268A                           u2890 253C  
                         u4730 3E54                           u3770 43FA                           u3930 469E  
                         u4490 2130                           u4810 4EE6                           u5290 31FE  
                         u3851 4BCE                           u4651 4A1C                           u5507 49E6  
                         u3691 481E                           u2971 2686                           u2891 2538  
                         u4731 3E50                           u5427 4E34                           u3771 43F6  
                         u3931 469A                           u4491 212C                           u4811 4EE2  
                         u5291 31FA                           u3860 4BEE                           u4580 4B80  
                         u2980 269A                           u4740 3EAA                           u4900 13B4  
                         u3780 442E                           u4660 366A                           u3861 4BEA  
                         u4581 4B7C                           u2981 2696                           u4741 3EA6  
                         u4901 13B0                           u4821 0E8A                           u5437 48BA  
                         u4661 3666                           u4590 4B98                           u2990 26B6  
                         u4750 3EF4                           u4910 13E6                           u4830 0F84  
                         u3870 4AB8                           u3790 445C                           u3950 46D8  
                         u4670 36BA                           u4591 4B94                           u5447 4E62  
                         u2991 26B2                           u4751 3EF0                           u4911 13E2  
                         u4831 0F80                           u3871 4AB4                           u3791 4458  
                         u3951 46D2                           u4671 36B6                           u5367 3094  
                         u4760 3F12                           u4920 1424                           u4840 1012  
                         u3880 4B0E                           u3960 46DA                           u4680 36DA  
                         u5457 4E8C                           u4761 3F0E                           u4921 1420  
                         u4841 100E                           u3881 4B0A                           u3785 4424  
                         u3945 46B0                           u4681 36D6                           u5377 30FE  
                         u4770 3F22                           u4930 1456                           u4850 1066  
                         u4578 53B4                           u3890 53E4                           u3970 5342  
                         u4690 37F0                           u5467 4950                           u4771 3F1E  
                         u4931 1452                           u4851 1062                           u5387 4F58  
                         u3891 53E0                           u3971 533E                           u4691 37EC  
                         u4780 3F30                           u4940 1494                           u4860 10BC  
                         u3980 4C2C                           u5477 4DB0                           u4781 3F2C  
                         u4941 1490                           u4861 10B8                           u5397 4D56  
                         u3981 4C28                           u4790 3F6A                           u4950 14C6  
                         u4870 10DC                           u3990 3C0E                           u5487 4DDC  
                         u4791 3F66                           u4951 14C2                           u4871 10D8  
                         u4960 1500                           u4880 118C                           u5497 4B5E  
                         u4961 14FC                           u4881 1188                           u4970 153A  
                         u4890 11D6                           u4971 1536                           u4891 11D2  
                         u3995 3C04                           u4980 157C                           u4981 1578  
                         u4990 15C6                           u4991 15C2                  _LightBlueMove 508C  
                         abs@a 0013                           _dbuf 010C                           _labs 4C0E  
                         _main 2FB4                           _dtoa 3948                           _prec 00F1  
                         _vals 017A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 4B24                  ___fpclassifyf 45EE  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 51CE                __end_of_HighISR 000E  
       __end_of_color_read_lum 517E                   ___param_bank 000000                __end_of_RedMove 5448  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 4E44                  ___fltol@sign1 0009                __end_of___aodiv 4114  
                        ?_labs 0001                __end_of___fladd 27F0                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 43E4                __end_of___fldiv 2FB4  
              __end_of___flneg 54BE                __end_of___flmul 2C1A                __end_of___flsub 5300  
              __end_of___fltol 44EA                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 4C0E                          i2l271 000A                   vfpfcnvrt@fmt 0097  
      __end_of_sendCharSerial4 55BC     __end_of_I2C_2_Master_Start 55E6     __end_of_I2C_2_Master_Write 55C8  
                 YellowMove@mL 001F                          _flags 00F5                   YellowMove@mR 0021  
                        _fputc 46EC                          _fputs 5344                          labs@a 0001  
                        pad@fp 0011                          _width 00EF                          _putch 55EA  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 001F                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 4F44  
               ?___fpclassifyf 0001        __end_of_color_read_Blue 526E          _I2C_2_Master_RepStart 55C8  
             __end_of_BlueMove 4CDA                     PinkMove@mL 001F                     PinkMove@mR 0021  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 526E  
              _reverseOneBlock 4D38                   __end_of_labs 4C74                   __end_of_main 3314  
                 __end_of_dtoa 3BC6                   __end_of_stop 4B9A                _colour_rel$2641 0064  
              _colour_rel$2642 0068                         ??_labs 0005                         ??_main 00D1  
                       ??_dtoa 0026               __end_of_PinkMove 503A                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 4F96  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 503A  
             __end_of___xxtofl 3F8C                      ??_RedMove 0023                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                         ___flge 44EA                         ___fleq 47B6  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 5540                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 1936                      ??___lwdiv 000B                         _floorf 3BC6  
                       _memcpy 50DE                         clear_0 5292                         clear_1 529E  
                       clear_2 52AA                         _motorL 0171                         _motorR 0168  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 5300                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001                ??_LightBlueMove 0023  
             __end_of_vfprintf 4EF2                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 48F6  
                   ___flge@ff1 002A                     _YellowMove 4F96                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 52B0        __end_of_reverseOneBlock 4D92                     ___flneg@f1 0001  
     __end_of_color_read_Green 521E         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 55EC  
               __pcstackCOMRAM 0001                  _fullSpeedBack 498C                   __pidataBANK0 55E6  
                __end_of_fputc 47B6                  __end_of_fputs 5388                  __end_of_putch 55EC  
            __end_of_GreenMove 5486                      ?_BlueMove 001F                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14330 0100          __end_of_reverseDetect 4DEC  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 0019                reverseDetect@mR 001B  
                  ?_OrangeMove 001F                      ?_PinkMove 001F              _color_writetoaddr 5566  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 0019                        ?_memcpy 0001            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                     ??_BlueMove 0023  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 001F  
                   _colour_rel 3314        __end_of_Interrupts_init 55EE         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 01E6                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 0019      __end_of_color_writetoaddr 5586  
                      _RedMove 540A             _I2C_2_Master_Start 55DC                     ??_PinkMove 0023  
                   _initUSART4 5586             _I2C_2_Master_Write 55BC                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
            reverseOneBlock@mL 0019              reverseOneBlock@mR 001B                        ___aodiv 3F8C  
                      ___fladd 2330                        ___aomod 4280                        ___fldiv 2C1A  
                      ___flneg 5486                        ___flmul 27F0                        ___flsub 52BA  
                      ___fltol 43E4            ?_I2C_2_Master_Start 0001                        ___lwdiv 4B9A  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 0019                   turnLeft45@mR 001B                        __pcinit 526E  
                      __ramtop 0E00                      ?_turnLeft 0014                        __ptext0 2FB4  
                      __ptext1 4EF2                        __ptext2 4E9C                        __ptext3 3642  
                      __ptext4 1936                        __ptext5 5300                        __ptext6 50DE  
                      __ptext7 4C0E                        __ptext8 3BC6                        __ptext9 45EE  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F9  
            color_read_lum@tmp 000A                        main@buf 0182                        _sprintf 4EF2  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 52B0  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                LightBlueMove@mL 001F                LightBlueMove@mR 0021  
              ??_fullSpeedBack 0018             ??_color_click_init 0005              __end_of_vfpfcnvrt 3948  
                   efgtoa@mode 0072                     efgtoa@sign 008A                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 4A22                     ??_turnLeft 0018  
           setMotorPWM@negDuty 0013              __end_of_turnRight 498C                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 01E8                   _EUSART4RXbuf 00D3  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 001F                      RedMove@mR 0021  
           ??_color_read_Green 0007                     _turnLeft45 4DEC                 __end_of___flge 45EE  
               __end_of___fleq 4860                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 5566                 __end_of_efgtoa 2330  
               __end_of_floorf 3DD8                 __end_of_memcpy 512E                     floorf@F526 00E7  
                    _GreenMove 5448                 __end_of_strcpy 5344            start_initialization 526E  
                  __end_of_abs 540A                    __end_of_pad 4B24                  _TxBufWriteCnt 00F7  
        __end_of_LightBlueMove 50DE                   ??_OrangeMove 0023          __end_of___fpclassifyf 46EC  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4AAA                    vfprintf@fmt 00AA  
                     ??___flge 0032                       ??___fleq 003A                       ??___wmul 0005  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00FA  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 001F                   OrangeMove@mL 001F  
                 OrangeMove@mR 0021             __end_of_OrangeMove 508C                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 0182               ___aodiv@dividend 0001  
                 ??_YellowMove 0023                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 001F                    _efgtoa$2278 006F               ___lwdiv@dividend 0007  
                    _dtoa$2247 002E                    ?_turnLeft45 0019                      __pintcode 0008  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2643 0060                       ?___lwdiv 0007           I2C_2_Master_Read@ack 0003  
           __end_of_YellowMove 4FE8           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
          __end_of_readColours 4D38              _I2C_2_Master_Idle 5518              _I2C_2_Master_Init 54EE  
            _I2C_2_Master_Read 5388              _I2C_2_Master_Stop 55D2                  _low_threshold 00F3  
                 _RxBufReadCnt 00F8             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
               colour_rel@vals 004B              _sendStringSerial4 54BE            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D                    turnRight@mL 0014                    turnRight@mR 0016  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E5A            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 3642      __end_of_I2C_2_Master_Idle 5540  
    __end_of_I2C_2_Master_Init 5518      __end_of_I2C_2_Master_Read 53CA              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 55DC                   setMotorPWM@m 000E                       _DataFlag 00FC  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0023              ??_color_read_Blue 0007  
                 _TxBufReadCnt 00F6                       _BlueMove 4C74                      _turnRight 48F6  
                   vfpfcnvrt@c 00A5      __end_of_sendStringSerial4 54EE                   ??_colour_rel 004F  
                _reverseDetect 4D92  __end_of_I2C_2_Master_RepStart 55D2             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 4280                   ??_initUSART4 0001                       _PinkMove 4FE8  
                     __Hrparam 0000         __end_of_Colour_decider 1936                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 4A22                    _readColours 4CDA                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 3642  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00EB                     sprintf@fmt 00B2  
                     ___xxtofl 3DD8                ___lwdiv@divisor 0009             __end_of_initUSART4 55A4  
              ___lwdiv@counter 000D                     ?_turnRight 0014                       __ptext10 43E4  
                     __ptext11 5486                       __ptext20 54BE                       __ptext12 3948  
                     __ptext21 55A4                       __ptext13 4AAA                       __ptext30 4A22  
                     __ptext22 4CDA                       __ptext14 5344                       __ptext31 3314  
                     __ptext23 512E                       __ptext15 46EC                       __ptext40 540A  
                     __ptext32 4F44                       __ptext24 517E                       __ptext16 55EA  
                     __ptext41 4FE8                       __ptext33 5566                       __ptext25 51CE  
                     __ptext17 53CA                       __ptext50 3DD8                       __ptext42 4D38  
                     __ptext34 55BC                       __ptext26 521E                       __ptext18 4280  
                     __ptext51 52BA                       __ptext43 503A                       __ptext35 55D2  
                     __ptext27 55C8                       __ptext19 3F8C                       __ptext60 4D92  
                     __ptext52 2330                       __ptext44 508C                       __ptext36 55DC  
                     __ptext28 5388                       __ptext61 4B24                       __ptext53 27F0  
                     __ptext45 55EC                       __ptext37 5518                       __ptext29 5586  
                     __ptext62 498C                       __ptext54 44EA                       __ptext46 5448  
                     __ptext38 54EE                       __ptext63 4114                       __ptext55 47B6  
                     __ptext47 4DEC                       __ptext39 4F96                       __ptext64 5540  
                     __ptext56 2C1A                       __ptext48 4860                       __ptext65 4B9A  
                     __ptext57 4C74                       __ptext49 0E5A                       __ptext58 4E44  
                     __ptext59 48F6                 ?_reverseDetect 0019                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016                ?_Colour_decider 004B                       efgtoa@fp 0060  
                     efgtoa@ne 0069                       efgtoa@pp 0071                       efgtoa@ou 007C  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005F  
                     _vfprintf 4E9C                  ??_turnRight45 001D                       _turnLeft 4860  
             ___aomod@dividend 0001              ??_reverseOneBlock 001D                main@prev_colour 01EA  
                     memcpy@d1 0001                       memcpy@s1 0003                    _setMotorPWM 4114  
                turnRight45@mL 0019                  turnRight45@mR 001B                       intlevel2 0000  
                    sprintf@ap 00C4                 _high_threshold 00FA                      strcpy@src 0003  
                 ??_turnLeft45 001D                     BlueMove@mL 001F                     BlueMove@mR 0021  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 4F44                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 4E9C                ??_reverseDetect 001D                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 4E44                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 55A4                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
