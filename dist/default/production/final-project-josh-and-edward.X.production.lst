

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 14:51:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94   000000                     
    95                           ; Generated 06/04/2022 GMT
    96                           ; 
    97                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129   000000                     
   130                           	psect	idataBANK0
   131   004EA2                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _Turn45Delay
   135   004EA2  00DC               	dw	220
   136                           
   137                           ;initializer for _DataFlag
   138   004EA4  01                 	db	1
   139                           
   140                           	psect	idataBANK1
   141   004E9C                     __pidataBANK1:
   142                           	callstack 0
   143                           
   144                           ;initializer for _high_threshold
   145   004E9C  03E8               	dw	1000
   146                           
   147                           ;initializer for _RunOneBlockTime
   148   004E9E  07D0               	dw	2000
   149                           
   150                           ;initializer for _power
   151   004EA0  001E               	dw	30
   152   000000                     _TRISEbits	set	3973
   153   000000                     _LATHbits	set	3968
   154   000000                     _TX4REG	set	3812
   155   000000                     _RC4STAbits	set	3815
   156   000000                     _SP4BRGH	set	3814
   157   000000                     _SSP2CON2bits	set	3802
   158   000000                     _RX4PPS	set	3605
   159   000000                     _SSP2CLKPPS	set	3612
   160   000000                     _SSP2DATPPS	set	3613
   161   000000                     _ANSELDbits	set	3751
   162   000000                     _SSP2ADD	set	3798
   163   000000                     _SSP2CON1bits	set	3801
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATFbits	set	3966
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISAbits	set	3969
   168   000000                     _TRISGbits	set	3975
   169   000000                     _PORTFbits	set	3982
   170   000000                     _TRISHbits	set	3976
   171   000000                     _CCPR2H	set	4006
   172   000000                     _CCPR1H	set	4010
   173   000000                     _TRISCbits	set	3971
   174   000000                     _TRISDbits	set	3972
   175   000000                     _TRISFbits	set	3974
   176   000000                     _LATDbits	set	3964
   177   000000                     _RC4REG	set	3811
   178   000000                     _SP4BRGL	set	3813
   179   000000                     _TX4STAbits	set	3816
   180   000000                     _BAUD4CONbits	set	3817
   181   000000                     _SSP2CON2	set	3802
   182   000000                     _SSP2STAT	set	3800
   183   000000                     _ANSELFbits	set	3764
   184   000000                     _SSP2BUF	set	3797
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR4bits	set	3639
   187   000000                     _RC0PPS	set	3682
   188   000000                     _RD5PPS	set	3695
   189   000000                     _RE2PPS	set	3700
   190   000000                     _RD6PPS	set	3696
   191   000000                     _RC7PPS	set	3689
   192   000000                     _CCPR4H	set	3873
   193   000000                     _CCPR3H	set	3877
   194   000000                     _CCP1CONbits	set	4011
   195   000000                     _CCPTMRS0bits	set	4013
   196   000000                     _T2PR	set	4028
   197   000000                     _T2CONbits	set	4029
   198   000000                     _TMR0L	set	4051
   199   000000                     _TMR0H	set	4052
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _T0CON1bits	set	4054
   204   000000                     _T0CON0bits	set	4053
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _T2CLKCONbits	set	4031
   208   000000                     _T2HLTbits	set	4030
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  64                 	db	100	;'d'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  64                 	db	100	;'d'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  64                 	db	100	;'d'
   238   000E18  20                 	db	32
   239   000E19  74                 	db	116	;'t'
   240   000E1A  69                 	db	105	;'i'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  65                 	db	101	;'e'
   243   000E1D  72                 	db	114	;'r'
   244   000E1E  3D                 	db	61	;'='
   245   000E1F  25                 	db	37
   246   000E20  64                 	db	100	;'d'
   247   000E21  20                 	db	32
   248   000E22  0D                 	db	13
   249   000E23  0A                 	db	10
   250   000E24  00                 	db	0
   251   000E25  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   004310                     __pcinit:
   257                           	callstack 0
   258   004310                     start_initialization:
   259                           	callstack 0
   260   004310                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK1 (6 bytes)
   264                           ; load TBLPTR registers with __pidataBANK1
   265   004310  0E9C               	movlw	low __pidataBANK1
   266   004312  6EF6               	movwf	tblptrl,c
   267   004314  0E4E               	movlw	high __pidataBANK1
   268   004316  6EF7               	movwf	tblptrh,c
   269   004318  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   270   00431A  6EF8               	movwf	tblptru,c
   271   00431C  EE01  F0D1         	lfsr	0,__pdataBANK1
   272   004320  EE10 F006          	lfsr	1,6
   273   004324                     copy_data0:
   274   004324  0009               	tblrd		*+
   275   004326  CFF5 FFEE          	movff	tablat,postinc0
   276   00432A  50E5               	movf	postdec1,w,c
   277   00432C  50E1               	movf	fsr1l,w,c
   278   00432E  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to BANK0 (3 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   004330  0EA2               	movlw	low __pidataBANK0
   283   004332  6EF6               	movwf	tblptrl,c
   284   004334  0E4E               	movlw	high __pidataBANK0
   285   004336  6EF7               	movwf	tblptrh,c
   286   004338  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   00433A  6EF8               	movwf	tblptru,c
   288   00433C  0009               	tblrd		*+	;fetch initializer
   289   00433E  CFF5 F0FC          	movff	tablat,__pdataBANK0
   290   004342  0009               	tblrd		*+	;fetch initializer
   291   004344  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   292   004348  0009               	tblrd		*+	;fetch initializer
   293   00434A  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   294                           
   295                           ; Clear objects allocated to BANK2 (100 bytes)
   296   00434E  EE02  F000         	lfsr	0,__pbssBANK2
   297   004352  0E64               	movlw	100
   298   004354                     clear_0:
   299   004354  6AEE               	clrf	postinc0,c
   300   004356  06E8               	decf	wreg,f,c
   301   004358  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK1 (209 bytes)
   304   00435A  EE01  F000         	lfsr	0,__pbssBANK1
   305   00435E  0ED1               	movlw	209
   306   004360                     clear_1:
   307   004360  6AEE               	clrf	postinc0,c
   308   004362  06E8               	decf	wreg,f,c
   309   004364  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to BANK0 (12 bytes)
   312   004366  EE00  F0F0         	lfsr	0,__pbssBANK0
   313   00436A  0E0C               	movlw	12
   314   00436C                     clear_2:
   315   00436C  6AEE               	clrf	postinc0,c
   316   00436E  06E8               	decf	wreg,f,c
   317   004370  E1FD               	bnz	clear_2
   318                           
   319                           ; Clear objects allocated to COMRAM (4 bytes)
   320   004372  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   321   004374  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   322   004376  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   323   004378  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   324   00437A                     end_of_initialization:
   325                           	callstack 0
   326   00437A                     __end_of__initialization:
   327                           	callstack 0
   328   00437A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329   00437C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330   00437E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   331   004380  6EF8               	movwf	tblptru,c
   332   004382  0E0E               	movlw	high __Lsmallconst
   333   004384  6EF7               	movwf	tblptrh,c
   334   004386  0100               	movlb	0
   335   004388  EF81  F00C         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00005B                     __pbssCOMRAM:
   339                           	callstack 0
   340   00005B                     _TxBufReadCnt:
   341                           	callstack 0
   342   00005B                     	ds	1
   343   00005C                     _TxBufWriteCnt:
   344                           	callstack 0
   345   00005C                     	ds	1
   346   00005D                     _RxBufReadCnt:
   347                           	callstack 0
   348   00005D                     	ds	1
   349   00005E                     _RxBufWriteCnt:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000F0                     __pbssBANK0:
   355                           	callstack 0
   356   0000F0                     _move_count:
   357                           	callstack 0
   358   0000F0                     	ds	2
   359   0000F2                     _flags:
   360                           	callstack 0
   361   0000F2                     	ds	1
   362   0000F3                     _motorL:
   363                           	callstack 0
   364   0000F3                     	ds	9
   365                           
   366                           	psect	dataBANK0
   367   0000FC                     __pdataBANK0:
   368                           	callstack 0
   369   0000FC                     _Turn45Delay:
   370                           	callstack 0
   371   0000FC                     	ds	2
   372   0000FE                     _DataFlag:
   373                           	callstack 0
   374   0000FE                     	ds	1
   375                           
   376                           	psect	bssBANK1
   377   000100                     __pbssBANK1:
   378                           	callstack 0
   379   000100                     _EUSART4TXbuf:
   380                           	callstack 0
   381   000100                     	ds	60
   382   00013C                     _EUSART4RXbuf:
   383                           	callstack 0
   384   00013C                     	ds	20
   385   000150                     	ds	12
   386   00015C                     _width:
   387                           	callstack 0
   388   00015C                     	ds	2
   389   00015E                     _prec:
   390                           	callstack 0
   391   00015E                     	ds	2
   392   000160                     _low_threshold:
   393                           	callstack 0
   394   000160                     	ds	2
   395   000162                     _WayBack:
   396                           	callstack 0
   397   000162                     	ds	50
   398   000194                     _dbuf:
   399                           	callstack 0
   400   000194                     	ds	32
   401   0001B4                     _rel:
   402                           	callstack 0
   403   0001B4                     	ds	12
   404   0001C0                     _motorR:
   405                           	callstack 0
   406   0001C0                     	ds	9
   407   0001C9                     _vals:
   408                           	callstack 0
   409   0001C9                     	ds	8
   410                           
   411                           	psect	dataBANK1
   412   0001D1                     __pdataBANK1:
   413                           	callstack 0
   414   0001D1                     _high_threshold:
   415                           	callstack 0
   416   0001D1                     	ds	2
   417   0001D3                     _RunOneBlockTime:
   418                           	callstack 0
   419   0001D3                     	ds	2
   420   0001D5                     _power:
   421                           	callstack 0
   422   0001D5                     	ds	2
   423                           
   424                           	psect	bssBANK2
   425   000200                     __pbssBANK2:
   426                           	callstack 0
   427   000200                     _Time_forward:
   428                           	callstack 0
   429   000200                     	ds	100
   430                           
   431                           	psect	cstackBANK0
   432   000060                     __pcstackBANK0:
   433                           	callstack 0
   434   000060                     ?_sprintf:
   435                           	callstack 0
   436   000060                     sprintf@s:
   437                           	callstack 0
   438   000060                     _Colour_decider$3049:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x0
   442   000060                     	ds	2
   443   000062                     sprintf@fmt:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447   000062                     	ds	2
   448   000064                     Colour_decider@Cmax_i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4
   452   000064                     	ds	2
   453   000066                     Colour_decider@RGB_col:
   454                           	callstack 0
   455                           
   456                           ; 12 bytes @ 0x6
   457   000066                     	ds	6
   458   00006C                     sprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xC
   462   00006C                     	ds	2
   463   00006E                     sprintf@f:
   464                           	callstack 0
   465                           
   466                           ; 11 bytes @ 0xE
   467   00006E                     	ds	4
   468   000072                     Colour_decider@Cmax:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x12
   472   000072                     	ds	4
   473   000076                     Colour_decider@Cmin:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x16
   477   000076                     	ds	4
   478   00007A                     Colour_decider@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1A
   482   00007A                     	ds	2
   483   00007C                     Colour_decider@Hue:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x1C
   487   00007C                     	ds	4
   488   000080                     main@buf:
   489                           	callstack 0
   490                           
   491                           ; 100 bytes @ 0x20
   492   000080                     	ds	100
   493   0000E4                     main@temp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x84
   497   0000E4                     	ds	2
   498   0000E6                     main@temp_1304:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x86
   502   0000E6                     	ds	2
   503   0000E8                     main@run_flag:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x88
   507   0000E8                     	ds	2
   508   0000EA                     main@consecuitive:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x8A
   512   0000EA                     	ds	2
   513   0000EC                     main@colour:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x8C
   517   0000EC                     	ds	2
   518   0000EE                     main@prev_colour:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x8E
   522   0000EE                     	ds	2
   523                           
   524                           	psect	cstackCOMRAM
   525   000001                     __pcstackCOMRAM:
   526                           	callstack 0
   527   000001                     ??_I2C_2_Master_Idle:
   528   000001                     ?___wmul:
   529                           	callstack 0
   530   000001                     ?___fladd:
   531                           	callstack 0
   532   000001                     ?___xxtofl:
   533                           	callstack 0
   534   000001                     ?___aodiv:
   535                           	callstack 0
   536   000001                     ?___aomod:
   537                           	callstack 0
   538   000001                     sendCharSerial4@charToSend:
   539                           	callstack 0
   540   000001                     initDCmotorsPWM@PWMperiod:
   541                           	callstack 0
   542   000001                     TurnDelay@Turn45Delay:
   543                           	callstack 0
   544   000001                     getTMR0val@moving:
   545                           	callstack 0
   546   000001                     delayed_ms@time:
   547                           	callstack 0
   548   000001                     ___wmul@multiplier:
   549                           	callstack 0
   550   000001                     fputc@c:
   551                           	callstack 0
   552   000001                     ___flge@ff1:
   553                           	callstack 0
   554   000001                     ___fladd@b:
   555                           	callstack 0
   556   000001                     ___xxtofl@val:
   557                           	callstack 0
   558   000001                     ___aodiv@dividend:
   559                           	callstack 0
   560   000001                     ___aomod@dividend:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x0
   564   000001                     	ds	1
   565   000002                     ??_I2C_2_Master_Read:
   566   000002                     I2C_2_Master_Write@data_byte:
   567                           	callstack 0
   568   000002                     sendStringSerial4@string:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1
   572   000002                     	ds	1
   573   000003                     ??_delayed_ms:
   574   000003                     ??_TurnDelay:
   575   000003                     color_writetoaddr@value:
   576                           	callstack 0
   577   000003                     I2C_2_Master_Read@ack:
   578                           	callstack 0
   579   000003                     ___wmul@multiplicand:
   580                           	callstack 0
   581   000003                     fputc@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585   000003                     	ds	1
   586   000004                     color_writetoaddr@address:
   587                           	callstack 0
   588   000004                     I2C_2_Master_Read@tmp:
   589                           	callstack 0
   590   000004                     delayed_ms@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x3
   594   000004                     	ds	1
   595   000005                     ??_fputc:
   596   000005                     ??_color_click_init:
   597   000005                     ??___xxtofl:
   598   000005                     ?_color_read_lum:
   599                           	callstack 0
   600   000005                     ?_color_read_Red:
   601                           	callstack 0
   602   000005                     ?_color_read_Green:
   603                           	callstack 0
   604   000005                     ?_color_read_Blue:
   605                           	callstack 0
   606   000005                     ___wmul@product:
   607                           	callstack 0
   608   000005                     ___flge@ff2:
   609                           	callstack 0
   610   000005                     ___fladd@a:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614   000005                     	ds	2
   615   000007                     ??_color_read_lum:
   616   000007                     ??_color_read_Red:
   617   000007                     ??_color_read_Green:
   618   000007                     ??_color_read_Blue:
   619   000007                     ?___lwdiv:
   620                           	callstack 0
   621   000007                     ___lwdiv@dividend:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x6
   625   000007                     	ds	2
   626   000009                     ??___fladd:
   627   000009                     ??___flge:
   628   000009                     ___xxtofl@sign:
   629                           	callstack 0
   630   000009                     ___lwdiv@divisor:
   631                           	callstack 0
   632   000009                     ___aodiv@divisor:
   633                           	callstack 0
   634   000009                     ___aomod@divisor:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x8
   638   000009                     	ds	1
   639   00000A                     ___xxtofl@exp:
   640                           	callstack 0
   641   00000A                     color_read_lum@tmp:
   642                           	callstack 0
   643   00000A                     color_read_Red@tmp:
   644                           	callstack 0
   645   00000A                     color_read_Green@tmp:
   646                           	callstack 0
   647   00000A                     color_read_Blue@tmp:
   648                           	callstack 0
   649   00000A                     fputs@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x9
   653   00000A                     	ds	1
   654   00000B                     ___lwdiv@quotient:
   655                           	callstack 0
   656   00000B                     ___xxtofl@arg:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0xA
   660   00000B                     	ds	1
   661   00000C                     readColours@vals:
   662                           	callstack 0
   663   00000C                     fputs@fp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0xB
   667   00000C                     	ds	1
   668   00000D                     ___lwdiv@counter:
   669                           	callstack 0
   670   00000D                     ___fladd@signs:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0xC
   674   00000D                     	ds	1
   675   00000E                     ___fladd@aexp:
   676                           	callstack 0
   677   00000E                     fputs@c:
   678                           	callstack 0
   679   00000E                     setMotorPWM@m:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683   00000E                     	ds	1
   684   00000F                     ___fladd@bexp:
   685                           	callstack 0
   686   00000F                     fputs@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690   00000F                     	ds	1
   691   000010                     ??_setMotorPWM:
   692   000010                     ___fladd@grs:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0xF
   696   000010                     	ds	1
   697   000011                     ?___flsub:
   698                           	callstack 0
   699   000011                     ___aodiv@counter:
   700                           	callstack 0
   701   000011                     ___aomod@counter:
   702                           	callstack 0
   703   000011                     pad@fp:
   704                           	callstack 0
   705   000011                     ___flsub@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x10
   709   000011                     	ds	1
   710   000012                     setMotorPWM@posDuty:
   711                           	callstack 0
   712   000012                     ___aodiv@sign:
   713                           	callstack 0
   714   000012                     ___aomod@sign:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x11
   718   000012                     	ds	1
   719   000013                     ?_abs:
   720                           	callstack 0
   721   000013                     setMotorPWM@negDuty:
   722                           	callstack 0
   723   000013                     pad@buf:
   724                           	callstack 0
   725   000013                     abs@a:
   726                           	callstack 0
   727   000013                     ___aodiv@quotient:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x12
   731   000013                     	ds	1
   732   000014                     stop@mL:
   733                           	callstack 0
   734   000014                     turnLeft@mL:
   735                           	callstack 0
   736   000014                     turnRight@mL:
   737                           	callstack 0
   738   000014                     fullSpeedAhead@mL:
   739                           	callstack 0
   740   000014                     timed_forward@mL:
   741                           	callstack 0
   742   000014                     fullSpeedBack@mL:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x13
   746   000014                     	ds	1
   747   000015                     ??_abs:
   748   000015                     pad@p:
   749                           	callstack 0
   750   000015                     ___flsub@a:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x14
   754   000015                     	ds	1
   755   000016                     stop@mR:
   756                           	callstack 0
   757   000016                     turnLeft@mR:
   758                           	callstack 0
   759   000016                     turnRight@mR:
   760                           	callstack 0
   761   000016                     fullSpeedAhead@mR:
   762                           	callstack 0
   763   000016                     timed_forward@mR:
   764                           	callstack 0
   765   000016                     fullSpeedBack@mR:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x15
   769   000016                     	ds	1
   770   000017                     ??_pad:
   771                           
   772                           ; 1 bytes @ 0x16
   773   000017                     	ds	1
   774   000018                     ??_fullSpeedAhead:
   775   000018                     ??_stop:
   776   000018                     ??_turnLeft:
   777   000018                     ??_turnRight:
   778   000018                     ??_fullSpeedBack:
   779   000018                     timed_forward@time:
   780                           	callstack 0
   781   000018                     pad@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785   000018                     	ds	1
   786   000019                     ?___fldiv:
   787                           	callstack 0
   788   000019                     ___fleq@ff1:
   789                           	callstack 0
   790   000019                     ___fldiv@b:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794   000019                     	ds	1
   795   00001A                     ??_timed_forward:
   796   00001A                     turnRight45@mL:
   797                           	callstack 0
   798   00001A                     turnLeft45@mL:
   799                           	callstack 0
   800   00001A                     reverseDetect@mL:
   801                           	callstack 0
   802   00001A                     reverseOneBlock@mL:
   803                           	callstack 0
   804   00001A                     ForwardOneBlock@mL:
   805                           	callstack 0
   806   00001A                     Forwardhalfblock@mL:
   807                           	callstack 0
   808   00001A                     RetryMove@mL:
   809                           	callstack 0
   810   00001A                     pad@w:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x19
   814   00001A                     	ds	2
   815   00001C                     turnRight45@mR:
   816                           	callstack 0
   817   00001C                     turnLeft45@mR:
   818                           	callstack 0
   819   00001C                     reverseDetect@mR:
   820                           	callstack 0
   821   00001C                     reverseOneBlock@mR:
   822                           	callstack 0
   823   00001C                     ForwardOneBlock@mR:
   824                           	callstack 0
   825   00001C                     Forwardhalfblock@mR:
   826                           	callstack 0
   827   00001C                     RetryMove@mR:
   828                           	callstack 0
   829   00001C                     dtoa@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1B
   833   00001C                     	ds	1
   834   00001D                     ___fleq@ff2:
   835                           	callstack 0
   836   00001D                     ___fldiv@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x1C
   840   00001D                     	ds	1
   841   00001E                     ??_Forwardhalfblock:
   842   00001E                     ??_RetryMove:
   843   00001E                     ??_turnRight45:
   844   00001E                     ??_turnLeft45:
   845   00001E                     ??_reverseDetect:
   846   00001E                     ??_reverseOneBlock:
   847   00001E                     ??_ForwardOneBlock:
   848   00001E                     dtoa@d:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x1D
   852   00001E                     	ds	2
   853   000020                     RedMove@mL:
   854                           	callstack 0
   855   000020                     GreenMove@mL:
   856                           	callstack 0
   857   000020                     BlueMove@mL:
   858                           	callstack 0
   859   000020                     YellowMove@mL:
   860                           	callstack 0
   861   000020                     PinkMove@mL:
   862                           	callstack 0
   863   000020                     OrangeMove@mL:
   864                           	callstack 0
   865   000020                     LightBlueMove@mL:
   866                           	callstack 0
   867   000020                     ReverseYellow@mL:
   868                           	callstack 0
   869   000020                     ReversePink@mL:
   870                           	callstack 0
   871   000020                     turnCalibration@mL:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x1F
   875   000020                     	ds	1
   876   000021                     ??___fldiv:
   877   000021                     ??___fleq:
   878                           
   879                           ; 1 bytes @ 0x20
   880   000021                     	ds	1
   881   000022                     RedMove@mR:
   882                           	callstack 0
   883   000022                     GreenMove@mR:
   884                           	callstack 0
   885   000022                     BlueMove@mR:
   886                           	callstack 0
   887   000022                     YellowMove@mR:
   888                           	callstack 0
   889   000022                     PinkMove@mR:
   890                           	callstack 0
   891   000022                     OrangeMove@mR:
   892                           	callstack 0
   893   000022                     LightBlueMove@mR:
   894                           	callstack 0
   895   000022                     ReverseYellow@mR:
   896                           	callstack 0
   897   000022                     ReversePink@mR:
   898                           	callstack 0
   899   000022                     turnCalibration@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x21
   903   000022                     	ds	2
   904   000024                     ??_turnCalibration:
   905   000024                     go_Home@WayBack:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x23
   909   000024                     	ds	1
   910   000025                     ___fldiv@rem:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x24
   914   000025                     	ds	1
   915   000026                     ??_dtoa:
   916   000026                     go_Home@Time_forward:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x25
   920   000026                     	ds	2
   921   000028                     ??_go_Home:
   922                           
   923                           ; 1 bytes @ 0x27
   924   000028                     	ds	1
   925   000029                     ___fldiv@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x28
   929   000029                     	ds	1
   930   00002A                     ___fldiv@new_exp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x29
   934   00002A                     	ds	1
   935   00002B                     go_Home@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x2A
   939   00002B                     	ds	1
   940   00002C                     ___fldiv@grs:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x2B
   944   00002C                     	ds	2
   945   00002E                     _dtoa$2723:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x2D
   949   00002E                     	ds	2
   950   000030                     ___fldiv@bexp:
   951                           	callstack 0
   952   000030                     dtoa@p:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2F
   956   000030                     	ds	1
   957   000031                     ___fldiv@aexp:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x30
   961   000031                     	ds	1
   962   000032                     ?___flmul:
   963                           	callstack 0
   964   000032                     colour_rel@vals:
   965                           	callstack 0
   966   000032                     dtoa@w:
   967                           	callstack 0
   968   000032                     ___flmul@b:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x31
   972   000032                     	ds	2
   973   000034                     colour_rel@rel:
   974                           	callstack 0
   975   000034                     dtoa@n:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x33
   979   000034                     	ds	2
   980   000036                     colour_rel@L:
   981                           	callstack 0
   982   000036                     ___flmul@a:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x35
   986   000036                     	ds	4
   987   00003A                     ??___flmul:
   988   00003A                     _colour_rel$3047:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x39
   992   00003A                     	ds	2
   993   00003C                     dtoa@i:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x3B
   997   00003C                     	ds	2
   998   00003E                     ___flmul@sign:
   999                           	callstack 0
  1000   00003E                     dtoa@s:
  1001                           	callstack 0
  1002   00003E                     _colour_rel$3048:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3D
  1006   00003E                     	ds	1
  1007   00003F                     vfpfcnvrt@fp:
  1008                           	callstack 0
  1009   00003F                     ___flmul@grs:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x3E
  1013   00003F                     	ds	2
  1014   000041                     vfpfcnvrt@fmt:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x40
  1018   000041                     	ds	1
  1019   000042                     colour_rel@R:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x41
  1023   000042                     	ds	1
  1024   000043                     ___flmul@aexp:
  1025                           	callstack 0
  1026   000043                     vfpfcnvrt@ap:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x42
  1030   000043                     	ds	1
  1031   000044                     ___flmul@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x43
  1035   000044                     	ds	1
  1036   000045                     ??_vfpfcnvrt:
  1037   000045                     ___flmul@prod:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x44
  1041   000045                     	ds	1
  1042   000046                     colour_rel@G:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x45
  1046   000046                     	ds	1
  1047   000047                     vfpfcnvrt@convarg:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x46
  1051   000047                     	ds	2
  1052   000049                     ___flmul@temp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x48
  1056   000049                     	ds	1
  1057   00004A                     colour_rel@B:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x49
  1061   00004A                     	ds	1
  1062   00004B                     ?_Colour_decider:
  1063                           	callstack 0
  1064   00004B                     Colour_decider@vals:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x4A
  1068   00004B                     	ds	2
  1069   00004D                     Colour_decider@rel:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x4C
  1073   00004D                     	ds	2
  1074   00004F                     ??_Colour_decider:
  1075   00004F                     vfpfcnvrt@cp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x4E
  1079   00004F                     	ds	2
  1080   000051                     ?_vfprintf:
  1081                           	callstack 0
  1082   000051                     vfprintf@fp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x50
  1086   000051                     	ds	2
  1087   000053                     vfprintf@fmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x52
  1091   000053                     	ds	2
  1092   000055                     vfprintf@ap:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x54
  1096   000055                     	ds	2
  1097   000057                     vfprintf@cfmt:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x56
  1101   000057                     	ds	2
  1102   000059                     ??_main:
  1103                           
  1104                           ; 1 bytes @ 0x58
  1105   000059                     	ds	2
  1106                           
  1107 ;;
  1108 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1109 ;;
  1110 ;; *************** function _main *****************
  1111 ;; Defined at:
  1112 ;;		line 30 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  colour          2  140[BANK0 ] int 
  1117 ;;  temp            2  134[BANK0 ] int 
  1118 ;;  temp            2  132[BANK0 ] int 
  1119 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1120 ;;  prev_colour     2  142[BANK0 ] int 
  1121 ;;  consecuitive    2  138[BANK0 ] int 
  1122 ;;  run_flag        2  136[BANK0 ] int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:      114 bytes
  1137 ;; Hardware stack levels required when called: 9
  1138 ;; This function calls:
  1139 ;;		_BlueMove
  1140 ;;		_Colour_decider
  1141 ;;		_Forwardhalfblock
  1142 ;;		_GreenMove
  1143 ;;		_I2C_2_Master_Init
  1144 ;;		_Interrupts_init
  1145 ;;		_LightBlueMove
  1146 ;;		_OrangeMove
  1147 ;;		_PinkMove
  1148 ;;		_RedMove
  1149 ;;		_RetryMove
  1150 ;;		_Timer0_init
  1151 ;;		_YellowMove
  1152 ;;		_color_click_init
  1153 ;;		_colour_rel
  1154 ;;		_fullSpeedAhead
  1155 ;;		_getTMR0val
  1156 ;;		_go_Home
  1157 ;;		_initDCmotorsPWM
  1158 ;;		_initUSART4
  1159 ;;		_readColours
  1160 ;;		_sendStringSerial4
  1161 ;;		_sprintf
  1162 ;;		_stop
  1163 ;;		_turnCalibration
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text0
  1170   001902                     __ptext0:
  1171                           	callstack 0
  1172   001902                     _main:
  1173                           	callstack 22
  1174   001902                     
  1175                           ;main.c: 31:     initUSART4();
  1176   001902  EC1E  F027         	call	_initUSART4	;wreg free
  1177   001906                     
  1178                           ;main.c: 32:     Interrupts_init();
  1179   001906  EC54  F027         	call	_Interrupts_init	;wreg free
  1180   00190A                     
  1181                           ;main.c: 33:     color_click_init();
  1182   00190A  ECCE  F023         	call	_color_click_init	;wreg free
  1183   00190E                     
  1184                           ;main.c: 34:     I2C_2_Master_Init();
  1185   00190E  ECAF  F026         	call	_I2C_2_Master_Init	;wreg free
  1186   001912                     
  1187                           ;main.c: 35:     Timer0_init();
  1188   001912  EC0E  F027         	call	_Timer0_init	;wreg free
  1189   001916                     
  1190                           ;main.c: 36:     initDCmotorsPWM(200);
  1191   001916  0E00               	movlw	0
  1192   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1193   00191A  0EC8               	movlw	200
  1194   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1195   00191E  ECC4  F020         	call	_initDCmotorsPWM	;wreg free
  1196   001922                     
  1197                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1198   001922  9287               	bcf	135,1,c	;volatile
  1199   001924                     
  1200                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1201   001924  9881               	bcf	129,4,c	;volatile
  1202   001926                     
  1203                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1204   001926  9E86               	bcf	134,7,c	;volatile
  1205   001928                     
  1206                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1207   001928  8486               	bsf	134,2,c	;volatile
  1208   00192A                     
  1209                           ;main.c: 44:     ANSELFbits.ANSELF2=0;
  1210   00192A  010E               	movlb	14	; () banked
  1211   00192C  95B4               	bcf	180,2,b	;volatile
  1212   00192E                     
  1213                           ; BSR set to: 14
  1214                           ;main.c: 45:     TRISFbits.TRISF3 = 1;
  1215   00192E  8686               	bsf	134,3,c	;volatile
  1216   001930                     
  1217                           ; BSR set to: 14
  1218                           ;main.c: 47:     ANSELFbits.ANSELF3=0;
  1219   001930  97B4               	bcf	180,3,b	;volatile
  1220   001932                     
  1221                           ; BSR set to: 14
  1222                           ;main.c: 48:     LATGbits.LATG1=1;
  1223   001932  827F               	bsf	127,1,c	;volatile
  1224   001934                     
  1225                           ; BSR set to: 14
  1226                           ;main.c: 49:     LATAbits.LATA4=1;
  1227   001934  8879               	bsf	121,4,c	;volatile
  1228   001936                     
  1229                           ; BSR set to: 14
  1230                           ;main.c: 50:     LATFbits.LATF7=1;
  1231   001936  8E7E               	bsf	126,7,c	;volatile
  1232   001938                     
  1233                           ; BSR set to: 14
  1234                           ;main.c: 53:     LATDbits.LATD7=0;
  1235   001938  9E7C               	bcf	124,7,c	;volatile
  1236   00193A                     
  1237                           ; BSR set to: 14
  1238                           ;main.c: 54:     TRISDbits.TRISD7=0;
  1239   00193A  9E84               	bcf	132,7,c	;volatile
  1240   00193C                     
  1241                           ; BSR set to: 14
  1242                           ;main.c: 55:     LATHbits.LATH3=0;
  1243   00193C  9680               	bcf	128,3,c	;volatile
  1244   00193E                     
  1245                           ; BSR set to: 14
  1246                           ;main.c: 56:     TRISHbits.TRISH3=0;
  1247   00193E  9688               	bcf	136,3,c	;volatile
  1248   001940                     
  1249                           ; BSR set to: 14
  1250                           ;main.c: 59:     LATHbits.LATH0=0;
  1251   001940  9080               	bcf	128,0,c	;volatile
  1252   001942                     
  1253                           ; BSR set to: 14
  1254                           ;main.c: 60:     TRISHbits.TRISH0=0;
  1255   001942  9088               	bcf	136,0,c	;volatile
  1256   001944                     
  1257                           ; BSR set to: 14
  1258                           ;main.c: 63:     LATFbits.LATF0=0;
  1259   001944  907E               	bcf	126,0,c	;volatile
  1260   001946                     
  1261                           ; BSR set to: 14
  1262                           ;main.c: 64:     TRISFbits.TRISF0=0;
  1263   001946  9086               	bcf	134,0,c	;volatile
  1264   001948                     
  1265                           ; BSR set to: 14
  1266                           ;main.c: 67:     LATDbits.LATD4=0;
  1267   001948  987C               	bcf	124,4,c	;volatile
  1268   00194A                     
  1269                           ; BSR set to: 14
  1270                           ;main.c: 68:     TRISDbits.TRISD4=0;
  1271   00194A  9884               	bcf	132,4,c	;volatile
  1272   00194C                     
  1273                           ; BSR set to: 14
  1274                           ;main.c: 71:     LATDbits.LATD3=0;
  1275   00194C  967C               	bcf	124,3,c	;volatile
  1276   00194E                     
  1277                           ; BSR set to: 14
  1278                           ;main.c: 72:     TRISDbits.TRISD3=0;
  1279   00194E  9684               	bcf	132,3,c	;volatile
  1280   001950                     
  1281                           ; BSR set to: 14
  1282                           ;main.c: 77:     motorL.power=0;
  1283   001950  0E00               	movlw	0
  1284   001952  0100               	movlb	0	; () banked
  1285   001954  6FF3               	movwf	_motorL& (0+255),b
  1286   001956                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 78:     motorL.direction=1;
  1289   001956  0E01               	movlw	1
  1290   001958  6FF4               	movwf	(_motorL+1)& (0+255),b
  1291   00195A                     
  1292                           ; BSR set to: 0
  1293                           ;main.c: 79:     motorL.brakemode=1;
  1294   00195A  0E01               	movlw	1
  1295   00195C  6FF5               	movwf	(_motorL+2)& (0+255),b
  1296   00195E                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 80:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1299   00195E  0EAA               	movlw	170
  1300   001960  6FF8               	movwf	(_motorL+5)& (0+255),b
  1301   001962  0E0F               	movlw	15
  1302   001964  6FF9               	movwf	(_motorL+6)& (0+255),b
  1303   001966                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 81:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1306   001966  0EA6               	movlw	166
  1307   001968  6FFA               	movwf	(_motorL+7)& (0+255),b
  1308   00196A  0E0F               	movlw	15
  1309   00196C  6FFB               	movwf	(_motorL+8)& (0+255),b
  1310   00196E                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 82:     motorL.PWMperiod=200;
  1313   00196E  0E00               	movlw	0
  1314   001970  6FF7               	movwf	(_motorL+4)& (0+255),b
  1315   001972  0EC8               	movlw	200
  1316   001974  6FF6               	movwf	(_motorL+3)& (0+255),b
  1317   001976                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 83:     motorR.power=0;
  1320   001976  0E00               	movlw	0
  1321   001978  0101               	movlb	1	; () banked
  1322   00197A  6FC0               	movwf	_motorR& (0+255),b
  1323   00197C                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 84:     motorR.direction=1;
  1326   00197C  0E01               	movlw	1
  1327   00197E  6FC1               	movwf	(_motorR+1)& (0+255),b
  1328   001980                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 85:     motorR.brakemode=1;
  1331   001980  0E01               	movlw	1
  1332   001982  6FC2               	movwf	(_motorR+2)& (0+255),b
  1333   001984                     
  1334                           ; BSR set to: 1
  1335                           ;main.c: 86:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1336   001984  0E25               	movlw	37
  1337   001986  6FC5               	movwf	(_motorR+5)& (0+255),b
  1338   001988  0E0F               	movlw	15
  1339   00198A  6FC6               	movwf	(_motorR+6)& (0+255),b
  1340   00198C                     
  1341                           ; BSR set to: 1
  1342                           ;main.c: 87:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1343   00198C  0E21               	movlw	33
  1344   00198E  6FC7               	movwf	(_motorR+7)& (0+255),b
  1345   001990  0E0F               	movlw	15
  1346   001992  6FC8               	movwf	(_motorR+8)& (0+255),b
  1347   001994                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 88:     motorR.PWMperiod=200;
  1350   001994  0E00               	movlw	0
  1351   001996  6FC4               	movwf	(_motorR+4)& (0+255),b
  1352   001998  0EC8               	movlw	200
  1353   00199A  6FC3               	movwf	(_motorR+3)& (0+255),b
  1354   00199C                     
  1355                           ; BSR set to: 1
  1356                           ;main.c: 90:     int consecuitive=0;
  1357   00199C  0E00               	movlw	0
  1358   00199E  0100               	movlb	0	; () banked
  1359   0019A0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1360   0019A2  0E00               	movlw	0
  1361   0019A4  6FEA               	movwf	main@consecuitive& (0+255),b
  1362   0019A6                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 91:     int prev_colour =0;
  1365   0019A6  0E00               	movlw	0
  1366   0019A8  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1367   0019AA  0E00               	movlw	0
  1368   0019AC  6FEE               	movwf	main@prev_colour& (0+255),b
  1369   0019AE                     
  1370                           ; BSR set to: 0
  1371                           ;main.c: 92:     int run_flag=1;
  1372   0019AE  0E00               	movlw	0
  1373   0019B0  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1374   0019B2  0E01               	movlw	1
  1375   0019B4  6FE8               	movwf	main@run_flag& (0+255),b
  1376   0019B6                     
  1377                           ; BSR set to: 0
  1378                           ;main.c: 93:     move_count=-1;
  1379   0019B6  69F0               	setf	_move_count& (0+255),b	;volatile
  1380   0019B8  69F1               	setf	(_move_count+1)& (0+255),b	;volatile
  1381   0019BA                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 95:     turnCalibration(&motorL,&motorR);
  1384   0019BA  0EF3               	movlw	low _motorL
  1385   0019BC  6E20               	movwf	turnCalibration@mL^0,c
  1386   0019BE  0E00               	movlw	high _motorL
  1387   0019C0  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1388   0019C2  0EC0               	movlw	low _motorR
  1389   0019C4  6E22               	movwf	turnCalibration@mR^0,c
  1390   0019C6  0E01               	movlw	high _motorR
  1391   0019C8  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1392   0019CA  EC5E  F019         	call	_turnCalibration	;wreg free
  1393   0019CE                     
  1394                           ;main.c: 97:     LATFbits.LATF0=0;
  1395   0019CE  907E               	bcf	126,0,c	;volatile
  1396   0019D0                     
  1397                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1398   0019D0  0E52               	movlw	82
  1399   0019D2  6E5A               	movwf	(??_main+1)^0,c
  1400   0019D4  0E2B               	movlw	43
  1401   0019D6  6E59               	movwf	??_main^0,c
  1402   0019D8  0E00               	movlw	0
  1403   0019DA                     u4947:
  1404   0019DA  2EE8               	decfsz	wreg,f,c
  1405   0019DC  D7FE               	bra	u4947
  1406   0019DE  2E59               	decfsz	??_main^0,f,c
  1407   0019E0  D7FC               	bra	u4947
  1408   0019E2  2E5A               	decfsz	(??_main+1)^0,f,c
  1409   0019E4  D7FA               	bra	u4947
  1410   0019E6  D000               	nop2	
  1411   0019E8                     l410:
  1412   0019E8  B48E               	btfsc	142,2,c	;volatile
  1413   0019EA  EFF9  F00C         	goto	u4661
  1414   0019EE  EFFB  F00C         	goto	u4660
  1415   0019F2                     u4661:
  1416   0019F2  EFF4  F00C         	goto	l410
  1417   0019F6                     u4660:
  1418   0019F6                     l413:
  1419   0019F6  A48E               	btfss	142,2,c	;volatile
  1420   0019F8  EF00  F00D         	goto	u4671
  1421   0019FC  EF02  F00D         	goto	u4670
  1422   001A00                     u4671:
  1423   001A00  EFFB  F00C         	goto	l413
  1424   001A04                     u4670:
  1425   001A04                     
  1426                           ;main.c: 103:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1427   001A04  0E52               	movlw	82
  1428   001A06  6E5A               	movwf	(??_main+1)^0,c
  1429   001A08  0E2B               	movlw	43
  1430   001A0A  6E59               	movwf	??_main^0,c
  1431   001A0C  0E00               	movlw	0
  1432   001A0E                     u4957:
  1433   001A0E  2EE8               	decfsz	wreg,f,c
  1434   001A10  D7FE               	bra	u4957
  1435   001A12  2E59               	decfsz	??_main^0,f,c
  1436   001A14  D7FC               	bra	u4957
  1437   001A16  2E5A               	decfsz	(??_main+1)^0,f,c
  1438   001A18  D7FA               	bra	u4957
  1439   001A1A  D000               	nop2	
  1440   001A1C                     
  1441                           ;main.c: 104:     TMR0H=0;
  1442   001A1C  0E00               	movlw	0
  1443   001A1E  6ED4               	movwf	212,c	;volatile
  1444   001A20                     
  1445                           ;main.c: 105:     TMR0L=0;
  1446   001A20  0E00               	movlw	0
  1447   001A22  6ED3               	movwf	211,c	;volatile
  1448                           
  1449                           ;main.c: 106:     while (run_flag)
  1450   001A24  EF2B  F00F         	goto	l5050
  1451   001A28                     l4924:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;main.c: 107:     {;main.c: 109:         fullSpeedAhead(&motorL,&motorR);
  1455   001A28  0EF3               	movlw	low _motorL
  1456   001A2A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1457   001A2C  0E00               	movlw	high _motorL
  1458   001A2E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1459   001A30  0EC0               	movlw	low _motorR
  1460   001A32  6E16               	movwf	fullSpeedAhead@mR^0,c
  1461   001A34  0E01               	movlw	high _motorR
  1462   001A36  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1463   001A38  EC75  F020         	call	_fullSpeedAhead	;wreg free
  1464   001A3C                     
  1465                           ;main.c: 114:         readColours(&vals);
  1466   001A3C  0EC9               	movlw	low _vals
  1467   001A3E  6E0C               	movwf	readColours@vals^0,c
  1468   001A40  0E01               	movlw	high _vals
  1469   001A42  6E0D               	movwf	(readColours@vals+1)^0,c
  1470   001A44  EC70  F022         	call	_readColours	;wreg free
  1471   001A48                     
  1472                           ;main.c: 117:         colour_rel(&vals, &rel);
  1473   001A48  0EC9               	movlw	low _vals
  1474   001A4A  6E32               	movwf	colour_rel@vals^0,c
  1475   001A4C  0E01               	movlw	high _vals
  1476   001A4E  6E33               	movwf	(colour_rel@vals+1)^0,c
  1477   001A50  0EB4               	movlw	low _rel
  1478   001A52  6E34               	movwf	colour_rel@rel^0,c
  1479   001A54  0E01               	movlw	high _rel
  1480   001A56  6E35               	movwf	(colour_rel@rel+1)^0,c
  1481   001A58  EC79  F015         	call	_colour_rel	;wreg free
  1482   001A5C                     
  1483                           ;main.c: 120:         if (vals.L>=500){
  1484   001A5C  0101               	movlb	1	; () banked
  1485   001A5E  BFD0               	btfsc	(_vals+7)& (0+255),7,b
  1486   001A60  EF3B  F00D         	goto	u4681
  1487   001A64  0EF4               	movlw	244
  1488   001A66  5DCF               	subwf	(_vals+6)& (0+255),w,b
  1489   001A68  0E01               	movlw	1
  1490   001A6A  59D0               	subwfb	(_vals+7)& (0+255),w,b
  1491   001A6C  A0D8               	btfss	status,0,c
  1492   001A6E  EF3B  F00D         	goto	u4681
  1493   001A72  EF3D  F00D         	goto	u4680
  1494   001A76                     u4681:
  1495   001A76  EF08  F00F         	goto	l418
  1496   001A7A                     u4680:
  1497   001A7A                     
  1498                           ; BSR set to: 1
  1499                           ;main.c: 121:             move_count++;
  1500   001A7A  0100               	movlb	0	; () banked
  1501   001A7C  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1502   001A7E  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1503   001A80                     
  1504                           ; BSR set to: 0
  1505                           ;main.c: 122:             getTMR0val();
  1506   001A80  ECD8  F026         	call	_getTMR0val	;wreg free
  1507   001A84                     
  1508                           ;main.c: 124:             Forwardhalfblock(&motorL,&motorR);
  1509   001A84  0EF3               	movlw	low _motorL
  1510   001A86  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1511   001A88  0E00               	movlw	high _motorL
  1512   001A8A  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1513   001A8C  0EC0               	movlw	low _motorR
  1514   001A8E  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1515   001A90  0E01               	movlw	high _motorR
  1516   001A92  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1517   001A94  EC26  F023         	call	_Forwardhalfblock	;wreg free
  1518   001A98                     
  1519                           ;main.c: 126:             stop(&motorL, &motorR);
  1520   001A98  0EF3               	movlw	low _motorL
  1521   001A9A  6E14               	movwf	stop@mL^0,c
  1522   001A9C  0E00               	movlw	high _motorL
  1523   001A9E  6E15               	movwf	(stop@mL+1)^0,c
  1524   001AA0  0EC0               	movlw	low _motorR
  1525   001AA2  6E16               	movwf	stop@mR^0,c
  1526   001AA4  0E01               	movlw	high _motorR
  1527   001AA6  6E17               	movwf	(stop@mR+1)^0,c
  1528   001AA8  EC49  F021         	call	_stop	;wreg free
  1529   001AAC                     
  1530                           ;main.c: 127:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1531   001AAC  0E11               	movlw	17
  1532   001AAE  6E5A               	movwf	(??_main+1)^0,c
  1533   001AB0  0E3C               	movlw	60
  1534   001AB2  6E59               	movwf	??_main^0,c
  1535   001AB4  0ECB               	movlw	203
  1536   001AB6                     u4967:
  1537   001AB6  2EE8               	decfsz	wreg,f,c
  1538   001AB8  D7FE               	bra	u4967
  1539   001ABA  2E59               	decfsz	??_main^0,f,c
  1540   001ABC  D7FC               	bra	u4967
  1541   001ABE  2E5A               	decfsz	(??_main+1)^0,f,c
  1542   001AC0  D7FA               	bra	u4967
  1543   001AC2  F000               	nop	
  1544                           
  1545                           ;main.c: 134:             while (consecuitive<20){
  1546   001AC4  EF97  F00D         	goto	l4954
  1547   001AC8                     l4942:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 135:                 int colour = Colour_decider(&vals, &rel);
  1551   001AC8  0EC9               	movlw	low _vals
  1552   001ACA  6E4B               	movwf	Colour_decider@vals^0,c
  1553   001ACC  0E01               	movlw	high _vals
  1554   001ACE  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1555   001AD0  0EB4               	movlw	low _rel
  1556   001AD2  6E4D               	movwf	Colour_decider@rel^0,c
  1557   001AD4  0E01               	movlw	high _rel
  1558   001AD6  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1559   001AD8  EC13  F007         	call	_Colour_decider	;wreg free
  1560   001ADC  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1561   001AE0  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1562   001AE4                     
  1563                           ;main.c: 136:                 if (colour==prev_colour){
  1564   001AE4  0100               	movlb	0	; () banked
  1565   001AE6  51EE               	movf	main@prev_colour& (0+255),w,b
  1566   001AE8  19EC               	xorwf	main@colour& (0+255),w,b
  1567   001AEA  E107               	bnz	u4691
  1568   001AEC  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1569   001AEE  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1570   001AF0  A4D8               	btfss	status,2,c
  1571   001AF2  EF7D  F00D         	goto	u4691
  1572   001AF6  EF7F  F00D         	goto	u4690
  1573   001AFA                     u4691:
  1574   001AFA  EF83  F00D         	goto	l4948
  1575   001AFE                     u4690:
  1576   001AFE                     
  1577                           ; BSR set to: 0
  1578                           ;main.c: 137:                     consecuitive++;
  1579   001AFE  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1580   001B00  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1581                           
  1582                           ;main.c: 138:                 }
  1583   001B02  EF87  F00D         	goto	l4950
  1584   001B06                     l4948:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 140:                     consecuitive=0;
  1588   001B06  0E00               	movlw	0
  1589   001B08  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1590   001B0A  0E00               	movlw	0
  1591   001B0C  6FEA               	movwf	main@consecuitive& (0+255),b
  1592   001B0E                     l4950:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;main.c: 142:                 prev_colour=colour;
  1596   001B0E  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1597   001B12  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1598   001B16                     
  1599                           ; BSR set to: 0
  1600                           ;main.c: 143:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1601   001B16  0E05               	movlw	5
  1602   001B18  6E5A               	movwf	(??_main+1)^0,c
  1603   001B1A  0E0F               	movlw	15
  1604   001B1C  6E59               	movwf	??_main^0,c
  1605   001B1E  0EF1               	movlw	241
  1606   001B20                     u4977:
  1607   001B20  2EE8               	decfsz	wreg,f,c
  1608   001B22  D7FE               	bra	u4977
  1609   001B24  2E59               	decfsz	??_main^0,f,c
  1610   001B26  D7FC               	bra	u4977
  1611   001B28  2E5A               	decfsz	(??_main+1)^0,f,c
  1612   001B2A  D7FA               	bra	u4977
  1613   001B2C  F000               	nop	
  1614   001B2E                     l4954:
  1615                           
  1616                           ;main.c: 134:             while (consecuitive<20){
  1617   001B2E  0100               	movlb	0	; () banked
  1618   001B30  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1619   001B32  EFA4  F00D         	goto	u4701
  1620   001B36  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1621   001B38  E109               	bnz	u4700
  1622   001B3A  0E14               	movlw	20
  1623   001B3C  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1624   001B3E  A0D8               	btfss	status,0,c
  1625   001B40  EFA4  F00D         	goto	u4701
  1626   001B44  EFA6  F00D         	goto	u4700
  1627   001B48                     u4701:
  1628   001B48  EF64  F00D         	goto	l4942
  1629   001B4C                     u4700:
  1630   001B4C                     
  1631                           ; BSR set to: 0
  1632                           ;main.c: 145:             consecuitive=0;
  1633   001B4C  0E00               	movlw	0
  1634   001B4E  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1635   001B50  0E00               	movlw	0
  1636   001B52  6FEA               	movwf	main@consecuitive& (0+255),b
  1637   001B54                     
  1638                           ; BSR set to: 0
  1639                           ;main.c: 146:             int temp=TMR0L;
  1640   001B54  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1641   001B58  6BE5               	clrf	(main@temp+1)& (0+255),b
  1642   001B5A                     
  1643                           ; BSR set to: 0
  1644                           ;main.c: 147:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1645   001B5A  0E80               	movlw	low main@buf
  1646   001B5C  6F60               	movwf	sprintf@s& (0+255),b
  1647   001B5E  0E00               	movlw	high main@buf
  1648   001B60  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1649   001B62  0E01               	movlw	low STR_1
  1650   001B64  6F62               	movwf	sprintf@fmt& (0+255),b
  1651   001B66  0E0E               	movlw	high STR_1
  1652   001B68  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1653   001B6A  C1C9  F064         	movff	_vals,?_sprintf+4
  1654   001B6E  C1CA  F065         	movff	_vals+1,?_sprintf+5
  1655   001B72  C1CB  F066         	movff	_vals+2,?_sprintf+6
  1656   001B76  C1CC  F067         	movff	_vals+3,?_sprintf+7
  1657   001B7A  C1CD  F068         	movff	_vals+4,?_sprintf+8
  1658   001B7E  C1CE  F069         	movff	_vals+5,?_sprintf+9
  1659   001B82  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1660   001B86  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1661   001B88  EC53  F023         	call	_sprintf	;wreg free
  1662   001B8C                     
  1663                           ;main.c: 150:             sendStringSerial4(buf);
  1664   001B8C  0E80               	movlw	low main@buf
  1665   001B8E  6E02               	movwf	sendStringSerial4@string^0,c
  1666   001B90  0E00               	movlw	high main@buf
  1667   001B92  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1668   001B94  EC97  F026         	call	_sendStringSerial4	;wreg free
  1669   001B98                     
  1670                           ;main.c: 152:             if (prev_colour==1){
  1671   001B98  0100               	movlb	0	; () banked
  1672   001B9A  05EE               	decf	main@prev_colour& (0+255),w,b
  1673   001B9C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1674   001B9E  A4D8               	btfss	status,2,c
  1675   001BA0  EFD4  F00D         	goto	u4711
  1676   001BA4  EFD6  F00D         	goto	u4710
  1677   001BA8                     u4711:
  1678   001BA8  EFEF  F00D         	goto	l4974
  1679   001BAC                     u4710:
  1680   001BAC                     
  1681                           ; BSR set to: 0
  1682                           ;main.c: 153:                 RedMove(&motorL, &motorR);
  1683   001BAC  0EF3               	movlw	low _motorL
  1684   001BAE  6E20               	movwf	RedMove@mL^0,c
  1685   001BB0  0E00               	movlw	high _motorL
  1686   001BB2  6E21               	movwf	(RedMove@mL+1)^0,c
  1687   001BB4  0EC0               	movlw	low _motorR
  1688   001BB6  6E22               	movwf	RedMove@mR^0,c
  1689   001BB8  0E01               	movlw	high _motorR
  1690   001BBA  6E23               	movwf	(RedMove@mR+1)^0,c
  1691   001BBC  EC22  F026         	call	_RedMove	;wreg free
  1692   001BC0                     
  1693                           ;main.c: 154:                 TMR0H=0;
  1694   001BC0  0E00               	movlw	0
  1695   001BC2  6ED4               	movwf	212,c	;volatile
  1696   001BC4                     
  1697                           ;main.c: 155:                 TMR0L=0;
  1698   001BC4  0E00               	movlw	0
  1699   001BC6  6ED3               	movwf	211,c	;volatile
  1700   001BC8                     
  1701                           ;main.c: 156:                 WayBack[move_count]=1;
  1702   001BC8  0E62               	movlw	low _WayBack
  1703   001BCA  0100               	movlb	0	; () banked
  1704   001BCC  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1705   001BCE  6ED9               	movwf	fsr2l,c
  1706   001BD0  0E01               	movlw	high _WayBack
  1707   001BD2  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1708   001BD4  6EDA               	movwf	fsr2h,c
  1709   001BD6  0E01               	movlw	1
  1710   001BD8  6EDF               	movwf	indf2,c
  1711                           
  1712                           ;main.c: 157:             }
  1713   001BDA  EF2B  F00F         	goto	l5050
  1714   001BDE                     l4974:
  1715                           
  1716                           ; BSR set to: 0
  1717   001BDE  0E02               	movlw	2
  1718   001BE0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1719   001BE2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1720   001BE4  A4D8               	btfss	status,2,c
  1721   001BE6  EFF7  F00D         	goto	u4721
  1722   001BEA  EFF9  F00D         	goto	u4720
  1723   001BEE                     u4721:
  1724   001BEE  EF12  F00E         	goto	l4984
  1725   001BF2                     u4720:
  1726   001BF2                     
  1727                           ; BSR set to: 0
  1728                           ;main.c: 159:                 OrangeMove(&motorL, &motorR);
  1729   001BF2  0EF3               	movlw	low _motorL
  1730   001BF4  6E20               	movwf	OrangeMove@mL^0,c
  1731   001BF6  0E00               	movlw	high _motorL
  1732   001BF8  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1733   001BFA  0EC0               	movlw	low _motorR
  1734   001BFC  6E22               	movwf	OrangeMove@mR^0,c
  1735   001BFE  0E01               	movlw	high _motorR
  1736   001C00  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1737   001C02  EC7C  F023         	call	_OrangeMove	;wreg free
  1738   001C06                     
  1739                           ;main.c: 160:                 TMR0H=0;
  1740   001C06  0E00               	movlw	0
  1741   001C08  6ED4               	movwf	212,c	;volatile
  1742   001C0A                     
  1743                           ;main.c: 161:                 TMR0L=0;
  1744   001C0A  0E00               	movlw	0
  1745   001C0C  6ED3               	movwf	211,c	;volatile
  1746   001C0E                     
  1747                           ;main.c: 162:                 WayBack[move_count]=2;
  1748   001C0E  0E62               	movlw	low _WayBack
  1749   001C10  0100               	movlb	0	; () banked
  1750   001C12  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1751   001C14  6ED9               	movwf	fsr2l,c
  1752   001C16  0E01               	movlw	high _WayBack
  1753   001C18  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1754   001C1A  6EDA               	movwf	fsr2h,c
  1755   001C1C  0E02               	movlw	2
  1756   001C1E  6EDF               	movwf	indf2,c
  1757                           
  1758                           ;main.c: 163:             }
  1759   001C20  EF2B  F00F         	goto	l5050
  1760   001C24                     l4984:
  1761                           
  1762                           ; BSR set to: 0
  1763   001C24  0E03               	movlw	3
  1764   001C26  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1765   001C28  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1766   001C2A  A4D8               	btfss	status,2,c
  1767   001C2C  EF1A  F00E         	goto	u4731
  1768   001C30  EF1C  F00E         	goto	u4730
  1769   001C34                     u4731:
  1770   001C34  EF35  F00E         	goto	l4994
  1771   001C38                     u4730:
  1772   001C38                     
  1773                           ; BSR set to: 0
  1774                           ;main.c: 165:                 YellowMove(&motorL, &motorR);
  1775   001C38  0EF3               	movlw	low _motorL
  1776   001C3A  6E20               	movwf	YellowMove@mL^0,c
  1777   001C3C  0E00               	movlw	high _motorL
  1778   001C3E  6E21               	movwf	(YellowMove@mL+1)^0,c
  1779   001C40  0EC0               	movlw	low _motorR
  1780   001C42  6E22               	movwf	YellowMove@mR^0,c
  1781   001C44  0E01               	movlw	high _motorR
  1782   001C46  6E23               	movwf	(YellowMove@mR+1)^0,c
  1783   001C48  ECF7  F023         	call	_YellowMove	;wreg free
  1784   001C4C                     
  1785                           ;main.c: 166:                 TMR0H=0;
  1786   001C4C  0E00               	movlw	0
  1787   001C4E  6ED4               	movwf	212,c	;volatile
  1788   001C50                     
  1789                           ;main.c: 167:                 TMR0L=0;
  1790   001C50  0E00               	movlw	0
  1791   001C52  6ED3               	movwf	211,c	;volatile
  1792   001C54                     
  1793                           ;main.c: 168:                 WayBack[move_count]=3;
  1794   001C54  0E62               	movlw	low _WayBack
  1795   001C56  0100               	movlb	0	; () banked
  1796   001C58  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1797   001C5A  6ED9               	movwf	fsr2l,c
  1798   001C5C  0E01               	movlw	high _WayBack
  1799   001C5E  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1800   001C60  6EDA               	movwf	fsr2h,c
  1801   001C62  0E03               	movlw	3
  1802   001C64  6EDF               	movwf	indf2,c
  1803                           
  1804                           ;main.c: 169:             }
  1805   001C66  EF2B  F00F         	goto	l5050
  1806   001C6A                     l4994:
  1807                           
  1808                           ; BSR set to: 0
  1809   001C6A  0E04               	movlw	4
  1810   001C6C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1811   001C6E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1812   001C70  A4D8               	btfss	status,2,c
  1813   001C72  EF3D  F00E         	goto	u4741
  1814   001C76  EF3F  F00E         	goto	u4740
  1815   001C7A                     u4741:
  1816   001C7A  EF58  F00E         	goto	l5004
  1817   001C7E                     u4740:
  1818   001C7E                     
  1819                           ; BSR set to: 0
  1820                           ;main.c: 171:                 BlueMove(&motorL, &motorR);
  1821   001C7E  0EF3               	movlw	low _motorL
  1822   001C80  6E20               	movwf	BlueMove@mL^0,c
  1823   001C82  0E00               	movlw	high _motorL
  1824   001C84  6E21               	movwf	(BlueMove@mL+1)^0,c
  1825   001C86  0EC0               	movlw	low _motorR
  1826   001C88  6E22               	movwf	BlueMove@mR^0,c
  1827   001C8A  0E01               	movlw	high _motorR
  1828   001C8C  6E23               	movwf	(BlueMove@mR+1)^0,c
  1829   001C8E  EC3D  F022         	call	_BlueMove	;wreg free
  1830   001C92                     
  1831                           ;main.c: 172:                 TMR0H=0;
  1832   001C92  0E00               	movlw	0
  1833   001C94  6ED4               	movwf	212,c	;volatile
  1834   001C96                     
  1835                           ;main.c: 173:                 TMR0L=0;
  1836   001C96  0E00               	movlw	0
  1837   001C98  6ED3               	movwf	211,c	;volatile
  1838   001C9A                     
  1839                           ;main.c: 174:                 WayBack[move_count]=4;
  1840   001C9A  0E62               	movlw	low _WayBack
  1841   001C9C  0100               	movlb	0	; () banked
  1842   001C9E  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1843   001CA0  6ED9               	movwf	fsr2l,c
  1844   001CA2  0E01               	movlw	high _WayBack
  1845   001CA4  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1846   001CA6  6EDA               	movwf	fsr2h,c
  1847   001CA8  0E04               	movlw	4
  1848   001CAA  6EDF               	movwf	indf2,c
  1849                           
  1850                           ;main.c: 175:             }
  1851   001CAC  EF2B  F00F         	goto	l5050
  1852   001CB0                     l5004:
  1853                           
  1854                           ; BSR set to: 0
  1855   001CB0  0E05               	movlw	5
  1856   001CB2  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1857   001CB4  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1858   001CB6  A4D8               	btfss	status,2,c
  1859   001CB8  EF60  F00E         	goto	u4751
  1860   001CBC  EF62  F00E         	goto	u4750
  1861   001CC0                     u4751:
  1862   001CC0  EF7B  F00E         	goto	l5014
  1863   001CC4                     u4750:
  1864   001CC4                     
  1865                           ; BSR set to: 0
  1866                           ;main.c: 177:                 GreenMove(&motorL, &motorR);
  1867   001CC4  0EF3               	movlw	low _motorL
  1868   001CC6  6E20               	movwf	GreenMove@mL^0,c
  1869   001CC8  0E00               	movlw	high _motorL
  1870   001CCA  6E21               	movwf	(GreenMove@mL+1)^0,c
  1871   001CCC  0EC0               	movlw	low _motorR
  1872   001CCE  6E22               	movwf	GreenMove@mR^0,c
  1873   001CD0  0E01               	movlw	high _motorR
  1874   001CD2  6E23               	movwf	(GreenMove@mR+1)^0,c
  1875   001CD4  EC41  F026         	call	_GreenMove	;wreg free
  1876   001CD8                     
  1877                           ;main.c: 178:                 TMR0H=0;
  1878   001CD8  0E00               	movlw	0
  1879   001CDA  6ED4               	movwf	212,c	;volatile
  1880   001CDC                     
  1881                           ;main.c: 179:                 TMR0L=0;
  1882   001CDC  0E00               	movlw	0
  1883   001CDE  6ED3               	movwf	211,c	;volatile
  1884   001CE0                     
  1885                           ;main.c: 180:                 WayBack[move_count]=5;
  1886   001CE0  0E62               	movlw	low _WayBack
  1887   001CE2  0100               	movlb	0	; () banked
  1888   001CE4  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1889   001CE6  6ED9               	movwf	fsr2l,c
  1890   001CE8  0E01               	movlw	high _WayBack
  1891   001CEA  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1892   001CEC  6EDA               	movwf	fsr2h,c
  1893   001CEE  0E05               	movlw	5
  1894   001CF0  6EDF               	movwf	indf2,c
  1895                           
  1896                           ;main.c: 181:             }
  1897   001CF2  EF2B  F00F         	goto	l5050
  1898   001CF6                     l5014:
  1899                           
  1900                           ; BSR set to: 0
  1901   001CF6  0E06               	movlw	6
  1902   001CF8  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1903   001CFA  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1904   001CFC  A4D8               	btfss	status,2,c
  1905   001CFE  EF83  F00E         	goto	u4761
  1906   001D02  EF85  F00E         	goto	u4760
  1907   001D06                     u4761:
  1908   001D06  EF9E  F00E         	goto	l5024
  1909   001D0A                     u4760:
  1910   001D0A                     
  1911                           ; BSR set to: 0
  1912                           ;main.c: 183:                 LightBlueMove(&motorL, &motorR);
  1913   001D0A  0EF3               	movlw	low _motorL
  1914   001D0C  6E20               	movwf	LightBlueMove@mL^0,c
  1915   001D0E  0E00               	movlw	high _motorL
  1916   001D10  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1917   001D12  0EC0               	movlw	low _motorR
  1918   001D14  6E22               	movwf	LightBlueMove@mR^0,c
  1919   001D16  0E01               	movlw	high _motorR
  1920   001D18  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1921   001D1A  ECA5  F023         	call	_LightBlueMove	;wreg free
  1922   001D1E                     
  1923                           ;main.c: 184:                 TMR0H=0;
  1924   001D1E  0E00               	movlw	0
  1925   001D20  6ED4               	movwf	212,c	;volatile
  1926   001D22                     
  1927                           ;main.c: 185:                 TMR0L=0;
  1928   001D22  0E00               	movlw	0
  1929   001D24  6ED3               	movwf	211,c	;volatile
  1930   001D26                     
  1931                           ;main.c: 186:                 WayBack[move_count]=6;
  1932   001D26  0E62               	movlw	low _WayBack
  1933   001D28  0100               	movlb	0	; () banked
  1934   001D2A  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1935   001D2C  6ED9               	movwf	fsr2l,c
  1936   001D2E  0E01               	movlw	high _WayBack
  1937   001D30  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1938   001D32  6EDA               	movwf	fsr2h,c
  1939   001D34  0E06               	movlw	6
  1940   001D36  6EDF               	movwf	indf2,c
  1941                           
  1942                           ;main.c: 187:             }
  1943   001D38  EF2B  F00F         	goto	l5050
  1944   001D3C                     l5024:
  1945                           
  1946                           ; BSR set to: 0
  1947   001D3C  0E07               	movlw	7
  1948   001D3E  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1949   001D40  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1950   001D42  A4D8               	btfss	status,2,c
  1951   001D44  EFA6  F00E         	goto	u4771
  1952   001D48  EFA8  F00E         	goto	u4770
  1953   001D4C                     u4771:
  1954   001D4C  EFC1  F00E         	goto	l5034
  1955   001D50                     u4770:
  1956   001D50                     
  1957                           ; BSR set to: 0
  1958                           ;main.c: 189:                 PinkMove(&motorL, &motorR);
  1959   001D50  0EF3               	movlw	low _motorL
  1960   001D52  6E20               	movwf	PinkMove@mL^0,c
  1961   001D54  0E00               	movlw	high _motorL
  1962   001D56  6E21               	movwf	(PinkMove@mL+1)^0,c
  1963   001D58  0EC0               	movlw	low _motorR
  1964   001D5A  6E22               	movwf	PinkMove@mR^0,c
  1965   001D5C  0E01               	movlw	high _motorR
  1966   001D5E  6E23               	movwf	(PinkMove@mR+1)^0,c
  1967   001D60  EC20  F024         	call	_PinkMove	;wreg free
  1968   001D64                     
  1969                           ;main.c: 190:                 TMR0H=0;
  1970   001D64  0E00               	movlw	0
  1971   001D66  6ED4               	movwf	212,c	;volatile
  1972   001D68                     
  1973                           ;main.c: 191:                 TMR0L=0;
  1974   001D68  0E00               	movlw	0
  1975   001D6A  6ED3               	movwf	211,c	;volatile
  1976   001D6C                     
  1977                           ;main.c: 192:                 WayBack[move_count]=7;
  1978   001D6C  0E62               	movlw	low _WayBack
  1979   001D6E  0100               	movlb	0	; () banked
  1980   001D70  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1981   001D72  6ED9               	movwf	fsr2l,c
  1982   001D74  0E01               	movlw	high _WayBack
  1983   001D76  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1984   001D78  6EDA               	movwf	fsr2h,c
  1985   001D7A  0E07               	movlw	7
  1986   001D7C  6EDF               	movwf	indf2,c
  1987                           
  1988                           ;main.c: 193:             }
  1989   001D7E  EF2B  F00F         	goto	l5050
  1990   001D82                     l5034:
  1991                           
  1992                           ; BSR set to: 0
  1993   001D82  0E0A               	movlw	10
  1994   001D84  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1995   001D86  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1996   001D88  A4D8               	btfss	status,2,c
  1997   001D8A  EFC9  F00E         	goto	u4781
  1998   001D8E  EFCB  F00E         	goto	u4780
  1999   001D92                     u4781:
  2000   001D92  EFD7  F00E         	goto	l5038
  2001   001D96                     u4780:
  2002   001D96                     
  2003                           ; BSR set to: 0
  2004                           ;main.c: 195:                 RetryMove(&motorL, &motorR);
  2005   001D96  0EF3               	movlw	low _motorL
  2006   001D98  6E1A               	movwf	RetryMove@mL^0,c
  2007   001D9A  0E00               	movlw	high _motorL
  2008   001D9C  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2009   001D9E  0EC0               	movlw	low _motorR
  2010   001DA0  6E1C               	movwf	RetryMove@mR^0,c
  2011   001DA2  0E01               	movlw	high _motorR
  2012   001DA4  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2013   001DA6  EC08  F021         	call	_RetryMove	;wreg free
  2014                           
  2015                           ;main.c: 196:             }
  2016   001DAA  EF2B  F00F         	goto	l5050
  2017   001DAE                     l5038:
  2018                           
  2019                           ; BSR set to: 0
  2020   001DAE  51EE               	movf	main@prev_colour& (0+255),w,b
  2021   001DB0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2022   001DB2  A4D8               	btfss	status,2,c
  2023   001DB4  EFDE  F00E         	goto	u4791
  2024   001DB8  EFE0  F00E         	goto	u4790
  2025   001DBC                     u4791:
  2026   001DBC  EF06  F00F         	goto	l435
  2027   001DC0                     u4790:
  2028   001DC0                     
  2029                           ; BSR set to: 0
  2030                           ;main.c: 198:                 BlueMove(&motorL, &motorR);
  2031   001DC0  0EF3               	movlw	low _motorL
  2032   001DC2  6E20               	movwf	BlueMove@mL^0,c
  2033   001DC4  0E00               	movlw	high _motorL
  2034   001DC6  6E21               	movwf	(BlueMove@mL+1)^0,c
  2035   001DC8  0EC0               	movlw	low _motorR
  2036   001DCA  6E22               	movwf	BlueMove@mR^0,c
  2037   001DCC  0E01               	movlw	high _motorR
  2038   001DCE  6E23               	movwf	(BlueMove@mR+1)^0,c
  2039   001DD0  EC3D  F022         	call	_BlueMove	;wreg free
  2040   001DD4                     
  2041                           ;main.c: 199:                 T0CON0bits.T0EN=0;
  2042   001DD4  9ED5               	bcf	213,7,c	;volatile
  2043                           
  2044                           ;main.c: 200:                 go_Home(WayBack, Time_forward);
  2045   001DD6  0E62               	movlw	low _WayBack
  2046   001DD8  6E24               	movwf	go_Home@WayBack^0,c
  2047   001DDA  0E01               	movlw	high _WayBack
  2048   001DDC  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2049   001DDE  0E00               	movlw	low _Time_forward
  2050   001DE0  6E26               	movwf	go_Home@Time_forward^0,c
  2051   001DE2  0E02               	movlw	high _Time_forward
  2052   001DE4  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2053   001DE6  EC4E  F018         	call	_go_Home	;wreg free
  2054                           
  2055                           ;main.c: 201:                 stop(&motorL, &motorR);
  2056   001DEA  0EF3               	movlw	low _motorL
  2057   001DEC  6E14               	movwf	stop@mL^0,c
  2058   001DEE  0E00               	movlw	high _motorL
  2059   001DF0  6E15               	movwf	(stop@mL+1)^0,c
  2060   001DF2  0EC0               	movlw	low _motorR
  2061   001DF4  6E16               	movwf	stop@mR^0,c
  2062   001DF6  0E01               	movlw	high _motorR
  2063   001DF8  6E17               	movwf	(stop@mR+1)^0,c
  2064   001DFA  EC49  F021         	call	_stop	;wreg free
  2065   001DFE                     
  2066                           ;main.c: 202:                 run_flag=0;
  2067   001DFE  0E00               	movlw	0
  2068   001E00  0100               	movlb	0	; () banked
  2069   001E02  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  2070   001E04  0E00               	movlw	0
  2071   001E06  6FE8               	movwf	main@run_flag& (0+255),b
  2072   001E08  EF2B  F00F         	goto	l5050
  2073   001E0C                     l435:
  2074                           
  2075                           ; BSR set to: 0
  2076   001E0C  EF2B  F00F         	goto	l5050
  2077   001E10                     l418:
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;main.c: 208:             int temp=TMR0L;
  2081   001E10  CFD3 F0E6          	movff	4051,main@temp_1304	;volatile
  2082   001E14  0100               	movlb	0	; () banked
  2083   001E16  6BE7               	clrf	(main@temp_1304+1)& (0+255),b
  2084   001E18                     
  2085                           ; BSR set to: 0
  2086                           ;main.c: 209:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  2087   001E18  0E80               	movlw	low main@buf
  2088   001E1A  6F60               	movwf	sprintf@s& (0+255),b
  2089   001E1C  0E00               	movlw	high main@buf
  2090   001E1E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2091   001E20  0E01               	movlw	low STR_1
  2092   001E22  6F62               	movwf	sprintf@fmt& (0+255),b
  2093   001E24  0E0E               	movlw	high STR_1
  2094   001E26  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2095   001E28  C1C9  F064         	movff	_vals,?_sprintf+4
  2096   001E2C  C1CA  F065         	movff	_vals+1,?_sprintf+5
  2097   001E30  C1CB  F066         	movff	_vals+2,?_sprintf+6
  2098   001E34  C1CC  F067         	movff	_vals+3,?_sprintf+7
  2099   001E38  C1CD  F068         	movff	_vals+4,?_sprintf+8
  2100   001E3C  C1CE  F069         	movff	_vals+5,?_sprintf+9
  2101   001E40  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  2102   001E44  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  2103   001E46  EC53  F023         	call	_sprintf	;wreg free
  2104   001E4A                     
  2105                           ;main.c: 210:             sendStringSerial4(buf);
  2106   001E4A  0E80               	movlw	low main@buf
  2107   001E4C  6E02               	movwf	sendStringSerial4@string^0,c
  2108   001E4E  0E00               	movlw	high main@buf
  2109   001E50  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2110   001E52  EC97  F026         	call	_sendStringSerial4	;wreg free
  2111   001E56                     l5050:
  2112                           
  2113                           ;main.c: 106:     while (run_flag)
  2114   001E56  0100               	movlb	0	; () banked
  2115   001E58  51E8               	movf	main@run_flag& (0+255),w,b
  2116   001E5A  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2117   001E5C  A4D8               	btfss	status,2,c
  2118   001E5E  EF33  F00F         	goto	u4801
  2119   001E62  EF35  F00F         	goto	u4800
  2120   001E66                     u4801:
  2121   001E66  EF14  F00D         	goto	l4924
  2122   001E6A                     u4800:
  2123   001E6A                     
  2124                           ; BSR set to: 0
  2125   001E6A  EF07  F000         	goto	start
  2126   001E6E                     __end_of_main:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _turnCalibration *****************
  2130 ;; Defined at:
  2131 ;;		line 345 in file "dc_motor.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2134 ;;		 -> motorL(9), 
  2135 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2136 ;;		 -> motorR(9), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;Total ram usage:        6 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 5
  2155 ;; This function calls:
  2156 ;;		_turnLeft45
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text1
  2163   0032BC                     __ptext1:
  2164                           	callstack 0
  2165   0032BC                     _turnCalibration:
  2166                           	callstack 25
  2167   0032BC                     
  2168                           ;dc_motor.c: 346:     LATFbits.LATF0=1;
  2169   0032BC  807E               	bsf	126,0,c	;volatile
  2170   0032BE                     
  2171                           ;dc_motor.c: 347:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2172   0032BE  0E52               	movlw	82
  2173   0032C0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2174   0032C2  0E2B               	movlw	43
  2175   0032C4  6E24               	movwf	??_turnCalibration^0,c
  2176   0032C6  0E00               	movlw	0
  2177   0032C8                     u4987:
  2178   0032C8  2EE8               	decfsz	wreg,f,c
  2179   0032CA  D7FE               	bra	u4987
  2180   0032CC  2E24               	decfsz	??_turnCalibration^0,f,c
  2181   0032CE  D7FC               	bra	u4987
  2182   0032D0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2183   0032D2  D7FA               	bra	u4987
  2184   0032D4  D000               	nop2	
  2185                           
  2186                           ;dc_motor.c: 349:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2187   0032D6  EF21  F01A         	goto	l621
  2188   0032DA                     l622:
  2189                           
  2190                           ;dc_motor.c: 350:         LATDbits.LATD3=1;
  2191   0032DA  867C               	bsf	124,3,c	;volatile
  2192   0032DC                     
  2193                           ;dc_motor.c: 352:         turnLeft45(&motorL, &motorR);
  2194   0032DC  0EF3               	movlw	low _motorL
  2195   0032DE  6E1A               	movwf	turnLeft45@mL^0,c
  2196   0032E0  0E00               	movlw	high _motorL
  2197   0032E2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2198   0032E4  0EC0               	movlw	low _motorR
  2199   0032E6  6E1C               	movwf	turnLeft45@mR^0,c
  2200   0032E8  0E01               	movlw	high _motorR
  2201   0032EA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2202   0032EC  EC37  F025         	call	_turnLeft45	;wreg free
  2203                           
  2204                           ;dc_motor.c: 353:         turnLeft45(&motorL, &motorR);
  2205   0032F0  0EF3               	movlw	low _motorL
  2206   0032F2  6E1A               	movwf	turnLeft45@mL^0,c
  2207   0032F4  0E00               	movlw	high _motorL
  2208   0032F6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2209   0032F8  0EC0               	movlw	low _motorR
  2210   0032FA  6E1C               	movwf	turnLeft45@mR^0,c
  2211   0032FC  0E01               	movlw	high _motorR
  2212   0032FE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2213   003300  EC37  F025         	call	_turnLeft45	;wreg free
  2214                           
  2215                           ;dc_motor.c: 354:         turnLeft45(&motorL, &motorR);
  2216   003304  0EF3               	movlw	low _motorL
  2217   003306  6E1A               	movwf	turnLeft45@mL^0,c
  2218   003308  0E00               	movlw	high _motorL
  2219   00330A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2220   00330C  0EC0               	movlw	low _motorR
  2221   00330E  6E1C               	movwf	turnLeft45@mR^0,c
  2222   003310  0E01               	movlw	high _motorR
  2223   003312  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2224   003314  EC37  F025         	call	_turnLeft45	;wreg free
  2225                           
  2226                           ;dc_motor.c: 355:         turnLeft45(&motorL, &motorR);
  2227   003318  0EF3               	movlw	low _motorL
  2228   00331A  6E1A               	movwf	turnLeft45@mL^0,c
  2229   00331C  0E00               	movlw	high _motorL
  2230   00331E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2231   003320  0EC0               	movlw	low _motorR
  2232   003322  6E1C               	movwf	turnLeft45@mR^0,c
  2233   003324  0E01               	movlw	high _motorR
  2234   003326  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2235   003328  EC37  F025         	call	_turnLeft45	;wreg free
  2236                           
  2237                           ;dc_motor.c: 357:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2238   00332C  EF06  F01A         	goto	l4694
  2239   003330                     l624:
  2240                           
  2241                           ;dc_motor.c: 360:               LATDbits.LATD4=1;
  2242   003330  887C               	bsf	124,4,c	;volatile
  2243   003332                     
  2244                           ;dc_motor.c: 361:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2245   003332  0EA3               	movlw	163
  2246   003334  6E25               	movwf	(??_turnCalibration+1)^0,c
  2247   003336  0E57               	movlw	87
  2248   003338  6E24               	movwf	??_turnCalibration^0,c
  2249   00333A  0E02               	movlw	2
  2250   00333C                     u4997:
  2251   00333C  2EE8               	decfsz	wreg,f,c
  2252   00333E  D7FE               	bra	u4997
  2253   003340  2E24               	decfsz	??_turnCalibration^0,f,c
  2254   003342  D7FC               	bra	u4997
  2255   003344  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2256   003346  D7FA               	bra	u4997
  2257   003348  D000               	nop2	
  2258                           
  2259                           ;dc_motor.c: 362:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2260   00334A  A48E               	btfss	142,2,c	;volatile
  2261   00334C  EFAA  F019         	goto	u4431
  2262   003350  EFAD  F019         	goto	u4430
  2263   003354                     u4431:
  2264   003354  0E01               	movlw	1
  2265   003356  EFAE  F019         	goto	u4432
  2266   00335A                     u4430:
  2267   00335A  0E00               	movlw	0
  2268   00335C                     u4432:
  2269   00335C  6E24               	movwf	??_turnCalibration^0,c
  2270   00335E  A68E               	btfss	142,3,c	;volatile
  2271   003360  EFB4  F019         	goto	u4441
  2272   003364  EFB7  F019         	goto	u4440
  2273   003368                     u4441:
  2274   003368  0E01               	movlw	1
  2275   00336A  EFB8  F019         	goto	u4442
  2276   00336E                     u4440:
  2277   00336E  0E00               	movlw	0
  2278   003370                     u4442:
  2279   003370  1424               	andwf	??_turnCalibration^0,w,c
  2280   003372  A0E8               	btfss	wreg,0,c
  2281   003374  EFBE  F019         	goto	u4451
  2282   003378  EFC0  F019         	goto	u4450
  2283   00337C                     u4451:
  2284   00337C  EFD0  F019         	goto	l4676
  2285   003380                     u4450:
  2286   003380                     
  2287                           ;dc_motor.c: 363:                 LATHbits.LATH3=1;
  2288   003380  8680               	bsf	128,3,c	;volatile
  2289                           
  2290                           ;dc_motor.c: 364:                 LATDbits.LATD7=1;
  2291   003382  8E7C               	bsf	124,7,c	;volatile
  2292   003384                     
  2293                           ;dc_motor.c: 365:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2294   003384  0E52               	movlw	82
  2295   003386  6E25               	movwf	(??_turnCalibration+1)^0,c
  2296   003388  0E2B               	movlw	43
  2297   00338A  6E24               	movwf	??_turnCalibration^0,c
  2298   00338C  0E00               	movlw	0
  2299   00338E                     u5007:
  2300   00338E  2EE8               	decfsz	wreg,f,c
  2301   003390  D7FE               	bra	u5007
  2302   003392  2E24               	decfsz	??_turnCalibration^0,f,c
  2303   003394  D7FC               	bra	u5007
  2304   003396  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2305   003398  D7FA               	bra	u5007
  2306   00339A  D000               	nop2	
  2307   00339C                     
  2308                           ;dc_motor.c: 366:                 LATHbits.LATH3=0;
  2309   00339C  9680               	bcf	128,3,c	;volatile
  2310   00339E                     
  2311                           ;dc_motor.c: 367:                 LATDbits.LATD7=0;
  2312   00339E  9E7C               	bcf	124,7,c	;volatile
  2313   0033A0                     l4676:
  2314                           
  2315                           ;dc_motor.c: 369:             if (!PORTFbits.RF3){
  2316   0033A0  B68E               	btfsc	142,3,c	;volatile
  2317   0033A2  EFD5  F019         	goto	u4461
  2318   0033A6  EFD7  F019         	goto	u4460
  2319   0033AA                     u4461:
  2320   0033AA  EFEC  F019         	goto	l626
  2321   0033AE                     u4460:
  2322   0033AE                     
  2323                           ;dc_motor.c: 370:                 Turn45Delay+=10;
  2324   0033AE  0E0A               	movlw	10
  2325   0033B0  0100               	movlb	0	; () banked
  2326   0033B2  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2327   0033B4  0E00               	movlw	0
  2328   0033B6  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2329   0033B8                     
  2330                           ; BSR set to: 0
  2331                           ;dc_motor.c: 371:                 LATHbits.LATH3=1;
  2332   0033B8  8680               	bsf	128,3,c	;volatile
  2333   0033BA                     
  2334                           ; BSR set to: 0
  2335                           ;dc_motor.c: 372:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2336   0033BA  0E52               	movlw	82
  2337   0033BC  6E25               	movwf	(??_turnCalibration+1)^0,c
  2338   0033BE  0E2B               	movlw	43
  2339   0033C0  6E24               	movwf	??_turnCalibration^0,c
  2340   0033C2  0E00               	movlw	0
  2341   0033C4                     u5017:
  2342   0033C4  2EE8               	decfsz	wreg,f,c
  2343   0033C6  D7FE               	bra	u5017
  2344   0033C8  2E24               	decfsz	??_turnCalibration^0,f,c
  2345   0033CA  D7FC               	bra	u5017
  2346   0033CC  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2347   0033CE  D7FA               	bra	u5017
  2348   0033D0  D000               	nop2	
  2349   0033D2                     
  2350                           ;dc_motor.c: 373:                 LATHbits.LATH3=0;
  2351   0033D2  9680               	bcf	128,3,c	;volatile
  2352                           
  2353                           ;dc_motor.c: 374:             }
  2354   0033D4  EF06  F01A         	goto	l4694
  2355   0033D8                     l626:
  2356   0033D8  B48E               	btfsc	142,2,c	;volatile
  2357   0033DA  EFF1  F019         	goto	u4471
  2358   0033DE  EFF3  F019         	goto	u4470
  2359   0033E2                     u4471:
  2360   0033E2  EF06  F01A         	goto	l4694
  2361   0033E6                     u4470:
  2362   0033E6                     
  2363                           ;dc_motor.c: 377:                 Turn45Delay-=10;
  2364   0033E6  0100               	movlb	0	; () banked
  2365   0033E8  0EF6               	movlw	246
  2366   0033EA  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2367   0033EC  0EFF               	movlw	255
  2368   0033EE  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2369   0033F0                     
  2370                           ; BSR set to: 0
  2371                           ;dc_motor.c: 378:                 LATDbits.LATD7=1;
  2372   0033F0  8E7C               	bsf	124,7,c	;volatile
  2373   0033F2                     
  2374                           ; BSR set to: 0
  2375                           ;dc_motor.c: 379:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2376   0033F2  0E52               	movlw	82
  2377   0033F4  6E25               	movwf	(??_turnCalibration+1)^0,c
  2378   0033F6  0E2B               	movlw	43
  2379   0033F8  6E24               	movwf	??_turnCalibration^0,c
  2380   0033FA  0E00               	movlw	0
  2381   0033FC                     u5027:
  2382   0033FC  2EE8               	decfsz	wreg,f,c
  2383   0033FE  D7FE               	bra	u5027
  2384   003400  2E24               	decfsz	??_turnCalibration^0,f,c
  2385   003402  D7FC               	bra	u5027
  2386   003404  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2387   003406  D7FA               	bra	u5027
  2388   003408  D000               	nop2	
  2389   00340A                     
  2390                           ;dc_motor.c: 380:                 LATDbits.LATD7=0;
  2391   00340A  9E7C               	bcf	124,7,c	;volatile
  2392   00340C                     l4694:
  2393                           
  2394                           ;dc_motor.c: 357:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2395   00340C  A48E               	btfss	142,2,c	;volatile
  2396   00340E  EF0B  F01A         	goto	u4481
  2397   003412  EF0D  F01A         	goto	u4480
  2398   003416                     u4481:
  2399   003416  EF14  F01A         	goto	l631
  2400   00341A                     u4480:
  2401   00341A  B68E               	btfsc	142,3,c	;volatile
  2402   00341C  EF12  F01A         	goto	u4491
  2403   003420  EF14  F01A         	goto	u4490
  2404   003424                     u4491:
  2405   003424  EF98  F019         	goto	l624
  2406   003428                     u4490:
  2407   003428                     l631:
  2408                           
  2409                           ;dc_motor.c: 383:         LATDbits.LATD4=0;
  2410   003428  987C               	bcf	124,4,c	;volatile
  2411   00342A                     
  2412                           ;dc_motor.c: 384:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2413   00342A  0EA3               	movlw	163
  2414   00342C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2415   00342E  0E57               	movlw	87
  2416   003430  6E24               	movwf	??_turnCalibration^0,c
  2417   003432  0E02               	movlw	2
  2418   003434                     u5037:
  2419   003434  2EE8               	decfsz	wreg,f,c
  2420   003436  D7FE               	bra	u5037
  2421   003438  2E24               	decfsz	??_turnCalibration^0,f,c
  2422   00343A  D7FC               	bra	u5037
  2423   00343C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2424   00343E  D7FA               	bra	u5037
  2425   003440  D000               	nop2	
  2426   003442                     l621:
  2427                           
  2428                           ;dc_motor.c: 349:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2429   003442  A68E               	btfss	142,3,c	;volatile
  2430   003444  EF26  F01A         	goto	u4501
  2431   003448  EF29  F01A         	goto	u4500
  2432   00344C                     u4501:
  2433   00344C  0E01               	movlw	1
  2434   00344E  EF2A  F01A         	goto	u4502
  2435   003452                     u4500:
  2436   003452  0E00               	movlw	0
  2437   003454                     u4502:
  2438   003454  6E24               	movwf	??_turnCalibration^0,c
  2439   003456  A48E               	btfss	142,2,c	;volatile
  2440   003458  EF30  F01A         	goto	u4511
  2441   00345C  EF33  F01A         	goto	u4510
  2442   003460                     u4511:
  2443   003460  0E01               	movlw	1
  2444   003462  EF34  F01A         	goto	u4512
  2445   003466                     u4510:
  2446   003466  0E00               	movlw	0
  2447   003468                     u4512:
  2448   003468  1424               	andwf	??_turnCalibration^0,w,c
  2449   00346A  A0E8               	btfss	wreg,0,c
  2450   00346C  EF3A  F01A         	goto	u4521
  2451   003470  EF3C  F01A         	goto	u4520
  2452   003474                     u4521:
  2453   003474  EF6D  F019         	goto	l622
  2454   003478                     u4520:
  2455   003478                     
  2456                           ;dc_motor.c: 386:     LATDbits.LATD3=0;
  2457   003478  967C               	bcf	124,3,c	;volatile
  2458   00347A                     
  2459                           ;dc_motor.c: 387:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2460   00347A  0EA3               	movlw	163
  2461   00347C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2462   00347E  0E57               	movlw	87
  2463   003480  6E24               	movwf	??_turnCalibration^0,c
  2464   003482  0E02               	movlw	2
  2465   003484                     u5047:
  2466   003484  2EE8               	decfsz	wreg,f,c
  2467   003486  D7FE               	bra	u5047
  2468   003488  2E24               	decfsz	??_turnCalibration^0,f,c
  2469   00348A  D7FC               	bra	u5047
  2470   00348C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2471   00348E  D7FA               	bra	u5047
  2472   003490  D000               	nop2	
  2473   003492  0012               	return		;funcret
  2474   003494                     __end_of_turnCalibration:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _sprintf *****************
  2478 ;; Defined at:
  2479 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2482 ;;		 -> main@buf(100), 
  2483 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2484 ;;		 -> STR_2(36), STR_1(36), 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2487 ;;  ap              2   12[BANK0 ] PTR void [1]
  2488 ;;		 -> ?_sprintf(2), 
  2489 ;;  ret             2    0        int 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2    0[BANK0 ] int 
  2492 ;; Registers used:
  2493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2499 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2500 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;Total ram usage:       25 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 8
  2506 ;; This function calls:
  2507 ;;		_vfprintf
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text2
  2514   0046A6                     __ptext2:
  2515                           	callstack 0
  2516   0046A6                     _sprintf:
  2517                           	callstack 22
  2518   0046A6  0E64               	movlw	low (?_sprintf+4)
  2519   0046A8  0100               	movlb	0	; () banked
  2520   0046AA  6F6C               	movwf	sprintf@ap& (0+255),b
  2521   0046AC  0E00               	movlw	high (?_sprintf+4)
  2522   0046AE  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2523   0046B0  C060  F06E         	movff	sprintf@s,sprintf@f
  2524   0046B4  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2525   0046B8                     
  2526                           ; BSR set to: 0
  2527   0046B8  0E00               	movlw	0
  2528   0046BA  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2529   0046BC  0E00               	movlw	0
  2530   0046BE  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2531   0046C0                     
  2532                           ; BSR set to: 0
  2533   0046C0  0E00               	movlw	0
  2534   0046C2  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2535   0046C4  0E00               	movlw	0
  2536   0046C6  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2537   0046C8                     
  2538                           ; BSR set to: 0
  2539   0046C8  0E6E               	movlw	low sprintf@f
  2540   0046CA  6E51               	movwf	vfprintf@fp^0,c
  2541   0046CC  0E00               	movlw	high sprintf@f
  2542   0046CE  6E52               	movwf	(vfprintf@fp+1)^0,c
  2543   0046D0  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2544   0046D4  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2545   0046D8  0E6C               	movlw	low sprintf@ap
  2546   0046DA  6E55               	movwf	vfprintf@ap^0,c
  2547   0046DC  0E00               	movlw	high sprintf@ap
  2548   0046DE  6E56               	movwf	(vfprintf@ap+1)^0,c
  2549   0046E0  ECE9  F024         	call	_vfprintf	;wreg free
  2550   0046E4  0100               	movlb	0	; () banked
  2551   0046E6  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2552   0046E8  2560               	addwf	sprintf@s& (0+255),w,b
  2553   0046EA  6ED9               	movwf	fsr2l,c
  2554   0046EC  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2555   0046EE  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2556   0046F0  6EDA               	movwf	fsr2h,c
  2557   0046F2  0E00               	movlw	0
  2558   0046F4  6EDF               	movwf	indf2,c
  2559   0046F6                     
  2560                           ; BSR set to: 0
  2561   0046F6  0012               	return		;funcret
  2562   0046F8                     __end_of_sprintf:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _vfprintf *****************
  2566 ;; Defined at:
  2567 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2570 ;;		 -> sprintf@f(11), 
  2571 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2572 ;;		 -> STR_2(36), STR_1(36), 
  2573 ;;  ap              2   84[COMRAM] PTR PTR void 
  2574 ;;		 -> sprintf@ap(2), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2577 ;;		 -> STR_2(36), STR_1(36), 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2   80[COMRAM] int 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;Total ram usage:        8 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 7
  2594 ;; This function calls:
  2595 ;;		_vfpfcnvrt
  2596 ;; This function is called by:
  2597 ;;		_sprintf
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text3
  2602   0049D2                     __ptext3:
  2603                           	callstack 0
  2604   0049D2                     _vfprintf:
  2605                           	callstack 22
  2606   0049D2                     
  2607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2608   0049D2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2609   0049D6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2612   0049DA  EFFD  F024         	goto	l4352
  2613   0049DE                     l4350:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2616   0049DE  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2617   0049E2  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2618   0049E6  0E57               	movlw	low vfprintf@cfmt
  2619   0049E8  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2620   0049EA  0E00               	movlw	high vfprintf@cfmt
  2621   0049EC  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2622   0049EE  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2623   0049F2  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2624   0049F6  EC50  F01D         	call	_vfpfcnvrt	;wreg free
  2625   0049FA                     l4352:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2628   0049FA  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2629   0049FE  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2630   004A02                     	if	0	;tblptru may be non-zero
  2631   004A02                     	endif
  2632   004A02                     	if	0	;tblptru may be non-zero
  2633   004A02                     	endif
  2634   004A02  0008               	tblrd		*
  2635   004A04  50F5               	movf	tablat,w,c
  2636   004A06  0900               	iorlw	0
  2637   004A08  A4D8               	btfss	status,2,c
  2638   004A0A  EF09  F025         	goto	u4051
  2639   004A0E  EF0B  F025         	goto	u4050
  2640   004A12                     u4051:
  2641   004A12  EFEF  F024         	goto	l4350
  2642   004A16                     u4050:
  2643   004A16                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2645   004A16  0E00               	movlw	0
  2646   004A18  6E52               	movwf	(?_vfprintf+1)^0,c
  2647   004A1A  0E00               	movlw	0
  2648   004A1C  6E51               	movwf	?_vfprintf^0,c
  2649   004A1E  0012               	return		;funcret
  2650   004A20                     __end_of_vfprintf:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _vfpfcnvrt *****************
  2654 ;; Defined at:
  2655 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2658 ;;		 -> sprintf@f(11), 
  2659 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2660 ;;		 -> vfprintf@cfmt(2), 
  2661 ;;  ap              2   66[COMRAM] PTR PTR void 
  2662 ;;		 -> sprintf@ap(2), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  convarg         8   70[COMRAM] struct .
  2665 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2666 ;;		 -> STR_2(36), STR_1(36), 
  2667 ;;  i               2    0        int 
  2668 ;;  done            2    0        int 
  2669 ;;  c               1    0        unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2679 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;Total ram usage:       18 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 6
  2686 ;; This function calls:
  2687 ;;		_dtoa
  2688 ;;		_fputc
  2689 ;; This function is called by:
  2690 ;;		_vfprintf
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text4
  2695   003AA0                     __ptext4:
  2696                           	callstack 0
  2697   003AA0                     _vfpfcnvrt:
  2698                           	callstack 22
  2699   003AA0                     
  2700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2701   003AA0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702   003AA4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703   003AA8  CFDE FFF6          	movff	postinc2,tblptrl
  2704   003AAC  CFDD FFF7          	movff	postdec2,tblptrh
  2705   003AB0                     	if	0	;tblptru may be non-zero
  2706   003AB0                     	endif
  2707   003AB0                     	if	0	;tblptru may be non-zero
  2708   003AB0                     	endif
  2709   003AB0  0008               	tblrd		*
  2710   003AB2  50F5               	movf	tablat,w,c
  2711   003AB4  0A25               	xorlw	37
  2712   003AB6  A4D8               	btfss	status,2,c
  2713   003AB8  EF60  F01D         	goto	u3391
  2714   003ABC  EF62  F01D         	goto	u3390
  2715   003AC0                     u3391:
  2716   003AC0  EFE2  F01D         	goto	l3906
  2717   003AC4                     u3390:
  2718   003AC4                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2720   003AC4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2721   003AC8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2722   003ACC  2ADE               	incf	postinc2,f,c
  2723   003ACE  0E00               	movlw	0
  2724   003AD0  22DD               	addwfc	postdec2,f,c
  2725   003AD2                     
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2727   003AD2  0E00               	movlw	0
  2728   003AD4  0101               	movlb	1	; () banked
  2729   003AD6  6F5D               	movwf	(_width+1)& (0+255),b
  2730   003AD8  0E00               	movlw	0
  2731   003ADA  6F5C               	movwf	_width& (0+255),b
  2732   003ADC  C15C  F0F2         	movff	_width,_flags
  2733   003AE0                     
  2734                           ; BSR set to: 1
  2735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2736   003AE0  695E               	setf	_prec& (0+255),b
  2737   003AE2  695F               	setf	(_prec+1)& (0+255),b
  2738   003AE4                     
  2739                           ; BSR set to: 1
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2741   003AE4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2742   003AE8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2743   003AEC  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2744   003AF0  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2745   003AF4                     
  2746                           ; BSR set to: 1
  2747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2748   003AF4  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2749   003AF8  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2750   003AFC                     	if	0	;tblptru may be non-zero
  2751   003AFC                     	endif
  2752   003AFC                     	if	0	;tblptru may be non-zero
  2753   003AFC                     	endif
  2754   003AFC  0008               	tblrd		*
  2755   003AFE  50F5               	movf	tablat,w,c
  2756   003B00  0A64               	xorlw	100
  2757   003B02  B4D8               	btfsc	status,2,c
  2758   003B04  EF86  F01D         	goto	u3401
  2759   003B08  EF88  F01D         	goto	u3400
  2760   003B0C                     u3401:
  2761   003B0C  EF96  F01D         	goto	l3896
  2762   003B10                     u3400:
  2763   003B10                     
  2764                           ; BSR set to: 1
  2765   003B10  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2766   003B14  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2767   003B18                     	if	0	;tblptru may be non-zero
  2768   003B18                     	endif
  2769   003B18                     	if	0	;tblptru may be non-zero
  2770   003B18                     	endif
  2771   003B18  0008               	tblrd		*
  2772   003B1A  50F5               	movf	tablat,w,c
  2773   003B1C  0A69               	xorlw	105
  2774   003B1E  A4D8               	btfss	status,2,c
  2775   003B20  EF94  F01D         	goto	u3411
  2776   003B24  EF96  F01D         	goto	u3410
  2777   003B28                     u3411:
  2778   003B28  EFD9  F01D         	goto	l3902
  2779   003B2C                     u3410:
  2780   003B2C                     l3896:
  2781                           
  2782                           ; BSR set to: 1
  2783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2784   003B2C  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2785   003B30  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2786   003B34  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2787   003B38  0E02               	movlw	2
  2788   003B3A  26DE               	addwf	postinc2,f,c
  2789   003B3C  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2790   003B40  0E00               	movlw	0
  2791   003B42  22DD               	addwfc	postdec2,f,c
  2792   003B44  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2793   003B48  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2794   003B4C  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2795   003B50  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2796   003B54  0E00               	movlw	0
  2797   003B56  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2798   003B58  0EFF               	movlw	-1
  2799   003B5A  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2800   003B5C  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2801   003B5E  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2802   003B60  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2803   003B62  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2804   003B64  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2807   003B66  0E01               	movlw	1
  2808   003B68  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2809   003B6A  6E45               	movwf	??_vfpfcnvrt^0,c
  2810   003B6C  0E00               	movlw	0
  2811   003B6E  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2812   003B70  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2813   003B72  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2814   003B76  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2815   003B7A  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2816   003B7E  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2817   003B82                     
  2818                           ; BSR set to: 1
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2820   003B82  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2821   003B86  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2822   003B8A  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2823   003B8E  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2824   003B92  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2825   003B96  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2826   003B9A  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2827   003B9E  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2828   003BA2  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2829   003BA6  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2830   003BAA  EC10  F017         	call	_dtoa	;wreg free
  2831   003BAE  EFF6  F01D         	goto	l1448
  2832   003BB2                     l3902:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2835   003BB2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836   003BB6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837   003BBA  2ADE               	incf	postinc2,f,c
  2838   003BBC  0E00               	movlw	0
  2839   003BBE  22DD               	addwfc	postdec2,f,c
  2840   003BC0  EFF6  F01D         	goto	l1448
  2841   003BC4                     l3906:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2844   003BC4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845   003BC8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846   003BCC  CFDE FFF6          	movff	postinc2,tblptrl
  2847   003BD0  CFDD FFF7          	movff	postdec2,tblptrh
  2848   003BD4                     	if	0	;tblptru may be non-zero
  2849   003BD4                     	endif
  2850   003BD4                     	if	0	;tblptru may be non-zero
  2851   003BD4                     	endif
  2852   003BD4  0008               	tblrd		*
  2853   003BD6  50F5               	movf	tablat,w,c
  2854   003BD8  6E01               	movwf	fputc@c^0,c
  2855   003BDA  6A02               	clrf	(fputc@c+1)^0,c
  2856   003BDC  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2857   003BE0  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2858   003BE4  EC79  F01E         	call	_fputc	;wreg free
  2859   003BE8  EFD9  F01D         	goto	l3902
  2860   003BEC                     l1448:
  2861   003BEC  0012               	return		;funcret
  2862   003BEE                     __end_of_vfpfcnvrt:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _dtoa *****************
  2866 ;; Defined at:
  2867 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2870 ;;		 -> sprintf@f(11), 
  2871 ;;  d               8   29[COMRAM] long long 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  n               8   51[COMRAM] long long 
  2874 ;;  i               2   59[COMRAM] int 
  2875 ;;  w               2   49[COMRAM] int 
  2876 ;;  p               2   47[COMRAM] int 
  2877 ;;  s               1   61[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2887 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;Total ram usage:       35 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 5
  2894 ;; This function calls:
  2895 ;;		___aodiv
  2896 ;;		___aomod
  2897 ;;		_abs
  2898 ;;		_pad
  2899 ;; This function is called by:
  2900 ;;		_vfpfcnvrt
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text5
  2905   002E20                     __ptext5:
  2906                           	callstack 0
  2907   002E20                     _dtoa:
  2908                           	callstack 22
  2909   002E20                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2911   002E20  C01E  F034         	movff	dtoa@d,dtoa@n
  2912   002E24  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2913   002E28  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2914   002E2C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2915   002E30  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2916   002E34  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2917   002E38  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2918   002E3C  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2919   002E40                     
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2921   002E40  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2922   002E42  EF25  F017         	goto	u2871
  2923   002E46  EF28  F017         	goto	u2870
  2924   002E4A                     u2871:
  2925   002E4A  0E01               	movlw	1
  2926   002E4C  EF29  F017         	goto	u2880
  2927   002E50                     u2870:
  2928   002E50  0E00               	movlw	0
  2929   002E52                     u2880:
  2930   002E52  6E3E               	movwf	dtoa@s^0,c
  2931   002E54                     
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2933   002E54  503E               	movf	dtoa@s^0,w,c
  2934   002E56  B4D8               	btfsc	status,2,c
  2935   002E58  EF30  F017         	goto	u2891
  2936   002E5C  EF32  F017         	goto	u2890
  2937   002E60                     u2891:
  2938   002E60  EF42  F017         	goto	l3572
  2939   002E64                     u2890:
  2940   002E64                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2942   002E64  1E3B               	comf	(dtoa@n+7)^0,f,c
  2943   002E66  1E3A               	comf	(dtoa@n+6)^0,f,c
  2944   002E68  1E39               	comf	(dtoa@n+5)^0,f,c
  2945   002E6A  1E38               	comf	(dtoa@n+4)^0,f,c
  2946   002E6C  1E37               	comf	(dtoa@n+3)^0,f,c
  2947   002E6E  1E36               	comf	(dtoa@n+2)^0,f,c
  2948   002E70  1E35               	comf	(dtoa@n+1)^0,f,c
  2949   002E72  6C34               	negf	dtoa@n^0,c
  2950   002E74  0E00               	movlw	0
  2951   002E76  2235               	addwfc	(dtoa@n+1)^0,f,c
  2952   002E78  2236               	addwfc	(dtoa@n+2)^0,f,c
  2953   002E7A  2237               	addwfc	(dtoa@n+3)^0,f,c
  2954   002E7C  2238               	addwfc	(dtoa@n+4)^0,f,c
  2955   002E7E  2239               	addwfc	(dtoa@n+5)^0,f,c
  2956   002E80  223A               	addwfc	(dtoa@n+6)^0,f,c
  2957   002E82  223B               	addwfc	(dtoa@n+7)^0,f,c
  2958   002E84                     l3572:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2961   002E84  0101               	movlb	1	; () banked
  2962   002E86  BF5F               	btfsc	(_prec+1)& (0+255),7,b
  2963   002E88  EF50  F017         	goto	u2900
  2964   002E8C  515F               	movf	(_prec+1)& (0+255),w,b
  2965   002E8E  E106               	bnz	u2901
  2966   002E90  055E               	decf	_prec& (0+255),w,b
  2967   002E92  B0D8               	btfsc	status,0,c
  2968   002E94  EF4E  F017         	goto	u2901
  2969   002E98  EF50  F017         	goto	u2900
  2970   002E9C                     u2901:
  2971   002E9C  EF56  F017         	goto	l1427
  2972   002EA0                     u2900:
  2973   002EA0                     
  2974                           ; BSR set to: 1
  2975   002EA0  0E00               	movlw	0
  2976   002EA2  6E31               	movwf	(dtoa@p+1)^0,c
  2977   002EA4  0E01               	movlw	1
  2978   002EA6  6E30               	movwf	dtoa@p^0,c
  2979   002EA8  EF5A  F017         	goto	l1429
  2980   002EAC                     l1427:
  2981                           
  2982                           ; BSR set to: 1
  2983   002EAC  C15E  F030         	movff	_prec,dtoa@p
  2984   002EB0  C15F  F031         	movff	_prec+1,dtoa@p+1
  2985   002EB4                     l1429:
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2989   002EB4  C15C  F032         	movff	_width,dtoa@w
  2990   002EB8  C15D  F033         	movff	_width+1,dtoa@w+1
  2991   002EBC                     
  2992                           ; BSR set to: 1
  2993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2994   002EBC  503E               	movf	dtoa@s^0,w,c
  2995   002EBE  B4D8               	btfsc	status,2,c
  2996   002EC0  EF64  F017         	goto	u2911
  2997   002EC4  EF66  F017         	goto	u2910
  2998   002EC8                     u2911:
  2999   002EC8  EF7D  F017         	goto	l1430
  3000   002ECC                     u2910:
  3001   002ECC                     
  3002                           ; BSR set to: 1
  3003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3004   002ECC  0632               	decf	dtoa@w^0,f,c
  3005   002ECE  A0D8               	btfss	status,0,c
  3006   002ED0  0633               	decf	(dtoa@w+1)^0,f,c
  3007   002ED2                     
  3008                           ; BSR set to: 1
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3010   002ED2  503E               	movf	dtoa@s^0,w,c
  3011   002ED4  A4D8               	btfss	status,2,c
  3012   002ED6  EF6F  F017         	goto	u2921
  3013   002EDA  EF71  F017         	goto	u2920
  3014   002EDE                     u2921:
  3015   002EDE  EF77  F017         	goto	l3584
  3016   002EE2                     u2920:
  3017   002EE2                     
  3018                           ; BSR set to: 1
  3019   002EE2  0E00               	movlw	0
  3020   002EE4  6E2F               	movwf	(_dtoa$2723+1)^0,c
  3021   002EE6  0E2B               	movlw	43
  3022   002EE8  6E2E               	movwf	_dtoa$2723^0,c
  3023   002EEA  EF7B  F017         	goto	l3586
  3024   002EEE                     l3584:
  3025                           
  3026                           ; BSR set to: 1
  3027   002EEE  0E00               	movlw	0
  3028   002EF0  6E2F               	movwf	(_dtoa$2723+1)^0,c
  3029   002EF2  0E2D               	movlw	45
  3030   002EF4  6E2E               	movwf	_dtoa$2723^0,c
  3031   002EF6                     l3586:
  3032                           
  3033                           ; BSR set to: 1
  3034   002EF6  C02E  F03E         	movff	_dtoa$2723,dtoa@s
  3035   002EFA                     l1430:
  3036                           
  3037                           ; BSR set to: 1
  3038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3039   002EFA  0E00               	movlw	0
  3040   002EFC  6E3D               	movwf	(dtoa@i+1)^0,c
  3041   002EFE  0E1F               	movlw	31
  3042   002F00  6E3C               	movwf	dtoa@i^0,c
  3043   002F02                     
  3044                           ; BSR set to: 1
  3045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3046   002F02  0E00               	movlw	0
  3047   002F04  6FB3               	movwf	(_dbuf+31)& (0+255),b
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3050   002F06  EF01  F018         	goto	l3600
  3051   002F0A                     l3590:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3054   002F0A  063C               	decf	dtoa@i^0,f,c
  3055   002F0C  A0D8               	btfss	status,0,c
  3056   002F0E  063D               	decf	(dtoa@i+1)^0,f,c
  3057   002F10                     
  3058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3059   002F10  0E94               	movlw	low _dbuf
  3060   002F12  243C               	addwf	dtoa@i^0,w,c
  3061   002F14  6ED9               	movwf	fsr2l,c
  3062   002F16  0E01               	movlw	high _dbuf
  3063   002F18  203D               	addwfc	(dtoa@i+1)^0,w,c
  3064   002F1A  6EDA               	movwf	fsr2h,c
  3065   002F1C  C034  F001         	movff	dtoa@n,___aomod@dividend
  3066   002F20  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3067   002F24  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3068   002F28  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3069   002F2C  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3070   002F30  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3071   002F34  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3072   002F38  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3073   002F3C  0E0A               	movlw	10
  3074   002F3E  6E09               	movwf	___aomod@divisor^0,c
  3075   002F40  0E00               	movlw	0
  3076   002F42  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3077   002F44  0E00               	movlw	0
  3078   002F46  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3079   002F48  0E00               	movlw	0
  3080   002F4A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3081   002F4C  0E00               	movlw	0
  3082   002F4E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3083   002F50  0E00               	movlw	0
  3084   002F52  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3085   002F54  0E00               	movlw	0
  3086   002F56  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3087   002F58  0E00               	movlw	0
  3088   002F5A  6E10               	movwf	(___aomod@divisor+7)^0,c
  3089   002F5C  EC9E  F01C         	call	___aomod	;wreg free
  3090   002F60  C001  F026         	movff	?___aomod,??_dtoa
  3091   002F64  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3092   002F68  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3093   002F6C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3094   002F70  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3095   002F74  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3096   002F78  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3097   002F7C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3098   002F80  C026  F013         	movff	??_dtoa,abs@a
  3099   002F84  C027  F014         	movff	??_dtoa+1,abs@a+1
  3100   002F88  ECC4  F025         	call	_abs	;wreg free
  3101   002F8C  5013               	movf	?_abs^0,w,c
  3102   002F8E  0F30               	addlw	48
  3103   002F90  6EDF               	movwf	indf2,c
  3104   002F92                     
  3105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3106   002F92  0630               	decf	dtoa@p^0,f,c
  3107   002F94  A0D8               	btfss	status,0,c
  3108   002F96  0631               	decf	(dtoa@p+1)^0,f,c
  3109   002F98                     
  3110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3111   002F98  0632               	decf	dtoa@w^0,f,c
  3112   002F9A  A0D8               	btfss	status,0,c
  3113   002F9C  0633               	decf	(dtoa@w+1)^0,f,c
  3114   002F9E                     
  3115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3116   002F9E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3117   002FA2  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3118   002FA6  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3119   002FAA  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3120   002FAE  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3121   002FB2  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3122   002FB6  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3123   002FBA  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3124   002FBE  0E0A               	movlw	10
  3125   002FC0  6E09               	movwf	___aodiv@divisor^0,c
  3126   002FC2  0E00               	movlw	0
  3127   002FC4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3128   002FC6  0E00               	movlw	0
  3129   002FC8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3130   002FCA  0E00               	movlw	0
  3131   002FCC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3132   002FCE  0E00               	movlw	0
  3133   002FD0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3134   002FD2  0E00               	movlw	0
  3135   002FD4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3136   002FD6  0E00               	movlw	0
  3137   002FD8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3138   002FDA  0E00               	movlw	0
  3139   002FDC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3140   002FDE  EC24  F01B         	call	___aodiv	;wreg free
  3141   002FE2  C001  F034         	movff	?___aodiv,dtoa@n
  3142   002FE6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3143   002FEA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3144   002FEE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3145   002FF2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3146   002FF6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3147   002FFA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3148   002FFE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3149   003002                     l3600:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3152   003002  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3153   003004  EF0C  F018         	goto	u2931
  3154   003008  503D               	movf	(dtoa@i+1)^0,w,c
  3155   00300A  E108               	bnz	u2930
  3156   00300C  043C               	decf	dtoa@i^0,w,c
  3157   00300E  A0D8               	btfss	status,0,c
  3158   003010  EF0C  F018         	goto	u2931
  3159   003014  EF0E  F018         	goto	u2930
  3160   003018                     u2931:
  3161   003018  EF2A  F018         	goto	l3606
  3162   00301C                     u2930:
  3163   00301C  5034               	movf	dtoa@n^0,w,c
  3164   00301E  1035               	iorwf	(dtoa@n+1)^0,w,c
  3165   003020  1036               	iorwf	(dtoa@n+2)^0,w,c
  3166   003022  1037               	iorwf	(dtoa@n+3)^0,w,c
  3167   003024  1038               	iorwf	(dtoa@n+4)^0,w,c
  3168   003026  1039               	iorwf	(dtoa@n+5)^0,w,c
  3169   003028  103A               	iorwf	(dtoa@n+6)^0,w,c
  3170   00302A  103B               	iorwf	(dtoa@n+7)^0,w,c
  3171   00302C  A4D8               	btfss	status,2,c
  3172   00302E  EF1B  F018         	goto	u2941
  3173   003032  EF1D  F018         	goto	u2940
  3174   003036                     u2941:
  3175   003036  EF85  F017         	goto	l3590
  3176   00303A                     u2940:
  3177   00303A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3178   00303C  EF2A  F018         	goto	u2950
  3179   003040  5031               	movf	(dtoa@p+1)^0,w,c
  3180   003042  E106               	bnz	u2951
  3181   003044  0430               	decf	dtoa@p^0,w,c
  3182   003046  B0D8               	btfsc	status,0,c
  3183   003048  EF28  F018         	goto	u2951
  3184   00304C  EF2A  F018         	goto	u2950
  3185   003050                     u2951:
  3186   003050  EF85  F017         	goto	l3590
  3187   003054                     u2950:
  3188   003054                     l3606:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3191   003054  503E               	movf	dtoa@s^0,w,c
  3192   003056  B4D8               	btfsc	status,2,c
  3193   003058  EF30  F018         	goto	u2961
  3194   00305C  EF32  F018         	goto	u2960
  3195   003060                     u2961:
  3196   003060  EF3D  F018         	goto	l3612
  3197   003064                     u2960:
  3198   003064                     
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3200   003064  063C               	decf	dtoa@i^0,f,c
  3201   003066  A0D8               	btfss	status,0,c
  3202   003068  063D               	decf	(dtoa@i+1)^0,f,c
  3203   00306A                     
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3205   00306A  0E94               	movlw	low _dbuf
  3206   00306C  243C               	addwf	dtoa@i^0,w,c
  3207   00306E  6ED9               	movwf	fsr2l,c
  3208   003070  0E01               	movlw	high _dbuf
  3209   003072  203D               	addwfc	(dtoa@i+1)^0,w,c
  3210   003074  6EDA               	movwf	fsr2h,c
  3211   003076  C03E  FFDF         	movff	dtoa@s,indf2
  3212   00307A                     l3612:
  3213                           
  3214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3215   00307A  C01C  F011         	movff	dtoa@fp,pad@fp
  3216   00307E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3217   003082  0E94               	movlw	low _dbuf
  3218   003084  243C               	addwf	dtoa@i^0,w,c
  3219   003086  6E13               	movwf	pad@buf^0,c
  3220   003088  0E01               	movlw	high _dbuf
  3221   00308A  203D               	addwfc	(dtoa@i+1)^0,w,c
  3222   00308C  6E14               	movwf	(pad@buf+1)^0,c
  3223   00308E  C032  F015         	movff	dtoa@w,pad@p
  3224   003092  C033  F016         	movff	dtoa@w+1,pad@p+1
  3225   003096  ECC6  F021         	call	_pad	;wreg free
  3226   00309A  0012               	return		;funcret
  3227   00309C                     __end_of_dtoa:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _pad *****************
  3231 ;; Defined at:
  3232 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3235 ;;		 -> sprintf@f(11), 
  3236 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3237 ;;		 -> dbuf(32), 
  3238 ;;  p               2   20[COMRAM] int 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  w               2   25[COMRAM] int 
  3241 ;;  i               2   23[COMRAM] int 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;Total ram usage:       11 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 4
  3258 ;; This function calls:
  3259 ;;		_fputc
  3260 ;;		_fputs
  3261 ;; This function is called by:
  3262 ;;		_dtoa
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text6
  3267   00438C                     __ptext6:
  3268                           	callstack 0
  3269   00438C                     _pad:
  3270                           	callstack 22
  3271   00438C                     
  3272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3273   00438C  BE16               	btfsc	(pad@p+1)^0,7,c
  3274   00438E  EFCB  F021         	goto	u2711
  3275   004392  EFCD  F021         	goto	u2710
  3276   004396                     u2711:
  3277   004396  EFD3  F021         	goto	l3470
  3278   00439A                     u2710:
  3279   00439A  C015  F01A         	movff	pad@p,pad@w
  3280   00439E  C016  F01B         	movff	pad@p+1,pad@w+1
  3281   0043A2  EFD7  F021         	goto	l1418
  3282   0043A6                     l3470:
  3283   0043A6  0E00               	movlw	0
  3284   0043A8  6E1B               	movwf	(pad@w+1)^0,c
  3285   0043AA  0E00               	movlw	0
  3286   0043AC  6E1A               	movwf	pad@w^0,c
  3287   0043AE                     l1418:
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3290   0043AE  0E00               	movlw	0
  3291   0043B0  6E19               	movwf	(pad@i+1)^0,c
  3292   0043B2  0E00               	movlw	0
  3293   0043B4  6E18               	movwf	pad@i^0,c
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3296   0043B6  EFE9  F021         	goto	l3476
  3297   0043BA                     l3472:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3300   0043BA  0E00               	movlw	0
  3301   0043BC  6E02               	movwf	(fputc@c+1)^0,c
  3302   0043BE  0E20               	movlw	32
  3303   0043C0  6E01               	movwf	fputc@c^0,c
  3304   0043C2  C011  F003         	movff	pad@fp,fputc@fp
  3305   0043C6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3306   0043CA  EC79  F01E         	call	_fputc	;wreg free
  3307   0043CE                     
  3308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3309   0043CE  4A18               	infsnz	pad@i^0,f,c
  3310   0043D0  2A19               	incf	(pad@i+1)^0,f,c
  3311   0043D2                     l3476:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3314   0043D2  501A               	movf	pad@w^0,w,c
  3315   0043D4  5C18               	subwf	pad@i^0,w,c
  3316   0043D6  5019               	movf	(pad@i+1)^0,w,c
  3317   0043D8  0A80               	xorlw	128
  3318   0043DA  6E17               	movwf	??_pad^0,c
  3319   0043DC  501B               	movf	(pad@w+1)^0,w,c
  3320   0043DE  0A80               	xorlw	128
  3321   0043E0  5817               	subwfb	??_pad^0,w,c
  3322   0043E2  A0D8               	btfss	status,0,c
  3323   0043E4  EFF6  F021         	goto	u2721
  3324   0043E8  EFF8  F021         	goto	u2720
  3325   0043EC                     u2721:
  3326   0043EC  EFDD  F021         	goto	l3472
  3327   0043F0                     u2720:
  3328   0043F0                     
  3329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3330   0043F0  C013  F00A         	movff	pad@buf,fputs@s
  3331   0043F4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3332   0043F8  C011  F00C         	movff	pad@fp,fputs@fp
  3333   0043FC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3334   004400  EC81  F025         	call	_fputs	;wreg free
  3335   004404  0012               	return		;funcret
  3336   004406                     __end_of_pad:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _fputs *****************
  3340 ;; Defined at:
  3341 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3344 ;;		 -> dbuf(32), 
  3345 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3346 ;;		 -> sprintf@f(11), 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  i               2   14[COMRAM] int 
  3349 ;;  c               1   13[COMRAM] unsigned char 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2    9[COMRAM] int 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:        7 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 3
  3366 ;; This function calls:
  3367 ;;		_fputc
  3368 ;; This function is called by:
  3369 ;;		_pad
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text7
  3374   004B02                     __ptext7:
  3375                           	callstack 0
  3376   004B02                     _fputs:
  3377                           	callstack 22
  3378   004B02  0E00               	movlw	0
  3379   004B04  6E10               	movwf	(fputs@i+1)^0,c
  3380   004B06  0E00               	movlw	0
  3381   004B08  6E0F               	movwf	fputs@i^0,c
  3382   004B0A  EF92  F025         	goto	l3368
  3383   004B0E                     l3364:
  3384   004B0E  C00E  F001         	movff	fputs@c,fputc@c
  3385   004B12  6A02               	clrf	(fputc@c+1)^0,c
  3386   004B14  C00C  F003         	movff	fputs@fp,fputc@fp
  3387   004B18  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3388   004B1C  EC79  F01E         	call	_fputc	;wreg free
  3389   004B20  4A0F               	infsnz	fputs@i^0,f,c
  3390   004B22  2A10               	incf	(fputs@i+1)^0,f,c
  3391   004B24                     l3368:
  3392   004B24  500F               	movf	fputs@i^0,w,c
  3393   004B26  240A               	addwf	fputs@s^0,w,c
  3394   004B28  6ED9               	movwf	fsr2l,c
  3395   004B2A  5010               	movf	(fputs@i+1)^0,w,c
  3396   004B2C  200B               	addwfc	(fputs@s+1)^0,w,c
  3397   004B2E  6EDA               	movwf	fsr2h,c
  3398   004B30  50DF               	movf	indf2,w,c
  3399   004B32  6E0E               	movwf	fputs@c^0,c
  3400   004B34  500E               	movf	fputs@c^0,w,c
  3401   004B36  A4D8               	btfss	status,2,c
  3402   004B38  EFA0  F025         	goto	u2551
  3403   004B3C  EFA2  F025         	goto	u2550
  3404   004B40                     u2551:
  3405   004B40  EF87  F025         	goto	l3364
  3406   004B44                     u2550:
  3407   004B44  0012               	return		;funcret
  3408   004B46                     __end_of_fputs:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _fputc *****************
  3412 ;; Defined at:
  3413 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  c               2    0[COMRAM] int 
  3416 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3417 ;;		 -> sprintf@f(11), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2    0[COMRAM] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;Total ram usage:        9 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 2
  3436 ;; This function calls:
  3437 ;;		_putch
  3438 ;; This function is called by:
  3439 ;;		_pad
  3440 ;;		_vfpfcnvrt
  3441 ;;		_fputs
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text8
  3446   003CF2                     __ptext8:
  3447                           	callstack 0
  3448   003CF2                     _fputc:
  3449                           	callstack 25
  3450   003CF2  5003               	movf	fputc@fp^0,w,c
  3451   003CF4  1004               	iorwf	(fputc@fp+1)^0,w,c
  3452   003CF6  B4D8               	btfsc	status,2,c
  3453   003CF8  EF80  F01E         	goto	u2481
  3454   003CFC  EF82  F01E         	goto	u2480
  3455   003D00                     u2481:
  3456   003D00  EF8B  F01E         	goto	l3324
  3457   003D04                     u2480:
  3458   003D04  5003               	movf	fputc@fp^0,w,c
  3459   003D06  1004               	iorwf	(fputc@fp+1)^0,w,c
  3460   003D08  A4D8               	btfss	status,2,c
  3461   003D0A  EF89  F01E         	goto	u2491
  3462   003D0E  EF8B  F01E         	goto	u2490
  3463   003D12                     u2491:
  3464   003D12  EF90  F01E         	goto	l3326
  3465   003D16                     u2490:
  3466   003D16                     l3324:
  3467   003D16  5001               	movf	fputc@c^0,w,c
  3468   003D18  EC53  F027         	call	_putch
  3469   003D1C  EFDD  F01E         	goto	l1473
  3470   003D20                     l3326:
  3471   003D20  EE20 F009          	lfsr	2,9
  3472   003D24  5003               	movf	fputc@fp^0,w,c
  3473   003D26  26D9               	addwf	fsr2l,f,c
  3474   003D28  5004               	movf	(fputc@fp+1)^0,w,c
  3475   003D2A  22DA               	addwfc	fsr2h,f,c
  3476   003D2C  50DE               	movf	postinc2,w,c
  3477   003D2E  10DE               	iorwf	postinc2,w,c
  3478   003D30  B4D8               	btfsc	status,2,c
  3479   003D32  EF9D  F01E         	goto	u2501
  3480   003D36  EF9F  F01E         	goto	u2500
  3481   003D3A                     u2501:
  3482   003D3A  EFBA  F01E         	goto	l3330
  3483   003D3E                     u2500:
  3484   003D3E  EE20 F009          	lfsr	2,9
  3485   003D42  5003               	movf	fputc@fp^0,w,c
  3486   003D44  26D9               	addwf	fsr2l,f,c
  3487   003D46  5004               	movf	(fputc@fp+1)^0,w,c
  3488   003D48  22DA               	addwfc	fsr2h,f,c
  3489   003D4A  EE10 F003          	lfsr	1,3
  3490   003D4E  5003               	movf	fputc@fp^0,w,c
  3491   003D50  26E1               	addwf	fsr1l,f,c
  3492   003D52  5004               	movf	(fputc@fp+1)^0,w,c
  3493   003D54  22E2               	addwfc	fsr1h,f,c
  3494   003D56  50DE               	movf	postinc2,w,c
  3495   003D58  5CE6               	subwf	postinc1,w,c
  3496   003D5A  50E6               	movf	postinc1,w,c
  3497   003D5C  0A80               	xorlw	128
  3498   003D5E  6E09               	movwf	(??_fputc+4)^0,c
  3499   003D60  50DE               	movf	postinc2,w,c
  3500   003D62  0A80               	xorlw	128
  3501   003D64  5809               	subwfb	(??_fputc+4)^0,w,c
  3502   003D66  B0D8               	btfsc	status,0,c
  3503   003D68  EFB8  F01E         	goto	u2511
  3504   003D6C  EFBA  F01E         	goto	u2510
  3505   003D70                     u2511:
  3506   003D70  EFDD  F01E         	goto	l1473
  3507   003D74                     u2510:
  3508   003D74                     l3330:
  3509   003D74  EE20 F003          	lfsr	2,3
  3510   003D78  5003               	movf	fputc@fp^0,w,c
  3511   003D7A  26D9               	addwf	fsr2l,f,c
  3512   003D7C  5004               	movf	(fputc@fp+1)^0,w,c
  3513   003D7E  22DA               	addwfc	fsr2h,f,c
  3514   003D80  CFDE F005          	movff	postinc2,??_fputc
  3515   003D84  CFDD F006          	movff	postdec2,??_fputc+1
  3516   003D88  C003  FFD9         	movff	fputc@fp,fsr2l
  3517   003D8C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3518   003D90  CFDE F007          	movff	postinc2,??_fputc+2
  3519   003D94  CFDD F008          	movff	postdec2,??_fputc+3
  3520   003D98  5005               	movf	??_fputc^0,w,c
  3521   003D9A  2407               	addwf	(??_fputc+2)^0,w,c
  3522   003D9C  6ED9               	movwf	fsr2l,c
  3523   003D9E  5006               	movf	(??_fputc+1)^0,w,c
  3524   003DA0  2008               	addwfc	(??_fputc+3)^0,w,c
  3525   003DA2  6EDA               	movwf	fsr2h,c
  3526   003DA4  C001  FFDF         	movff	fputc@c,indf2
  3527   003DA8  EE20 F003          	lfsr	2,3
  3528   003DAC  5003               	movf	fputc@fp^0,w,c
  3529   003DAE  26D9               	addwf	fsr2l,f,c
  3530   003DB0  5004               	movf	(fputc@fp+1)^0,w,c
  3531   003DB2  22DA               	addwfc	fsr2h,f,c
  3532   003DB4  2ADE               	incf	postinc2,f,c
  3533   003DB6  0E00               	movlw	0
  3534   003DB8  22DD               	addwfc	postdec2,f,c
  3535   003DBA                     l1473:
  3536   003DBA  0012               	return		;funcret
  3537   003DBC                     __end_of_fputc:
  3538                           	callstack 0
  3539                           
  3540 ;; *************** function _putch *****************
  3541 ;; Defined at:
  3542 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  c               1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  c               1    0[COMRAM] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_fputc
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text9
  3571   004EA6                     __ptext9:
  3572                           	callstack 0
  3573   004EA6                     _putch:
  3574                           	callstack 25
  3575   004EA6  0012               	return		;funcret
  3576   004EA8                     __end_of_putch:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _abs *****************
  3580 ;; Defined at:
  3581 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  a               2   18[COMRAM] int 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  2   18[COMRAM] int 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;Total ram usage:        4 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_dtoa
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text10
  3610   004B88                     __ptext10:
  3611                           	callstack 0
  3612   004B88                     _abs:
  3613                           	callstack 25
  3614   004B88  BE14               	btfsc	(abs@a+1)^0,7,c
  3615   004B8A  EFD1  F025         	goto	u2730
  3616   004B8E  5014               	movf	(abs@a+1)^0,w,c
  3617   004B90  E106               	bnz	u2731
  3618   004B92  0413               	decf	abs@a^0,w,c
  3619   004B94  B0D8               	btfsc	status,0,c
  3620   004B96  EFCF  F025         	goto	u2731
  3621   004B9A  EFD1  F025         	goto	u2730
  3622   004B9E                     u2731:
  3623   004B9E  EFDF  F025         	goto	l1458
  3624   004BA2                     u2730:
  3625   004BA2  C013  F015         	movff	abs@a,??_abs
  3626   004BA6  C014  F016         	movff	abs@a+1,??_abs+1
  3627   004BAA  1E15               	comf	??_abs^0,f,c
  3628   004BAC  1E16               	comf	(??_abs+1)^0,f,c
  3629   004BAE  4A15               	infsnz	??_abs^0,f,c
  3630   004BB0  2A16               	incf	(??_abs+1)^0,f,c
  3631   004BB2  C015  F013         	movff	??_abs,?_abs
  3632   004BB6  C016  F014         	movff	??_abs+1,?_abs+1
  3633   004BBA  EFE3  F025         	goto	l1461
  3634   004BBE                     l1458:
  3635   004BBE  C013  F013         	movff	abs@a,?_abs
  3636   004BC2  C014  F014         	movff	abs@a+1,?_abs+1
  3637   004BC6                     l1461:
  3638   004BC6  0012               	return		;funcret
  3639   004BC8                     __end_of_abs:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function ___aomod *****************
  3643 ;; Defined at:
  3644 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;  dividend        8    0[COMRAM] long long 
  3647 ;;  divisor         8    8[COMRAM] long long 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  sign            1   17[COMRAM] unsigned char 
  3650 ;;  counter         1   16[COMRAM] unsigned char 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  8    0[COMRAM] long long 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3660 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;Total ram usage:       18 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_dtoa
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text11
  3675   00393C                     __ptext11:
  3676                           	callstack 0
  3677   00393C                     ___aomod:
  3678                           	callstack 25
  3679   00393C  0E00               	movlw	0
  3680   00393E  6E12               	movwf	___aomod@sign^0,c
  3681   003940  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3682   003942  EFA7  F01C         	goto	u2650
  3683   003946  EFA5  F01C         	goto	u2651
  3684   00394A                     u2651:
  3685   00394A  EFB9  F01C         	goto	l3438
  3686   00394E                     u2650:
  3687   00394E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3688   003950  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3689   003952  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3690   003954  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3691   003956  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3692   003958  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3693   00395A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3694   00395C  6C01               	negf	___aomod@dividend^0,c
  3695   00395E  0E00               	movlw	0
  3696   003960  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3697   003962  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3698   003964  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3699   003966  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3700   003968  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3701   00396A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3702   00396C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3703   00396E  0E01               	movlw	1
  3704   003970  6E12               	movwf	___aomod@sign^0,c
  3705   003972                     l3438:
  3706   003972  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3707   003974  EFC0  F01C         	goto	u2660
  3708   003978  EFBE  F01C         	goto	u2661
  3709   00397C                     u2661:
  3710   00397C  EFD0  F01C         	goto	l3442
  3711   003980                     u2660:
  3712   003980  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3713   003982  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3714   003984  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3715   003986  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3716   003988  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3717   00398A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3718   00398C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3719   00398E  6C09               	negf	___aomod@divisor^0,c
  3720   003990  0E00               	movlw	0
  3721   003992  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3722   003994  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3723   003996  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3724   003998  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3725   00399A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3726   00399C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3727   00399E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3728   0039A0                     l3442:
  3729   0039A0  5009               	movf	___aomod@divisor^0,w,c
  3730   0039A2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3731   0039A4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3732   0039A6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3733   0039A8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3734   0039AA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3735   0039AC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3736   0039AE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3737   0039B0  B4D8               	btfsc	status,2,c
  3738   0039B2  EFDD  F01C         	goto	u2671
  3739   0039B6  EFDF  F01C         	goto	u2670
  3740   0039BA                     u2671:
  3741   0039BA  EF27  F01D         	goto	l3458
  3742   0039BE                     u2670:
  3743   0039BE  0E01               	movlw	1
  3744   0039C0  6E11               	movwf	___aomod@counter^0,c
  3745   0039C2  EFED  F01C         	goto	l3448
  3746   0039C6                     l3446:
  3747   0039C6  90D8               	bcf	status,0,c
  3748   0039C8  3609               	rlcf	___aomod@divisor^0,f,c
  3749   0039CA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3750   0039CC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3751   0039CE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3752   0039D0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3753   0039D2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3754   0039D4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3755   0039D6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3756   0039D8  2A11               	incf	___aomod@counter^0,f,c
  3757   0039DA                     l3448:
  3758   0039DA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3759   0039DC  EFF2  F01C         	goto	u2681
  3760   0039E0  EFF4  F01C         	goto	u2680
  3761   0039E4                     u2681:
  3762   0039E4  EFE3  F01C         	goto	l3446
  3763   0039E8                     u2680:
  3764   0039E8                     l3450:
  3765   0039E8  5009               	movf	___aomod@divisor^0,w,c
  3766   0039EA  5C01               	subwf	___aomod@dividend^0,w,c
  3767   0039EC  500A               	movf	(___aomod@divisor+1)^0,w,c
  3768   0039EE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3769   0039F0  500B               	movf	(___aomod@divisor+2)^0,w,c
  3770   0039F2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3771   0039F4  500C               	movf	(___aomod@divisor+3)^0,w,c
  3772   0039F6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3773   0039F8  500D               	movf	(___aomod@divisor+4)^0,w,c
  3774   0039FA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3775   0039FC  500E               	movf	(___aomod@divisor+5)^0,w,c
  3776   0039FE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3777   003A00  500F               	movf	(___aomod@divisor+6)^0,w,c
  3778   003A02  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3779   003A04  5010               	movf	(___aomod@divisor+7)^0,w,c
  3780   003A06  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3781   003A08  A0D8               	btfss	status,0,c
  3782   003A0A  EF09  F01D         	goto	u2691
  3783   003A0E  EF0B  F01D         	goto	u2690
  3784   003A12                     u2691:
  3785   003A12  EF1B  F01D         	goto	l3454
  3786   003A16                     u2690:
  3787   003A16  5009               	movf	___aomod@divisor^0,w,c
  3788   003A18  5E01               	subwf	___aomod@dividend^0,f,c
  3789   003A1A  500A               	movf	(___aomod@divisor+1)^0,w,c
  3790   003A1C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3791   003A1E  500B               	movf	(___aomod@divisor+2)^0,w,c
  3792   003A20  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3793   003A22  500C               	movf	(___aomod@divisor+3)^0,w,c
  3794   003A24  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3795   003A26  500D               	movf	(___aomod@divisor+4)^0,w,c
  3796   003A28  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3797   003A2A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3798   003A2C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3799   003A2E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3800   003A30  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3801   003A32  5010               	movf	(___aomod@divisor+7)^0,w,c
  3802   003A34  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3803   003A36                     l3454:
  3804   003A36  90D8               	bcf	status,0,c
  3805   003A38  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3806   003A3A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3807   003A3C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3808   003A3E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3809   003A40  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3810   003A42  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3811   003A44  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3812   003A46  3209               	rrcf	___aomod@divisor^0,f,c
  3813   003A48  2E11               	decfsz	___aomod@counter^0,f,c
  3814   003A4A  EFF4  F01C         	goto	l3450
  3815   003A4E                     l3458:
  3816   003A4E  5012               	movf	___aomod@sign^0,w,c
  3817   003A50  B4D8               	btfsc	status,2,c
  3818   003A52  EF2D  F01D         	goto	u2701
  3819   003A56  EF2F  F01D         	goto	u2700
  3820   003A5A                     u2701:
  3821   003A5A  EF3F  F01D         	goto	l3462
  3822   003A5E                     u2700:
  3823   003A5E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3824   003A60  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3825   003A62  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3826   003A64  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3827   003A66  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3828   003A68  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3829   003A6A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3830   003A6C  6C01               	negf	___aomod@dividend^0,c
  3831   003A6E  0E00               	movlw	0
  3832   003A70  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3833   003A72  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3834   003A74  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3835   003A76  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3836   003A78  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3837   003A7A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3838   003A7C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3839   003A7E                     l3462:
  3840   003A7E  C001  F001         	movff	___aomod@dividend,?___aomod
  3841   003A82  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3842   003A86  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3843   003A8A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3844   003A8E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3845   003A92  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3846   003A96  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3847   003A9A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3848   003A9E  0012               	return		;funcret
  3849   003AA0                     __end_of___aomod:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function ___aodiv *****************
  3853 ;; Defined at:
  3854 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  dividend        8    0[COMRAM] long long 
  3857 ;;  divisor         8    8[COMRAM] long long 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  quotient        8   18[COMRAM] long long 
  3860 ;;  sign            1   17[COMRAM] unsigned char 
  3861 ;;  counter         1   16[COMRAM] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  8    0[COMRAM] long long 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3871 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;Total ram usage:       26 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		Nothing
  3880 ;; This function is called by:
  3881 ;;		_dtoa
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text12
  3886   003648                     __ptext12:
  3887                           	callstack 0
  3888   003648                     ___aodiv:
  3889                           	callstack 25
  3890   003648  0E00               	movlw	0
  3891   00364A  6E12               	movwf	___aodiv@sign^0,c
  3892   00364C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3893   00364E  EF2D  F01B         	goto	u2580
  3894   003652  EF2B  F01B         	goto	u2581
  3895   003656                     u2581:
  3896   003656  EF3F  F01B         	goto	l3394
  3897   00365A                     u2580:
  3898   00365A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3899   00365C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3900   00365E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3901   003660  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3902   003662  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3903   003664  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3904   003666  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3905   003668  6C09               	negf	___aodiv@divisor^0,c
  3906   00366A  0E00               	movlw	0
  3907   00366C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3908   00366E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3909   003670  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3910   003672  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3911   003674  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3912   003676  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3913   003678  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3914   00367A  0E01               	movlw	1
  3915   00367C  6E12               	movwf	___aodiv@sign^0,c
  3916   00367E                     l3394:
  3917   00367E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3918   003680  EF46  F01B         	goto	u2590
  3919   003684  EF44  F01B         	goto	u2591
  3920   003688                     u2591:
  3921   003688  EF58  F01B         	goto	l3400
  3922   00368C                     u2590:
  3923   00368C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3924   00368E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3925   003690  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3926   003692  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3927   003694  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3928   003696  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3929   003698  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3930   00369A  6C01               	negf	___aodiv@dividend^0,c
  3931   00369C  0E00               	movlw	0
  3932   00369E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3933   0036A0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3934   0036A2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3935   0036A4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3936   0036A6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3937   0036A8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3938   0036AA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3939   0036AC  0E01               	movlw	1
  3940   0036AE  1A12               	xorwf	___aodiv@sign^0,f,c
  3941   0036B0                     l3400:
  3942   0036B0  EE20  F013         	lfsr	2,___aodiv@quotient
  3943   0036B4  0E07               	movlw	7
  3944   0036B6                     u2601:
  3945   0036B6  6ADE               	clrf	postinc2,c
  3946   0036B8  06E8               	decf	wreg,f,c
  3947   0036BA  E2FD               	bc	u2601
  3948   0036BC  5009               	movf	___aodiv@divisor^0,w,c
  3949   0036BE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3950   0036C0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3951   0036C2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3952   0036C4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3953   0036C6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3954   0036C8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3955   0036CA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3956   0036CC  B4D8               	btfsc	status,2,c
  3957   0036CE  EF6B  F01B         	goto	u2611
  3958   0036D2  EF6D  F01B         	goto	u2610
  3959   0036D6                     u2611:
  3960   0036D6  EFBF  F01B         	goto	l3422
  3961   0036DA                     u2610:
  3962   0036DA  0E01               	movlw	1
  3963   0036DC  6E11               	movwf	___aodiv@counter^0,c
  3964   0036DE  EF7B  F01B         	goto	l3408
  3965   0036E2                     l3406:
  3966   0036E2  90D8               	bcf	status,0,c
  3967   0036E4  3609               	rlcf	___aodiv@divisor^0,f,c
  3968   0036E6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3969   0036E8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3970   0036EA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3971   0036EC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3972   0036EE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3973   0036F0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3974   0036F2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3975   0036F4  2A11               	incf	___aodiv@counter^0,f,c
  3976   0036F6                     l3408:
  3977   0036F6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3978   0036F8  EF80  F01B         	goto	u2621
  3979   0036FC  EF82  F01B         	goto	u2620
  3980   003700                     u2621:
  3981   003700  EF71  F01B         	goto	l3406
  3982   003704                     u2620:
  3983   003704                     l3410:
  3984   003704  90D8               	bcf	status,0,c
  3985   003706  3613               	rlcf	___aodiv@quotient^0,f,c
  3986   003708  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3987   00370A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3988   00370C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3989   00370E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3990   003710  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3991   003712  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3992   003714  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3993   003716  5009               	movf	___aodiv@divisor^0,w,c
  3994   003718  5C01               	subwf	___aodiv@dividend^0,w,c
  3995   00371A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3996   00371C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3997   00371E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3998   003720  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3999   003722  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4000   003724  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4001   003726  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4002   003728  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4003   00372A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4004   00372C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4005   00372E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4006   003730  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4007   003732  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4008   003734  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4009   003736  A0D8               	btfss	status,0,c
  4010   003738  EFA0  F01B         	goto	u2631
  4011   00373C  EFA2  F01B         	goto	u2630
  4012   003740                     u2631:
  4013   003740  EFB3  F01B         	goto	l3418
  4014   003744                     u2630:
  4015   003744  5009               	movf	___aodiv@divisor^0,w,c
  4016   003746  5E01               	subwf	___aodiv@dividend^0,f,c
  4017   003748  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4018   00374A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4019   00374C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4020   00374E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4021   003750  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4022   003752  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4023   003754  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4024   003756  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4025   003758  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4026   00375A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4027   00375C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4028   00375E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4029   003760  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4030   003762  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4031   003764  8013               	bsf	___aodiv@quotient^0,0,c
  4032   003766                     l3418:
  4033   003766  90D8               	bcf	status,0,c
  4034   003768  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4035   00376A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4036   00376C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4037   00376E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4038   003770  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4039   003772  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4040   003774  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4041   003776  3209               	rrcf	___aodiv@divisor^0,f,c
  4042   003778  2E11               	decfsz	___aodiv@counter^0,f,c
  4043   00377A  EF82  F01B         	goto	l3410
  4044   00377E                     l3422:
  4045   00377E  5012               	movf	___aodiv@sign^0,w,c
  4046   003780  B4D8               	btfsc	status,2,c
  4047   003782  EFC5  F01B         	goto	u2641
  4048   003786  EFC7  F01B         	goto	u2640
  4049   00378A                     u2641:
  4050   00378A  EFD7  F01B         	goto	l3426
  4051   00378E                     u2640:
  4052   00378E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4053   003790  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4054   003792  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4055   003794  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4056   003796  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4057   003798  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4058   00379A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4059   00379C  6C13               	negf	___aodiv@quotient^0,c
  4060   00379E  0E00               	movlw	0
  4061   0037A0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4062   0037A2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4063   0037A4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4064   0037A6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4065   0037A8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4066   0037AA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4067   0037AC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4068   0037AE                     l3426:
  4069   0037AE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4070   0037B2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4071   0037B6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4072   0037BA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4073   0037BE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4074   0037C2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4075   0037C6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4076   0037CA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4077   0037CE  0012               	return		;funcret
  4078   0037D0                     __end_of___aodiv:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _sendStringSerial4 *****************
  4082 ;; Defined at:
  4083 ;;		line 33 in file "serial.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  string          2    1[COMRAM] PTR unsigned char 
  4086 ;;		 -> main@buf(100), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 2
  4105 ;; This function calls:
  4106 ;;		_sendCharSerial4
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text13
  4113   004D2E                     __ptext13:
  4114                           	callstack 0
  4115   004D2E                     _sendStringSerial4:
  4116                           	callstack 28
  4117   004D2E                     
  4118                           ;serial.c: 34:     while (*string!=0){
  4119   004D2E  EFA2  F026         	goto	l4608
  4120   004D32                     l4604:
  4121                           
  4122                           ;serial.c: 35:         sendCharSerial4(*string++);
  4123   004D32  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4124   004D36  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4125   004D3A  50DF               	movf	indf2,w,c
  4126   004D3C  EC2D  F027         	call	_sendCharSerial4
  4127   004D40  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4128   004D42  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4129   004D44                     l4608:
  4130                           
  4131                           ;serial.c: 34:     while (*string!=0){
  4132   004D44  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4133   004D48  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4134   004D4C  50DF               	movf	indf2,w,c
  4135   004D4E  A4D8               	btfss	status,2,c
  4136   004D50  EFAC  F026         	goto	u4391
  4137   004D54  EFAE  F026         	goto	u4390
  4138   004D58                     u4391:
  4139   004D58  EF99  F026         	goto	l4604
  4140   004D5C                     u4390:
  4141   004D5C  0012               	return		;funcret
  4142   004D5E                     __end_of_sendStringSerial4:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _sendCharSerial4 *****************
  4146 ;; Defined at:
  4147 ;;		line 26 in file "serial.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  charToSend      1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  charToSend      1    0[COMRAM] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4165 ;;Total ram usage:        1 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 1
  4168 ;; This function calls:
  4169 ;;		Nothing
  4170 ;; This function is called by:
  4171 ;;		_sendStringSerial4
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text14
  4176   004E5A                     __ptext14:
  4177                           	callstack 0
  4178   004E5A                     _sendCharSerial4:
  4179                           	callstack 28
  4180                           
  4181                           ;incstack = 0
  4182                           ;sendCharSerial4@charToSend stored from wreg
  4183   004E5A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4184   004E5C                     l209:
  4185   004E5C  010E               	movlb	14	; () banked
  4186   004E5E  A537               	btfss	55,2,b	;volatile
  4187   004E60  EF34  F027         	goto	u3421
  4188   004E64  EF36  F027         	goto	u3420
  4189   004E68                     u3421:
  4190   004E68  EF2E  F027         	goto	l209
  4191   004E6C                     u3420:
  4192   004E6C                     
  4193                           ; BSR set to: 14
  4194                           ;serial.c: 28:     TX4REG = charToSend;
  4195   004E6C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4196   004E70                     
  4197                           ; BSR set to: 14
  4198   004E70  0012               	return		;funcret
  4199   004E72                     __end_of_sendCharSerial4:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _readColours *****************
  4203 ;; Defined at:
  4204 ;;		line 105 in file "color.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  vals            2   11[COMRAM] PTR struct RGB
  4207 ;;		 -> vals(8), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      void 
  4212 ;; Registers used:
  4213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;Total ram usage:        2 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 4
  4226 ;; This function calls:
  4227 ;;		_color_read_Blue
  4228 ;;		_color_read_Green
  4229 ;;		_color_read_Red
  4230 ;;		_color_read_lum
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text15
  4237   0044E0                     __ptext15:
  4238                           	callstack 0
  4239   0044E0                     _readColours:
  4240                           	callstack 26
  4241   0044E0                     
  4242                           ;color.c: 107:     vals ->R = color_read_Red();
  4243   0044E0  EC71  F024         	call	_color_read_Red	;wreg free
  4244   0044E4  C00C  FFD9         	movff	readColours@vals,fsr2l
  4245   0044E8  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  4246   0044EC  C005  FFDE         	movff	?_color_read_Red,postinc2
  4247   0044F0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4248                           
  4249                           ;color.c: 108:     vals ->B = color_read_Blue();
  4250   0044F4  ECC1  F024         	call	_color_read_Blue	;wreg free
  4251   0044F8  EE20 F004          	lfsr	2,4
  4252   0044FC  500C               	movf	readColours@vals^0,w,c
  4253   0044FE  26D9               	addwf	fsr2l,f,c
  4254   004500  500D               	movf	(readColours@vals+1)^0,w,c
  4255   004502  22DA               	addwfc	fsr2h,f,c
  4256   004504  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4257   004508  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4258                           
  4259                           ;color.c: 109:     vals ->G = color_read_Green();
  4260   00450C  EC99  F024         	call	_color_read_Green	;wreg free
  4261   004510  EE20 F002          	lfsr	2,2
  4262   004514  500C               	movf	readColours@vals^0,w,c
  4263   004516  26D9               	addwf	fsr2l,f,c
  4264   004518  500D               	movf	(readColours@vals+1)^0,w,c
  4265   00451A  22DA               	addwfc	fsr2h,f,c
  4266   00451C  C005  FFDE         	movff	?_color_read_Green,postinc2
  4267   004520  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4268                           
  4269                           ;color.c: 110:     vals ->L = color_read_lum();
  4270   004524  EC49  F024         	call	_color_read_lum	;wreg free
  4271   004528  EE20 F006          	lfsr	2,6
  4272   00452C  500C               	movf	readColours@vals^0,w,c
  4273   00452E  26D9               	addwf	fsr2l,f,c
  4274   004530  500D               	movf	(readColours@vals+1)^0,w,c
  4275   004532  22DA               	addwfc	fsr2h,f,c
  4276   004534  C005  FFDE         	movff	?_color_read_lum,postinc2
  4277   004538  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  4278   00453C  0012               	return		;funcret
  4279   00453E                     __end_of_readColours:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _color_read_lum *****************
  4283 ;; Defined at:
  4284 ;;		line 49 in file "color.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;		None
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  tmp             2    9[COMRAM] unsigned int 
  4289 ;; Return value:  Size  Location     Type
  4290 ;;                  2    4[COMRAM] unsigned int 
  4291 ;; Registers used:
  4292 ;;		wreg, status,2, status,0, cstack
  4293 ;; Tracked objects:
  4294 ;;		On entry : 0/0
  4295 ;;		On exit  : 0/0
  4296 ;;		Unchanged: 0/0
  4297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4300 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;Total ram usage:        7 bytes
  4303 ;; Hardware stack levels used: 1
  4304 ;; Hardware stack levels required when called: 3
  4305 ;; This function calls:
  4306 ;;		_I2C_2_Master_Read
  4307 ;;		_I2C_2_Master_RepStart
  4308 ;;		_I2C_2_Master_Start
  4309 ;;		_I2C_2_Master_Stop
  4310 ;;		_I2C_2_Master_Write
  4311 ;; This function is called by:
  4312 ;;		_readColours
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text16
  4317   004892                     __ptext16:
  4318                           	callstack 0
  4319   004892                     _color_read_lum:
  4320                           	callstack 26
  4321   004892                     
  4322                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  4323   004892  EC49  F027         	call	_I2C_2_Master_Start	;wreg free
  4324                           
  4325                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  4326   004896  0E52               	movlw	82
  4327   004898  EC39  F027         	call	_I2C_2_Master_Write
  4328                           
  4329                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  4330   00489C  0EB4               	movlw	180
  4331   00489E  EC39  F027         	call	_I2C_2_Master_Write
  4332                           
  4333                           ;color.c: 55:  I2C_2_Master_RepStart();
  4334   0048A2  EC3F  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4335                           
  4336                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4337   0048A6  0E53               	movlw	83
  4338   0048A8  EC39  F027         	call	_I2C_2_Master_Write
  4339                           
  4340                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4341   0048AC  0E01               	movlw	1
  4342   0048AE  ECA3  F025         	call	_I2C_2_Master_Read
  4343   0048B2  6E07               	movwf	??_color_read_lum^0,c
  4344   0048B4  5007               	movf	??_color_read_lum^0,w,c
  4345   0048B6  6E0A               	movwf	color_read_lum@tmp^0,c
  4346   0048B8  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  4347                           
  4348                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4349   0048BA  0E00               	movlw	0
  4350   0048BC  ECA3  F025         	call	_I2C_2_Master_Read
  4351   0048C0  6E07               	movwf	??_color_read_lum^0,c
  4352   0048C2  5007               	movf	??_color_read_lum^0,w,c
  4353   0048C4  6E09               	movwf	(??_color_read_lum+2)^0,c
  4354   0048C6  6A08               	clrf	(??_color_read_lum+1)^0,c
  4355   0048C8  500A               	movf	color_read_lum@tmp^0,w,c
  4356   0048CA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  4357   0048CC  6E0A               	movwf	color_read_lum@tmp^0,c
  4358   0048CE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  4359   0048D0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  4360   0048D2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  4361                           
  4362                           ;color.c: 59:  I2C_2_Master_Stop();
  4363   0048D4  EC44  F027         	call	_I2C_2_Master_Stop	;wreg free
  4364   0048D8                     
  4365                           ;color.c: 60:  return tmp;
  4366   0048D8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  4367   0048DC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  4368   0048E0  0012               	return		;funcret
  4369   0048E2                     __end_of_color_read_lum:
  4370                           	callstack 0
  4371                           
  4372 ;; *************** function _color_read_Red *****************
  4373 ;; Defined at:
  4374 ;;		line 63 in file "color.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  tmp             2    9[COMRAM] unsigned int 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  2    4[COMRAM] unsigned int 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0, cstack
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;Total ram usage:        7 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 3
  4395 ;; This function calls:
  4396 ;;		_I2C_2_Master_Read
  4397 ;;		_I2C_2_Master_RepStart
  4398 ;;		_I2C_2_Master_Start
  4399 ;;		_I2C_2_Master_Stop
  4400 ;;		_I2C_2_Master_Write
  4401 ;; This function is called by:
  4402 ;;		_readColours
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text17
  4407   0048E2                     __ptext17:
  4408                           	callstack 0
  4409   0048E2                     _color_read_Red:
  4410                           	callstack 26
  4411   0048E2                     
  4412                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4413   0048E2  EC49  F027         	call	_I2C_2_Master_Start	;wreg free
  4414                           
  4415                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4416   0048E6  0E52               	movlw	82
  4417   0048E8  EC39  F027         	call	_I2C_2_Master_Write
  4418                           
  4419                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  4420   0048EC  0EB6               	movlw	182
  4421   0048EE  EC39  F027         	call	_I2C_2_Master_Write
  4422                           
  4423                           ;color.c: 69:  I2C_2_Master_RepStart();
  4424   0048F2  EC3F  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4425                           
  4426                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4427   0048F6  0E53               	movlw	83
  4428   0048F8  EC39  F027         	call	_I2C_2_Master_Write
  4429                           
  4430                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4431   0048FC  0E01               	movlw	1
  4432   0048FE  ECA3  F025         	call	_I2C_2_Master_Read
  4433   004902  6E07               	movwf	??_color_read_Red^0,c
  4434   004904  5007               	movf	??_color_read_Red^0,w,c
  4435   004906  6E0A               	movwf	color_read_Red@tmp^0,c
  4436   004908  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4437                           
  4438                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4439   00490A  0E00               	movlw	0
  4440   00490C  ECA3  F025         	call	_I2C_2_Master_Read
  4441   004910  6E07               	movwf	??_color_read_Red^0,c
  4442   004912  5007               	movf	??_color_read_Red^0,w,c
  4443   004914  6E09               	movwf	(??_color_read_Red+2)^0,c
  4444   004916  6A08               	clrf	(??_color_read_Red+1)^0,c
  4445   004918  500A               	movf	color_read_Red@tmp^0,w,c
  4446   00491A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4447   00491C  6E0A               	movwf	color_read_Red@tmp^0,c
  4448   00491E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4449   004920  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4450   004922  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4451                           
  4452                           ;color.c: 73:  I2C_2_Master_Stop();
  4453   004924  EC44  F027         	call	_I2C_2_Master_Stop	;wreg free
  4454   004928                     
  4455                           ;color.c: 74:  return tmp;
  4456   004928  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4457   00492C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4458   004930  0012               	return		;funcret
  4459   004932                     __end_of_color_read_Red:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _color_read_Green *****************
  4463 ;; Defined at:
  4464 ;;		line 76 in file "color.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;		None
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  tmp             2    9[COMRAM] unsigned int 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    4[COMRAM] unsigned int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;Total ram usage:        7 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; Hardware stack levels required when called: 3
  4485 ;; This function calls:
  4486 ;;		_I2C_2_Master_Read
  4487 ;;		_I2C_2_Master_RepStart
  4488 ;;		_I2C_2_Master_Start
  4489 ;;		_I2C_2_Master_Stop
  4490 ;;		_I2C_2_Master_Write
  4491 ;; This function is called by:
  4492 ;;		_readColours
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text18
  4497   004932                     __ptext18:
  4498                           	callstack 0
  4499   004932                     _color_read_Green:
  4500                           	callstack 26
  4501   004932                     
  4502                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4503   004932  EC49  F027         	call	_I2C_2_Master_Start	;wreg free
  4504                           
  4505                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4506   004936  0E52               	movlw	82
  4507   004938  EC39  F027         	call	_I2C_2_Master_Write
  4508                           
  4509                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4510   00493C  0EB8               	movlw	184
  4511   00493E  EC39  F027         	call	_I2C_2_Master_Write
  4512                           
  4513                           ;color.c: 82:  I2C_2_Master_RepStart();
  4514   004942  EC3F  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4515                           
  4516                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4517   004946  0E53               	movlw	83
  4518   004948  EC39  F027         	call	_I2C_2_Master_Write
  4519                           
  4520                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4521   00494C  0E01               	movlw	1
  4522   00494E  ECA3  F025         	call	_I2C_2_Master_Read
  4523   004952  6E07               	movwf	??_color_read_Green^0,c
  4524   004954  5007               	movf	??_color_read_Green^0,w,c
  4525   004956  6E0A               	movwf	color_read_Green@tmp^0,c
  4526   004958  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4527                           
  4528                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4529   00495A  0E00               	movlw	0
  4530   00495C  ECA3  F025         	call	_I2C_2_Master_Read
  4531   004960  6E07               	movwf	??_color_read_Green^0,c
  4532   004962  5007               	movf	??_color_read_Green^0,w,c
  4533   004964  6E09               	movwf	(??_color_read_Green+2)^0,c
  4534   004966  6A08               	clrf	(??_color_read_Green+1)^0,c
  4535   004968  500A               	movf	color_read_Green@tmp^0,w,c
  4536   00496A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4537   00496C  6E0A               	movwf	color_read_Green@tmp^0,c
  4538   00496E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4539   004970  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4540   004972  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4541                           
  4542                           ;color.c: 86:  I2C_2_Master_Stop();
  4543   004974  EC44  F027         	call	_I2C_2_Master_Stop	;wreg free
  4544   004978                     
  4545                           ;color.c: 87:  return tmp;
  4546   004978  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4547   00497C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4548   004980  0012               	return		;funcret
  4549   004982                     __end_of_color_read_Green:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function _color_read_Blue *****************
  4553 ;; Defined at:
  4554 ;;		line 90 in file "color.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  tmp             2    9[COMRAM] unsigned int 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  2    4[COMRAM] unsigned int 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;Total ram usage:        7 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 3
  4575 ;; This function calls:
  4576 ;;		_I2C_2_Master_Read
  4577 ;;		_I2C_2_Master_RepStart
  4578 ;;		_I2C_2_Master_Start
  4579 ;;		_I2C_2_Master_Stop
  4580 ;;		_I2C_2_Master_Write
  4581 ;; This function is called by:
  4582 ;;		_readColours
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text19
  4587   004982                     __ptext19:
  4588                           	callstack 0
  4589   004982                     _color_read_Blue:
  4590                           	callstack 26
  4591   004982                     
  4592                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4593   004982  EC49  F027         	call	_I2C_2_Master_Start	;wreg free
  4594                           
  4595                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4596   004986  0E52               	movlw	82
  4597   004988  EC39  F027         	call	_I2C_2_Master_Write
  4598                           
  4599                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4600   00498C  0EBA               	movlw	186
  4601   00498E  EC39  F027         	call	_I2C_2_Master_Write
  4602                           
  4603                           ;color.c: 96:  I2C_2_Master_RepStart();
  4604   004992  EC3F  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4605                           
  4606                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4607   004996  0E53               	movlw	83
  4608   004998  EC39  F027         	call	_I2C_2_Master_Write
  4609                           
  4610                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4611   00499C  0E01               	movlw	1
  4612   00499E  ECA3  F025         	call	_I2C_2_Master_Read
  4613   0049A2  6E07               	movwf	??_color_read_Blue^0,c
  4614   0049A4  5007               	movf	??_color_read_Blue^0,w,c
  4615   0049A6  6E0A               	movwf	color_read_Blue@tmp^0,c
  4616   0049A8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4617                           
  4618                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4619   0049AA  0E00               	movlw	0
  4620   0049AC  ECA3  F025         	call	_I2C_2_Master_Read
  4621   0049B0  6E07               	movwf	??_color_read_Blue^0,c
  4622   0049B2  5007               	movf	??_color_read_Blue^0,w,c
  4623   0049B4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4624   0049B6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4625   0049B8  500A               	movf	color_read_Blue@tmp^0,w,c
  4626   0049BA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4627   0049BC  6E0A               	movwf	color_read_Blue@tmp^0,c
  4628   0049BE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4629   0049C0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4630   0049C2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4631                           
  4632                           ;color.c: 100:  I2C_2_Master_Stop();
  4633   0049C4  EC44  F027         	call	_I2C_2_Master_Stop	;wreg free
  4634   0049C8                     
  4635                           ;color.c: 101:  return tmp;
  4636   0049C8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4637   0049CC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4638   0049D0  0012               	return		;funcret
  4639   0049D2                     __end_of_color_read_Blue:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _I2C_2_Master_RepStart *****************
  4643 ;; Defined at:
  4644 ;;		line 33 in file "i2c.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 2
  4665 ;; This function calls:
  4666 ;;		_I2C_2_Master_Idle
  4667 ;; This function is called by:
  4668 ;;		_color_read_lum
  4669 ;;		_color_read_Red
  4670 ;;		_color_read_Green
  4671 ;;		_color_read_Blue
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text20
  4676   004E7E                     __ptext20:
  4677                           	callstack 0
  4678   004E7E                     _I2C_2_Master_RepStart:
  4679                           	callstack 26
  4680   004E7E                     
  4681                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4682   004E7E  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  4683   004E82                     
  4684                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4685   004E82  010E               	movlb	14	; () banked
  4686   004E84  83DA               	bsf	218,1,b	;volatile
  4687   004E86                     
  4688                           ; BSR set to: 14
  4689   004E86  0012               	return		;funcret
  4690   004E88                     __end_of_I2C_2_Master_RepStart:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _I2C_2_Master_Read *****************
  4694 ;; Defined at:
  4695 ;;		line 51 in file "i2c.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  ack             1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  ack             1    2[COMRAM] unsigned char 
  4700 ;;  tmp             1    3[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      unsigned char 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4713 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4714 ;;Total ram usage:        3 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 2
  4717 ;; This function calls:
  4718 ;;		_I2C_2_Master_Idle
  4719 ;; This function is called by:
  4720 ;;		_color_read_lum
  4721 ;;		_color_read_Red
  4722 ;;		_color_read_Green
  4723 ;;		_color_read_Blue
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text21
  4728   004B46                     __ptext21:
  4729                           	callstack 0
  4730   004B46                     _I2C_2_Master_Read:
  4731                           	callstack 26
  4732                           
  4733                           ; BSR set to: 14
  4734                           ;incstack = 0
  4735                           ;I2C_2_Master_Read@ack stored from wreg
  4736   004B46  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4737   004B48                     
  4738                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4739   004B48  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  4740   004B4C                     
  4741                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4742   004B4C  010E               	movlb	14	; () banked
  4743   004B4E  87DA               	bsf	218,3,b	;volatile
  4744                           
  4745                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4746   004B50  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  4747   004B54                     
  4748                           ;i2c.c: 57:   tmp = SSP2BUF;
  4749   004B54  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4750                           
  4751                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4752   004B58  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  4753   004B5C                     
  4754                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4755   004B5C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4756   004B5E  B4D8               	btfsc	status,2,c
  4757   004B60  EFB4  F025         	goto	u2971
  4758   004B64  EFB8  F025         	goto	u2970
  4759   004B68                     u2971:
  4760   004B68  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4761   004B6A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4762   004B6C  EFB9  F025         	goto	u2988
  4763   004B70                     u2970:
  4764   004B70  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4765   004B72                     u2988:
  4766   004B72  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4767   004B74  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4768   004B76  010E               	movlb	14	; () banked
  4769   004B78  51DA               	movf	218,w,b	;volatile
  4770   004B7A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4771   004B7C  0BDF               	andlw	-33
  4772   004B7E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4773   004B80  6FDA               	movwf	218,b	;volatile
  4774   004B82                     
  4775                           ; BSR set to: 14
  4776                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4777   004B82  89DA               	bsf	218,4,b	;volatile
  4778   004B84                     
  4779                           ; BSR set to: 14
  4780                           ;i2c.c: 61:   return tmp;
  4781   004B84  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4782   004B86                     
  4783                           ; BSR set to: 14
  4784   004B86  0012               	return		;funcret
  4785   004B88                     __end_of_I2C_2_Master_Read:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _initUSART4 *****************
  4789 ;; Defined at:
  4790 ;;		line 4 in file "serial.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 1
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text22
  4819   004E3C                     __ptext22:
  4820                           	callstack 0
  4821   004E3C                     _initUSART4:
  4822                           	callstack 29
  4823   004E3C                     
  4824                           ;serial.c: 5:     RC0PPS = 0x12;
  4825   004E3C  0E12               	movlw	18
  4826   004E3E  010E               	movlb	14	; () banked
  4827   004E40  6F62               	movwf	98,b	;volatile
  4828                           
  4829                           ;serial.c: 6:     RX4PPS = 0x11;
  4830   004E42  0E11               	movlw	17
  4831   004E44  6F15               	movwf	21,b	;volatile
  4832   004E46                     
  4833                           ; BSR set to: 14
  4834                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4835   004E46  97E9               	bcf	233,3,b	;volatile
  4836   004E48                     
  4837                           ; BSR set to: 14
  4838                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4839   004E48  95E8               	bcf	232,2,b	;volatile
  4840                           
  4841                           ;serial.c: 9:     SP4BRGL = 51;
  4842   004E4A  0E33               	movlw	51
  4843   004E4C  6FE5               	movwf	229,b	;volatile
  4844                           
  4845                           ;serial.c: 10:     SP4BRGH = 0;
  4846   004E4E  0E00               	movlw	0
  4847   004E50  6FE6               	movwf	230,b	;volatile
  4848   004E52                     
  4849                           ; BSR set to: 14
  4850                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4851   004E52  89E7               	bsf	231,4,b	;volatile
  4852   004E54                     
  4853                           ; BSR set to: 14
  4854                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4855   004E54  8BE8               	bsf	232,5,b	;volatile
  4856   004E56                     
  4857                           ; BSR set to: 14
  4858                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4859   004E56  8FE7               	bsf	231,7,b	;volatile
  4860   004E58                     
  4861                           ; BSR set to: 14
  4862   004E58  0012               	return		;funcret
  4863   004E5A                     __end_of_initUSART4:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _initDCmotorsPWM *****************
  4867 ;; Defined at:
  4868 ;;		line 6 in file "dc_motor.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text23
  4897   004188                     __ptext23:
  4898                           	callstack 0
  4899   004188                     _initDCmotorsPWM:
  4900                           	callstack 29
  4901   004188                     
  4902                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4903   004188  0E05               	movlw	5
  4904   00418A  010E               	movlb	14	; () banked
  4905   00418C  6F74               	movwf	116,b	;volatile
  4906                           
  4907                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4908   00418E  0E06               	movlw	6
  4909   004190  6F76               	movwf	118,b	;volatile
  4910                           
  4911                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4912   004192  0E07               	movlw	7
  4913   004194  6F69               	movwf	105,b	;volatile
  4914                           
  4915                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4916   004196  0E08               	movlw	8
  4917   004198  6F88               	movwf	136,b	;volatile
  4918   00419A                     
  4919                           ; BSR set to: 14
  4920                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  4921   00419A  9485               	bcf	133,2,c	;volatile
  4922   00419C                     
  4923                           ; BSR set to: 14
  4924                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  4925   00419C  9885               	bcf	133,4,c	;volatile
  4926   00419E                     
  4927                           ; BSR set to: 14
  4928                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  4929   00419E  9E83               	bcf	131,7,c	;volatile
  4930   0041A0                     
  4931                           ; BSR set to: 14
  4932                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  4933   0041A0  9C87               	bcf	135,6,c	;volatile
  4934                           
  4935                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  4936   0041A2  50BD               	movf	189,w,c	;volatile
  4937   0041A4  0B8F               	andlw	-113
  4938   0041A6  0930               	iorlw	48
  4939   0041A8  6EBD               	movwf	189,c	;volatile
  4940                           
  4941                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  4942   0041AA  0EE0               	movlw	-32
  4943   0041AC  16BE               	andwf	190,f,c	;volatile
  4944                           
  4945                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  4946   0041AE  50BF               	movf	191,w,c	;volatile
  4947   0041B0  0BF0               	andlw	-16
  4948   0041B2  0901               	iorlw	1
  4949   0041B4  6EBF               	movwf	191,c	;volatile
  4950   0041B6                     
  4951                           ; BSR set to: 14
  4952                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  4953   0041B6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4954   0041BA                     
  4955                           ; BSR set to: 14
  4956                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  4957   0041BA  8EBD               	bsf	189,7,c	;volatile
  4958                           
  4959                           ;dc_motor.c: 34:     CCPR1H=0;
  4960   0041BC  0E00               	movlw	0
  4961   0041BE  6EAA               	movwf	170,c	;volatile
  4962                           
  4963                           ;dc_motor.c: 35:     CCPR2H=0;
  4964   0041C0  0E00               	movlw	0
  4965   0041C2  6EA6               	movwf	166,c	;volatile
  4966                           
  4967                           ;dc_motor.c: 36:     CCPR3H=0;
  4968   0041C4  0E00               	movlw	0
  4969   0041C6  010F               	movlb	15	; () banked
  4970   0041C8  6F25               	movwf	37,b	;volatile
  4971                           
  4972                           ;dc_motor.c: 37:     CCPR4H=0;
  4973   0041CA  0E00               	movlw	0
  4974   0041CC  6F21               	movwf	33,b	;volatile
  4975                           
  4976                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  4977   0041CE  0EFC               	movlw	-4
  4978   0041D0  16AD               	andwf	173,f,c	;volatile
  4979                           
  4980                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  4981   0041D2  0EF3               	movlw	-13
  4982   0041D4  16AD               	andwf	173,f,c	;volatile
  4983                           
  4984                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  4985   0041D6  0ECF               	movlw	-49
  4986   0041D8  16AD               	andwf	173,f,c	;volatile
  4987                           
  4988                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  4989   0041DA  0E3F               	movlw	-193
  4990   0041DC  16AD               	andwf	173,f,c	;volatile
  4991   0041DE                     
  4992                           ; BSR set to: 15
  4993                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  4994   0041DE  88AB               	bsf	171,4,c	;volatile
  4995                           
  4996                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  4997   0041E0  50AB               	movf	171,w,c	;volatile
  4998   0041E2  0BF0               	andlw	-16
  4999   0041E4  090C               	iorlw	12
  5000   0041E6  6EAB               	movwf	171,c	;volatile
  5001   0041E8                     
  5002                           ; BSR set to: 15
  5003                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  5004   0041E8  8EAB               	bsf	171,7,c	;volatile
  5005   0041EA                     
  5006                           ; BSR set to: 15
  5007                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  5008   0041EA  88A7               	bsf	167,4,c	;volatile
  5009                           
  5010                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  5011   0041EC  50A7               	movf	167,w,c	;volatile
  5012   0041EE  0BF0               	andlw	-16
  5013   0041F0  090C               	iorlw	12
  5014   0041F2  6EA7               	movwf	167,c	;volatile
  5015   0041F4                     
  5016                           ; BSR set to: 15
  5017                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  5018   0041F4  8EA7               	bsf	167,7,c	;volatile
  5019   0041F6                     
  5020                           ; BSR set to: 15
  5021                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  5022   0041F6  8926               	bsf	38,4,b	;volatile
  5023                           
  5024                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  5025   0041F8  5126               	movf	38,w,b	;volatile
  5026   0041FA  0BF0               	andlw	-16
  5027   0041FC  090C               	iorlw	12
  5028   0041FE  6F26               	movwf	38,b	;volatile
  5029   004200                     
  5030                           ; BSR set to: 15
  5031                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  5032   004200  8F26               	bsf	38,7,b	;volatile
  5033   004202                     
  5034                           ; BSR set to: 15
  5035                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  5036   004202  8922               	bsf	34,4,b	;volatile
  5037                           
  5038                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  5039   004204  5122               	movf	34,w,b	;volatile
  5040   004206  0BF0               	andlw	-16
  5041   004208  090C               	iorlw	12
  5042   00420A  6F22               	movwf	34,b	;volatile
  5043   00420C                     
  5044                           ; BSR set to: 15
  5045                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  5046   00420C  8F22               	bsf	34,7,b	;volatile
  5047   00420E                     
  5048                           ; BSR set to: 15
  5049   00420E  0012               	return		;funcret
  5050   004210                     __end_of_initDCmotorsPWM:
  5051                           	callstack 0
  5052                           
  5053 ;; *************** function _go_Home *****************
  5054 ;; Defined at:
  5055 ;;		line 4 in file "Memory.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  5058 ;;		 -> WayBack(50), 
  5059 ;;  Time_forward    2   37[COMRAM] PTR int 
  5060 ;;		 -> Time_forward(100), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  i               2   42[COMRAM] int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;Total ram usage:        9 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 6
  5079 ;; This function calls:
  5080 ;;		_BlueMove
  5081 ;;		_GreenMove
  5082 ;;		_LightBlueMove
  5083 ;;		_OrangeMove
  5084 ;;		_RedMove
  5085 ;;		_ReversePink
  5086 ;;		_ReverseYellow
  5087 ;;		_timed_forward
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text24
  5094   00309C                     __ptext24:
  5095                           	callstack 0
  5096   00309C                     _go_Home:
  5097                           	callstack 24
  5098   00309C                     
  5099                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  5100   00309C  C0F0  F02B         	movff	_move_count,go_Home@i	;volatile
  5101   0030A0  C0F1  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  5102   0030A4                     l4742:
  5103   0030A4  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  5104   0030A6  EF59  F018         	goto	u4530
  5105   0030AA  EF57  F018         	goto	u4531
  5106   0030AE                     u4531:
  5107   0030AE  EF5B  F018         	goto	l4746
  5108   0030B2                     u4530:
  5109   0030B2  EF5D  F019         	goto	l683
  5110   0030B6                     l4746:
  5111                           
  5112                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  5113   0030B6  0EF3               	movlw	low _motorL
  5114   0030B8  6E14               	movwf	timed_forward@mL^0,c
  5115   0030BA  0E00               	movlw	high _motorL
  5116   0030BC  6E15               	movwf	(timed_forward@mL+1)^0,c
  5117   0030BE  0EC0               	movlw	low _motorR
  5118   0030C0  6E16               	movwf	timed_forward@mR^0,c
  5119   0030C2  0E01               	movlw	high _motorR
  5120   0030C4  6E17               	movwf	(timed_forward@mR+1)^0,c
  5121   0030C6  90D8               	bcf	status,0,c
  5122   0030C8  342B               	rlcf	go_Home@i^0,w,c
  5123   0030CA  6ED9               	movwf	fsr2l,c
  5124   0030CC  342C               	rlcf	(go_Home@i+1)^0,w,c
  5125   0030CE  6EDA               	movwf	fsr2h,c
  5126   0030D0  5026               	movf	go_Home@Time_forward^0,w,c
  5127   0030D2  26D9               	addwf	fsr2l,f,c
  5128   0030D4  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  5129   0030D6  22DA               	addwfc	fsr2h,f,c
  5130   0030D8  CFDE F018          	movff	postinc2,timed_forward@time
  5131   0030DC  CFDD F019          	movff	postdec2,timed_forward@time+1
  5132   0030E0  ECDE  F01E         	call	_timed_forward	;wreg free
  5133   0030E4                     
  5134                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  5135   0030E4  502B               	movf	go_Home@i^0,w,c
  5136   0030E6  2424               	addwf	go_Home@WayBack^0,w,c
  5137   0030E8  6E28               	movwf	??_go_Home^0,c
  5138   0030EA  502C               	movf	(go_Home@i+1)^0,w,c
  5139   0030EC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5140   0030EE  6E29               	movwf	(??_go_Home+1)^0,c
  5141   0030F0  0EFF               	movlw	255
  5142   0030F2  2428               	addwf	??_go_Home^0,w,c
  5143   0030F4  6ED9               	movwf	fsr2l,c
  5144   0030F6  0EFF               	movlw	255
  5145   0030F8  2029               	addwfc	(??_go_Home+1)^0,w,c
  5146   0030FA  6EDA               	movwf	fsr2h,c
  5147   0030FC  04DE               	decf	postinc2,w,c
  5148   0030FE  A4D8               	btfss	status,2,c
  5149   003100  EF84  F018         	goto	u4541
  5150   003104  EF86  F018         	goto	u4540
  5151   003108                     u4541:
  5152   003108  EF92  F018         	goto	l4752
  5153   00310C                     u4540:
  5154   00310C                     
  5155                           ;Memory.c: 22:             GreenMove(&motorL, &motorR);
  5156   00310C  0EF3               	movlw	low _motorL
  5157   00310E  6E20               	movwf	GreenMove@mL^0,c
  5158   003110  0E00               	movlw	high _motorL
  5159   003112  6E21               	movwf	(GreenMove@mL+1)^0,c
  5160   003114  0EC0               	movlw	low _motorR
  5161   003116  6E22               	movwf	GreenMove@mR^0,c
  5162   003118  0E01               	movlw	high _motorR
  5163   00311A  6E23               	movwf	(GreenMove@mR+1)^0,c
  5164   00311C  EC41  F026         	call	_GreenMove	;wreg free
  5165                           
  5166                           ;Memory.c: 23:         }
  5167   003120  EF58  F019         	goto	l4776
  5168   003124                     l4752:
  5169   003124  502B               	movf	go_Home@i^0,w,c
  5170   003126  2424               	addwf	go_Home@WayBack^0,w,c
  5171   003128  6E28               	movwf	??_go_Home^0,c
  5172   00312A  502C               	movf	(go_Home@i+1)^0,w,c
  5173   00312C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5174   00312E  6E29               	movwf	(??_go_Home+1)^0,c
  5175   003130  0EFF               	movlw	255
  5176   003132  2428               	addwf	??_go_Home^0,w,c
  5177   003134  6ED9               	movwf	fsr2l,c
  5178   003136  0EFF               	movlw	255
  5179   003138  2029               	addwfc	(??_go_Home+1)^0,w,c
  5180   00313A  6EDA               	movwf	fsr2h,c
  5181   00313C  0E02               	movlw	2
  5182   00313E  18DE               	xorwf	postinc2,w,c
  5183   003140  A4D8               	btfss	status,2,c
  5184   003142  EFA5  F018         	goto	u4551
  5185   003146  EFA7  F018         	goto	u4550
  5186   00314A                     u4551:
  5187   00314A  EFB3  F018         	goto	l4756
  5188   00314E                     u4550:
  5189   00314E                     
  5190                           ;Memory.c: 25:             LightBlueMove(&motorL, &motorR);
  5191   00314E  0EF3               	movlw	low _motorL
  5192   003150  6E20               	movwf	LightBlueMove@mL^0,c
  5193   003152  0E00               	movlw	high _motorL
  5194   003154  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  5195   003156  0EC0               	movlw	low _motorR
  5196   003158  6E22               	movwf	LightBlueMove@mR^0,c
  5197   00315A  0E01               	movlw	high _motorR
  5198   00315C  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  5199   00315E  ECA5  F023         	call	_LightBlueMove	;wreg free
  5200                           
  5201                           ;Memory.c: 26:         }
  5202   003162  EF58  F019         	goto	l4776
  5203   003166                     l4756:
  5204   003166  502B               	movf	go_Home@i^0,w,c
  5205   003168  2424               	addwf	go_Home@WayBack^0,w,c
  5206   00316A  6E28               	movwf	??_go_Home^0,c
  5207   00316C  502C               	movf	(go_Home@i+1)^0,w,c
  5208   00316E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5209   003170  6E29               	movwf	(??_go_Home+1)^0,c
  5210   003172  0EFF               	movlw	255
  5211   003174  2428               	addwf	??_go_Home^0,w,c
  5212   003176  6ED9               	movwf	fsr2l,c
  5213   003178  0EFF               	movlw	255
  5214   00317A  2029               	addwfc	(??_go_Home+1)^0,w,c
  5215   00317C  6EDA               	movwf	fsr2h,c
  5216   00317E  0E03               	movlw	3
  5217   003180  18DE               	xorwf	postinc2,w,c
  5218   003182  A4D8               	btfss	status,2,c
  5219   003184  EFC6  F018         	goto	u4561
  5220   003188  EFC8  F018         	goto	u4560
  5221   00318C                     u4561:
  5222   00318C  EFD4  F018         	goto	l4760
  5223   003190                     u4560:
  5224   003190                     
  5225                           ;Memory.c: 28:             ReverseYellow(&motorL, &motorR);
  5226   003190  0EF3               	movlw	low _motorL
  5227   003192  6E20               	movwf	ReverseYellow@mL^0,c
  5228   003194  0E00               	movlw	high _motorL
  5229   003196  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  5230   003198  0EC0               	movlw	low _motorR
  5231   00319A  6E22               	movwf	ReverseYellow@mR^0,c
  5232   00319C  0E01               	movlw	high _motorR
  5233   00319E  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  5234   0031A0  ECE4  F025         	call	_ReverseYellow	;wreg free
  5235                           
  5236                           ;Memory.c: 29:         }
  5237   0031A4  EF58  F019         	goto	l4776
  5238   0031A8                     l4760:
  5239   0031A8  502B               	movf	go_Home@i^0,w,c
  5240   0031AA  2424               	addwf	go_Home@WayBack^0,w,c
  5241   0031AC  6E28               	movwf	??_go_Home^0,c
  5242   0031AE  502C               	movf	(go_Home@i+1)^0,w,c
  5243   0031B0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5244   0031B2  6E29               	movwf	(??_go_Home+1)^0,c
  5245   0031B4  0EFF               	movlw	255
  5246   0031B6  2428               	addwf	??_go_Home^0,w,c
  5247   0031B8  6ED9               	movwf	fsr2l,c
  5248   0031BA  0EFF               	movlw	255
  5249   0031BC  2029               	addwfc	(??_go_Home+1)^0,w,c
  5250   0031BE  6EDA               	movwf	fsr2h,c
  5251   0031C0  0E04               	movlw	4
  5252   0031C2  18DE               	xorwf	postinc2,w,c
  5253   0031C4  A4D8               	btfss	status,2,c
  5254   0031C6  EFE7  F018         	goto	u4571
  5255   0031CA  EFE9  F018         	goto	u4570
  5256   0031CE                     u4571:
  5257   0031CE  EFF5  F018         	goto	l4764
  5258   0031D2                     u4570:
  5259   0031D2                     
  5260                           ;Memory.c: 31:             BlueMove(&motorL, &motorR);
  5261   0031D2  0EF3               	movlw	low _motorL
  5262   0031D4  6E20               	movwf	BlueMove@mL^0,c
  5263   0031D6  0E00               	movlw	high _motorL
  5264   0031D8  6E21               	movwf	(BlueMove@mL+1)^0,c
  5265   0031DA  0EC0               	movlw	low _motorR
  5266   0031DC  6E22               	movwf	BlueMove@mR^0,c
  5267   0031DE  0E01               	movlw	high _motorR
  5268   0031E0  6E23               	movwf	(BlueMove@mR+1)^0,c
  5269   0031E2  EC3D  F022         	call	_BlueMove	;wreg free
  5270                           
  5271                           ;Memory.c: 32:         }
  5272   0031E6  EF58  F019         	goto	l4776
  5273   0031EA                     l4764:
  5274   0031EA  502B               	movf	go_Home@i^0,w,c
  5275   0031EC  2424               	addwf	go_Home@WayBack^0,w,c
  5276   0031EE  6E28               	movwf	??_go_Home^0,c
  5277   0031F0  502C               	movf	(go_Home@i+1)^0,w,c
  5278   0031F2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5279   0031F4  6E29               	movwf	(??_go_Home+1)^0,c
  5280   0031F6  0EFF               	movlw	255
  5281   0031F8  2428               	addwf	??_go_Home^0,w,c
  5282   0031FA  6ED9               	movwf	fsr2l,c
  5283   0031FC  0EFF               	movlw	255
  5284   0031FE  2029               	addwfc	(??_go_Home+1)^0,w,c
  5285   003200  6EDA               	movwf	fsr2h,c
  5286   003202  0E05               	movlw	5
  5287   003204  18DE               	xorwf	postinc2,w,c
  5288   003206  A4D8               	btfss	status,2,c
  5289   003208  EF08  F019         	goto	u4581
  5290   00320C  EF0A  F019         	goto	u4580
  5291   003210                     u4581:
  5292   003210  EF16  F019         	goto	l4768
  5293   003214                     u4580:
  5294   003214                     
  5295                           ;Memory.c: 34:             RedMove(&motorL, &motorR);
  5296   003214  0EF3               	movlw	low _motorL
  5297   003216  6E20               	movwf	RedMove@mL^0,c
  5298   003218  0E00               	movlw	high _motorL
  5299   00321A  6E21               	movwf	(RedMove@mL+1)^0,c
  5300   00321C  0EC0               	movlw	low _motorR
  5301   00321E  6E22               	movwf	RedMove@mR^0,c
  5302   003220  0E01               	movlw	high _motorR
  5303   003222  6E23               	movwf	(RedMove@mR+1)^0,c
  5304   003224  EC22  F026         	call	_RedMove	;wreg free
  5305                           
  5306                           ;Memory.c: 35:         }
  5307   003228  EF58  F019         	goto	l4776
  5308   00322C                     l4768:
  5309   00322C  502B               	movf	go_Home@i^0,w,c
  5310   00322E  2424               	addwf	go_Home@WayBack^0,w,c
  5311   003230  6E28               	movwf	??_go_Home^0,c
  5312   003232  502C               	movf	(go_Home@i+1)^0,w,c
  5313   003234  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5314   003236  6E29               	movwf	(??_go_Home+1)^0,c
  5315   003238  0EFF               	movlw	255
  5316   00323A  2428               	addwf	??_go_Home^0,w,c
  5317   00323C  6ED9               	movwf	fsr2l,c
  5318   00323E  0EFF               	movlw	255
  5319   003240  2029               	addwfc	(??_go_Home+1)^0,w,c
  5320   003242  6EDA               	movwf	fsr2h,c
  5321   003244  0E06               	movlw	6
  5322   003246  18DE               	xorwf	postinc2,w,c
  5323   003248  A4D8               	btfss	status,2,c
  5324   00324A  EF29  F019         	goto	u4591
  5325   00324E  EF2B  F019         	goto	u4590
  5326   003252                     u4591:
  5327   003252  EF37  F019         	goto	l4772
  5328   003256                     u4590:
  5329   003256                     
  5330                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  5331   003256  0EF3               	movlw	low _motorL
  5332   003258  6E20               	movwf	OrangeMove@mL^0,c
  5333   00325A  0E00               	movlw	high _motorL
  5334   00325C  6E21               	movwf	(OrangeMove@mL+1)^0,c
  5335   00325E  0EC0               	movlw	low _motorR
  5336   003260  6E22               	movwf	OrangeMove@mR^0,c
  5337   003262  0E01               	movlw	high _motorR
  5338   003264  6E23               	movwf	(OrangeMove@mR+1)^0,c
  5339   003266  EC7C  F023         	call	_OrangeMove	;wreg free
  5340                           
  5341                           ;Memory.c: 38:         }
  5342   00326A  EF58  F019         	goto	l4776
  5343   00326E                     l4772:
  5344   00326E  502B               	movf	go_Home@i^0,w,c
  5345   003270  2424               	addwf	go_Home@WayBack^0,w,c
  5346   003272  6E28               	movwf	??_go_Home^0,c
  5347   003274  502C               	movf	(go_Home@i+1)^0,w,c
  5348   003276  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5349   003278  6E29               	movwf	(??_go_Home+1)^0,c
  5350   00327A  0EFF               	movlw	255
  5351   00327C  2428               	addwf	??_go_Home^0,w,c
  5352   00327E  6ED9               	movwf	fsr2l,c
  5353   003280  0EFF               	movlw	255
  5354   003282  2029               	addwfc	(??_go_Home+1)^0,w,c
  5355   003284  6EDA               	movwf	fsr2h,c
  5356   003286  0E07               	movlw	7
  5357   003288  18DE               	xorwf	postinc2,w,c
  5358   00328A  A4D8               	btfss	status,2,c
  5359   00328C  EF4A  F019         	goto	u4601
  5360   003290  EF4C  F019         	goto	u4600
  5361   003294                     u4601:
  5362   003294  EF58  F019         	goto	l677
  5363   003298                     u4600:
  5364   003298                     
  5365                           ;Memory.c: 40:             ReversePink(&motorL, &motorR);
  5366   003298  0EF3               	movlw	low _motorL
  5367   00329A  6E20               	movwf	ReversePink@mL^0,c
  5368   00329C  0E00               	movlw	high _motorL
  5369   00329E  6E21               	movwf	(ReversePink@mL+1)^0,c
  5370   0032A0  0EC0               	movlw	low _motorR
  5371   0032A2  6E22               	movwf	ReversePink@mR^0,c
  5372   0032A4  0E01               	movlw	high _motorR
  5373   0032A6  6E23               	movwf	(ReversePink@mR+1)^0,c
  5374   0032A8  EC03  F026         	call	_ReversePink	;wreg free
  5375   0032AC  EF58  F019         	goto	l4776
  5376   0032B0                     l677:
  5377   0032B0                     l4776:
  5378                           
  5379                           ;Memory.c: 44:   }
  5380   0032B0  062B               	decf	go_Home@i^0,f,c
  5381   0032B2  A0D8               	btfss	status,0,c
  5382   0032B4  062C               	decf	(go_Home@i+1)^0,f,c
  5383   0032B6  EF52  F018         	goto	l4742
  5384   0032BA                     l683:
  5385   0032BA  0012               	return		;funcret
  5386   0032BC                     __end_of_go_Home:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _timed_forward *****************
  5390 ;; Defined at:
  5391 ;;		line 165 in file "dc_motor.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5394 ;;		 -> motorL(9), 
  5395 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5396 ;;		 -> motorR(9), 
  5397 ;;  time            2   23[COMRAM] int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5409 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;Total ram usage:        8 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 3
  5416 ;; This function calls:
  5417 ;;		_delayed_ms
  5418 ;;		_setMotorPWM
  5419 ;; This function is called by:
  5420 ;;		_go_Home
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text25
  5425   003DBC                     __ptext25:
  5426                           	callstack 0
  5427   003DBC                     _timed_forward:
  5428                           	callstack 26
  5429   003DBC                     
  5430                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  5431   003DBC  EE20 F001          	lfsr	2,1
  5432   003DC0  5014               	movf	timed_forward@mL^0,w,c
  5433   003DC2  26D9               	addwf	fsr2l,f,c
  5434   003DC4  5015               	movf	(timed_forward@mL+1)^0,w,c
  5435   003DC6  22DA               	addwfc	fsr2h,f,c
  5436   003DC8  0E01               	movlw	1
  5437   003DCA  6EDF               	movwf	indf2,c
  5438                           
  5439                           ;dc_motor.c: 169:     mR->direction =1;
  5440   003DCC  EE20 F001          	lfsr	2,1
  5441   003DD0  5016               	movf	timed_forward@mR^0,w,c
  5442   003DD2  26D9               	addwf	fsr2l,f,c
  5443   003DD4  5017               	movf	(timed_forward@mR+1)^0,w,c
  5444   003DD6  22DA               	addwfc	fsr2h,f,c
  5445   003DD8  0E01               	movlw	1
  5446   003DDA  6EDF               	movwf	indf2,c
  5447                           
  5448                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  5449   003DDC  EF14  F01F         	goto	l3974
  5450   003DE0                     l3966:
  5451                           
  5452                           ;dc_motor.c: 172:         mL->power+=10;
  5453   003DE0  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5454   003DE4  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5455   003DE8  0E0A               	movlw	10
  5456   003DEA  26DF               	addwf	indf2,f,c
  5457                           
  5458                           ;dc_motor.c: 173:         mR->power+=10;
  5459   003DEC  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5460   003DF0  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5461   003DF4  0E0A               	movlw	10
  5462   003DF6  26DF               	addwf	indf2,f,c
  5463   003DF8                     
  5464                           ;dc_motor.c: 175:         setMotorPWM(mL);
  5465   003DF8  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5466   003DFC  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5467   003E00  ECE8  F01B         	call	_setMotorPWM	;wreg free
  5468   003E04                     
  5469                           ;dc_motor.c: 176:         setMotorPWM(mR);
  5470   003E04  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5471   003E08  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5472   003E0C  ECE8  F01B         	call	_setMotorPWM	;wreg free
  5473   003E10                     
  5474                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5475   003E10  0E02               	movlw	2
  5476   003E12  6E1B               	movwf	(??_timed_forward+1)^0,c
  5477   003E14  0EA0               	movlw	160
  5478   003E16  6E1A               	movwf	??_timed_forward^0,c
  5479   003E18  0E92               	movlw	146
  5480   003E1A                     u5057:
  5481   003E1A  2EE8               	decfsz	wreg,f,c
  5482   003E1C  D7FE               	bra	u5057
  5483   003E1E  2E1A               	decfsz	??_timed_forward^0,f,c
  5484   003E20  D7FC               	bra	u5057
  5485   003E22  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5486   003E24  D7FA               	bra	u5057
  5487   003E26  D000               	nop2	
  5488   003E28                     l3974:
  5489   003E28  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5490   003E2C  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5491   003E30  0E1E               	movlw	30
  5492   003E32  60DF               	cpfslt	indf2,c
  5493   003E34  EF1E  F01F         	goto	u3431
  5494   003E38  EF20  F01F         	goto	u3430
  5495   003E3C                     u3431:
  5496   003E3C  EF2C  F01F         	goto	l3978
  5497   003E40                     u3430:
  5498   003E40  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5499   003E44  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5500   003E48  0E1D               	movlw	29
  5501   003E4A  64DF               	cpfsgt	indf2,c
  5502   003E4C  EF2A  F01F         	goto	u3441
  5503   003E50  EF2C  F01F         	goto	u3440
  5504   003E54                     u3441:
  5505   003E54  EFF0  F01E         	goto	l3966
  5506   003E58                     u3440:
  5507   003E58                     l3978:
  5508                           
  5509                           ;dc_motor.c: 181:     delayed_ms(time);
  5510   003E58  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5511   003E5C  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5512   003E60  EC60  F026         	call	_delayed_ms	;wreg free
  5513   003E64  0012               	return		;funcret
  5514   003E66                     __end_of_timed_forward:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _delayed_ms *****************
  5518 ;; Defined at:
  5519 ;;		line 39 in file "timers.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  time            2    0[COMRAM] int 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  i               2    3[COMRAM] unsigned int 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        5 bytes
  5538 ;; Hardware stack levels used: 1
  5539 ;; Hardware stack levels required when called: 1
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_timed_forward
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text26
  5548   004CC0                     __ptext26:
  5549                           	callstack 0
  5550   004CC0                     _delayed_ms:
  5551                           	callstack 27
  5552   004CC0                     
  5553                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5554   004CC0  0E00               	movlw	0
  5555   004CC2  6E05               	movwf	(delayed_ms@i+1)^0,c
  5556   004CC4  0E00               	movlw	0
  5557   004CC6  6E04               	movwf	delayed_ms@i^0,c
  5558   004CC8  EF70  F026         	goto	l712
  5559   004CCC                     l3648:
  5560                           
  5561                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5562   004CCC  0E15               	movlw	21
  5563   004CCE  6E03               	movwf	??_delayed_ms^0,c
  5564   004CD0  0EC6               	movlw	198
  5565   004CD2                     u5067:
  5566   004CD2  2EE8               	decfsz	wreg,f,c
  5567   004CD4  D7FE               	bra	u5067
  5568   004CD6  2E03               	decfsz	??_delayed_ms^0,f,c
  5569   004CD8  D7FC               	bra	u5067
  5570   004CDA  D000               	nop2	
  5571   004CDC                     
  5572                           ;timers.c: 42:     }
  5573   004CDC  4A04               	infsnz	delayed_ms@i^0,f,c
  5574   004CDE  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5575   004CE0                     l712:
  5576   004CE0  5001               	movf	delayed_ms@time^0,w,c
  5577   004CE2  5C04               	subwf	delayed_ms@i^0,w,c
  5578   004CE4  5002               	movf	(delayed_ms@time+1)^0,w,c
  5579   004CE6  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5580   004CE8  A0D8               	btfss	status,0,c
  5581   004CEA  EF79  F026         	goto	u2991
  5582   004CEE  EF7B  F026         	goto	u2990
  5583   004CF2                     u2991:
  5584   004CF2  EF66  F026         	goto	l3648
  5585   004CF6                     u2990:
  5586   004CF6  0012               	return		;funcret
  5587   004CF8                     __end_of_delayed_ms:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function _ReverseYellow *****************
  5591 ;; Defined at:
  5592 ;;		line 334 in file "dc_motor.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5595 ;;		 -> motorL(9), 
  5596 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5597 ;;		 -> motorR(9), 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5612 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5613 ;;Total ram usage:        4 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 5
  5616 ;; This function calls:
  5617 ;;		_ForwardOneBlock
  5618 ;;		_turnLeft45
  5619 ;; This function is called by:
  5620 ;;		_go_Home
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text27
  5625   004BC8                     __ptext27:
  5626                           	callstack 0
  5627   004BC8                     _ReverseYellow:
  5628                           	callstack 24
  5629   004BC8                     
  5630                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5631   004BC8  0EF3               	movlw	low _motorL
  5632   004BCA  6E1A               	movwf	turnLeft45@mL^0,c
  5633   004BCC  0E00               	movlw	high _motorL
  5634   004BCE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5635   004BD0  0EC0               	movlw	low _motorR
  5636   004BD2  6E1C               	movwf	turnLeft45@mR^0,c
  5637   004BD4  0E01               	movlw	high _motorR
  5638   004BD6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5639   004BD8  EC37  F025         	call	_turnLeft45	;wreg free
  5640                           
  5641                           ;dc_motor.c: 336:     turnLeft45(&motorL, &motorR);
  5642   004BDC  0EF3               	movlw	low _motorL
  5643   004BDE  6E1A               	movwf	turnLeft45@mL^0,c
  5644   004BE0  0E00               	movlw	high _motorL
  5645   004BE2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5646   004BE4  0EC0               	movlw	low _motorR
  5647   004BE6  6E1C               	movwf	turnLeft45@mR^0,c
  5648   004BE8  0E01               	movlw	high _motorR
  5649   004BEA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5650   004BEC  EC37  F025         	call	_turnLeft45	;wreg free
  5651                           
  5652                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  5653   004BF0  0EF3               	movlw	low _motorL
  5654   004BF2  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5655   004BF4  0E00               	movlw	high _motorL
  5656   004BF6  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5657   004BF8  0EC0               	movlw	low _motorR
  5658   004BFA  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5659   004BFC  0E01               	movlw	high _motorR
  5660   004BFE  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5661   004C00  EC9F  F022         	call	_ForwardOneBlock	;wreg free
  5662   004C04  0012               	return		;funcret
  5663   004C06                     __end_of_ReverseYellow:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _ReversePink *****************
  5667 ;; Defined at:
  5668 ;;		line 339 in file "dc_motor.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5671 ;;		 -> motorL(9), 
  5672 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5673 ;;		 -> motorR(9), 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;		None
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  1    wreg      void 
  5678 ;; Registers used:
  5679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5685 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;Total ram usage:        4 bytes
  5690 ;; Hardware stack levels used: 1
  5691 ;; Hardware stack levels required when called: 5
  5692 ;; This function calls:
  5693 ;;		_ForwardOneBlock
  5694 ;;		_turnRight45
  5695 ;; This function is called by:
  5696 ;;		_go_Home
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text28
  5701   004C06                     __ptext28:
  5702                           	callstack 0
  5703   004C06                     _ReversePink:
  5704                           	callstack 24
  5705   004C06                     
  5706                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  5707   004C06  0EF3               	movlw	low _motorL
  5708   004C08  6E1A               	movwf	turnRight45@mL^0,c
  5709   004C0A  0E00               	movlw	high _motorL
  5710   004C0C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5711   004C0E  0EC0               	movlw	low _motorR
  5712   004C10  6E1C               	movwf	turnRight45@mR^0,c
  5713   004C12  0E01               	movlw	high _motorR
  5714   004C14  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5715   004C16  EC10  F025         	call	_turnRight45	;wreg free
  5716                           
  5717                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  5718   004C1A  0EF3               	movlw	low _motorL
  5719   004C1C  6E1A               	movwf	turnRight45@mL^0,c
  5720   004C1E  0E00               	movlw	high _motorL
  5721   004C20  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5722   004C22  0EC0               	movlw	low _motorR
  5723   004C24  6E1C               	movwf	turnRight45@mR^0,c
  5724   004C26  0E01               	movlw	high _motorR
  5725   004C28  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5726   004C2A  EC10  F025         	call	_turnRight45	;wreg free
  5727                           
  5728                           ;dc_motor.c: 342:     ForwardOneBlock(&motorL, &motorR);
  5729   004C2E  0EF3               	movlw	low _motorL
  5730   004C30  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5731   004C32  0E00               	movlw	high _motorL
  5732   004C34  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5733   004C36  0EC0               	movlw	low _motorR
  5734   004C38  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5735   004C3A  0E01               	movlw	high _motorR
  5736   004C3C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5737   004C3E  EC9F  F022         	call	_ForwardOneBlock	;wreg free
  5738   004C42  0012               	return		;funcret
  5739   004C44                     __end_of_ReversePink:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function _ForwardOneBlock *****************
  5743 ;; Defined at:
  5744 ;;		line 238 in file "dc_motor.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5747 ;;		 -> motorL(9), 
  5748 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5749 ;;		 -> motorR(9), 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  1    wreg      void 
  5754 ;; Registers used:
  5755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;Total ram usage:        6 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 4
  5768 ;; This function calls:
  5769 ;;		_fullSpeedAhead
  5770 ;;		_stop
  5771 ;; This function is called by:
  5772 ;;		_ReverseYellow
  5773 ;;		_ReversePink
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text29
  5778   00453E                     __ptext29:
  5779                           	callstack 0
  5780   00453E                     _ForwardOneBlock:
  5781                           	callstack 24
  5782   00453E                     
  5783                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  5784   00453E  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5785   004542  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5786   004546  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5787   00454A  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5788   00454E  EC75  F020         	call	_fullSpeedAhead	;wreg free
  5789   004552                     
  5790                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5791   004552  0EA3               	movlw	163
  5792   004554  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5793   004556  0E57               	movlw	87
  5794   004558  6E1E               	movwf	??_ForwardOneBlock^0,c
  5795   00455A  0E02               	movlw	2
  5796   00455C                     u5077:
  5797   00455C  2EE8               	decfsz	wreg,f,c
  5798   00455E  D7FE               	bra	u5077
  5799   004560  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5800   004562  D7FC               	bra	u5077
  5801   004564  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5802   004566  D7FA               	bra	u5077
  5803   004568  D000               	nop2	
  5804   00456A                     
  5805                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  5806   00456A  0EF3               	movlw	low _motorL
  5807   00456C  6E14               	movwf	stop@mL^0,c
  5808   00456E  0E00               	movlw	high _motorL
  5809   004570  6E15               	movwf	(stop@mL+1)^0,c
  5810   004572  0EC0               	movlw	low _motorR
  5811   004574  6E16               	movwf	stop@mR^0,c
  5812   004576  0E01               	movlw	high _motorR
  5813   004578  6E17               	movwf	(stop@mR+1)^0,c
  5814   00457A  EC49  F021         	call	_stop	;wreg free
  5815                           
  5816                           ;dc_motor.c: 242:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5817   00457E  0E52               	movlw	82
  5818   004580  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5819   004582  0E2B               	movlw	43
  5820   004584  6E1E               	movwf	??_ForwardOneBlock^0,c
  5821   004586  0E00               	movlw	0
  5822   004588                     u5087:
  5823   004588  2EE8               	decfsz	wreg,f,c
  5824   00458A  D7FE               	bra	u5087
  5825   00458C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5826   00458E  D7FC               	bra	u5087
  5827   004590  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5828   004592  D7FA               	bra	u5087
  5829   004594  D000               	nop2	
  5830   004596  0012               	return		;funcret
  5831   004598                     __end_of_ForwardOneBlock:
  5832                           	callstack 0
  5833                           
  5834 ;; *************** function _RedMove *****************
  5835 ;; Defined at:
  5836 ;;		line 262 in file "dc_motor.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5839 ;;		 -> motorL(9), 
  5840 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5841 ;;		 -> motorR(9), 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;Total ram usage:        4 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 5
  5860 ;; This function calls:
  5861 ;;		_reverseDetect
  5862 ;;		_turnRight45
  5863 ;; This function is called by:
  5864 ;;		_main
  5865 ;;		_go_Home
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text30
  5870   004C44                     __ptext30:
  5871                           	callstack 0
  5872   004C44                     _RedMove:
  5873                           	callstack 24
  5874   004C44                     
  5875                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  5876   004C44  0EF3               	movlw	low _motorL
  5877   004C46  6E1A               	movwf	reverseDetect@mL^0,c
  5878   004C48  0E00               	movlw	high _motorL
  5879   004C4A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5880   004C4C  0EC0               	movlw	low _motorR
  5881   004C4E  6E1C               	movwf	reverseDetect@mR^0,c
  5882   004C50  0E01               	movlw	high _motorR
  5883   004C52  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5884   004C54  ECF9  F022         	call	_reverseDetect	;wreg free
  5885                           
  5886                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  5887   004C58  0EF3               	movlw	low _motorL
  5888   004C5A  6E1A               	movwf	turnRight45@mL^0,c
  5889   004C5C  0E00               	movlw	high _motorL
  5890   004C5E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5891   004C60  0EC0               	movlw	low _motorR
  5892   004C62  6E1C               	movwf	turnRight45@mR^0,c
  5893   004C64  0E01               	movlw	high _motorR
  5894   004C66  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5895   004C68  EC10  F025         	call	_turnRight45	;wreg free
  5896                           
  5897                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  5898   004C6C  0EF3               	movlw	low _motorL
  5899   004C6E  6E1A               	movwf	turnRight45@mL^0,c
  5900   004C70  0E00               	movlw	high _motorL
  5901   004C72  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5902   004C74  0EC0               	movlw	low _motorR
  5903   004C76  6E1C               	movwf	turnRight45@mR^0,c
  5904   004C78  0E01               	movlw	high _motorR
  5905   004C7A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5906   004C7C  EC10  F025         	call	_turnRight45	;wreg free
  5907   004C80  0012               	return		;funcret
  5908   004C82                     __end_of_RedMove:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _OrangeMove *****************
  5912 ;; Defined at:
  5913 ;;		line 308 in file "dc_motor.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5916 ;;		 -> motorL(9), 
  5917 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5918 ;;		 -> motorR(9), 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5933 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5934 ;;Total ram usage:        4 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 5
  5937 ;; This function calls:
  5938 ;;		_reverseDetect
  5939 ;;		_turnRight45
  5940 ;; This function is called by:
  5941 ;;		_main
  5942 ;;		_go_Home
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text31
  5947   0046F8                     __ptext31:
  5948                           	callstack 0
  5949   0046F8                     _OrangeMove:
  5950                           	callstack 24
  5951   0046F8                     
  5952                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  5953   0046F8  0EF3               	movlw	low _motorL
  5954   0046FA  6E1A               	movwf	reverseDetect@mL^0,c
  5955   0046FC  0E00               	movlw	high _motorL
  5956   0046FE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5957   004700  0EC0               	movlw	low _motorR
  5958   004702  6E1C               	movwf	reverseDetect@mR^0,c
  5959   004704  0E01               	movlw	high _motorR
  5960   004706  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5961   004708  ECF9  F022         	call	_reverseDetect	;wreg free
  5962                           
  5963                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5964   00470C  0EF3               	movlw	low _motorL
  5965   00470E  6E1A               	movwf	turnRight45@mL^0,c
  5966   004710  0E00               	movlw	high _motorL
  5967   004712  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5968   004714  0EC0               	movlw	low _motorR
  5969   004716  6E1C               	movwf	turnRight45@mR^0,c
  5970   004718  0E01               	movlw	high _motorR
  5971   00471A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5972   00471C  EC10  F025         	call	_turnRight45	;wreg free
  5973                           
  5974                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  5975   004720  0EF3               	movlw	low _motorL
  5976   004722  6E1A               	movwf	turnRight45@mL^0,c
  5977   004724  0E00               	movlw	high _motorL
  5978   004726  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5979   004728  0EC0               	movlw	low _motorR
  5980   00472A  6E1C               	movwf	turnRight45@mR^0,c
  5981   00472C  0E01               	movlw	high _motorR
  5982   00472E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5983   004730  EC10  F025         	call	_turnRight45	;wreg free
  5984                           
  5985                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  5986   004734  0EF3               	movlw	low _motorL
  5987   004736  6E1A               	movwf	turnRight45@mL^0,c
  5988   004738  0E00               	movlw	high _motorL
  5989   00473A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5990   00473C  0EC0               	movlw	low _motorR
  5991   00473E  6E1C               	movwf	turnRight45@mR^0,c
  5992   004740  0E01               	movlw	high _motorR
  5993   004742  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5994   004744  EC10  F025         	call	_turnRight45	;wreg free
  5995   004748  0012               	return		;funcret
  5996   00474A                     __end_of_OrangeMove:
  5997                           	callstack 0
  5998                           
  5999 ;; *************** function _LightBlueMove *****************
  6000 ;; Defined at:
  6001 ;;		line 317 in file "dc_motor.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6004 ;;		 -> motorL(9), 
  6005 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6006 ;;		 -> motorR(9), 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;Total ram usage:        4 bytes
  6023 ;; Hardware stack levels used: 1
  6024 ;; Hardware stack levels required when called: 5
  6025 ;; This function calls:
  6026 ;;		_reverseDetect
  6027 ;;		_turnLeft45
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;;		_go_Home
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text32
  6035   00474A                     __ptext32:
  6036                           	callstack 0
  6037   00474A                     _LightBlueMove:
  6038                           	callstack 24
  6039   00474A                     
  6040                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  6041   00474A  0EF3               	movlw	low _motorL
  6042   00474C  6E1A               	movwf	reverseDetect@mL^0,c
  6043   00474E  0E00               	movlw	high _motorL
  6044   004750  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6045   004752  0EC0               	movlw	low _motorR
  6046   004754  6E1C               	movwf	reverseDetect@mR^0,c
  6047   004756  0E01               	movlw	high _motorR
  6048   004758  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6049   00475A  ECF9  F022         	call	_reverseDetect	;wreg free
  6050                           
  6051                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  6052   00475E  0EF3               	movlw	low _motorL
  6053   004760  6E1A               	movwf	turnLeft45@mL^0,c
  6054   004762  0E00               	movlw	high _motorL
  6055   004764  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6056   004766  0EC0               	movlw	low _motorR
  6057   004768  6E1C               	movwf	turnLeft45@mR^0,c
  6058   00476A  0E01               	movlw	high _motorR
  6059   00476C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6060   00476E  EC37  F025         	call	_turnLeft45	;wreg free
  6061                           
  6062                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  6063   004772  0EF3               	movlw	low _motorL
  6064   004774  6E1A               	movwf	turnLeft45@mL^0,c
  6065   004776  0E00               	movlw	high _motorL
  6066   004778  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6067   00477A  0EC0               	movlw	low _motorR
  6068   00477C  6E1C               	movwf	turnLeft45@mR^0,c
  6069   00477E  0E01               	movlw	high _motorR
  6070   004780  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6071   004782  EC37  F025         	call	_turnLeft45	;wreg free
  6072                           
  6073                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  6074   004786  0EF3               	movlw	low _motorL
  6075   004788  6E1A               	movwf	turnLeft45@mL^0,c
  6076   00478A  0E00               	movlw	high _motorL
  6077   00478C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6078   00478E  0EC0               	movlw	low _motorR
  6079   004790  6E1C               	movwf	turnLeft45@mR^0,c
  6080   004792  0E01               	movlw	high _motorR
  6081   004794  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6082   004796  EC37  F025         	call	_turnLeft45	;wreg free
  6083   00479A  0012               	return		;funcret
  6084   00479C                     __end_of_LightBlueMove:
  6085                           	callstack 0
  6086                           
  6087 ;; *************** function _GreenMove *****************
  6088 ;; Defined at:
  6089 ;;		line 270 in file "dc_motor.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6092 ;;		 -> motorL(9), 
  6093 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6094 ;;		 -> motorR(9), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;Total ram usage:        4 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 5
  6113 ;; This function calls:
  6114 ;;		_reverseDetect
  6115 ;;		_turnLeft45
  6116 ;; This function is called by:
  6117 ;;		_main
  6118 ;;		_go_Home
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text33
  6123   004C82                     __ptext33:
  6124                           	callstack 0
  6125   004C82                     _GreenMove:
  6126                           	callstack 24
  6127   004C82                     
  6128                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  6129   004C82  0EF3               	movlw	low _motorL
  6130   004C84  6E1A               	movwf	reverseDetect@mL^0,c
  6131   004C86  0E00               	movlw	high _motorL
  6132   004C88  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6133   004C8A  0EC0               	movlw	low _motorR
  6134   004C8C  6E1C               	movwf	reverseDetect@mR^0,c
  6135   004C8E  0E01               	movlw	high _motorR
  6136   004C90  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6137   004C92  ECF9  F022         	call	_reverseDetect	;wreg free
  6138                           
  6139                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  6140   004C96  0EF3               	movlw	low _motorL
  6141   004C98  6E1A               	movwf	turnLeft45@mL^0,c
  6142   004C9A  0E00               	movlw	high _motorL
  6143   004C9C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6144   004C9E  0EC0               	movlw	low _motorR
  6145   004CA0  6E1C               	movwf	turnLeft45@mR^0,c
  6146   004CA2  0E01               	movlw	high _motorR
  6147   004CA4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6148   004CA6  EC37  F025         	call	_turnLeft45	;wreg free
  6149                           
  6150                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  6151   004CAA  0EF3               	movlw	low _motorL
  6152   004CAC  6E1A               	movwf	turnLeft45@mL^0,c
  6153   004CAE  0E00               	movlw	high _motorL
  6154   004CB0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6155   004CB2  0EC0               	movlw	low _motorR
  6156   004CB4  6E1C               	movwf	turnLeft45@mR^0,c
  6157   004CB6  0E01               	movlw	high _motorR
  6158   004CB8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6159   004CBA  EC37  F025         	call	_turnLeft45	;wreg free
  6160   004CBE  0012               	return		;funcret
  6161   004CC0                     __end_of_GreenMove:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _BlueMove *****************
  6165 ;; Defined at:
  6166 ;;		line 278 in file "dc_motor.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6169 ;;		 -> motorL(9), 
  6170 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6171 ;;		 -> motorR(9), 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;Total ram usage:        4 bytes
  6188 ;; Hardware stack levels used: 1
  6189 ;; Hardware stack levels required when called: 5
  6190 ;; This function calls:
  6191 ;;		_reverseDetect
  6192 ;;		_turnRight45
  6193 ;; This function is called by:
  6194 ;;		_main
  6195 ;;		_go_Home
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text34
  6200   00447A                     __ptext34:
  6201                           	callstack 0
  6202   00447A                     _BlueMove:
  6203                           	callstack 24
  6204   00447A                     
  6205                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6206   00447A  0EF3               	movlw	low _motorL
  6207   00447C  6E1A               	movwf	reverseDetect@mL^0,c
  6208   00447E  0E00               	movlw	high _motorL
  6209   004480  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6210   004482  0EC0               	movlw	low _motorR
  6211   004484  6E1C               	movwf	reverseDetect@mR^0,c
  6212   004486  0E01               	movlw	high _motorR
  6213   004488  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6214   00448A  ECF9  F022         	call	_reverseDetect	;wreg free
  6215                           
  6216                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  6217   00448E  0EF3               	movlw	low _motorL
  6218   004490  6E1A               	movwf	turnRight45@mL^0,c
  6219   004492  0E00               	movlw	high _motorL
  6220   004494  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6221   004496  0EC0               	movlw	low _motorR
  6222   004498  6E1C               	movwf	turnRight45@mR^0,c
  6223   00449A  0E01               	movlw	high _motorR
  6224   00449C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6225   00449E  EC10  F025         	call	_turnRight45	;wreg free
  6226                           
  6227                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  6228   0044A2  0EF3               	movlw	low _motorL
  6229   0044A4  6E1A               	movwf	turnRight45@mL^0,c
  6230   0044A6  0E00               	movlw	high _motorL
  6231   0044A8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6232   0044AA  0EC0               	movlw	low _motorR
  6233   0044AC  6E1C               	movwf	turnRight45@mR^0,c
  6234   0044AE  0E01               	movlw	high _motorR
  6235   0044B0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6236   0044B2  EC10  F025         	call	_turnRight45	;wreg free
  6237                           
  6238                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6239   0044B6  0EF3               	movlw	low _motorL
  6240   0044B8  6E1A               	movwf	turnRight45@mL^0,c
  6241   0044BA  0E00               	movlw	high _motorL
  6242   0044BC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6243   0044BE  0EC0               	movlw	low _motorR
  6244   0044C0  6E1C               	movwf	turnRight45@mR^0,c
  6245   0044C2  0E01               	movlw	high _motorR
  6246   0044C4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6247   0044C6  EC10  F025         	call	_turnRight45	;wreg free
  6248                           
  6249                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6250   0044CA  0EF3               	movlw	low _motorL
  6251   0044CC  6E1A               	movwf	turnRight45@mL^0,c
  6252   0044CE  0E00               	movlw	high _motorL
  6253   0044D0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6254   0044D2  0EC0               	movlw	low _motorR
  6255   0044D4  6E1C               	movwf	turnRight45@mR^0,c
  6256   0044D6  0E01               	movlw	high _motorR
  6257   0044D8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6258   0044DA  EC10  F025         	call	_turnRight45	;wreg free
  6259   0044DE  0012               	return		;funcret
  6260   0044E0                     __end_of_BlueMove:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function _getTMR0val *****************
  6264 ;; Defined at:
  6265 ;;		line 28 in file "timers.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  moving          2    0[COMRAM] int 
  6270 ;;  temp            2    0        unsigned int 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 1
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text35
  6295   004DB0                     __ptext35:
  6296                           	callstack 0
  6297   004DB0                     _getTMR0val:
  6298                           	callstack 29
  6299   004DB0  50D3               	movf	211,w,c	;volatile
  6300   004DB2                     
  6301                           ;timers.c: 32:     int moving=TMR0H<<8;
  6302   004DB2  50D4               	movf	212,w,c	;volatile
  6303   004DB4  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6304   004DB6  6A01               	clrf	getTMR0val@moving^0,c
  6305   004DB8                     
  6306                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6307   004DB8  90D8               	bcf	status,0,c
  6308   004DBA  0100               	movlb	0	; () banked
  6309   004DBC  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  6310   004DBE  6ED9               	movwf	fsr2l,c
  6311   004DC0  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6312   004DC2  6EDA               	movwf	fsr2h,c
  6313   004DC4  0E00               	movlw	low _Time_forward
  6314   004DC6  26D9               	addwf	fsr2l,f,c
  6315   004DC8  0E02               	movlw	high _Time_forward
  6316   004DCA  22DA               	addwfc	fsr2h,f,c
  6317   004DCC  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6318   004DD0  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6319   004DD4                     
  6320                           ; BSR set to: 0
  6321   004DD4  0012               	return		;funcret
  6322   004DD6                     __end_of_getTMR0val:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _colour_rel *****************
  6326 ;; Defined at:
  6327 ;;		line 114 in file "color.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  vals            2   49[COMRAM] PTR struct RGB
  6330 ;;		 -> vals(8), 
  6331 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6332 ;;		 -> rel(12), 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  B               4   73[COMRAM] float 
  6335 ;;  G               4   69[COMRAM] float 
  6336 ;;  R               4   65[COMRAM] float 
  6337 ;;  L               4   53[COMRAM] float 
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;Total ram usage:       28 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 2
  6354 ;; This function calls:
  6355 ;;		___fladd
  6356 ;;		___fldiv
  6357 ;;		___xxtofl
  6358 ;; This function is called by:
  6359 ;;		_main
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text36
  6364   002AF2                     __ptext36:
  6365                           	callstack 0
  6366   002AF2                     _colour_rel:
  6367                           	callstack 28
  6368   002AF2                     
  6369                           ;color.c: 115:     float R = vals->R;
  6370   002AF2  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6371   002AF6  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6372   002AFA  CFDE F001          	movff	postinc2,___xxtofl@val
  6373   002AFE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6374   002B02  0E00               	movlw	0
  6375   002B04  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6376   002B06  0EFF               	movlw	-1
  6377   002B08  6E03               	movwf	(___xxtofl@val+2)^0,c
  6378   002B0A  6E04               	movwf	(___xxtofl@val+3)^0,c
  6379   002B0C  0E01               	movlw	1
  6380   002B0E  EC4A  F01A         	call	___xxtofl
  6381   002B12  C001  F042         	movff	?___xxtofl,colour_rel@R
  6382   002B16  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6383   002B1A  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6384   002B1E  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6385                           
  6386                           ;color.c: 116:     float G = vals->G;
  6387   002B22  EE20 F002          	lfsr	2,2
  6388   002B26  5032               	movf	colour_rel@vals^0,w,c
  6389   002B28  26D9               	addwf	fsr2l,f,c
  6390   002B2A  5033               	movf	(colour_rel@vals+1)^0,w,c
  6391   002B2C  22DA               	addwfc	fsr2h,f,c
  6392   002B2E  CFDE F001          	movff	postinc2,___xxtofl@val
  6393   002B32  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6394   002B36  0E00               	movlw	0
  6395   002B38  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6396   002B3A  0EFF               	movlw	-1
  6397   002B3C  6E03               	movwf	(___xxtofl@val+2)^0,c
  6398   002B3E  6E04               	movwf	(___xxtofl@val+3)^0,c
  6399   002B40  0E01               	movlw	1
  6400   002B42  EC4A  F01A         	call	___xxtofl
  6401   002B46  C001  F046         	movff	?___xxtofl,colour_rel@G
  6402   002B4A  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6403   002B4E  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6404   002B52  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6405                           
  6406                           ;color.c: 117:     float B = vals->B;
  6407   002B56  EE20 F004          	lfsr	2,4
  6408   002B5A  5032               	movf	colour_rel@vals^0,w,c
  6409   002B5C  26D9               	addwf	fsr2l,f,c
  6410   002B5E  5033               	movf	(colour_rel@vals+1)^0,w,c
  6411   002B60  22DA               	addwfc	fsr2h,f,c
  6412   002B62  CFDE F001          	movff	postinc2,___xxtofl@val
  6413   002B66  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6414   002B6A  0E00               	movlw	0
  6415   002B6C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6416   002B6E  0EFF               	movlw	-1
  6417   002B70  6E03               	movwf	(___xxtofl@val+2)^0,c
  6418   002B72  6E04               	movwf	(___xxtofl@val+3)^0,c
  6419   002B74  0E01               	movlw	1
  6420   002B76  EC4A  F01A         	call	___xxtofl
  6421   002B7A  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6422   002B7E  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6423   002B82  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6424   002B86  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6425                           
  6426                           ;color.c: 118:     float L = vals->L;
  6427   002B8A  EE20 F006          	lfsr	2,6
  6428   002B8E  5032               	movf	colour_rel@vals^0,w,c
  6429   002B90  26D9               	addwf	fsr2l,f,c
  6430   002B92  5033               	movf	(colour_rel@vals+1)^0,w,c
  6431   002B94  22DA               	addwfc	fsr2h,f,c
  6432   002B96  CFDE F001          	movff	postinc2,___xxtofl@val
  6433   002B9A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6434   002B9E  0E00               	movlw	0
  6435   002BA0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6436   002BA2  0EFF               	movlw	-1
  6437   002BA4  6E03               	movwf	(___xxtofl@val+2)^0,c
  6438   002BA6  6E04               	movwf	(___xxtofl@val+3)^0,c
  6439   002BA8  0E01               	movlw	1
  6440   002BAA  EC4A  F01A         	call	___xxtofl
  6441   002BAE  C001  F036         	movff	?___xxtofl,colour_rel@L
  6442   002BB2  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6443   002BB6  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6444   002BBA  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6445   002BBE                     
  6446                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6447   002BBE  C046  F005         	movff	colour_rel@G,___fladd@a
  6448   002BC2  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6449   002BC6  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6450   002BCA  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6451   002BCE  C042  F001         	movff	colour_rel@R,___fladd@b
  6452   002BD2  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6453   002BD6  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6454   002BDA  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6455   002BDE  EC37  F00F         	call	___fladd	;wreg free
  6456   002BE2  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6457   002BE6  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6458   002BEA  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6459   002BEE  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6460   002BF2                     
  6461                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6462   002BF2  C04A  F005         	movff	colour_rel@B,___fladd@a
  6463   002BF6  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6464   002BFA  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6465   002BFE  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6466   002C02  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6467   002C06  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6468   002C0A  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6469   002C0E  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6470   002C12  EC37  F00F         	call	___fladd	;wreg free
  6471   002C16  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6472   002C1A  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6473   002C1E  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6474   002C22  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6475                           
  6476                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6477   002C26  C042  F019         	movff	colour_rel@R,___fldiv@b
  6478   002C2A  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6479   002C2E  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6480   002C32  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6481   002C36  C036  F005         	movff	colour_rel@L,___fladd@a
  6482   002C3A  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6483   002C3E  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6484   002C42  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6485   002C46  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6486   002C4A  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6487   002C4E  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6488   002C52  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6489   002C56  EC37  F00F         	call	___fladd	;wreg free
  6490   002C5A  C001  F01D         	movff	?___fladd,___fldiv@a
  6491   002C5E  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6492   002C62  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6493   002C66  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6494   002C6A  ECAC  F013         	call	___fldiv	;wreg free
  6495   002C6E  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6496   002C72  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6497   002C76  C019  FFDE         	movff	?___fldiv,postinc2
  6498   002C7A  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6499   002C7E  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6500   002C82  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6501   002C86                     
  6502                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6503   002C86  C046  F005         	movff	colour_rel@G,___fladd@a
  6504   002C8A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6505   002C8E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6506   002C92  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6507   002C96  C042  F001         	movff	colour_rel@R,___fladd@b
  6508   002C9A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6509   002C9E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6510   002CA2  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6511   002CA6  EC37  F00F         	call	___fladd	;wreg free
  6512   002CAA  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6513   002CAE  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6514   002CB2  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6515   002CB6  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6516   002CBA                     
  6517                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6518   002CBA  C04A  F005         	movff	colour_rel@B,___fladd@a
  6519   002CBE  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6520   002CC2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6521   002CC6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6522   002CCA  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6523   002CCE  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6524   002CD2  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6525   002CD6  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6526   002CDA  EC37  F00F         	call	___fladd	;wreg free
  6527   002CDE  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6528   002CE2  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6529   002CE6  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6530   002CEA  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6531                           
  6532                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6533   002CEE  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6534   002CF2  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6535   002CF6  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6536   002CFA  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6537   002CFE  C036  F005         	movff	colour_rel@L,___fladd@a
  6538   002D02  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6539   002D06  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6540   002D0A  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6541   002D0E  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6542   002D12  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6543   002D16  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6544   002D1A  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6545   002D1E  EC37  F00F         	call	___fladd	;wreg free
  6546   002D22  C001  F01D         	movff	?___fladd,___fldiv@a
  6547   002D26  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6548   002D2A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6549   002D2E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6550   002D32  ECAC  F013         	call	___fldiv	;wreg free
  6551   002D36  EE20 F008          	lfsr	2,8
  6552   002D3A  5034               	movf	colour_rel@rel^0,w,c
  6553   002D3C  26D9               	addwf	fsr2l,f,c
  6554   002D3E  5035               	movf	(colour_rel@rel+1)^0,w,c
  6555   002D40  22DA               	addwfc	fsr2h,f,c
  6556   002D42  C019  FFDE         	movff	?___fldiv,postinc2
  6557   002D46  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6558   002D4A  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6559   002D4E  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6560   002D52                     
  6561                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6562   002D52  C046  F005         	movff	colour_rel@G,___fladd@a
  6563   002D56  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6564   002D5A  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6565   002D5E  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6566   002D62  C042  F001         	movff	colour_rel@R,___fladd@b
  6567   002D66  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6568   002D6A  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6569   002D6E  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6570   002D72  EC37  F00F         	call	___fladd	;wreg free
  6571   002D76  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6572   002D7A  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6573   002D7E  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6574   002D82  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6575   002D86                     
  6576                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6577   002D86  C04A  F005         	movff	colour_rel@B,___fladd@a
  6578   002D8A  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6579   002D8E  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6580   002D92  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6581   002D96  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6582   002D9A  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6583   002D9E  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6584   002DA2  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6585   002DA6  EC37  F00F         	call	___fladd	;wreg free
  6586   002DAA  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6587   002DAE  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6588   002DB2  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6589   002DB6  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6590                           
  6591                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6592   002DBA  C046  F019         	movff	colour_rel@G,___fldiv@b
  6593   002DBE  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6594   002DC2  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6595   002DC6  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6596   002DCA  C036  F005         	movff	colour_rel@L,___fladd@a
  6597   002DCE  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6598   002DD2  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6599   002DD6  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6600   002DDA  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6601   002DDE  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6602   002DE2  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6603   002DE6  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6604   002DEA  EC37  F00F         	call	___fladd	;wreg free
  6605   002DEE  C001  F01D         	movff	?___fladd,___fldiv@a
  6606   002DF2  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6607   002DF6  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6608   002DFA  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6609   002DFE  ECAC  F013         	call	___fldiv	;wreg free
  6610   002E02  EE20 F004          	lfsr	2,4
  6611   002E06  5034               	movf	colour_rel@rel^0,w,c
  6612   002E08  26D9               	addwf	fsr2l,f,c
  6613   002E0A  5035               	movf	(colour_rel@rel+1)^0,w,c
  6614   002E0C  22DA               	addwfc	fsr2h,f,c
  6615   002E0E  C019  FFDE         	movff	?___fldiv,postinc2
  6616   002E12  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6617   002E16  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6618   002E1A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6619   002E1E  0012               	return		;funcret
  6620   002E20                     __end_of_colour_rel:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _color_click_init *****************
  6624 ;; Defined at:
  6625 ;;		line 7 in file "color.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;Total ram usage:        1 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 4
  6646 ;; This function calls:
  6647 ;;		_I2C_2_Master_Init
  6648 ;;		_color_writetoaddr
  6649 ;; This function is called by:
  6650 ;;		_main
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text37
  6655   00479C                     __ptext37:
  6656                           	callstack 0
  6657   00479C                     _color_click_init:
  6658                           	callstack 26
  6659   00479C                     
  6660                           ;color.c: 10:     I2C_2_Master_Init();
  6661   00479C  ECAF  F026         	call	_I2C_2_Master_Init	;wreg free
  6662   0047A0                     
  6663                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6664   0047A0  0E01               	movlw	1
  6665   0047A2  6E03               	movwf	color_writetoaddr@value^0,c
  6666   0047A4  0E00               	movlw	0
  6667   0047A6  ECFE  F026         	call	_color_writetoaddr
  6668   0047AA                     
  6669                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6670   0047AA  0E3F               	movlw	63
  6671   0047AC  6E05               	movwf	??_color_click_init^0,c
  6672   0047AE  0E55               	movlw	85
  6673   0047B0                     u5097:
  6674   0047B0  2EE8               	decfsz	wreg,f,c
  6675   0047B2  D7FE               	bra	u5097
  6676   0047B4  2E05               	decfsz	??_color_click_init^0,f,c
  6677   0047B6  D7FC               	bra	u5097
  6678   0047B8  F000               	nop	
  6679   0047BA                     
  6680                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6681   0047BA  0E03               	movlw	3
  6682   0047BC  6E03               	movwf	color_writetoaddr@value^0,c
  6683   0047BE  0E00               	movlw	0
  6684   0047C0  ECFE  F026         	call	_color_writetoaddr
  6685   0047C4                     
  6686                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6687   0047C4  0ED5               	movlw	213
  6688   0047C6  6E03               	movwf	color_writetoaddr@value^0,c
  6689   0047C8  0E01               	movlw	1
  6690   0047CA  ECFE  F026         	call	_color_writetoaddr
  6691   0047CE                     
  6692                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6693   0047CE  0E00               	movlw	0
  6694   0047D0  6E03               	movwf	color_writetoaddr@value^0,c
  6695   0047D2  0E0F               	movlw	15
  6696   0047D4  ECFE  F026         	call	_color_writetoaddr
  6697   0047D8                     
  6698                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6699   0047D8  9287               	bcf	135,1,c	;volatile
  6700   0047DA                     
  6701                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6702   0047DA  9881               	bcf	129,4,c	;volatile
  6703   0047DC                     
  6704                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6705   0047DC  9E86               	bcf	134,7,c	;volatile
  6706   0047DE                     
  6707                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6708   0047DE  9684               	bcf	132,3,c	;volatile
  6709   0047E0                     
  6710                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6711   0047E0  9884               	bcf	132,4,c	;volatile
  6712   0047E2                     
  6713                           ;color.c: 28:     LATGbits.LATG1=0;
  6714   0047E2  927F               	bcf	127,1,c	;volatile
  6715   0047E4                     
  6716                           ;color.c: 29:     LATFbits.LATF7=0;
  6717   0047E4  9E7E               	bcf	126,7,c	;volatile
  6718   0047E6                     
  6719                           ;color.c: 30:     LATAbits.LATA4=0;
  6720   0047E6  9879               	bcf	121,4,c	;volatile
  6721   0047E8                     
  6722                           ;color.c: 32:     LATDbits.LATD3=0;
  6723   0047E8  967C               	bcf	124,3,c	;volatile
  6724   0047EA                     
  6725                           ;color.c: 33:     LATDbits.LATD4=0;
  6726   0047EA  987C               	bcf	124,4,c	;volatile
  6727   0047EC  0012               	return		;funcret
  6728   0047EE                     __end_of_color_click_init:
  6729                           	callstack 0
  6730                           
  6731 ;; *************** function _color_writetoaddr *****************
  6732 ;; Defined at:
  6733 ;;		line 41 in file "color.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  address         1    wreg     unsigned char 
  6736 ;;  value           1    2[COMRAM] unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  address         1    3[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6748 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;Total ram usage:        2 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 3
  6755 ;; This function calls:
  6756 ;;		_I2C_2_Master_Start
  6757 ;;		_I2C_2_Master_Stop
  6758 ;;		_I2C_2_Master_Write
  6759 ;; This function is called by:
  6760 ;;		_color_click_init
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text38
  6765   004DFC                     __ptext38:
  6766                           	callstack 0
  6767   004DFC                     _color_writetoaddr:
  6768                           	callstack 26
  6769                           
  6770                           ;incstack = 0
  6771                           ;color_writetoaddr@address stored from wreg
  6772   004DFC  6E04               	movwf	color_writetoaddr@address^0,c
  6773   004DFE                     
  6774                           ;color.c: 42:     I2C_2_Master_Start();
  6775   004DFE  EC49  F027         	call	_I2C_2_Master_Start	;wreg free
  6776                           
  6777                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6778   004E02  0E52               	movlw	82
  6779   004E04  EC39  F027         	call	_I2C_2_Master_Write
  6780                           
  6781                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6782   004E08  5004               	movf	color_writetoaddr@address^0,w,c
  6783   004E0A  0980               	iorlw	128
  6784   004E0C  EC39  F027         	call	_I2C_2_Master_Write
  6785                           
  6786                           ;color.c: 45:     I2C_2_Master_Write(value);
  6787   004E10  5003               	movf	color_writetoaddr@value^0,w,c
  6788   004E12  EC39  F027         	call	_I2C_2_Master_Write
  6789                           
  6790                           ;color.c: 46:     I2C_2_Master_Stop();
  6791   004E16  EC44  F027         	call	_I2C_2_Master_Stop	;wreg free
  6792   004E1A  0012               	return		;funcret
  6793   004E1C                     __end_of_color_writetoaddr:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function _I2C_2_Master_Write *****************
  6797 ;; Defined at:
  6798 ;;		line 45 in file "i2c.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  data_byte       1    wreg     unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  data_byte       1    1[COMRAM] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0, cstack
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;Total ram usage:        1 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 2
  6819 ;; This function calls:
  6820 ;;		_I2C_2_Master_Idle
  6821 ;; This function is called by:
  6822 ;;		_color_writetoaddr
  6823 ;;		_color_read_lum
  6824 ;;		_color_read_Red
  6825 ;;		_color_read_Green
  6826 ;;		_color_read_Blue
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text39
  6831   004E72                     __ptext39:
  6832                           	callstack 0
  6833   004E72                     _I2C_2_Master_Write:
  6834                           	callstack 26
  6835                           
  6836                           ;incstack = 0
  6837                           ;I2C_2_Master_Write@data_byte stored from wreg
  6838   004E72  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6839   004E74                     
  6840                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6841   004E74  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  6842   004E78                     
  6843                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6844   004E78  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6845   004E7C  0012               	return		;funcret
  6846   004E7E                     __end_of_I2C_2_Master_Write:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _I2C_2_Master_Stop *****************
  6850 ;; Defined at:
  6851 ;;		line 39 in file "i2c.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;		None
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;		None
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  1    wreg      void 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0, cstack
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;Total ram usage:        0 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; Hardware stack levels required when called: 2
  6872 ;; This function calls:
  6873 ;;		_I2C_2_Master_Idle
  6874 ;; This function is called by:
  6875 ;;		_color_writetoaddr
  6876 ;;		_color_read_lum
  6877 ;;		_color_read_Red
  6878 ;;		_color_read_Green
  6879 ;;		_color_read_Blue
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text40
  6884   004E88                     __ptext40:
  6885                           	callstack 0
  6886   004E88                     _I2C_2_Master_Stop:
  6887                           	callstack 26
  6888   004E88                     
  6889                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6890   004E88  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  6891   004E8C                     
  6892                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6893   004E8C  010E               	movlb	14	; () banked
  6894   004E8E  85DA               	bsf	218,2,b	;volatile
  6895   004E90                     
  6896                           ; BSR set to: 14
  6897   004E90  0012               	return		;funcret
  6898   004E92                     __end_of_I2C_2_Master_Stop:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _I2C_2_Master_Start *****************
  6902 ;; Defined at:
  6903 ;;		line 27 in file "i2c.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 2
  6924 ;; This function calls:
  6925 ;;		_I2C_2_Master_Idle
  6926 ;; This function is called by:
  6927 ;;		_color_writetoaddr
  6928 ;;		_color_read_lum
  6929 ;;		_color_read_Red
  6930 ;;		_color_read_Green
  6931 ;;		_color_read_Blue
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text41
  6936   004E92                     __ptext41:
  6937                           	callstack 0
  6938   004E92                     _I2C_2_Master_Start:
  6939                           	callstack 26
  6940   004E92                     
  6941                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6942   004E92  ECC4  F026         	call	_I2C_2_Master_Idle	;wreg free
  6943   004E96                     
  6944                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6945   004E96  010E               	movlb	14	; () banked
  6946   004E98  81DA               	bsf	218,0,b	;volatile
  6947   004E9A                     
  6948                           ; BSR set to: 14
  6949   004E9A  0012               	return		;funcret
  6950   004E9C                     __end_of_I2C_2_Master_Start:
  6951                           	callstack 0
  6952                           
  6953 ;; *************** function _I2C_2_Master_Idle *****************
  6954 ;; Defined at:
  6955 ;;		line 22 in file "i2c.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;		None
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  1    wreg      void 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;Total ram usage:        1 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; Hardware stack levels required when called: 1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_I2C_2_Master_Start
  6980 ;;		_I2C_2_Master_RepStart
  6981 ;;		_I2C_2_Master_Stop
  6982 ;;		_I2C_2_Master_Write
  6983 ;;		_I2C_2_Master_Read
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text42
  6988   004D88                     __ptext42:
  6989                           	callstack 0
  6990   004D88                     _I2C_2_Master_Idle:
  6991                           	callstack 26
  6992   004D88                     l143:
  6993   004D88  010E               	movlb	14	; () banked
  6994   004D8A  B5D8               	btfsc	216,2,b	;volatile
  6995   004D8C  EFCA  F026         	goto	u2741
  6996   004D90  EFCC  F026         	goto	u2740
  6997   004D94                     u2741:
  6998   004D94  EFC4  F026         	goto	l143
  6999   004D98                     u2740:
  7000   004D98                     
  7001                           ; BSR set to: 14
  7002   004D98  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7003   004D9C  0E1F               	movlw	31
  7004   004D9E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7005   004DA0  A4D8               	btfss	status,2,c
  7006   004DA2  EFD5  F026         	goto	u2751
  7007   004DA6  EFD7  F026         	goto	u2750
  7008   004DAA                     u2751:
  7009   004DAA  EFC4  F026         	goto	l143
  7010   004DAE                     u2750:
  7011   004DAE                     
  7012                           ; BSR set to: 14
  7013   004DAE  0012               	return		;funcret
  7014   004DB0                     __end_of_I2C_2_Master_Idle:
  7015                           	callstack 0
  7016                           
  7017 ;; *************** function _I2C_2_Master_Init *****************
  7018 ;; Defined at:
  7019 ;;		line 4 in file "i2c.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;		None
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;		None
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; Hardware stack levels required when called: 1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_color_click_init
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text43
  7049   004D5E                     __ptext43:
  7050                           	callstack 0
  7051   004D5E                     _I2C_2_Master_Init:
  7052                           	callstack 28
  7053   004D5E                     
  7054                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7055   004D5E  010E               	movlb	14	; () banked
  7056   004D60  51D9               	movf	217,w,b	;volatile
  7057   004D62  0BF0               	andlw	-16
  7058   004D64  0908               	iorlw	8
  7059   004D66  6FD9               	movwf	217,b	;volatile
  7060   004D68                     
  7061                           ; BSR set to: 14
  7062                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7063   004D68  8BD9               	bsf	217,5,b	;volatile
  7064                           
  7065                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7066   004D6A  0E9F               	movlw	159
  7067   004D6C  6FD6               	movwf	214,b	;volatile
  7068   004D6E                     
  7069                           ; BSR set to: 14
  7070                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7071   004D6E  8A84               	bsf	132,5,c	;volatile
  7072   004D70                     
  7073                           ; BSR set to: 14
  7074                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7075   004D70  8C84               	bsf	132,6,c	;volatile
  7076   004D72                     
  7077                           ; BSR set to: 14
  7078                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7079   004D72  9BA7               	bcf	167,5,b	;volatile
  7080   004D74                     
  7081                           ; BSR set to: 14
  7082                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7083   004D74  9DA7               	bcf	167,6,b	;volatile
  7084                           
  7085                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7086   004D76  0E1D               	movlw	29
  7087   004D78  6F1D               	movwf	29,b	;volatile
  7088                           
  7089                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7090   004D7A  0E1E               	movlw	30
  7091   004D7C  6F1C               	movwf	28,b	;volatile
  7092                           
  7093                           ;i2c.c: 18:   RD5PPS=0x1C;
  7094   004D7E  0E1C               	movlw	28
  7095   004D80  6F6F               	movwf	111,b	;volatile
  7096                           
  7097                           ;i2c.c: 19:   RD6PPS=0x1B;
  7098   004D82  0E1B               	movlw	27
  7099   004D84  6F70               	movwf	112,b	;volatile
  7100   004D86                     
  7101                           ; BSR set to: 14
  7102   004D86  0012               	return		;funcret
  7103   004D88                     __end_of_I2C_2_Master_Init:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _YellowMove *****************
  7107 ;; Defined at:
  7108 ;;		line 288 in file "dc_motor.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7111 ;;		 -> motorL(9), 
  7112 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7113 ;;		 -> motorR(9), 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;                  1    wreg      void 
  7118 ;; Registers used:
  7119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;Total ram usage:        4 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 5
  7132 ;; This function calls:
  7133 ;;		_reverseDetect
  7134 ;;		_reverseOneBlock
  7135 ;;		_turnRight45
  7136 ;; This function is called by:
  7137 ;;		_main
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text44
  7142   0047EE                     __ptext44:
  7143                           	callstack 0
  7144   0047EE                     _YellowMove:
  7145                           	callstack 25
  7146   0047EE                     
  7147                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7148   0047EE  0EF3               	movlw	low _motorL
  7149   0047F0  6E1A               	movwf	reverseDetect@mL^0,c
  7150   0047F2  0E00               	movlw	high _motorL
  7151   0047F4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7152   0047F6  0EC0               	movlw	low _motorR
  7153   0047F8  6E1C               	movwf	reverseDetect@mR^0,c
  7154   0047FA  0E01               	movlw	high _motorR
  7155   0047FC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7156   0047FE  ECF9  F022         	call	_reverseDetect	;wreg free
  7157                           
  7158                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7159   004802  0EF3               	movlw	low _motorL
  7160   004804  6E1A               	movwf	reverseOneBlock@mL^0,c
  7161   004806  0E00               	movlw	high _motorL
  7162   004808  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7163   00480A  0EC0               	movlw	low _motorR
  7164   00480C  6E1C               	movwf	reverseOneBlock@mR^0,c
  7165   00480E  0E01               	movlw	high _motorR
  7166   004810  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7167   004812  ECCC  F022         	call	_reverseOneBlock	;wreg free
  7168                           
  7169                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
  7170   004816  0EF3               	movlw	low _motorL
  7171   004818  6E1A               	movwf	turnRight45@mL^0,c
  7172   00481A  0E00               	movlw	high _motorL
  7173   00481C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7174   00481E  0EC0               	movlw	low _motorR
  7175   004820  6E1C               	movwf	turnRight45@mR^0,c
  7176   004822  0E01               	movlw	high _motorR
  7177   004824  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7178   004826  EC10  F025         	call	_turnRight45	;wreg free
  7179                           
  7180                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
  7181   00482A  0EF3               	movlw	low _motorL
  7182   00482C  6E1A               	movwf	turnRight45@mL^0,c
  7183   00482E  0E00               	movlw	high _motorL
  7184   004830  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7185   004832  0EC0               	movlw	low _motorR
  7186   004834  6E1C               	movwf	turnRight45@mR^0,c
  7187   004836  0E01               	movlw	high _motorR
  7188   004838  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7189   00483A  EC10  F025         	call	_turnRight45	;wreg free
  7190   00483E  0012               	return		;funcret
  7191   004840                     __end_of_YellowMove:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function _turnRight45 *****************
  7195 ;; Defined at:
  7196 ;;		line 211 in file "dc_motor.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7199 ;;		 -> motorL(9), 
  7200 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7201 ;;		 -> motorR(9), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;Total ram usage:        6 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; Hardware stack levels required when called: 4
  7220 ;; This function calls:
  7221 ;;		_TurnDelay
  7222 ;;		_stop
  7223 ;;		_turnRight
  7224 ;; This function is called by:
  7225 ;;		_RedMove
  7226 ;;		_BlueMove
  7227 ;;		_YellowMove
  7228 ;;		_OrangeMove
  7229 ;;		_ReversePink
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text45
  7234   004A20                     __ptext45:
  7235                           	callstack 0
  7236   004A20                     _turnRight45:
  7237                           	callstack 24
  7238   004A20                     
  7239                           ;dc_motor.c: 212:     turnRight(mL,mR);
  7240   004A20  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  7241   004A24  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  7242   004A28  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  7243   004A2C  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  7244   004A30  EC88  F01F         	call	_turnRight	;wreg free
  7245   004A34                     
  7246                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
  7247   004A34  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7248   004A38  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7249   004A3C  EC7C  F026         	call	_TurnDelay	;wreg free
  7250   004A40                     
  7251                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
  7252   004A40  0EF3               	movlw	low _motorL
  7253   004A42  6E14               	movwf	stop@mL^0,c
  7254   004A44  0E00               	movlw	high _motorL
  7255   004A46  6E15               	movwf	(stop@mL+1)^0,c
  7256   004A48  0EC0               	movlw	low _motorR
  7257   004A4A  6E16               	movwf	stop@mR^0,c
  7258   004A4C  0E01               	movlw	high _motorR
  7259   004A4E  6E17               	movwf	(stop@mR+1)^0,c
  7260   004A50  EC49  F021         	call	_stop	;wreg free
  7261   004A54                     
  7262                           ;dc_motor.c: 215:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7263   004A54  0E52               	movlw	82
  7264   004A56  6E1F               	movwf	(??_turnRight45+1)^0,c
  7265   004A58  0E2B               	movlw	43
  7266   004A5A  6E1E               	movwf	??_turnRight45^0,c
  7267   004A5C  0E00               	movlw	0
  7268   004A5E                     u5107:
  7269   004A5E  2EE8               	decfsz	wreg,f,c
  7270   004A60  D7FE               	bra	u5107
  7271   004A62  2E1E               	decfsz	??_turnRight45^0,f,c
  7272   004A64  D7FC               	bra	u5107
  7273   004A66  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7274   004A68  D7FA               	bra	u5107
  7275   004A6A  D000               	nop2	
  7276   004A6C  0012               	return		;funcret
  7277   004A6E                     __end_of_turnRight45:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _turnRight *****************
  7281 ;; Defined at:
  7282 ;;		line 129 in file "dc_motor.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7285 ;;		 -> motorL(9), 
  7286 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7287 ;;		 -> motorR(9), 
  7288 ;; Auto vars:     Size  Location     Type
  7289 ;;		None
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      void 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;Total ram usage:        6 bytes
  7304 ;; Hardware stack levels used: 1
  7305 ;; Hardware stack levels required when called: 3
  7306 ;; This function calls:
  7307 ;;		_setMotorPWM
  7308 ;; This function is called by:
  7309 ;;		_turnRight45
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text46
  7314   003F10                     __ptext46:
  7315                           	callstack 0
  7316   003F10                     _turnRight:
  7317                           	callstack 24
  7318   003F10                     
  7319                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
  7320   003F10  EE20 F001          	lfsr	2,1
  7321   003F14  5014               	movf	turnRight@mL^0,w,c
  7322   003F16  26D9               	addwf	fsr2l,f,c
  7323   003F18  5015               	movf	(turnRight@mL+1)^0,w,c
  7324   003F1A  22DA               	addwfc	fsr2h,f,c
  7325   003F1C  0E01               	movlw	1
  7326   003F1E  6EDF               	movwf	indf2,c
  7327                           
  7328                           ;dc_motor.c: 132:     mR->direction =0;
  7329   003F20  EE20 F001          	lfsr	2,1
  7330   003F24  5016               	movf	turnRight@mR^0,w,c
  7331   003F26  26D9               	addwf	fsr2l,f,c
  7332   003F28  5017               	movf	(turnRight@mR+1)^0,w,c
  7333   003F2A  22DA               	addwfc	fsr2h,f,c
  7334   003F2C  0E00               	movlw	0
  7335   003F2E  6EDF               	movwf	indf2,c
  7336                           
  7337                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
  7338   003F30  EFBE  F01F         	goto	l3540
  7339   003F34                     l3532:
  7340                           
  7341                           ;dc_motor.c: 136:         mL->power+=10;
  7342   003F34  C014  FFD9         	movff	turnRight@mL,fsr2l
  7343   003F38  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7344   003F3C  0E0A               	movlw	10
  7345   003F3E  26DF               	addwf	indf2,f,c
  7346                           
  7347                           ;dc_motor.c: 137:         mR->power+=10;
  7348   003F40  C016  FFD9         	movff	turnRight@mR,fsr2l
  7349   003F44  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7350   003F48  0E0A               	movlw	10
  7351   003F4A  26DF               	addwf	indf2,f,c
  7352   003F4C                     
  7353                           ;dc_motor.c: 139:         setMotorPWM(mL);
  7354   003F4C  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7355   003F50  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7356   003F54  ECE8  F01B         	call	_setMotorPWM	;wreg free
  7357   003F58                     
  7358                           ;dc_motor.c: 140:         setMotorPWM(mR);
  7359   003F58  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7360   003F5C  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7361   003F60  ECE8  F01B         	call	_setMotorPWM	;wreg free
  7362   003F64                     
  7363                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7364   003F64  0E02               	movlw	2
  7365   003F66  6E19               	movwf	(??_turnRight+1)^0,c
  7366   003F68  0EA0               	movlw	160
  7367   003F6A  6E18               	movwf	??_turnRight^0,c
  7368   003F6C  0E92               	movlw	146
  7369   003F6E                     u5117:
  7370   003F6E  2EE8               	decfsz	wreg,f,c
  7371   003F70  D7FE               	bra	u5117
  7372   003F72  2E18               	decfsz	??_turnRight^0,f,c
  7373   003F74  D7FC               	bra	u5117
  7374   003F76  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7375   003F78  D7FA               	bra	u5117
  7376   003F7A  D000               	nop2	
  7377   003F7C                     l3540:
  7378   003F7C  C014  FFD9         	movff	turnRight@mL,fsr2l
  7379   003F80  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7380   003F84  0E1E               	movlw	30
  7381   003F86  60DF               	cpfslt	indf2,c
  7382   003F88  EFC8  F01F         	goto	u2821
  7383   003F8C  EFCA  F01F         	goto	u2820
  7384   003F90                     u2821:
  7385   003F90  EFD6  F01F         	goto	l537
  7386   003F94                     u2820:
  7387   003F94  C016  FFD9         	movff	turnRight@mR,fsr2l
  7388   003F98  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7389   003F9C  0E1D               	movlw	29
  7390   003F9E  64DF               	cpfsgt	indf2,c
  7391   003FA0  EFD4  F01F         	goto	u2831
  7392   003FA4  EFD6  F01F         	goto	u2830
  7393   003FA8                     u2831:
  7394   003FA8  EF9A  F01F         	goto	l3532
  7395   003FAC                     u2830:
  7396   003FAC                     l537:
  7397   003FAC  0012               	return		;funcret
  7398   003FAE                     __end_of_turnRight:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _Timer0_init *****************
  7402 ;; Defined at:
  7403 ;;		line 8 in file "timers.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used: 1
  7423 ;; Hardware stack levels required when called: 1
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_main
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text47
  7432   004E1C                     __ptext47:
  7433                           	callstack 0
  7434   004E1C                     _Timer0_init:
  7435                           	callstack 29
  7436   004E1C                     
  7437                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7438   004E1C  50D6               	movf	214,w,c	;volatile
  7439   004E1E  0B1F               	andlw	-225
  7440   004E20  0940               	iorlw	64
  7441   004E22  6ED6               	movwf	214,c	;volatile
  7442   004E24                     
  7443                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7444   004E24  88D6               	bsf	214,4,c	;volatile
  7445                           
  7446                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7447   004E26  50D6               	movf	214,w,c	;volatile
  7448   004E28  0BF0               	andlw	-16
  7449   004E2A  090E               	iorlw	14
  7450   004E2C  6ED6               	movwf	214,c	;volatile
  7451   004E2E                     
  7452                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7453   004E2E  88D5               	bsf	213,4,c	;volatile
  7454                           
  7455                           ;timers.c: 16:     TMR0H=0;
  7456   004E30  0E00               	movlw	0
  7457   004E32  6ED4               	movwf	212,c	;volatile
  7458                           
  7459                           ;timers.c: 17:     TMR0L=0;
  7460   004E34  0E00               	movlw	0
  7461   004E36  6ED3               	movwf	211,c	;volatile
  7462   004E38                     
  7463                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7464   004E38  8ED5               	bsf	213,7,c	;volatile
  7465   004E3A  0012               	return		;funcret
  7466   004E3C                     __end_of_Timer0_init:
  7467                           	callstack 0
  7468                           
  7469 ;; *************** function _RetryMove *****************
  7470 ;; Defined at:
  7471 ;;		line 325 in file "dc_motor.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7474 ;;		 -> motorL(9), 
  7475 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7476 ;;		 -> motorR(9), 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7492 ;;Total ram usage:        6 bytes
  7493 ;; Hardware stack levels used: 1
  7494 ;; Hardware stack levels required when called: 4
  7495 ;; This function calls:
  7496 ;;		_fullSpeedAhead
  7497 ;;		_fullSpeedBack
  7498 ;;		_stop
  7499 ;; This function is called by:
  7500 ;;		_main
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text48
  7505   004210                     __ptext48:
  7506                           	callstack 0
  7507   004210                     _RetryMove:
  7508                           	callstack 26
  7509   004210                     
  7510                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
  7511   004210  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7512   004214  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7513   004218  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7514   00421C  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7515   004220  EC26  F020         	call	_fullSpeedBack	;wreg free
  7516   004224                     
  7517                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7518   004224  0E29               	movlw	41
  7519   004226  6E1F               	movwf	(??_RetryMove+1)^0,c
  7520   004228  0E96               	movlw	150
  7521   00422A  6E1E               	movwf	??_RetryMove^0,c
  7522   00422C  0E7F               	movlw	127
  7523   00422E                     u5127:
  7524   00422E  2EE8               	decfsz	wreg,f,c
  7525   004230  D7FE               	bra	u5127
  7526   004232  2E1E               	decfsz	??_RetryMove^0,f,c
  7527   004234  D7FC               	bra	u5127
  7528   004236  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7529   004238  D7FA               	bra	u5127
  7530   00423A  F000               	nop	
  7531   00423C                     
  7532                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
  7533   00423C  0EF3               	movlw	low _motorL
  7534   00423E  6E14               	movwf	stop@mL^0,c
  7535   004240  0E00               	movlw	high _motorL
  7536   004242  6E15               	movwf	(stop@mL+1)^0,c
  7537   004244  0EC0               	movlw	low _motorR
  7538   004246  6E16               	movwf	stop@mR^0,c
  7539   004248  0E01               	movlw	high _motorR
  7540   00424A  6E17               	movwf	(stop@mR+1)^0,c
  7541   00424C  EC49  F021         	call	_stop	;wreg free
  7542   004250                     
  7543                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
  7544   004250  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7545   004254  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7546   004258  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7547   00425C  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7548   004260  EC75  F020         	call	_fullSpeedAhead	;wreg free
  7549   004264                     
  7550                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7551   004264  0E29               	movlw	41
  7552   004266  6E1F               	movwf	(??_RetryMove+1)^0,c
  7553   004268  0E96               	movlw	150
  7554   00426A  6E1E               	movwf	??_RetryMove^0,c
  7555   00426C  0E7F               	movlw	127
  7556   00426E                     u5137:
  7557   00426E  2EE8               	decfsz	wreg,f,c
  7558   004270  D7FE               	bra	u5137
  7559   004272  2E1E               	decfsz	??_RetryMove^0,f,c
  7560   004274  D7FC               	bra	u5137
  7561   004276  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7562   004278  D7FA               	bra	u5137
  7563   00427A  F000               	nop	
  7564                           
  7565                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
  7566   00427C  0EF3               	movlw	low _motorL
  7567   00427E  6E14               	movwf	stop@mL^0,c
  7568   004280  0E00               	movlw	high _motorL
  7569   004282  6E15               	movwf	(stop@mL+1)^0,c
  7570   004284  0EC0               	movlw	low _motorR
  7571   004286  6E16               	movwf	stop@mR^0,c
  7572   004288  0E01               	movlw	high _motorR
  7573   00428A  6E17               	movwf	(stop@mR+1)^0,c
  7574   00428C  EC49  F021         	call	_stop	;wreg free
  7575   004290  0012               	return		;funcret
  7576   004292                     __end_of_RetryMove:
  7577                           	callstack 0
  7578                           
  7579 ;; *************** function _PinkMove *****************
  7580 ;; Defined at:
  7581 ;;		line 298 in file "dc_motor.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7584 ;;		 -> motorL(9), 
  7585 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7586 ;;		 -> motorR(9), 
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;Total ram usage:        4 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 5
  7605 ;; This function calls:
  7606 ;;		_reverseDetect
  7607 ;;		_reverseOneBlock
  7608 ;;		_turnLeft45
  7609 ;; This function is called by:
  7610 ;;		_main
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text49
  7615   004840                     __ptext49:
  7616                           	callstack 0
  7617   004840                     _PinkMove:
  7618                           	callstack 25
  7619   004840                     
  7620                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  7621   004840  0EF3               	movlw	low _motorL
  7622   004842  6E1A               	movwf	reverseDetect@mL^0,c
  7623   004844  0E00               	movlw	high _motorL
  7624   004846  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7625   004848  0EC0               	movlw	low _motorR
  7626   00484A  6E1C               	movwf	reverseDetect@mR^0,c
  7627   00484C  0E01               	movlw	high _motorR
  7628   00484E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7629   004850  ECF9  F022         	call	_reverseDetect	;wreg free
  7630                           
  7631                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
  7632   004854  0EF3               	movlw	low _motorL
  7633   004856  6E1A               	movwf	reverseOneBlock@mL^0,c
  7634   004858  0E00               	movlw	high _motorL
  7635   00485A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7636   00485C  0EC0               	movlw	low _motorR
  7637   00485E  6E1C               	movwf	reverseOneBlock@mR^0,c
  7638   004860  0E01               	movlw	high _motorR
  7639   004862  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7640   004864  ECCC  F022         	call	_reverseOneBlock	;wreg free
  7641                           
  7642                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
  7643   004868  0EF3               	movlw	low _motorL
  7644   00486A  6E1A               	movwf	turnLeft45@mL^0,c
  7645   00486C  0E00               	movlw	high _motorL
  7646   00486E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7647   004870  0EC0               	movlw	low _motorR
  7648   004872  6E1C               	movwf	turnLeft45@mR^0,c
  7649   004874  0E01               	movlw	high _motorR
  7650   004876  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7651   004878  EC37  F025         	call	_turnLeft45	;wreg free
  7652                           
  7653                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
  7654   00487C  0EF3               	movlw	low _motorL
  7655   00487E  6E1A               	movwf	turnLeft45@mL^0,c
  7656   004880  0E00               	movlw	high _motorL
  7657   004882  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7658   004884  0EC0               	movlw	low _motorR
  7659   004886  6E1C               	movwf	turnLeft45@mR^0,c
  7660   004888  0E01               	movlw	high _motorR
  7661   00488A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7662   00488C  EC37  F025         	call	_turnLeft45	;wreg free
  7663   004890  0012               	return		;funcret
  7664   004892                     __end_of_PinkMove:
  7665                           	callstack 0
  7666                           
  7667 ;; *************** function _turnLeft45 *****************
  7668 ;; Defined at:
  7669 ;;		line 218 in file "dc_motor.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7672 ;;		 -> motorL(9), 
  7673 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7674 ;;		 -> motorR(9), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7690 ;;Total ram usage:        6 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 4
  7693 ;; This function calls:
  7694 ;;		_TurnDelay
  7695 ;;		_stop
  7696 ;;		_turnLeft
  7697 ;; This function is called by:
  7698 ;;		_GreenMove
  7699 ;;		_PinkMove
  7700 ;;		_LightBlueMove
  7701 ;;		_ReverseYellow
  7702 ;;		_turnCalibration
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text50
  7707   004A6E                     __ptext50:
  7708                           	callstack 0
  7709   004A6E                     _turnLeft45:
  7710                           	callstack 25
  7711   004A6E                     
  7712                           ;dc_motor.c: 219:     turnLeft(mL,mR);
  7713   004A6E  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7714   004A72  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7715   004A76  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7716   004A7A  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7717   004A7E  ECD7  F01F         	call	_turnLeft	;wreg free
  7718   004A82                     
  7719                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
  7720   004A82  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7721   004A86  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7722   004A8A  EC7C  F026         	call	_TurnDelay	;wreg free
  7723   004A8E                     
  7724                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
  7725   004A8E  0EF3               	movlw	low _motorL
  7726   004A90  6E14               	movwf	stop@mL^0,c
  7727   004A92  0E00               	movlw	high _motorL
  7728   004A94  6E15               	movwf	(stop@mL+1)^0,c
  7729   004A96  0EC0               	movlw	low _motorR
  7730   004A98  6E16               	movwf	stop@mR^0,c
  7731   004A9A  0E01               	movlw	high _motorR
  7732   004A9C  6E17               	movwf	(stop@mR+1)^0,c
  7733   004A9E  EC49  F021         	call	_stop	;wreg free
  7734   004AA2                     
  7735                           ;dc_motor.c: 222:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7736   004AA2  0E52               	movlw	82
  7737   004AA4  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7738   004AA6  0E2B               	movlw	43
  7739   004AA8  6E1E               	movwf	??_turnLeft45^0,c
  7740   004AAA  0E00               	movlw	0
  7741   004AAC                     u5147:
  7742   004AAC  2EE8               	decfsz	wreg,f,c
  7743   004AAE  D7FE               	bra	u5147
  7744   004AB0  2E1E               	decfsz	??_turnLeft45^0,f,c
  7745   004AB2  D7FC               	bra	u5147
  7746   004AB4  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7747   004AB6  D7FA               	bra	u5147
  7748   004AB8  D000               	nop2	
  7749   004ABA  0012               	return		;funcret
  7750   004ABC                     __end_of_turnLeft45:
  7751                           	callstack 0
  7752                           
  7753 ;; *************** function _turnLeft *****************
  7754 ;; Defined at:
  7755 ;;		line 111 in file "dc_motor.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7758 ;;		 -> motorL(9), 
  7759 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7760 ;;		 -> motorR(9), 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  1    wreg      void 
  7765 ;; Registers used:
  7766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;Total ram usage:        6 bytes
  7777 ;; Hardware stack levels used: 1
  7778 ;; Hardware stack levels required when called: 3
  7779 ;; This function calls:
  7780 ;;		_setMotorPWM
  7781 ;; This function is called by:
  7782 ;;		_turnLeft45
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           
  7786                           	psect	text51
  7787   003FAE                     __ptext51:
  7788                           	callstack 0
  7789   003FAE                     _turnLeft:
  7790                           	callstack 25
  7791   003FAE                     
  7792                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
  7793   003FAE  EE20 F001          	lfsr	2,1
  7794   003FB2  5014               	movf	turnLeft@mL^0,w,c
  7795   003FB4  26D9               	addwf	fsr2l,f,c
  7796   003FB6  5015               	movf	(turnLeft@mL+1)^0,w,c
  7797   003FB8  22DA               	addwfc	fsr2h,f,c
  7798   003FBA  0E00               	movlw	0
  7799   003FBC  6EDF               	movwf	indf2,c
  7800                           
  7801                           ;dc_motor.c: 114:     mR->direction =1;
  7802   003FBE  EE20 F001          	lfsr	2,1
  7803   003FC2  5016               	movf	turnLeft@mR^0,w,c
  7804   003FC4  26D9               	addwf	fsr2l,f,c
  7805   003FC6  5017               	movf	(turnLeft@mR+1)^0,w,c
  7806   003FC8  22DA               	addwfc	fsr2h,f,c
  7807   003FCA  0E01               	movlw	1
  7808   003FCC  6EDF               	movwf	indf2,c
  7809                           
  7810                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
  7811   003FCE  EF0D  F020         	goto	l3526
  7812   003FD2                     l3518:
  7813                           
  7814                           ;dc_motor.c: 118:         mL->power+=10;
  7815   003FD2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7816   003FD6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7817   003FDA  0E0A               	movlw	10
  7818   003FDC  26DF               	addwf	indf2,f,c
  7819                           
  7820                           ;dc_motor.c: 119:         mR->power+=10;
  7821   003FDE  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7822   003FE2  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7823   003FE6  0E0A               	movlw	10
  7824   003FE8  26DF               	addwf	indf2,f,c
  7825   003FEA                     
  7826                           ;dc_motor.c: 121:         setMotorPWM(mL);
  7827   003FEA  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7828   003FEE  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7829   003FF2  ECE8  F01B         	call	_setMotorPWM	;wreg free
  7830   003FF6                     
  7831                           ;dc_motor.c: 122:         setMotorPWM(mR);
  7832   003FF6  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7833   003FFA  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7834   003FFE  ECE8  F01B         	call	_setMotorPWM	;wreg free
  7835   004002                     
  7836                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7837   004002  0E02               	movlw	2
  7838   004004  6E19               	movwf	(??_turnLeft+1)^0,c
  7839   004006  0EA0               	movlw	160
  7840   004008  6E18               	movwf	??_turnLeft^0,c
  7841   00400A  0E92               	movlw	146
  7842   00400C                     u5157:
  7843   00400C  2EE8               	decfsz	wreg,f,c
  7844   00400E  D7FE               	bra	u5157
  7845   004010  2E18               	decfsz	??_turnLeft^0,f,c
  7846   004012  D7FC               	bra	u5157
  7847   004014  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7848   004016  D7FA               	bra	u5157
  7849   004018  D000               	nop2	
  7850   00401A                     l3526:
  7851   00401A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7852   00401E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7853   004022  0E1E               	movlw	30
  7854   004024  60DF               	cpfslt	indf2,c
  7855   004026  EF17  F020         	goto	u2801
  7856   00402A  EF19  F020         	goto	u2800
  7857   00402E                     u2801:
  7858   00402E  EF25  F020         	goto	l529
  7859   004032                     u2800:
  7860   004032  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7861   004036  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7862   00403A  0E1D               	movlw	29
  7863   00403C  64DF               	cpfsgt	indf2,c
  7864   00403E  EF23  F020         	goto	u2811
  7865   004042  EF25  F020         	goto	u2810
  7866   004046                     u2811:
  7867   004046  EFE9  F01F         	goto	l3518
  7868   00404A                     u2810:
  7869   00404A                     l529:
  7870   00404A  0012               	return		;funcret
  7871   00404C                     __end_of_turnLeft:
  7872                           	callstack 0
  7873                           
  7874 ;; *************** function _TurnDelay *****************
  7875 ;; Defined at:
  7876 ;;		line 204 in file "dc_motor.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  Turn45Delay     2    0[COMRAM] int 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;Total ram usage:        3 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 1
  7897 ;; This function calls:
  7898 ;;		Nothing
  7899 ;; This function is called by:
  7900 ;;		_turnRight45
  7901 ;;		_turnLeft45
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text52
  7906   004CF8                     __ptext52:
  7907                           	callstack 0
  7908   004CF8                     _TurnDelay:
  7909                           	callstack 27
  7910   004CF8                     
  7911                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7912   004CF8  EF89  F026         	goto	l564
  7913   004CFC                     l3560:
  7914                           
  7915                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
  7916   004CFC  0E15               	movlw	21
  7917   004CFE  6E03               	movwf	??_TurnDelay^0,c
  7918   004D00  0EC6               	movlw	198
  7919   004D02                     u5167:
  7920   004D02  2EE8               	decfsz	wreg,f,c
  7921   004D04  D7FE               	bra	u5167
  7922   004D06  2E03               	decfsz	??_TurnDelay^0,f,c
  7923   004D08  D7FC               	bra	u5167
  7924   004D0A  D000               	nop2	
  7925   004D0C                     
  7926                           ;dc_motor.c: 207:         Turn45Delay--;
  7927   004D0C  0601               	decf	TurnDelay@Turn45Delay^0,f,c
  7928   004D0E  A0D8               	btfss	status,0,c
  7929   004D10  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
  7930   004D12                     l564:
  7931                           
  7932                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7933   004D12  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
  7934   004D14  EF96  F026         	goto	u2860
  7935   004D18  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
  7936   004D1A  E106               	bnz	u2861
  7937   004D1C  0401               	decf	TurnDelay@Turn45Delay^0,w,c
  7938   004D1E  B0D8               	btfsc	status,0,c
  7939   004D20  EF94  F026         	goto	u2861
  7940   004D24  EF96  F026         	goto	u2860
  7941   004D28                     u2861:
  7942   004D28  EF7E  F026         	goto	l3560
  7943   004D2C                     u2860:
  7944   004D2C  0012               	return		;funcret
  7945   004D2E                     __end_of_TurnDelay:
  7946                           	callstack 0
  7947                           
  7948 ;; *************** function _reverseOneBlock *****************
  7949 ;; Defined at:
  7950 ;;		line 232 in file "dc_motor.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7953 ;;		 -> motorL(9), 
  7954 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7955 ;;		 -> motorR(9), 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;Total ram usage:        6 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 4
  7974 ;; This function calls:
  7975 ;;		_fullSpeedBack
  7976 ;;		_stop
  7977 ;; This function is called by:
  7978 ;;		_YellowMove
  7979 ;;		_PinkMove
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text53
  7984   004598                     __ptext53:
  7985                           	callstack 0
  7986   004598                     _reverseOneBlock:
  7987                           	callstack 25
  7988   004598                     
  7989                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
  7990   004598  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7991   00459C  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7992   0045A0  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7993   0045A4  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7994   0045A8  EC26  F020         	call	_fullSpeedBack	;wreg free
  7995   0045AC                     
  7996                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7997   0045AC  0EA3               	movlw	163
  7998   0045AE  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7999   0045B0  0E57               	movlw	87
  8000   0045B2  6E1E               	movwf	??_reverseOneBlock^0,c
  8001   0045B4  0E02               	movlw	2
  8002   0045B6                     u5177:
  8003   0045B6  2EE8               	decfsz	wreg,f,c
  8004   0045B8  D7FE               	bra	u5177
  8005   0045BA  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8006   0045BC  D7FC               	bra	u5177
  8007   0045BE  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8008   0045C0  D7FA               	bra	u5177
  8009   0045C2  D000               	nop2	
  8010   0045C4                     
  8011                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
  8012   0045C4  0EF3               	movlw	low _motorL
  8013   0045C6  6E14               	movwf	stop@mL^0,c
  8014   0045C8  0E00               	movlw	high _motorL
  8015   0045CA  6E15               	movwf	(stop@mL+1)^0,c
  8016   0045CC  0EC0               	movlw	low _motorR
  8017   0045CE  6E16               	movwf	stop@mR^0,c
  8018   0045D0  0E01               	movlw	high _motorR
  8019   0045D2  6E17               	movwf	(stop@mR+1)^0,c
  8020   0045D4  EC49  F021         	call	_stop	;wreg free
  8021                           
  8022                           ;dc_motor.c: 236:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8023   0045D8  0E52               	movlw	82
  8024   0045DA  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  8025   0045DC  0E2B               	movlw	43
  8026   0045DE  6E1E               	movwf	??_reverseOneBlock^0,c
  8027   0045E0  0E00               	movlw	0
  8028   0045E2                     u5187:
  8029   0045E2  2EE8               	decfsz	wreg,f,c
  8030   0045E4  D7FE               	bra	u5187
  8031   0045E6  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8032   0045E8  D7FC               	bra	u5187
  8033   0045EA  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8034   0045EC  D7FA               	bra	u5187
  8035   0045EE  D000               	nop2	
  8036   0045F0  0012               	return		;funcret
  8037   0045F2                     __end_of_reverseOneBlock:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function _reverseDetect *****************
  8041 ;; Defined at:
  8042 ;;		line 225 in file "dc_motor.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8045 ;;		 -> motorL(9), 
  8046 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8047 ;;		 -> motorR(9), 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;Total ram usage:        6 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 4
  8066 ;; This function calls:
  8067 ;;		_fullSpeedBack
  8068 ;;		_stop
  8069 ;; This function is called by:
  8070 ;;		_RedMove
  8071 ;;		_GreenMove
  8072 ;;		_BlueMove
  8073 ;;		_YellowMove
  8074 ;;		_PinkMove
  8075 ;;		_OrangeMove
  8076 ;;		_LightBlueMove
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           	psect	text54
  8081   0045F2                     __ptext54:
  8082                           	callstack 0
  8083   0045F2                     _reverseDetect:
  8084                           	callstack 24
  8085   0045F2                     
  8086                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
  8087   0045F2  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  8088   0045F6  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  8089   0045FA  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  8090   0045FE  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  8091   004602  EC26  F020         	call	_fullSpeedBack	;wreg free
  8092   004606                     
  8093                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8094   004606  0E11               	movlw	17
  8095   004608  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8096   00460A  0E3C               	movlw	60
  8097   00460C  6E1E               	movwf	??_reverseDetect^0,c
  8098   00460E  0ECB               	movlw	203
  8099   004610                     u5197:
  8100   004610  2EE8               	decfsz	wreg,f,c
  8101   004612  D7FE               	bra	u5197
  8102   004614  2E1E               	decfsz	??_reverseDetect^0,f,c
  8103   004616  D7FC               	bra	u5197
  8104   004618  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8105   00461A  D7FA               	bra	u5197
  8106   00461C  F000               	nop	
  8107   00461E                     
  8108                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
  8109   00461E  0EF3               	movlw	low _motorL
  8110   004620  6E14               	movwf	stop@mL^0,c
  8111   004622  0E00               	movlw	high _motorL
  8112   004624  6E15               	movwf	(stop@mL+1)^0,c
  8113   004626  0EC0               	movlw	low _motorR
  8114   004628  6E16               	movwf	stop@mR^0,c
  8115   00462A  0E01               	movlw	high _motorR
  8116   00462C  6E17               	movwf	(stop@mR+1)^0,c
  8117   00462E  EC49  F021         	call	_stop	;wreg free
  8118                           
  8119                           ;dc_motor.c: 229:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8120   004632  0E52               	movlw	82
  8121   004634  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8122   004636  0E2B               	movlw	43
  8123   004638  6E1E               	movwf	??_reverseDetect^0,c
  8124   00463A  0E00               	movlw	0
  8125   00463C                     u5207:
  8126   00463C  2EE8               	decfsz	wreg,f,c
  8127   00463E  D7FE               	bra	u5207
  8128   004640  2E1E               	decfsz	??_reverseDetect^0,f,c
  8129   004642  D7FC               	bra	u5207
  8130   004644  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8131   004646  D7FA               	bra	u5207
  8132   004648  D000               	nop2	
  8133   00464A  0012               	return		;funcret
  8134   00464C                     __end_of_reverseDetect:
  8135                           	callstack 0
  8136                           
  8137 ;; *************** function _fullSpeedBack *****************
  8138 ;; Defined at:
  8139 ;;		line 185 in file "dc_motor.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8142 ;;		 -> motorL(9), 
  8143 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8144 ;;		 -> motorR(9), 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8159 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8160 ;;Total ram usage:        6 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; Hardware stack levels required when called: 3
  8163 ;; This function calls:
  8164 ;;		_setMotorPWM
  8165 ;; This function is called by:
  8166 ;;		_reverseDetect
  8167 ;;		_reverseOneBlock
  8168 ;;		_RetryMove
  8169 ;;		_Backhalfblock
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text55
  8174   00404C                     __ptext55:
  8175                           	callstack 0
  8176   00404C                     _fullSpeedBack:
  8177                           	callstack 24
  8178   00404C                     
  8179                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
  8180   00404C  EE20 F001          	lfsr	2,1
  8181   004050  5014               	movf	fullSpeedBack@mL^0,w,c
  8182   004052  26D9               	addwf	fsr2l,f,c
  8183   004054  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  8184   004056  22DA               	addwfc	fsr2h,f,c
  8185   004058  0E00               	movlw	0
  8186   00405A  6EDF               	movwf	indf2,c
  8187                           
  8188                           ;dc_motor.c: 189:     mR->direction =0;
  8189   00405C  EE20 F001          	lfsr	2,1
  8190   004060  5016               	movf	fullSpeedBack@mR^0,w,c
  8191   004062  26D9               	addwf	fsr2l,f,c
  8192   004064  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  8193   004066  22DA               	addwfc	fsr2h,f,c
  8194   004068  0E00               	movlw	0
  8195   00406A  6EDF               	movwf	indf2,c
  8196                           
  8197                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
  8198   00406C  EF5C  F020         	goto	l3554
  8199   004070                     l3546:
  8200                           
  8201                           ;dc_motor.c: 192:         mL->power+=10;
  8202   004070  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8203   004074  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8204   004078  0E0A               	movlw	10
  8205   00407A  26DF               	addwf	indf2,f,c
  8206                           
  8207                           ;dc_motor.c: 193:         mR->power+=10;
  8208   00407C  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8209   004080  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8210   004084  0E0A               	movlw	10
  8211   004086  26DF               	addwf	indf2,f,c
  8212   004088                     
  8213                           ;dc_motor.c: 195:         setMotorPWM(mL);
  8214   004088  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  8215   00408C  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  8216   004090  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8217   004094                     
  8218                           ;dc_motor.c: 196:         setMotorPWM(mR);
  8219   004094  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  8220   004098  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  8221   00409C  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8222   0040A0                     
  8223                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8224   0040A0  0E02               	movlw	2
  8225   0040A2  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  8226   0040A4  0EA0               	movlw	160
  8227   0040A6  6E18               	movwf	??_fullSpeedBack^0,c
  8228   0040A8  0E92               	movlw	146
  8229   0040AA                     u5217:
  8230   0040AA  2EE8               	decfsz	wreg,f,c
  8231   0040AC  D7FE               	bra	u5217
  8232   0040AE  2E18               	decfsz	??_fullSpeedBack^0,f,c
  8233   0040B0  D7FC               	bra	u5217
  8234   0040B2  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  8235   0040B4  D7FA               	bra	u5217
  8236   0040B6  D000               	nop2	
  8237   0040B8                     l3554:
  8238   0040B8  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8239   0040BC  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8240   0040C0  0E1E               	movlw	30
  8241   0040C2  60DF               	cpfslt	indf2,c
  8242   0040C4  EF66  F020         	goto	u2841
  8243   0040C8  EF68  F020         	goto	u2840
  8244   0040CC                     u2841:
  8245   0040CC  EF74  F020         	goto	l561
  8246   0040D0                     u2840:
  8247   0040D0  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8248   0040D4  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8249   0040D8  0E1D               	movlw	29
  8250   0040DA  64DF               	cpfsgt	indf2,c
  8251   0040DC  EF72  F020         	goto	u2851
  8252   0040E0  EF74  F020         	goto	u2850
  8253   0040E4                     u2851:
  8254   0040E4  EF38  F020         	goto	l3546
  8255   0040E8                     u2850:
  8256   0040E8                     l561:
  8257   0040E8  0012               	return		;funcret
  8258   0040EA                     __end_of_fullSpeedBack:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _Interrupts_init *****************
  8262 ;; Defined at:
  8263 ;;		line 12 in file "interrupts.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		None
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_main
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text56
  8292   004EA8                     __ptext56:
  8293                           	callstack 0
  8294   004EA8                     _Interrupts_init:
  8295                           	callstack 29
  8296   004EA8  0012               	return		;funcret
  8297   004EAA                     __end_of_Interrupts_init:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _Forwardhalfblock *****************
  8301 ;; Defined at:
  8302 ;;		line 245 in file "dc_motor.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8305 ;;		 -> motorL(9), 
  8306 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8307 ;;		 -> motorR(9), 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;Total ram usage:        6 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; Hardware stack levels required when called: 4
  8326 ;; This function calls:
  8327 ;;		_fullSpeedAhead
  8328 ;;		_stop
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text57
  8335   00464C                     __ptext57:
  8336                           	callstack 0
  8337   00464C                     _Forwardhalfblock:
  8338                           	callstack 26
  8339   00464C                     
  8340                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
  8341   00464C  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8342   004650  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8343   004654  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8344   004658  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8345   00465C  EC75  F020         	call	_fullSpeedAhead	;wreg free
  8346   004660                     
  8347                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  8348   004660  0E52               	movlw	82
  8349   004662  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8350   004664  0E2B               	movlw	43
  8351   004666  6E1E               	movwf	??_Forwardhalfblock^0,c
  8352   004668  0E00               	movlw	0
  8353   00466A                     u5227:
  8354   00466A  2EE8               	decfsz	wreg,f,c
  8355   00466C  D7FE               	bra	u5227
  8356   00466E  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8357   004670  D7FC               	bra	u5227
  8358   004672  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8359   004674  D7FA               	bra	u5227
  8360   004676  D000               	nop2	
  8361   004678                     
  8362                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
  8363   004678  0EF3               	movlw	low _motorL
  8364   00467A  6E14               	movwf	stop@mL^0,c
  8365   00467C  0E00               	movlw	high _motorL
  8366   00467E  6E15               	movwf	(stop@mL+1)^0,c
  8367   004680  0EC0               	movlw	low _motorR
  8368   004682  6E16               	movwf	stop@mR^0,c
  8369   004684  0E01               	movlw	high _motorR
  8370   004686  6E17               	movwf	(stop@mR+1)^0,c
  8371   004688  EC49  F021         	call	_stop	;wreg free
  8372                           
  8373                           ;dc_motor.c: 249:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8374   00468C  0E52               	movlw	82
  8375   00468E  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8376   004690  0E2B               	movlw	43
  8377   004692  6E1E               	movwf	??_Forwardhalfblock^0,c
  8378   004694  0E00               	movlw	0
  8379   004696                     u5237:
  8380   004696  2EE8               	decfsz	wreg,f,c
  8381   004698  D7FE               	bra	u5237
  8382   00469A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8383   00469C  D7FC               	bra	u5237
  8384   00469E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8385   0046A0  D7FA               	bra	u5237
  8386   0046A2  D000               	nop2	
  8387   0046A4  0012               	return		;funcret
  8388   0046A6                     __end_of_Forwardhalfblock:
  8389                           	callstack 0
  8390                           
  8391 ;; *************** function _stop *****************
  8392 ;; Defined at:
  8393 ;;		line 93 in file "dc_motor.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8396 ;;		 -> motorL(9), 
  8397 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8398 ;;		 -> motorR(9), 
  8399 ;; Auto vars:     Size  Location     Type
  8400 ;;		None
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  1    wreg      void 
  8403 ;; Registers used:
  8404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;Total ram usage:        6 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 3
  8417 ;; This function calls:
  8418 ;;		_setMotorPWM
  8419 ;; This function is called by:
  8420 ;;		_main
  8421 ;;		_turnRight45
  8422 ;;		_turnLeft45
  8423 ;;		_reverseDetect
  8424 ;;		_reverseOneBlock
  8425 ;;		_ForwardOneBlock
  8426 ;;		_Forwardhalfblock
  8427 ;;		_RetryMove
  8428 ;;		_Backhalfblock
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text58
  8433   004292                     __ptext58:
  8434                           	callstack 0
  8435   004292                     _stop:
  8436                           	callstack 25
  8437   004292                     
  8438                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
  8439   004292  EF6F  F021         	goto	l3512
  8440   004296                     l3504:
  8441                           
  8442                           ;dc_motor.c: 97:         mL->power-=10;
  8443   004296  C014  FFD9         	movff	stop@mL,fsr2l
  8444   00429A  C015  FFDA         	movff	stop@mL+1,fsr2h
  8445   00429E  0E0A               	movlw	10
  8446   0042A0  5EDF               	subwf	indf2,f,c
  8447                           
  8448                           ;dc_motor.c: 98:         mR->power-=10;
  8449   0042A2  C016  FFD9         	movff	stop@mR,fsr2l
  8450   0042A6  C017  FFDA         	movff	stop@mR+1,fsr2h
  8451   0042AA  0E0A               	movlw	10
  8452   0042AC  5EDF               	subwf	indf2,f,c
  8453   0042AE                     
  8454                           ;dc_motor.c: 103:         setMotorPWM(mL);
  8455   0042AE  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8456   0042B2  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8457   0042B6  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8458   0042BA                     
  8459                           ;dc_motor.c: 104:         setMotorPWM(mR);
  8460   0042BA  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8461   0042BE  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8462   0042C2  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8463   0042C6                     
  8464                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8465   0042C6  0E02               	movlw	2
  8466   0042C8  6E19               	movwf	(??_stop+1)^0,c
  8467   0042CA  0EA0               	movlw	160
  8468   0042CC  6E18               	movwf	??_stop^0,c
  8469   0042CE  0E92               	movlw	146
  8470   0042D0                     u5247:
  8471   0042D0  2EE8               	decfsz	wreg,f,c
  8472   0042D2  D7FE               	bra	u5247
  8473   0042D4  2E18               	decfsz	??_stop^0,f,c
  8474   0042D6  D7FC               	bra	u5247
  8475   0042D8  2E19               	decfsz	(??_stop+1)^0,f,c
  8476   0042DA  D7FA               	bra	u5247
  8477   0042DC  D000               	nop2	
  8478   0042DE                     l3512:
  8479                           
  8480                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
  8481   0042DE  C014  FFD9         	movff	stop@mL,fsr2l
  8482   0042E2  C015  FFDA         	movff	stop@mL+1,fsr2h
  8483   0042E6  50DF               	movf	indf2,w,c
  8484   0042E8  A4D8               	btfss	status,2,c
  8485   0042EA  EF79  F021         	goto	u2781
  8486   0042EE  EF7B  F021         	goto	u2780
  8487   0042F2                     u2781:
  8488   0042F2  EF4B  F021         	goto	l3504
  8489   0042F6                     u2780:
  8490   0042F6  C016  FFD9         	movff	stop@mR,fsr2l
  8491   0042FA  C017  FFDA         	movff	stop@mR+1,fsr2h
  8492   0042FE  50DF               	movf	indf2,w,c
  8493   004300  A4D8               	btfss	status,2,c
  8494   004302  EF85  F021         	goto	u2791
  8495   004306  EF87  F021         	goto	u2790
  8496   00430A                     u2791:
  8497   00430A  EF4B  F021         	goto	l3504
  8498   00430E                     u2790:
  8499   00430E  0012               	return		;funcret
  8500   004310                     __end_of_stop:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _fullSpeedAhead *****************
  8504 ;; Defined at:
  8505 ;;		line 147 in file "dc_motor.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8508 ;;		 -> motorL(9), 
  8509 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8510 ;;		 -> motorR(9), 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;		None
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;Total ram usage:        6 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 3
  8529 ;; This function calls:
  8530 ;;		_setMotorPWM
  8531 ;; This function is called by:
  8532 ;;		_main
  8533 ;;		_ForwardOneBlock
  8534 ;;		_Forwardhalfblock
  8535 ;;		_RetryMove
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text59
  8540   0040EA                     __ptext59:
  8541                           	callstack 0
  8542   0040EA                     _fullSpeedAhead:
  8543                           	callstack 24
  8544   0040EA                     
  8545                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
  8546   0040EA  EE20 F001          	lfsr	2,1
  8547   0040EE  5014               	movf	fullSpeedAhead@mL^0,w,c
  8548   0040F0  26D9               	addwf	fsr2l,f,c
  8549   0040F2  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8550   0040F4  22DA               	addwfc	fsr2h,f,c
  8551   0040F6  0E01               	movlw	1
  8552   0040F8  6EDF               	movwf	indf2,c
  8553                           
  8554                           ;dc_motor.c: 151:     mR->direction =1;
  8555   0040FA  EE20 F001          	lfsr	2,1
  8556   0040FE  5016               	movf	fullSpeedAhead@mR^0,w,c
  8557   004100  26D9               	addwf	fsr2l,f,c
  8558   004102  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8559   004104  22DA               	addwfc	fsr2h,f,c
  8560   004106  0E01               	movlw	1
  8561   004108  6EDF               	movwf	indf2,c
  8562                           
  8563                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
  8564   00410A  EFAB  F020         	goto	l3498
  8565   00410E                     l3490:
  8566                           
  8567                           ;dc_motor.c: 154:         mL->power+=10;
  8568   00410E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8569   004112  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8570   004116  0E0A               	movlw	10
  8571   004118  26DF               	addwf	indf2,f,c
  8572                           
  8573                           ;dc_motor.c: 155:         mR->power+=10;
  8574   00411A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8575   00411E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8576   004122  0E0A               	movlw	10
  8577   004124  26DF               	addwf	indf2,f,c
  8578   004126                     
  8579                           ;dc_motor.c: 157:         setMotorPWM(mL);
  8580   004126  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8581   00412A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8582   00412E  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8583   004132                     
  8584                           ;dc_motor.c: 158:         setMotorPWM(mR);
  8585   004132  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8586   004136  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8587   00413A  ECE8  F01B         	call	_setMotorPWM	;wreg free
  8588   00413E                     
  8589                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8590   00413E  0E02               	movlw	2
  8591   004140  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8592   004142  0EA0               	movlw	160
  8593   004144  6E18               	movwf	??_fullSpeedAhead^0,c
  8594   004146  0E92               	movlw	146
  8595   004148                     u5257:
  8596   004148  2EE8               	decfsz	wreg,f,c
  8597   00414A  D7FE               	bra	u5257
  8598   00414C  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8599   00414E  D7FC               	bra	u5257
  8600   004150  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8601   004152  D7FA               	bra	u5257
  8602   004154  D000               	nop2	
  8603   004156                     l3498:
  8604   004156  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8605   00415A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8606   00415E  0E1E               	movlw	30
  8607   004160  60DF               	cpfslt	indf2,c
  8608   004162  EFB5  F020         	goto	u2761
  8609   004166  EFB7  F020         	goto	u2760
  8610   00416A                     u2761:
  8611   00416A  EFC3  F020         	goto	l545
  8612   00416E                     u2760:
  8613   00416E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8614   004172  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8615   004176  0E1D               	movlw	29
  8616   004178  64DF               	cpfsgt	indf2,c
  8617   00417A  EFC1  F020         	goto	u2771
  8618   00417E  EFC3  F020         	goto	u2770
  8619   004182                     u2771:
  8620   004182  EF87  F020         	goto	l3490
  8621   004186                     u2770:
  8622   004186                     l545:
  8623   004186  0012               	return		;funcret
  8624   004188                     __end_of_fullSpeedAhead:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _setMotorPWM *****************
  8628 ;; Defined at:
  8629 ;;		line 68 in file "dc_motor.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8632 ;;		 -> motorR(9), motorL(9), 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  negDuty         1   18[COMRAM] unsigned char 
  8635 ;;  posDuty         1   17[COMRAM] unsigned char 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      void 
  8638 ;; Registers used:
  8639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;Total ram usage:        6 bytes
  8650 ;; Hardware stack levels used: 1
  8651 ;; Hardware stack levels required when called: 2
  8652 ;; This function calls:
  8653 ;;		___lwdiv
  8654 ;;		___wmul
  8655 ;; This function is called by:
  8656 ;;		_stop
  8657 ;;		_turnLeft
  8658 ;;		_turnRight
  8659 ;;		_fullSpeedAhead
  8660 ;;		_timed_forward
  8661 ;;		_fullSpeedBack
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text60
  8666   0037D0                     __ptext60:
  8667                           	callstack 0
  8668   0037D0                     _setMotorPWM:
  8669                           	callstack 25
  8670   0037D0                     
  8671                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8672   0037D0  EE20 F002          	lfsr	2,2
  8673   0037D4  500E               	movf	setMotorPWM@m^0,w,c
  8674   0037D6  26D9               	addwf	fsr2l,f,c
  8675   0037D8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8676   0037DA  22DA               	addwfc	fsr2h,f,c
  8677   0037DC  50DF               	movf	indf2,w,c
  8678   0037DE  B4D8               	btfsc	status,2,c
  8679   0037E0  EFF4  F01B         	goto	u2561
  8680   0037E4  EFF6  F01B         	goto	u2560
  8681   0037E8                     u2561:
  8682   0037E8  EF2A  F01C         	goto	l3376
  8683   0037EC                     u2560:
  8684   0037EC                     
  8685                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8686   0037EC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8687   0037F0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8688   0037F4  50DF               	movf	indf2,w,c
  8689   0037F6  6E10               	movwf	??_setMotorPWM^0,c
  8690   0037F8  5010               	movf	??_setMotorPWM^0,w,c
  8691   0037FA  6E01               	movwf	___wmul@multiplier^0,c
  8692   0037FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8693   0037FE  EE20 F003          	lfsr	2,3
  8694   003802  500E               	movf	setMotorPWM@m^0,w,c
  8695   003804  26D9               	addwf	fsr2l,f,c
  8696   003806  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8697   003808  22DA               	addwfc	fsr2h,f,c
  8698   00380A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8699   00380E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8700   003812  ECEB  F026         	call	___wmul	;wreg free
  8701   003816  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8702   00381A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8703   00381E  0E00               	movlw	0
  8704   003820  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8705   003822  0E64               	movlw	100
  8706   003824  6E09               	movwf	___lwdiv@divisor^0,c
  8707   003826  EC03  F022         	call	___lwdiv	;wreg free
  8708   00382A  EE20 F003          	lfsr	2,3
  8709   00382E  500E               	movf	setMotorPWM@m^0,w,c
  8710   003830  26D9               	addwf	fsr2l,f,c
  8711   003832  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8712   003834  22DA               	addwfc	fsr2h,f,c
  8713   003836  50DF               	movf	indf2,w,c
  8714   003838  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8715   00383A  5007               	movf	?___lwdiv^0,w,c
  8716   00383C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8717   00383E  6E12               	movwf	setMotorPWM@posDuty^0,c
  8718   003840                     
  8719                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8720   003840  EE20 F003          	lfsr	2,3
  8721   003844  500E               	movf	setMotorPWM@m^0,w,c
  8722   003846  26D9               	addwf	fsr2l,f,c
  8723   003848  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8724   00384A  22DA               	addwfc	fsr2h,f,c
  8725   00384C  50DF               	movf	indf2,w,c
  8726   00384E  6E13               	movwf	setMotorPWM@negDuty^0,c
  8727                           
  8728                           ;dc_motor.c: 75:     }
  8729   003850  EF4D  F01C         	goto	l3380
  8730   003854                     l3376:
  8731                           
  8732                           ;dc_motor.c: 77:         posDuty=0;
  8733   003854  0E00               	movlw	0
  8734   003856  6E12               	movwf	setMotorPWM@posDuty^0,c
  8735   003858                     
  8736                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8737   003858  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8738   00385C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8739   003860  50DF               	movf	indf2,w,c
  8740   003862  6E10               	movwf	??_setMotorPWM^0,c
  8741   003864  5010               	movf	??_setMotorPWM^0,w,c
  8742   003866  6E01               	movwf	___wmul@multiplier^0,c
  8743   003868  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8744   00386A  EE20 F003          	lfsr	2,3
  8745   00386E  500E               	movf	setMotorPWM@m^0,w,c
  8746   003870  26D9               	addwf	fsr2l,f,c
  8747   003872  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8748   003874  22DA               	addwfc	fsr2h,f,c
  8749   003876  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8750   00387A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8751   00387E  ECEB  F026         	call	___wmul	;wreg free
  8752   003882  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8753   003886  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8754   00388A  0E00               	movlw	0
  8755   00388C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8756   00388E  0E64               	movlw	100
  8757   003890  6E09               	movwf	___lwdiv@divisor^0,c
  8758   003892  EC03  F022         	call	___lwdiv	;wreg free
  8759   003896  5007               	movf	?___lwdiv^0,w,c
  8760   003898  6E13               	movwf	setMotorPWM@negDuty^0,c
  8761   00389A                     l3380:
  8762                           
  8763                           ;dc_motor.c: 81:     if (m->direction) {
  8764   00389A  EE20 F001          	lfsr	2,1
  8765   00389E  500E               	movf	setMotorPWM@m^0,w,c
  8766   0038A0  26D9               	addwf	fsr2l,f,c
  8767   0038A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8768   0038A4  22DA               	addwfc	fsr2h,f,c
  8769   0038A6  50DF               	movf	indf2,w,c
  8770   0038A8  B4D8               	btfsc	status,2,c
  8771   0038AA  EF59  F01C         	goto	u2571
  8772   0038AE  EF5B  F01C         	goto	u2570
  8773   0038B2                     u2571:
  8774   0038B2  EF7D  F01C         	goto	l3384
  8775   0038B6                     u2570:
  8776   0038B6                     
  8777                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=negDuty;
  8778   0038B6  EE20 F005          	lfsr	2,5
  8779   0038BA  500E               	movf	setMotorPWM@m^0,w,c
  8780   0038BC  26D9               	addwf	fsr2l,f,c
  8781   0038BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8782   0038C0  22DA               	addwfc	fsr2h,f,c
  8783   0038C2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8784   0038C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8785   0038CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8786   0038CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8787   0038D2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8788                           
  8789                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=posDuty;
  8790   0038D6  EE20 F007          	lfsr	2,7
  8791   0038DA  500E               	movf	setMotorPWM@m^0,w,c
  8792   0038DC  26D9               	addwf	fsr2l,f,c
  8793   0038DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8794   0038E0  22DA               	addwfc	fsr2h,f,c
  8795   0038E2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8796   0038E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8797   0038EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8798   0038EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8799   0038F2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8800                           
  8801                           ;dc_motor.c: 86:     } else {
  8802   0038F6  EF9D  F01C         	goto	l515
  8803   0038FA                     l3384:
  8804                           
  8805                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=posDuty;
  8806   0038FA  EE20 F005          	lfsr	2,5
  8807   0038FE  500E               	movf	setMotorPWM@m^0,w,c
  8808   003900  26D9               	addwf	fsr2l,f,c
  8809   003902  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8810   003904  22DA               	addwfc	fsr2h,f,c
  8811   003906  CFDE F010          	movff	postinc2,??_setMotorPWM
  8812   00390A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8813   00390E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8814   003912  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8815   003916  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8816                           
  8817                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=negDuty;
  8818   00391A  EE20 F007          	lfsr	2,7
  8819   00391E  500E               	movf	setMotorPWM@m^0,w,c
  8820   003920  26D9               	addwf	fsr2l,f,c
  8821   003922  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8822   003924  22DA               	addwfc	fsr2h,f,c
  8823   003926  CFDE F010          	movff	postinc2,??_setMotorPWM
  8824   00392A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8825   00392E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8826   003932  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8827   003936  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8828   00393A                     l515:
  8829   00393A  0012               	return		;funcret
  8830   00393C                     __end_of_setMotorPWM:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function ___wmul *****************
  8834 ;; Defined at:
  8835 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  multiplier      2    0[COMRAM] unsigned int 
  8838 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;  product         2    4[COMRAM] unsigned int 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  2    0[COMRAM] unsigned int 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, prodl, prodh
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;Total ram usage:        6 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 1
  8857 ;; This function calls:
  8858 ;;		Nothing
  8859 ;; This function is called by:
  8860 ;;		_setMotorPWM
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text61
  8865   004DD6                     __ptext61:
  8866                           	callstack 0
  8867   004DD6                     ___wmul:
  8868                           	callstack 25
  8869   004DD6  5001               	movf	___wmul@multiplier^0,w,c
  8870   004DD8  0203               	mulwf	___wmul@multiplicand^0,c
  8871   004DDA  CFF3 F005          	movff	prodl,___wmul@product
  8872   004DDE  CFF4 F006          	movff	prodh,___wmul@product+1
  8873   004DE2  5001               	movf	___wmul@multiplier^0,w,c
  8874   004DE4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8875   004DE6  50F3               	movf	243,w,c
  8876   004DE8  2606               	addwf	(___wmul@product+1)^0,f,c
  8877   004DEA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8878   004DEC  0203               	mulwf	___wmul@multiplicand^0,c
  8879   004DEE  50F3               	movf	243,w,c
  8880   004DF0  2606               	addwf	(___wmul@product+1)^0,f,c
  8881   004DF2  C005  F001         	movff	___wmul@product,?___wmul
  8882   004DF6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8883   004DFA  0012               	return		;funcret
  8884   004DFC                     __end_of___wmul:
  8885                           	callstack 0
  8886                           
  8887 ;; *************** function ___lwdiv *****************
  8888 ;; Defined at:
  8889 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  dividend        2    6[COMRAM] unsigned int 
  8892 ;;  divisor         2    8[COMRAM] unsigned int 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  quotient        2   10[COMRAM] unsigned int 
  8895 ;;  counter         1   12[COMRAM] unsigned char 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  2    6[COMRAM] unsigned int 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;Total ram usage:        7 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 1
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		_setMotorPWM
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           	psect	text62
  8920   004406                     __ptext62:
  8921                           	callstack 0
  8922   004406                     ___lwdiv:
  8923                           	callstack 25
  8924   004406  0E00               	movlw	0
  8925   004408  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8926   00440A  0E00               	movlw	0
  8927   00440C  6E0B               	movwf	___lwdiv@quotient^0,c
  8928   00440E  5009               	movf	___lwdiv@divisor^0,w,c
  8929   004410  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8930   004412  B4D8               	btfsc	status,2,c
  8931   004414  EF0E  F022         	goto	u2521
  8932   004418  EF10  F022         	goto	u2520
  8933   00441C                     u2521:
  8934   00441C  EF38  F022         	goto	l1209
  8935   004420                     u2520:
  8936   004420  0E01               	movlw	1
  8937   004422  6E0D               	movwf	___lwdiv@counter^0,c
  8938   004424  EF18  F022         	goto	l3348
  8939   004428                     l3346:
  8940   004428  90D8               	bcf	status,0,c
  8941   00442A  3609               	rlcf	___lwdiv@divisor^0,f,c
  8942   00442C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8943   00442E  2A0D               	incf	___lwdiv@counter^0,f,c
  8944   004430                     l3348:
  8945   004430  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8946   004432  EF1D  F022         	goto	u2531
  8947   004436  EF1F  F022         	goto	u2530
  8948   00443A                     u2531:
  8949   00443A  EF14  F022         	goto	l3346
  8950   00443E                     u2530:
  8951   00443E                     l3350:
  8952   00443E  90D8               	bcf	status,0,c
  8953   004440  360B               	rlcf	___lwdiv@quotient^0,f,c
  8954   004442  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8955   004444  5009               	movf	___lwdiv@divisor^0,w,c
  8956   004446  5C07               	subwf	___lwdiv@dividend^0,w,c
  8957   004448  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8958   00444A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8959   00444C  A0D8               	btfss	status,0,c
  8960   00444E  EF2B  F022         	goto	u2541
  8961   004452  EF2D  F022         	goto	u2540
  8962   004456                     u2541:
  8963   004456  EF32  F022         	goto	l3358
  8964   00445A                     u2540:
  8965   00445A  5009               	movf	___lwdiv@divisor^0,w,c
  8966   00445C  5E07               	subwf	___lwdiv@dividend^0,f,c
  8967   00445E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8968   004460  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8969   004462  800B               	bsf	___lwdiv@quotient^0,0,c
  8970   004464                     l3358:
  8971   004464  90D8               	bcf	status,0,c
  8972   004466  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8973   004468  3209               	rrcf	___lwdiv@divisor^0,f,c
  8974   00446A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8975   00446C  EF1F  F022         	goto	l3350
  8976   004470                     l1209:
  8977   004470  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8978   004474  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8979   004478  0012               	return		;funcret
  8980   00447A                     __end_of___lwdiv:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function _Colour_decider *****************
  8984 ;; Defined at:
  8985 ;;		line 125 in file "color.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;  vals            2   74[COMRAM] PTR struct RGB
  8988 ;;		 -> vals(8), 
  8989 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8990 ;;		 -> rel(12), 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;  RGB_col        12    6[BANK0 ] float [3]
  8993 ;;  Hue             4   28[BANK0 ] float 
  8994 ;;  Cmin            4   22[BANK0 ] float 
  8995 ;;  Cmax            4   18[BANK0 ] float 
  8996 ;;  i               2   26[BANK0 ] int 
  8997 ;;  Cmax_i          2    4[BANK0 ] int 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2   74[COMRAM] int 
  9000 ;; Registers used:
  9001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;Total ram usage:       38 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; Hardware stack levels required when called: 3
  9014 ;; This function calls:
  9015 ;;		___fladd
  9016 ;;		___fldiv
  9017 ;;		___fleq
  9018 ;;		___flge
  9019 ;;		___flmul
  9020 ;;		___flsub
  9021 ;;		___xxtofl
  9022 ;; This function is called by:
  9023 ;;		_main
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text63
  9028   000E26                     __ptext63:
  9029                           	callstack 0
  9030   000E26                     _Colour_decider:
  9031                           	callstack 27
  9032   000E26                     
  9033                           ;color.c: 126:     float Cmax = 0;
  9034   000E26  0E00               	movlw	0
  9035   000E28  0100               	movlb	0	; () banked
  9036   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  9037   000E2C  0E00               	movlw	0
  9038   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  9039   000E30  0E00               	movlw	0
  9040   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  9041   000E34  0E00               	movlw	0
  9042   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  9043                           
  9044                           ;color.c: 127:     float Cmin= 100000;
  9045   000E38  0E00               	movlw	0
  9046   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  9047   000E3C  0E50               	movlw	80
  9048   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  9049   000E40  0EC3               	movlw	195
  9050   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  9051   000E44  0E47               	movlw	71
  9052   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  9053                           
  9054                           ;color.c: 128:     int Cmax_i =4;
  9055   000E48  0E00               	movlw	0
  9056   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  9057   000E4C  0E04               	movlw	4
  9058   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  9059   000E50                     
  9060                           ; BSR set to: 0
  9061                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  9062   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  9063   000E54  0E0B               	movlw	11
  9064   000E56                     u4061:
  9065   000E56  6ADE               	clrf	postinc2,c
  9066   000E58  06E8               	decf	wreg,f,c
  9067   000E5A  E2FD               	bc	u4061
  9068   000E5C                     
  9069                           ; BSR set to: 0
  9070   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  9071   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  9072   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  9073   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9074   000E6C  0E00               	movlw	0
  9075   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9076   000E70  0EFF               	movlw	-1
  9077   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  9078   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  9079   000E76  0E01               	movlw	1
  9080   000E78  EC4A  F01A         	call	___xxtofl
  9081   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  9082   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  9083   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  9084   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  9085   000E8C  EE20 F002          	lfsr	2,2
  9086   000E90  504B               	movf	Colour_decider@vals^0,w,c
  9087   000E92  26D9               	addwf	fsr2l,f,c
  9088   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9089   000E96  22DA               	addwfc	fsr2h,f,c
  9090   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  9091   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9092   000EA0  0E00               	movlw	0
  9093   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9094   000EA4  0EFF               	movlw	-1
  9095   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  9096   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  9097   000EAA  0E01               	movlw	1
  9098   000EAC  EC4A  F01A         	call	___xxtofl
  9099   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  9100   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  9101   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  9102   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  9103   000EC0  EE20 F004          	lfsr	2,4
  9104   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  9105   000EC6  26D9               	addwf	fsr2l,f,c
  9106   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9107   000ECA  22DA               	addwfc	fsr2h,f,c
  9108   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  9109   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9110   000ED4  0E00               	movlw	0
  9111   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9112   000ED8  0EFF               	movlw	-1
  9113   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  9114   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  9115   000EDE  0E01               	movlw	1
  9116   000EE0  EC4A  F01A         	call	___xxtofl
  9117   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  9118   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  9119   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  9120   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  9121   000EF4                     
  9122                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  9123   000EF4  0E00               	movlw	0
  9124   000EF6  0100               	movlb	0	; () banked
  9125   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  9126   000EFA  0E00               	movlw	0
  9127   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  9128   000EFE                     l4422:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  9132   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  9133   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  9134   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  9135   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  9136   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  9137   000F10  6E4F               	movwf	??_Colour_decider^0,c
  9138   000F12  0E00               	movlw	high Colour_decider@RGB_col
  9139   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  9140   000F16  90D8               	bcf	status,0,c
  9141   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9142   000F1A  6ED9               	movwf	fsr2l,c
  9143   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9144   000F1E  6EDA               	movwf	fsr2h,c
  9145   000F20  90D8               	bcf	status,0,c
  9146   000F22  36D9               	rlcf	fsr2l,f,c
  9147   000F24  36DA               	rlcf	fsr2h,f,c
  9148   000F26  504F               	movf	??_Colour_decider^0,w,c
  9149   000F28  26D9               	addwf	fsr2l,f,c
  9150   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  9151   000F2C  22DA               	addwfc	fsr2h,f,c
  9152   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  9153   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  9154   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  9155   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  9156   000F3E  ECF7  F01D         	call	___flge	;wreg free
  9157   000F42  B0D8               	btfsc	status,0,c
  9158   000F44  EFA6  F007         	goto	u4071
  9159   000F48  EFA8  F007         	goto	u4070
  9160   000F4C                     u4071:
  9161   000F4C  EFC5  F007         	goto	l4428
  9162   000F50                     u4070:
  9163   000F50                     
  9164                           ;color.c: 137:             Cmax=RGB_col[i];
  9165   000F50  0E66               	movlw	low Colour_decider@RGB_col
  9166   000F52  6E4F               	movwf	??_Colour_decider^0,c
  9167   000F54  0E00               	movlw	high Colour_decider@RGB_col
  9168   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  9169   000F58  90D8               	bcf	status,0,c
  9170   000F5A  0100               	movlb	0	; () banked
  9171   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9172   000F5E  6ED9               	movwf	fsr2l,c
  9173   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9174   000F62  6EDA               	movwf	fsr2h,c
  9175   000F64  90D8               	bcf	status,0,c
  9176   000F66  36D9               	rlcf	fsr2l,f,c
  9177   000F68  36DA               	rlcf	fsr2h,f,c
  9178   000F6A  504F               	movf	??_Colour_decider^0,w,c
  9179   000F6C  26D9               	addwf	fsr2l,f,c
  9180   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  9181   000F70  22DA               	addwfc	fsr2h,f,c
  9182   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  9183   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  9184   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  9185   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  9186   000F82                     
  9187                           ; BSR set to: 0
  9188                           ;color.c: 138:             Cmax_i=i;
  9189   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  9190   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  9191   000F8A                     l4428:
  9192                           
  9193                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  9194   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  9195   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  9196   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  9197   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  9198   000F92  90D8               	bcf	status,0,c
  9199   000F94  0100               	movlb	0	; () banked
  9200   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9201   000F98  6ED9               	movwf	fsr2l,c
  9202   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9203   000F9C  6EDA               	movwf	fsr2h,c
  9204   000F9E  90D8               	bcf	status,0,c
  9205   000FA0  36D9               	rlcf	fsr2l,f,c
  9206   000FA2  36DA               	rlcf	fsr2h,f,c
  9207   000FA4  504F               	movf	??_Colour_decider^0,w,c
  9208   000FA6  26D9               	addwf	fsr2l,f,c
  9209   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  9210   000FAA  22DA               	addwfc	fsr2h,f,c
  9211   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  9212   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9213   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9214   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9215   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  9216   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9217   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9218   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9219   000FCC  ECF7  F01D         	call	___flge	;wreg free
  9220   000FD0  B0D8               	btfsc	status,0,c
  9221   000FD2  EFED  F007         	goto	u4081
  9222   000FD6  EFEF  F007         	goto	u4080
  9223   000FDA                     u4081:
  9224   000FDA  EF08  F008         	goto	l4432
  9225   000FDE                     u4080:
  9226   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  9227   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  9228   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  9229   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9230   000FE6  90D8               	bcf	status,0,c
  9231   000FE8  0100               	movlb	0	; () banked
  9232   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9233   000FEC  6ED9               	movwf	fsr2l,c
  9234   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9235   000FF0  6EDA               	movwf	fsr2h,c
  9236   000FF2  90D8               	bcf	status,0,c
  9237   000FF4  36D9               	rlcf	fsr2l,f,c
  9238   000FF6  36DA               	rlcf	fsr2h,f,c
  9239   000FF8  504F               	movf	??_Colour_decider^0,w,c
  9240   000FFA  26D9               	addwf	fsr2l,f,c
  9241   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9242   000FFE  22DA               	addwfc	fsr2h,f,c
  9243   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9244   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9245   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9246   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9247   001010                     l4432:
  9248                           
  9249                           ;color.c: 141:     }
  9250   001010  0100               	movlb	0	; () banked
  9251   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9252   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9253   001016                     
  9254                           ; BSR set to: 0
  9255   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9256   001018  EF17  F008         	goto	u4091
  9257   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9258   00101E  E109               	bnz	u4090
  9259   001020  0E03               	movlw	3
  9260   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9261   001024  A0D8               	btfss	status,0,c
  9262   001026  EF17  F008         	goto	u4091
  9263   00102A  EF19  F008         	goto	u4090
  9264   00102E                     u4091:
  9265   00102E  EF7F  F007         	goto	l4422
  9266   001032                     u4090:
  9267   001032                     
  9268                           ; BSR set to: 0
  9269                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9270   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9271   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9272   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9273   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9274   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9275   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9276   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9277   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9278   001052  EC5E  F025         	call	___flsub	;wreg free
  9279   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  9280   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  9281   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  9282   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  9283   001066  0E00               	movlw	0
  9284   001068  6E1D               	movwf	___fleq@ff2^0,c
  9285   00106A  0E00               	movlw	0
  9286   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  9287   00106E  0E00               	movlw	0
  9288   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  9289   001072  0E00               	movlw	0
  9290   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  9291   001076  EC33  F01F         	call	___fleq	;wreg free
  9292   00107A  A0D8               	btfss	status,0,c
  9293   00107C  EF42  F008         	goto	u4101
  9294   001080  EF44  F008         	goto	u4100
  9295   001084                     u4101:
  9296   001084  EF4A  F008         	goto	l4442
  9297   001088                     u4100:
  9298   001088                     l4438:
  9299   001088  0E00               	movlw	0
  9300   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9301   00108C  0E00               	movlw	0
  9302   00108E  6E4B               	movwf	?_Colour_decider^0,c
  9303   001090  EF80  F00C         	goto	l76
  9304   001094                     l4442:
  9305                           
  9306                           ;color.c: 146:     if (Cmax_i==0){
  9307   001094  0100               	movlb	0	; () banked
  9308   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9309   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9310   00109A  A4D8               	btfss	status,2,c
  9311   00109C  EF52  F008         	goto	u4111
  9312   0010A0  EF54  F008         	goto	u4110
  9313   0010A4                     u4111:
  9314   0010A4  EFC8  F008         	goto	l4450
  9315   0010A8                     u4110:
  9316   0010A8                     
  9317                           ; BSR set to: 0
  9318                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9319   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9320   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9321   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9322   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9323   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9324   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9325   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9326   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9327   0010C8  EC5E  F025         	call	___flsub	;wreg free
  9328   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  9329   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9330   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9331   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9332   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  9333   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9334   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9335   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9336   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  9337   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9338   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9339   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9340   0010FC  EC5E  F025         	call	___flsub	;wreg free
  9341   001100  C011  F019         	movff	?___flsub,___fldiv@b
  9342   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9343   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9344   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9345   001110  ECAC  F013         	call	___fldiv	;wreg free
  9346   001114  C019  F032         	movff	?___fldiv,___flmul@b
  9347   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9348   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9349   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9350   001124  0E00               	movlw	0
  9351   001126  6E36               	movwf	___flmul@a^0,c
  9352   001128  0E00               	movlw	0
  9353   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9354   00112C  0E70               	movlw	112
  9355   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9356   001130  0E42               	movlw	66
  9357   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9358   001134  EC97  F011         	call	___flmul	;wreg free
  9359   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9360   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9361   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9362   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9363   001148                     
  9364                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9365   001148  0100               	movlb	0	; () banked
  9366   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9367   00114C  EFAC  F008         	goto	u4120
  9368   001150  EFAA  F008         	goto	u4121
  9369   001154                     u4121:
  9370   001154  EFA7  F009         	goto	l4460
  9371   001158                     u4120:
  9372   001158                     
  9373                           ; BSR set to: 0
  9374   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9375   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9376   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9377   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9378   001168  0E00               	movlw	0
  9379   00116A  6E05               	movwf	___fladd@a^0,c
  9380   00116C  0E00               	movlw	0
  9381   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9382   001170  0EB4               	movlw	180
  9383   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9384   001174  0E43               	movlw	67
  9385   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9386   001178  EC37  F00F         	call	___fladd	;wreg free
  9387   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9388   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9389   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9390   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9391   00118C  EFA7  F009         	goto	l4460
  9392   001190                     l4450:
  9393                           
  9394                           ; BSR set to: 0
  9395   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9396   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9397   001194  A4D8               	btfss	status,2,c
  9398   001196  EFCF  F008         	goto	u4131
  9399   00119A  EFD1  F008         	goto	u4130
  9400   00119E                     u4131:
  9401   00119E  EF3D  F009         	goto	l4456
  9402   0011A2                     u4130:
  9403   0011A2                     
  9404                           ; BSR set to: 0
  9405                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9406   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9407   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9408   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9409   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9410   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9411   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9412   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9413   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9414   0011C2  EC5E  F025         	call	___flsub	;wreg free
  9415   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9416   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9417   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9418   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9419   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9420   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9421   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9422   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9423   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9424   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9425   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9426   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9427   0011F6  EC5E  F025         	call	___flsub	;wreg free
  9428   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9429   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9430   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9431   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9432   00120A  ECAC  F013         	call	___fldiv	;wreg free
  9433   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$3049
  9434   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3049+1
  9435   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3049+2
  9436   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3049+3
  9437   00121E                     
  9438                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9439   00121E  0E00               	movlw	0
  9440   001220  6E05               	movwf	___fladd@a^0,c
  9441   001222  0E00               	movlw	0
  9442   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9443   001226  0E00               	movlw	0
  9444   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9445   00122A  0E40               	movlw	64
  9446   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9447   00122E  C060  F001         	movff	_Colour_decider$3049,___fladd@b
  9448   001232  C061  F002         	movff	_Colour_decider$3049+1,___fladd@b+1
  9449   001236  C062  F003         	movff	_Colour_decider$3049+2,___fladd@b+2
  9450   00123A  C063  F004         	movff	_Colour_decider$3049+3,___fladd@b+3
  9451   00123E  EC37  F00F         	call	___fladd	;wreg free
  9452   001242  C001  F032         	movff	?___fladd,___flmul@b
  9453   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9454   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9455   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9456   001252  0E00               	movlw	0
  9457   001254  6E36               	movwf	___flmul@a^0,c
  9458   001256  0E00               	movlw	0
  9459   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9460   00125A  0E70               	movlw	112
  9461   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9462   00125E  0E42               	movlw	66
  9463   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9464   001262  EC97  F011         	call	___flmul	;wreg free
  9465   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9466   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9467   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9468   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9469                           
  9470                           ;color.c: 155:     }
  9471   001276  EFA7  F009         	goto	l4460
  9472   00127A                     l4456:
  9473                           
  9474                           ; BSR set to: 0
  9475                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9476   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9477   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9478   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9479   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9480   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9481   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9482   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9483   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9484   00129A  EC5E  F025         	call	___flsub	;wreg free
  9485   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9486   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9487   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9488   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9489   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9490   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9491   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9492   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9493   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9494   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9495   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9496   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9497   0012CE  EC5E  F025         	call	___flsub	;wreg free
  9498   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9499   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9500   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9501   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9502   0012E2  ECAC  F013         	call	___fldiv	;wreg free
  9503   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$3049
  9504   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3049+1
  9505   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3049+2
  9506   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3049+3
  9507   0012F6                     
  9508                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9509   0012F6  0E00               	movlw	0
  9510   0012F8  6E05               	movwf	___fladd@a^0,c
  9511   0012FA  0E00               	movlw	0
  9512   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9513   0012FE  0E80               	movlw	128
  9514   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9515   001302  0E40               	movlw	64
  9516   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9517   001306  C060  F001         	movff	_Colour_decider$3049,___fladd@b
  9518   00130A  C061  F002         	movff	_Colour_decider$3049+1,___fladd@b+1
  9519   00130E  C062  F003         	movff	_Colour_decider$3049+2,___fladd@b+2
  9520   001312  C063  F004         	movff	_Colour_decider$3049+3,___fladd@b+3
  9521   001316  EC37  F00F         	call	___fladd	;wreg free
  9522   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9523   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9524   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9525   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9526   00132A  0E00               	movlw	0
  9527   00132C  6E36               	movwf	___flmul@a^0,c
  9528   00132E  0E00               	movlw	0
  9529   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9530   001332  0E70               	movlw	112
  9531   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9532   001336  0E42               	movlw	66
  9533   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9534   00133A  EC97  F011         	call	___flmul	;wreg free
  9535   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9536   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9537   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9538   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9539   00134E                     l4460:
  9540                           
  9541                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9542   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9543   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9544   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9545   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9546   00135E  0E00               	movlw	0
  9547   001360  6E05               	movwf	___flge@ff2^0,c
  9548   001362  0E00               	movlw	0
  9549   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9550   001366  0EA5               	movlw	165
  9551   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9552   00136A  0E43               	movlw	67
  9553   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9554   00136E  ECF7  F01D         	call	___flge	;wreg free
  9555   001372  A0D8               	btfss	status,0,c
  9556   001374  EFBE  F009         	goto	u4141
  9557   001378  EFC0  F009         	goto	u4140
  9558   00137C                     u4141:
  9559   00137C  EFDF  F009         	goto	l4470
  9560   001380                     u4140:
  9561   001380  0E00               	movlw	0
  9562   001382  6E01               	movwf	___flge@ff1^0,c
  9563   001384  0E00               	movlw	0
  9564   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9565   001388  0EB4               	movlw	180
  9566   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9567   00138C  0E43               	movlw	67
  9568   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9569   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9570   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9571   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9572   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9573   0013A0  ECF7  F01D         	call	___flge	;wreg free
  9574   0013A4  A0D8               	btfss	status,0,c
  9575   0013A6  EFD7  F009         	goto	u4151
  9576   0013AA  EFD9  F009         	goto	u4150
  9577   0013AE                     u4151:
  9578   0013AE  EFDF  F009         	goto	l4470
  9579   0013B2                     u4150:
  9580   0013B2                     
  9581                           ;color.c: 164:         return 1;
  9582   0013B2  0E00               	movlw	0
  9583   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9584   0013B6  0E01               	movlw	1
  9585   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9586   0013BA  EF80  F00C         	goto	l76
  9587   0013BE                     l4470:
  9588   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9589   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9590   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9591   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9592   0013CE  0E00               	movlw	0
  9593   0013D0  6E05               	movwf	___flge@ff2^0,c
  9594   0013D2  0E00               	movlw	0
  9595   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9596   0013D6  0EA0               	movlw	160
  9597   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9598   0013DA  0E40               	movlw	64
  9599   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9600   0013DE  ECF7  F01D         	call	___flge	;wreg free
  9601   0013E2  A0D8               	btfss	status,0,c
  9602   0013E4  EFF6  F009         	goto	u4161
  9603   0013E8  EFF8  F009         	goto	u4160
  9604   0013EC                     u4161:
  9605   0013EC  EF17  F00A         	goto	l4480
  9606   0013F0                     u4160:
  9607   0013F0  0E00               	movlw	0
  9608   0013F2  6E01               	movwf	___flge@ff1^0,c
  9609   0013F4  0E00               	movlw	0
  9610   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9611   0013F8  0E40               	movlw	64
  9612   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9613   0013FC  0E41               	movlw	65
  9614   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9615   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9616   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9617   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9618   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9619   001410  ECF7  F01D         	call	___flge	;wreg free
  9620   001414  A0D8               	btfss	status,0,c
  9621   001416  EF0F  F00A         	goto	u4171
  9622   00141A  EF11  F00A         	goto	u4170
  9623   00141E                     u4171:
  9624   00141E  EF17  F00A         	goto	l4480
  9625   001422                     u4170:
  9626   001422                     
  9627                           ;color.c: 168:         return 2;
  9628   001422  0E00               	movlw	0
  9629   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9630   001426  0E02               	movlw	2
  9631   001428  6E4B               	movwf	?_Colour_decider^0,c
  9632   00142A  EF80  F00C         	goto	l76
  9633   00142E                     l4480:
  9634   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9635   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9636   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9637   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9638   00143E  0E00               	movlw	0
  9639   001440  6E05               	movwf	___flge@ff2^0,c
  9640   001442  0E00               	movlw	0
  9641   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9642   001446  0EA0               	movlw	160
  9643   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9644   00144A  0E41               	movlw	65
  9645   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9646   00144E  ECF7  F01D         	call	___flge	;wreg free
  9647   001452  A0D8               	btfss	status,0,c
  9648   001454  EF2E  F00A         	goto	u4181
  9649   001458  EF30  F00A         	goto	u4180
  9650   00145C                     u4181:
  9651   00145C  EFB0  F00A         	goto	l4506
  9652   001460                     u4180:
  9653   001460  0E00               	movlw	0
  9654   001462  6E01               	movwf	___flge@ff1^0,c
  9655   001464  0E00               	movlw	0
  9656   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9657   001468  0EE8               	movlw	232
  9658   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9659   00146C  0E41               	movlw	65
  9660   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9661   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9662   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9663   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9664   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9665   001480  ECF7  F01D         	call	___flge	;wreg free
  9666   001484  A0D8               	btfss	status,0,c
  9667   001486  EF47  F00A         	goto	u4191
  9668   00148A  EF49  F00A         	goto	u4190
  9669   00148E                     u4191:
  9670   00148E  EFB0  F00A         	goto	l4506
  9671   001492                     u4190:
  9672   001492                     
  9673                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9674   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9675   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9676   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9677   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9678   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9679   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9680   0014AA  0ECD               	movlw	205
  9681   0014AC  6E05               	movwf	___flge@ff2^0,c
  9682   0014AE  0ECC               	movlw	204
  9683   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9684   0014B2  0E4C               	movlw	76
  9685   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9686   0014B6  0E3E               	movlw	62
  9687   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9688   0014BA  ECF7  F01D         	call	___flge	;wreg free
  9689   0014BE  A0D8               	btfss	status,0,c
  9690   0014C0  EF64  F00A         	goto	u4201
  9691   0014C4  EF66  F00A         	goto	u4200
  9692   0014C8                     u4201:
  9693   0014C8  EF85  F00A         	goto	l4494
  9694   0014CC                     u4200:
  9695   0014CC  0E00               	movlw	0
  9696   0014CE  6E01               	movwf	___flge@ff1^0,c
  9697   0014D0  0E00               	movlw	0
  9698   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9699   0014D4  0E80               	movlw	128
  9700   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9701   0014D8  0E3E               	movlw	62
  9702   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9703   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9704   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9705   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9706   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9707   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9708   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9709   0014F4  ECF7  F01D         	call	___flge	;wreg free
  9710   0014F8  A0D8               	btfss	status,0,c
  9711   0014FA  EF81  F00A         	goto	u4211
  9712   0014FE  EF83  F00A         	goto	u4210
  9713   001502                     u4211:
  9714   001502  EF85  F00A         	goto	l4494
  9715   001506                     u4210:
  9716   001506  EF44  F008         	goto	l4438
  9717   00150A                     l4494:
  9718   00150A  EE20 F008          	lfsr	2,8
  9719   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9720   001510  26D9               	addwf	fsr2l,f,c
  9721   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9722   001514  22DA               	addwfc	fsr2h,f,c
  9723   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9724   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9725   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9726   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9727   001526  0E29               	movlw	41
  9728   001528  6E05               	movwf	___flge@ff2^0,c
  9729   00152A  0E5C               	movlw	92
  9730   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9731   00152E  0E0F               	movlw	15
  9732   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9733   001532  0E3E               	movlw	62
  9734   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9735   001536  ECF7  F01D         	call	___flge	;wreg free
  9736   00153A  A0D8               	btfss	status,0,c
  9737   00153C  EFA2  F00A         	goto	u4221
  9738   001540  EFA4  F00A         	goto	u4220
  9739   001544                     u4221:
  9740   001544  EFAA  F00A         	goto	l4502
  9741   001548                     u4220:
  9742   001548                     l4496:
  9743                           
  9744                           ;color.c: 179:             return 4;
  9745   001548  0E00               	movlw	0
  9746   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9747   00154C  0E04               	movlw	4
  9748   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9749   001550  EF80  F00C         	goto	l76
  9750   001554                     l4502:
  9751                           
  9752                           ;color.c: 182:             return 3;
  9753   001554  0E00               	movlw	0
  9754   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9755   001558  0E03               	movlw	3
  9756   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9757   00155C  EF80  F00C         	goto	l76
  9758   001560                     l4506:
  9759   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9760   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9761   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9762   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9763   001570  0E00               	movlw	0
  9764   001572  6E05               	movwf	___flge@ff2^0,c
  9765   001574  0E00               	movlw	0
  9766   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9767   001578  0E34               	movlw	52
  9768   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9769   00157C  0E42               	movlw	66
  9770   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9771   001580  ECF7  F01D         	call	___flge	;wreg free
  9772   001584  A0D8               	btfss	status,0,c
  9773   001586  EFC7  F00A         	goto	u4231
  9774   00158A  EFC9  F00A         	goto	u4230
  9775   00158E                     u4231:
  9776   00158E  EF2E  F00B         	goto	l4530
  9777   001592                     u4230:
  9778   001592  0E00               	movlw	0
  9779   001594  6E01               	movwf	___flge@ff1^0,c
  9780   001596  0E00               	movlw	0
  9781   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9782   00159A  0EA0               	movlw	160
  9783   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9784   00159E  0E42               	movlw	66
  9785   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9786   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9787   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9788   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9789   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9790   0015B2  ECF7  F01D         	call	___flge	;wreg free
  9791   0015B6  A0D8               	btfss	status,0,c
  9792   0015B8  EFE0  F00A         	goto	u4241
  9793   0015BC  EFE2  F00A         	goto	u4240
  9794   0015C0                     u4241:
  9795   0015C0  EF2E  F00B         	goto	l4530
  9796   0015C4                     u4240:
  9797   0015C4                     
  9798                           ;color.c: 188:         if(0.15<=rel->B){
  9799   0015C4  EE20 F008          	lfsr	2,8
  9800   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9801   0015CA  26D9               	addwf	fsr2l,f,c
  9802   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9803   0015CE  22DA               	addwfc	fsr2h,f,c
  9804   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9805   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9806   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9807   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9808   0015E0  0E9A               	movlw	154
  9809   0015E2  6E05               	movwf	___flge@ff2^0,c
  9810   0015E4  0E99               	movlw	153
  9811   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9812   0015E8  0E19               	movlw	25
  9813   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9814   0015EC  0E3E               	movlw	62
  9815   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9816   0015F0  ECF7  F01D         	call	___flge	;wreg free
  9817   0015F4  A0D8               	btfss	status,0,c
  9818   0015F6  EFFF  F00A         	goto	u4251
  9819   0015FA  EF01  F00B         	goto	u4250
  9820   0015FE                     u4251:
  9821   0015FE  EF03  F00B         	goto	l4518
  9822   001602                     u4250:
  9823   001602  EFA4  F00A         	goto	l4496
  9824   001606                     l4518:
  9825   001606  EE20 F008          	lfsr	2,8
  9826   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9827   00160C  26D9               	addwf	fsr2l,f,c
  9828   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9829   001610  22DA               	addwfc	fsr2h,f,c
  9830   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9831   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9832   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9833   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9834   001622  0E8F               	movlw	143
  9835   001624  6E05               	movwf	___flge@ff2^0,c
  9836   001626  0EC2               	movlw	194
  9837   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9838   00162A  0EF5               	movlw	245
  9839   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9840   00162E  0E3D               	movlw	61
  9841   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9842   001632  ECF7  F01D         	call	___flge	;wreg free
  9843   001636  A0D8               	btfss	status,0,c
  9844   001638  EF20  F00B         	goto	u4261
  9845   00163C  EF22  F00B         	goto	u4260
  9846   001640                     u4261:
  9847   001640  EF28  F00B         	goto	l4526
  9848   001644                     u4260:
  9849   001644                     l4520:
  9850                           
  9851                           ;color.c: 192:             return 6;
  9852   001644  0E00               	movlw	0
  9853   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9854   001648  0E06               	movlw	6
  9855   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9856   00164C  EF80  F00C         	goto	l76
  9857   001650                     l4526:
  9858                           
  9859                           ;color.c: 195:             return 5;
  9860   001650  0E00               	movlw	0
  9861   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9862   001654  0E05               	movlw	5
  9863   001656  6E4B               	movwf	?_Colour_decider^0,c
  9864   001658  EF80  F00C         	goto	l76
  9865   00165C                     l4530:
  9866   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9867   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9868   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9869   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9870   00166C  0E00               	movlw	0
  9871   00166E  6E05               	movwf	___flge@ff2^0,c
  9872   001670  0E00               	movlw	0
  9873   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9874   001674  0EA2               	movlw	162
  9875   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9876   001678  0E42               	movlw	66
  9877   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9878   00167C  ECF7  F01D         	call	___flge	;wreg free
  9879   001680  A0D8               	btfss	status,0,c
  9880   001682  EF45  F00B         	goto	u4271
  9881   001686  EF47  F00B         	goto	u4270
  9882   00168A                     u4271:
  9883   00168A  EF81  F00B         	goto	l4546
  9884   00168E                     u4270:
  9885   00168E  0E00               	movlw	0
  9886   001690  6E01               	movwf	___flge@ff1^0,c
  9887   001692  0E00               	movlw	0
  9888   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9889   001696  0EE6               	movlw	230
  9890   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9891   00169A  0E42               	movlw	66
  9892   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9893   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9894   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9895   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9896   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9897   0016AE  ECF7  F01D         	call	___flge	;wreg free
  9898   0016B2  A0D8               	btfss	status,0,c
  9899   0016B4  EF5E  F00B         	goto	u4281
  9900   0016B8  EF60  F00B         	goto	u4280
  9901   0016BC                     u4281:
  9902   0016BC  EF81  F00B         	goto	l4546
  9903   0016C0                     u4280:
  9904   0016C0                     
  9905                           ;color.c: 201:         if(0.15<=rel->B){
  9906   0016C0  EE20 F008          	lfsr	2,8
  9907   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9908   0016C6  26D9               	addwf	fsr2l,f,c
  9909   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9910   0016CA  22DA               	addwfc	fsr2h,f,c
  9911   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9912   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9913   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9914   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9915   0016DC  0E9A               	movlw	154
  9916   0016DE  6E05               	movwf	___flge@ff2^0,c
  9917   0016E0  0E99               	movlw	153
  9918   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9919   0016E4  0E19               	movlw	25
  9920   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9921   0016E8  0E3E               	movlw	62
  9922   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9923   0016EC  ECF7  F01D         	call	___flge	;wreg free
  9924   0016F0  A0D8               	btfss	status,0,c
  9925   0016F2  EF7D  F00B         	goto	u4291
  9926   0016F6  EF7F  F00B         	goto	u4290
  9927   0016FA                     u4291:
  9928   0016FA  EF22  F00B         	goto	l4520
  9929   0016FE                     u4290:
  9930   0016FE  EFA4  F00A         	goto	l4496
  9931   001702                     l4546:
  9932   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9933   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9934   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9935   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9936   001712  0E00               	movlw	0
  9937   001714  6E05               	movwf	___flge@ff2^0,c
  9938   001716  0E00               	movlw	0
  9939   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9940   00171A  0EF0               	movlw	240
  9941   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9942   00171E  0E41               	movlw	65
  9943   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9944   001722  ECF7  F01D         	call	___flge	;wreg free
  9945   001726  A0D8               	btfss	status,0,c
  9946   001728  EF98  F00B         	goto	u4301
  9947   00172C  EF9A  F00B         	goto	u4300
  9948   001730                     u4301:
  9949   001730  EFB3  F00B         	goto	l4550
  9950   001734                     u4300:
  9951   001734  0E00               	movlw	0
  9952   001736  6E01               	movwf	___flge@ff1^0,c
  9953   001738  0E00               	movlw	0
  9954   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9955   00173C  0E68               	movlw	104
  9956   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9957   001740  0E42               	movlw	66
  9958   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9959   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9960   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9961   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9962   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9963   001754  ECF7  F01D         	call	___flge	;wreg free
  9964   001758  B0D8               	btfsc	status,0,c
  9965   00175A  EFB1  F00B         	goto	u4311
  9966   00175E  EFB3  F00B         	goto	u4310
  9967   001762                     u4311:
  9968   001762  EFA4  F00A         	goto	l4496
  9969   001766                     u4310:
  9970   001766                     l4550:
  9971   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9972   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9973   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9974   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9975   001776  0E00               	movlw	0
  9976   001778  6E05               	movwf	___flge@ff2^0,c
  9977   00177A  0E00               	movlw	0
  9978   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9979   00177E  0EF0               	movlw	240
  9980   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9981   001782  0E42               	movlw	66
  9982   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9983   001786  ECF7  F01D         	call	___flge	;wreg free
  9984   00178A  A0D8               	btfss	status,0,c
  9985   00178C  EFCA  F00B         	goto	u4321
  9986   001790  EFCC  F00B         	goto	u4320
  9987   001794                     u4321:
  9988   001794  EFE7  F00B         	goto	l4560
  9989   001798                     u4320:
  9990   001798  0E00               	movlw	0
  9991   00179A  6E01               	movwf	___flge@ff1^0,c
  9992   00179C  0E00               	movlw	0
  9993   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9994   0017A0  0E5C               	movlw	92
  9995   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9996   0017A4  0E43               	movlw	67
  9997   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9998   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9999   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
 10000   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
 10001   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
 10002   0017B8  ECF7  F01D         	call	___flge	;wreg free
 10003   0017BC  A0D8               	btfss	status,0,c
 10004   0017BE  EFE3  F00B         	goto	u4331
 10005   0017C2  EFE5  F00B         	goto	u4330
 10006   0017C6                     u4331:
 10007   0017C6  EFE7  F00B         	goto	l4560
 10008   0017CA                     u4330:
 10009   0017CA  EFA4  F00A         	goto	l4496
 10010   0017CE                     l4560:
 10011   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
 10012   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
 10013   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
 10014   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
 10015   0017DE  0E00               	movlw	0
 10016   0017E0  6E05               	movwf	___flge@ff2^0,c
 10017   0017E2  0E00               	movlw	0
 10018   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
 10019   0017E6  0E60               	movlw	96
 10020   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
 10021   0017EA  0E41               	movlw	65
 10022   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
 10023   0017EE  ECF7  F01D         	call	___flge	;wreg free
 10024   0017F2  A0D8               	btfss	status,0,c
 10025   0017F4  EFFE  F00B         	goto	u4341
 10026   0017F8  EF00  F00C         	goto	u4340
 10027   0017FC                     u4341:
 10028   0017FC  EF7C  F00C         	goto	l4586
 10029   001800                     u4340:
 10030   001800  0E00               	movlw	0
 10031   001802  6E01               	movwf	___flge@ff1^0,c
 10032   001804  0E00               	movlw	0
 10033   001806  6E02               	movwf	(___flge@ff1+1)^0,c
 10034   001808  0E98               	movlw	152
 10035   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
 10036   00180C  0E41               	movlw	65
 10037   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
 10038   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
 10039   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
 10040   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
 10041   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
 10042   001820  ECF7  F01D         	call	___flge	;wreg free
 10043   001824  A0D8               	btfss	status,0,c
 10044   001826  EF17  F00C         	goto	u4351
 10045   00182A  EF19  F00C         	goto	u4350
 10046   00182E                     u4351:
 10047   00182E  EF7C  F00C         	goto	l4586
 10048   001832                     u4350:
 10049   001832                     
 10050                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 10051   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10052   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10053   00183A  CFDE F001          	movff	postinc2,___flge@ff1
 10054   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10055   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
 10056   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
 10057   00184A  0ECD               	movlw	205
 10058   00184C  6E05               	movwf	___flge@ff2^0,c
 10059   00184E  0ECC               	movlw	204
 10060   001850  6E06               	movwf	(___flge@ff2+1)^0,c
 10061   001852  0E4C               	movlw	76
 10062   001854  6E07               	movwf	(___flge@ff2+2)^0,c
 10063   001856  0E3E               	movlw	62
 10064   001858  6E08               	movwf	(___flge@ff2+3)^0,c
 10065   00185A  ECF7  F01D         	call	___flge	;wreg free
 10066   00185E  A0D8               	btfss	status,0,c
 10067   001860  EF34  F00C         	goto	u4361
 10068   001864  EF36  F00C         	goto	u4360
 10069   001868                     u4361:
 10070   001868  EF55  F00C         	goto	l4574
 10071   00186C                     u4360:
 10072   00186C  0E1F               	movlw	31
 10073   00186E  6E01               	movwf	___flge@ff1^0,c
 10074   001870  0E85               	movlw	133
 10075   001872  6E02               	movwf	(___flge@ff1+1)^0,c
 10076   001874  0E6B               	movlw	107
 10077   001876  6E03               	movwf	(___flge@ff1+2)^0,c
 10078   001878  0E3E               	movlw	62
 10079   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
 10080   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10081   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10082   001884  CFDE F005          	movff	postinc2,___flge@ff2
 10083   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
 10084   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
 10085   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
 10086   001894  ECF7  F01D         	call	___flge	;wreg free
 10087   001898  A0D8               	btfss	status,0,c
 10088   00189A  EF51  F00C         	goto	u4371
 10089   00189E  EF53  F00C         	goto	u4370
 10090   0018A2                     u4371:
 10091   0018A2  EF55  F00C         	goto	l4574
 10092   0018A6                     u4370:
 10093   0018A6  EF44  F008         	goto	l4438
 10094   0018AA                     l4574:
 10095   0018AA  EE20 F008          	lfsr	2,8
 10096   0018AE  504D               	movf	Colour_decider@rel^0,w,c
 10097   0018B0  26D9               	addwf	fsr2l,f,c
 10098   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
 10099   0018B4  22DA               	addwfc	fsr2h,f,c
 10100   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
 10101   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10102   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10103   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10104   0018C6  0E9A               	movlw	154
 10105   0018C8  6E05               	movwf	___flge@ff2^0,c
 10106   0018CA  0E99               	movlw	153
 10107   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
 10108   0018CE  0E19               	movlw	25
 10109   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
 10110   0018D2  0E3E               	movlw	62
 10111   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
 10112   0018D6  ECF7  F01D         	call	___flge	;wreg free
 10113   0018DA  A0D8               	btfss	status,0,c
 10114   0018DC  EF72  F00C         	goto	u4381
 10115   0018E0  EF74  F00C         	goto	u4380
 10116   0018E4                     u4381:
 10117   0018E4  EF76  F00C         	goto	l4582
 10118   0018E8                     u4380:
 10119   0018E8  EFA4  F00A         	goto	l4496
 10120   0018EC                     l4582:
 10121                           
 10122                           ;color.c: 223:             return 7;
 10123   0018EC  0E00               	movlw	0
 10124   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10125   0018F0  0E07               	movlw	7
 10126   0018F2  6E4B               	movwf	?_Colour_decider^0,c
 10127   0018F4  EF80  F00C         	goto	l76
 10128   0018F8                     l4586:
 10129                           
 10130                           ;color.c: 227:         return 10;
 10131   0018F8  0E00               	movlw	0
 10132   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10133   0018FC  0E0A               	movlw	10
 10134   0018FE  6E4B               	movwf	?_Colour_decider^0,c
 10135   001900                     l76:
 10136   001900  0012               	return		;funcret
 10137   001902                     __end_of_Colour_decider:
 10138                           	callstack 0
 10139                           
 10140 ;; *************** function ___xxtofl *****************
 10141 ;; Defined at:
 10142 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  sign            1    wreg     unsigned char 
 10145 ;;  val             4    0[COMRAM] long 
 10146 ;; Auto vars:     Size  Location     Type
 10147 ;;  sign            1    8[COMRAM] unsigned char 
 10148 ;;  arg             4   10[COMRAM] unsigned long 
 10149 ;;  exp             1    9[COMRAM] unsigned char 
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  4    0[COMRAM] unsigned char 
 10152 ;; Registers used:
 10153 ;;		wreg, status,2, status,0
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10160 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10162 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;Total ram usage:       14 bytes
 10164 ;; Hardware stack levels used: 1
 10165 ;; Hardware stack levels required when called: 1
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_colour_rel
 10170 ;;		_Colour_decider
 10171 ;;		_reverseOneBlock
 10172 ;;		_ForwardOneBlock
 10173 ;;		_Forwardhalfblock
 10174 ;;		_Backhalfblock
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text64
 10179   003494                     __ptext64:
 10180                           	callstack 0
 10181   003494                     ___xxtofl:
 10182                           	callstack 28
 10183                           
 10184                           ;incstack = 0
 10185                           ;___xxtofl@sign stored from wreg
 10186   003494  6E09               	movwf	___xxtofl@sign^0,c
 10187   003496  5009               	movf	___xxtofl@sign^0,w,c
 10188   003498  B4D8               	btfsc	status,2,c
 10189   00349A  EF51  F01A         	goto	u3951
 10190   00349E  EF53  F01A         	goto	u3950
 10191   0034A2                     u3951:
 10192   0034A2  EF75  F01A         	goto	l1373
 10193   0034A6                     u3950:
 10194   0034A6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10195   0034A8  EF5A  F01A         	goto	u3960
 10196   0034AC  EF58  F01A         	goto	u3961
 10197   0034B0                     u3961:
 10198   0034B0  EF75  F01A         	goto	l1373
 10199   0034B4                     u3960:
 10200   0034B4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10201   0034B8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10202   0034BC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10203   0034C0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10204   0034C4  1E05               	comf	??___xxtofl^0,f,c
 10205   0034C6  1E06               	comf	(??___xxtofl+1)^0,f,c
 10206   0034C8  1E07               	comf	(??___xxtofl+2)^0,f,c
 10207   0034CA  1E08               	comf	(??___xxtofl+3)^0,f,c
 10208   0034CC  2A05               	incf	??___xxtofl^0,f,c
 10209   0034CE  0E00               	movlw	0
 10210   0034D0  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10211   0034D2  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10212   0034D4  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10213   0034D6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10214   0034DA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10215   0034DE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10216   0034E2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10217   0034E6  EF7D  F01A         	goto	l4308
 10218   0034EA                     l1373:
 10219   0034EA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10220   0034EE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10221   0034F2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10222   0034F6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10223   0034FA                     l4308:
 10224   0034FA  5001               	movf	___xxtofl@val^0,w,c
 10225   0034FC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10226   0034FE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10227   003500  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10228   003502  A4D8               	btfss	status,2,c
 10229   003504  EF86  F01A         	goto	u3971
 10230   003508  EF88  F01A         	goto	u3970
 10231   00350C                     u3971:
 10232   00350C  EF92  F01A         	goto	l4314
 10233   003510                     u3970:
 10234   003510  0E00               	movlw	0
 10235   003512  6E01               	movwf	?___xxtofl^0,c
 10236   003514  0E00               	movlw	0
 10237   003516  6E02               	movwf	(?___xxtofl+1)^0,c
 10238   003518  0E00               	movlw	0
 10239   00351A  6E03               	movwf	(?___xxtofl+2)^0,c
 10240   00351C  0E00               	movlw	0
 10241   00351E  6E04               	movwf	(?___xxtofl+3)^0,c
 10242   003520  EF23  F01B         	goto	l1376
 10243   003524                     l4314:
 10244   003524  0E96               	movlw	150
 10245   003526  6E0A               	movwf	___xxtofl@exp^0,c
 10246   003528  EF9C  F01A         	goto	l4318
 10247   00352C                     l4316:
 10248   00352C  2A0A               	incf	___xxtofl@exp^0,f,c
 10249   00352E  90D8               	bcf	status,0,c
 10250   003530  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10251   003532  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10252   003534  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10253   003536  320B               	rrcf	___xxtofl@arg^0,f,c
 10254   003538                     l4318:
 10255   003538  0E00               	movlw	0
 10256   00353A  140B               	andwf	___xxtofl@arg^0,w,c
 10257   00353C  6E05               	movwf	??___xxtofl^0,c
 10258   00353E  0E00               	movlw	0
 10259   003540  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10260   003542  6E06               	movwf	(??___xxtofl+1)^0,c
 10261   003544  0E00               	movlw	0
 10262   003546  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10263   003548  6E07               	movwf	(??___xxtofl+2)^0,c
 10264   00354A  0EFE               	movlw	254
 10265   00354C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10266   00354E  6E08               	movwf	(??___xxtofl+3)^0,c
 10267   003550  5005               	movf	??___xxtofl^0,w,c
 10268   003552  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10269   003554  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10270   003556  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10271   003558  A4D8               	btfss	status,2,c
 10272   00355A  EFB1  F01A         	goto	u3981
 10273   00355E  EFB3  F01A         	goto	u3980
 10274   003562                     u3981:
 10275   003562  EF96  F01A         	goto	l4316
 10276   003566                     u3980:
 10277   003566  EFC1  F01A         	goto	l1380
 10278   00356A                     l4320:
 10279   00356A  2A0A               	incf	___xxtofl@exp^0,f,c
 10280   00356C  0E01               	movlw	1
 10281   00356E  260B               	addwf	___xxtofl@arg^0,f,c
 10282   003570  0E00               	movlw	0
 10283   003572  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10284   003574  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10285   003576  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10286   003578  90D8               	bcf	status,0,c
 10287   00357A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10288   00357C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10289   00357E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10290   003580  320B               	rrcf	___xxtofl@arg^0,f,c
 10291   003582                     l1380:
 10292   003582  0E00               	movlw	0
 10293   003584  140B               	andwf	___xxtofl@arg^0,w,c
 10294   003586  6E05               	movwf	??___xxtofl^0,c
 10295   003588  0E00               	movlw	0
 10296   00358A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10297   00358C  6E06               	movwf	(??___xxtofl+1)^0,c
 10298   00358E  0E00               	movlw	0
 10299   003590  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10300   003592  6E07               	movwf	(??___xxtofl+2)^0,c
 10301   003594  0EFF               	movlw	255
 10302   003596  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10303   003598  6E08               	movwf	(??___xxtofl+3)^0,c
 10304   00359A  5005               	movf	??___xxtofl^0,w,c
 10305   00359C  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10306   00359E  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10307   0035A0  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10308   0035A2  A4D8               	btfss	status,2,c
 10309   0035A4  EFD6  F01A         	goto	u3991
 10310   0035A8  EFD8  F01A         	goto	u3990
 10311   0035AC                     u3991:
 10312   0035AC  EFB5  F01A         	goto	l4320
 10313   0035B0                     u3990:
 10314   0035B0  EFE0  F01A         	goto	l4328
 10315   0035B4                     l4326:
 10316   0035B4  060A               	decf	___xxtofl@exp^0,f,c
 10317   0035B6  90D8               	bcf	status,0,c
 10318   0035B8  360B               	rlcf	___xxtofl@arg^0,f,c
 10319   0035BA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10320   0035BC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10321   0035BE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10322   0035C0                     l4328:
 10323   0035C0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10324   0035C2  EFE5  F01A         	goto	u4001
 10325   0035C6  EFE7  F01A         	goto	u4000
 10326   0035CA                     u4001:
 10327   0035CA  EFEF  F01A         	goto	l1387
 10328   0035CE                     u4000:
 10329   0035CE  0E02               	movlw	2
 10330   0035D0  600A               	cpfslt	___xxtofl@exp^0,c
 10331   0035D2  EFED  F01A         	goto	u4011
 10332   0035D6  EFEF  F01A         	goto	u4010
 10333   0035DA                     u4011:
 10334   0035DA  EFDA  F01A         	goto	l4326
 10335   0035DE                     u4010:
 10336   0035DE                     l1387:
 10337   0035DE  B00A               	btfsc	___xxtofl@exp^0,0,c
 10338   0035E0  EFF4  F01A         	goto	u4021
 10339   0035E4  EFF6  F01A         	goto	u4020
 10340   0035E8                     u4021:
 10341   0035E8  EFF7  F01A         	goto	l4334
 10342   0035EC                     u4020:
 10343   0035EC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10344   0035EE                     l4334:
 10345   0035EE  90D8               	bcf	status,0,c
 10346   0035F0  320A               	rrcf	___xxtofl@exp^0,f,c
 10347   0035F2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10348   0035F6  6A06               	clrf	(??___xxtofl+1)^0,c
 10349   0035F8  6A07               	clrf	(??___xxtofl+2)^0,c
 10350   0035FA  6A08               	clrf	(??___xxtofl+3)^0,c
 10351   0035FC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10352   003600  6A07               	clrf	(??___xxtofl+2)^0,c
 10353   003602  6A06               	clrf	(??___xxtofl+1)^0,c
 10354   003604  6A05               	clrf	??___xxtofl^0,c
 10355   003606  5005               	movf	??___xxtofl^0,w,c
 10356   003608  120B               	iorwf	___xxtofl@arg^0,f,c
 10357   00360A  5006               	movf	(??___xxtofl+1)^0,w,c
 10358   00360C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10359   00360E  5007               	movf	(??___xxtofl+2)^0,w,c
 10360   003610  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10361   003612  5008               	movf	(??___xxtofl+3)^0,w,c
 10362   003614  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10363   003616  5009               	movf	___xxtofl@sign^0,w,c
 10364   003618  B4D8               	btfsc	status,2,c
 10365   00361A  EF11  F01B         	goto	u4031
 10366   00361E  EF13  F01B         	goto	u4030
 10367   003622                     u4031:
 10368   003622  EF1B  F01B         	goto	l4344
 10369   003626                     u4030:
 10370   003626  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10371   003628  EF1A  F01B         	goto	u4040
 10372   00362C  EF18  F01B         	goto	u4041
 10373   003630                     u4041:
 10374   003630  EF1B  F01B         	goto	l4344
 10375   003634                     u4040:
 10376   003634  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10377   003636                     l4344:
 10378   003636  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10379   00363A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10380   00363E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10381   003642  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10382   003646                     l1376:
 10383   003646  0012               	return		;funcret
 10384   003648                     __end_of___xxtofl:
 10385                           	callstack 0
 10386                           
 10387 ;; *************** function ___flsub *****************
 10388 ;; Defined at:
 10389 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  b               4   16[COMRAM] unsigned char 
 10392 ;;  a               4   20[COMRAM] unsigned char 
 10393 ;; Auto vars:     Size  Location     Type
 10394 ;;		None
 10395 ;; Return value:  Size  Location     Type
 10396 ;;                  4   16[COMRAM] unsigned char 
 10397 ;; Registers used:
 10398 ;;		wreg, status,2, status,0, cstack
 10399 ;; Tracked objects:
 10400 ;;		On entry : 0/0
 10401 ;;		On exit  : 0/0
 10402 ;;		Unchanged: 0/0
 10403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10404 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10407 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;Total ram usage:        8 bytes
 10409 ;; Hardware stack levels used: 1
 10410 ;; Hardware stack levels required when called: 2
 10411 ;; This function calls:
 10412 ;;		___fladd
 10413 ;; This function is called by:
 10414 ;;		_Colour_decider
 10415 ;; This function uses a non-reentrant model
 10416 ;;
 10417                           
 10418                           	psect	text65
 10419   004ABC                     __ptext65:
 10420                           	callstack 0
 10421   004ABC                     ___flsub:
 10422                           	callstack 27
 10423   004ABC  0E00               	movlw	0
 10424   004ABE  1A15               	xorwf	___flsub@a^0,f,c
 10425   004AC0  0E00               	movlw	0
 10426   004AC2  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10427   004AC4  0E00               	movlw	0
 10428   004AC6  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10429   004AC8  0E80               	movlw	128
 10430   004ACA  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10431   004ACC  C011  F001         	movff	___flsub@b,___fladd@b
 10432   004AD0  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10433   004AD4  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10434   004AD8  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10435   004ADC  C015  F005         	movff	___flsub@a,___fladd@a
 10436   004AE0  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10437   004AE4  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10438   004AE8  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10439   004AEC  EC37  F00F         	call	___fladd	;wreg free
 10440   004AF0  C001  F011         	movff	?___fladd,?___flsub
 10441   004AF4  C002  F012         	movff	?___fladd+1,?___flsub+1
 10442   004AF8  C003  F013         	movff	?___fladd+2,?___flsub+2
 10443   004AFC  C004  F014         	movff	?___fladd+3,?___flsub+3
 10444   004B00  0012               	return		;funcret
 10445   004B02                     __end_of___flsub:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function ___fladd *****************
 10449 ;; Defined at:
 10450 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;  b               4    0[COMRAM] unsigned char 
 10453 ;;  a               4    4[COMRAM] unsigned char 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;  grs             1   15[COMRAM] unsigned char 
 10456 ;;  bexp            1   14[COMRAM] unsigned char 
 10457 ;;  aexp            1   13[COMRAM] unsigned char 
 10458 ;;  signs           1   12[COMRAM] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  4    0[COMRAM] unsigned char 
 10461 ;; Registers used:
 10462 ;;		wreg, status,2, status,0
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10468 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;Total ram usage:       16 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; Hardware stack levels required when called: 1
 10475 ;; This function calls:
 10476 ;;		Nothing
 10477 ;; This function is called by:
 10478 ;;		_colour_rel
 10479 ;;		_Colour_decider
 10480 ;;		___flsub
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text66
 10485   001E6E                     __ptext66:
 10486                           	callstack 0
 10487   001E6E                     ___fladd:
 10488                           	callstack 28
 10489   001E6E  5004               	movf	(___fladd@b+3)^0,w,c
 10490   001E70  0B80               	andlw	128
 10491   001E72  6E0D               	movwf	___fladd@signs^0,c
 10492   001E74  5004               	movf	(___fladd@b+3)^0,w,c
 10493   001E76  2404               	addwf	(___fladd@b+3)^0,w,c
 10494   001E78  6E0F               	movwf	___fladd@bexp^0,c
 10495   001E7A  AE03               	btfss	(___fladd@b+2)^0,7,c
 10496   001E7C  EF42  F00F         	goto	u3001
 10497   001E80  EF44  F00F         	goto	u3000
 10498   001E84                     u3001:
 10499   001E84  EF45  F00F         	goto	l3686
 10500   001E88                     u3000:
 10501   001E88  800F               	bsf	___fladd@bexp^0,0,c
 10502   001E8A                     l3686:
 10503   001E8A  500F               	movf	___fladd@bexp^0,w,c
 10504   001E8C  B4D8               	btfsc	status,2,c
 10505   001E8E  EF4B  F00F         	goto	u3011
 10506   001E92  EF4D  F00F         	goto	u3010
 10507   001E96                     u3011:
 10508   001E96  EF62  F00F         	goto	l3696
 10509   001E9A                     u3010:
 10510   001E9A  280F               	incf	___fladd@bexp^0,w,c
 10511   001E9C  A4D8               	btfss	status,2,c
 10512   001E9E  EF53  F00F         	goto	u3021
 10513   001EA2  EF55  F00F         	goto	u3020
 10514   001EA6                     u3021:
 10515   001EA6  EF5D  F00F         	goto	l3692
 10516   001EAA                     u3020:
 10517   001EAA  0E00               	movlw	0
 10518   001EAC  6E01               	movwf	___fladd@b^0,c
 10519   001EAE  0E00               	movlw	0
 10520   001EB0  6E02               	movwf	(___fladd@b+1)^0,c
 10521   001EB2  0E00               	movlw	0
 10522   001EB4  6E03               	movwf	(___fladd@b+2)^0,c
 10523   001EB6  0E00               	movlw	0
 10524   001EB8  6E04               	movwf	(___fladd@b+3)^0,c
 10525   001EBA                     l3692:
 10526   001EBA  8E03               	bsf	(___fladd@b+2)^0,7,c
 10527   001EBC  0E00               	movlw	0
 10528   001EBE  6E04               	movwf	(___fladd@b+3)^0,c
 10529   001EC0  EF6A  F00F         	goto	l3698
 10530   001EC4                     l3696:
 10531   001EC4  0E00               	movlw	0
 10532   001EC6  6E01               	movwf	___fladd@b^0,c
 10533   001EC8  0E00               	movlw	0
 10534   001ECA  6E02               	movwf	(___fladd@b+1)^0,c
 10535   001ECC  0E00               	movlw	0
 10536   001ECE  6E03               	movwf	(___fladd@b+2)^0,c
 10537   001ED0  0E00               	movlw	0
 10538   001ED2  6E04               	movwf	(___fladd@b+3)^0,c
 10539   001ED4                     l3698:
 10540   001ED4  5008               	movf	(___fladd@a+3)^0,w,c
 10541   001ED6  0B80               	andlw	128
 10542   001ED8  6E0E               	movwf	___fladd@aexp^0,c
 10543   001EDA  500D               	movf	___fladd@signs^0,w,c
 10544   001EDC  180E               	xorwf	___fladd@aexp^0,w,c
 10545   001EDE  B4D8               	btfsc	status,2,c
 10546   001EE0  EF74  F00F         	goto	u3031
 10547   001EE4  EF76  F00F         	goto	u3030
 10548   001EE8                     u3031:
 10549   001EE8  EF77  F00F         	goto	l3704
 10550   001EEC                     u3030:
 10551   001EEC  8C0D               	bsf	___fladd@signs^0,6,c
 10552   001EEE                     l3704:
 10553   001EEE  5008               	movf	(___fladd@a+3)^0,w,c
 10554   001EF0  2408               	addwf	(___fladd@a+3)^0,w,c
 10555   001EF2  6E0E               	movwf	___fladd@aexp^0,c
 10556   001EF4  AE07               	btfss	(___fladd@a+2)^0,7,c
 10557   001EF6  EF7F  F00F         	goto	u3041
 10558   001EFA  EF81  F00F         	goto	u3040
 10559   001EFE                     u3041:
 10560   001EFE  EF82  F00F         	goto	l3710
 10561   001F02                     u3040:
 10562   001F02  800E               	bsf	___fladd@aexp^0,0,c
 10563   001F04                     l3710:
 10564   001F04  500E               	movf	___fladd@aexp^0,w,c
 10565   001F06  B4D8               	btfsc	status,2,c
 10566   001F08  EF88  F00F         	goto	u3051
 10567   001F0C  EF8A  F00F         	goto	u3050
 10568   001F10                     u3051:
 10569   001F10  EF9F  F00F         	goto	l3720
 10570   001F14                     u3050:
 10571   001F14  280E               	incf	___fladd@aexp^0,w,c
 10572   001F16  A4D8               	btfss	status,2,c
 10573   001F18  EF90  F00F         	goto	u3061
 10574   001F1C  EF92  F00F         	goto	u3060
 10575   001F20                     u3061:
 10576   001F20  EF9A  F00F         	goto	l3716
 10577   001F24                     u3060:
 10578   001F24  0E00               	movlw	0
 10579   001F26  6E05               	movwf	___fladd@a^0,c
 10580   001F28  0E00               	movlw	0
 10581   001F2A  6E06               	movwf	(___fladd@a+1)^0,c
 10582   001F2C  0E00               	movlw	0
 10583   001F2E  6E07               	movwf	(___fladd@a+2)^0,c
 10584   001F30  0E00               	movlw	0
 10585   001F32  6E08               	movwf	(___fladd@a+3)^0,c
 10586   001F34                     l3716:
 10587   001F34  8E07               	bsf	(___fladd@a+2)^0,7,c
 10588   001F36  0E00               	movlw	0
 10589   001F38  6E08               	movwf	(___fladd@a+3)^0,c
 10590   001F3A  EFA7  F00F         	goto	l3722
 10591   001F3E                     l3720:
 10592   001F3E  0E00               	movlw	0
 10593   001F40  6E05               	movwf	___fladd@a^0,c
 10594   001F42  0E00               	movlw	0
 10595   001F44  6E06               	movwf	(___fladd@a+1)^0,c
 10596   001F46  0E00               	movlw	0
 10597   001F48  6E07               	movwf	(___fladd@a+2)^0,c
 10598   001F4A  0E00               	movlw	0
 10599   001F4C  6E08               	movwf	(___fladd@a+3)^0,c
 10600   001F4E                     l3722:
 10601   001F4E  500F               	movf	___fladd@bexp^0,w,c
 10602   001F50  5C0E               	subwf	___fladd@aexp^0,w,c
 10603   001F52  B0D8               	btfsc	status,0,c
 10604   001F54  EFAE  F00F         	goto	u3071
 10605   001F58  EFB0  F00F         	goto	u3070
 10606   001F5C                     u3071:
 10607   001F5C  EFD7  F00F         	goto	l3758
 10608   001F60                     u3070:
 10609   001F60  AC0D               	btfss	___fladd@signs^0,6,c
 10610   001F62  EFB5  F00F         	goto	u3081
 10611   001F66  EFB7  F00F         	goto	u3080
 10612   001F6A                     u3081:
 10613   001F6A  EFB9  F00F         	goto	l3728
 10614   001F6E                     u3080:
 10615   001F6E  0E80               	movlw	128
 10616   001F70  1A0D               	xorwf	___fladd@signs^0,f,c
 10617   001F72                     l3728:
 10618   001F72  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10619   001F76  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10620   001F7A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10621   001F7E  C001  F010         	movff	___fladd@b,___fladd@grs
 10622   001F82  C005  F001         	movff	___fladd@a,___fladd@b
 10623   001F86  C010  F005         	movff	___fladd@grs,___fladd@a
 10624   001F8A  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10625   001F8E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10626   001F92  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10627   001F96  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10628   001F9A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10629   001F9E  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10630   001FA2  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10631   001FA6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10632   001FAA  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10633   001FAE                     l3758:
 10634   001FAE  0E00               	movlw	0
 10635   001FB0  6E10               	movwf	___fladd@grs^0,c
 10636   001FB2  500F               	movf	___fladd@bexp^0,w,c
 10637   001FB4  C00E  F009         	movff	___fladd@aexp,??___fladd
 10638   001FB8  6A0A               	clrf	(??___fladd+1)^0,c
 10639   001FBA  5E09               	subwf	??___fladd^0,f,c
 10640   001FBC  0E00               	movlw	0
 10641   001FBE  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10642   001FC0  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10643   001FC2  EFEC  F00F         	goto	u3091
 10644   001FC6  500A               	movf	(??___fladd+1)^0,w,c
 10645   001FC8  E109               	bnz	u3090
 10646   001FCA  0E1A               	movlw	26
 10647   001FCC  5C09               	subwf	??___fladd^0,w,c
 10648   001FCE  A0D8               	btfss	status,0,c
 10649   001FD0  EFEC  F00F         	goto	u3091
 10650   001FD4  EFEE  F00F         	goto	u3090
 10651   001FD8                     u3091:
 10652   001FD8  EF25  F010         	goto	l1247
 10653   001FDC                     u3090:
 10654   001FDC  5001               	movf	___fladd@b^0,w,c
 10655   001FDE  1002               	iorwf	(___fladd@b+1)^0,w,c
 10656   001FE0  1003               	iorwf	(___fladd@b+2)^0,w,c
 10657   001FE2  1004               	iorwf	(___fladd@b+3)^0,w,c
 10658   001FE4  A4D8               	btfss	status,2,c
 10659   001FE6  EFF7  F00F         	goto	u3101
 10660   001FEA  EFFA  F00F         	goto	u3100
 10661   001FEE                     u3101:
 10662   001FEE  0E01               	movlw	1
 10663   001FF0  EFFB  F00F         	goto	u3110
 10664   001FF4                     u3100:
 10665   001FF4  0E00               	movlw	0
 10666   001FF6                     u3110:
 10667   001FF6  6E10               	movwf	___fladd@grs^0,c
 10668   001FF8  0E00               	movlw	0
 10669   001FFA  6E01               	movwf	___fladd@b^0,c
 10670   001FFC  0E00               	movlw	0
 10671   001FFE  6E02               	movwf	(___fladd@b+1)^0,c
 10672   002000  0E00               	movlw	0
 10673   002002  6E03               	movwf	(___fladd@b+2)^0,c
 10674   002004  0E00               	movlw	0
 10675   002006  6E04               	movwf	(___fladd@b+3)^0,c
 10676   002008  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10677   00200C  EF2E  F010         	goto	l1246
 10678   002010                     l1248:
 10679   002010  A010               	btfss	___fladd@grs^0,0,c
 10680   002012  EF0D  F010         	goto	u3121
 10681   002016  EF0F  F010         	goto	u3120
 10682   00201A                     u3121:
 10683   00201A  EF15  F010         	goto	l3770
 10684   00201E                     u3120:
 10685   00201E  90D8               	bcf	status,0,c
 10686   002020  3010               	rrcf	___fladd@grs^0,w,c
 10687   002022  0901               	iorlw	1
 10688   002024  6E10               	movwf	___fladd@grs^0,c
 10689   002026  EF17  F010         	goto	l3772
 10690   00202A                     l3770:
 10691   00202A  90D8               	bcf	status,0,c
 10692   00202C  3210               	rrcf	___fladd@grs^0,f,c
 10693   00202E                     l3772:
 10694   00202E  A001               	btfss	___fladd@b^0,0,c
 10695   002030  EF1C  F010         	goto	u3131
 10696   002034  EF1E  F010         	goto	u3130
 10697   002038                     u3131:
 10698   002038  EF1F  F010         	goto	l3776
 10699   00203C                     u3130:
 10700   00203C  8E10               	bsf	___fladd@grs^0,7,c
 10701   00203E                     l3776:
 10702   00203E  3404               	rlcf	(___fladd@b+3)^0,w,c
 10703   002040  3204               	rrcf	(___fladd@b+3)^0,f,c
 10704   002042  3203               	rrcf	(___fladd@b+2)^0,f,c
 10705   002044  3202               	rrcf	(___fladd@b+1)^0,f,c
 10706   002046  3201               	rrcf	___fladd@b^0,f,c
 10707   002048  2A0F               	incf	___fladd@bexp^0,f,c
 10708   00204A                     l1247:
 10709   00204A  500E               	movf	___fladd@aexp^0,w,c
 10710   00204C  5C0F               	subwf	___fladd@bexp^0,w,c
 10711   00204E  A0D8               	btfss	status,0,c
 10712   002050  EF2C  F010         	goto	u3141
 10713   002054  EF2E  F010         	goto	u3140
 10714   002058                     u3141:
 10715   002058  EF08  F010         	goto	l1248
 10716   00205C                     u3140:
 10717   00205C                     l1246:
 10718   00205C  BC0D               	btfsc	___fladd@signs^0,6,c
 10719   00205E  EF33  F010         	goto	u3151
 10720   002062  EF35  F010         	goto	u3150
 10721   002066                     u3151:
 10722   002066  EF75  F010         	goto	l3804
 10723   00206A                     u3150:
 10724   00206A  500F               	movf	___fladd@bexp^0,w,c
 10725   00206C  A4D8               	btfss	status,2,c
 10726   00206E  EF3B  F010         	goto	u3161
 10727   002072  EF3D  F010         	goto	u3160
 10728   002076                     u3161:
 10729   002076  EF47  F010         	goto	l3786
 10730   00207A                     u3160:
 10731   00207A  0E00               	movlw	0
 10732   00207C  6E01               	movwf	?___fladd^0,c
 10733   00207E  0E00               	movlw	0
 10734   002080  6E02               	movwf	(?___fladd+1)^0,c
 10735   002082  0E00               	movlw	0
 10736   002084  6E03               	movwf	(?___fladd+2)^0,c
 10737   002086  0E00               	movlw	0
 10738   002088  6E04               	movwf	(?___fladd+3)^0,c
 10739   00208A  EF96  F011         	goto	l1255
 10740   00208E                     l3786:
 10741   00208E  5005               	movf	___fladd@a^0,w,c
 10742   002090  2601               	addwf	___fladd@b^0,f,c
 10743   002092  5006               	movf	(___fladd@a+1)^0,w,c
 10744   002094  2202               	addwfc	(___fladd@b+1)^0,f,c
 10745   002096  5007               	movf	(___fladd@a+2)^0,w,c
 10746   002098  2203               	addwfc	(___fladd@b+2)^0,f,c
 10747   00209A  5008               	movf	(___fladd@a+3)^0,w,c
 10748   00209C  2204               	addwfc	(___fladd@b+3)^0,f,c
 10749   00209E  A004               	btfss	(___fladd@b+3)^0,0,c
 10750   0020A0  EF54  F010         	goto	u3171
 10751   0020A4  EF56  F010         	goto	u3170
 10752   0020A8                     u3171:
 10753   0020A8  EF02  F011         	goto	l3840
 10754   0020AC                     u3170:
 10755   0020AC  A010               	btfss	___fladd@grs^0,0,c
 10756   0020AE  EF5B  F010         	goto	u3181
 10757   0020B2  EF5D  F010         	goto	u3180
 10758   0020B6                     u3181:
 10759   0020B6  EF63  F010         	goto	l3794
 10760   0020BA                     u3180:
 10761   0020BA  90D8               	bcf	status,0,c
 10762   0020BC  3010               	rrcf	___fladd@grs^0,w,c
 10763   0020BE  0901               	iorlw	1
 10764   0020C0  6E10               	movwf	___fladd@grs^0,c
 10765   0020C2  EF65  F010         	goto	l3796
 10766   0020C6                     l3794:
 10767   0020C6  90D8               	bcf	status,0,c
 10768   0020C8  3210               	rrcf	___fladd@grs^0,f,c
 10769   0020CA                     l3796:
 10770   0020CA  A001               	btfss	___fladd@b^0,0,c
 10771   0020CC  EF6A  F010         	goto	u3191
 10772   0020D0  EF6C  F010         	goto	u3190
 10773   0020D4                     u3191:
 10774   0020D4  EF6D  F010         	goto	l3800
 10775   0020D8                     u3190:
 10776   0020D8  8E10               	bsf	___fladd@grs^0,7,c
 10777   0020DA                     l3800:
 10778   0020DA  3404               	rlcf	(___fladd@b+3)^0,w,c
 10779   0020DC  3204               	rrcf	(___fladd@b+3)^0,f,c
 10780   0020DE  3203               	rrcf	(___fladd@b+2)^0,f,c
 10781   0020E0  3202               	rrcf	(___fladd@b+1)^0,f,c
 10782   0020E2  3201               	rrcf	___fladd@b^0,f,c
 10783   0020E4  2A0F               	incf	___fladd@bexp^0,f,c
 10784   0020E6  EF02  F011         	goto	l3840
 10785   0020EA                     l3804:
 10786   0020EA  5005               	movf	___fladd@a^0,w,c
 10787   0020EC  5C01               	subwf	___fladd@b^0,w,c
 10788   0020EE  5006               	movf	(___fladd@a+1)^0,w,c
 10789   0020F0  5802               	subwfb	(___fladd@b+1)^0,w,c
 10790   0020F2  5007               	movf	(___fladd@a+2)^0,w,c
 10791   0020F4  5803               	subwfb	(___fladd@b+2)^0,w,c
 10792   0020F6  5004               	movf	(___fladd@b+3)^0,w,c
 10793   0020F8  0A80               	xorlw	128
 10794   0020FA  6E09               	movwf	??___fladd^0,c
 10795   0020FC  5008               	movf	(___fladd@a+3)^0,w,c
 10796   0020FE  0A80               	xorlw	128
 10797   002100  5809               	subwfb	??___fladd^0,w,c
 10798   002102  B0D8               	btfsc	status,0,c
 10799   002104  EF86  F010         	goto	u3201
 10800   002108  EF88  F010         	goto	u3200
 10801   00210C                     u3201:
 10802   00210C  EFB3  F010         	goto	l3814
 10803   002110                     u3200:
 10804   002110  5001               	movf	___fladd@b^0,w,c
 10805   002112  5C05               	subwf	___fladd@a^0,w,c
 10806   002114  6E09               	movwf	??___fladd^0,c
 10807   002116  5002               	movf	(___fladd@b+1)^0,w,c
 10808   002118  5806               	subwfb	(___fladd@a+1)^0,w,c
 10809   00211A  6E0A               	movwf	(??___fladd+1)^0,c
 10810   00211C  5003               	movf	(___fladd@b+2)^0,w,c
 10811   00211E  5807               	subwfb	(___fladd@a+2)^0,w,c
 10812   002120  6E0B               	movwf	(??___fladd+2)^0,c
 10813   002122  5004               	movf	(___fladd@b+3)^0,w,c
 10814   002124  5808               	subwfb	(___fladd@a+3)^0,w,c
 10815   002126  6E0C               	movwf	(??___fladd+3)^0,c
 10816   002128  0EFF               	movlw	255
 10817   00212A  2409               	addwf	??___fladd^0,w,c
 10818   00212C  6E01               	movwf	___fladd@b^0,c
 10819   00212E  0EFF               	movlw	255
 10820   002130  200A               	addwfc	(??___fladd+1)^0,w,c
 10821   002132  6E02               	movwf	(___fladd@b+1)^0,c
 10822   002134  0EFF               	movlw	255
 10823   002136  200B               	addwfc	(??___fladd+2)^0,w,c
 10824   002138  6E03               	movwf	(___fladd@b+2)^0,c
 10825   00213A  0EFF               	movlw	255
 10826   00213C  200C               	addwfc	(??___fladd+3)^0,w,c
 10827   00213E  6E04               	movwf	(___fladd@b+3)^0,c
 10828   002140  0E80               	movlw	128
 10829   002142  1A0D               	xorwf	___fladd@signs^0,f,c
 10830   002144  6C10               	negf	___fladd@grs^0,c
 10831   002146  5010               	movf	___fladd@grs^0,w,c
 10832   002148  A4D8               	btfss	status,2,c
 10833   00214A  EFA9  F010         	goto	u3211
 10834   00214E  EFAB  F010         	goto	u3210
 10835   002152                     u3211:
 10836   002152  EFBB  F010         	goto	l1263
 10837   002156                     u3210:
 10838   002156  0E01               	movlw	1
 10839   002158  2601               	addwf	___fladd@b^0,f,c
 10840   00215A  0E00               	movlw	0
 10841   00215C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10842   00215E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10843   002160  2204               	addwfc	(___fladd@b+3)^0,f,c
 10844   002162  EFBB  F010         	goto	l1263
 10845   002166                     l3814:
 10846   002166  5005               	movf	___fladd@a^0,w,c
 10847   002168  5E01               	subwf	___fladd@b^0,f,c
 10848   00216A  5006               	movf	(___fladd@a+1)^0,w,c
 10849   00216C  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10850   00216E  5007               	movf	(___fladd@a+2)^0,w,c
 10851   002170  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10852   002172  5008               	movf	(___fladd@a+3)^0,w,c
 10853   002174  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10854   002176                     l1263:
 10855   002176  5001               	movf	___fladd@b^0,w,c
 10856   002178  1002               	iorwf	(___fladd@b+1)^0,w,c
 10857   00217A  1003               	iorwf	(___fladd@b+2)^0,w,c
 10858   00217C  1004               	iorwf	(___fladd@b+3)^0,w,c
 10859   00217E  A4D8               	btfss	status,2,c
 10860   002180  EFC4  F010         	goto	u3221
 10861   002184  EFC6  F010         	goto	u3220
 10862   002188                     u3221:
 10863   002188  EFFB  F010         	goto	l3838
 10864   00218C                     u3220:
 10865   00218C  5010               	movf	___fladd@grs^0,w,c
 10866   00218E  A4D8               	btfss	status,2,c
 10867   002190  EFCC  F010         	goto	u3231
 10868   002194  EFCE  F010         	goto	u3230
 10869   002198                     u3231:
 10870   002198  EFFB  F010         	goto	l3838
 10871   00219C                     u3230:
 10872   00219C  0E00               	movlw	0
 10873   00219E  6E01               	movwf	?___fladd^0,c
 10874   0021A0  0E00               	movlw	0
 10875   0021A2  6E02               	movwf	(?___fladd+1)^0,c
 10876   0021A4  0E00               	movlw	0
 10877   0021A6  6E03               	movwf	(?___fladd+2)^0,c
 10878   0021A8  0E00               	movlw	0
 10879   0021AA  6E04               	movwf	(?___fladd+3)^0,c
 10880   0021AC  EF96  F011         	goto	l1255
 10881   0021B0                     l3822:
 10882   0021B0  90D8               	bcf	status,0,c
 10883   0021B2  3601               	rlcf	___fladd@b^0,f,c
 10884   0021B4  3602               	rlcf	(___fladd@b+1)^0,f,c
 10885   0021B6  3603               	rlcf	(___fladd@b+2)^0,f,c
 10886   0021B8  3604               	rlcf	(___fladd@b+3)^0,f,c
 10887   0021BA  AE10               	btfss	___fladd@grs^0,7,c
 10888   0021BC  EFE2  F010         	goto	u3241
 10889   0021C0  EFE4  F010         	goto	u3240
 10890   0021C4                     u3241:
 10891   0021C4  EFE5  F010         	goto	l3828
 10892   0021C8                     u3240:
 10893   0021C8  8001               	bsf	___fladd@b^0,0,c
 10894   0021CA                     l3828:
 10895   0021CA  A010               	btfss	___fladd@grs^0,0,c
 10896   0021CC  EFEA  F010         	goto	u3251
 10897   0021D0  EFEC  F010         	goto	u3250
 10898   0021D4                     u3251:
 10899   0021D4  EFF0  F010         	goto	l3832
 10900   0021D8                     u3250:
 10901   0021D8  80D8               	bsf	status,0,c
 10902   0021DA  3610               	rlcf	___fladd@grs^0,f,c
 10903   0021DC  EFF2  F010         	goto	l3834
 10904   0021E0                     l3832:
 10905   0021E0  90D8               	bcf	status,0,c
 10906   0021E2  3610               	rlcf	___fladd@grs^0,f,c
 10907   0021E4                     l3834:
 10908   0021E4  500F               	movf	___fladd@bexp^0,w,c
 10909   0021E6  B4D8               	btfsc	status,2,c
 10910   0021E8  EFF8  F010         	goto	u3261
 10911   0021EC  EFFA  F010         	goto	u3260
 10912   0021F0                     u3261:
 10913   0021F0  EFFB  F010         	goto	l3838
 10914   0021F4                     u3260:
 10915   0021F4  060F               	decf	___fladd@bexp^0,f,c
 10916   0021F6                     l3838:
 10917   0021F6  AE03               	btfss	(___fladd@b+2)^0,7,c
 10918   0021F8  EF00  F011         	goto	u3271
 10919   0021FC  EF02  F011         	goto	u3270
 10920   002200                     u3271:
 10921   002200  EFD8  F010         	goto	l3822
 10922   002204                     u3270:
 10923   002204                     l3840:
 10924   002204  0E00               	movlw	0
 10925   002206  6E0E               	movwf	___fladd@aexp^0,c
 10926   002208  AE10               	btfss	___fladd@grs^0,7,c
 10927   00220A  EF09  F011         	goto	u3281
 10928   00220E  EF0B  F011         	goto	u3280
 10929   002212                     u3281:
 10930   002212  EF23  F011         	goto	l1272
 10931   002216                     u3280:
 10932   002216  C010  F009         	movff	___fladd@grs,??___fladd
 10933   00221A  0E7F               	movlw	127
 10934   00221C  1609               	andwf	??___fladd^0,f,c
 10935   00221E  B4D8               	btfsc	status,2,c
 10936   002220  EF14  F011         	goto	u3291
 10937   002224  EF16  F011         	goto	u3290
 10938   002228                     u3291:
 10939   002228  EF1A  F011         	goto	l1273
 10940   00222C                     u3290:
 10941   00222C                     l3846:
 10942   00222C  0E01               	movlw	1
 10943   00222E  6E0E               	movwf	___fladd@aexp^0,c
 10944   002230  EF23  F011         	goto	l1272
 10945   002234                     l1273:
 10946   002234  A001               	btfss	___fladd@b^0,0,c
 10947   002236  EF1F  F011         	goto	u3301
 10948   00223A  EF21  F011         	goto	u3300
 10949   00223E                     u3301:
 10950   00223E  EF23  F011         	goto	l1272
 10951   002242                     u3300:
 10952   002242  EF16  F011         	goto	l3846
 10953   002246                     l1272:
 10954   002246  500E               	movf	___fladd@aexp^0,w,c
 10955   002248  B4D8               	btfsc	status,2,c
 10956   00224A  EF29  F011         	goto	u3311
 10957   00224E  EF2B  F011         	goto	u3310
 10958   002252                     u3311:
 10959   002252  EF56  F011         	goto	l3858
 10960   002256                     u3310:
 10961   002256  0E01               	movlw	1
 10962   002258  2601               	addwf	___fladd@b^0,f,c
 10963   00225A  0E00               	movlw	0
 10964   00225C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10965   00225E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10966   002260  2204               	addwfc	(___fladd@b+3)^0,f,c
 10967   002262  A004               	btfss	(___fladd@b+3)^0,0,c
 10968   002264  EF36  F011         	goto	u3321
 10969   002268  EF38  F011         	goto	u3320
 10970   00226C                     u3321:
 10971   00226C  EF56  F011         	goto	l3858
 10972   002270                     u3320:
 10973   002270  C001  F009         	movff	___fladd@b,??___fladd
 10974   002274  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10975   002278  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10976   00227C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10977   002280  340C               	rlcf	(??___fladd+3)^0,w,c
 10978   002282  320C               	rrcf	(??___fladd+3)^0,f,c
 10979   002284  320B               	rrcf	(??___fladd+2)^0,f,c
 10980   002286  320A               	rrcf	(??___fladd+1)^0,f,c
 10981   002288  3209               	rrcf	??___fladd^0,f,c
 10982   00228A  C009  F001         	movff	??___fladd,___fladd@b
 10983   00228E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10984   002292  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10985   002296  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10986   00229A  280F               	incf	___fladd@bexp^0,w,c
 10987   00229C  B4D8               	btfsc	status,2,c
 10988   00229E  EF53  F011         	goto	u3331
 10989   0022A2  EF55  F011         	goto	u3330
 10990   0022A6                     u3331:
 10991   0022A6  EF56  F011         	goto	l3858
 10992   0022AA                     u3330:
 10993   0022AA  2A0F               	incf	___fladd@bexp^0,f,c
 10994   0022AC                     l3858:
 10995   0022AC  280F               	incf	___fladd@bexp^0,w,c
 10996   0022AE  B4D8               	btfsc	status,2,c
 10997   0022B0  EF5C  F011         	goto	u3341
 10998   0022B4  EF5E  F011         	goto	u3340
 10999   0022B8                     u3341:
 11000   0022B8  EF66  F011         	goto	l3862
 11001   0022BC                     u3340:
 11002   0022BC  500F               	movf	___fladd@bexp^0,w,c
 11003   0022BE  A4D8               	btfss	status,2,c
 11004   0022C0  EF64  F011         	goto	u3351
 11005   0022C4  EF66  F011         	goto	u3350
 11006   0022C8                     u3351:
 11007   0022C8  EF78  F011         	goto	l3866
 11008   0022CC                     u3350:
 11009   0022CC                     l3862:
 11010   0022CC  0E00               	movlw	0
 11011   0022CE  6E01               	movwf	___fladd@b^0,c
 11012   0022D0  0E00               	movlw	0
 11013   0022D2  6E02               	movwf	(___fladd@b+1)^0,c
 11014   0022D4  0E00               	movlw	0
 11015   0022D6  6E03               	movwf	(___fladd@b+2)^0,c
 11016   0022D8  0E00               	movlw	0
 11017   0022DA  6E04               	movwf	(___fladd@b+3)^0,c
 11018   0022DC  500F               	movf	___fladd@bexp^0,w,c
 11019   0022DE  A4D8               	btfss	status,2,c
 11020   0022E0  EF74  F011         	goto	u3361
 11021   0022E4  EF76  F011         	goto	u3360
 11022   0022E8                     u3361:
 11023   0022E8  EF78  F011         	goto	l3866
 11024   0022EC                     u3360:
 11025   0022EC  0E00               	movlw	0
 11026   0022EE  6E0D               	movwf	___fladd@signs^0,c
 11027   0022F0                     l3866:
 11028   0022F0  A00F               	btfss	___fladd@bexp^0,0,c
 11029   0022F2  EF7D  F011         	goto	u3371
 11030   0022F6  EF7F  F011         	goto	u3370
 11031   0022FA                     u3371:
 11032   0022FA  EF82  F011         	goto	l3870
 11033   0022FE                     u3370:
 11034   0022FE  8E03               	bsf	(___fladd@b+2)^0,7,c
 11035   002300  EF83  F011         	goto	l3872
 11036   002304                     l3870:
 11037   002304  9E03               	bcf	(___fladd@b+2)^0,7,c
 11038   002306                     l3872:
 11039   002306  90D8               	bcf	status,0,c
 11040   002308  300F               	rrcf	___fladd@bexp^0,w,c
 11041   00230A  6E04               	movwf	(___fladd@b+3)^0,c
 11042   00230C  AE0D               	btfss	___fladd@signs^0,7,c
 11043   00230E  EF8B  F011         	goto	u3381
 11044   002312  EF8D  F011         	goto	u3380
 11045   002316                     u3381:
 11046   002316  EF8E  F011         	goto	l3878
 11047   00231A                     u3380:
 11048   00231A  8E04               	bsf	(___fladd@b+3)^0,7,c
 11049   00231C                     l3878:
 11050   00231C  C001  F001         	movff	___fladd@b,?___fladd
 11051   002320  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11052   002324  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11053   002328  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11054   00232C                     l1255:
 11055   00232C  0012               	return		;funcret
 11056   00232E                     __end_of___fladd:
 11057                           	callstack 0
 11058                           
 11059 ;; *************** function ___flmul *****************
 11060 ;; Defined at:
 11061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  b               4   49[COMRAM] unsigned char 
 11064 ;;  a               4   53[COMRAM] unsigned char 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  prod            4   68[COMRAM] struct .
 11067 ;;  grs             4   62[COMRAM] unsigned long 
 11068 ;;  temp            2   72[COMRAM] struct .
 11069 ;;  bexp            1   67[COMRAM] unsigned char 
 11070 ;;  aexp            1   66[COMRAM] unsigned char 
 11071 ;;  sign            1   61[COMRAM] unsigned char 
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  4   49[COMRAM] unsigned char 
 11074 ;; Registers used:
 11075 ;;		wreg, status,2, status,0, prodl, prodh
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11082 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11083 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11084 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11085 ;;Total ram usage:       25 bytes
 11086 ;; Hardware stack levels used: 1
 11087 ;; Hardware stack levels required when called: 1
 11088 ;; This function calls:
 11089 ;;		Nothing
 11090 ;; This function is called by:
 11091 ;;		_Colour_decider
 11092 ;;		_reverseOneBlock
 11093 ;;		_ForwardOneBlock
 11094 ;;		_Forwardhalfblock
 11095 ;;		_Backhalfblock
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text67
 11100   00232E                     __ptext67:
 11101                           	callstack 0
 11102   00232E                     ___flmul:
 11103                           	callstack 28
 11104   00232E  5035               	movf	(___flmul@b+3)^0,w,c
 11105   002330  0B80               	andlw	128
 11106   002332  6E3E               	movwf	___flmul@sign^0,c
 11107   002334  5035               	movf	(___flmul@b+3)^0,w,c
 11108   002336  2435               	addwf	(___flmul@b+3)^0,w,c
 11109   002338  6E44               	movwf	___flmul@bexp^0,c
 11110   00233A  AE34               	btfss	(___flmul@b+2)^0,7,c
 11111   00233C  EFA2  F011         	goto	u3681
 11112   002340  EFA4  F011         	goto	u3680
 11113   002344                     u3681:
 11114   002344  EFA5  F011         	goto	l4134
 11115   002348                     u3680:
 11116   002348  8044               	bsf	___flmul@bexp^0,0,c
 11117   00234A                     l4134:
 11118   00234A  5044               	movf	___flmul@bexp^0,w,c
 11119   00234C  B4D8               	btfsc	status,2,c
 11120   00234E  EFAB  F011         	goto	u3691
 11121   002352  EFAD  F011         	goto	u3690
 11122   002356                     u3691:
 11123   002356  EFC0  F011         	goto	l4142
 11124   00235A                     u3690:
 11125   00235A  2844               	incf	___flmul@bexp^0,w,c
 11126   00235C  A4D8               	btfss	status,2,c
 11127   00235E  EFB3  F011         	goto	u3701
 11128   002362  EFB5  F011         	goto	u3700
 11129   002366                     u3701:
 11130   002366  EFBD  F011         	goto	l4140
 11131   00236A                     u3700:
 11132   00236A  0E00               	movlw	0
 11133   00236C  6E32               	movwf	___flmul@b^0,c
 11134   00236E  0E00               	movlw	0
 11135   002370  6E33               	movwf	(___flmul@b+1)^0,c
 11136   002372  0E00               	movlw	0
 11137   002374  6E34               	movwf	(___flmul@b+2)^0,c
 11138   002376  0E00               	movlw	0
 11139   002378  6E35               	movwf	(___flmul@b+3)^0,c
 11140   00237A                     l4140:
 11141   00237A  8E34               	bsf	(___flmul@b+2)^0,7,c
 11142   00237C  EFC8  F011         	goto	l4144
 11143   002380                     l4142:
 11144   002380  0E00               	movlw	0
 11145   002382  6E32               	movwf	___flmul@b^0,c
 11146   002384  0E00               	movlw	0
 11147   002386  6E33               	movwf	(___flmul@b+1)^0,c
 11148   002388  0E00               	movlw	0
 11149   00238A  6E34               	movwf	(___flmul@b+2)^0,c
 11150   00238C  0E00               	movlw	0
 11151   00238E  6E35               	movwf	(___flmul@b+3)^0,c
 11152   002390                     l4144:
 11153   002390  5039               	movf	(___flmul@a+3)^0,w,c
 11154   002392  0B80               	andlw	128
 11155   002394  1A3E               	xorwf	___flmul@sign^0,f,c
 11156   002396  5039               	movf	(___flmul@a+3)^0,w,c
 11157   002398  2439               	addwf	(___flmul@a+3)^0,w,c
 11158   00239A  6E43               	movwf	___flmul@aexp^0,c
 11159   00239C  AE38               	btfss	(___flmul@a+2)^0,7,c
 11160   00239E  EFD3  F011         	goto	u3711
 11161   0023A2  EFD5  F011         	goto	u3710
 11162   0023A6                     u3711:
 11163   0023A6  EFD6  F011         	goto	l4152
 11164   0023AA                     u3710:
 11165   0023AA  8043               	bsf	___flmul@aexp^0,0,c
 11166   0023AC                     l4152:
 11167   0023AC  5043               	movf	___flmul@aexp^0,w,c
 11168   0023AE  B4D8               	btfsc	status,2,c
 11169   0023B0  EFDC  F011         	goto	u3721
 11170   0023B4  EFDE  F011         	goto	u3720
 11171   0023B8                     u3721:
 11172   0023B8  EFF1  F011         	goto	l4160
 11173   0023BC                     u3720:
 11174   0023BC  2843               	incf	___flmul@aexp^0,w,c
 11175   0023BE  A4D8               	btfss	status,2,c
 11176   0023C0  EFE4  F011         	goto	u3731
 11177   0023C4  EFE6  F011         	goto	u3730
 11178   0023C8                     u3731:
 11179   0023C8  EFEE  F011         	goto	l4158
 11180   0023CC                     u3730:
 11181   0023CC  0E00               	movlw	0
 11182   0023CE  6E36               	movwf	___flmul@a^0,c
 11183   0023D0  0E00               	movlw	0
 11184   0023D2  6E37               	movwf	(___flmul@a+1)^0,c
 11185   0023D4  0E00               	movlw	0
 11186   0023D6  6E38               	movwf	(___flmul@a+2)^0,c
 11187   0023D8  0E00               	movlw	0
 11188   0023DA  6E39               	movwf	(___flmul@a+3)^0,c
 11189   0023DC                     l4158:
 11190   0023DC  8E38               	bsf	(___flmul@a+2)^0,7,c
 11191   0023DE  EFF9  F011         	goto	l1332
 11192   0023E2                     l4160:
 11193   0023E2  0E00               	movlw	0
 11194   0023E4  6E36               	movwf	___flmul@a^0,c
 11195   0023E6  0E00               	movlw	0
 11196   0023E8  6E37               	movwf	(___flmul@a+1)^0,c
 11197   0023EA  0E00               	movlw	0
 11198   0023EC  6E38               	movwf	(___flmul@a+2)^0,c
 11199   0023EE  0E00               	movlw	0
 11200   0023F0  6E39               	movwf	(___flmul@a+3)^0,c
 11201   0023F2                     l1332:
 11202   0023F2  5043               	movf	___flmul@aexp^0,w,c
 11203   0023F4  B4D8               	btfsc	status,2,c
 11204   0023F6  EFFF  F011         	goto	u3741
 11205   0023FA  EF01  F012         	goto	u3740
 11206   0023FE                     u3741:
 11207   0023FE  EF09  F012         	goto	l4164
 11208   002402                     u3740:
 11209   002402  5044               	movf	___flmul@bexp^0,w,c
 11210   002404  A4D8               	btfss	status,2,c
 11211   002406  EF07  F012         	goto	u3751
 11212   00240A  EF09  F012         	goto	u3750
 11213   00240E                     u3751:
 11214   00240E  EF13  F012         	goto	l4168
 11215   002412                     u3750:
 11216   002412                     l4164:
 11217   002412  0E00               	movlw	0
 11218   002414  6E32               	movwf	?___flmul^0,c
 11219   002416  0E00               	movlw	0
 11220   002418  6E33               	movwf	(?___flmul+1)^0,c
 11221   00241A  0E00               	movlw	0
 11222   00241C  6E34               	movwf	(?___flmul+2)^0,c
 11223   00241E  0E00               	movlw	0
 11224   002420  6E35               	movwf	(?___flmul+3)^0,c
 11225   002422  EFAB  F013         	goto	l1336
 11226   002426                     l4168:
 11227   002426  5038               	movf	(___flmul@a+2)^0,w,c
 11228   002428  0232               	mulwf	___flmul@b^0,c
 11229   00242A  CFF3 F049          	movff	prodl,___flmul@temp
 11230   00242E  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11231   002432  5049               	movf	___flmul@temp^0,w,c
 11232   002434  6E3F               	movwf	___flmul@grs^0,c
 11233   002436  6A40               	clrf	(___flmul@grs+1)^0,c
 11234   002438  6A41               	clrf	(___flmul@grs+2)^0,c
 11235   00243A  6A42               	clrf	(___flmul@grs+3)^0,c
 11236   00243C  504A               	movf	(___flmul@temp+1)^0,w,c
 11237   00243E  6E45               	movwf	___flmul@prod^0,c
 11238   002440  6A46               	clrf	(___flmul@prod+1)^0,c
 11239   002442  6A47               	clrf	(___flmul@prod+2)^0,c
 11240   002444  6A48               	clrf	(___flmul@prod+3)^0,c
 11241   002446  5037               	movf	(___flmul@a+1)^0,w,c
 11242   002448  0233               	mulwf	(___flmul@b+1)^0,c
 11243   00244A  CFF3 F049          	movff	prodl,___flmul@temp
 11244   00244E  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11245   002452  5049               	movf	___flmul@temp^0,w,c
 11246   002454  263F               	addwf	___flmul@grs^0,f,c
 11247   002456  0E00               	movlw	0
 11248   002458  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11249   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11250   00245C  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11251   00245E  504A               	movf	(___flmul@temp+1)^0,w,c
 11252   002460  2645               	addwf	___flmul@prod^0,f,c
 11253   002462  0E00               	movlw	0
 11254   002464  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11255   002466  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11256   002468  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11257   00246A  5036               	movf	___flmul@a^0,w,c
 11258   00246C  0234               	mulwf	(___flmul@b+2)^0,c
 11259   00246E  CFF3 F049          	movff	prodl,___flmul@temp
 11260   002472  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11261   002476  5049               	movf	___flmul@temp^0,w,c
 11262   002478  263F               	addwf	___flmul@grs^0,f,c
 11263   00247A  0E00               	movlw	0
 11264   00247C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11265   00247E  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11266   002480  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11267   002482  504A               	movf	(___flmul@temp+1)^0,w,c
 11268   002484  2645               	addwf	___flmul@prod^0,f,c
 11269   002486  0E00               	movlw	0
 11270   002488  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11271   00248A  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11272   00248C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11273   00248E  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11274   002492  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11275   002496  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11276   00249A  6A3F               	clrf	___flmul@grs^0,c
 11277   00249C  5036               	movf	___flmul@a^0,w,c
 11278   00249E  0233               	mulwf	(___flmul@b+1)^0,c
 11279   0024A0  CFF3 F049          	movff	prodl,___flmul@temp
 11280   0024A4  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11281   0024A8  5049               	movf	___flmul@temp^0,w,c
 11282   0024AA  263F               	addwf	___flmul@grs^0,f,c
 11283   0024AC  504A               	movf	(___flmul@temp+1)^0,w,c
 11284   0024AE  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11285   0024B0  0E00               	movlw	0
 11286   0024B2  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11287   0024B4  0E00               	movlw	0
 11288   0024B6  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11289   0024B8  5037               	movf	(___flmul@a+1)^0,w,c
 11290   0024BA  0232               	mulwf	___flmul@b^0,c
 11291   0024BC  CFF3 F049          	movff	prodl,___flmul@temp
 11292   0024C0  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11293   0024C4  5049               	movf	___flmul@temp^0,w,c
 11294   0024C6  263F               	addwf	___flmul@grs^0,f,c
 11295   0024C8  504A               	movf	(___flmul@temp+1)^0,w,c
 11296   0024CA  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11297   0024CC  0E00               	movlw	0
 11298   0024CE  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11299   0024D0  0E00               	movlw	0
 11300   0024D2  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11301   0024D4  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11302   0024D8  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11303   0024DC  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11304   0024E0  6A3F               	clrf	___flmul@grs^0,c
 11305   0024E2  5036               	movf	___flmul@a^0,w,c
 11306   0024E4  0232               	mulwf	___flmul@b^0,c
 11307   0024E6  CFF3 F049          	movff	prodl,___flmul@temp
 11308   0024EA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11309   0024EE  5049               	movf	___flmul@temp^0,w,c
 11310   0024F0  263F               	addwf	___flmul@grs^0,f,c
 11311   0024F2  504A               	movf	(___flmul@temp+1)^0,w,c
 11312   0024F4  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11313   0024F6  0E00               	movlw	0
 11314   0024F8  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11315   0024FA  0E00               	movlw	0
 11316   0024FC  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11317   0024FE  5038               	movf	(___flmul@a+2)^0,w,c
 11318   002500  0233               	mulwf	(___flmul@b+1)^0,c
 11319   002502  CFF3 F049          	movff	prodl,___flmul@temp
 11320   002506  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11321   00250A  5049               	movf	___flmul@temp^0,w,c
 11322   00250C  2645               	addwf	___flmul@prod^0,f,c
 11323   00250E  504A               	movf	(___flmul@temp+1)^0,w,c
 11324   002510  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11325   002512  0E00               	movlw	0
 11326   002514  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11327   002516  0E00               	movlw	0
 11328   002518  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11329   00251A  5037               	movf	(___flmul@a+1)^0,w,c
 11330   00251C  0234               	mulwf	(___flmul@b+2)^0,c
 11331   00251E  CFF3 F049          	movff	prodl,___flmul@temp
 11332   002522  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11333   002526  5049               	movf	___flmul@temp^0,w,c
 11334   002528  2645               	addwf	___flmul@prod^0,f,c
 11335   00252A  504A               	movf	(___flmul@temp+1)^0,w,c
 11336   00252C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11337   00252E  0E00               	movlw	0
 11338   002530  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11339   002532  0E00               	movlw	0
 11340   002534  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11341   002536  5038               	movf	(___flmul@a+2)^0,w,c
 11342   002538  0234               	mulwf	(___flmul@b+2)^0,c
 11343   00253A  CFF3 F049          	movff	prodl,___flmul@temp
 11344   00253E  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11345   002542  5049               	movf	___flmul@temp^0,w,c
 11346   002544  6E3A               	movwf	??___flmul^0,c
 11347   002546  504A               	movf	(___flmul@temp+1)^0,w,c
 11348   002548  6E3B               	movwf	(??___flmul+1)^0,c
 11349   00254A  6A3C               	clrf	(??___flmul+2)^0,c
 11350   00254C  6A3D               	clrf	(??___flmul+3)^0,c
 11351   00254E  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11352   002552  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11353   002556  C03A  F03B         	movff	??___flmul,??___flmul+1
 11354   00255A  6A3A               	clrf	??___flmul^0,c
 11355   00255C  503A               	movf	??___flmul^0,w,c
 11356   00255E  2645               	addwf	___flmul@prod^0,f,c
 11357   002560  503B               	movf	(??___flmul+1)^0,w,c
 11358   002562  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11359   002564  503C               	movf	(??___flmul+2)^0,w,c
 11360   002566  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11361   002568  503D               	movf	(??___flmul+3)^0,w,c
 11362   00256A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11363   00256C  C03F  F03A         	movff	___flmul@grs,??___flmul
 11364   002570  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11365   002574  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11366   002578  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11367   00257C  0E19               	movlw	25
 11368   00257E  EFC6  F012         	goto	u3760
 11369   002582                     u3765:
 11370   002582  90D8               	bcf	status,0,c
 11371   002584  323D               	rrcf	(??___flmul+3)^0,f,c
 11372   002586  323C               	rrcf	(??___flmul+2)^0,f,c
 11373   002588  323B               	rrcf	(??___flmul+1)^0,f,c
 11374   00258A  323A               	rrcf	??___flmul^0,f,c
 11375   00258C                     u3760:
 11376   00258C  2EE8               	decfsz	wreg,f,c
 11377   00258E  EFC1  F012         	goto	u3765
 11378   002592  503A               	movf	??___flmul^0,w,c
 11379   002594  2645               	addwf	___flmul@prod^0,f,c
 11380   002596  503B               	movf	(??___flmul+1)^0,w,c
 11381   002598  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11382   00259A  503C               	movf	(??___flmul+2)^0,w,c
 11383   00259C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11384   00259E  503D               	movf	(??___flmul+3)^0,w,c
 11385   0025A0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11386   0025A2  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11387   0025A6  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11388   0025AA  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11389   0025AE  6A3F               	clrf	___flmul@grs^0,c
 11390   0025B0  5043               	movf	___flmul@aexp^0,w,c
 11391   0025B2  C044  F03A         	movff	___flmul@bexp,??___flmul
 11392   0025B6  6A3B               	clrf	(??___flmul+1)^0,c
 11393   0025B8  263A               	addwf	??___flmul^0,f,c
 11394   0025BA  0E00               	movlw	0
 11395   0025BC  223B               	addwfc	(??___flmul+1)^0,f,c
 11396   0025BE  0E82               	movlw	130
 11397   0025C0  243A               	addwf	??___flmul^0,w,c
 11398   0025C2  6E49               	movwf	___flmul@temp^0,c
 11399   0025C4  0EFF               	movlw	255
 11400   0025C6  203B               	addwfc	(??___flmul+1)^0,w,c
 11401   0025C8  6E4A               	movwf	(___flmul@temp+1)^0,c
 11402   0025CA  EFFC  F012         	goto	l4216
 11403   0025CE                     l4210:
 11404   0025CE  90D8               	bcf	status,0,c
 11405   0025D0  3645               	rlcf	___flmul@prod^0,f,c
 11406   0025D2  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11407   0025D4  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11408   0025D6  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11409   0025D8  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11410   0025DA  EFF1  F012         	goto	u3771
 11411   0025DE  EFF3  F012         	goto	u3770
 11412   0025E2                     u3771:
 11413   0025E2  EFF4  F012         	goto	l1339
 11414   0025E6                     u3770:
 11415   0025E6  8045               	bsf	___flmul@prod^0,0,c
 11416   0025E8                     l1339:
 11417   0025E8  90D8               	bcf	status,0,c
 11418   0025EA  363F               	rlcf	___flmul@grs^0,f,c
 11419   0025EC  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11420   0025EE  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11421   0025F0  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11422   0025F2  0649               	decf	___flmul@temp^0,f,c
 11423   0025F4  A0D8               	btfss	status,0,c
 11424   0025F6  064A               	decf	(___flmul@temp+1)^0,f,c
 11425   0025F8                     l4216:
 11426   0025F8  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11427   0025FA  EF01  F013         	goto	u3781
 11428   0025FE  EF03  F013         	goto	u3780
 11429   002602                     u3781:
 11430   002602  EFE7  F012         	goto	l4210
 11431   002606                     u3780:
 11432   002606  0E00               	movlw	0
 11433   002608  6E43               	movwf	___flmul@aexp^0,c
 11434   00260A  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11435   00260C  EF0A  F013         	goto	u3791
 11436   002610  EF0C  F013         	goto	u3790
 11437   002614                     u3791:
 11438   002614  EF30  F013         	goto	l1341
 11439   002618                     u3790:
 11440   002618  0EFF               	movlw	255
 11441   00261A  143F               	andwf	___flmul@grs^0,w,c
 11442   00261C  6E3A               	movwf	??___flmul^0,c
 11443   00261E  0EFF               	movlw	255
 11444   002620  1440               	andwf	(___flmul@grs+1)^0,w,c
 11445   002622  6E3B               	movwf	(??___flmul+1)^0,c
 11446   002624  0EFF               	movlw	255
 11447   002626  1441               	andwf	(___flmul@grs+2)^0,w,c
 11448   002628  6E3C               	movwf	(??___flmul+2)^0,c
 11449   00262A  0E7F               	movlw	127
 11450   00262C  1442               	andwf	(___flmul@grs+3)^0,w,c
 11451   00262E  6E3D               	movwf	(??___flmul+3)^0,c
 11452   002630  503A               	movf	??___flmul^0,w,c
 11453   002632  103B               	iorwf	(??___flmul+1)^0,w,c
 11454   002634  103C               	iorwf	(??___flmul+2)^0,w,c
 11455   002636  103D               	iorwf	(??___flmul+3)^0,w,c
 11456   002638  B4D8               	btfsc	status,2,c
 11457   00263A  EF21  F013         	goto	u3801
 11458   00263E  EF23  F013         	goto	u3800
 11459   002642                     u3801:
 11460   002642  EF27  F013         	goto	l1342
 11461   002646                     u3800:
 11462   002646                     l4224:
 11463   002646  0E01               	movlw	1
 11464   002648  6E43               	movwf	___flmul@aexp^0,c
 11465   00264A  EF30  F013         	goto	l1341
 11466   00264E                     l1342:
 11467   00264E  A045               	btfss	___flmul@prod^0,0,c
 11468   002650  EF2C  F013         	goto	u3811
 11469   002654  EF2E  F013         	goto	u3810
 11470   002658                     u3811:
 11471   002658  EF30  F013         	goto	l1341
 11472   00265C                     u3810:
 11473   00265C  EF23  F013         	goto	l4224
 11474   002660                     l1341:
 11475   002660  5043               	movf	___flmul@aexp^0,w,c
 11476   002662  B4D8               	btfsc	status,2,c
 11477   002664  EF36  F013         	goto	u3821
 11478   002668  EF38  F013         	goto	u3820
 11479   00266C                     u3821:
 11480   00266C  EF5C  F013         	goto	l4236
 11481   002670                     u3820:
 11482   002670  0E01               	movlw	1
 11483   002672  2645               	addwf	___flmul@prod^0,f,c
 11484   002674  0E00               	movlw	0
 11485   002676  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11486   002678  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11487   00267A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11488   00267C  A048               	btfss	(___flmul@prod+3)^0,0,c
 11489   00267E  EF43  F013         	goto	u3831
 11490   002682  EF45  F013         	goto	u3830
 11491   002686                     u3831:
 11492   002686  EF5C  F013         	goto	l4236
 11493   00268A                     u3830:
 11494   00268A  C045  F03A         	movff	___flmul@prod,??___flmul
 11495   00268E  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11496   002692  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11497   002696  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11498   00269A  343D               	rlcf	(??___flmul+3)^0,w,c
 11499   00269C  323D               	rrcf	(??___flmul+3)^0,f,c
 11500   00269E  323C               	rrcf	(??___flmul+2)^0,f,c
 11501   0026A0  323B               	rrcf	(??___flmul+1)^0,f,c
 11502   0026A2  323A               	rrcf	??___flmul^0,f,c
 11503   0026A4  C03A  F045         	movff	??___flmul,___flmul@prod
 11504   0026A8  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11505   0026AC  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11506   0026B0  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11507   0026B4  4A49               	infsnz	___flmul@temp^0,f,c
 11508   0026B6  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11509   0026B8                     l4236:
 11510   0026B8  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11511   0026BA  EF67  F013         	goto	u3841
 11512   0026BE  504A               	movf	(___flmul@temp+1)^0,w,c
 11513   0026C0  E108               	bnz	u3840
 11514   0026C2  2849               	incf	___flmul@temp^0,w,c
 11515   0026C4  A0D8               	btfss	status,0,c
 11516   0026C6  EF67  F013         	goto	u3841
 11517   0026CA  EF69  F013         	goto	u3840
 11518   0026CE                     u3841:
 11519   0026CE  EF73  F013         	goto	l4240
 11520   0026D2                     u3840:
 11521   0026D2  0E00               	movlw	0
 11522   0026D4  6E45               	movwf	___flmul@prod^0,c
 11523   0026D6  0E00               	movlw	0
 11524   0026D8  6E46               	movwf	(___flmul@prod+1)^0,c
 11525   0026DA  0E80               	movlw	128
 11526   0026DC  6E47               	movwf	(___flmul@prod+2)^0,c
 11527   0026DE  0E7F               	movlw	127
 11528   0026E0  6E48               	movwf	(___flmul@prod+3)^0,c
 11529   0026E2  EFA1  F013         	goto	l4252
 11530   0026E6                     l4240:
 11531   0026E6  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11532   0026E8  EF80  F013         	goto	u3850
 11533   0026EC  504A               	movf	(___flmul@temp+1)^0,w,c
 11534   0026EE  E106               	bnz	u3851
 11535   0026F0  0449               	decf	___flmul@temp^0,w,c
 11536   0026F2  B0D8               	btfsc	status,0,c
 11537   0026F4  EF7E  F013         	goto	u3851
 11538   0026F8  EF80  F013         	goto	u3850
 11539   0026FC                     u3851:
 11540   0026FC  EF8C  F013         	goto	l1349
 11541   002700                     u3850:
 11542   002700  0E00               	movlw	0
 11543   002702  6E45               	movwf	___flmul@prod^0,c
 11544   002704  0E00               	movlw	0
 11545   002706  6E46               	movwf	(___flmul@prod+1)^0,c
 11546   002708  0E00               	movlw	0
 11547   00270A  6E47               	movwf	(___flmul@prod+2)^0,c
 11548   00270C  0E00               	movlw	0
 11549   00270E  6E48               	movwf	(___flmul@prod+3)^0,c
 11550   002710  0E00               	movlw	0
 11551   002712  6E3E               	movwf	___flmul@sign^0,c
 11552   002714  EFA1  F013         	goto	l4252
 11553   002718                     l1349:
 11554   002718  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11555   00271C  0EFF               	movlw	255
 11556   00271E  1645               	andwf	___flmul@prod^0,f,c
 11557   002720  0EFF               	movlw	255
 11558   002722  1646               	andwf	(___flmul@prod+1)^0,f,c
 11559   002724  0E7F               	movlw	127
 11560   002726  1647               	andwf	(___flmul@prod+2)^0,f,c
 11561   002728  0E00               	movlw	0
 11562   00272A  1648               	andwf	(___flmul@prod+3)^0,f,c
 11563   00272C  A044               	btfss	___flmul@bexp^0,0,c
 11564   00272E  EF9B  F013         	goto	u3861
 11565   002732  EF9D  F013         	goto	u3860
 11566   002736                     u3861:
 11567   002736  EF9E  F013         	goto	l4250
 11568   00273A                     u3860:
 11569   00273A  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11570   00273C                     l4250:
 11571   00273C  90D8               	bcf	status,0,c
 11572   00273E  3044               	rrcf	___flmul@bexp^0,w,c
 11573   002740  6E48               	movwf	(___flmul@prod+3)^0,c
 11574   002742                     l4252:
 11575   002742  503E               	movf	___flmul@sign^0,w,c
 11576   002744  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11577   002746  C045  F032         	movff	___flmul@prod,?___flmul
 11578   00274A  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11579   00274E  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11580   002752  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11581   002756                     l1336:
 11582   002756  0012               	return		;funcret
 11583   002758                     __end_of___flmul:
 11584                           	callstack 0
 11585                           
 11586 ;; *************** function ___flge *****************
 11587 ;; Defined at:
 11588 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  ff1             4    0[COMRAM] unsigned char 
 11591 ;;  ff2             4    4[COMRAM] unsigned char 
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;		None
 11594 ;; Return value:  Size  Location     Type
 11595 ;;		None               void
 11596 ;; Registers used:
 11597 ;;		wreg, status,2, status,0
 11598 ;; Tracked objects:
 11599 ;;		On entry : 0/0
 11600 ;;		On exit  : 0/0
 11601 ;;		Unchanged: 0/0
 11602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11603 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11606 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11607 ;;Total ram usage:       12 bytes
 11608 ;; Hardware stack levels used: 1
 11609 ;; Hardware stack levels required when called: 1
 11610 ;; This function calls:
 11611 ;;		Nothing
 11612 ;; This function is called by:
 11613 ;;		_Colour_decider
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           	psect	text68
 11618   003BEE                     __ptext68:
 11619                           	callstack 0
 11620   003BEE                     ___flge:
 11621                           	callstack 28
 11622   003BEE  0E00               	movlw	0
 11623   003BF0  1401               	andwf	___flge@ff1^0,w,c
 11624   003BF2  6E09               	movwf	??___flge^0,c
 11625   003BF4  0E00               	movlw	0
 11626   003BF6  1402               	andwf	(___flge@ff1+1)^0,w,c
 11627   003BF8  6E0A               	movwf	(??___flge+1)^0,c
 11628   003BFA  0E80               	movlw	128
 11629   003BFC  1403               	andwf	(___flge@ff1+2)^0,w,c
 11630   003BFE  6E0B               	movwf	(??___flge+2)^0,c
 11631   003C00  0E7F               	movlw	127
 11632   003C02  1404               	andwf	(___flge@ff1+3)^0,w,c
 11633   003C04  6E0C               	movwf	(??___flge+3)^0,c
 11634   003C06  5009               	movf	??___flge^0,w,c
 11635   003C08  100A               	iorwf	(??___flge+1)^0,w,c
 11636   003C0A  100B               	iorwf	(??___flge+2)^0,w,c
 11637   003C0C  100C               	iorwf	(??___flge+3)^0,w,c
 11638   003C0E  A4D8               	btfss	status,2,c
 11639   003C10  EF0C  F01E         	goto	u3901
 11640   003C14  EF0E  F01E         	goto	u3900
 11641   003C18                     u3901:
 11642   003C18  EF16  F01E         	goto	l4284
 11643   003C1C                     u3900:
 11644   003C1C  0E00               	movlw	0
 11645   003C1E  6E01               	movwf	___flge@ff1^0,c
 11646   003C20  0E00               	movlw	0
 11647   003C22  6E02               	movwf	(___flge@ff1+1)^0,c
 11648   003C24  0E00               	movlw	0
 11649   003C26  6E03               	movwf	(___flge@ff1+2)^0,c
 11650   003C28  0E00               	movlw	0
 11651   003C2A  6E04               	movwf	(___flge@ff1+3)^0,c
 11652   003C2C                     l4284:
 11653   003C2C  0E00               	movlw	0
 11654   003C2E  1405               	andwf	___flge@ff2^0,w,c
 11655   003C30  6E09               	movwf	??___flge^0,c
 11656   003C32  0E00               	movlw	0
 11657   003C34  1406               	andwf	(___flge@ff2+1)^0,w,c
 11658   003C36  6E0A               	movwf	(??___flge+1)^0,c
 11659   003C38  0E80               	movlw	128
 11660   003C3A  1407               	andwf	(___flge@ff2+2)^0,w,c
 11661   003C3C  6E0B               	movwf	(??___flge+2)^0,c
 11662   003C3E  0E7F               	movlw	127
 11663   003C40  1408               	andwf	(___flge@ff2+3)^0,w,c
 11664   003C42  6E0C               	movwf	(??___flge+3)^0,c
 11665   003C44  5009               	movf	??___flge^0,w,c
 11666   003C46  100A               	iorwf	(??___flge+1)^0,w,c
 11667   003C48  100B               	iorwf	(??___flge+2)^0,w,c
 11668   003C4A  100C               	iorwf	(??___flge+3)^0,w,c
 11669   003C4C  A4D8               	btfss	status,2,c
 11670   003C4E  EF2B  F01E         	goto	u3911
 11671   003C52  EF2D  F01E         	goto	u3910
 11672   003C56                     u3911:
 11673   003C56  EF35  F01E         	goto	l4288
 11674   003C5A                     u3910:
 11675   003C5A  0E00               	movlw	0
 11676   003C5C  6E05               	movwf	___flge@ff2^0,c
 11677   003C5E  0E00               	movlw	0
 11678   003C60  6E06               	movwf	(___flge@ff2+1)^0,c
 11679   003C62  0E00               	movlw	0
 11680   003C64  6E07               	movwf	(___flge@ff2+2)^0,c
 11681   003C66  0E00               	movlw	0
 11682   003C68  6E08               	movwf	(___flge@ff2+3)^0,c
 11683   003C6A                     l4288:
 11684   003C6A  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11685   003C6C  EF3A  F01E         	goto	u3921
 11686   003C70  EF3C  F01E         	goto	u3920
 11687   003C74                     u3921:
 11688   003C74  EF45  F01E         	goto	l4292
 11689   003C78                     u3920:
 11690   003C78  6C01               	negf	___flge@ff1^0,c
 11691   003C7A  1E02               	comf	(___flge@ff1+1)^0,f,c
 11692   003C7C  B0D8               	btfsc	status,0,c
 11693   003C7E  2A02               	incf	(___flge@ff1+1)^0,f,c
 11694   003C80  1E03               	comf	(___flge@ff1+2)^0,f,c
 11695   003C82  B0D8               	btfsc	status,0,c
 11696   003C84  2A03               	incf	(___flge@ff1+2)^0,f,c
 11697   003C86  0E80               	movlw	128
 11698   003C88  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11699   003C8A                     l4292:
 11700   003C8A  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11701   003C8C  EF4A  F01E         	goto	u3931
 11702   003C90  EF4C  F01E         	goto	u3930
 11703   003C94                     u3931:
 11704   003C94  EF55  F01E         	goto	l983
 11705   003C98                     u3930:
 11706   003C98  6C05               	negf	___flge@ff2^0,c
 11707   003C9A  1E06               	comf	(___flge@ff2+1)^0,f,c
 11708   003C9C  B0D8               	btfsc	status,0,c
 11709   003C9E  2A06               	incf	(___flge@ff2+1)^0,f,c
 11710   003CA0  1E07               	comf	(___flge@ff2+2)^0,f,c
 11711   003CA2  B0D8               	btfsc	status,0,c
 11712   003CA4  2A07               	incf	(___flge@ff2+2)^0,f,c
 11713   003CA6  0E80               	movlw	128
 11714   003CA8  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11715   003CAA                     l983:
 11716   003CAA  0E00               	movlw	0
 11717   003CAC  1A01               	xorwf	___flge@ff1^0,f,c
 11718   003CAE  0E00               	movlw	0
 11719   003CB0  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11720   003CB2  0E00               	movlw	0
 11721   003CB4  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11722   003CB6  0E80               	movlw	128
 11723   003CB8  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11724   003CBA  0E00               	movlw	0
 11725   003CBC  1A05               	xorwf	___flge@ff2^0,f,c
 11726   003CBE  0E00               	movlw	0
 11727   003CC0  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11728   003CC2  0E00               	movlw	0
 11729   003CC4  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11730   003CC6  0E80               	movlw	128
 11731   003CC8  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11732   003CCA  5005               	movf	___flge@ff2^0,w,c
 11733   003CCC  5C01               	subwf	___flge@ff1^0,w,c
 11734   003CCE  5006               	movf	(___flge@ff2+1)^0,w,c
 11735   003CD0  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11736   003CD2  5007               	movf	(___flge@ff2+2)^0,w,c
 11737   003CD4  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11738   003CD6  5008               	movf	(___flge@ff2+3)^0,w,c
 11739   003CD8  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11740   003CDA  B0D8               	btfsc	status,0,c
 11741   003CDC  EF72  F01E         	goto	u3941
 11742   003CE0  EF74  F01E         	goto	u3940
 11743   003CE4                     u3941:
 11744   003CE4  EF77  F01E         	goto	l4298
 11745   003CE8                     u3940:
 11746   003CE8  90D8               	bcf	status,0,c
 11747   003CEA  EF78  F01E         	goto	l988
 11748   003CEE                     l4298:
 11749   003CEE  80D8               	bsf	status,0,c
 11750   003CF0                     l988:
 11751   003CF0  0012               	return		;funcret
 11752   003CF2                     __end_of___flge:
 11753                           	callstack 0
 11754                           
 11755 ;; *************** function ___fleq *****************
 11756 ;; Defined at:
 11757 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  ff1             4   24[COMRAM] unsigned char 
 11760 ;;  ff2             4   28[COMRAM] unsigned char 
 11761 ;; Auto vars:     Size  Location     Type
 11762 ;;		None
 11763 ;; Return value:  Size  Location     Type
 11764 ;;		None               void
 11765 ;; Registers used:
 11766 ;;		wreg, status,2, status,0
 11767 ;; Tracked objects:
 11768 ;;		On entry : 0/0
 11769 ;;		On exit  : 0/0
 11770 ;;		Unchanged: 0/0
 11771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11772 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11775 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11776 ;;Total ram usage:       12 bytes
 11777 ;; Hardware stack levels used: 1
 11778 ;; Hardware stack levels required when called: 1
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_Colour_decider
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           
 11786                           	psect	text69
 11787   003E66                     __ptext69:
 11788                           	callstack 0
 11789   003E66                     ___fleq:
 11790                           	callstack 28
 11791   003E66  0E00               	movlw	0
 11792   003E68  1419               	andwf	___fleq@ff1^0,w,c
 11793   003E6A  6E21               	movwf	??___fleq^0,c
 11794   003E6C  0E00               	movlw	0
 11795   003E6E  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11796   003E70  6E22               	movwf	(??___fleq+1)^0,c
 11797   003E72  0E80               	movlw	128
 11798   003E74  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11799   003E76  6E23               	movwf	(??___fleq+2)^0,c
 11800   003E78  0E7F               	movlw	127
 11801   003E7A  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11802   003E7C  6E24               	movwf	(??___fleq+3)^0,c
 11803   003E7E  5021               	movf	??___fleq^0,w,c
 11804   003E80  1022               	iorwf	(??___fleq+1)^0,w,c
 11805   003E82  1023               	iorwf	(??___fleq+2)^0,w,c
 11806   003E84  1024               	iorwf	(??___fleq+3)^0,w,c
 11807   003E86  A4D8               	btfss	status,2,c
 11808   003E88  EF48  F01F         	goto	u3871
 11809   003E8C  EF4A  F01F         	goto	u3870
 11810   003E90                     u3871:
 11811   003E90  EF52  F01F         	goto	l4268
 11812   003E94                     u3870:
 11813   003E94  0E00               	movlw	0
 11814   003E96  6E19               	movwf	___fleq@ff1^0,c
 11815   003E98  0E00               	movlw	0
 11816   003E9A  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11817   003E9C  0E00               	movlw	0
 11818   003E9E  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11819   003EA0  0E00               	movlw	0
 11820   003EA2  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11821   003EA4                     l4268:
 11822   003EA4  0E00               	movlw	0
 11823   003EA6  141D               	andwf	___fleq@ff2^0,w,c
 11824   003EA8  6E21               	movwf	??___fleq^0,c
 11825   003EAA  0E00               	movlw	0
 11826   003EAC  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11827   003EAE  6E22               	movwf	(??___fleq+1)^0,c
 11828   003EB0  0E80               	movlw	128
 11829   003EB2  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11830   003EB4  6E23               	movwf	(??___fleq+2)^0,c
 11831   003EB6  0E7F               	movlw	127
 11832   003EB8  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11833   003EBA  6E24               	movwf	(??___fleq+3)^0,c
 11834   003EBC  5021               	movf	??___fleq^0,w,c
 11835   003EBE  1022               	iorwf	(??___fleq+1)^0,w,c
 11836   003EC0  1023               	iorwf	(??___fleq+2)^0,w,c
 11837   003EC2  1024               	iorwf	(??___fleq+3)^0,w,c
 11838   003EC4  A4D8               	btfss	status,2,c
 11839   003EC6  EF67  F01F         	goto	u3881
 11840   003ECA  EF69  F01F         	goto	u3880
 11841   003ECE                     u3881:
 11842   003ECE  EF71  F01F         	goto	l4272
 11843   003ED2                     u3880:
 11844   003ED2  0E00               	movlw	0
 11845   003ED4  6E1D               	movwf	___fleq@ff2^0,c
 11846   003ED6  0E00               	movlw	0
 11847   003ED8  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11848   003EDA  0E00               	movlw	0
 11849   003EDC  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11850   003EDE  0E00               	movlw	0
 11851   003EE0  6E20               	movwf	(___fleq@ff2+3)^0,c
 11852   003EE2                     l4272:
 11853   003EE2  501D               	movf	___fleq@ff2^0,w,c
 11854   003EE4  1819               	xorwf	___fleq@ff1^0,w,c
 11855   003EE6  E10F               	bnz	u3890
 11856   003EE8  501E               	movf	(___fleq@ff2+1)^0,w,c
 11857   003EEA  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11858   003EEC  E10C               	bnz	u3890
 11859   003EEE  501F               	movf	(___fleq@ff2+2)^0,w,c
 11860   003EF0  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11861   003EF2  E109               	bnz	u3890
 11862   003EF4  5020               	movf	(___fleq@ff2+3)^0,w,c
 11863   003EF6  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11864   003EF8  B4D8               	btfsc	status,2,c
 11865   003EFA  EF81  F01F         	goto	u3891
 11866   003EFE  EF83  F01F         	goto	u3890
 11867   003F02                     u3891:
 11868   003F02  EF86  F01F         	goto	l4276
 11869   003F06                     u3890:
 11870   003F06  90D8               	bcf	status,0,c
 11871   003F08  EF87  F01F         	goto	l977
 11872   003F0C                     l4276:
 11873   003F0C  80D8               	bsf	status,0,c
 11874   003F0E                     l977:
 11875   003F0E  0012               	return		;funcret
 11876   003F10                     __end_of___fleq:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function ___fldiv *****************
 11880 ;; Defined at:
 11881 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  b               4   24[COMRAM] unsigned char 
 11884 ;;  a               4   28[COMRAM] unsigned char 
 11885 ;; Auto vars:     Size  Location     Type
 11886 ;;  grs             4   43[COMRAM] unsigned long 
 11887 ;;  rem             4   36[COMRAM] unsigned long 
 11888 ;;  new_exp         2   41[COMRAM] short 
 11889 ;;  aexp            1   48[COMRAM] unsigned char 
 11890 ;;  bexp            1   47[COMRAM] unsigned char 
 11891 ;;  sign            1   40[COMRAM] unsigned char 
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  4   24[COMRAM] unsigned char 
 11894 ;; Registers used:
 11895 ;;		wreg, status,2, status,0
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11901 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11902 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11904 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11905 ;;Total ram usage:       25 bytes
 11906 ;; Hardware stack levels used: 1
 11907 ;; Hardware stack levels required when called: 1
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_colour_rel
 11912 ;;		_Colour_decider
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text70
 11917   002758                     __ptext70:
 11918                           	callstack 0
 11919   002758                     ___fldiv:
 11920                           	callstack 28
 11921   002758  501C               	movf	(___fldiv@b+3)^0,w,c
 11922   00275A  0B80               	andlw	128
 11923   00275C  6E29               	movwf	___fldiv@sign^0,c
 11924   00275E  501C               	movf	(___fldiv@b+3)^0,w,c
 11925   002760  241C               	addwf	(___fldiv@b+3)^0,w,c
 11926   002762  6E30               	movwf	___fldiv@bexp^0,c
 11927   002764  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11928   002766  EFB7  F013         	goto	u3451
 11929   00276A  EFB9  F013         	goto	u3450
 11930   00276E                     u3451:
 11931   00276E  EFBA  F013         	goto	l3996
 11932   002772                     u3450:
 11933   002772  8030               	bsf	___fldiv@bexp^0,0,c
 11934   002774                     l3996:
 11935   002774  5030               	movf	___fldiv@bexp^0,w,c
 11936   002776  B4D8               	btfsc	status,2,c
 11937   002778  EFC0  F013         	goto	u3461
 11938   00277C  EFC2  F013         	goto	u3460
 11939   002780                     u3461:
 11940   002780  EFD7  F013         	goto	l4006
 11941   002784                     u3460:
 11942   002784  2830               	incf	___fldiv@bexp^0,w,c
 11943   002786  A4D8               	btfss	status,2,c
 11944   002788  EFC8  F013         	goto	u3471
 11945   00278C  EFCA  F013         	goto	u3470
 11946   002790                     u3471:
 11947   002790  EFD2  F013         	goto	l4002
 11948   002794                     u3470:
 11949   002794  0E00               	movlw	0
 11950   002796  6E19               	movwf	___fldiv@b^0,c
 11951   002798  0E00               	movlw	0
 11952   00279A  6E1A               	movwf	(___fldiv@b+1)^0,c
 11953   00279C  0E00               	movlw	0
 11954   00279E  6E1B               	movwf	(___fldiv@b+2)^0,c
 11955   0027A0  0E00               	movlw	0
 11956   0027A2  6E1C               	movwf	(___fldiv@b+3)^0,c
 11957   0027A4                     l4002:
 11958   0027A4  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11959   0027A6  0E00               	movlw	0
 11960   0027A8  6E1C               	movwf	(___fldiv@b+3)^0,c
 11961   0027AA  EFDF  F013         	goto	l4008
 11962   0027AE                     l4006:
 11963   0027AE  0E00               	movlw	0
 11964   0027B0  6E19               	movwf	___fldiv@b^0,c
 11965   0027B2  0E00               	movlw	0
 11966   0027B4  6E1A               	movwf	(___fldiv@b+1)^0,c
 11967   0027B6  0E00               	movlw	0
 11968   0027B8  6E1B               	movwf	(___fldiv@b+2)^0,c
 11969   0027BA  0E00               	movlw	0
 11970   0027BC  6E1C               	movwf	(___fldiv@b+3)^0,c
 11971   0027BE                     l4008:
 11972   0027BE  5020               	movf	(___fldiv@a+3)^0,w,c
 11973   0027C0  0B80               	andlw	128
 11974   0027C2  1A29               	xorwf	___fldiv@sign^0,f,c
 11975   0027C4  5020               	movf	(___fldiv@a+3)^0,w,c
 11976   0027C6  2420               	addwf	(___fldiv@a+3)^0,w,c
 11977   0027C8  6E31               	movwf	___fldiv@aexp^0,c
 11978   0027CA  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11979   0027CC  EFEA  F013         	goto	u3481
 11980   0027D0  EFEC  F013         	goto	u3480
 11981   0027D4                     u3481:
 11982   0027D4  EFED  F013         	goto	l4016
 11983   0027D8                     u3480:
 11984   0027D8  8031               	bsf	___fldiv@aexp^0,0,c
 11985   0027DA                     l4016:
 11986   0027DA  5031               	movf	___fldiv@aexp^0,w,c
 11987   0027DC  B4D8               	btfsc	status,2,c
 11988   0027DE  EFF3  F013         	goto	u3491
 11989   0027E2  EFF5  F013         	goto	u3490
 11990   0027E6                     u3491:
 11991   0027E6  EF0A  F014         	goto	l4026
 11992   0027EA                     u3490:
 11993   0027EA  2831               	incf	___fldiv@aexp^0,w,c
 11994   0027EC  A4D8               	btfss	status,2,c
 11995   0027EE  EFFB  F013         	goto	u3501
 11996   0027F2  EFFD  F013         	goto	u3500
 11997   0027F6                     u3501:
 11998   0027F6  EF05  F014         	goto	l4022
 11999   0027FA                     u3500:
 12000   0027FA  0E00               	movlw	0
 12001   0027FC  6E1D               	movwf	___fldiv@a^0,c
 12002   0027FE  0E00               	movlw	0
 12003   002800  6E1E               	movwf	(___fldiv@a+1)^0,c
 12004   002802  0E00               	movlw	0
 12005   002804  6E1F               	movwf	(___fldiv@a+2)^0,c
 12006   002806  0E00               	movlw	0
 12007   002808  6E20               	movwf	(___fldiv@a+3)^0,c
 12008   00280A                     l4022:
 12009   00280A  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 12010   00280C  0E00               	movlw	0
 12011   00280E  6E20               	movwf	(___fldiv@a+3)^0,c
 12012   002810  EF12  F014         	goto	l4028
 12013   002814                     l4026:
 12014   002814  0E00               	movlw	0
 12015   002816  6E1D               	movwf	___fldiv@a^0,c
 12016   002818  0E00               	movlw	0
 12017   00281A  6E1E               	movwf	(___fldiv@a+1)^0,c
 12018   00281C  0E00               	movlw	0
 12019   00281E  6E1F               	movwf	(___fldiv@a+2)^0,c
 12020   002820  0E00               	movlw	0
 12021   002822  6E20               	movwf	(___fldiv@a+3)^0,c
 12022   002824                     l4028:
 12023   002824  501D               	movf	___fldiv@a^0,w,c
 12024   002826  101E               	iorwf	(___fldiv@a+1)^0,w,c
 12025   002828  101F               	iorwf	(___fldiv@a+2)^0,w,c
 12026   00282A  1020               	iorwf	(___fldiv@a+3)^0,w,c
 12027   00282C  A4D8               	btfss	status,2,c
 12028   00282E  EF1B  F014         	goto	u3511
 12029   002832  EF1D  F014         	goto	u3510
 12030   002836                     u3511:
 12031   002836  EF35  F014         	goto	l4040
 12032   00283A                     u3510:
 12033   00283A  0E00               	movlw	0
 12034   00283C  6E19               	movwf	___fldiv@b^0,c
 12035   00283E  0E00               	movlw	0
 12036   002840  6E1A               	movwf	(___fldiv@b+1)^0,c
 12037   002842  0E00               	movlw	0
 12038   002844  6E1B               	movwf	(___fldiv@b+2)^0,c
 12039   002846  0E00               	movlw	0
 12040   002848  6E1C               	movwf	(___fldiv@b+3)^0,c
 12041   00284A  0E80               	movlw	128
 12042   00284C  121B               	iorwf	(___fldiv@b+2)^0,f,c
 12043   00284E  0E7F               	movlw	127
 12044   002850  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12045   002852                     l4034:
 12046   002852  5029               	movf	___fldiv@sign^0,w,c
 12047   002854  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12048   002856  C019  F019         	movff	___fldiv@b,?___fldiv
 12049   00285A  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 12050   00285E  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 12051   002862  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 12052   002866  EF78  F015         	goto	l1300
 12053   00286A                     l4040:
 12054   00286A  5030               	movf	___fldiv@bexp^0,w,c
 12055   00286C  A4D8               	btfss	status,2,c
 12056   00286E  EF3B  F014         	goto	u3521
 12057   002872  EF3D  F014         	goto	u3520
 12058   002876                     u3521:
 12059   002876  EF47  F014         	goto	l4048
 12060   00287A                     u3520:
 12061   00287A  0E00               	movlw	0
 12062   00287C  6E19               	movwf	?___fldiv^0,c
 12063   00287E  0E00               	movlw	0
 12064   002880  6E1A               	movwf	(?___fldiv+1)^0,c
 12065   002882  0E00               	movlw	0
 12066   002884  6E1B               	movwf	(?___fldiv+2)^0,c
 12067   002886  0E00               	movlw	0
 12068   002888  6E1C               	movwf	(?___fldiv+3)^0,c
 12069   00288A  EF78  F015         	goto	l1300
 12070   00288E                     l4048:
 12071   00288E  5031               	movf	___fldiv@aexp^0,w,c
 12072   002890  C030  F021         	movff	___fldiv@bexp,??___fldiv
 12073   002894  6A22               	clrf	(??___fldiv+1)^0,c
 12074   002896  5E21               	subwf	??___fldiv^0,f,c
 12075   002898  0E00               	movlw	0
 12076   00289A  5A22               	subwfb	(??___fldiv+1)^0,f,c
 12077   00289C  0E7F               	movlw	127
 12078   00289E  2421               	addwf	??___fldiv^0,w,c
 12079   0028A0  6E2A               	movwf	___fldiv@new_exp^0,c
 12080   0028A2  0E00               	movlw	0
 12081   0028A4  2022               	addwfc	(??___fldiv+1)^0,w,c
 12082   0028A6  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12083   0028A8  C019  F025         	movff	___fldiv@b,___fldiv@rem
 12084   0028AC  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 12085   0028B0  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 12086   0028B4  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 12087   0028B8  0E00               	movlw	0
 12088   0028BA  6E19               	movwf	___fldiv@b^0,c
 12089   0028BC  0E00               	movlw	0
 12090   0028BE  6E1A               	movwf	(___fldiv@b+1)^0,c
 12091   0028C0  0E00               	movlw	0
 12092   0028C2  6E1B               	movwf	(___fldiv@b+2)^0,c
 12093   0028C4  0E00               	movlw	0
 12094   0028C6  6E1C               	movwf	(___fldiv@b+3)^0,c
 12095   0028C8  0E00               	movlw	0
 12096   0028CA  6E2C               	movwf	___fldiv@grs^0,c
 12097   0028CC  0E00               	movlw	0
 12098   0028CE  6E2D               	movwf	(___fldiv@grs+1)^0,c
 12099   0028D0  0E00               	movlw	0
 12100   0028D2  6E2E               	movwf	(___fldiv@grs+2)^0,c
 12101   0028D4  0E00               	movlw	0
 12102   0028D6  6E2F               	movwf	(___fldiv@grs+3)^0,c
 12103   0028D8  0E00               	movlw	0
 12104   0028DA  6E31               	movwf	___fldiv@aexp^0,c
 12105   0028DC  EFA8  F014         	goto	l1302
 12106   0028E0                     l4058:
 12107   0028E0  5031               	movf	___fldiv@aexp^0,w,c
 12108   0028E2  B4D8               	btfsc	status,2,c
 12109   0028E4  EF76  F014         	goto	u3531
 12110   0028E8  EF78  F014         	goto	u3530
 12111   0028EC                     u3531:
 12112   0028EC  EF8F  F014         	goto	l4066
 12113   0028F0                     u3530:
 12114   0028F0  90D8               	bcf	status,0,c
 12115   0028F2  3625               	rlcf	___fldiv@rem^0,f,c
 12116   0028F4  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 12117   0028F6  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 12118   0028F8  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 12119   0028FA  90D8               	bcf	status,0,c
 12120   0028FC  3619               	rlcf	___fldiv@b^0,f,c
 12121   0028FE  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12122   002900  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12123   002902  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12124   002904  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12125   002906  EF87  F014         	goto	u3541
 12126   00290A  EF89  F014         	goto	u3540
 12127   00290E                     u3541:
 12128   00290E  EF8A  F014         	goto	l1305
 12129   002912                     u3540:
 12130   002912  8019               	bsf	___fldiv@b^0,0,c
 12131   002914                     l1305:
 12132   002914  90D8               	bcf	status,0,c
 12133   002916  362C               	rlcf	___fldiv@grs^0,f,c
 12134   002918  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12135   00291A  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12136   00291C  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12137   00291E                     l4066:
 12138   00291E  501D               	movf	___fldiv@a^0,w,c
 12139   002920  5C25               	subwf	___fldiv@rem^0,w,c
 12140   002922  501E               	movf	(___fldiv@a+1)^0,w,c
 12141   002924  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 12142   002926  501F               	movf	(___fldiv@a+2)^0,w,c
 12143   002928  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 12144   00292A  5020               	movf	(___fldiv@a+3)^0,w,c
 12145   00292C  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 12146   00292E  A0D8               	btfss	status,0,c
 12147   002930  EF9C  F014         	goto	u3551
 12148   002934  EF9E  F014         	goto	u3550
 12149   002938                     u3551:
 12150   002938  EFA7  F014         	goto	l4072
 12151   00293C                     u3550:
 12152   00293C  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 12153   00293E  501D               	movf	___fldiv@a^0,w,c
 12154   002940  5E25               	subwf	___fldiv@rem^0,f,c
 12155   002942  501E               	movf	(___fldiv@a+1)^0,w,c
 12156   002944  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 12157   002946  501F               	movf	(___fldiv@a+2)^0,w,c
 12158   002948  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 12159   00294A  5020               	movf	(___fldiv@a+3)^0,w,c
 12160   00294C  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 12161   00294E                     l4072:
 12162   00294E  2A31               	incf	___fldiv@aexp^0,f,c
 12163   002950                     l1302:
 12164   002950  0E19               	movlw	25
 12165   002952  6431               	cpfsgt	___fldiv@aexp^0,c
 12166   002954  EFAE  F014         	goto	u3561
 12167   002958  EFB0  F014         	goto	u3560
 12168   00295C                     u3561:
 12169   00295C  EF70  F014         	goto	l4058
 12170   002960                     u3560:
 12171   002960  5025               	movf	___fldiv@rem^0,w,c
 12172   002962  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 12173   002964  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 12174   002966  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 12175   002968  B4D8               	btfsc	status,2,c
 12176   00296A  EFB9  F014         	goto	u3571
 12177   00296E  EFBB  F014         	goto	u3570
 12178   002972                     u3571:
 12179   002972  EFD3  F014         	goto	l4084
 12180   002976                     u3570:
 12181   002976  802C               	bsf	___fldiv@grs^0,0,c
 12182   002978  EFD3  F014         	goto	l4084
 12183   00297C                     l4078:
 12184   00297C  90D8               	bcf	status,0,c
 12185   00297E  3619               	rlcf	___fldiv@b^0,f,c
 12186   002980  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12187   002982  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12188   002984  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12189   002986  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12190   002988  EFC8  F014         	goto	u3581
 12191   00298C  EFCA  F014         	goto	u3580
 12192   002990                     u3581:
 12193   002990  EFCB  F014         	goto	l1311
 12194   002994                     u3580:
 12195   002994  8019               	bsf	___fldiv@b^0,0,c
 12196   002996                     l1311:
 12197   002996  90D8               	bcf	status,0,c
 12198   002998  362C               	rlcf	___fldiv@grs^0,f,c
 12199   00299A  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12200   00299C  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12201   00299E  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12202   0029A0  062A               	decf	___fldiv@new_exp^0,f,c
 12203   0029A2  A0D8               	btfss	status,0,c
 12204   0029A4  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 12205   0029A6                     l4084:
 12206   0029A6  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 12207   0029A8  EFD8  F014         	goto	u3591
 12208   0029AC  EFDA  F014         	goto	u3590
 12209   0029B0                     u3591:
 12210   0029B0  EFBE  F014         	goto	l4078
 12211   0029B4                     u3590:
 12212   0029B4  0E00               	movlw	0
 12213   0029B6  6E31               	movwf	___fldiv@aexp^0,c
 12214   0029B8  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12215   0029BA  EFE1  F014         	goto	u3601
 12216   0029BE  EFE3  F014         	goto	u3600
 12217   0029C2                     u3601:
 12218   0029C2  EF07  F015         	goto	l1313
 12219   0029C6                     u3600:
 12220   0029C6  0EFF               	movlw	255
 12221   0029C8  142C               	andwf	___fldiv@grs^0,w,c
 12222   0029CA  6E21               	movwf	??___fldiv^0,c
 12223   0029CC  0EFF               	movlw	255
 12224   0029CE  142D               	andwf	(___fldiv@grs+1)^0,w,c
 12225   0029D0  6E22               	movwf	(??___fldiv+1)^0,c
 12226   0029D2  0EFF               	movlw	255
 12227   0029D4  142E               	andwf	(___fldiv@grs+2)^0,w,c
 12228   0029D6  6E23               	movwf	(??___fldiv+2)^0,c
 12229   0029D8  0E7F               	movlw	127
 12230   0029DA  142F               	andwf	(___fldiv@grs+3)^0,w,c
 12231   0029DC  6E24               	movwf	(??___fldiv+3)^0,c
 12232   0029DE  5021               	movf	??___fldiv^0,w,c
 12233   0029E0  1022               	iorwf	(??___fldiv+1)^0,w,c
 12234   0029E2  1023               	iorwf	(??___fldiv+2)^0,w,c
 12235   0029E4  1024               	iorwf	(??___fldiv+3)^0,w,c
 12236   0029E6  B4D8               	btfsc	status,2,c
 12237   0029E8  EFF8  F014         	goto	u3611
 12238   0029EC  EFFA  F014         	goto	u3610
 12239   0029F0                     u3611:
 12240   0029F0  EFFE  F014         	goto	l1314
 12241   0029F4                     u3610:
 12242   0029F4                     l4092:
 12243   0029F4  0E01               	movlw	1
 12244   0029F6  6E31               	movwf	___fldiv@aexp^0,c
 12245   0029F8  EF07  F015         	goto	l1313
 12246   0029FC                     l1314:
 12247   0029FC  A019               	btfss	___fldiv@b^0,0,c
 12248   0029FE  EF03  F015         	goto	u3621
 12249   002A02  EF05  F015         	goto	u3620
 12250   002A06                     u3621:
 12251   002A06  EF07  F015         	goto	l1313
 12252   002A0A                     u3620:
 12253   002A0A  EFFA  F014         	goto	l4092
 12254   002A0E                     l1313:
 12255   002A0E  5031               	movf	___fldiv@aexp^0,w,c
 12256   002A10  B4D8               	btfsc	status,2,c
 12257   002A12  EF0D  F015         	goto	u3631
 12258   002A16  EF0F  F015         	goto	u3630
 12259   002A1A                     u3631:
 12260   002A1A  EF33  F015         	goto	l4104
 12261   002A1E                     u3630:
 12262   002A1E  0E01               	movlw	1
 12263   002A20  2619               	addwf	___fldiv@b^0,f,c
 12264   002A22  0E00               	movlw	0
 12265   002A24  221A               	addwfc	(___fldiv@b+1)^0,f,c
 12266   002A26  221B               	addwfc	(___fldiv@b+2)^0,f,c
 12267   002A28  221C               	addwfc	(___fldiv@b+3)^0,f,c
 12268   002A2A  A01C               	btfss	(___fldiv@b+3)^0,0,c
 12269   002A2C  EF1A  F015         	goto	u3641
 12270   002A30  EF1C  F015         	goto	u3640
 12271   002A34                     u3641:
 12272   002A34  EF33  F015         	goto	l4104
 12273   002A38                     u3640:
 12274   002A38  C019  F021         	movff	___fldiv@b,??___fldiv
 12275   002A3C  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 12276   002A40  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 12277   002A44  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 12278   002A48  3424               	rlcf	(??___fldiv+3)^0,w,c
 12279   002A4A  3224               	rrcf	(??___fldiv+3)^0,f,c
 12280   002A4C  3223               	rrcf	(??___fldiv+2)^0,f,c
 12281   002A4E  3222               	rrcf	(??___fldiv+1)^0,f,c
 12282   002A50  3221               	rrcf	??___fldiv^0,f,c
 12283   002A52  C021  F019         	movff	??___fldiv,___fldiv@b
 12284   002A56  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 12285   002A5A  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 12286   002A5E  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 12287   002A62  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 12288   002A64  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 12289   002A66                     l4104:
 12290   002A66  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12291   002A68  EF3E  F015         	goto	u3651
 12292   002A6C  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12293   002A6E  E108               	bnz	u3650
 12294   002A70  282A               	incf	___fldiv@new_exp^0,w,c
 12295   002A72  A0D8               	btfss	status,0,c
 12296   002A74  EF3E  F015         	goto	u3651
 12297   002A78  EF40  F015         	goto	u3650
 12298   002A7C                     u3651:
 12299   002A7C  EF4B  F015         	goto	l4108
 12300   002A80                     u3650:
 12301   002A80  0E00               	movlw	0
 12302   002A82  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12303   002A84  682A               	setf	___fldiv@new_exp^0,c
 12304   002A86  0E00               	movlw	0
 12305   002A88  6E19               	movwf	___fldiv@b^0,c
 12306   002A8A  0E00               	movlw	0
 12307   002A8C  6E1A               	movwf	(___fldiv@b+1)^0,c
 12308   002A8E  0E00               	movlw	0
 12309   002A90  6E1B               	movwf	(___fldiv@b+2)^0,c
 12310   002A92  0E00               	movlw	0
 12311   002A94  6E1C               	movwf	(___fldiv@b+3)^0,c
 12312   002A96                     l4108:
 12313   002A96  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12314   002A98  EF58  F015         	goto	u3660
 12315   002A9C  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12316   002A9E  E106               	bnz	u3661
 12317   002AA0  042A               	decf	___fldiv@new_exp^0,w,c
 12318   002AA2  B0D8               	btfsc	status,0,c
 12319   002AA4  EF56  F015         	goto	u3661
 12320   002AA8  EF58  F015         	goto	u3660
 12321   002AAC                     u3661:
 12322   002AAC  EF66  F015         	goto	l4112
 12323   002AB0                     u3660:
 12324   002AB0  0E00               	movlw	0
 12325   002AB2  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12326   002AB4  0E00               	movlw	0
 12327   002AB6  6E2A               	movwf	___fldiv@new_exp^0,c
 12328   002AB8  0E00               	movlw	0
 12329   002ABA  6E19               	movwf	___fldiv@b^0,c
 12330   002ABC  0E00               	movlw	0
 12331   002ABE  6E1A               	movwf	(___fldiv@b+1)^0,c
 12332   002AC0  0E00               	movlw	0
 12333   002AC2  6E1B               	movwf	(___fldiv@b+2)^0,c
 12334   002AC4  0E00               	movlw	0
 12335   002AC6  6E1C               	movwf	(___fldiv@b+3)^0,c
 12336   002AC8  0E00               	movlw	0
 12337   002ACA  6E29               	movwf	___fldiv@sign^0,c
 12338   002ACC                     l4112:
 12339   002ACC  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 12340   002AD0  A030               	btfss	___fldiv@bexp^0,0,c
 12341   002AD2  EF6D  F015         	goto	u3671
 12342   002AD6  EF6F  F015         	goto	u3670
 12343   002ADA                     u3671:
 12344   002ADA  EF72  F015         	goto	l4118
 12345   002ADE                     u3670:
 12346   002ADE  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12347   002AE0  EF73  F015         	goto	l4120
 12348   002AE4                     l4118:
 12349   002AE4  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12350   002AE6                     l4120:
 12351   002AE6  90D8               	bcf	status,0,c
 12352   002AE8  3030               	rrcf	___fldiv@bexp^0,w,c
 12353   002AEA  6E1C               	movwf	(___fldiv@b+3)^0,c
 12354   002AEC  EF29  F014         	goto	l4034
 12355   002AF0                     l1300:
 12356   002AF0  0012               	return		;funcret
 12357   002AF2                     __end_of___fldiv:
 12358                           	callstack 0
 12359                           
 12360 ;; *************** function _HighISR *****************
 12361 ;; Defined at:
 12362 ;;		line 59 in file "interrupts.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;		None
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;		None
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  1    wreg      void 
 12369 ;; Registers used:
 12370 ;;		None
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12380 ;;Total ram usage:        0 bytes
 12381 ;; Hardware stack levels used: 1
 12382 ;; This function calls:
 12383 ;;		Nothing
 12384 ;; This function is called by:
 12385 ;;		Interrupt level 2
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	intcode
 12390   000008                     __pintcode:
 12391                           	callstack 0
 12392   000008                     _HighISR:
 12393                           	callstack 22
 12394                           
 12395                           ;incstack = 0
 12396   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12397   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12398   00000C  0011               	retfie		f
 12399   00000E                     __end_of_HighISR:
 12400                           	callstack 0
 12401                           
 12402                           	psect	rparam
 12403   000000                     
 12404                           	psect	temp
 12405   00005F                     btemp:
 12406                           	callstack 0
 12407   00005F                     	ds	1
 12408   000000                     int$flags	set	btemp
 12409   000000                     wtemp8	set	btemp+1
 12410   000000                     ttemp5	set	btemp+1
 12411   000000                     ttemp6	set	btemp+4
 12412   000000                     ttemp7	set	btemp+8
 12413                           
 12414                           	psect	idloc
 12415                           
 12416                           ;Config register IDLOC0 @ 0x200000
 12417                           ;	unspecified, using default values
 12418   200000                     	org	2097152
 12419   200000  0FFF               	dw	4095
 12420                           
 12421                           ;Config register IDLOC1 @ 0x200002
 12422                           ;	unspecified, using default values
 12423   200002                     	org	2097154
 12424   200002  0FFF               	dw	4095
 12425                           
 12426                           ;Config register IDLOC2 @ 0x200004
 12427                           ;	unspecified, using default values
 12428   200004                     	org	2097156
 12429   200004  0FFF               	dw	4095
 12430                           
 12431                           ;Config register IDLOC3 @ 0x200006
 12432                           ;	unspecified, using default values
 12433   200006                     	org	2097158
 12434   200006  0FFF               	dw	4095
 12435                           
 12436                           ;Config register IDLOC4 @ 0x200008
 12437                           ;	unspecified, using default values
 12438   200008                     	org	2097160
 12439   200008  0FFF               	dw	4095
 12440                           
 12441                           ;Config register IDLOC5 @ 0x20000A
 12442                           ;	unspecified, using default values
 12443   20000A                     	org	2097162
 12444   20000A  0FFF               	dw	4095
 12445                           
 12446                           ;Config register IDLOC6 @ 0x20000C
 12447                           ;	unspecified, using default values
 12448   20000C                     	org	2097164
 12449   20000C  0FFF               	dw	4095
 12450                           
 12451                           ;Config register IDLOC7 @ 0x20000E
 12452                           ;	unspecified, using default values
 12453   20000E                     	org	2097166
 12454   20000E  0FFF               	dw	4095
 12455                           
 12456                           	psect	config
 12457                           
 12458                           ;Config register CONFIG1L @ 0x300000
 12459                           ;	External Oscillator mode Selection bits
 12460                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12461                           ;	Power-up default value for COSC bits
 12462                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12463   300000                     	org	3145728
 12464   300000  AA                 	db	170
 12465                           
 12466                           ;Config register CONFIG1H @ 0x300001
 12467                           ;	unspecified, using default values
 12468                           ;	Clock Out Enable bit
 12469                           ;	CLKOUTEN = 0x1, unprogrammed default
 12470                           ;	Clock Switch Enable bit
 12471                           ;	CSWEN = 0x1, unprogrammed default
 12472                           ;	Fail-Safe Clock Monitor Enable bit
 12473                           ;	FCMEN = 0x1, unprogrammed default
 12474   300001                     	org	3145729
 12475   300001  FF                 	db	255
 12476                           
 12477                           ;Config register CONFIG2L @ 0x300002
 12478                           ;	unspecified, using default values
 12479                           ;	Master Clear Enable bit
 12480                           ;	MCLRE = 0x1, unprogrammed default
 12481                           ;	Power-up Timer Enable bit
 12482                           ;	PWRTE = 0x1, unprogrammed default
 12483                           ;	Low-power BOR enable bit
 12484                           ;	LPBOREN = 0x1, unprogrammed default
 12485                           ;	Brown-out Reset Enable bits
 12486                           ;	BOREN = 0x3, unprogrammed default
 12487   300002                     	org	3145730
 12488   300002  FF                 	db	255
 12489                           
 12490                           ;Config register CONFIG2H @ 0x300003
 12491                           ;	unspecified, using default values
 12492                           ;	Brown Out Reset Voltage selection bits
 12493                           ;	BORV = 0x3, unprogrammed default
 12494                           ;	ZCD Disable bit
 12495                           ;	ZCD = 0x1, unprogrammed default
 12496                           ;	PPSLOCK bit One-Way Set Enable bit
 12497                           ;	PPS1WAY = 0x1, unprogrammed default
 12498                           ;	Stack Full/Underflow Reset Enable bit
 12499                           ;	STVREN = 0x1, unprogrammed default
 12500                           ;	Debugger Enable bit
 12501                           ;	DEBUG = 0x1, unprogrammed default
 12502                           ;	Extended Instruction Set Enable bit
 12503                           ;	XINST = 0x1, unprogrammed default
 12504   300003                     	org	3145731
 12505   300003  FF                 	db	255
 12506                           
 12507                           ;Config register CONFIG3L @ 0x300004
 12508                           ;	WDT Period Select bits
 12509                           ;	WDTCPS = 0x1F, unprogrammed default
 12510                           ;	WDT operating mode
 12511                           ;	WDTE = OFF, WDT Disabled
 12512   300004                     	org	3145732
 12513   300004  9F                 	db	159
 12514                           
 12515                           ;Config register CONFIG3H @ 0x300005
 12516                           ;	unspecified, using default values
 12517                           ;	WDT Window Select bits
 12518                           ;	WDTCWS = 0x7, unprogrammed default
 12519                           ;	WDT input clock selector
 12520                           ;	WDTCCS = 0x7, unprogrammed default
 12521   300005                     	org	3145733
 12522   300005  FF                 	db	255
 12523                           
 12524                           ;Config register CONFIG4L @ 0x300006
 12525                           ;	unspecified, using default values
 12526                           ;	Write Protection Block 0
 12527                           ;	WRT0 = 0x1, unprogrammed default
 12528                           ;	Write Protection Block 1
 12529                           ;	WRT1 = 0x1, unprogrammed default
 12530                           ;	Write Protection Block 2
 12531                           ;	WRT2 = 0x1, unprogrammed default
 12532                           ;	Write Protection Block 3
 12533                           ;	WRT3 = 0x1, unprogrammed default
 12534                           ;	Write Protection Block 3
 12535                           ;	WRT4 = 0x1, unprogrammed default
 12536                           ;	Write Protection Block 3
 12537                           ;	WRT5 = 0x1, unprogrammed default
 12538                           ;	Write Protection Block 3
 12539                           ;	WRT6 = 0x1, unprogrammed default
 12540                           ;	Write Protection Block 3
 12541                           ;	WRT7 = 0x1, unprogrammed default
 12542   300006                     	org	3145734
 12543   300006  FF                 	db	255
 12544                           
 12545                           ;Config register CONFIG4H @ 0x300007
 12546                           ;	unspecified, using default values
 12547                           ;	Configuration Register Write Protection bit
 12548                           ;	WRTC = 0x1, unprogrammed default
 12549                           ;	Boot Block Write Protection bit
 12550                           ;	WRTB = 0x1, unprogrammed default
 12551                           ;	Data EEPROM Write Protection bit
 12552                           ;	WRTD = 0x1, unprogrammed default
 12553                           ;	Scanner Enable bit
 12554                           ;	SCANE = 0x1, unprogrammed default
 12555                           ;	Low Voltage Programming Enable bit
 12556                           ;	LVP = 0x1, unprogrammed default
 12557   300007                     	org	3145735
 12558   300007  FF                 	db	255
 12559                           
 12560                           ;Config register CONFIG5L @ 0x300008
 12561                           ;	unspecified, using default values
 12562                           ;	UserNVM Program Memory Code Protection bit
 12563                           ;	CP = 0x1, unprogrammed default
 12564                           ;	DataNVM Memory Code Protection bit
 12565                           ;	CPD = 0x1, unprogrammed default
 12566   300008                     	org	3145736
 12567   300008  FF                 	db	255
 12568                           
 12569                           ;Config register CONFIG5H @ 0x300009
 12570                           ;	unspecified, using default values
 12571   300009                     	org	3145737
 12572   300009  FF                 	db	255
 12573                           
 12574                           ;Config register CONFIG6L @ 0x30000A
 12575                           ;	unspecified, using default values
 12576                           ;	Table Read Protection Block 0
 12577                           ;	EBTR0 = 0x1, unprogrammed default
 12578                           ;	Table Read Protection Block 1
 12579                           ;	EBTR1 = 0x1, unprogrammed default
 12580                           ;	Table Read Protection Block 2
 12581                           ;	EBTR2 = 0x1, unprogrammed default
 12582                           ;	Table Read Protection Block 3
 12583                           ;	EBTR3 = 0x1, unprogrammed default
 12584                           ;	Table Read Protection Block 4
 12585                           ;	EBTR4 = 0x1, unprogrammed default
 12586                           ;	Table Read Protection Block 5
 12587                           ;	EBTR5 = 0x1, unprogrammed default
 12588                           ;	Table Read Protection Block 6
 12589                           ;	EBTR6 = 0x1, unprogrammed default
 12590                           ;	Table Read Protection Block 7
 12591                           ;	EBTR7 = 0x1, unprogrammed default
 12592   30000A                     	org	3145738
 12593   30000A  FF                 	db	255
 12594                           
 12595                           ;Config register CONFIG6H @ 0x30000B
 12596                           ;	unspecified, using default values
 12597                           ;	Boot Block Table Read Protection bit
 12598                           ;	EBTRB = 0x1, unprogrammed default
 12599   30000B                     	org	3145739
 12600   30000B  FF                 	db	255
 12601                           tosu	equ	0xFFF
 12602                           tosh	equ	0xFFE
 12603                           tosl	equ	0xFFD
 12604                           stkptr	equ	0xFFC
 12605                           pclatu	equ	0xFFB
 12606                           pclath	equ	0xFFA
 12607                           pcl	equ	0xFF9
 12608                           tblptru	equ	0xFF8
 12609                           tblptrh	equ	0xFF7
 12610                           tblptrl	equ	0xFF6
 12611                           tablat	equ	0xFF5
 12612                           prodh	equ	0xFF4
 12613                           prodl	equ	0xFF3
 12614                           indf0	equ	0xFEF
 12615                           postinc0	equ	0xFEE
 12616                           postdec0	equ	0xFED
 12617                           preinc0	equ	0xFEC
 12618                           plusw0	equ	0xFEB
 12619                           fsr0h	equ	0xFEA
 12620                           fsr0l	equ	0xFE9
 12621                           wreg	equ	0xFE8
 12622                           indf1	equ	0xFE7
 12623                           postinc1	equ	0xFE6
 12624                           postdec1	equ	0xFE5
 12625                           preinc1	equ	0xFE4
 12626                           plusw1	equ	0xFE3
 12627                           fsr1h	equ	0xFE2
 12628                           fsr1l	equ	0xFE1
 12629                           bsr	equ	0xFE0
 12630                           indf2	equ	0xFDF
 12631                           postinc2	equ	0xFDE
 12632                           postdec2	equ	0xFDD
 12633                           preinc2	equ	0xFDC
 12634                           plusw2	equ	0xFDB
 12635                           fsr2h	equ	0xFDA
 12636                           fsr2l	equ	0xFD9
 12637                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        9
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2695$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2642$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2642$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  310234
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    8441
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  115164
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16403
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7960
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7658
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20955
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2592
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      60        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 14:51:13 2023

               _color_read_Red 48E2                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4892                   ___fldiv@sign 0029                _color_read_Blue 4982  
                           l51 48E0                             l60 49D0                             l45 47EC  
                           l54 4930                             l63 453C                             l48 4E1A  
                           l57 4980                             l66 2E1E                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 32BC  
             _color_read_Green 4932                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 4E58                            l140 4D86                            l212 4E70  
                          l143 4D88                            l152 4E86                            l161 4B86  
                          l209 4E5C                            l146 4DAE                            l218 4D5C  
                          l410 19E8                            l155 4E90                            l149 4E9A  
                          l413 19F6                            l158 4E7C                            l272 4EA8  
                          l600 483E                            l521 430E                            l418 1E10  
                          l515 393A                            l603 4890                            l443 1E6A  
                          l435 1E0C                            l612 4290                            l508 420E  
                          l621 3442                            l606 4748                            l622 32DA  
                          l615 4C04                            l631 3428                            l712 4CE0  
                          l632 3478                            l624 3330                            l545 4186  
                          l561 40E8                            l529 404A                            l537 3FAC  
                          l609 479A                            l553 3E64                            l633 3492  
                          l706 4E3A                            l570 4A6C                            l618 4C42  
                          l626 33D8                            l715 4CF6                            l564 4D12  
                          l573 4ABA                            l709 4DD4                            l718 4DFA  
                          l582 4596                            l567 4D2C                            l591 4C80  
                          l576 464A                            l832 37CE                            l585 46A4  
                          l594 4CBE                            l579 45F0                            l683 32BA  
                          l597 44DE                            l677 32B0                            l845 3A9E  
                          l983 3CAA                            l977 3F0E                            l988 3CF0  
                          _abs 4B88                            _pad 438C                            _rel 01B4  
                          wreg 000FE8                   ___flmul@aexp 0043                   ___flmul@bexp 0044  
                 ___flmul@sign 003E                   ___flmul@temp 0049                   ___flmul@prod 0045  
              Colour_decider@i 007A                           ?_abs 0013                           l1300 2AF0  
                         l1302 2950                           l1311 2996                           l1216 4478  
                         l1313 2A0E                           l1305 2914                           l1209 4470  
                         l1314 29FC                           l1332 23F2                           l1341 2660  
                         l1342 264E                           l1246 205C                           l1422 4404  
                         l1430 2EFA                           l1263 2176                           l1255 232C  
                         l1247 204A                           l4000 2794                           l1336 2756  
                         l1272 2246                           l1248 2010                           l1273 2234  
                         l1441 309A                           l4010 27C4                           l4002 27A4  
                         l1418 43AE                           l1339 25E8                           l1427 2EAC  
                         l4100 2A38                           l4020 27FA                           l4012 27CA  
                         l4004 27A6                           l1380 3582                           l1349 2718  
                         l1373 34EA                           l1461 4BC6                           l1429 2EB4  
                         l4110 2AB0                           l4102 2A62                           l4030 283A  
                         l4022 280A                           l4014 27D8                           l4006 27AE  
                         l1454 4A1E                           l4120 2AE6                           l4112 2ACC  
                         l4104 2A66                           l4032 284A                           l4040 286A  
                         l4024 280C                           l4016 27DA                           l4008 27BE  
                         l4200 2526                           l1288 4B00                           l1376 3646  
                         l3400 36B0                           l3320 3CF2                           l1448 3BEC  
                         l5000 1C96                           l1473 3DBA                           l1481 4B44  
                         l4114 2AD0                           l4106 2A80                           l4050 28A8  
                         l4042 287A                           l4034 2852                           l4018 27EA  
                         l4026 2814                           l4210 25CE                           l4202 2542  
                         l4130 233A                           l3410 3704                           l3402 36BC  
                         l1458 4BBE                           l3330 3D74                           l3322 3D04  
                         l5010 1CDC                           l5002 1C9A                           l1387 35DE  
                         l4116 2ADE                           l4108 2A96                           l4060 28F0  
                         l4052 28B8                           l4044 287A                           l4036 2856  
                         l4028 2824                           l4220 260A                           l4212 25D8  
                         l4204 256C                           l4140 237A                           l4132 2348  
                         l3340 4406                           l3500 416E                           l3420 3778  
                         l3412 3716                           l3404 36DA                           l1484 4EA6  
                         l3324 3D16                           l1396 46F6                           l5020 1D22  
                         l5012 1CE0                           l5004 1CB0                           l4118 2AE4  
                         l4070 293E                           l4062 2904                           l4054 28C8  
                         l4230 267C                           l4222 2618                           l4214 25E6  
                         l4206 25A2                           l4150 23AA                           l4142 2380  
                         l4134 234A                           l4310 3510                           l4302 3496  
                         l3350 443E                           l3342 440E                           l3334 4DD6  
                         l3510 42C6                           l3502 4292                           l3414 3744  
                         l3406 36E2                           l3422 377E                           l3430 393C  
                         l3326 3D20                           l5030 1D68                           l5022 1D26  
                         l5006 1CC4                           l5014 1CF6                           l4080 2986  
                         l4072 294E                           l4064 2912                           l4056 28D8  
                         l4048 288E                           l4240 26E6                           l4232 268A  
                         l4224 2646                           l4216 25F8                           l4208 25B0  
                         l4160 23E2                           l4152 23AC                           l4144 2390  
                         l4136 235A                           l4128 232E                           l4320 356A  
                         l4304 34A6                           l3360 446A                           l3352 4444  
                         l3344 4420                           l3336 4DF2                           l3504 4296  
                         l3512 42DE                           l3520 3FEA                           l4400 2CBA  
                         l3424 378E                           l3416 3764                           l3408 36F6  
                         l3440 3980                           l3432 3940                           l3328 3D3E  
                         l3600 3002                           l5040 1DC0                           l5032 1D6C  
                         l5016 1D0A                           l5024 1D3C                           l5008 1CD8  
                         l4090 29C6                           l4082 2994                           l4074 2960  
                         l4066 291E                           l4058 28E0                           l4250 273C  
                         l4242 2700                           l4234 26B4                           l4218 2606  
                         l4170 2432                           l4162 2402                           l4154 23BC  
                         l4146 2396                           l4138 236A                           l4330 35CE  
                         l4322 356C                           l4314 3524                           l4306 34B4  
                         l4410 0E5C                           l3354 445A                           l3346 4428  
                         l3370 37D0                           l3514 42F6                           l3506 42AE  
                         l3522 3FF6                           l3530 3F10                           l4402 2D52  
                         l3426 37AE                           l3418 3766                           l3450 39E8  
                         l3442 39A0                           l3434 394E                           l3362 4B02  
                         l3610 306A                           l3602 301C                           l5042 1DD4  
                         l5026 1D50                           l5034 1D82                           l5018 1D1E  
                         l5050 1E56                           l4092 29F4                           l4076 2976  
                         l4084 29A6                           l4068 293C                           l4244 271C  
                         l4252 2742                           l4228 2670                           l4236 26B8  
                         l4180 2482                           l4172 243C                           l4164 2412  
                         l4156 23CC                           l4148 239C                           l3700 1EDA  
                         l4260 4ACC                           l4340 3626                           l4332 35EC  
                         l4324 3578                           l4316 352C                           l4308 34FA  
                         l4412 0E8C                           l3356 4462                           l3348 4430  
                         l3380 389A                           l3372 37EC                           l3508 42BA  
                         l3524 4002                           l3516 3FAE                           l3532 3F34  
                         l3540 3F7C                           l3620 4E74                           l4404 2D86  
                         l3460 3A5E                           l3452 3A16                           l3444 39BE  
                         l3436 396E                           l3364 4B0E                           l3612 307A  
                         l3604 303A                           l5044 1DFE                           l5036 1D96  
                         l5028 1D64                           l4086 29B4                           l4078 297C  
                         l4270 3ED2                           l4254 2746                           l4246 272C  
                         l4238 26D2                           l4190 24C4                           l4182 248E  
                         l4174 2452                           l4158 23DC                           l3710 1F04  
                         l3702 1EEC                           l4342 3634                           l4334 35EE  
                         l4326 35B4                           l4318 3538                           l4510 15C4  
                         l4502 1554                           l4430 0FDE                           l4422 0EFE  
                         l4414 0EC0                           l4406 0E26                           l3358 4464  
                         l3382 38B6                           l3374 3840                           l3550 4094  
                         l3518 3FD2                           l3526 401A                           l3542 3F94  
                         l3534 3F4C                           l3622 4E78                           l3630 4E82  
                         l3390 365A                           l3462 3A7E                           l3454 3A36  
                         l3446 39C6                           l3438 3972                           l3366 4B20  
                         l3470 43A6                           l3606 3054                           l4350 49DE  
                         l5046 1E18                           l5038 1DAE                           l4096 2A1E  
                         l4088 29B8                           l4272 3EE2                           l4264 3E66  
                         l4280 3BEE                           l4248 273A                           l4192 24D4  
                         l4184 249C                           l4176 245E                           l4168 2426  
                         l3800 20DA                           l3712 1F14                           l3720 1F3E  
                         l3704 1EEE                           l4344 3636                           l4336 35F2  
                         l4328 35C0                           l4520 1644                           l4432 1010  
                         l4424 0F50                           l4416 0EF4                           l4408 0E50  
                         l3384 38FA                           l3376 3854                           l3552 40A0  
                         l3544 404C                           l3560 4CFC                           l3528 4032  
                         l3536 3F58                           l3616 4E92                           l3624 4E88  
                         l4360 47A0                           l4600 4E56                           l3640 4B82  
                         l3632 4B48                           l3392 367A                           l3456 3A48  
                         l3448 39DA                           l3480 4B88                           l3368 4B24  
                         l3472 43BA                           l3608 3064                           l4352 49FA  
                         l5048 1E4A                           l4098 2A2A                           l4274 3F06  
                         l4266 3E94                           l4290 3C78                           l4282 3C1C  
                         l4194 24EE                           l4186 24A8                           l4178 2476  
                         l3810 2146                           l3802 20E4                           l3730 1F76  
                         l3722 1F4E                           l3714 1F24                           l3706 1EF4  
                         l4258 4ABC                           l4338 3616                           l4530 165C  
                         l4506 1560                           l4450 1190                           l4442 1094  
                         l4434 1016                           l4426 0F82                           l3378 3858  
                         l3490 410E                           l3546 4070                           l3554 40B8  
                         l3562 4D0C                           l3538 3F64                           l3618 4E96  
                         l3626 4E8C                           l4370 47D8                           l4362 47AA  
                         l3650 4CDC                           l3642 4B84                           l3634 4B4C  
                         l4602 4D2E                           l3394 367E                           l3386 3648  
                         l3458 3A4E                           l3482 4BA2                           l3474 43CE  
                         l3466 438C                           l3570 2E64                           l4354 4A16  
                         l4276 3F0C                           l4268 3EA4                           l4292 3C8A  
                         l4284 3C2C                           l4196 24FE                           l4188 24B8  
                         l3812 2156                           l3804 20EA                           l3740 1F8A  
                         l3732 1F7A                           l3724 1F60                           l3716 1F34  
                         l3708 1F02                           l4532 168E                           l4508 1592  
                         l4452 11A2                           l4460 134E                           l4444 10A8  
                         l4436 1032                           l4428 0F8A                           l3492 4126  
                         l3556 40D0                           l3548 4088                           l3660 4A6E  
                         l3652 4A20                           l3484 4D88                           l4380 47E2  
                         l4372 47DA                           l4364 47BA                           l3636 4B54  
                         l3628 4E7E                           l4604 4D32                           l3396 368C  
                         l3388 364C                           l3476 43D2                           l3468 439A  
                         l3580 2ED2                           l3572 2E84                           l3564 2E20  
                         l4348 49D2                           l4700 347A                           l4294 3C98  
                         l4286 3C5A                           l4198 251A                           l3830 21D8  
                         l3822 21B0                           l3806 2110                           l3814 2166  
                         l3750 1F9E                           l3742 1F8E                           l3734 1F7E  
                         l3726 1F6E                           l3718 1F36                           l4550 1766  
                         l4534 16C0                           l4526 1650                           l4518 1606  
                         l4462 1380                           l4470 13BE                           l4454 121E  
                         l4446 1148                           l4438 1088                           l3494 4132  
                         l4710 4660                           l3670 4606                           l3558 4CF8  
                         l3662 4A82                           l4622 4E1C                           l3654 4A34  
                         l3486 4D98                           l4382 47E4                           l4374 47DC  
                         l4366 47C4                           l4358 479C                           l4702 4DB0  
                         l3646 4CC0                           l4630 4188                           l3638 4B5C  
                         l4390 44E0                           l4606 4D40                           l3398 36AC  
                         l3478 43F0                           l3590 2F0A                           l3582 2EE2  
                         l3574 2EA0                           l3566 2E40                           l3902 3BB2  
                         ?_pad 0011                           l4296 3CE8                           l4288 3C6A  
                         l3832 21E0                           l3824 21BA                           l3816 218C  
                         l3808 2144                           l3840 2204                           l3760 1FB2  
                         l3752 1FA2                           l3744 1F92                           l3736 1F82  
                         l3728 1F72                           l3680 1E6E                           l4552 1798  
                         l4560 17CE                           l4472 13F0                           l4480 142E  
                         l4464 13B2                           l4456 127A                           l4448 1158  
                         l3496 413E                           l3488 40EA                           l4712 4678  
                         l3672 461E                           l3664 4A8E                           l4624 4E24  
                         l3656 4A40                           l3920 4D72                           l3912 4D5E  
                         l4384 47E6                           l4376 47DE                           l4368 47CE  
                         l4392 2AF2                           l4704 4DB2                           l3648 4CCC  
                         l4640 41B6                           l4632 419A                           l4608 4D44  
                         l3592 2F10                           l3584 2EEE                           l3576 2EBC  
                         l3568 2E54                           l4720 46C8                           l4298 3CEE  
                         l3850 2256                           l3842 2208                           l3834 21E4  
                         l3826 21C8                           l3818 219C                           l3770 202A  
                         l3762 1FDC                           l3754 1FA6                           l3746 1F96  
                         l3738 1F86                           l3690 1EAA                           l3682 1E7A  
                         l4562 1800                           l4546 1702                           l4482 1460  
                         l4474 1422                           l4458 12F6                           l3498 4156  
                         l3666 4AA2                           l4730 4210                           l4626 4E2E  
                         l3658 4A54                           l3922 4D74                           l3914 4D68  
                         l4386 47E8                           l4378 47E0                           l4394 2BBE  
                         l4706 4DB8                           l3674 453E                           l4650 41F4  
                         l4642 41BA                           l4634 419C                           l3594 2F92  
                         l3586 2EF6                           l3578 2ECC                           l3906 3BC4  
                         l4722 46E4                           l4714 46A6                           l3860 22BC  
                         l3852 2262                           l3844 2216                           l3836 21F4  
                         l3828 21CA                           l3780 206A                           l3772 202E  
                         l3764 1FF8                           l3756 1FAA                           l3748 1F9A  
                         l3692 1EBA                           l3684 1E88                           l4564 1832  
                         l4548 1734                           l4484 1492                           l4708 464C  
                         l3668 45F2                           l4732 4224                           l4628 4E38  
                         l3916 4D6E                           l3924 4DFE                           l4388 47EA  
                         l4396 2BF2                           l3676 4552                           l4740 309C  
                         l4652 41F6                           l4644 41DE                           l4636 419E  
                         l3940 4978                           l3932 48E2                           l3596 2F98  
                         l3588 2F02                           l4716 46B8                           l4660 32BC  
                         l4900 198C                           l3870 2304                           l3862 22CC  
                         l3854 2270                           l3846 222C                           l3838 21F6  
                         l3790 20AC                           l3782 207A                           l3774 203C  
                         l3766 2008                           l3758 1FAE                           l3694 1EBC  
                         l3686 1E8A                           l4582 18EC                           l4566 186C  
                         l4574 18AA                           l4486 14CC                           l4494 150A  
                         l4734 423C                           l4726 47EE                           l3918 4D70  
                         l4398 2C86                           l3678 456A                           l4750 310C  
                         l4742 30A4                           l4654 4200                           l4646 41E8  
                         l4638 41A0                           l4590 4E3C                           l3934 4928  
                         l3926 4892                           l3950 4E5C                           l3598 2F9E  
                         l4718 46C0                           l4670 3384                           l4662 32BE  
                         l4910 19B6                           l4902 1994                           l4830 190E  
                         l3872 2306                           l3864 22EC                           l3856 22AA  
                         l3792 20BA                           l3776 203E                           l3768 201E  
                         l3688 1E9A                           l3696 1EC4                           l4496 1548  
                         l4728 4840                           l4736 4250                           l3960 4C82  
                         l4760 31A8                           l4752 3124                           l4656 4202  
                         l4648 41EA                           l4592 4E46                           l3944 4982  
                         l3928 48D8                           l3952 4E6C                           l4680 33B8  
                         l4672 339C                           l4664 32DC                           l4920 1A1C  
                         l4912 19BA                           l4904 199C                           l4840 1926  
                         l4832 1912                           l4824 1902                           l3874 230C  
                         l3866 22F0                           l3858 22AC                           l3794 20C6  
                         l3786 208E                           l3778 2048                           l3698 1ED4  
                         l4586 18F8                           l4738 4264                           l3962 474A  
                         l3954 4C44                           l3970 3E04                           l4770 3256  
                         l4762 31D2                           l4754 314E                           l4746 30B6  
                         l4658 420C                           l4594 4E48                           l3946 49C8  
                         l3938 4932                           l3890 3AE4                           l3882 3AA0  
                         l4690 33F2                           l4682 33BA                           l4674 339E  
                         l4666 3332                           l4930 1A5C                           l4922 1A20  
                         l4914 19CE                           l4906 19A6                           l4850 1932  
                         l4842 1928                           l4834 1916                           l4826 1906  
                         l3876 231A                           l3868 22FE                           l3796 20CA  
                         l3788 209E                           l3980 4598                           l3956 46F8  
                         l3972 3E10                           l3964 3DBC                           l4772 326E  
                         l4764 31EA                           l4756 3166                           l4748 30E4  
                         l4596 4E52                           l3892 3AF4                           l3884 3AC4  
                         l4692 340A                           l4684 33D2                           l4668 3380  
                         l4676 33A0                           l4940 1AAC                           l4932 1A7A  
                         l4924 1A28                           l4916 19D0                           l4908 19AE  
                         l4860 193C                           l4852 1934                           l4844 192A  
                         l4836 1922                           l4828 190A                           l3990 2758  
                         l3878 231C                           l3798 20D8                           l3982 45AC  
                         l3958 447A                           l3966 3DE0                           l3974 3E28  
                         l4774 3298                           l4766 3214                           l4758 3190  
                         l4598 4E54                           l3894 3B10                           l3886 3AD2  
                         l4686 33E6                           l4678 33AE                           l4694 340C  
                         l4950 1B0E                           l4942 1AC8                           l4934 1A80  
                         l4926 1A3C                           l4918 1A04                           l4870 1946  
                         l4862 193E                           l4854 1936                           l4846 192E  
                         l4838 1924                           l3992 2764                           l3984 45C4  
                         l3976 3E40                           l3968 3DF8                           l4768 322C  
                         l4776 32B0                           l3896 3B2C                           l3888 3AE0  
                         l4696 341A                           l4688 33F0                           l4960 1B5A  
                         l4952 1B16                           l4944 1AE4                           l4936 1A84  
                         l4928 1A48                           l4880 1950                           l4872 1948  
                         l4864 1940                           l4856 1938                           l4848 1930  
                         l3994 2772                           l3986 4BC8                           l3978 3E58  
                         l3898 3B82                           l4698 342A                           l4970 1BC4  
                         l4962 1B8C                           l4946 1AFE                           l4954 1B2E  
                         l4938 1A98                           l4890 196E                           l4882 1956  
                         l4874 194A                           l4866 1942                           l4858 193A  
                         l3996 2774                           l3988 4C06                           l4980 1C0A  
                         l4972 1BC8                           l4964 1B98                           l4956 1B4C  
                         l4948 1B06                           l4892 1976                           l4884 195A  
                         l4876 194C                           l4868 1944                           l3998 2784  
                         l4990 1C50                           l4982 1C0E                           l4966 1BAC  
                         l4974 1BDE                           l4958 1B54                           l4894 197C  
                         l4886 195E                           l4878 194E                           l4992 1C54  
                         l4976 1BF2                           l4984 1C24                           l4968 1BC0  
                         l4896 1980                           l4888 1966                           l4986 1C38  
                         l4994 1C6A                           l4978 1C06                           l4898 1984  
                         l4996 1C7E                           l4988 1C4C                           l4998 1C92  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 1E88                           u3001 1E84  
                         u3010 1E9A                           u3011 1E96                           u3100 1FF4  
                         u3020 1EAA                           u3101 1FEE                           u3021 1EA6  
                         u3110 1FF6                           u3030 1EEC                           u3031 1EE8  
                         u3200 2110                           u3120 201E                           u3040 1F02  
                         u4000 35CE                   _BAUD4CONbits 000EE9                           u3201 210C  
                         u3121 201A                           u3041 1EFE                           u4001 35CA  
                         u3210 2156                           u3130 203C                           u3050 1F14  
                         u4010 35DE                           u3211 2152                           u3131 2038  
                         u3051 1F10                           u4011 35DA                           u3300 2242  
                         u3220 218C                           u3140 205C                           u3060 1F24  
                         u4020 35EC                           u4100 1088                           u2500 3D3E  
                         u3301 223E                           u3221 2188                           u3141 2058  
                         u3061 1F20                           u4021 35E8                           u4101 1084  
                         u2501 3D3A                           u3310 2256                           u3230 219C  
                         u3150 206A                           u3070 1F60                           u4030 3626  
                         u4110 10A8                           u2510 3D74                           u3311 2252  
                         u3231 2198                           u3151 2066                           u3071 1F5C  
                         u4031 3622                           u4111 10A4                           u2511 3D70  
                         u3320 2270                           u3240 21C8                           u3160 207A  
                         u3080 1F6E                           u4040 3634                           u4200 14CC  
                         u4120 1158                           u2520 4420                           u3400 3B10  
                         u3321 226C                           u3241 21C4                           u3161 2076  
                         u3081 1F6A                           u4041 3630                           u4201 14C8  
                         u4121 1154                           u2521 441C                           u2601 36B6  
                         u3401 3B0C                           u3330 22AA                           u3250 21D8  
                         u3170 20AC                           u3090 1FDC                           u4210 1506  
                         u4130 11A2                           u2530 443E                           u2610 36DA  
                         u3410 3B2C                           u4050 4A16                           _T2PR 000FBC  
                         u3331 22A6                           u3251 21D4                           u3171 20A8  
                         u3091 1FD8                           u4211 1502                           u4131 119E  
                         u2531 443A                           u2611 36D6                           u3411 3B28  
                         u4051 4A12                           u3500 27FA                           u3340 22BC  
                         u3260 21F4                           u3180 20BA                           u4300 1734  
                         u4220 1548                           u4140 1380                           u2540 445A  
                         u3420 4E6C                           u2620 3704                           u2700 3A5E  
                         u3501 27F6                           u3341 22B8                           u3261 21F0  
                         u3181 20B6                           u4301 1730                           u4221 1544  
                         u4141 137C                           u4061 0E56                           u2541 4456  
                         u3421 4E68                           u2621 3700                           u2701 3A5A  
                         u3510 283A                           u3350 22CC                           u3270 2204  
                         u3190 20D8                           u4310 1766                           u4230 1592  
                         u4150 13B2                           u4070 0F50                           u3430 3E40  
                         u2630 3744                           u2550 4B44                           u2710 439A  
                         u3511 2836                           u3351 22C8                           u3271 2200  
                         u3191 20D4                           u4311 1762                           u4231 158E  
                         u4151 13AE                           u4071 0F4C                           u3431 3E3C  
                         u2631 3740                           u2551 4B40                           u2711 4396  
                         u5007 338E                           u3600 29C6                           u3520 287A  
                         u3360 22EC                           u3280 2216                           u4320 1798  
                         u4240 15C4                           u4160 13F0                           u4080 0FDE  
                         u2560 37EC                           u2800 4032                           u3440 3E58  
                         u2640 378E                           u2480 3D04                           u2720 43F0  
                         u3601 29C2                           u3521 2876                           u3361 22E8  
                         u3281 2212                           u4321 1794                           u4241 15C0  
                         u4161 13EC                           u4081 0FDA                           u2561 37E8  
                         u2801 402E                           u3441 3E54                           u2641 378A  
                         u2481 3D00                           u2721 43EC                           u5017 33C4  
                         u3610 29F4                           u3530 28F0                           u3450 2772  
                         u3370 22FE                           u3290 222C                           u4330 17CA  
                         u4250 1602                           u4170 1422                           u4090 1032  
                         u2570 38B6                           u2810 404A                           u2650 394E  
                         u2730 4BA2                           u2490 3D16                           u3611 29F0  
                         u3531 28EC                           u3451 276E                           u3371 22FA  
                         u3291 2228                           u4331 17C6                           u4251 15FE  
                         u4171 141E                           u4091 102E                           u2571 38B2  
                         u2811 4046                           u5107 4A5E                           u2651 394A  
                         u2731 4B9E                           u2491 3D12                           u5027 33FC  
                         u3620 2A0A                           u3540 2912                           u3460 2784  
                         u3700 236A                           u3380 231A                           u4340 1800  
                         u4260 1644                           u4180 1460                           u2820 3F94  
                         u2740 4D98                           u2580 365A                           u2660 3980  
                         u2900 2EA0                           u4500 3452                           u3621 2A06  
                         u3541 290E                           u3461 2780                           u3701 2366  
                         u3381 2316                           u4341 17FC                           u4261 1640  
                         u4181 145C                           u2821 3F90                           u5117 3F6E  
                         u2741 4D94                           u2581 3656                           u2661 397C  
                         u2901 2E9C                           u4501 344C                           u5037 3434  
                         u3630 2A1E                           u3550 293C                           u3470 2794  
                         u3710 23AA                           u4350 1832                           u4270 168E  
                         u4190 1492                           u2830 3FAC                           u2750 4DAE  
                         u2590 368C                           u2670 39BE                           u2910 2ECC  
                         u3390 3AC4                           u4510 3466                           u4502 3454  
                         u4430 335A                           u3631 2A1A                           u3551 2938  
                         u3471 2790                           u3711 23A6                           u4351 182E  
                         u4271 168A                           u4191 148E                           u5207 463C  
                         u5127 422E                           u2831 3FA8                           u2751 4DAA  
                         u2591 3688                           u2671 39BA                           u2911 2EC8  
                         u3391 3AC0                           u5047 3484                           u4511 3460  
                         u4431 3354                           u3640 2A38                           u3560 2960  
                         u3480 27D8                           u3800 2646                           u3720 23BC  
                         u4360 186C                           u4280 16C0                           u2760 416E  
                         u2840 40D0                           u4600 3298                           u2680 39E8  
                         u2920 2EE2                           u4520 3478                           u4512 3468  
                         u4440 336E                           u4432 335C                           u3641 2A34  
                         u3561 295C                           u3481 27D4                           u3801 2642  
                         u3721 23B8                           u4361 1868                           u4281 16BC  
                         u2761 416A                           u2841 40CC                           u5217 40AA  
                         u5137 426E                           u5057 3E1A                           u4601 3294  
                         u2681 39E4                           u2921 2EDE                           u4521 3474  
                         u4441 3368                           u3650 2A80                           u3570 2976  
                         u3490 27EA                           u3810 265C                           u3730 23CC  
                         u4370 18A6                           u4290 16FE                           u2770 4186  
                         u2850 40E8                           u4530 30B2                           u2690 3A16  
                         u2930 301C                           u4450 3380                           u4442 3370  
                         u3651 2A7C                           u3571 2972                           u3491 27E6  
                         u3811 2658                           u3731 23C8                           u4371 18A2  
                         u4291 16FA                           u2771 4182                           u5227 466A  
                         u2851 40E4                           u5147 4AAC                           u5067 4CD2  
                         u4531 30AE                           u2691 3A12                           u2931 3018  
                         u4451 337C                           u3660 2AB0                           u3580 2994  
                         u3900 3C1C                           u3820 2670                           u3740 2402  
                         u4380 18E8                           u2780 42F6                           u2860 4D2C  
                         u4540 310C                           u2940 303A                           u4460 33AE  
                         u4700 1B4C                           u3661 2AAC                           u3581 2990  
                         u3901 3C18                           u3821 266C                           u3741 23FE  
                         u4381 18E4                           u2781 42F2                           u5237 4696  
                         u2861 4D28                           u5157 400C                           u5077 455C  
                         u4541 3108                           u2941 3036                           u4461 33AA  
                         u4701 1B48                           u3670 2ADE                           u3590 29B4  
                         u3910 3C5A                           u3830 268A                           u3750 2412  
                         u2790 430E                           u4550 314E                           u4390 4D5C  
                         u2950 3054                           u2870 2E50                           u4470 33E6  
                         u4710 1BAC                           u3671 2ADA                           u3591 29B0  
                         u3911 3C56                           u3831 2686                           u3751 240E  
                         u2791 430A                           u5247 42D0                           u5167 4D02  
                         u5087 4588                           u4551 314A                           u4391 4D58  
                         u2951 3050                           u2871 2E4A                           u4471 33E2  
                         u4711 1BA8                           u3920 3C78                           u3840 26D2  
                         u3760 258C                           u3680 2348                           u4560 3190  
                         u2960 3064                           u2880 2E52                           u4480 341A  
                         u4800 1E6A                           u4720 1BF2                           u3921 3C74  
                         u3841 26CE                           u3681 2344                           u5257 4148  
                         u5177 45B6                           u5097 47B0                           u4561 318C  
                         u2961 3060                           u4481 3416                           u4801 1E66  
                         u4721 1BEE                           u3930 3C98                           u3850 2700  
                         u3770 25E6                           u3690 235A                           u4570 31D2  
                         u2970 4B70                           u2890 2E64                           u4490 3428  
                         u4730 1C38                           u3931 3C94                           u3851 26FC  
                         u3771 25E2                           u3691 2356                           u5187 45E2  
                         u4571 31CE                           u2971 4B68                           u2891 2E60  
                         u4491 3424                           u4731 1C34                           u3940 3CE8  
                         u3860 273A                           u3780 2606                           u4580 3214  
                         u4740 1C7E                           u4660 19F6                           u3941 3CE4  
                         u3861 2736                           u3781 2602                           u3765 2582  
                         u5197 4610                           u4581 3210                           u4741 1C7A  
                         u4661 19F2                           u3870 3E94                           u3790 2618  
                         u3950 34A6                           u2990 4CF6                           u4590 3256  
                         u4750 1CC4                           u4670 1A04                           u3871 3E90  
                         u3791 2614                           u3951 34A2                           u2991 4CF2  
                         u4591 3252                           u4751 1CC0                           u4671 1A00  
                         u3880 3ED2                           u3960 34B4                           u4760 1D0A  
                         u4680 1A7A                           u3881 3ECE                           u3961 34B0  
                         u4761 1D06                           u4681 1A76                           u3890 3F06  
                         u3970 3510                           u4770 1D50                           u4690 1AFE  
                         u3891 3F02                           u3971 350C                           u4771 1D4C  
                         u4691 1AFA                           u3980 3566                           u2988 4B72  
                         u4780 1D96                           u3981 3562                           u4781 1D92  
                         u3990 35B0                           u4790 1DC0                           u3991 35AC  
                         u4791 1DBC                           u4947 19DA                           u4957 1A0E  
                         u4967 1AB6                           u4977 1B20                           u4987 32C8  
                         u4997 333C                  _LightBlueMove 474A                           abs@a 0013  
                         _dbuf 0194                           _main 1902                           _dtoa 2E20  
                         _prec 015E                           _vals 01C9                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4292  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4932                __end_of_HighISR 000E  
       __end_of_color_read_lum 48E2                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 4C82                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 4A20  
              _RunOneBlockTime 01D3                __end_of___aodiv 37D0                __end_of___fladd 232E  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3AA0  
              __end_of___fldiv 2AF2                __end_of___flmul 2758                __end_of___flsub 4B02  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 447A  
                        i2l277 000A                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 32BC        __end_of_sendCharSerial4 4E72  
   __end_of_I2C_2_Master_Start 4E9C     __end_of_I2C_2_Master_Write 4E7E                   YellowMove@mL 0020  
                        _flags 00F2                   YellowMove@mR 0022                          _fputc 3CF2  
                        _fputs 4B02                 delayed_ms@time 0001                          pad@fp 0011  
                        _power 01D5                          _width 015C                          _putch 4EA6  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                 main@run_flag 00E8                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 46F8        __end_of_color_read_Blue 49D2          _I2C_2_Master_RepStart 4E7E  
             __end_of_BlueMove 44E0                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 4310  
      __end_of_turnCalibration 3494                _reverseOneBlock 4598                   __end_of_main 1E6E  
                 __end_of_dtoa 309C                   __end_of_stop 4310                _colour_rel$3047 003A  
              _colour_rel$3048 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 4C06               __end_of_PinkMove 4892                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 47EE  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 46F8  
             __end_of___xxtofl 3648                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3BEE                         ___fleq 3E66                  main@temp_1304 00E6  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4DD6              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 4354                         clear_1 4360  
                       clear_2 436C                         _motorL 00F3                         _motorR 01C0  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4A20  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 404C                     ___flge@ff1 0001  
                   _YellowMove 47EE                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 437A        __end_of_reverseOneBlock 45F2  
     __end_of_color_read_Green 4982         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4EA8                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 404C                   __pidataBANK0 4EA2  
                 __pidataBANK1 4E9C                  __end_of_fputc 3DBC                  __end_of_fputs 4B46  
                __end_of_putch 4EA8              __end_of_GreenMove 4CC0            __end_of_Timer0_init 4E3C  
          __end_of_ReversePink 4C44                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0150          __end_of_reverseDetect 464C  
                      ??_putch 0001                     __pbssBANK0 00F0                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 464C                     _getTMR0val 4DB0  
            __end_of_RetryMove 4292                      ?_PinkMove 0020              _color_writetoaddr 4DFC  
                   _delayed_ms 4CC0                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 001A  
            __end_of_TurnDelay 4D2E          __end_of_timed_forward 3E66            ??_color_writetoaddr 0004  
                colour_rel@rel 0034                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2AF2        __end_of_Interrupts_init 4EAA  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 00EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 4E1C                        _RedMove 4C44             _I2C_2_Master_Start 4E92  
                   ??_PinkMove 0024                     _initUSART4 4E3C             _I2C_2_Master_Write 4E72  
                      __Hparam 0000                        _WayBack 0162                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4E1C                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4C06                        ___aodiv 3648  
                      ___fladd 1E6E                        ___aomod 393C                        ___fldiv 2758  
                      ___flmul 232E                        ___flsub 4ABC            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 4406            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 4310                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 309C                        __ptext0 1902                        __ptext1 32BC  
                      __ptext2 46A6                        __ptext3 49D2                        __ptext4 3AA0  
                      __ptext5 2E20                        __ptext6 438C                        __ptext7 4B02  
                      __ptext8 3CF2                        __ptext9 4EA6                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005E  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 46A6  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 437A  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F0  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BEE                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00FC                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 4188                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3FAE                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 002C                    ___fldiv@rem 0025               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032  
             ?_Interrupts_init 0001                    ___flmul@grs 003F                    _CCP1CONbits 000FAB  
                   main@colour 00EC                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 4A6E                 __end_of___flge 3CF2                 __end_of___fleq 3F10  
               _fullSpeedAhead 40EA                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F                 __end_of___wmul 4DFC       __end_of_Forwardhalfblock 46A6  
                    _GreenMove 4C82            start_initialization 4310                    __end_of_abs 4BC8  
                  __end_of_pad 4406                  _TxBufWriteCnt 005C          __end_of_LightBlueMove 479C  
                 ??_OrangeMove 0024            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4210  
                  vfprintf@fmt 0053         __end_of_fullSpeedAhead 4188                       ??___flge 0009  
                     ??___fleq 0021                      _RetryMove 4210                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                    __pdataBANK0 00FC  
                  __pdataBANK1 01D1                _ForwardOneBlock 453E                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4BC8                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 474A                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                      _TurnDelay 4CF8                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2723 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$3049 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 4840           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 453E              _I2C_2_Master_Idle 4D88  
            _I2C_2_Master_Init 4D5E              _I2C_2_Master_Read 4B46              _I2C_2_Master_Stop 4E88  
                _low_threshold 0160                     ?_TurnDelay 0001                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060               getTMR0val@moving 0001  
               colour_rel@vals 0032              _sendStringSerial4 4D2E            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 4598                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3AA0  
    __end_of_I2C_2_Master_Idle 4DB0      __end_of_I2C_2_Master_Init 4D88      __end_of_I2C_2_Master_Read 4B88  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4E92                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4DD6                   _TxBufReadCnt 005B  
                     _BlueMove 447A                      _turnRight 3F10             __end_of_delayed_ms 4CF8  
            ??_turnCalibration 0024                      copy_data0 4324      __end_of_sendStringSerial4 4D5E  
                 ??_colour_rel 0036                  _reverseDetect 45F2  __end_of_I2C_2_Master_RepStart 4E88  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 393C                   ??_initUSART4 0001  
                     _PinkMove 4840                       __Hrparam 0000         __end_of_Colour_decider 1902  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
        __end_of_fullSpeedBack 40EA                   __Lsmallconst 0E00                    ??_RetryMove 001E  
         TurnDelay@Turn45Delay 0001                    _readColours 44E0                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 003F                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 2E20                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                _timed_forward 3DBC                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 3494                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4E5A                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4B88                       __ptext11 393C  
                     __ptext20 4E7E                       __ptext12 3648                       __ptext21 4B46  
                     __ptext13 4D2E                       __ptext30 4C44                       __ptext22 4E3C  
                     __ptext14 4E5A                       __ptext31 46F8                       __ptext23 4188  
                     __ptext15 44E0                       __ptext40 4E88                       __ptext32 474A  
                     __ptext24 309C                       __ptext16 4892                       __ptext41 4E92  
                     __ptext33 4C82                       __ptext25 3DBC                       __ptext17 48E2  
                     __ptext50 4A6E                       __ptext42 4D88                       __ptext34 447A  
                     __ptext26 4CC0                       __ptext18 4932                       __ptext51 3FAE  
                     __ptext43 4D5E                       __ptext35 4DB0                       __ptext27 4BC8  
                     __ptext19 4982                       __ptext60 37D0                       __ptext52 4CF8  
                     __ptext44 47EE                       __ptext36 2AF2                       __ptext28 4C06  
                     __ptext61 4DD6                       __ptext53 4598                       __ptext45 4A20  
                     __ptext37 479C                       __ptext29 453E                       __ptext70 2758  
                     __ptext62 4406                       __ptext54 45F2                       __ptext46 3F10  
                     __ptext38 4DFC                       __ptext63 0E26                       __ptext55 404C  
                     __ptext47 4E1C                       __ptext39 4E72                       __ptext64 3494  
                     __ptext56 4EA8                       __ptext48 4210                       __ptext65 4ABC  
                     __ptext57 464C                       __ptext49 4840                       __ptext66 1E6E  
                     __ptext58 4292                       __ptext67 232E                       __ptext59 40EA  
                     __ptext68 3BEE                       __ptext69 3E66                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 49D2                  ??_turnRight45 001E  
                     main@temp 00E4                       _turnLeft 3FAE               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 00EE                    _setMotorPWM 37D0                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 006C  
               _high_threshold 01D1               ??_fullSpeedAhead 0018                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 479C  
                     sprintf@f 006E                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 4A6E                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 4ABC  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 4E5A  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
